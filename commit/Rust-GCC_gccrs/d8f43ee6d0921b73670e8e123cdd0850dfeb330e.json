{"sha": "d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhmNDNlZTZkMDkyMWI3MzY3MGU4ZTEyM2NkZDA4NTBkZmViMzMwZQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2017-01-13T10:19:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:19:19Z"}, "message": "sem_aggr.adb, [...]: Update all eligible case statements to reflect the new style for case alternatives.\n\n2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_aggr.adb, par_sco.adb, s-osprim-mingw.adb, exp_ch5.adb,\n\texp_prag.adb, sem_ch3.adb, xr_tabls.adb, lib-xref-spark_specific.adb,\n\tlayout.adb, sem_dist.adb, exp_spark.adb, exp_ch7.adb, gnatcmd.adb,\n\texp_util.adb, prj-proc.adb, sem_aux.adb, comperr.adb, g-memdum.adb,\n\texp_attr.adb, s-intman-solaris.adb, exp_ch9.adb, make.adb, live.adb,\n\tg-sercom-linux.adb, sem_dim.adb, mlib-prj.adb, s-intman-posix.adb,\n\tsem_ch9.adb, sem_ch10.adb, prep.adb, einfo.adb, scng.adb, checks.adb,\n\tprj-strt.adb, sem_prag.adb, eval_fat.adb, sem_ch12.adb, sem.adb,\n\ta-numaux-x86.adb, a-stwifi.adb, i-cobol.adb, prj.adb,\n\tget_spark_xrefs.adb, s-tasini.adb, rtsfind.adb, freeze.adb,\n\tg-arrspl.adb, par-ch4.adb, sem_util.adb, sem_res.adb, expander.adb,\n\tsem_attr.adb, exp_dbug.adb, prj-pp.adb, a-stzfix.adb, s-interr.adb,\n\ts-wchcnv.adb, switch-m.adb, gnat1drv.adb, sinput-l.adb, stylesw.adb,\n\tcontracts.adb, s-intman-android.adb, g-expect.adb, exp_ch4.adb,\n\tg-comlin.adb, errout.adb, sinput.adb, s-exctra.adb, repinfo.adb,\n\tg-spipat.adb, g-debpoo.adb, exp_ch6.adb, sem_ch4.adb, exp_ch13.adb,\n\ta-wtedit.adb, validsw.adb, pprint.adb, widechar.adb, makeutl.adb,\n\tali.adb, set_targ.adb, sem_mech.adb, sem_ch6.adb, gnatdll.adb,\n\tget_scos.adb, g-pehage.adb, s-tratas-default.adb, gnatbind.adb,\n\tprj-dect.adb, g-socthi-mingw.adb, par-prag.adb, prj-nmsc.adb,\n\texp_disp.adb, par-ch12.adb, binde.adb, sem_ch8.adb,\n\ts-tfsetr-default.adb, s-regexp.adb, gprep.adb, s-tpobop.adb,\n\ta-teioed.adb, sem_warn.adb, sem_eval.adb, g-awk.adb, s-io.adb,\n\ta-ztedit.adb, xoscons.adb, exp_intr.adb, sem_cat.adb, sprint.adb,\n\tg-socket.adb, exp_dist.adb, sem_ch13.adb, s-tfsetr-vxworks.adb,\n\tpar-ch3.adb, treepr.adb, g-forstr.adb, g-catiio.adb, par-ch5.adb,\n\tuname.adb, osint.adb, exp_ch3.adb, prj-env.adb, a-strfix.adb,\n\ta-stzsup.adb, prj-tree.adb, s-fileio.adb: Update all eligible case\n\tstatements to reflect the new style for case alternatives. Various\n\tcode clean up and reformatting.\n\nFrom-SVN: r244406", "tree": {"sha": "f478a14a0fa94b8594e529f0aa178c5afedad3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f478a14a0fa94b8594e529f0aa178c5afedad3df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4bf622fbf9018b4ffbb743fef37c7af0fa419c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bf622fbf9018b4ffbb743fef37c7af0fa419c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bf622fbf9018b4ffbb743fef37c7af0fa419c6"}], "stats": {"total": 9645, "additions": 5112, "deletions": 4533}, "files": [{"sha": "8cac665e080b562dcf26e821f41ca8b4a42b7165", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1,3 +1,36 @@\n+2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_aggr.adb, par_sco.adb, s-osprim-mingw.adb, exp_ch5.adb,\n+\texp_prag.adb, sem_ch3.adb, xr_tabls.adb, lib-xref-spark_specific.adb,\n+\tlayout.adb, sem_dist.adb, exp_spark.adb, exp_ch7.adb, gnatcmd.adb,\n+\texp_util.adb, prj-proc.adb, sem_aux.adb, comperr.adb, g-memdum.adb,\n+\texp_attr.adb, s-intman-solaris.adb, exp_ch9.adb, make.adb, live.adb,\n+\tg-sercom-linux.adb, sem_dim.adb, mlib-prj.adb, s-intman-posix.adb,\n+\tsem_ch9.adb, sem_ch10.adb, prep.adb, einfo.adb, scng.adb, checks.adb,\n+\tprj-strt.adb, sem_prag.adb, eval_fat.adb, sem_ch12.adb, sem.adb,\n+\ta-numaux-x86.adb, a-stwifi.adb, i-cobol.adb, prj.adb,\n+\tget_spark_xrefs.adb, s-tasini.adb, rtsfind.adb, freeze.adb,\n+\tg-arrspl.adb, par-ch4.adb, sem_util.adb, sem_res.adb, expander.adb,\n+\tsem_attr.adb, exp_dbug.adb, prj-pp.adb, a-stzfix.adb, s-interr.adb,\n+\ts-wchcnv.adb, switch-m.adb, gnat1drv.adb, sinput-l.adb, stylesw.adb,\n+\tcontracts.adb, s-intman-android.adb, g-expect.adb, exp_ch4.adb,\n+\tg-comlin.adb, errout.adb, sinput.adb, s-exctra.adb, repinfo.adb,\n+\tg-spipat.adb, g-debpoo.adb, exp_ch6.adb, sem_ch4.adb, exp_ch13.adb,\n+\ta-wtedit.adb, validsw.adb, pprint.adb, widechar.adb, makeutl.adb,\n+\tali.adb, set_targ.adb, sem_mech.adb, sem_ch6.adb, gnatdll.adb,\n+\tget_scos.adb, g-pehage.adb, s-tratas-default.adb, gnatbind.adb,\n+\tprj-dect.adb, g-socthi-mingw.adb, par-prag.adb, prj-nmsc.adb,\n+\texp_disp.adb, par-ch12.adb, binde.adb, sem_ch8.adb,\n+\ts-tfsetr-default.adb, s-regexp.adb, gprep.adb, s-tpobop.adb,\n+\ta-teioed.adb, sem_warn.adb, sem_eval.adb, g-awk.adb, s-io.adb,\n+\ta-ztedit.adb, xoscons.adb, exp_intr.adb, sem_cat.adb, sprint.adb,\n+\tg-socket.adb, exp_dist.adb, sem_ch13.adb, s-tfsetr-vxworks.adb,\n+\tpar-ch3.adb, treepr.adb, g-forstr.adb, g-catiio.adb, par-ch5.adb,\n+\tuname.adb, osint.adb, exp_ch3.adb, prj-env.adb, a-strfix.adb,\n+\ta-stzsup.adb, prj-tree.adb, s-fileio.adb: Update all eligible case\n+\tstatements to reflect the new style for case alternatives. Various\n+\tcode clean up and reformatting.\n+\n 2017-01-13  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_util.adb: Minor reformatting."}, {"sha": "6f1f4624b6067640ea5eea405f6b7bf83b4fcfb4", "filename": "gcc/ada/a-numaux-x86.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-numaux-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-numaux-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-x86.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                        (Machine Version for x86)                         --\n --                                                                          --\n---          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -263,14 +263,17 @@ package body Ada.Numerics.Aux is\n                Asm (Template  => \"fcos\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", Reduced_X));\n+\n             when 1 =>\n                Asm (Template  => \"fsin\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", -Reduced_X));\n+\n             when 2 =>\n                Asm (Template  => \"fcos ; fchs\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", Reduced_X));\n+\n             when 3 =>\n                Asm (Template  => \"fsin\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n@@ -448,14 +451,17 @@ package body Ada.Numerics.Aux is\n                Asm (Template  => \"fsin\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", Reduced_X));\n+\n             when 1 =>\n                Asm (Template  => \"fcos\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", Reduced_X));\n+\n             when 2 =>\n                Asm (Template  => \"fsin\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),\n                   Inputs   => Double'Asm_Input  (\"0\", -Reduced_X));\n+\n             when 3 =>\n                Asm (Template  => \"fcos ; fchs\",\n                   Outputs  => Double'Asm_Output (\"=t\", Result),"}, {"sha": "2f140d8aa4ade839df652dc9176ed46563b5a0a5", "filename": "gcc/ada/a-strfix.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-strfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-strfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -349,7 +349,6 @@ package body Ada.Strings.Fixed is\n          Target := Source;\n \n       elsif Slength > Tlength then\n-\n          case Drop is\n             when Left =>\n                Target := Source (Slast - Tlength + 1 .. Slast);\n@@ -377,7 +376,6 @@ package body Ada.Strings.Fixed is\n                   when Center =>\n                      raise Length_Error;\n                end case;\n-\n          end case;\n \n       --  Source'Length < Target'Length"}, {"sha": "c586791100bd6b4f34e271afb6a2f1cbac50199e", "filename": "gcc/ada/a-stwifi.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stwifi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stwifi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwifi.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -327,7 +327,6 @@ package body Ada.Strings.Wide_Fixed is\n          Target := Source;\n \n       elsif Slength > Tlength then\n-\n          case Drop is\n             when Left =>\n                Target := Source (Slast - Tlength + 1 .. Slast);\n@@ -355,7 +354,6 @@ package body Ada.Strings.Wide_Fixed is\n                   when Center =>\n                      raise Length_Error;\n                end case;\n-\n          end case;\n \n       --  Source'Length < Target'Length"}, {"sha": "b0087831d94650d7f6b2a7a5ee14d2a5dda568d0", "filename": "gcc/ada/a-stzfix.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stzfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stzfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzfix.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -329,7 +329,6 @@ package body Ada.Strings.Wide_Wide_Fixed is\n          Target := Source;\n \n       elsif Slength > Tlength then\n-\n          case Drop is\n             when Left =>\n                Target := Source (Slast - Tlength + 1 .. Slast);"}, {"sha": "acd003591ee413b80e6cd064ead3cc3e6ea7afd8", "filename": "gcc/ada/a-stzsup.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stzsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-stzsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsup.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -529,7 +529,6 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n                raise Ada.Strings.Length_Error;\n          end case;\n       end if;\n-\n    end Super_Append;\n \n    --  Case of Wide_Wide_String and Super_String"}, {"sha": "3c3e874f0d3f445cc931f9af2e34b39dbc1a2d9d", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 13, "deletions": 63, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,7 +69,6 @@ package body Ada.Text_IO.Editing is\n \n       loop\n          case Picture (Picture_Index) is\n-\n             when '(' =>\n                Int_IO.Get\n                  (Picture (Picture_Index + 1 .. Picture'Last), Count, Last);\n@@ -107,7 +106,6 @@ package body Ada.Text_IO.Editing is\n                Result (Result_Index) := Picture (Picture_Index);\n                Picture_Index := Picture_Index + 1;\n                Result_Index := Result_Index + 1;\n-\n          end case;\n \n          exit when Picture_Index > Picture'Last;\n@@ -219,7 +217,6 @@ package body Ada.Text_IO.Editing is\n          exit when Answer (Last) = '9';\n \n          case Answer (Last) is\n-\n             when '_' =>\n                Answer (Last) := Separator_Character;\n \n@@ -228,7 +225,6 @@ package body Ada.Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n \n          exit when Last = Answer'Last;\n@@ -248,7 +244,6 @@ package body Ada.Text_IO.Editing is\n          end if;\n \n          case Answer (J) is\n-\n             when '_' =>\n                Answer (J) := Separator_Character;\n \n@@ -260,7 +255,6 @@ package body Ada.Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n       end loop;\n \n@@ -442,7 +436,6 @@ package body Ada.Text_IO.Editing is\n \n          for J in reverse Pic.Start_Float .. Position loop\n             case Answer (J) is\n-\n                when '*' =>\n                   Answer (J) := Fill_Character;\n \n@@ -472,9 +465,7 @@ package body Ada.Text_IO.Editing is\n                   end if;\n \n                when '_' =>\n-\n                   case Pic.Floater is\n-\n                      when '*' =>\n                         Answer (J) := Fill_Character;\n \n@@ -492,12 +483,10 @@ package body Ada.Text_IO.Editing is\n \n                      when others =>\n                         null;\n-\n                   end case;\n \n                when others =>\n                   null;\n-\n             end case;\n          end loop;\n \n@@ -528,13 +517,11 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n \n          else --  positive\n \n             case Answer (Sign_Position) is\n-\n                when '-' =>\n                   Answer (Sign_Position) := ' ';\n \n@@ -547,7 +534,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end if;\n       end if;\n@@ -580,7 +566,6 @@ package body Ada.Text_IO.Editing is\n \n                elsif Answer (J) = '_' then\n                   Answer (J) := Separator_Character;\n-\n                end if;\n \n                Last := J + 1;\n@@ -668,7 +653,6 @@ package body Ada.Text_IO.Editing is\n                Currency_Pos := Currency_Pos + 1;\n \n                case Pic.Floater is\n-\n                   when '*' =>\n                      Answer (J) := Fill_Character;\n \n@@ -685,12 +669,10 @@ package body Ada.Text_IO.Editing is\n \n                   when others =>\n                      null;\n-\n                end case;\n \n             when others =>\n                exit;\n-\n          end case;\n       end loop;\n \n@@ -855,7 +837,6 @@ package body Ada.Text_IO.Editing is\n    begin\n       for J in Str'Range loop\n          case Str (J) is\n-\n             when ' ' =>\n                null; --  ignore\n \n@@ -1094,7 +1075,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1181,7 +1161,6 @@ package body Ada.Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '-' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1197,7 +1176,6 @@ package body Ada.Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1264,7 +1242,6 @@ package body Ada.Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '+' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1280,7 +1257,6 @@ package body Ada.Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1292,7 +1268,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Floating_Plus;\n@@ -1308,14 +1283,15 @@ package body Ada.Text_IO.Editing is\n          end if;\n \n          case Pic.Picture.Expanded (Index) is\n-\n-            when '_' | '0' | '/' => return True;\n+            when '_' | '0' | '/' =>\n+               return True;\n \n             when 'B' | 'b' =>\n                Pic.Picture.Expanded (Index) := 'b'; --  canonical\n                return True;\n \n-            when others => return False;\n+            when others =>\n+               return False;\n          end case;\n       end Is_Insert;\n \n@@ -1362,7 +1338,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1438,7 +1413,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Leading_Dollar;\n@@ -1499,7 +1473,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Inserts := True;\n@@ -1605,7 +1578,6 @@ package body Ada.Text_IO.Editing is\n          Debug_Start (\"Number\");\n \n          loop\n-\n             case Look is\n                when '_' | '0' | '/' =>\n                   Skip;\n@@ -1628,7 +1600,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n \n             if At_End then\n@@ -1650,7 +1621,6 @@ package body Ada.Text_IO.Editing is\n \n          while not At_End loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1725,8 +1695,8 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n@@ -1837,7 +1807,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1856,7 +1825,6 @@ package body Ada.Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1872,14 +1840,12 @@ package body Ada.Text_IO.Editing is\n \n                         when others =>\n                            return;\n-\n                      end case;\n                   end loop;\n \n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Pound;\n@@ -1898,7 +1864,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1918,7 +1883,6 @@ package body Ada.Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1941,7 +1905,6 @@ package body Ada.Text_IO.Editing is\n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Star_Fill;\n@@ -1960,7 +1923,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1981,7 +1943,6 @@ package body Ada.Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -2022,7 +1983,6 @@ package body Ada.Text_IO.Editing is\n          end if;\n \n          case Look is\n-\n             when '+' | '-' =>\n                Pic.Sign_Position := Index;\n                Skip;\n@@ -2071,7 +2031,6 @@ package body Ada.Text_IO.Editing is\n \n             when others =>\n                return;\n-\n          end case;\n       end Optional_RHS_Sign;\n \n@@ -2094,7 +2053,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -2125,7 +2083,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture;\n@@ -2153,7 +2110,6 @@ package body Ada.Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2197,7 +2153,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end loop;\n       end Picture_Bracket;\n@@ -2225,7 +2180,6 @@ package body Ada.Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2283,7 +2237,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Minus;\n@@ -2310,7 +2263,6 @@ package body Ada.Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2377,7 +2329,6 @@ package body Ada.Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Plus;\n@@ -2395,7 +2346,6 @@ package body Ada.Text_IO.Editing is\n          end loop;\n \n          case Look is\n-\n             when '$' | '#' =>\n                Picture;\n                Optional_RHS_Sign;\n@@ -2427,7 +2377,6 @@ package body Ada.Text_IO.Editing is\n \n             when others =>\n                raise Picture_Error;\n-\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n@@ -2444,7 +2393,6 @@ package body Ada.Text_IO.Editing is\n          if not At_End then\n             Set_State (Reject);\n          end if;\n-\n       end Picture_String;\n \n       ---------------\n@@ -2509,7 +2457,6 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2546,7 +2493,8 @@ package body Ada.Text_IO.Editing is\n                   Set_State (Okay);\n                   return;\n \n-               when others => raise Picture_Error;\n+               when others =>\n+                  raise Picture_Error;\n             end case;\n          end loop;\n       end Star_Suppression;\n@@ -2601,13 +2549,15 @@ package body Ada.Text_IO.Editing is\n             end if;\n \n             case Look is\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n                   Skip;\n \n-               when others => return;\n+               when others =>\n+                  return;\n             end case;\n          end loop;\n       end Trailing_Currency;"}, {"sha": "32d62b970874e14549ca6fca29e321f8caa15b2f", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 14, "deletions": 65, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -210,7 +210,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n       loop\n          case Picture (Picture_Index) is\n-\n             when '(' =>\n \n                --  We now need to scan out the count after a left paren. In\n@@ -275,7 +274,6 @@ package body Ada.Wide_Text_IO.Editing is\n                Result (Result_Index) := Picture (Picture_Index);\n                Picture_Index := Picture_Index + 1;\n                Result_Index := Result_Index + 1;\n-\n          end case;\n \n          exit when Picture_Index > Picture'Last;\n@@ -390,7 +388,6 @@ package body Ada.Wide_Text_IO.Editing is\n          exit when Answer (Last) = '9';\n \n          case Answer (Last) is\n-\n             when '_' =>\n                Answer (Last) := Separator_Character;\n \n@@ -399,7 +396,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n \n          exit when Last = Answer'Last;\n@@ -419,7 +415,6 @@ package body Ada.Wide_Text_IO.Editing is\n          end if;\n \n          case Answer (J) is\n-\n             when '_' =>\n                Answer (J) := Separator_Character;\n \n@@ -431,7 +426,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n       end loop;\n \n@@ -613,7 +607,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n          for J in reverse Pic.Start_Float .. Position loop\n             case Answer (J) is\n-\n                when '*' =>\n                   Answer (J) := Fill_Character;\n \n@@ -635,9 +628,7 @@ package body Ada.Wide_Text_IO.Editing is\n                   end if;\n \n                when '_' =>\n-\n                   case Pic.Floater is\n-\n                      when '*' =>\n                         Answer (J) := Fill_Character;\n \n@@ -655,12 +646,10 @@ package body Ada.Wide_Text_IO.Editing is\n \n                      when others =>\n                         null;\n-\n                   end case;\n \n                when others =>\n                   null;\n-\n             end case;\n          end loop;\n \n@@ -691,13 +680,11 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n \n          else --  positive\n \n             case Answer (Sign_Position) is\n-\n                when '-' =>\n                   Answer (Sign_Position) := ' ';\n \n@@ -710,7 +697,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end if;\n       end if;\n@@ -724,7 +710,6 @@ package body Ada.Wide_Text_IO.Editing is\n             Last     := Pic.Radix_Position + 1;\n \n             for J in Last .. Answer'Last loop\n-\n                if Answer (J) = '9' or else Answer (J) = Pic.Floater then\n                   Answer (J) := To_Wide (Rounded (Position));\n \n@@ -821,7 +806,6 @@ package body Ada.Wide_Text_IO.Editing is\n                end if;\n \n             when '_' =>\n-\n                case Pic.Floater is\n \n                   when '*' =>\n@@ -840,12 +824,10 @@ package body Ada.Wide_Text_IO.Editing is\n \n                   when others =>\n                      null;\n-\n                end case;\n \n             when others =>\n                exit;\n-\n          end case;\n       end loop;\n \n@@ -1013,7 +995,6 @@ package body Ada.Wide_Text_IO.Editing is\n    begin\n       for J in Str'Range loop\n          case Str (J) is\n-\n             when ' ' =>\n                null; --  ignore\n \n@@ -1188,7 +1169,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1219,7 +1199,7 @@ package body Ada.Wide_Text_IO.Editing is\n                   return;\n \n                when others =>\n-               return;\n+                  return;\n             end case;\n          end loop;\n       end Floating_Bracket;\n@@ -1273,7 +1253,6 @@ package body Ada.Wide_Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '-' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1289,7 +1268,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1354,7 +1332,6 @@ package body Ada.Wide_Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '+' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1370,7 +1347,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1382,7 +1358,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Floating_Plus;\n@@ -1398,14 +1373,15 @@ package body Ada.Wide_Text_IO.Editing is\n          end if;\n \n          case Pic.Picture.Expanded (Index) is\n-\n-            when '_' | '0' | '/' => return True;\n+            when '_' | '0' | '/' =>\n+               return True;\n \n             when 'B' | 'b' =>\n                Pic.Picture.Expanded (Index) := 'b'; --  canonical\n                return True;\n \n-            when others => return False;\n+            when others =>\n+               return False;\n          end case;\n       end Is_Insert;\n \n@@ -1441,7 +1417,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1513,7 +1488,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Leading_Dollar;\n@@ -1565,7 +1539,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Inserts := True;\n@@ -1666,7 +1639,6 @@ package body Ada.Wide_Text_IO.Editing is\n       procedure Number is\n       begin\n          loop\n-\n             case Look is\n                when '_' | '0' | '/' =>\n                   Skip;\n@@ -1689,7 +1661,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n \n             if At_End then\n@@ -1709,7 +1680,6 @@ package body Ada.Wide_Text_IO.Editing is\n       begin\n          while not At_End loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1780,8 +1750,8 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n@@ -1890,7 +1860,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1909,7 +1878,6 @@ package body Ada.Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1925,14 +1893,12 @@ package body Ada.Wide_Text_IO.Editing is\n \n                         when others =>\n                            return;\n-\n                      end case;\n                   end loop;\n \n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Pound;\n@@ -1949,7 +1915,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1969,7 +1934,6 @@ package body Ada.Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1992,7 +1956,6 @@ package body Ada.Wide_Text_IO.Editing is\n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Star_Fill;\n@@ -2009,7 +1972,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -2030,7 +1992,6 @@ package body Ada.Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -2069,7 +2030,6 @@ package body Ada.Wide_Text_IO.Editing is\n          end if;\n \n          case Look is\n-\n             when '+' | '-' =>\n                Pic.Sign_Position := Index;\n                Skip;\n@@ -2118,7 +2078,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n             when others =>\n                return;\n-\n          end case;\n       end Optional_RHS_Sign;\n \n@@ -2139,7 +2098,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -2170,7 +2128,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture;\n@@ -2197,7 +2154,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2241,7 +2197,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end loop;\n       end Picture_Bracket;\n@@ -2267,7 +2222,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2325,7 +2279,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Minus;\n@@ -2351,7 +2304,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2413,7 +2365,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Plus;\n@@ -2429,7 +2380,6 @@ package body Ada.Wide_Text_IO.Editing is\n          end loop;\n \n          case Look is\n-\n             when '$' | '#' =>\n                Picture;\n                Optional_RHS_Sign;\n@@ -2461,7 +2411,6 @@ package body Ada.Wide_Text_IO.Editing is\n \n             when others =>\n                raise Picture_Error;\n-\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n@@ -2478,7 +2427,6 @@ package body Ada.Wide_Text_IO.Editing is\n          if not At_End then\n             Set_State (Reject);\n          end if;\n-\n       end Picture_String;\n \n       ---------------\n@@ -2522,7 +2470,6 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2553,7 +2500,8 @@ package body Ada.Wide_Text_IO.Editing is\n                   Set_State (Okay);\n                   return;\n \n-               when others => raise Picture_Error;\n+               when others =>\n+                  raise Picture_Error;\n             end case;\n          end loop;\n       end Star_Suppression;\n@@ -2604,13 +2552,15 @@ package body Ada.Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n                   Skip;\n \n-               when others => return;\n+               when others =>\n+                  return;\n             end case;\n          end loop;\n       end Trailing_Currency;\n@@ -2693,7 +2643,6 @@ package body Ada.Wide_Text_IO.Editing is\n       --  To deal with special cases like null strings\n \n       raise Picture_Error;\n-\n    end Precalculate;\n \n    ----------------"}, {"sha": "bc759e05bb4d3630641e06aa70b6e81a21bcb396", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 14, "deletions": 69, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -211,7 +211,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n       loop\n          case Picture (Picture_Index) is\n-\n             when '(' =>\n \n                --  We now need to scan out the count after a left paren. In\n@@ -276,7 +275,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                Result (Result_Index) := Picture (Picture_Index);\n                Picture_Index := Picture_Index + 1;\n                Result_Index := Result_Index + 1;\n-\n          end case;\n \n          exit when Picture_Index > Picture'Last;\n@@ -391,7 +389,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          exit when Answer (Last) = '9';\n \n          case Answer (Last) is\n-\n             when '_' =>\n                Answer (Last) := Separator_Character;\n \n@@ -400,7 +397,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n \n          exit when Last = Answer'Last;\n@@ -420,7 +416,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end if;\n \n          case Answer (J) is\n-\n             when '_' =>\n                Answer (J) := Separator_Character;\n \n@@ -432,7 +427,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             when others =>\n                null;\n-\n          end case;\n       end loop;\n \n@@ -614,7 +608,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n          for J in reverse Pic.Start_Float .. Position loop\n             case Answer (J) is\n-\n                when '*' =>\n                   Answer (J) := Fill_Character;\n \n@@ -636,9 +629,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                   end if;\n \n                when '_' =>\n-\n                   case Pic.Floater is\n-\n                      when '*' =>\n                         Answer (J) := Fill_Character;\n \n@@ -656,12 +647,10 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                      when others =>\n                         null;\n-\n                   end case;\n \n                when others =>\n                   null;\n-\n             end case;\n          end loop;\n \n@@ -692,13 +681,11 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n \n          else --  positive\n \n             case Answer (Sign_Position) is\n-\n                when '-' =>\n                   Answer (Sign_Position) := ' ';\n \n@@ -711,21 +698,18 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end if;\n       end if;\n \n       --  Fill in trailing digits\n \n       if Pic.Max_Trailing_Digits > 0 then\n-\n          if Attrs.Has_Fraction then\n             Position := Attrs.Start_Of_Fraction;\n             Last     := Pic.Radix_Position + 1;\n \n             for J in Last .. Answer'Last loop\n-\n                if Answer (J) = '9' or else Answer (J) = Pic.Floater then\n                   Answer (J) := To_Wide (Rounded (Position));\n \n@@ -745,7 +729,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                elsif Answer (J) = '_' then\n                   Answer (J) := Separator_Character;\n-\n                end if;\n \n                Last := J + 1;\n@@ -773,7 +756,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             elsif Answer (J) = 'b' then\n                Answer (J) := ' ';\n-\n             end if;\n          end loop;\n \n@@ -822,9 +804,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                end if;\n \n             when '_' =>\n-\n                case Pic.Floater is\n-\n                   when '*' =>\n                      Answer (J) := Fill_Character;\n \n@@ -841,12 +821,10 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                   when others =>\n                      null;\n-\n                end case;\n \n             when others =>\n                exit;\n-\n          end case;\n       end loop;\n \n@@ -931,7 +909,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       --  9) No radix, no currency expansion\n \n       if Pic.Radix_Position /= Invalid_Position then\n-\n          if Answer (Pic.Radix_Position) = '.' then\n             Answer (Pic.Radix_Position) := Radix_Point;\n \n@@ -1014,7 +991,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n    begin\n       for J in Str'Range loop\n          case Str (J) is\n-\n             when ' ' =>\n                null; --  ignore\n \n@@ -1189,7 +1165,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1220,7 +1195,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                   return;\n \n                when others =>\n-               return;\n+                  return;\n             end case;\n          end loop;\n       end Floating_Bracket;\n@@ -1274,7 +1249,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '-' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1290,7 +1264,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1355,7 +1328,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                         end if;\n \n                         case Look is\n-\n                            when '+' =>\n                               Pic.Max_Trailing_Digits :=\n                                 Pic.Max_Trailing_Digits + 1;\n@@ -1371,7 +1343,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                            when others =>\n                               return;\n-\n                         end case;\n                      end loop;\n \n@@ -1383,7 +1354,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Floating_Plus;\n@@ -1399,14 +1369,15 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end if;\n \n          case Pic.Picture.Expanded (Index) is\n-\n-            when '_' | '0' | '/' => return True;\n+            when '_' | '0' | '/' =>\n+               return True;\n \n             when 'B' | 'b' =>\n                Pic.Picture.Expanded (Index) := 'b'; --  canonical\n                return True;\n \n-            when others => return False;\n+            when others =>\n+               return False;\n          end case;\n       end Is_Insert;\n \n@@ -1442,7 +1413,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -1514,7 +1484,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Leading_Dollar;\n@@ -1534,7 +1503,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       --  floating unless there is only one '#'.\n \n       procedure Leading_Pound is\n-\n          Inserts : Boolean := False;\n          --  Set to True if a '_', '0', '/', 'B', or 'b' is encountered\n \n@@ -1565,7 +1533,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Inserts := True;\n@@ -1666,7 +1633,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       procedure Number is\n       begin\n          loop\n-\n             case Look is\n                when '_' | '0' | '/' =>\n                   Skip;\n@@ -1709,7 +1675,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       begin\n          while not At_End loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1780,8 +1745,8 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n@@ -1890,7 +1855,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1909,7 +1873,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1925,14 +1888,12 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                         when others =>\n                            return;\n-\n                      end case;\n                   end loop;\n \n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Pound;\n@@ -1949,7 +1910,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -1969,7 +1929,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -1992,7 +1951,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                when others =>\n                   Number_Fraction;\n                   return;\n-\n             end case;\n          end loop;\n       end Number_Fraction_Or_Star_Fill;\n@@ -2009,7 +1967,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -2030,7 +1987,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      end if;\n \n                      case Look is\n-\n                         when '_' | '0' | '/' =>\n                            Skip;\n \n@@ -2069,7 +2025,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end if;\n \n          case Look is\n-\n             when '+' | '-' =>\n                Pic.Sign_Position := Index;\n                Skip;\n@@ -2118,7 +2073,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             when others =>\n                return;\n-\n          end case;\n       end Optional_RHS_Sign;\n \n@@ -2139,7 +2093,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Skip;\n \n@@ -2170,7 +2123,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture;\n@@ -2197,7 +2149,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2241,7 +2192,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   raise Picture_Error;\n-\n             end case;\n          end loop;\n       end Picture_Bracket;\n@@ -2267,7 +2217,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2325,7 +2274,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Minus;\n@@ -2351,7 +2299,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n          loop\n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2413,7 +2360,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when others =>\n                   return;\n-\n             end case;\n          end loop;\n       end Picture_Plus;\n@@ -2429,7 +2375,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end loop;\n \n          case Look is\n-\n             when '$' | '#' =>\n                Picture;\n                Optional_RHS_Sign;\n@@ -2461,7 +2406,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             when others =>\n                raise Picture_Error;\n-\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n@@ -2478,7 +2422,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          if not At_End then\n             Set_State (Reject);\n          end if;\n-\n       end Picture_String;\n \n       ---------------\n@@ -2522,7 +2465,6 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-\n                when '_' | '0' | '/' =>\n                   Pic.End_Float := Index;\n                   Skip;\n@@ -2553,7 +2495,8 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                   Set_State (Okay);\n                   return;\n \n-               when others => raise Picture_Error;\n+               when others =>\n+                  raise Picture_Error;\n             end case;\n          end loop;\n       end Star_Suppression;\n@@ -2604,13 +2547,15 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n             end if;\n \n             case Look is\n-               when '_' | '0' | '/' => Skip;\n+               when '_' | '0' | '/' =>\n+                  Skip;\n \n                when 'B' | 'b'  =>\n                   Pic.Picture.Expanded (Index) := 'b';\n                   Skip;\n \n-               when others => return;\n+               when others =>\n+                  return;\n             end case;\n          end loop;\n       end Trailing_Currency;"}, {"sha": "d60d4980d0cfeac7a2ac40ae6d98f776cd5634f0", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -718,7 +718,7 @@ package body ALI is\n             begin\n                loop\n                   case Nextc is\n-                     when '['   =>\n+                     when '[' =>\n                         Nested_Brackets := Nested_Brackets + 1;\n                      when ']' =>\n                         Nested_Brackets := Nested_Brackets - 1;\n@@ -1464,19 +1464,19 @@ package body ALI is\n                   C := Getc;\n \n                   case C is\n-                  when 'v' =>\n-                     ALIs.Table (Id).Restrictions.Violated (R) := True;\n-                     Cumulative_Restrictions.Violated (R) := True;\n+                     when 'v' =>\n+                        ALIs.Table (Id).Restrictions.Violated (R) := True;\n+                        Cumulative_Restrictions.Violated (R) := True;\n \n-                  when 'r' =>\n-                     ALIs.Table (Id).Restrictions.Set (R) := True;\n-                     Cumulative_Restrictions.Set (R) := True;\n+                     when 'r' =>\n+                        ALIs.Table (Id).Restrictions.Set (R) := True;\n+                        Cumulative_Restrictions.Set (R) := True;\n \n-                  when 'n' =>\n-                     null;\n+                     when 'n' =>\n+                        null;\n \n-                  when others =>\n-                     raise Bad_R_Line;\n+                     when others =>\n+                        raise Bad_R_Line;\n                   end case;\n                end loop;\n "}, {"sha": "ffb3b914a2a7079699b60af415ecd68f35349d6e", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -694,7 +694,6 @@ package body Binde is\n    ----------------------------------\n \n    procedure Diagnose_Elaboration_Problem is\n-\n       function Find_Path (Ufrom, Uto : Unit_Id; ML : Nat) return Boolean;\n       --  Recursive routine used to find a path from node Ufrom to node Uto.\n       --  If a path exists, returns True and outputs an appropriate set of\n@@ -710,7 +709,6 @@ package body Binde is\n       ---------------\n \n       function Find_Path (Ufrom, Uto : Unit_Id; ML : Nat) return Boolean is\n-\n          function Find_Link (U : Unit_Id; PL : Nat) return Boolean;\n          --  This is the inner recursive routine, it determines if a path\n          --  exists from U to Uto, and if so returns True and outputs the"}, {"sha": "a42338b1ebf3868a209cae654696784ecd076a8b", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -4041,26 +4041,30 @@ package body Checks is\n \n          if Present (Expr) and then Known_Null (Expr) then\n             case K is\n-               when N_Component_Declaration      |\n-                    N_Discriminant_Specification =>\n+               when N_Component_Declaration\n+                  | N_Discriminant_Specification\n+               =>\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n-                     Msg    => \"(Ada 2005) null not allowed \"\n-                               & \"in null-excluding components??\",\n+                     Msg    =>\n+                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       & \"components??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when N_Object_Declaration =>\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n-                     Msg    => \"(Ada 2005) null not allowed \"\n-                               & \"in null-excluding objects??\",\n+                     Msg    =>\n+                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       & \"objects??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when N_Parameter_Specification =>\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n-                     Msg    => \"(Ada 2005) null not allowed \"\n-                               & \"in null-excluding formals??\",\n+                     Msg    =>\n+                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       & \"formals??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when others =>\n@@ -4499,9 +4503,7 @@ package body Checks is\n \n          when N_Op_Rem =>\n             if OK_Operands then\n-               if Lo_Right = Hi_Right\n-                 and then Lo_Right /= 0\n-               then\n+               if Lo_Right = Hi_Right and then Lo_Right /= 0 then\n                   declare\n                      Dval : constant Uint := (abs Lo_Right) - 1;\n \n@@ -4536,7 +4538,9 @@ package body Checks is\n                --  For Pos/Val attributes, we can refine the range using the\n                --  possible range of values of the attribute expression.\n \n-               when Name_Pos | Name_Val =>\n+               when Name_Pos\n+                  | Name_Val\n+               =>\n                   Determine_Range\n                     (First (Expressions (N)), OK1, Lor, Hir, Assume_Valid);\n \n@@ -7246,12 +7250,22 @@ package body Checks is\n    function Is_Signed_Integer_Arithmetic_Op (N : Node_Id) return Boolean is\n    begin\n       case Nkind (N) is\n-         when N_Op_Abs   | N_Op_Add      | N_Op_Divide   | N_Op_Expon |\n-              N_Op_Minus | N_Op_Mod      | N_Op_Multiply | N_Op_Plus  |\n-              N_Op_Rem   | N_Op_Subtract =>\n+         when N_Op_Abs\n+            | N_Op_Add\n+            | N_Op_Divide\n+            | N_Op_Expon\n+            | N_Op_Minus\n+            | N_Op_Mod\n+            | N_Op_Multiply\n+            | N_Op_Plus\n+            | N_Op_Rem\n+            | N_Op_Subtract\n+         =>\n             return Is_Signed_Integer_Type (Etype (N));\n \n-         when N_If_Expression | N_Case_Expression =>\n+         when N_Case_Expression\n+            | N_If_Expression\n+         =>\n             return Is_Signed_Integer_Type (Etype (N));\n \n          when others =>\n@@ -8468,28 +8482,28 @@ package body Checks is\n \n             begin\n                case Nkind (N) is\n-                  when N_Op_Abs      =>\n+                  when N_Op_Abs =>\n                      Fent := RTE (RE_Big_Abs);\n \n-                  when N_Op_Add      =>\n+                  when N_Op_Add =>\n                      Fent := RTE (RE_Big_Add);\n \n-                  when N_Op_Divide   =>\n+                  when N_Op_Divide =>\n                      Fent := RTE (RE_Big_Div);\n \n-                  when N_Op_Expon    =>\n+                  when N_Op_Expon =>\n                      Fent := RTE (RE_Big_Exp);\n \n-                  when N_Op_Minus    =>\n+                  when N_Op_Minus =>\n                      Fent := RTE (RE_Big_Neg);\n \n-                  when N_Op_Mod      =>\n+                  when N_Op_Mod =>\n                      Fent := RTE (RE_Big_Mod);\n \n                   when N_Op_Multiply =>\n                      Fent := RTE (RE_Big_Mul);\n \n-                  when N_Op_Rem      =>\n+                  when N_Op_Rem =>\n                      Fent := RTE (RE_Big_Rem);\n \n                   when N_Op_Subtract =>"}, {"sha": "bbe34a601280e3529a75da5bb929ac473bae1027", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -467,9 +467,10 @@ package body Comperr is\n       Main := Unit (Cunit (Main_Unit));\n \n       case Nkind (Main) is\n-         when N_Package_Declaration    |\n-              N_Subprogram_Body        |\n-              N_Subprogram_Declaration =>\n+         when N_Package_Declaration\n+            | N_Subprogram_Body\n+            | N_Subprogram_Declaration\n+         =>\n             Unit_Name := Defining_Unit_Name (Specification (Main));\n \n          when N_Package_Body =>"}, {"sha": "3a013d9257f33018c0b647d14b2f37246fdf89b5", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2940,7 +2940,6 @@ package body Contracts is\n             end if;\n \n             case Nkind (Spec) is\n-\n                when N_Function_Specification =>\n                   return\n                     Make_Function_Specification (Loc,"}, {"sha": "af9dc6975b84b90490f88d0cb6121b9df7e24394", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 603, "deletions": 508, "changes": 1111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -8106,7 +8106,7 @@ package body Einfo is\n                when  1 ..  6 => return Uint_128;\n                when  7 .. 15 => return 2**10;\n                when 16 .. 33 => return 2**14;\n-               when others => return No_Uint;\n+               when others   => return No_Uint;\n             end case;\n \n          when AAMP =>\n@@ -8141,14 +8141,14 @@ package body Einfo is\n                when  7 .. 15 => return UI_From_Int (53);\n                when 16 .. 18 => return Uint_64;\n                when 19 .. 33 => return UI_From_Int (113);\n-               when others => return No_Uint;\n+               when others   => return No_Uint;\n             end case;\n \n          when AAMP =>\n             case Digs is\n                when  1 ..  6 => return Uint_24;\n                when  7 ..  9 => return UI_From_Int (40);\n-               when others => return No_Uint;\n+               when others   => return No_Uint;\n             end case;\n       end case;\n    end Machine_Mantissa_Value;\n@@ -8160,7 +8160,9 @@ package body Einfo is\n    function Machine_Radix_Value (Id : E) return U is\n    begin\n       case Float_Rep (Id) is\n-         when IEEE_Binary | AAMP =>\n+         when AAMP\n+            | IEEE_Binary\n+         =>\n             return Uint_2;\n       end case;\n    end Machine_Radix_Value;\n@@ -8792,19 +8794,19 @@ package body Einfo is\n                        and then Is_Base_Type (Id));\n \n       case V is\n-         when Calign_Default          =>\n+         when Calign_Default =>\n             Set_Flag128 (Id, False);\n             Set_Flag129 (Id, False);\n \n-         when Calign_Component_Size   =>\n+         when Calign_Component_Size =>\n             Set_Flag128 (Id, False);\n             Set_Flag129 (Id, True);\n \n          when Calign_Component_Size_4 =>\n             Set_Flag128 (Id, True);\n             Set_Flag129 (Id, False);\n \n-         when Calign_Storage_Unit     =>\n+         when Calign_Storage_Unit =>\n             Set_Flag128 (Id, True);\n             Set_Flag129 (Id, True);\n       end case;\n@@ -9022,60 +9024,68 @@ package body Einfo is\n \n    begin\n       case K is\n-         when Access_Kind                    =>\n+         when Access_Kind =>\n             Kind := E_Access_Subtype;\n \n-         when E_Array_Type                   |\n-              E_Array_Subtype                =>\n+         when E_Array_Subtype\n+            | E_Array_Type\n+         =>\n             Kind := E_Array_Subtype;\n \n-         when E_Class_Wide_Type              |\n-              E_Class_Wide_Subtype           =>\n+         when E_Class_Wide_Subtype\n+            | E_Class_Wide_Type\n+         =>\n             Kind := E_Class_Wide_Subtype;\n \n-         when E_Decimal_Fixed_Point_Type     |\n-              E_Decimal_Fixed_Point_Subtype  =>\n+         when E_Decimal_Fixed_Point_Subtype\n+            | E_Decimal_Fixed_Point_Type\n+         =>\n             Kind := E_Decimal_Fixed_Point_Subtype;\n \n-         when E_Ordinary_Fixed_Point_Type    |\n-              E_Ordinary_Fixed_Point_Subtype =>\n+         when E_Ordinary_Fixed_Point_Subtype\n+            | E_Ordinary_Fixed_Point_Type\n+         =>\n             Kind := E_Ordinary_Fixed_Point_Subtype;\n \n-         when E_Private_Type                 |\n-              E_Private_Subtype              =>\n+         when E_Private_Subtype\n+            | E_Private_Type\n+         =>\n             Kind := E_Private_Subtype;\n \n-         when E_Limited_Private_Type         |\n-              E_Limited_Private_Subtype      =>\n+         when E_Limited_Private_Subtype\n+            | E_Limited_Private_Type\n+         =>\n             Kind := E_Limited_Private_Subtype;\n \n-         when E_Record_Type_With_Private     |\n-              E_Record_Subtype_With_Private  =>\n+         when E_Record_Subtype_With_Private\n+            | E_Record_Type_With_Private\n+         =>\n             Kind := E_Record_Subtype_With_Private;\n \n-         when E_Record_Type                  |\n-              E_Record_Subtype               =>\n+         when E_Record_Subtype\n+            | E_Record_Type\n+         =>\n             Kind := E_Record_Subtype;\n \n-         when Enumeration_Kind               =>\n+         when Enumeration_Kind =>\n             Kind := E_Enumeration_Subtype;\n \n-         when Float_Kind                     =>\n+         when Float_Kind =>\n             Kind := E_Floating_Point_Subtype;\n \n-         when Signed_Integer_Kind            =>\n+         when Signed_Integer_Kind =>\n             Kind := E_Signed_Integer_Subtype;\n \n-         when Modular_Integer_Kind           =>\n+         when Modular_Integer_Kind =>\n             Kind := E_Modular_Integer_Subtype;\n \n-         when Protected_Kind                 =>\n+         when Protected_Kind =>\n             Kind := E_Protected_Subtype;\n \n-         when Task_Kind                      =>\n+         when Task_Kind =>\n             Kind := E_Task_Subtype;\n \n-         when others                         =>\n+         when others =>\n             Kind := E_Void;\n             raise Program_Error;\n       end case;\n@@ -9583,7 +9593,6 @@ package body Einfo is\n       Write_Eol;\n \n       case Ekind (Id) is\n-\n          when Discrete_Kind =>\n             Write_Str (\"Bounds: Id = \");\n \n@@ -9643,7 +9652,8 @@ package body Einfo is\n                Write_Eol;\n             end if;\n \n-         when others => null;\n+         when others =>\n+            null;\n       end case;\n    end Write_Entity_Info;\n \n@@ -9674,34 +9684,36 @@ package body Einfo is\n    procedure Write_Field8_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"Associated_Node_For_Itype\");\n \n-         when E_Package                                    =>\n+         when E_Package =>\n             Write_Str (\"Dependent_Instances\");\n \n-         when E_Loop                                       =>\n+         when E_Loop =>\n             Write_Str (\"First_Exit_Statement\");\n \n-         when E_Variable                                   =>\n+         when E_Variable =>\n             Write_Str (\"Hiding_Loop_Variable\");\n \n-         when Formal_Kind                                  |\n-              E_Function                                   |\n-              E_Subprogram_Body                            =>\n+         when Formal_Kind\n+            | E_Function\n+            | E_Subprogram_Body\n+         =>\n             Write_Str (\"Mechanism\");\n \n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Normalized_First_Bit\");\n \n-         when E_Abstract_State                             =>\n+         when E_Abstract_State =>\n             Write_Str (\"Refinement_Constituents\");\n \n-         when E_Return_Statement                           =>\n+         when E_Return_Statement =>\n             Write_Str (\"Return_Applies_To\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field8??\");\n       end case;\n    end Write_Field8_Name;\n@@ -9713,21 +9725,22 @@ package body Einfo is\n    procedure Write_Field9_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"Class_Wide_Type\");\n \n-         when Object_Kind                                  =>\n+         when Object_Kind =>\n             Write_Str (\"Current_Value\");\n \n-         when E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          |\n-              E_Package                                    |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Package\n+            | E_Procedure\n+         =>\n             Write_Str (\"Renaming_Map\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field9??\");\n       end case;\n    end Write_Field9_Name;\n@@ -9739,36 +9752,41 @@ package body Einfo is\n    procedure Write_Field10_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Class_Wide_Kind                              |\n-              Incomplete_Kind                              |\n-              E_Record_Type                                |\n-              E_Record_Subtype                             |\n-              Private_Kind                                 |\n-              Concurrent_Kind                              =>\n+         when Class_Wide_Kind\n+            | Incomplete_Kind\n+            | E_Record_Type\n+            | E_Record_Subtype\n+            | Private_Kind\n+            | Concurrent_Kind\n+         =>\n             Write_Str (\"Direct_Primitive_Operations\");\n \n-         when E_In_Parameter                               |\n-              E_Constant                                   =>\n+         when E_Constant\n+            | E_In_Parameter\n+         =>\n             Write_Str (\"Discriminal_Link\");\n \n-         when Float_Kind                                   =>\n+         when Float_Kind =>\n             Write_Str (\"Float_Rep\");\n \n-         when E_Function                                   |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+         =>\n             Write_Str (\"Handler_Records\");\n \n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Normalized_Position_Max\");\n \n-         when E_Abstract_State                             |\n-              E_Variable                                   =>\n+         when E_Abstract_State\n+            | E_Variable\n+         =>\n             Write_Str (\"Part_Of_Constituents\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field10??\");\n       end case;\n    end Write_Field10_Name;\n@@ -9780,36 +9798,39 @@ package body Einfo is\n    procedure Write_Field11_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Block                                      =>\n+         when E_Block =>\n             Write_Str (\"Block_Node\");\n \n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Component_Bit_Offset\");\n \n-         when Formal_Kind                                  =>\n+         when Formal_Kind =>\n             Write_Str (\"Entry_Component\");\n \n-         when E_Enumeration_Literal                        =>\n+         when E_Enumeration_Literal =>\n             Write_Str (\"Enumeration_Pos\");\n \n-         when Type_Kind                                    |\n-              E_Constant                                   =>\n+         when Type_Kind\n+            | E_Constant\n+         =>\n             Write_Str (\"Full_View\");\n \n-         when E_Generic_Package                            =>\n+         when E_Generic_Package =>\n             Write_Str (\"Generic_Homonym\");\n \n-         when E_Variable                                   =>\n+         when E_Variable =>\n             Write_Str (\"Part_Of_References\");\n \n-         when E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Protected_Body_Subprogram\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field11??\");\n       end case;\n    end Write_Field11_Name;\n@@ -9821,32 +9842,34 @@ package body Einfo is\n    procedure Write_Field12_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Package                                    =>\n+         when E_Package =>\n             Write_Str (\"Associated_Formal_Package\");\n \n-         when Entry_Kind                                   =>\n+         when Entry_Kind =>\n             Write_Str (\"Barrier_Function\");\n \n-         when E_Enumeration_Literal                        =>\n+         when E_Enumeration_Literal =>\n             Write_Str (\"Enumeration_Rep\");\n \n-         when Type_Kind                                    |\n-              E_Component                                  |\n-              E_Constant                                   |\n-              E_Discriminant                               |\n-              E_Exception                                  |\n-              E_In_Parameter                               |\n-              E_In_Out_Parameter                           |\n-              E_Out_Parameter                              |\n-              E_Loop_Parameter                             |\n-              E_Variable                                   =>\n+         when Type_Kind\n+            | E_Component\n+            | E_Constant\n+            | E_Discriminant\n+            | E_Exception\n+            | E_In_Parameter\n+            | E_In_Out_Parameter\n+            | E_Out_Parameter\n+            | E_Loop_Parameter\n+            | E_Variable\n+         =>\n             Write_Str (\"Esize\");\n \n-         when E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Next_Inlined_Subprogram\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field12??\");\n       end case;\n    end Write_Field12_Name;\n@@ -9858,26 +9881,27 @@ package body Einfo is\n    procedure Write_Field13_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Component_Clause\");\n \n-         when E_Function                                   =>\n+         when E_Function\n+            | E_Procedure\n+            | E_Package\n+            | Generic_Unit_Kind\n+         =>\n             Write_Str (\"Elaboration_Entity\");\n \n-         when E_Procedure                                  |\n-              E_Package                                    |\n-              Generic_Unit_Kind                            =>\n-            Write_Str (\"Elaboration_Entity\");\n-\n-         when Formal_Kind                                  |\n-              E_Variable                                   =>\n+         when Formal_Kind\n+            | E_Variable\n+         =>\n             Write_Str (\"Extra_Accessibility\");\n \n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"RM_Size\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field13??\");\n       end case;\n    end Write_Field13_Name;\n@@ -9889,29 +9913,33 @@ package body Einfo is\n    procedure Write_Field14_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Type_Kind                                    |\n-              Formal_Kind                                  |\n-              E_Constant                                   |\n-              E_Exception                                  |\n-              E_Loop_Parameter                             |\n-              E_Variable                                   =>\n+         when Type_Kind\n+            | Formal_Kind\n+            | E_Constant\n+            | E_Exception\n+            | E_Loop_Parameter\n+            | E_Variable\n+         =>\n             Write_Str (\"Alignment\");\n \n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Normalized_Position\");\n \n-         when E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Postconditions_Proc\");\n \n-         when E_Generic_Package                            |\n-              E_Package                                    =>\n+         when E_Generic_Package\n+            | E_Package\n+         =>\n             Write_Str (\"Shadow_Entities\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field14??\");\n       end case;\n    end Write_Field14_Name;\n@@ -9923,34 +9951,37 @@ package body Einfo is\n    procedure Write_Field15_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Discriminant                               =>\n+         when E_Discriminant =>\n             Write_Str (\"Discriminant_Number\");\n \n-         when E_Component                                  =>\n+         when E_Component =>\n             Write_Str (\"DT_Entry_Count\");\n \n-         when E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"DT_Position\");\n \n-         when Entry_Kind                                   =>\n+         when Entry_Kind =>\n             Write_Str (\"Entry_Parameters_Type\");\n \n-         when Formal_Kind                                  =>\n+         when Formal_Kind =>\n             Write_Str (\"Extra_Formal\");\n \n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"Pending_Access_Types\");\n \n-         when E_Package                                    |\n-              E_Package_Body                               =>\n+         when E_Package\n+            | E_Package_Body\n+         =>\n             Write_Str (\"Related_Instance\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Status_Flag_Or_Transient_Decl\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field15??\");\n       end case;\n    end Write_Field15_Name;\n@@ -9962,43 +9993,48 @@ package body Einfo is\n    procedure Write_Field16_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Record_Type                                |\n-              E_Record_Type_With_Private                   =>\n+         when E_Record_Type\n+            | E_Record_Type_With_Private\n+         =>\n             Write_Str (\"Access_Disp_Table\");\n \n-         when E_Abstract_State                             =>\n+         when E_Abstract_State =>\n             Write_Str (\"Body_References\");\n \n-         when E_Record_Subtype                             |\n-              E_Class_Wide_Subtype                         =>\n+         when E_Class_Wide_Subtype\n+            | E_Record_Subtype\n+         =>\n             Write_Str (\"Cloned_Subtype\");\n \n-         when E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"DTC_Entity\");\n \n-         when E_Component                                  =>\n+         when E_Component =>\n             Write_Str (\"Entry_Formal\");\n \n-         when E_Package                                    |\n-              E_Generic_Package                            |\n-              Concurrent_Kind                              =>\n+         when Concurrent_Kind\n+            | E_Generic_Package\n+            | E_Package\n+         =>\n             Write_Str (\"First_Private_Entity\");\n \n-         when Enumeration_Kind                             =>\n+         when Enumeration_Kind =>\n             Write_Str (\"Lit_Strings\");\n \n-         when Decimal_Fixed_Point_Kind                     =>\n+         when Decimal_Fixed_Point_Kind =>\n             Write_Str (\"Scale_Value\");\n \n-         when E_String_Literal_Subtype                     =>\n+         when E_String_Literal_Subtype =>\n             Write_Str (\"String_Literal_Length\");\n \n-         when E_Variable                                   |\n-              E_Out_Parameter                              =>\n+         when E_Out_Parameter\n+            | E_Variable\n+         =>\n             Write_Str (\"Unset_Reference\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field16??\");\n       end case;\n    end Write_Field16_Name;\n@@ -10010,56 +10046,58 @@ package body Einfo is\n    procedure Write_Field17_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Formal_Kind                                  |\n-              E_Constant                                   |\n-              E_Generic_In_Out_Parameter                   |\n-              E_Variable                                   =>\n+         when Formal_Kind\n+            | E_Constant\n+            | E_Generic_In_Out_Parameter\n+            | E_Variable\n+         =>\n             Write_Str (\"Actual_Subtype\");\n \n-         when Digits_Kind                                  =>\n+         when Digits_Kind =>\n             Write_Str (\"Digits_Value\");\n \n-         when E_Discriminant                               =>\n+         when E_Discriminant =>\n             Write_Str (\"Discriminal\");\n \n-         when E_Block                                      |\n-              Class_Wide_Kind                              |\n-              Concurrent_Kind                              |\n-              Private_Kind                                 |\n-              E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          |\n-              E_Loop                                       |\n-              E_Operator                                   |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Procedure                                  |\n-              E_Record_Type                                |\n-              E_Record_Subtype                             |\n-              E_Return_Statement                           |\n-              E_Subprogram_Body                            |\n-              E_Subprogram_Type                            =>\n+         when Class_Wide_Kind\n+            | Concurrent_Kind\n+            | Private_Kind\n+            | E_Block\n+            | E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Loop\n+            | E_Operator\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+            | E_Record_Type\n+            | E_Record_Subtype\n+            | E_Return_Statement\n+            | E_Subprogram_Body\n+            | E_Subprogram_Type\n+         =>\n             Write_Str (\"First_Entity\");\n \n-         when Array_Kind                                   =>\n+         when Array_Kind =>\n             Write_Str (\"First_Index\");\n \n-         when Enumeration_Kind                             =>\n+         when Enumeration_Kind =>\n             Write_Str (\"First_Literal\");\n \n-         when Access_Kind                                  =>\n+         when Access_Kind =>\n             Write_Str (\"Master_Id\");\n \n-         when Modular_Integer_Kind                         =>\n+         when Modular_Integer_Kind =>\n             Write_Str (\"Modulus\");\n \n-         when E_Component                                  =>\n+         when E_Component =>\n             Write_Str (\"Prival\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field17??\");\n       end case;\n    end Write_Field17_Name;\n@@ -10071,60 +10109,65 @@ package body Einfo is\n    procedure Write_Field18_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Enumeration_Literal                        |\n-              E_Function                                   |\n-              E_Operator                                   |\n-              E_Procedure                                  =>\n+         when E_Enumeration_Literal\n+            | E_Function\n+            | E_Operator\n+            | E_Procedure\n+         =>\n             Write_Str (\"Alias\");\n \n-         when E_Record_Type                                =>\n+         when E_Record_Type =>\n             Write_Str (\"Corresponding_Concurrent_Type\");\n \n-         when E_Subprogram_Body                            =>\n+         when E_Subprogram_Body =>\n             Write_Str (\"Corresponding_Protected_Entry\");\n \n-         when Concurrent_Kind                              =>\n+         when Concurrent_Kind =>\n             Write_Str (\"Corresponding_Record_Type\");\n \n-         when E_Label                                      |\n-              E_Loop                                       |\n-              E_Block                                      =>\n+         when E_Block\n+            | E_Label\n+            | E_Loop\n+         =>\n             Write_Str (\"Enclosing_Scope\");\n \n-         when E_Entry_Index_Parameter                      =>\n+         when E_Entry_Index_Parameter =>\n             Write_Str (\"Entry_Index_Constant\");\n \n-         when E_Class_Wide_Subtype                         |\n-              E_Access_Protected_Subprogram_Type           |\n-              E_Anonymous_Access_Protected_Subprogram_Type |\n-              E_Access_Subprogram_Type                     |\n-              E_Exception_Type                             =>\n+         when E_Access_Protected_Subprogram_Type\n+            | E_Access_Subprogram_Type\n+            | E_Anonymous_Access_Protected_Subprogram_Type\n+            | E_Exception_Type\n+            | E_Class_Wide_Subtype\n+         =>\n             Write_Str (\"Equivalent_Type\");\n \n-         when Fixed_Point_Kind                             =>\n+         when Fixed_Point_Kind =>\n             Write_Str (\"Delta_Value\");\n \n-         when Enumeration_Kind                             =>\n+         when Enumeration_Kind =>\n             Write_Str (\"Lit_Indexes\");\n \n-         when Incomplete_Or_Private_Kind                   |\n-              E_Record_Subtype                             =>\n+         when Incomplete_Or_Private_Kind\n+            | E_Record_Subtype\n+         =>\n             Write_Str (\"Private_Dependents\");\n \n-         when Object_Kind                                  =>\n-            Write_Str (\"Renamed_Object\");\n-\n-         when E_Exception                                  |\n-              E_Package                                    |\n-              E_Generic_Function                           |\n-              E_Generic_Procedure                          |\n-              E_Generic_Package                            =>\n+         when E_Exception\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Package\n+         =>\n             Write_Str (\"Renamed_Entity\");\n \n-         when E_String_Literal_Subtype                     =>\n+         when Object_Kind =>\n+            Write_Str (\"Renamed_Object\");\n+\n+         when E_String_Literal_Subtype =>\n             Write_Str (\"String_Literal_Low_Bound\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field18??\");\n       end case;\n    end Write_Field18_Name;\n@@ -10136,52 +10179,57 @@ package body Einfo is\n    procedure Write_Field19_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Package                                    |\n-              E_Generic_Package                            =>\n+         when E_Generic_Package\n+            | E_Package\n+         =>\n             Write_Str (\"Body_Entity\");\n \n-         when E_Discriminant                               =>\n+         when E_Discriminant =>\n             Write_Str (\"Corresponding_Discriminant\");\n \n-         when Scalar_Kind                                  =>\n+         when Scalar_Kind =>\n             Write_Str (\"Default_Aspect_Value\");\n \n-         when E_Abstract_State                             |\n-              E_Class_Wide_Type                            |\n-              E_Incomplete_Type                            =>\n-            Write_Str (\"Non_Limited_View\");\n-\n-         when E_Incomplete_Subtype                         =>\n-            if From_Limited_With (Id) then\n-               Write_Str (\"Non_Limited_View\");\n-            end if;\n-\n-         when E_Array_Type                                 =>\n+         when E_Array_Type =>\n             Write_Str (\"Default_Component_Value\");\n \n-         when E_Protected_Type                             =>\n+         when E_Protected_Type =>\n             Write_Str (\"Entry_Bodies_Array\");\n \n-         when E_Function                                   |\n-              E_Operator                                   |\n-              E_Subprogram_Type                            =>\n+         when E_Function\n+            | E_Operator\n+            | E_Subprogram_Type\n+         =>\n             Write_Str (\"Extra_Accessibility_Of_Result\");\n \n-         when E_Record_Type                                =>\n+         when E_Abstract_State\n+            | E_Class_Wide_Type\n+            | E_Incomplete_Type\n+         =>\n+            Write_Str (\"Non_Limited_View\");\n+\n+         when E_Incomplete_Subtype =>\n+            if From_Limited_With (Id) then\n+               Write_Str (\"Non_Limited_View\");\n+            end if;\n+\n+         when E_Record_Type =>\n             Write_Str (\"Parent_Subtype\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Size_Check_Code\");\n \n-         when E_Package_Body                               |\n-              Formal_Kind                                  =>\n+         when Formal_Kind\n+            | E_Package_Body\n+         =>\n             Write_Str (\"Spec_Entity\");\n \n-         when Private_Kind                                 =>\n+         when Private_Kind =>\n             Write_Str (\"Underlying_Full_View\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field19??\");\n       end case;\n    end Write_Field19_Name;\n@@ -10193,55 +10241,58 @@ package body Einfo is\n    procedure Write_Field20_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Array_Kind                                   =>\n+         when Array_Kind =>\n             Write_Str (\"Component_Type\");\n \n-         when E_In_Parameter                               |\n-              E_Generic_In_Parameter                       =>\n+         when E_Generic_In_Parameter\n+            | E_In_Parameter\n+         =>\n             Write_Str (\"Default_Value\");\n \n-         when Access_Kind                                  =>\n+         when Access_Kind =>\n             Write_Str (\"Directly_Designated_Type\");\n \n-         when E_Component                                  =>\n+         when E_Component =>\n             Write_Str (\"Discriminant_Checking_Func\");\n \n-         when E_Discriminant                               =>\n+         when E_Discriminant =>\n             Write_Str (\"Discriminant_Default_Value\");\n \n-         when E_Block                                      |\n-              Class_Wide_Kind                              |\n-              Concurrent_Kind                              |\n-              Private_Kind                                 |\n-              E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          |\n-              E_Loop                                       |\n-              E_Operator                                   |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Procedure                                  |\n-              E_Record_Type                                |\n-              E_Record_Subtype                             |\n-              E_Return_Statement                           |\n-              E_Subprogram_Body                            |\n-              E_Subprogram_Type                            =>\n+         when Class_Wide_Kind\n+            | Concurrent_Kind\n+            | Private_Kind\n+            | E_Block\n+            | E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Loop\n+            | E_Operator\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+            | E_Record_Type\n+            | E_Record_Subtype\n+            | E_Return_Statement\n+            | E_Subprogram_Body\n+            | E_Subprogram_Type\n+         =>\n             Write_Str (\"Last_Entity\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Prival_Link\");\n \n-         when Scalar_Kind                                  =>\n-            Write_Str (\"Scalar_Range\");\n-\n-         when E_Exception                                  =>\n+         when E_Exception =>\n             Write_Str (\"Register_Exception_Call\");\n \n-         when others                                       =>\n+         when Scalar_Kind =>\n+            Write_Str (\"Scalar_Range\");\n+\n+         when others =>\n             Write_Str (\"Field20??\");\n       end case;\n    end Write_Field20_Name;\n@@ -10253,36 +10304,39 @@ package body Einfo is\n    procedure Write_Field21_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Entry_Kind                                   =>\n+         when Entry_Kind =>\n             Write_Str (\"Accept_Address\");\n \n-         when E_In_Parameter                               =>\n+         when E_In_Parameter =>\n             Write_Str (\"Default_Expr_Function\");\n \n-         when Concurrent_Kind                              |\n-              Incomplete_Or_Private_Kind                   |\n-              Class_Wide_Kind                              |\n-              E_Record_Type                                |\n-              E_Record_Subtype                             =>\n+         when Concurrent_Kind\n+            | Incomplete_Or_Private_Kind\n+            | Class_Wide_Kind\n+            | E_Record_Type\n+            | E_Record_Subtype\n+         =>\n             Write_Str (\"Discriminant_Constraint\");\n \n-         when E_Constant                                   |\n-              E_Exception                                  |\n-              E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Procedure                                  |\n-              E_Generic_Procedure                          |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Exception\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Procedure\n+            | E_Procedure\n+            | E_Variable\n+         =>\n             Write_Str (\"Interface_Name\");\n \n-         when Array_Kind                                   |\n-              Modular_Integer_Kind                         =>\n+         when Array_Kind\n+            | Modular_Integer_Kind\n+         =>\n             Write_Str (\"Original_Array_Type\");\n \n-         when Fixed_Point_Kind                             =>\n+         when Fixed_Point_Kind =>\n             Write_Str (\"Small_Value\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field21??\");\n       end case;\n    end Write_Field21_Name;\n@@ -10294,54 +10348,57 @@ package body Einfo is\n    procedure Write_Field22_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when Access_Kind                                  =>\n+         when Access_Kind =>\n             Write_Str (\"Associated_Storage_Pool\");\n \n-         when Array_Kind                                   =>\n+         when Array_Kind =>\n             Write_Str (\"Component_Size\");\n \n-         when E_Record_Type                                =>\n+         when E_Record_Type =>\n             Write_Str (\"Corresponding_Remote_Type\");\n \n-         when E_Component                                  |\n-              E_Discriminant                               =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Write_Str (\"Original_Record_Component\");\n \n-         when E_Enumeration_Literal                        =>\n+         when E_Enumeration_Literal =>\n             Write_Str (\"Enumeration_Rep_Expr\");\n \n-         when E_Record_Type_With_Private                   |\n-              E_Record_Subtype_With_Private                |\n-              E_Private_Type                               |\n-              E_Private_Subtype                            |\n-              E_Limited_Private_Type                       |\n-              E_Limited_Private_Subtype                    =>\n+         when E_Limited_Private_Subtype\n+            | E_Limited_Private_Type\n+            | E_Private_Subtype\n+            | E_Private_Type\n+            | E_Record_Subtype_With_Private\n+            | E_Record_Type_With_Private\n+         =>\n             Write_Str (\"Private_View\");\n \n-         when Formal_Kind                                  =>\n+         when Formal_Kind =>\n             Write_Str (\"Protected_Formal\");\n \n-         when E_Block                                      |\n-              E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Loop                                       |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Generic_Package                            |\n-              E_Generic_Function                           |\n-              E_Generic_Procedure                          |\n-              E_Procedure                                  |\n-              E_Protected_Type                             |\n-              E_Return_Statement                           |\n-              E_Subprogram_Body                            |\n-              E_Task_Type                                  =>\n+         when E_Block\n+            | E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Loop\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+            | E_Protected_Type\n+            | E_Return_Statement\n+            | E_Subprogram_Body\n+            | E_Task_Type\n+         =>\n             Write_Str (\"Scope_Depth_Value\");\n \n-         when E_Variable                                   =>\n+         when E_Variable =>\n             Write_Str (\"Shared_Var_Procs_Instance\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field22??\");\n       end case;\n    end Write_Field22_Name;\n@@ -10353,42 +10410,46 @@ package body Einfo is\n    procedure Write_Field23_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Discriminant                               =>\n+         when E_Discriminant =>\n             Write_Str (\"CR_Discriminant\");\n \n-         when E_Block                                      =>\n+         when E_Block =>\n             Write_Str (\"Entry_Cancel_Parameter\");\n \n-         when E_Enumeration_Type                           =>\n+         when E_Enumeration_Type =>\n             Write_Str (\"Enum_Pos_To_Rep\");\n \n-         when Formal_Kind                                  |\n-              E_Variable                                   =>\n+         when Formal_Kind\n+            | E_Variable\n+         =>\n             Write_Str (\"Extra_Constrained\");\n \n-         when Access_Kind                                  =>\n+         when Access_Kind =>\n             Write_Str (\"Finalization_Master\");\n \n-         when E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          =>\n+         when E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+         =>\n             Write_Str (\"Inner_Instances\");\n \n-         when Array_Kind                                   =>\n+         when Array_Kind =>\n             Write_Str (\"Packed_Array_Impl_Type\");\n \n-         when Entry_Kind                                   =>\n+         when Entry_Kind =>\n             Write_Str (\"Protection_Object\");\n \n-         when Concurrent_Kind                              |\n-              Incomplete_Or_Private_Kind                   |\n-              Class_Wide_Kind                              |\n-              E_Record_Type                                |\n-              E_Record_Subtype                             =>\n+         when Class_Wide_Kind\n+            | Concurrent_Kind\n+            | Incomplete_Or_Private_Kind\n+            | E_Record_Type\n+            | E_Record_Subtype\n+         =>\n             Write_Str (\"Stored_Constraint\");\n \n-         when E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             if Present (Scope (Id))\n               and then Is_Protected_Type (Scope (Id))\n             then\n@@ -10397,14 +10458,14 @@ package body Einfo is\n                Write_Str (\"Generic_Renamings\");\n             end if;\n \n-         when E_Package                                    =>\n+         when E_Package =>\n             if Is_Generic_Instance (Id) then\n                Write_Str (\"Generic_Renamings\");\n             else\n                Write_Str (\"Limited_View\");\n             end if;\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field23??\");\n       end case;\n    end Write_Field23_Name;\n@@ -10416,20 +10477,22 @@ package body Einfo is\n    procedure Write_Field24_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Constant                                   |\n-              E_Variable                                   |\n-              Type_Kind                                    =>\n+         when Type_Kind\n+            | E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Related_Expression\");\n \n-         when E_Function                                   |\n-              E_Operator                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Operator\n+            | E_Procedure\n+         =>\n             Write_Str (\"Subps_Index\");\n \n-         when E_Package                                    =>\n+         when E_Package =>\n             Write_Str (\"Incomplete_Actuals\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field24???\");\n       end case;\n    end Write_Field24_Name;\n@@ -10441,44 +10504,49 @@ package body Einfo is\n    procedure Write_Field25_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Generic_Package                            |\n-              E_Package                                    =>\n+         when E_Generic_Package\n+            | E_Package\n+         =>\n             Write_Str (\"Abstract_States\");\n \n-         when E_Entry                                      |\n-              E_Entry_Family                               =>\n+         when E_Entry\n+            | E_Entry_Family\n+         =>\n             Write_Str (\"Contract_Wrapper\");\n \n-         when E_Variable                                   =>\n+         when E_Variable =>\n             Write_Str (\"Debug_Renaming_Link\");\n \n-         when E_Component                                  =>\n+         when E_Component =>\n             Write_Str (\"DT_Offset_To_Top_Func\");\n \n-         when E_Procedure                                  |\n-              E_Function                                   =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Interface_Alias\");\n \n-         when E_Record_Type                                |\n-              E_Record_Subtype                             |\n-              E_Record_Type_With_Private                   |\n-              E_Record_Subtype_With_Private                =>\n+         when E_Record_Subtype\n+            | E_Record_Subtype_With_Private\n+            | E_Record_Type\n+            | E_Record_Type_With_Private\n+         =>\n             Write_Str (\"Interfaces\");\n \n-         when E_Array_Type                                 |\n-              E_Array_Subtype                              =>\n+         when E_Array_Subtype\n+            | E_Array_Type\n+         =>\n             Write_Str (\"Related_Array_Object\");\n \n-         when Task_Kind                                    =>\n-            Write_Str (\"Task_Body_Procedure\");\n-\n-         when Discrete_Kind                                =>\n+         when Discrete_Kind =>\n             Write_Str (\"Static_Discrete_Predicate\");\n \n-         when Real_Kind                                    =>\n+         when Real_Kind =>\n             Write_Str (\"Static_Real_Or_String_Predicate\");\n \n-         when others                                       =>\n+         when Task_Kind =>\n+            Write_Str (\"Task_Body_Procedure\");\n+\n+         when others =>\n             Write_Str (\"Field25??\");\n       end case;\n    end Write_Field25_Name;\n@@ -10490,32 +10558,38 @@ package body Einfo is\n    procedure Write_Field26_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Record_Type                                |\n-              E_Record_Type_With_Private                   =>\n+         when E_Record_Type\n+            | E_Record_Type_With_Private\n+         =>\n             Write_Str (\"Dispatch_Table_Wrappers\");\n \n-         when E_In_Out_Parameter                           |\n-              E_Out_Parameter                              |\n-              E_Variable                                   =>\n+         when E_In_Out_Parameter\n+            | E_Out_Parameter\n+            | E_Variable\n+         =>\n             Write_Str (\"Last_Assignment\");\n \n-         when E_Procedure                                  |\n-              E_Function                                   =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Overridden_Operation\");\n \n-         when E_Generic_Package                            |\n-              E_Package                                    =>\n+         when E_Generic_Package\n+            | E_Package\n+         =>\n             Write_Str (\"Package_Instantiation\");\n \n-         when E_Component                                  |\n-              E_Constant                                   =>\n+         when E_Component\n+            | E_Constant\n+         =>\n             Write_Str (\"Related_Type\");\n \n-         when Access_Kind                                  |\n-              Task_Kind                                    =>\n+         when Access_Kind\n+            | Task_Kind\n+         =>\n             Write_Str (\"Storage_Size_Variable\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field26??\");\n       end case;\n    end Write_Field26_Name;\n@@ -10527,20 +10601,23 @@ package body Einfo is\n    procedure Write_Field27_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Package                                    |\n-              Type_Kind                                    =>\n+         when Type_Kind\n+            | E_Package\n+         =>\n             Write_Str (\"Current_Use_Clause\");\n \n-         when E_Component                                  |\n-              E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Component\n+            | E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Related_Type\");\n \n-         when E_Procedure                                  |\n-              E_Function                                   =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Wrapped_Entity\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field27??\");\n       end case;\n    end Write_Field27_Name;\n@@ -10552,32 +10629,35 @@ package body Einfo is\n    procedure Write_Field28_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Procedure                                  |\n-              E_Subprogram_Body                            |\n-              E_Subprogram_Type                            =>\n+         when E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Procedure\n+            | E_Subprogram_Body\n+            | E_Subprogram_Type\n+         =>\n             Write_Str (\"Extra_Formals\");\n \n-         when E_Package                                    |\n-              E_Package_Body                               =>\n+         when E_Package\n+            | E_Package_Body\n+         =>\n             Write_Str (\"Finalizer\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Initialization_Statements\");\n \n-         when E_Access_Subprogram_Type                     =>\n+         when E_Access_Subprogram_Type =>\n             Write_Str (\"Original_Access_Type\");\n \n-         when Task_Kind                                    =>\n+         when Task_Kind =>\n             Write_Str (\"Relative_Deadline_Variable\");\n \n          when E_Record_Type =>\n             Write_Str (\"Underlying_Record_View\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field28??\");\n       end case;\n    end Write_Field28_Name;\n@@ -10589,20 +10669,22 @@ package body Einfo is\n    procedure Write_Field29_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Function                                   |\n-              E_Package                                    |\n-              E_Procedure                                  |\n-              E_Subprogram_Body                            =>\n+         when E_Function\n+            | E_Package\n+            | E_Procedure\n+            | E_Subprogram_Body\n+         =>\n             Write_Str (\"Anonymous_Masters\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"BIP_Initialization_Call\");\n \n          when Type_Kind =>\n             Write_Str (\"Subprograms_For_Type\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field29??\");\n       end case;\n    end Write_Field29_Name;\n@@ -10614,21 +10696,23 @@ package body Einfo is\n    procedure Write_Field30_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Protected_Type                             |\n-              E_Task_Type                                  =>\n+         when E_Protected_Type\n+            | E_Task_Type\n+         =>\n             Write_Str (\"Anonymous_Object\");\n \n-         when E_Function                                   =>\n+         when E_Function =>\n             Write_Str (\"Corresponding_Equality\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n+         when E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Last_Aggregate_Assignment\");\n \n-         when E_Procedure                                  =>\n+         when E_Procedure =>\n             Write_Str (\"Static_Initialization\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field30??\");\n       end case;\n    end Write_Field30_Name;\n@@ -10640,22 +10724,24 @@ package body Einfo is\n    procedure Write_Field31_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Procedure                                  |\n-              E_Function                                   =>\n-            Write_Str (\"Thunk_Entity\");\n+         when E_Constant\n+            | E_In_Parameter\n+            | E_In_Out_Parameter\n+            | E_Loop_Parameter\n+            | E_Out_Parameter\n+            | E_Variable\n+         =>\n+            Write_Str (\"Activation_Record_Component\");\n \n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"Derived_Type_Link\");\n \n-         when E_Constant                                   |\n-              E_In_Parameter                               |\n-              E_In_Out_Parameter                           |\n-              E_Loop_Parameter                             |\n-              E_Out_Parameter                              |\n-              E_Variable                                   =>\n-            Write_Str (\"Activation_Record_Component\");\n+         when E_Function\n+            | E_Procedure\n+         =>\n+            Write_Str (\"Thunk_Entity\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field31??\");\n       end case;\n    end Write_Field31_Name;\n@@ -10667,21 +10753,22 @@ package body Einfo is\n    procedure Write_Field32_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Abstract_State                             |\n-              E_Constant                                   |\n-              E_Variable                                   =>\n-            Write_Str (\"Encapsulating_State\");\n+         when E_Procedure =>\n+            Write_Str (\"Corresponding_Function\");\n \n-         when E_Function                                   =>\n+         when E_Function =>\n             Write_Str (\"Corresponding_Procedure\");\n \n-         when E_Procedure                                  =>\n-            Write_Str (\"Corresponding_Function\");\n+         when E_Abstract_State\n+            | E_Constant\n+            | E_Variable\n+         =>\n+            Write_Str (\"Encapsulating_State\");\n \n-         when Type_Kind                                    =>\n+         when Type_Kind =>\n             Write_Str (\"No_Tagged_Streams_Pragma\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field32??\");\n       end case;\n    end Write_Field32_Name;\n@@ -10693,13 +10780,14 @@ package body Einfo is\n    procedure Write_Field33_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Constant                                   |\n-              E_Variable                                   |\n-              Subprogram_Kind                              |\n-              Type_Kind                                    =>\n+         when Subprogram_Kind\n+            | Type_Kind\n+            | E_Constant\n+            | E_Variable\n+         =>\n             Write_Str (\"Linker_Section_Pragma\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field33??\");\n       end case;\n    end Write_Field33_Name;\n@@ -10711,26 +10799,27 @@ package body Einfo is\n    procedure Write_Field34_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Constant                                   |\n-              E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          |\n-              E_Operator                                   |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Procedure                                  |\n-              E_Protected_Type                             |\n-              E_Subprogram_Body                            |\n-              E_Task_Body                                  |\n-              E_Task_Type                                  |\n-              E_Variable                                   |\n-              E_Void                                       =>\n+         when E_Constant\n+            | E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Operator\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+            | E_Protected_Type\n+            | E_Subprogram_Body\n+            | E_Task_Body\n+            | E_Task_Type\n+            | E_Variable\n+            | E_Void\n+         =>\n             Write_Str (\"Contract\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field34??\");\n       end case;\n    end Write_Field34_Name;\n@@ -10742,17 +10831,18 @@ package body Einfo is\n    procedure Write_Field35_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Variable                                   =>\n+         when E_Variable =>\n             Write_Str (\"Anonymous_Designated_Type\");\n \n-         when E_Entry                                      |\n-              E_Entry_Family                               =>\n+         when E_Entry\n+            | E_Entry_Family\n+         =>\n             Write_Str (\"Entry_Max_Queue_Lenghts_Array\");\n \n-         when Subprogram_Kind                              =>\n+         when Subprogram_Kind =>\n             Write_Str (\"Import_Pragma\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field35??\");\n       end case;\n    end Write_Field35_Name;\n@@ -10784,11 +10874,12 @@ package body Einfo is\n    procedure Write_Field38_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Function                                   |\n-              E_Procedure                                  =>\n-            Write_Str (\"Class-wide preconditions\");\n+         when E_Function\n+            | E_Procedure\n+         =>\n+            Write_Str (\"Class_Wide_Preconditions\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field38??\");\n       end case;\n    end Write_Field38_Name;\n@@ -10800,11 +10891,12 @@ package body Einfo is\n    procedure Write_Field39_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Function                                   |\n-              E_Procedure                                  =>\n-            Write_Str (\"Class-wide postcondition\");\n+         when E_Function\n+            | E_Procedure\n+         =>\n+            Write_Str (\"Class_Wide_Postcondition\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field39??\");\n       end case;\n    end Write_Field39_Name;\n@@ -10816,25 +10908,26 @@ package body Einfo is\n    procedure Write_Field40_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Entry                                      |\n-              E_Entry_Family                               |\n-              E_Function                                   |\n-              E_Generic_Function                           |\n-              E_Generic_Package                            |\n-              E_Generic_Procedure                          |\n-              E_Operator                                   |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Procedure                                  |\n-              E_Protected_Body                             |\n-              E_Protected_Type                             |\n-              E_Subprogram_Body                            |\n-              E_Task_Body                                  |\n-              E_Task_Type                                  |\n-              E_Variable                                   =>\n+         when E_Entry\n+            | E_Entry_Family\n+            | E_Function\n+            | E_Generic_Function\n+            | E_Generic_Package\n+            | E_Generic_Procedure\n+            | E_Operator\n+            | E_Package\n+            | E_Package_Body\n+            | E_Procedure\n+            | E_Protected_Body\n+            | E_Protected_Type\n+            | E_Subprogram_Body\n+            | E_Task_Body\n+            | E_Task_Type\n+            | E_Variable\n+         =>\n             Write_Str (\"SPARK_Pragma\");\n \n-         when others                                       =>\n+         when others =>\n             Write_Str (\"Field40??\");\n       end case;\n    end Write_Field40_Name;\n@@ -10846,18 +10939,20 @@ package body Einfo is\n    procedure Write_Field41_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Generic_Package                            |\n-              E_Package                                    |\n-              E_Package_Body                               |\n-              E_Protected_Type                             |\n-              E_Task_Type                                  =>\n-            Write_Str (\"SPARK_Aux_Pragma\");\n-\n-         when E_Function                                   |\n-              E_Procedure                                  =>\n+         when E_Function\n+            | E_Procedure\n+         =>\n             Write_Str (\"Original_Protected_Subprogram\");\n \n-         when others                                       =>\n+         when E_Generic_Package\n+            | E_Package\n+            | E_Package_Body\n+            | E_Protected_Type\n+            | E_Task_Type\n+         =>\n+            Write_Str (\"SPARK_Aux_Pragma\");\n+\n+         when others =>\n             Write_Str (\"Field41??\");\n       end case;\n    end Write_Field41_Name;"}, {"sha": "7a244fb5800a94a0522eeb81a5800ce2377c0ed6", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2814,7 +2814,9 @@ package body Errout is\n             Set_Msg_Node (Defining_Identifier (Node));\n             return;\n \n-         when N_Selected_Component | N_Expanded_Name =>\n+         when N_Expanded_Name\n+            | N_Selected_Component\n+         =>\n             Set_Msg_Node (Prefix (Node));\n             Set_Msg_Char ('.');\n             Set_Msg_Node (Selector_Name (Node));\n@@ -3426,10 +3428,13 @@ package body Errout is\n       case Warning_Msg_Char is\n          when '?' =>\n             return \"??\";\n+\n          when 'a' .. 'z' | 'A' .. 'Z' | '*' | '$' =>\n             return '?' & Warning_Msg_Char & '?';\n+\n          when ' ' =>\n             return \"?\";\n+\n          when others =>\n             raise Program_Error;\n       end case;"}, {"sha": "48208444bde8ebd27897ee7bb6a5a74ce4eeaf0a", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -373,7 +373,7 @@ package body Eval_Fat is\n                   Fraction := Fraction + 1;\n                end if;\n \n-            when Round   =>\n+            when Round =>\n \n                --  Do not round to even as is done with IEEE arithmetic, but\n                --  instead round away from zero when the result is exactly\n@@ -390,7 +390,7 @@ package body Eval_Fat is\n                   Fraction := Fraction + 1;\n                end if;\n \n-            when Floor   =>\n+            when Floor =>\n                if N > Uint_0 and then UR_Is_Negative (X) then\n                   Fraction := Fraction + 1;\n                end if;"}, {"sha": "5b8e0055a3e2a9bbcf629fc2f9f14398b451133b", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 517, "deletions": 525, "changes": 1042, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1752,12 +1752,13 @@ package body Exp_Attr is\n \n       --  Attributes related to Ada 2012 iterators\n \n-      when Attribute_Constant_Indexing    |\n-           Attribute_Default_Iterator     |\n-           Attribute_Implicit_Dereference |\n-           Attribute_Iterable             |\n-           Attribute_Iterator_Element     |\n-           Attribute_Variable_Indexing    =>\n+      when Attribute_Constant_Indexing\n+         | Attribute_Default_Iterator\n+         | Attribute_Implicit_Dereference\n+         | Attribute_Iterable\n+         | Attribute_Iterator_Element\n+         | Attribute_Variable_Indexing\n+      =>\n          null;\n \n       --  Internal attributes used to deal with Ada 2012 delayed aspects. These\n@@ -1770,10 +1771,10 @@ package body Exp_Attr is\n       -- Access --\n       ------------\n \n-      when Attribute_Access              |\n-           Attribute_Unchecked_Access    |\n-           Attribute_Unrestricted_Access =>\n-\n+      when Attribute_Access\n+         | Attribute_Unchecked_Access\n+         | Attribute_Unrestricted_Access\n+      =>\n          Access_Cases : declare\n             Ref_Object : constant Node_Id := Get_Referenced_Object (Pref);\n             Btyp_DDT   : Entity_Id;\n@@ -2340,99 +2341,103 @@ package body Exp_Attr is\n       --  A special exception occurs for Standard, where the string returned\n       --  is a copy of the library string in gnatvsn.ads.\n \n-      when Attribute_Body_Version | Attribute_Version => Version : declare\n-         E    : constant Entity_Id := Make_Temporary (Loc, 'V');\n-         Pent : Entity_Id;\n-         S    : String_Id;\n+      when Attribute_Body_Version\n+         | Attribute_Version\n+      =>\n+         Version : declare\n+            E    : constant Entity_Id := Make_Temporary (Loc, 'V');\n+            Pent : Entity_Id;\n+            S    : String_Id;\n \n-      begin\n-         --  If not library unit, get to containing library unit\n-\n-         Pent := Entity (Pref);\n-         while Pent /= Standard_Standard\n-           and then Scope (Pent) /= Standard_Standard\n-           and then not Is_Child_Unit (Pent)\n-         loop\n-            Pent := Scope (Pent);\n-         end loop;\n+         begin\n+            --  If not library unit, get to containing library unit\n+\n+            Pent := Entity (Pref);\n+            while Pent /= Standard_Standard\n+              and then Scope (Pent) /= Standard_Standard\n+              and then not Is_Child_Unit (Pent)\n+            loop\n+               Pent := Scope (Pent);\n+            end loop;\n \n-         --  Special case Standard and Standard.ASCII\n+            --  Special case Standard and Standard.ASCII\n \n-         if Pent = Standard_Standard or else Pent = Standard_ASCII then\n-            Rewrite (N,\n-              Make_String_Literal (Loc,\n-                Strval => Verbose_Library_Version));\n+            if Pent = Standard_Standard or else Pent = Standard_ASCII then\n+               Rewrite (N,\n+                 Make_String_Literal (Loc,\n+                   Strval => Verbose_Library_Version));\n \n-         --  All other cases\n+            --  All other cases\n \n-         else\n-            --  Build required string constant\n+            else\n+               --  Build required string constant\n \n-            Get_Name_String (Get_Unit_Name (Pent));\n+               Get_Name_String (Get_Unit_Name (Pent));\n \n-            Start_String;\n-            for J in 1 .. Name_Len - 2 loop\n-               if Name_Buffer (J) = '.' then\n-                  Store_String_Chars (\"__\");\n-               else\n-                  Store_String_Char (Get_Char_Code (Name_Buffer (J)));\n-               end if;\n-            end loop;\n+               Start_String;\n+               for J in 1 .. Name_Len - 2 loop\n+                  if Name_Buffer (J) = '.' then\n+                     Store_String_Chars (\"__\");\n+                  else\n+                     Store_String_Char (Get_Char_Code (Name_Buffer (J)));\n+                  end if;\n+               end loop;\n \n-            --  Case of subprogram acting as its own spec, always use body\n+               --  Case of subprogram acting as its own spec, always use body\n \n-            if Nkind (Declaration_Node (Pent)) in N_Subprogram_Specification\n-              and then Nkind (Parent (Declaration_Node (Pent))) =\n-                                                          N_Subprogram_Body\n-              and then Acts_As_Spec (Parent (Declaration_Node (Pent)))\n-            then\n-               Store_String_Chars (\"B\");\n+               if Nkind (Declaration_Node (Pent)) in N_Subprogram_Specification\n+                 and then Nkind (Parent (Declaration_Node (Pent))) =\n+                            N_Subprogram_Body\n+                 and then Acts_As_Spec (Parent (Declaration_Node (Pent)))\n+               then\n+                  Store_String_Chars (\"B\");\n \n-            --  Case of no body present, always use spec\n+               --  Case of no body present, always use spec\n \n-            elsif not Unit_Requires_Body (Pent) then\n-               Store_String_Chars (\"S\");\n+               elsif not Unit_Requires_Body (Pent) then\n+                  Store_String_Chars (\"S\");\n \n-            --  Otherwise use B for Body_Version, S for spec\n+               --  Otherwise use B for Body_Version, S for spec\n \n-            elsif Id = Attribute_Body_Version then\n-               Store_String_Chars (\"B\");\n-            else\n-               Store_String_Chars (\"S\");\n-            end if;\n+               elsif Id = Attribute_Body_Version then\n+                  Store_String_Chars (\"B\");\n+               else\n+                  Store_String_Chars (\"S\");\n+               end if;\n \n-            S := End_String;\n-            Lib.Version_Referenced (S);\n+               S := End_String;\n+               Lib.Version_Referenced (S);\n \n-            --  Insert the object declaration\n+               --  Insert the object declaration\n \n-            Insert_Actions (N, New_List (\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier => E,\n-                Object_Definition   =>\n-                  New_Occurrence_Of (RTE (RE_Unsigned), Loc))));\n+               Insert_Actions (N, New_List (\n+                 Make_Object_Declaration (Loc,\n+                   Defining_Identifier => E,\n+                   Object_Definition   =>\n+                     New_Occurrence_Of (RTE (RE_Unsigned), Loc))));\n \n-            --  Set entity as imported with correct external name\n+               --  Set entity as imported with correct external name\n \n-            Set_Is_Imported (E);\n-            Set_Interface_Name (E, Make_String_Literal (Loc, S));\n+               Set_Is_Imported (E);\n+               Set_Interface_Name (E, Make_String_Literal (Loc, S));\n \n-            --  Set entity as internal to ensure proper Sprint output of its\n-            --  implicit importation.\n+               --  Set entity as internal to ensure proper Sprint output of its\n+               --  implicit importation.\n \n-            Set_Is_Internal (E);\n+               Set_Is_Internal (E);\n \n-            --  And now rewrite original reference\n+               --  And now rewrite original reference\n \n-            Rewrite (N,\n-              Make_Function_Call (Loc,\n-                Name => New_Occurrence_Of (RTE (RE_Get_Version_String), Loc),\n-                Parameter_Associations => New_List (\n-                  New_Occurrence_Of (E, Loc))));\n-         end if;\n+               Rewrite (N,\n+                 Make_Function_Call (Loc,\n+                   Name                   =>\n+                     New_Occurrence_Of (RTE (RE_Get_Version_String), Loc),\n+                   Parameter_Associations => New_List (\n+                     New_Occurrence_Of (E, Loc))));\n+            end if;\n \n-         Analyze_And_Resolve (N, RTE (RE_Version_String));\n-      end Version;\n+            Analyze_And_Resolve (N, RTE (RE_Version_String));\n+         end Version;\n \n       -------------\n       -- Ceiling --\n@@ -2450,8 +2455,7 @@ package body Exp_Attr is\n \n       --  Transforms 'Callable attribute into a call to the Callable function\n \n-      when Attribute_Callable => Callable :\n-      begin\n+      when Attribute_Callable =>\n          --  We have an object of a task interface class-wide type as a prefix\n          --  to Callable. Generate:\n          --    callable (Task_Id (Pref._disp_get_task_id));\n@@ -2463,15 +2467,15 @@ package body Exp_Attr is\n          then\n             Rewrite (N,\n               Make_Function_Call (Loc,\n-                Name =>\n+                Name                   =>\n                   New_Occurrence_Of (RTE (RE_Callable), Loc),\n                 Parameter_Associations => New_List (\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n                       New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression =>\n+                    Expression   =>\n                       Make_Selected_Component (Loc,\n-                        Prefix =>\n+                        Prefix        =>\n                           New_Copy_Tree (Pref),\n                         Selector_Name =>\n                           Make_Identifier (Loc, Name_uDisp_Get_Task_Id))))));\n@@ -2482,7 +2486,6 @@ package body Exp_Attr is\n          end if;\n \n          Analyze_And_Resolve (N, Standard_Boolean);\n-      end Callable;\n \n       ------------\n       -- Caller --\n@@ -2807,7 +2810,7 @@ package body Exp_Attr is\n \n                   Call :=\n                     Make_Function_Call (Loc,\n-                      Name => Name,\n+                      Name                   => Name,\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of\n                           (Find_Protection_Object (Current_Scope), Loc),\n@@ -2820,7 +2823,7 @@ package body Exp_Attr is\n \n                   Call :=\n                     Make_Function_Call (Loc,\n-                      Name => Name,\n+                      Name                   => Name,\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of\n                           (Find_Protection_Object (Current_Scope), Loc)));\n@@ -2893,9 +2896,9 @@ package body Exp_Attr is\n       --  and then the Elab_Body/Spec attribute is replaced by a reference\n       --  to this defining identifier.\n \n-      when Attribute_Elab_Body      |\n-           Attribute_Elab_Spec      =>\n-\n+      when Attribute_Elab_Body\n+         | Attribute_Elab_Spec\n+      =>\n          --  Leave attribute unexpanded in CodePeer mode: the gnat2scil\n          --  back-end knows how to handle these attributes directly.\n \n@@ -3123,18 +3126,17 @@ package body Exp_Attr is\n \n       --  transforme X'External_Tag into Ada.Tags.External_Tag (X'tag)\n \n-      when Attribute_External_Tag => External_Tag :\n-      begin\n+      when Attribute_External_Tag =>\n          Rewrite (N,\n            Make_Function_Call (Loc,\n-             Name => New_Occurrence_Of (RTE (RE_External_Tag), Loc),\n+             Name                   =>\n+               New_Occurrence_Of (RTE (RE_External_Tag), Loc),\n              Parameter_Associations => New_List (\n                Make_Attribute_Reference (Loc,\n                  Attribute_Name => Name_Tag,\n-                 Prefix => Prefix (N)))));\n+                 Prefix         => Prefix (N)))));\n \n          Analyze_And_Resolve (N, Standard_String);\n-      end External_Tag;\n \n       -----------------------\n       -- Finalization_Size --\n@@ -3349,21 +3351,20 @@ package body Exp_Attr is\n       --  that the back end always treats fixed-point as equivalent to the\n       --  corresponding integer type anyway.\n \n-      when Attribute_Fixed_Value => Fixed_Value :\n-      begin\n+      when Attribute_Fixed_Value =>\n          Rewrite (N,\n            Make_Type_Conversion (Loc,\n              Subtype_Mark => New_Occurrence_Of (Entity (Pref), Loc),\n              Expression   => Relocate_Node (First (Exprs))));\n          Set_Etype (N, Entity (Pref));\n          Set_Analyzed (N);\n \n-      --  Note: it might appear that a properly analyzed unchecked conversion\n-      --  would be just fine here, but that's not the case, since the full\n-      --  range checks performed by the following call are critical.\n+         --  Note: it might appear that a properly analyzed unchecked\n+         --  conversion would be just fine here, but that's not the case,\n+         --  since the full range checks performed by the following call\n+         --  are critical.\n \n          Apply_Type_Conversion_Checks (N);\n-      end Fixed_Value;\n \n       -----------\n       -- Floor --\n@@ -3391,25 +3392,25 @@ package body Exp_Attr is\n       --  Note that we know that the type is a non-static subtype, or Fore\n       --  would have itself been computed dynamically in Eval_Attribute.\n \n-      when Attribute_Fore => Fore : begin\n+      when Attribute_Fore =>\n          Rewrite (N,\n            Convert_To (Typ,\n              Make_Function_Call (Loc,\n-               Name => New_Occurrence_Of (RTE (RE_Fore), Loc),\n+               Name                   =>\n+                 New_Occurrence_Of (RTE (RE_Fore), Loc),\n \n                Parameter_Associations => New_List (\n                  Convert_To (Universal_Real,\n                    Make_Attribute_Reference (Loc,\n-                     Prefix => New_Occurrence_Of (Ptyp, Loc),\n+                     Prefix         => New_Occurrence_Of (Ptyp, Loc),\n                      Attribute_Name => Name_First)),\n \n                  Convert_To (Universal_Real,\n                    Make_Attribute_Reference (Loc,\n-                     Prefix => New_Occurrence_Of (Ptyp, Loc),\n+                     Prefix         => New_Occurrence_Of (Ptyp, Loc),\n                      Attribute_Name => Name_Last))))));\n \n          Analyze_And_Resolve (N, Typ);\n-      end Fore;\n \n       --------------\n       -- Fraction --\n@@ -3428,6 +3429,7 @@ package body Exp_Attr is\n       when Attribute_From_Any => From_Any : declare\n          P_Type : constant Entity_Id := Etype (Pref);\n          Decls  : constant List_Id   := New_List;\n+\n       begin\n          Rewrite (N,\n            Build_From_Any_Call (P_Type,\n@@ -3442,17 +3444,19 @@ package body Exp_Attr is\n       ----------------------\n \n       when Attribute_Has_Same_Storage => Has_Same_Storage : declare\n-            Loc : constant Source_Ptr := Sloc (N);\n+         Loc : constant Source_Ptr := Sloc (N);\n \n-            X   : constant Node_Id := Prefix (N);\n-            Y   : constant Node_Id := First (Expressions (N));\n-            --  The arguments\n+         X   : constant Node_Id := Prefix (N);\n+         Y   : constant Node_Id := First (Expressions (N));\n+         --  The arguments\n \n-            X_Addr, Y_Addr : Node_Id;\n-            --  Rhe expressions for their addresses\n+         X_Addr : Node_Id;\n+         Y_Addr : Node_Id;\n+         --  Rhe expressions for their addresses\n \n-            X_Size, Y_Size : Node_Id;\n-            --  Rhe expressions for their sizes\n+         X_Size : Node_Id;\n+         Y_Size : Node_Id;\n+         --  Rhe expressions for their sizes\n \n       begin\n          --  The attribute is expanded as:\n@@ -3465,40 +3469,40 @@ package body Exp_Attr is\n \n          X_Addr :=\n            Make_Attribute_Reference (Loc,\n-                                     Attribute_Name => Name_Address,\n-                                     Prefix         => New_Copy_Tree (X));\n+             Attribute_Name => Name_Address,\n+             Prefix         => New_Copy_Tree (X));\n \n          Y_Addr :=\n            Make_Attribute_Reference (Loc,\n-                                     Attribute_Name => Name_Address,\n-                                     Prefix         => New_Copy_Tree (Y));\n+             Attribute_Name => Name_Address,\n+             Prefix         => New_Copy_Tree (Y));\n \n          X_Size :=\n            Make_Attribute_Reference (Loc,\n-                                     Attribute_Name => Name_Size,\n-                                     Prefix         => New_Copy_Tree (X));\n+             Attribute_Name => Name_Size,\n+             Prefix         => New_Copy_Tree (X));\n \n          Y_Size :=\n            Make_Attribute_Reference (Loc,\n-                                     Attribute_Name => Name_Size,\n-                                     Prefix         => New_Copy_Tree (Y));\n+             Attribute_Name => Name_Size,\n+             Prefix         => New_Copy_Tree (Y));\n \n          if Etype (X) = Etype (Y) then\n             Rewrite (N,\n-                     (Make_Op_Eq (Loc,\n-                      Left_Opnd  => X_Addr,\n-                      Right_Opnd => Y_Addr)));\n+              Make_Op_Eq (Loc,\n+                Left_Opnd  => X_Addr,\n+                Right_Opnd => Y_Addr));\n          else\n             Rewrite (N,\n-                     Make_Op_And (Loc,\n-                       Left_Opnd  =>\n-                         Make_Op_Eq (Loc,\n-                           Left_Opnd  => X_Addr,\n-                           Right_Opnd => Y_Addr),\n-                       Right_Opnd =>\n-                         Make_Op_Eq (Loc,\n-                           Left_Opnd  => X_Size,\n-                           Right_Opnd => Y_Size)));\n+              Make_Op_And (Loc,\n+                Left_Opnd  =>\n+                  Make_Op_Eq (Loc,\n+                    Left_Opnd  => X_Addr,\n+                    Right_Opnd => Y_Addr),\n+                Right_Opnd =>\n+                  Make_Op_Eq (Loc,\n+                    Left_Opnd  => X_Size,\n+                    Right_Opnd => Y_Size)));\n          end if;\n \n          Analyze_And_Resolve (N, Standard_Boolean);\n@@ -3575,16 +3579,14 @@ package body Exp_Attr is\n \n       --  X'Img is expanded to typ'Image (X), where typ is the type of X\n \n-      when Attribute_Img => Img :\n-      begin\n+      when Attribute_Img =>\n          Rewrite (N,\n            Make_Attribute_Reference (Loc,\n              Prefix         => New_Occurrence_Of (Ptyp, Loc),\n              Attribute_Name => Name_Image,\n              Expressions    => New_List (Relocate_Node (Pref))));\n \n          Analyze_And_Resolve (N, Standard_String);\n-      end Img;\n \n       -----------\n       -- Input --\n@@ -3896,21 +3898,19 @@ package body Exp_Attr is\n       --  that the back end always treats fixed-point as equivalent to the\n       --  corresponding integer type anyway.\n \n-      when Attribute_Integer_Value => Integer_Value :\n-      begin\n+      when Attribute_Integer_Value =>\n          Rewrite (N,\n            Make_Type_Conversion (Loc,\n              Subtype_Mark => New_Occurrence_Of (Entity (Pref), Loc),\n              Expression   => Relocate_Node (First (Exprs))));\n          Set_Etype (N, Entity (Pref));\n          Set_Analyzed (N);\n \n-      --  Note: it might appear that a properly analyzed unchecked conversion\n-      --  would be just fine here, but that's not the case, since the full\n-      --  range checks performed by the following call are critical.\n+         --  Note: it might appear that a properly analyzed unchecked\n+         --  conversion would be just fine here, but that's not the case, since\n+         --  the full range check performed by the following call is critical.\n \n          Apply_Type_Conversion_Checks (N);\n-      end Integer_Value;\n \n       -------------------\n       -- Invalid_Value --\n@@ -4239,34 +4239,31 @@ package body Exp_Attr is\n       --           (Integer'Integer_Value (typ'First),\n       --            Integer'Integer_Value (typ'Last)));\n \n-      when Attribute_Mantissa => Mantissa : begin\n+      when Attribute_Mantissa =>\n          Rewrite (N,\n            Convert_To (Typ,\n              Make_Function_Call (Loc,\n-               Name => New_Occurrence_Of (RTE (RE_Mantissa_Value), Loc),\n+               Name                   =>\n+                 New_Occurrence_Of (RTE (RE_Mantissa_Value), Loc),\n \n                Parameter_Associations => New_List (\n-\n                  Make_Attribute_Reference (Loc,\n-                   Prefix => New_Occurrence_Of (Standard_Integer, Loc),\n+                   Prefix         => New_Occurrence_Of (Standard_Integer, Loc),\n                    Attribute_Name => Name_Integer_Value,\n-                   Expressions => New_List (\n-\n+                   Expressions    => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix => New_Occurrence_Of (Ptyp, Loc),\n+                       Prefix         => New_Occurrence_Of (Ptyp, Loc),\n                        Attribute_Name => Name_First))),\n \n                  Make_Attribute_Reference (Loc,\n-                   Prefix => New_Occurrence_Of (Standard_Integer, Loc),\n+                   Prefix         => New_Occurrence_Of (Standard_Integer, Loc),\n                    Attribute_Name => Name_Integer_Value,\n-                   Expressions => New_List (\n-\n+                   Expressions    => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix => New_Occurrence_Of (Ptyp, Loc),\n+                       Prefix         => New_Occurrence_Of (Ptyp, Loc),\n                        Attribute_Name => Name_Last)))))));\n \n          Analyze_And_Resolve (N, Typ);\n-      end Mantissa;\n \n       ---------\n       -- Max --\n@@ -4363,7 +4360,7 @@ package body Exp_Attr is\n \n       when Attribute_Mechanism_Code =>\n \n-         --  We must replace the prefix i the renamed case\n+         --  We must replace the prefix in the renamed case\n \n          if Is_Entity_Name (Pref)\n            and then Present (Alias (Entity (Pref)))\n@@ -4970,8 +4967,7 @@ package body Exp_Attr is\n       --  For integer types, Pos is equivalent to a simple integer\n       --  conversion and we rewrite it as such\n \n-      when Attribute_Pos => Pos :\n-      declare\n+      when Attribute_Pos => Pos : declare\n          Etyp : Entity_Id := Base_Type (Entity (Pref));\n \n       begin\n@@ -5023,8 +5019,7 @@ package body Exp_Attr is\n       --  the computation up to the back end, since we don't know what layout\n       --  will be chosen.\n \n-      when Attribute_Position => Position_Attr :\n-      declare\n+      when Attribute_Position => Position_Attr : declare\n          CE : constant Entity_Id := Entity (Selector_Name (Pref));\n \n       begin\n@@ -5067,8 +5062,7 @@ package body Exp_Attr is\n       --  2. For floating-point, generate call to attribute function.\n       --  3. For other cases, deal with constraint checking.\n \n-      when Attribute_Pred => Pred :\n-      declare\n+      when Attribute_Pred => Pred : declare\n          Etyp : constant Entity_Id := Base_Type (Ptyp);\n \n       begin\n@@ -5175,117 +5169,107 @@ package body Exp_Attr is\n       --  about complications that would other arise from X'Priority'Access,\n       --  which is illegal, because of the lack of aliasing.\n \n-      when Attribute_Priority =>\n-         declare\n-            Call           : Node_Id;\n-            Conctyp        : Entity_Id;\n-            Object_Parm    : Node_Id;\n-            Subprg         : Entity_Id;\n-            RT_Subprg_Name : Node_Id;\n+      when Attribute_Priority => Priority : declare\n+         Call           : Node_Id;\n+         Conctyp        : Entity_Id;\n+         New_Itype      : Entity_Id;\n+         Object_Parm    : Node_Id;\n+         Subprg         : Entity_Id;\n+         RT_Subprg_Name : Node_Id;\n \n-         begin\n-            --  Look for the enclosing concurrent type\n-\n-            Conctyp := Current_Scope;\n-            while not Is_Concurrent_Type (Conctyp) loop\n-               Conctyp := Scope (Conctyp);\n-            end loop;\n+      begin\n+         --  Look for the enclosing concurrent type\n \n-            pragma Assert (Is_Protected_Type (Conctyp));\n+         Conctyp := Current_Scope;\n+         while not Is_Concurrent_Type (Conctyp) loop\n+            Conctyp := Scope (Conctyp);\n+         end loop;\n \n-            --  Generate the actual of the call\n+         pragma Assert (Is_Protected_Type (Conctyp));\n \n-            Subprg := Current_Scope;\n-            while not Present (Protected_Body_Subprogram (Subprg)) loop\n-               Subprg := Scope (Subprg);\n-            end loop;\n+         --  Generate the actual of the call\n \n-            --  Use of 'Priority inside protected entries and barriers (in\n-            --  both cases the type of the first formal of their expanded\n-            --  subprogram is Address)\n+         Subprg := Current_Scope;\n+         while not Present (Protected_Body_Subprogram (Subprg)) loop\n+            Subprg := Scope (Subprg);\n+         end loop;\n \n-            if Etype (First_Entity (Protected_Body_Subprogram (Subprg))) =\n-                 RTE (RE_Address)\n-            then\n-               declare\n-                  New_Itype : Entity_Id;\n+         --  Use of 'Priority inside protected entries and barriers (in both\n+         --  cases the type of the first formal of their expanded subprogram\n+         --  is Address)\n \n-               begin\n-                  --  In the expansion of protected entries the type of the\n-                  --  first formal of the Protected_Body_Subprogram is an\n-                  --  Address. In order to reference the _object component\n-                  --  we generate:\n+         if Etype (First_Entity (Protected_Body_Subprogram (Subprg))) =\n+              RTE (RE_Address)\n+         then\n+            --  In the expansion of protected entries the type of the first\n+            --  formal of the Protected_Body_Subprogram is an Address. In order\n+            --  to reference the _object component we generate:\n \n-                  --    type T is access p__ptTV;\n-                  --    freeze T []\n+            --    type T is access p__ptTV;\n+            --    freeze T []\n \n-                  New_Itype := Create_Itype (E_Access_Type, N);\n-                  Set_Etype (New_Itype, New_Itype);\n-                  Set_Directly_Designated_Type (New_Itype,\n-                    Corresponding_Record_Type (Conctyp));\n-                  Freeze_Itype (New_Itype, N);\n+            New_Itype := Create_Itype (E_Access_Type, N);\n+            Set_Etype (New_Itype, New_Itype);\n+            Set_Directly_Designated_Type (New_Itype,\n+              Corresponding_Record_Type (Conctyp));\n+            Freeze_Itype (New_Itype, N);\n \n-                  --  Generate:\n-                  --    T!(O)._object'unchecked_access\n+            --  Generate:\n+            --    T!(O)._object'unchecked_access\n \n-                  Object_Parm :=\n-                    Make_Attribute_Reference (Loc,\n-                      Prefix =>\n-                        Make_Selected_Component (Loc,\n-                          Prefix =>\n-                            Unchecked_Convert_To (New_Itype,\n-                              New_Occurrence_Of\n-                                (First_Entity\n-                                  (Protected_Body_Subprogram (Subprg)),\n-                                 Loc)),\n-                          Selector_Name =>\n-                            Make_Identifier (Loc, Name_uObject)),\n-                       Attribute_Name => Name_Unchecked_Access);\n-               end;\n+            Object_Parm :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix          =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        =>\n+                      Unchecked_Convert_To (New_Itype,\n+                        New_Occurrence_Of\n+                          (First_Entity (Protected_Body_Subprogram (Subprg)),\n+                           Loc)),\n+                    Selector_Name => Make_Identifier (Loc, Name_uObject)),\n+                 Attribute_Name => Name_Unchecked_Access);\n \n-            --  Use of 'Priority inside a protected subprogram\n+         --  Use of 'Priority inside a protected subprogram\n \n-            else\n-               Object_Parm :=\n-                 Make_Attribute_Reference (Loc,\n-                    Prefix =>\n-                      Make_Selected_Component (Loc,\n-                        Prefix => New_Occurrence_Of\n-                                    (First_Entity\n-                                      (Protected_Body_Subprogram (Subprg)),\n-                                       Loc),\n-                        Selector_Name => Make_Identifier (Loc, Name_uObject)),\n-                    Attribute_Name => Name_Unchecked_Access);\n-            end if;\n+         else\n+            Object_Parm :=\n+              Make_Attribute_Reference (Loc,\n+                 Prefix         =>\n+                   Make_Selected_Component (Loc,\n+                     Prefix        =>\n+                       New_Occurrence_Of\n+                         (First_Entity (Protected_Body_Subprogram (Subprg)),\n+                         Loc),\n+                     Selector_Name => Make_Identifier (Loc, Name_uObject)),\n+                 Attribute_Name => Name_Unchecked_Access);\n+         end if;\n \n-            --  Select the appropriate run-time subprogram\n+         --  Select the appropriate run-time subprogram\n \n-            if Number_Entries (Conctyp) = 0 then\n-               RT_Subprg_Name :=\n-                 New_Occurrence_Of (RTE (RE_Get_Ceiling), Loc);\n-            else\n-               RT_Subprg_Name :=\n-                 New_Occurrence_Of (RTE (RO_PE_Get_Ceiling), Loc);\n-            end if;\n+         if Number_Entries (Conctyp) = 0 then\n+            RT_Subprg_Name := New_Occurrence_Of (RTE (RE_Get_Ceiling), Loc);\n+         else\n+            RT_Subprg_Name := New_Occurrence_Of (RTE (RO_PE_Get_Ceiling), Loc);\n+         end if;\n \n-            Call :=\n-              Make_Function_Call (Loc,\n-                Name => RT_Subprg_Name,\n-                Parameter_Associations => New_List (Object_Parm));\n+         Call :=\n+           Make_Function_Call (Loc,\n+             Name                   => RT_Subprg_Name,\n+             Parameter_Associations => New_List (Object_Parm));\n \n-            Rewrite (N, Call);\n+         Rewrite (N, Call);\n \n-            --  Avoid the generation of extra checks on the pointer to the\n-            --  protected object.\n+         --  Avoid the generation of extra checks on the pointer to the\n+         --  protected object.\n \n-            Analyze_And_Resolve (N, Typ, Suppress => Access_Check);\n-         end;\n+         Analyze_And_Resolve (N, Typ, Suppress => Access_Check);\n+      end Priority;\n \n       ------------------\n       -- Range_Length --\n       ------------------\n \n-      when Attribute_Range_Length => Range_Length : begin\n+      when Attribute_Range_Length =>\n \n          --  The only special processing required is for the case where\n          --  Range_Length is applied to an enumeration type with holes.\n@@ -5305,25 +5289,27 @@ package body Exp_Attr is\n          then\n             Rewrite (N,\n               Make_Op_Add (Loc,\n-                Left_Opnd =>\n+                Left_Opnd  =>\n                   Make_Op_Subtract (Loc,\n-                    Left_Opnd =>\n+                    Left_Opnd  =>\n                       Make_Attribute_Reference (Loc,\n                         Attribute_Name => Name_Pos,\n-                        Prefix => New_Occurrence_Of (Ptyp, Loc),\n-                        Expressions => New_List (\n+                        Prefix         => New_Occurrence_Of (Ptyp, Loc),\n+                        Expressions    => New_List (\n                           Make_Attribute_Reference (Loc,\n                             Attribute_Name => Name_Last,\n-                            Prefix => New_Occurrence_Of (Ptyp, Loc)))),\n+                            Prefix         =>\n+                              New_Occurrence_Of (Ptyp, Loc)))),\n \n                     Right_Opnd =>\n                       Make_Attribute_Reference (Loc,\n                         Attribute_Name => Name_Pos,\n-                        Prefix => New_Occurrence_Of (Ptyp, Loc),\n-                        Expressions => New_List (\n+                        Prefix         => New_Occurrence_Of (Ptyp, Loc),\n+                        Expressions    => New_List (\n                           Make_Attribute_Reference (Loc,\n                             Attribute_Name => Name_First,\n-                            Prefix => New_Occurrence_Of (Ptyp, Loc))))),\n+                            Prefix         =>\n+                              New_Occurrence_Of (Ptyp, Loc))))),\n \n                 Right_Opnd => Make_Integer_Literal (Loc, 1)));\n \n@@ -5336,7 +5322,6 @@ package body Exp_Attr is\n          else\n             Apply_Universal_Integer_Attribute_Checks (N);\n          end if;\n-      end Range_Length;\n \n       ----------\n       -- Read --\n@@ -5627,241 +5612,247 @@ package body Exp_Attr is\n       -- Size --\n       ----------\n \n-      when Attribute_Size        |\n-           Attribute_Object_Size |\n-           Attribute_Value_Size  |\n-           Attribute_VADS_Size   => Size :\n-\n-      declare\n-         Siz      : Uint;\n-         New_Node : Node_Id;\n-\n-      begin\n-         --  Processing for VADS_Size case. Note that this processing removes\n-         --  all traces of VADS_Size from the tree, and completes all required\n-         --  processing for VADS_Size by translating the attribute reference\n-         --  to an appropriate Size or Object_Size reference.\n+      when Attribute_Object_Size\n+         | Attribute_Size\n+         | Attribute_Value_Size\n+         | Attribute_VADS_Size\n+      =>\n+         Size : declare\n+            Siz      : Uint;\n+            New_Node : Node_Id;\n \n-         if Id = Attribute_VADS_Size\n-           or else (Use_VADS_Size and then Id = Attribute_Size)\n-         then\n-            --  If the size is specified, then we simply use the specified\n-            --  size. This applies to both types and objects. The size of an\n-            --  object can be specified in the following ways:\n-\n-            --    An explicit size object is given for an object\n-            --    A component size is specified for an indexed component\n-            --    A component clause is specified for a selected component\n-            --    The object is a component of a packed composite object\n-\n-            --  If the size is specified, then VADS_Size of an object\n-\n-            if (Is_Entity_Name (Pref)\n-                 and then Present (Size_Clause (Entity (Pref))))\n-              or else\n-                (Nkind (Pref) = N_Component_Clause\n-                  and then (Present (Component_Clause\n-                                     (Entity (Selector_Name (Pref))))\n-                             or else Is_Packed (Etype (Prefix (Pref)))))\n-              or else\n-                (Nkind (Pref) = N_Indexed_Component\n-                  and then (Component_Size (Etype (Prefix (Pref))) /= 0\n-                             or else Is_Packed (Etype (Prefix (Pref)))))\n+         begin\n+            --  Processing for VADS_Size case. Note that this processing\n+            --  removes all traces of VADS_Size from the tree, and completes\n+            --  all required processing for VADS_Size by translating the\n+            --  attribute reference to an appropriate Size or Object_Size\n+            --  reference.\n+\n+            if Id = Attribute_VADS_Size\n+              or else (Use_VADS_Size and then Id = Attribute_Size)\n             then\n-               Set_Attribute_Name (N, Name_Size);\n+               --  If the size is specified, then we simply use the specified\n+               --  size. This applies to both types and objects. The size of an\n+               --  object can be specified in the following ways:\n+\n+               --    An explicit size object is given for an object\n+               --    A component size is specified for an indexed component\n+               --    A component clause is specified for a selected component\n+               --    The object is a component of a packed composite object\n+\n+               --  If the size is specified, then VADS_Size of an object\n+\n+               if (Is_Entity_Name (Pref)\n+                    and then Present (Size_Clause (Entity (Pref))))\n+                 or else\n+                   (Nkind (Pref) = N_Component_Clause\n+                     and then (Present (Component_Clause\n+                                        (Entity (Selector_Name (Pref))))\n+                                or else Is_Packed (Etype (Prefix (Pref)))))\n+                 or else\n+                   (Nkind (Pref) = N_Indexed_Component\n+                     and then (Component_Size (Etype (Prefix (Pref))) /= 0\n+                                or else Is_Packed (Etype (Prefix (Pref)))))\n+               then\n+                  Set_Attribute_Name (N, Name_Size);\n \n-            --  Otherwise if we have an object rather than a type, then the\n-            --  VADS_Size attribute applies to the type of the object, rather\n-            --  than the object itself. This is one of the respects in which\n-            --  VADS_Size differs from Size.\n+               --  Otherwise if we have an object rather than a type, then\n+               --  the VADS_Size attribute applies to the type of the object,\n+               --  rather than the object itself. This is one of the respects\n+               --  in which VADS_Size differs from Size.\n \n-            else\n-               if (not Is_Entity_Name (Pref)\n-                    or else not Is_Type (Entity (Pref)))\n-                 and then (Is_Scalar_Type (Ptyp) or else Is_Constrained (Ptyp))\n-               then\n-                  Rewrite (Pref, New_Occurrence_Of (Ptyp, Loc));\n-               end if;\n+               else\n+                  if (not Is_Entity_Name (Pref)\n+                       or else not Is_Type (Entity (Pref)))\n+                    and then (Is_Scalar_Type (Ptyp)\n+                               or else Is_Constrained (Ptyp))\n+                  then\n+                     Rewrite (Pref, New_Occurrence_Of (Ptyp, Loc));\n+                  end if;\n \n-               --  For a scalar type for which no size was explicitly given,\n-               --  VADS_Size means Object_Size. This is the other respect in\n-               --  which VADS_Size differs from Size.\n+                  --  For a scalar type for which no size was explicitly given,\n+                  --  VADS_Size means Object_Size. This is the other respect in\n+                  --  which VADS_Size differs from Size.\n \n-               if Is_Scalar_Type (Ptyp) and then No (Size_Clause (Ptyp)) then\n-                  Set_Attribute_Name (N, Name_Object_Size);\n+                  if Is_Scalar_Type (Ptyp)\n+                    and then No (Size_Clause (Ptyp))\n+                  then\n+                     Set_Attribute_Name (N, Name_Object_Size);\n \n-               --  In all other cases, Size and VADS_Size are the sane\n+                  --  In all other cases, Size and VADS_Size are the sane\n \n-               else\n-                  Set_Attribute_Name (N, Name_Size);\n+                  else\n+                     Set_Attribute_Name (N, Name_Size);\n+                  end if;\n                end if;\n             end if;\n-         end if;\n \n-         --  If the prefix is X'Class, we transform it into a direct reference\n-         --  to the class-wide type, because the back end must not see a 'Class\n-         --  reference.\n+            --  If the prefix is X'Class, transform it into a direct reference\n+            --  to the class-wide type, because the back end must not see a\n+            --  'Class reference.\n \n-         if Is_Entity_Name (Pref)\n-           and then Is_Class_Wide_Type (Entity (Pref))\n-         then\n-            Rewrite (Prefix (N), New_Occurrence_Of (Entity (Pref), Loc));\n-            return;\n+            if Is_Entity_Name (Pref)\n+              and then Is_Class_Wide_Type (Entity (Pref))\n+            then\n+               Rewrite (Prefix (N), New_Occurrence_Of (Entity (Pref), Loc));\n+               return;\n \n-         --  For X'Size applied to an object of a class-wide type, transform\n-         --  X'Size into a call to the primitive operation _Size applied to X.\n+            --  For X'Size applied to an object of a class-wide type, transform\n+            --  X'Size into a call to the primitive operation _Size applied to\n+            --  X.\n \n-         elsif Is_Class_Wide_Type (Ptyp) then\n+            elsif Is_Class_Wide_Type (Ptyp) then\n \n-            --  No need to do anything else compiling under restriction\n-            --  No_Dispatching_Calls. During the semantic analysis we\n-            --  already noted this restriction violation.\n+               --  No need to do anything else compiling under restriction\n+               --  No_Dispatching_Calls. During the semantic analysis we\n+               --  already noted this restriction violation.\n \n-            if Restriction_Active (No_Dispatching_Calls) then\n-               return;\n-            end if;\n+               if Restriction_Active (No_Dispatching_Calls) then\n+                  return;\n+               end if;\n \n-            New_Node :=\n-              Make_Function_Call (Loc,\n-                Name => New_Occurrence_Of\n-                  (Find_Prim_Op (Ptyp, Name_uSize), Loc),\n-                Parameter_Associations => New_List (Pref));\n+               New_Node :=\n+                 Make_Function_Call (Loc,\n+                   Name                  =>\n+                     New_Occurrence_Of (Find_Prim_Op (Ptyp, Name_uSize), Loc),\n+                  Parameter_Associations => New_List (Pref));\n \n-            if Typ /= Standard_Long_Long_Integer then\n+               if Typ /= Standard_Long_Long_Integer then\n \n-               --  The context is a specific integer type with which the\n-               --  original attribute was compatible. The function has a\n-               --  specific type as well, so to preserve the compatibility\n-               --  we must convert explicitly.\n+                  --  The context is a specific integer type with which the\n+                  --  original attribute was compatible. The function has a\n+                  --  specific type as well, so to preserve the compatibility\n+                  --  we must convert explicitly.\n \n-               New_Node := Convert_To (Typ, New_Node);\n-            end if;\n+                  New_Node := Convert_To (Typ, New_Node);\n+               end if;\n \n-            Rewrite (N, New_Node);\n-            Analyze_And_Resolve (N, Typ);\n-            return;\n+               Rewrite (N, New_Node);\n+               Analyze_And_Resolve (N, Typ);\n+               return;\n \n-         --  Case of known RM_Size of a type\n+            --  Case of known RM_Size of a type\n \n-         elsif (Id = Attribute_Size or else Id = Attribute_Value_Size)\n-           and then Is_Entity_Name (Pref)\n-           and then Is_Type (Entity (Pref))\n-           and then Known_Static_RM_Size (Entity (Pref))\n-         then\n-            Siz := RM_Size (Entity (Pref));\n+            elsif (Id = Attribute_Size or else Id = Attribute_Value_Size)\n+              and then Is_Entity_Name (Pref)\n+              and then Is_Type (Entity (Pref))\n+              and then Known_Static_RM_Size (Entity (Pref))\n+            then\n+               Siz := RM_Size (Entity (Pref));\n \n-         --  Case of known Esize of a type\n+            --  Case of known Esize of a type\n \n-         elsif Id = Attribute_Object_Size\n-           and then Is_Entity_Name (Pref)\n-           and then Is_Type (Entity (Pref))\n-           and then Known_Static_Esize (Entity (Pref))\n-         then\n-            Siz := Esize (Entity (Pref));\n+            elsif Id = Attribute_Object_Size\n+              and then Is_Entity_Name (Pref)\n+              and then Is_Type (Entity (Pref))\n+              and then Known_Static_Esize (Entity (Pref))\n+            then\n+               Siz := Esize (Entity (Pref));\n \n-         --  Case of known size of object\n+            --  Case of known size of object\n \n-         elsif Id = Attribute_Size\n-           and then Is_Entity_Name (Pref)\n-           and then Is_Object (Entity (Pref))\n-           and then Known_Esize (Entity (Pref))\n-           and then Known_Static_Esize (Entity (Pref))\n-         then\n-            Siz := Esize (Entity (Pref));\n+            elsif Id = Attribute_Size\n+              and then Is_Entity_Name (Pref)\n+              and then Is_Object (Entity (Pref))\n+              and then Known_Esize (Entity (Pref))\n+              and then Known_Static_Esize (Entity (Pref))\n+            then\n+               Siz := Esize (Entity (Pref));\n \n-         --  For an array component, we can do Size in the front end\n-         --  if the component_size of the array is set.\n+            --  For an array component, we can do Size in the front end if the\n+            --  component_size of the array is set.\n \n-         elsif Nkind (Pref) = N_Indexed_Component then\n-            Siz := Component_Size (Etype (Prefix (Pref)));\n+            elsif Nkind (Pref) = N_Indexed_Component then\n+               Siz := Component_Size (Etype (Prefix (Pref)));\n \n-         --  For a record component, we can do Size in the front end if there\n-         --  is a component clause, or if the record is packed and the\n-         --  component's size is known at compile time.\n+            --  For a record component, we can do Size in the front end if\n+            --  there is a component clause, or if the record is packed and the\n+            --  component's size is known at compile time.\n \n-         elsif Nkind (Pref) = N_Selected_Component then\n-            declare\n-               Rec  : constant Entity_Id := Etype (Prefix (Pref));\n-               Comp : constant Entity_Id := Entity (Selector_Name (Pref));\n+            elsif Nkind (Pref) = N_Selected_Component then\n+               declare\n+                  Rec  : constant Entity_Id := Etype (Prefix (Pref));\n+                  Comp : constant Entity_Id := Entity (Selector_Name (Pref));\n \n-            begin\n-               if Present (Component_Clause (Comp)) then\n-                  Siz := Esize (Comp);\n+               begin\n+                  if Present (Component_Clause (Comp)) then\n+                     Siz := Esize (Comp);\n \n-               elsif Is_Packed (Rec) then\n-                  Siz := RM_Size (Ptyp);\n+                  elsif Is_Packed (Rec) then\n+                     Siz := RM_Size (Ptyp);\n \n-               else\n-                  Apply_Universal_Integer_Attribute_Checks (N);\n-                  return;\n-               end if;\n-            end;\n+                  else\n+                     Apply_Universal_Integer_Attribute_Checks (N);\n+                     return;\n+                  end if;\n+               end;\n \n-         --  All other cases are handled by the back end\n+            --  All other cases are handled by the back end\n \n-         else\n-            Apply_Universal_Integer_Attribute_Checks (N);\n+            else\n+               Apply_Universal_Integer_Attribute_Checks (N);\n \n-            --  If Size is applied to a formal parameter that is of a packed\n-            --  array subtype, then apply Size to the actual subtype.\n+               --  If Size is applied to a formal parameter that is of a packed\n+               --  array subtype, then apply Size to the actual subtype.\n \n-            if Is_Entity_Name (Pref)\n-              and then Is_Formal (Entity (Pref))\n-              and then Is_Array_Type (Ptyp)\n-              and then Is_Packed (Ptyp)\n-            then\n-               Rewrite (N,\n-                 Make_Attribute_Reference (Loc,\n-                   Prefix =>\n-                     New_Occurrence_Of (Get_Actual_Subtype (Pref), Loc),\n-                   Attribute_Name => Name_Size));\n-               Analyze_And_Resolve (N, Typ);\n-            end if;\n+               if Is_Entity_Name (Pref)\n+                 and then Is_Formal (Entity (Pref))\n+                 and then Is_Array_Type (Ptyp)\n+                 and then Is_Packed (Ptyp)\n+               then\n+                  Rewrite (N,\n+                    Make_Attribute_Reference (Loc,\n+                      Prefix         =>\n+                        New_Occurrence_Of (Get_Actual_Subtype (Pref), Loc),\n+                      Attribute_Name => Name_Size));\n+                  Analyze_And_Resolve (N, Typ);\n+               end if;\n \n-            --  If Size applies to a dereference of an access to unconstrained\n-            --  packed array, the back end needs to see its unconstrained\n-            --  nominal type, but also a hint to the actual constrained type.\n+               --  If Size applies to a dereference of an access to\n+               --  unconstrained packed array, the back end needs to see its\n+               --  unconstrained nominal type, but also a hint to the actual\n+               --  constrained type.\n \n-            if Nkind (Pref) = N_Explicit_Dereference\n-              and then Is_Array_Type (Ptyp)\n-              and then not Is_Constrained (Ptyp)\n-              and then Is_Packed (Ptyp)\n-            then\n-               Set_Actual_Designated_Subtype (Pref,\n-                 Get_Actual_Subtype (Pref));\n-            end if;\n+               if Nkind (Pref) = N_Explicit_Dereference\n+                 and then Is_Array_Type (Ptyp)\n+                 and then not Is_Constrained (Ptyp)\n+                 and then Is_Packed (Ptyp)\n+               then\n+                  Set_Actual_Designated_Subtype (Pref,\n+                    Get_Actual_Subtype (Pref));\n+               end if;\n \n-            return;\n-         end if;\n+               return;\n+            end if;\n \n-         --  Common processing for record and array component case\n+            --  Common processing for record and array component case\n \n-         if Siz /= No_Uint and then Siz /= 0 then\n-            declare\n-               CS : constant Boolean := Comes_From_Source (N);\n+            if Siz /= No_Uint and then Siz /= 0 then\n+               declare\n+                  CS : constant Boolean := Comes_From_Source (N);\n \n-            begin\n-               Rewrite (N, Make_Integer_Literal (Loc, Siz));\n+               begin\n+                  Rewrite (N, Make_Integer_Literal (Loc, Siz));\n \n-               --  This integer literal is not a static expression. We do not\n-               --  call Analyze_And_Resolve here, because this would activate\n-               --  the circuit for deciding that a static value was out of\n-               --  range, and we don't want that.\n+                  --  This integer literal is not a static expression. We do\n+                  --  not call Analyze_And_Resolve here, because this would\n+                  --  activate the circuit for deciding that a static value\n+                  --  was out of range, and we don't want that.\n \n-               --  So just manually set the type, mark the expression as non-\n-               --  static, and then ensure that the result is checked properly\n-               --  if the attribute comes from source (if it was internally\n-               --  generated, we never need a constraint check).\n+                  --  So just manually set the type, mark the expression as\n+                  --  non-static, and then ensure that the result is checked\n+                  --  properly if the attribute comes from source (if it was\n+                  --  internally generated, we never need a constraint check).\n \n-               Set_Etype (N, Typ);\n-               Set_Is_Static_Expression (N, False);\n+                  Set_Etype (N, Typ);\n+                  Set_Is_Static_Expression (N, False);\n \n-               if CS then\n-                  Apply_Constraint_Check (N, Typ);\n-               end if;\n-            end;\n-         end if;\n-      end Size;\n+                  if CS then\n+                     Apply_Constraint_Check (N, Typ);\n+                  end if;\n+               end;\n+            end if;\n+         end Size;\n \n       ------------------\n       -- Storage_Pool --\n@@ -6071,7 +6062,6 @@ package body Exp_Attr is\n          Etyp : constant Entity_Id := Base_Type (Ptyp);\n \n       begin\n-\n          --  For enumeration types with non-standard representations, we\n          --  expand typ'Succ (x) into\n \n@@ -6241,8 +6231,8 @@ package body Exp_Attr is\n \n       --  Transforms 'Terminated attribute into a call to Terminated function\n \n-      when Attribute_Terminated => Terminated :\n-      begin\n+      when Attribute_Terminated => Terminated : begin\n+\n          --  The prefix of Terminated is of a task interface class-wide type.\n          --  Generate:\n          --    terminated (Task_Id (Pref._disp_get_task_id));\n@@ -6286,7 +6276,9 @@ package body Exp_Attr is\n       --  Transforms System'To_Address (X) and System.Address'Ref (X) into\n       --  unchecked conversion from (integral) type of X to type address.\n \n-      when Attribute_To_Address | Attribute_Ref =>\n+      when Attribute_Ref\n+         | Attribute_To_Address\n+      =>\n          Rewrite (N,\n            Unchecked_Convert_To (RTE (RE_Address),\n              Relocate_Node (First (Exprs))));\n@@ -6973,8 +6965,7 @@ package body Exp_Attr is\n       --  is in use such as Shift-JIS, then characters that cannot be\n       --  represented using this encoding will not appear in any case.\n \n-      when Attribute_Wide_Value => Wide_Value :\n-      begin\n+      when Attribute_Wide_Value =>\n          Rewrite (N,\n            Make_Attribute_Reference (Loc,\n              Prefix         => Pref,\n@@ -6991,7 +6982,6 @@ package body Exp_Attr is\n                      Intval => Int (Wide_Character_Encoding_Method)))))));\n \n          Analyze_And_Resolve (N, Typ);\n-      end Wide_Value;\n \n       ---------------------\n       -- Wide_Wide_Value --\n@@ -7011,16 +7001,15 @@ package body Exp_Attr is\n       --  It's not quite right where typ = Wide_Wide_Character, because the\n       --  encoding method may not cover the whole character type ???\n \n-      when Attribute_Wide_Wide_Value => Wide_Wide_Value :\n-      begin\n+      when Attribute_Wide_Wide_Value =>\n          Rewrite (N,\n            Make_Attribute_Reference (Loc,\n              Prefix         => Pref,\n              Attribute_Name => Name_Value,\n \n              Expressions    => New_List (\n                Make_Function_Call (Loc,\n-                 Name =>\n+                 Name                   =>\n                    New_Occurrence_Of\n                      (RTE (RE_Wide_Wide_String_To_String), Loc),\n \n@@ -7030,7 +7019,6 @@ package body Exp_Attr is\n                      Intval => Int (Wide_Character_Encoding_Method)))))));\n \n          Analyze_And_Resolve (N, Typ);\n-      end Wide_Wide_Value;\n \n       ---------------------\n       -- Wide_Wide_Width --\n@@ -7213,92 +7201,96 @@ package body Exp_Attr is\n \n       --  The back end also handles the non-class-wide cases of Size\n \n-      when Attribute_Bit_Order                    |\n-           Attribute_Code_Address                 |\n-           Attribute_Definite                     |\n-           Attribute_Deref                        |\n-           Attribute_Null_Parameter               |\n-           Attribute_Passed_By_Reference          |\n-           Attribute_Pool_Address                 |\n-           Attribute_Scalar_Storage_Order         =>\n+      when Attribute_Bit_Order\n+         | Attribute_Code_Address\n+         | Attribute_Definite\n+         | Attribute_Deref\n+         | Attribute_Null_Parameter\n+         | Attribute_Passed_By_Reference\n+         | Attribute_Pool_Address\n+         | Attribute_Scalar_Storage_Order\n+      =>\n          null;\n \n       --  The following attributes are also handled by the back end, but return\n       --  a universal integer result, so may need a conversion for checking\n       --  that the result is in range.\n \n-      when Attribute_Aft                          |\n-           Attribute_Max_Alignment_For_Allocation =>\n+      when Attribute_Aft\n+         | Attribute_Max_Alignment_For_Allocation\n+      =>\n          Apply_Universal_Integer_Attribute_Checks (N);\n \n       --  The following attributes should not appear at this stage, since they\n       --  have already been handled by the analyzer (and properly rewritten\n       --  with corresponding values or entities to represent the right values)\n \n-      when Attribute_Abort_Signal                 |\n-           Attribute_Address_Size                 |\n-           Attribute_Atomic_Always_Lock_Free      |\n-           Attribute_Base                         |\n-           Attribute_Class                        |\n-           Attribute_Compiler_Version             |\n-           Attribute_Default_Bit_Order            |\n-           Attribute_Default_Scalar_Storage_Order |\n-           Attribute_Delta                        |\n-           Attribute_Denorm                       |\n-           Attribute_Digits                       |\n-           Attribute_Emax                         |\n-           Attribute_Enabled                      |\n-           Attribute_Epsilon                      |\n-           Attribute_Fast_Math                    |\n-           Attribute_First_Valid                  |\n-           Attribute_Has_Access_Values            |\n-           Attribute_Has_Discriminants            |\n-           Attribute_Has_Tagged_Values            |\n-           Attribute_Large                        |\n-           Attribute_Last_Valid                   |\n-           Attribute_Library_Level                |\n-           Attribute_Lock_Free                    |\n-           Attribute_Machine_Emax                 |\n-           Attribute_Machine_Emin                 |\n-           Attribute_Machine_Mantissa             |\n-           Attribute_Machine_Overflows            |\n-           Attribute_Machine_Radix                |\n-           Attribute_Machine_Rounds               |\n-           Attribute_Maximum_Alignment            |\n-           Attribute_Model_Emin                   |\n-           Attribute_Model_Epsilon                |\n-           Attribute_Model_Mantissa               |\n-           Attribute_Model_Small                  |\n-           Attribute_Modulus                      |\n-           Attribute_Partition_ID                 |\n-           Attribute_Range                        |\n-           Attribute_Restriction_Set              |\n-           Attribute_Safe_Emax                    |\n-           Attribute_Safe_First                   |\n-           Attribute_Safe_Large                   |\n-           Attribute_Safe_Last                    |\n-           Attribute_Safe_Small                   |\n-           Attribute_Scale                        |\n-           Attribute_Signed_Zeros                 |\n-           Attribute_Small                        |\n-           Attribute_Storage_Unit                 |\n-           Attribute_Stub_Type                    |\n-           Attribute_System_Allocator_Alignment   |\n-           Attribute_Target_Name                  |\n-           Attribute_Type_Class                   |\n-           Attribute_Type_Key                     |\n-           Attribute_Unconstrained_Array          |\n-           Attribute_Universal_Literal_String     |\n-           Attribute_Wchar_T_Size                 |\n-           Attribute_Word_Size                    =>\n+      when Attribute_Abort_Signal\n+         | Attribute_Address_Size\n+         | Attribute_Atomic_Always_Lock_Free\n+         | Attribute_Base\n+         | Attribute_Class\n+         | Attribute_Compiler_Version\n+         | Attribute_Default_Bit_Order\n+         | Attribute_Default_Scalar_Storage_Order\n+         | Attribute_Delta\n+         | Attribute_Denorm\n+         | Attribute_Digits\n+         | Attribute_Emax\n+         | Attribute_Enabled\n+         | Attribute_Epsilon\n+         | Attribute_Fast_Math\n+         | Attribute_First_Valid\n+         | Attribute_Has_Access_Values\n+         | Attribute_Has_Discriminants\n+         | Attribute_Has_Tagged_Values\n+         | Attribute_Large\n+         | Attribute_Last_Valid\n+         | Attribute_Library_Level\n+         | Attribute_Lock_Free\n+         | Attribute_Machine_Emax\n+         | Attribute_Machine_Emin\n+         | Attribute_Machine_Mantissa\n+         | Attribute_Machine_Overflows\n+         | Attribute_Machine_Radix\n+         | Attribute_Machine_Rounds\n+         | Attribute_Maximum_Alignment\n+         | Attribute_Model_Emin\n+         | Attribute_Model_Epsilon\n+         | Attribute_Model_Mantissa\n+         | Attribute_Model_Small\n+         | Attribute_Modulus\n+         | Attribute_Partition_ID\n+         | Attribute_Range\n+         | Attribute_Restriction_Set\n+         | Attribute_Safe_Emax\n+         | Attribute_Safe_First\n+         | Attribute_Safe_Large\n+         | Attribute_Safe_Last\n+         | Attribute_Safe_Small\n+         | Attribute_Scale\n+         | Attribute_Signed_Zeros\n+         | Attribute_Small\n+         | Attribute_Storage_Unit\n+         | Attribute_Stub_Type\n+         | Attribute_System_Allocator_Alignment\n+         | Attribute_Target_Name\n+         | Attribute_Type_Class\n+         | Attribute_Type_Key\n+         | Attribute_Unconstrained_Array\n+         | Attribute_Universal_Literal_String\n+         | Attribute_Wchar_T_Size\n+         | Attribute_Word_Size\n+      =>\n          raise Program_Error;\n \n       --  The Asm_Input and Asm_Output attributes are not expanded at this\n       --  stage, but will be eliminated in the expansion of the Asm call, see\n       --  Exp_Intr for details. So the back end will never see these either.\n \n-      when Attribute_Asm_Input                    |\n-           Attribute_Asm_Output                   =>\n+      when Attribute_Asm_Input\n+         | Attribute_Asm_Output\n+      =>\n          null;\n       end case;\n "}, {"sha": "0e0bbca440eb2f2814e2c1afb92fdea417a057a0", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -113,7 +113,7 @@ package body Exp_Ch13 is\n                   and then Present (Expression (Decl))\n                   and then Nkind (Expression (Decl)) /= N_Null\n                   and then\n-                   not Comes_From_Source (Original_Node (Expression (Decl)))\n+                    not Comes_From_Source (Original_Node (Expression (Decl)))\n                then\n                   if Present (Base_Init_Proc (Typ))\n                     and then\n@@ -122,8 +122,8 @@ package body Exp_Ch13 is\n                      null;\n \n                   elsif Init_Or_Norm_Scalars\n-                    and then\n-                      (Is_Scalar_Type (Typ) or else Is_String_Type (Typ))\n+                    and then (Is_Scalar_Type (Typ)\n+                               or else Is_String_Type (Typ))\n                   then\n                      null;\n \n@@ -160,8 +160,7 @@ package body Exp_Ch13 is\n             --  integer literal (this simplifies things in Gigi).\n \n             if Nkind (Exp) /= N_Integer_Literal then\n-               Rewrite\n-                 (Exp, Make_Integer_Literal (Loc, Expr_Value (Exp)));\n+               Rewrite (Exp, Make_Integer_Literal (Loc, Expr_Value (Exp)));\n             end if;\n \n             --  A complex case arises if the alignment clause applies to an\n@@ -175,9 +174,10 @@ package body Exp_Ch13 is\n               and then not Is_Entity_Name (Renamed_Object (Ent))\n             then\n                declare\n-                  Loc      : constant Source_Ptr := Sloc (N);\n-                  Decl     : constant Node_Id    := Parent (Ent);\n-                  Temp     : constant Entity_Id  := Make_Temporary (Loc, 'T');\n+                  Decl : constant Node_Id    := Parent (Ent);\n+                  Loc  : constant Source_Ptr := Sloc (N);\n+                  Temp : constant Entity_Id  := Make_Temporary (Loc, 'T');\n+\n                   New_Decl : Node_Id;\n \n                begin\n@@ -226,7 +226,7 @@ package body Exp_Ch13 is\n                begin\n                   Assign :=\n                     Make_Assignment_Statement (Loc,\n-                      Name =>\n+                      Name       =>\n                         New_Occurrence_Of (Storage_Size_Variable (Ent), Loc),\n                       Expression =>\n                         Convert_To (RTE (RE_Size_Type), Expression (N)));\n@@ -266,9 +266,9 @@ package body Exp_Ch13 is\n                   Insert_Action (N,\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => V,\n-                      Object_Definition  =>\n+                      Object_Definition   =>\n                         New_Occurrence_Of (RTE (RE_Storage_Offset), Loc),\n-                      Expression =>\n+                      Expression          =>\n                         Convert_To (RTE (RE_Storage_Offset), Expression (N))));\n \n                   Set_Storage_Size_Variable (Ent, Entity_Id (V));\n@@ -279,7 +279,6 @@ package body Exp_Ch13 is\n \n          when others =>\n             null;\n-\n       end case;\n    end Expand_N_Attribute_Definition_Clause;\n "}, {"sha": "e6879a3c3582f96de2db3cebdd204c3b0fafaeaf", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3305,7 +3305,6 @@ package body Exp_Ch3 is\n             --  Remaining processing depends on type\n \n             case Ekind (Subtype_Mark_Id) is\n-\n                when Array_Kind =>\n                   Constrain_Array (S, Check_List);\n \n@@ -3327,7 +3326,7 @@ package body Exp_Ch3 is\n            Needs_Simple_Initialization (T)\n              and then not Is_RTE (T, RE_Tag)\n \n-               --  Ada 2005 (AI-251): Check also the tag of abstract interfaces\n+             --  Ada 2005 (AI-251): Check also the tag of abstract interfaces\n \n              and then not Is_RTE (T, RE_Interface_Tag);\n       end Component_Needs_Simple_Initialization;"}, {"sha": "b89d66c03f80de268a1127dc5e6534c669154324", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 85, "deletions": 84, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2140,47 +2140,47 @@ package body Exp_Ch4 is\n \n       if Llo /= No_Uint and then Rlo /= No_Uint then\n          case N_Op_Compare (Nkind (N)) is\n-         when N_Op_Eq =>\n-            if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n-               Set_True;\n-            elsif Llo > Rhi or else Lhi < Rlo then\n-               Set_False;\n-            end if;\n+            when N_Op_Eq =>\n+               if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n+                  Set_True;\n+               elsif Llo > Rhi or else Lhi < Rlo then\n+                  Set_False;\n+               end if;\n \n-         when N_Op_Ge =>\n-            if Llo >= Rhi then\n-               Set_True;\n-            elsif Lhi < Rlo then\n-               Set_False;\n-            end if;\n+            when N_Op_Ge =>\n+               if Llo >= Rhi then\n+                  Set_True;\n+               elsif Lhi < Rlo then\n+                  Set_False;\n+               end if;\n \n-         when N_Op_Gt =>\n-            if Llo > Rhi then\n-               Set_True;\n-            elsif Lhi <= Rlo then\n-               Set_False;\n-            end if;\n+            when N_Op_Gt =>\n+               if Llo > Rhi then\n+                  Set_True;\n+               elsif Lhi <= Rlo then\n+                  Set_False;\n+               end if;\n \n-         when N_Op_Le =>\n-            if Llo > Rhi then\n-               Set_False;\n-            elsif Lhi <= Rlo then\n-               Set_True;\n-            end if;\n+            when N_Op_Le =>\n+               if Llo > Rhi then\n+                  Set_False;\n+               elsif Lhi <= Rlo then\n+                  Set_True;\n+               end if;\n \n-         when N_Op_Lt =>\n-            if Llo >= Rhi then\n-               Set_False;\n-            elsif Lhi < Rlo then\n-               Set_True;\n-            end if;\n+            when N_Op_Lt =>\n+               if Llo >= Rhi then\n+                  Set_False;\n+               elsif Lhi < Rlo then\n+                  Set_True;\n+               end if;\n \n-         when N_Op_Ne =>\n-            if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n-               Set_False;\n-            elsif Llo > Rhi or else Lhi < Rlo then\n-               Set_True;\n-            end if;\n+            when N_Op_Ne =>\n+               if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n+                  Set_False;\n+               elsif Llo > Rhi or else Lhi < Rlo then\n+                  Set_True;\n+               end if;\n          end case;\n \n          --  All done if we did the rewrite\n@@ -13170,56 +13170,57 @@ package body Exp_Ch4 is\n \n          begin\n             case N_Op_Compare (Nkind (N)) is\n-            when N_Op_Eq =>\n-               True_Result  := Res = EQ;\n-               False_Result := Res = LT or else Res = GT or else Res = NE;\n-\n-            when N_Op_Ge =>\n-               True_Result  := Res in Compare_GE;\n-               False_Result := Res = LT;\n-\n-               if Res = LE\n-                 and then Constant_Condition_Warnings\n-                 and then Comes_From_Source (Original_Node (N))\n-                 and then Nkind (Original_Node (N)) = N_Op_Ge\n-                 and then not In_Instance\n-                 and then Is_Integer_Type (Etype (Left_Opnd (N)))\n-                 and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n-               then\n-                  Error_Msg_N\n-                    (\"can never be greater than, could replace by \"\"'=\"\"?c?\",\n-                     N);\n-                  Warning_Generated := True;\n-               end if;\n-\n-            when N_Op_Gt =>\n-               True_Result  := Res = GT;\n-               False_Result := Res in Compare_LE;\n-\n-            when N_Op_Lt =>\n-               True_Result  := Res = LT;\n-               False_Result := Res in Compare_GE;\n-\n-            when N_Op_Le =>\n-               True_Result  := Res in Compare_LE;\n-               False_Result := Res = GT;\n+               when N_Op_Eq =>\n+                  True_Result  := Res = EQ;\n+                  False_Result := Res = LT or else Res = GT or else Res = NE;\n+\n+               when N_Op_Ge =>\n+                  True_Result  := Res in Compare_GE;\n+                  False_Result := Res = LT;\n+\n+                  if Res = LE\n+                    and then Constant_Condition_Warnings\n+                    and then Comes_From_Source (Original_Node (N))\n+                    and then Nkind (Original_Node (N)) = N_Op_Ge\n+                    and then not In_Instance\n+                    and then Is_Integer_Type (Etype (Left_Opnd (N)))\n+                    and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n+                  then\n+                     Error_Msg_N\n+                       (\"can never be greater than, could replace by \"\n+                        & \"\"\"'=\"\"?c?\", N);\n+                     Warning_Generated := True;\n+                  end if;\n \n-               if Res = GE\n-                 and then Constant_Condition_Warnings\n-                 and then Comes_From_Source (Original_Node (N))\n-                 and then Nkind (Original_Node (N)) = N_Op_Le\n-                 and then not In_Instance\n-                 and then Is_Integer_Type (Etype (Left_Opnd (N)))\n-                 and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n-               then\n-                  Error_Msg_N\n-                    (\"can never be less than, could replace by \"\"'=\"\"?c?\", N);\n-                  Warning_Generated := True;\n-               end if;\n+               when N_Op_Gt =>\n+                  True_Result  := Res = GT;\n+                  False_Result := Res in Compare_LE;\n+\n+               when N_Op_Lt =>\n+                  True_Result  := Res = LT;\n+                  False_Result := Res in Compare_GE;\n+\n+               when N_Op_Le =>\n+                  True_Result  := Res in Compare_LE;\n+                  False_Result := Res = GT;\n+\n+                  if Res = GE\n+                    and then Constant_Condition_Warnings\n+                    and then Comes_From_Source (Original_Node (N))\n+                    and then Nkind (Original_Node (N)) = N_Op_Le\n+                    and then not In_Instance\n+                    and then Is_Integer_Type (Etype (Left_Opnd (N)))\n+                    and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n+                  then\n+                     Error_Msg_N\n+                       (\"can never be less than, could replace by \"\"'=\"\"?c?\",\n+                        N);\n+                     Warning_Generated := True;\n+                  end if;\n \n-            when N_Op_Ne =>\n-               True_Result  := Res = NE or else Res = GT or else Res = LT;\n-               False_Result := Res = EQ;\n+               when N_Op_Ne =>\n+                  True_Result  := Res = NE or else Res = GT or else Res = LT;\n+                  False_Result := Res = EQ;\n             end case;\n \n             --  If this is the first iteration, then we actually convert the"}, {"sha": "c372a726cf0e8431f8b46c85208a1baf29c57782", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -327,7 +327,10 @@ package body Exp_Ch5 is\n       function Is_Non_Local_Array (Exp : Node_Id) return Boolean is\n       begin\n          case Nkind (Exp) is\n-            when N_Indexed_Component | N_Selected_Component | N_Slice =>\n+            when N_Indexed_Component\n+               | N_Selected_Component\n+               | N_Slice\n+            =>\n                return Is_Non_Local_Array (Prefix (Exp));\n \n             when others =>\n@@ -739,10 +742,15 @@ package body Exp_Ch5 is\n                end if;\n \n                case Cresult is\n-                  when LT | LE | EQ => Set_Backwards_OK (N, False);\n-                  when GT | GE      => Set_Forwards_OK  (N, False);\n-                  when NE | Unknown => Set_Backwards_OK (N, False);\n-                                       Set_Forwards_OK  (N, False);\n+                  when EQ | LE | LT =>\n+                     Set_Backwards_OK (N, False);\n+\n+                  when GE | GT =>\n+                     Set_Forwards_OK  (N, False);\n+\n+                  when NE | Unknown =>\n+                     Set_Backwards_OK (N, False);\n+                     Set_Forwards_OK  (N, False);\n                end case;\n             end if;\n          end if;"}, {"sha": "7c629f84693f0d09ad306c26de33d9b81dfcd8f7", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -589,17 +589,22 @@ package body Exp_Ch6 is\n    function BIP_Formal_Suffix (Kind : BIP_Formal_Kind) return String is\n    begin\n       case Kind is\n-         when BIP_Alloc_Form          =>\n+         when BIP_Alloc_Form =>\n             return \"BIPalloc\";\n-         when BIP_Storage_Pool        =>\n+\n+         when BIP_Storage_Pool =>\n             return \"BIPstoragepool\";\n+\n          when BIP_Finalization_Master =>\n             return \"BIPfinalizationmaster\";\n-         when BIP_Task_Master         =>\n+\n+         when BIP_Task_Master =>\n             return \"BIPtaskmaster\";\n-         when BIP_Activation_Chain    =>\n+\n+         when BIP_Activation_Chain =>\n             return \"BIPactivationchain\";\n-         when BIP_Object_Access       =>\n+\n+         when BIP_Object_Access =>\n             return \"BIPaccess\";\n       end case;\n    end BIP_Formal_Suffix;\n@@ -3036,7 +3041,6 @@ package body Exp_Ch6 is\n \n             else\n                case Nkind (Prev_Orig) is\n-\n                   when N_Attribute_Reference =>\n                      case Get_Attribute_Id (Attribute_Name (Prev_Orig)) is\n \n@@ -3080,8 +3084,9 @@ package body Exp_Ch6 is\n \n                         --  Treat the unchecked attributes as library-level\n \n-                        when Attribute_Unchecked_Access |\n-                           Attribute_Unrestricted_Access =>\n+                        when Attribute_Unchecked_Access\n+                           | Attribute_Unrestricted_Access\n+                        =>\n                            Add_Extra_Actual\n                              (Make_Integer_Literal (Loc,\n                                 Intval => Scope_Depth (Standard_Standard)),\n@@ -3367,7 +3372,9 @@ package body Exp_Ch6 is\n \n                   Defer := True;\n \n-               when N_Object_Declaration | N_Object_Renaming_Declaration =>\n+               when N_Object_Declaration\n+                  | N_Object_Renaming_Declaration\n+               =>\n                   declare\n                      Def_Id : constant Entity_Id :=\n                                 Defining_Identifier (Ancestor);\n@@ -3404,8 +3411,8 @@ package body Exp_Ch6 is\n                      Level :=\n                        New_Occurrence_Of\n                          (Extra_Accessibility_Of_Result\n-                            (Return_Applies_To\n-                               (Return_Statement_Entity (Ancestor))), Loc);\n+                           (Return_Applies_To\n+                             (Return_Statement_Entity (Ancestor))), Loc);\n                   end if;\n \n                when others =>\n@@ -3422,8 +3429,9 @@ package body Exp_Ch6 is\n                   --  calls to subps whose enclosing scope is unknown (e.g.,\n                   --  Anon_Access_To_Subp_Param.all)?\n \n-                  Level := Make_Integer_Literal (Loc,\n-                             Scope_Depth (Current_Scope) + 1);\n+                  Level :=\n+                    Make_Integer_Literal (Loc,\n+                      Intval => Scope_Depth (Current_Scope) + 1);\n                end if;\n \n                Add_Extra_Actual\n@@ -5210,16 +5218,17 @@ package body Exp_Ch6 is\n       --  Distinguish the function and non-function cases:\n \n       case Ekind (Return_Applies_To (Return_Statement_Entity (N))) is\n-\n-         when E_Function          |\n-              E_Generic_Function  =>\n+         when E_Function\n+            | E_Generic_Function\n+         =>\n             Expand_Simple_Function_Return (N);\n \n-         when E_Procedure         |\n-              E_Generic_Procedure |\n-              E_Entry             |\n-              E_Entry_Family      |\n-              E_Return_Statement =>\n+         when E_Entry\n+            | E_Entry_Family\n+            | E_Generic_Procedure\n+            | E_Procedure\n+            | E_Return_Statement\n+         =>\n             Expand_Non_Function_Return (N);\n \n          when others =>\n@@ -6735,7 +6744,6 @@ package body Exp_Ch6 is\n \n             case Nkind (Discrim_Source) is\n                when N_Defining_Identifier =>\n-\n                   pragma Assert (Is_Composite_Type (Discrim_Source)\n                                   and then Has_Discriminants (Discrim_Source)\n                                   and then Is_Constrained (Discrim_Source));\n@@ -6761,8 +6769,9 @@ package body Exp_Ch6 is\n                      end loop;\n                   end;\n \n-               when N_Aggregate | N_Extension_Aggregate =>\n-\n+               when N_Aggregate\n+                  | N_Extension_Aggregate\n+               =>\n                   --  Unimplemented: extension aggregate case where discrims\n                   --  come from ancestor part, not extension part.\n \n@@ -6857,7 +6866,6 @@ package body Exp_Ch6 is\n                   null;\n \n                when others =>\n-\n                   declare\n                      Level : constant Node_Id :=\n                                Make_Integer_Literal (Loc,\n@@ -6875,7 +6883,6 @@ package body Exp_Ch6 is\n                      Set_Etype (Level, Standard_Natural);\n                      Check_Against_Result_Level (Level);\n                   end;\n-\n             end case;\n          end;\n       end if;"}, {"sha": "c9b487083d6a97d545684967c48ab23c8740c50d", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6061,8 +6061,9 @@ package body Exp_Ch7 is\n             --  context of a Timed_Entry_Call. In this case we wrap the entire\n             --  timed entry call.\n \n-            when N_Entry_Call_Statement     |\n-                 N_Procedure_Call_Statement =>\n+            when N_Entry_Call_Statement\n+               | N_Procedure_Call_Statement\n+            =>\n                if Nkind (Parent (The_Parent)) = N_Entry_Call_Alternative\n                  and then Nkind_In (Parent (Parent (The_Parent)),\n                                     N_Timed_Entry_Call,\n@@ -6077,34 +6078,35 @@ package body Exp_Ch7 is\n             --  even if they are not really wrapped. For further details, see\n             --  Wrap_Transient_Declaration.\n \n-            when N_Object_Declaration          |\n-                 N_Object_Renaming_Declaration |\n-                 N_Subtype_Declaration         =>\n+            when N_Object_Declaration\n+               | N_Object_Renaming_Declaration\n+               | N_Subtype_Declaration\n+            =>\n                return The_Parent;\n \n             --  The expression itself is to be wrapped if its parent is a\n             --  compound statement or any other statement where the expression\n             --  is known to be scalar.\n \n-            when N_Accept_Alternative               |\n-                 N_Attribute_Definition_Clause      |\n-                 N_Case_Statement                   |\n-                 N_Code_Statement                   |\n-                 N_Delay_Alternative                |\n-                 N_Delay_Until_Statement            |\n-                 N_Delay_Relative_Statement         |\n-                 N_Discriminant_Association         |\n-                 N_Elsif_Part                       |\n-                 N_Entry_Body_Formal_Part           |\n-                 N_Exit_Statement                   |\n-                 N_If_Statement                     |\n-                 N_Iteration_Scheme                 |\n-                 N_Terminate_Alternative            =>\n+            when N_Accept_Alternative\n+               | N_Attribute_Definition_Clause\n+               | N_Case_Statement\n+               | N_Code_Statement\n+               | N_Delay_Alternative\n+               | N_Delay_Until_Statement\n+               | N_Delay_Relative_Statement\n+               | N_Discriminant_Association\n+               | N_Elsif_Part\n+               | N_Entry_Body_Formal_Part\n+               | N_Exit_Statement\n+               | N_If_Statement\n+               | N_Iteration_Scheme\n+               | N_Terminate_Alternative\n+            =>\n                pragma Assert (Present (P));\n                return P;\n \n             when N_Attribute_Reference =>\n-\n                if Is_Procedure_Attribute_Name\n                     (Attribute_Name (The_Parent))\n                then\n@@ -6128,9 +6130,10 @@ package body Exp_Ch7 is\n             --  The following nodes contains \"dummy calls\" which don't need to\n             --  be wrapped.\n \n-            when N_Parameter_Specification     |\n-                 N_Discriminant_Specification  |\n-                 N_Component_Declaration       =>\n+            when N_Component_Declaration\n+               | N_Discriminant_Specification\n+               | N_Parameter_Specification\n+            =>\n                return Empty;\n \n             --  The return statement is not to be wrapped when the function\n@@ -6155,10 +6158,11 @@ package body Exp_Ch7 is\n             --  situation that are not detected yet (such as a dynamic string\n             --  in a pragma export)\n \n-            when N_Subprogram_Body     |\n-                 N_Package_Declaration |\n-                 N_Package_Body        |\n-                 N_Block_Statement     =>\n+            when N_Block_Statement\n+               | N_Package_Body\n+               | N_Package_Declaration\n+               | N_Subprogram_Body\n+            =>\n                return Empty;\n \n             --  Otherwise continue the search\n@@ -7655,8 +7659,9 @@ package body Exp_Ch7 is\n          when Address_Case =>\n             return Make_Finalize_Address_Stmts (Typ);\n \n-         when Adjust_Case   |\n-              Finalize_Case =>\n+         when Adjust_Case\n+            | Finalize_Case\n+         =>\n             return Build_Adjust_Or_Finalize_Statements (Typ);\n \n          when Initialize_Case =>"}, {"sha": "7cae0e5581f08e98320ce04a0c428a0371a6ad73", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 32, "deletions": 30, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -4620,12 +4620,12 @@ package body Exp_Ch9 is\n \n                   --  Some additional statements for protected entry calls\n \n-                  --     Protected_Entry_Call (\n-                  --       Object => po._object'Access,\n-                  --       E => <entry index>;\n-                  --       Uninterpreted_Data => P'Address;\n-                  --       Mode => Simple_Call;\n-                  --       Block => Bnn);\n+                  --     Protected_Entry_Call\n+                  --       (Object             => po._object'Access,\n+                  --        E                  => <entry index>;\n+                  --        Uninterpreted_Data => P'Address;\n+                  --        Mode               => Simple_Call;\n+                  --        Block              => Bnn);\n \n                   Call :=\n                     Make_Procedure_Call_Statement (Loc,\n@@ -4642,9 +4642,10 @@ package body Exp_Ch9 is\n                         New_Occurrence_Of (Comm_Name, Loc)));\n \n                when System_Tasking_Protected_Objects_Single_Entry =>\n-                  --     Protected_Single_Entry_Call (\n-                  --       Object => po._object'Access,\n-                  --       Uninterpreted_Data => P'Address);\n+\n+                  --     Protected_Single_Entry_Call\n+                  --       (Object             => po._object'Access,\n+                  --        Uninterpreted_Data => P'Address);\n \n                   Call :=\n                     Make_Procedure_Call_Statement (Loc,\n@@ -6020,23 +6021,25 @@ package body Exp_Ch9 is\n       function Is_Pure_Barrier (N : Node_Id) return Traverse_Result is\n       begin\n          case Nkind (N) is\n-            when N_Expanded_Name |\n-                 N_Identifier    =>\n+            when N_Expanded_Name\n+               | N_Identifier\n+            =>\n                if No (Entity (N)) then\n                   return Abandon;\n                end if;\n \n                case Ekind (Entity (N)) is\n-                  when E_Constant            |\n-                       E_Discriminant        |\n-                       E_Named_Integer       |\n-                       E_Named_Real          |\n-                       E_Enumeration_Literal =>\n+                  when E_Constant\n+                     | E_Discriminant\n+                     | E_Enumeration_Literal\n+                     | E_Named_Integer\n+                     | E_Named_Real\n+                  =>\n                      return OK;\n \n-                  when E_Component |\n-                       E_Variable  =>\n-\n+                  when E_Component\n+                     | E_Variable\n+                  =>\n                      --  A variable in the protected type is expanded as a\n                      --  component.\n \n@@ -6048,13 +6051,15 @@ package body Exp_Ch9 is\n                      null;\n                end case;\n \n-            when N_Integer_Literal   |\n-                 N_Real_Literal      |\n-                 N_Character_Literal =>\n+            when N_Character_Literal\n+               | N_Integer_Literal\n+               | N_Real_Literal\n+            =>\n                return OK;\n \n-            when N_Op_Boolean |\n-                 N_Op_Not     =>\n+            when N_Op_Boolean\n+               | N_Op_Not\n+            =>\n                if Ekind (Entity (N)) = E_Operator then\n                   return OK;\n                end if;\n@@ -8551,7 +8556,6 @@ package body Exp_Ch9 is\n \n             when others =>\n                raise Program_Error;\n-\n          end case;\n \n          Next (Op_Body);\n@@ -12771,7 +12775,6 @@ package body Exp_Ch9 is\n \n             when others =>\n                raise Program_Error;\n-\n          end case;\n       end loop;\n \n@@ -13406,8 +13409,8 @@ package body Exp_Ch9 is\n             High := Type_High_Bound (Etype (Index));\n             Low  := Type_Low_Bound  (Etype (Index));\n \n-            --  In the simple case the entry family is given by a subtype\n-            --  mark and the index constant has the same type.\n+            --  In the simple case the entry family is given by a subtype mark\n+            --  and the index constant has the same type.\n \n             if Is_Entity_Name (Original_Node (\n                  Discrete_Subtype_Definition (Parent (Index))))\n@@ -13832,7 +13835,7 @@ package body Exp_Ch9 is\n                   Called_Subp := RE_Initialize_Protection;\n \n                when others =>\n-                     raise Program_Error;\n+                  raise Program_Error;\n             end case;\n \n             --  Entry_Queue_Maxes parameter. This is an access to an array of\n@@ -14645,7 +14648,6 @@ package body Exp_Ch9 is\n \n          when others =>\n             return False;\n-\n       end case;\n    end Trivial_Accept_OK;\n "}, {"sha": "4064e32fa04233b059cbb1176f576c46f141ff79", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -378,7 +378,6 @@ package body Exp_Dbug is\n       Ren := Nam;\n       loop\n          case Nkind (Ren) is\n-\n             when N_Identifier =>\n                exit;\n "}, {"sha": "d2ddb5e62e8e60aab7be5e8990e8fe1a9bdf32a5", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3448,9 +3448,9 @@ package body Exp_Disp is\n                               (RTE (RE_Protected_Entry_Index), Loc),\n                           Expression   => Make_Identifier (Loc, Name_uI)),\n \n-                        Make_Identifier (Loc, Name_uP),   --  parameter block\n-                        Make_Identifier (Loc, Name_uD),   --  delay\n-                        Make_Identifier (Loc, Name_uM),   --  delay mode\n+                        Make_Identifier (Loc, Name_uP),    --  parameter block\n+                        Make_Identifier (Loc, Name_uD),    --  delay\n+                        Make_Identifier (Loc, Name_uM),    --  delay mode\n                         Make_Identifier (Loc, Name_uF)))); --  status flag\n \n                when others =>"}, {"sha": "5af01bcd778feced55303477dea7418dd79d3f3f", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -504,7 +504,7 @@ package body Exp_Dist is\n             --  An expression whose value is a PolyORB reference to the target\n             --  object.\n \n-         when others           =>\n+         when others =>\n             Partition : Entity_Id;\n             --  A variable containing the Partition_ID of the target partition\n \n@@ -996,6 +996,7 @@ package body Exp_Dist is\n             when others =>\n                null;\n          end case;\n+\n          Next (Decl);\n       end loop;\n    end Build_Package_Stubs;\n@@ -2658,6 +2659,7 @@ package body Exp_Dist is\n       case Get_PCS_Name is\n          when Name_PolyORB_DSA =>\n             return Make_String_Literal (Loc, Get_Subprogram_Id (E));\n+\n          when others =>\n             return Make_Integer_Literal (Loc, Get_Subprogram_Id (E));\n       end case;\n@@ -2761,8 +2763,9 @@ package body Exp_Dist is\n       end if;\n \n       case Nkind (Spec) is\n-\n-         when N_Function_Specification | N_Access_Function_Definition =>\n+         when N_Access_Function_Definition\n+            | N_Function_Specification\n+         =>\n             return\n               Make_Function_Specification (Loc,\n                 Defining_Unit_Name       =>\n@@ -2772,7 +2775,9 @@ package body Exp_Dist is\n                 Result_Definition        =>\n                   New_Occurrence_Of (Entity (Result_Definition (Spec)), Loc));\n \n-         when N_Procedure_Specification | N_Access_Procedure_Definition =>\n+         when N_Access_Procedure_Definition\n+            | N_Procedure_Specification\n+         =>\n             return\n               Make_Procedure_Specification (Loc,\n                 Defining_Unit_Name       =>\n@@ -11347,6 +11352,7 @@ package body Exp_Dist is\n          when Name_PolyORB_DSA =>\n             PolyORB_Support.Add_Obj_RPC_Receiver_Completion\n               (Loc, Decls, RPC_Receiver, Stub_Elements);\n+\n          when others =>\n             GARLIC_Support.Add_Obj_RPC_Receiver_Completion\n               (Loc, Decls, RPC_Receiver, Stub_Elements);\n@@ -11398,6 +11404,7 @@ package body Exp_Dist is\n       case Get_PCS_Name is\n          when Name_PolyORB_DSA =>\n             PolyORB_Support.Add_RAST_Features (Vis_Decl, RAS_Type);\n+\n          when others =>\n             GARLIC_Support.Add_RAST_Features (Vis_Decl, RAS_Type);\n       end case;\n@@ -11417,6 +11424,7 @@ package body Exp_Dist is\n          when Name_PolyORB_DSA =>\n             PolyORB_Support.Add_Receiving_Stubs_To_Declarations\n               (Pkg_Spec, Decls, Stmts);\n+\n          when others =>\n             GARLIC_Support.Add_Receiving_Stubs_To_Declarations\n               (Pkg_Spec, Decls, Stmts);"}, {"sha": "3d0934c8d69e5794b79923f915d4db4299d9485f", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -319,14 +319,10 @@ package body Exp_Intr is\n       Set_Etype (Res, T3);\n \n       case Nkind (N) is\n-         when N_Op_And =>\n-            Set_Entity (Res, Standard_Op_And);\n-         when N_Op_Or =>\n-            Set_Entity (Res, Standard_Op_Or);\n-         when N_Op_Xor =>\n-            Set_Entity (Res, Standard_Op_Xor);\n-         when others =>\n-            raise Program_Error;\n+         when N_Op_And => Set_Entity (Res, Standard_Op_And);\n+         when N_Op_Or  => Set_Entity (Res, Standard_Op_Or);\n+         when N_Op_Xor => Set_Entity (Res, Standard_Op_Xor);\n+         when others   => raise Program_Error;\n       end case;\n \n       --  Convert operands to large enough intermediate type"}, {"sha": "e2a6753003e357d52ae944755bdf0a1e26c41486", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -215,7 +215,6 @@ package body Exp_Prag is\n \n          when others => null;\n       end case;\n-\n    end Expand_N_Pragma;\n \n    -------------------------------"}, {"sha": "5b002ca86eefc92f3550d3dc675defc37d19423c", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -67,17 +67,19 @@ package body Exp_SPARK is\n          --  user interaction. The verification back-end already takes care\n          --  of qualifying names when needed.\n \n-         when N_Block_Statement            |\n-              N_Entry_Declaration          |\n-              N_Package_Body               |\n-              N_Package_Declaration        |\n-              N_Protected_Type_Declaration |\n-              N_Subprogram_Body            |\n-              N_Task_Type_Declaration      =>\n+         when N_Block_Statement\n+            | N_Entry_Declaration\n+            | N_Package_Body\n+            | N_Package_Declaration\n+            | N_Protected_Type_Declaration\n+            | N_Subprogram_Body\n+            | N_Task_Type_Declaration\n+         =>\n             Qualify_Entity_Names (N);\n \n-         when N_Expanded_Name |\n-              N_Identifier    =>\n+         when N_Expanded_Name\n+            | N_Identifier\n+         =>\n             Expand_SPARK_Potential_Renaming (N);\n \n          when N_Object_Renaming_Declaration =>"}, {"sha": "9ba997a589a58fd05972badf1026f24bb3bd1f4f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 317, "deletions": 313, "changes": 630, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -224,34 +224,35 @@ package body Exp_Util is\n    begin\n       case Nkind (Parent (N)) is\n \n-         --  Check for cases of appearing in the prefix of a construct where\n-         --  we don't need atomic synchronization for this kind of usage.\n+         --  Check for cases of appearing in the prefix of a construct where we\n+         --  don't need atomic synchronization for this kind of usage.\n \n          when\n-              --  Nothing to do if we are the prefix of an attribute, since we\n-              --  do not want an atomic sync operation for things like 'Size.\n+            --  Nothing to do if we are the prefix of an attribute, since we\n+            --  do not want an atomic sync operation for things like 'Size.\n \n-              N_Attribute_Reference |\n+              N_Attribute_Reference\n \n-              --  The N_Reference node is like an attribute\n+            --  The N_Reference node is like an attribute\n \n-              N_Reference           |\n+            | N_Reference\n \n-              --  Nothing to do for a reference to a component (or components)\n-              --  of a composite object. Only reads and updates of the object\n-              --  as a whole require atomic synchronization (RM C.6 (15)).\n-\n-              N_Indexed_Component   |\n-              N_Selected_Component  |\n-              N_Slice               =>\n+            --  Nothing to do for a reference to a component (or components)\n+            --  of a composite object. Only reads and updates of the object\n+            --  as a whole require atomic synchronization (RM C.6 (15)).\n \n+            | N_Indexed_Component\n+            | N_Selected_Component\n+            | N_Slice\n+         =>\n             --  For all the above cases, nothing to do if we are the prefix\n \n             if Prefix (Parent (N)) = N then\n                return;\n             end if;\n \n-         when others => null;\n+         when others =>\n+            null;\n       end case;\n \n       --  Nothing to do for the identifier in an object renaming declaration,\n@@ -272,10 +273,14 @@ package body Exp_Util is\n             when N_Identifier =>\n                Msg_Node := N;\n \n-            when N_Selected_Component | N_Expanded_Name =>\n+            when N_Expanded_Name\n+               | N_Selected_Component\n+            =>\n                Msg_Node := Selector_Name (N);\n \n-            when N_Explicit_Dereference | N_Indexed_Component =>\n+            when N_Explicit_Dereference\n+               | N_Indexed_Component\n+            =>\n                Msg_Node := Empty;\n \n             when others =>\n@@ -5224,20 +5229,11 @@ package body Exp_Util is\n       P := Node;\n       while Present (P) loop\n          case Nkind (P) is\n-            when N_Subprogram_Body =>\n-               return True;\n-\n-            when N_If_Statement =>\n-               return False;\n-\n-            when N_Loop_Statement =>\n-               return False;\n-\n-            when N_Case_Statement =>\n-               return False;\n-\n-            when others =>\n-               P := Parent (P);\n+            when N_Subprogram_Body => return True;\n+            when N_If_Statement    => return False;\n+            when N_Loop_Statement  => return False;\n+            when N_Case_Statement  => return False;\n+            when others            => P := Parent (P);\n          end case;\n       end loop;\n \n@@ -5533,8 +5529,8 @@ package body Exp_Util is\n             --  They will be moved further out when the while loop or elsif\n             --  is analyzed.\n \n-            when N_Iteration_Scheme |\n-                 N_Elsif_Part\n+            when N_Elsif_Part\n+               | N_Iteration_Scheme\n             =>\n                if N = Condition (P) then\n                   if Present (Condition_Actions (P)) then\n@@ -5561,73 +5557,73 @@ package body Exp_Util is\n             when\n                --  Statements\n \n-               N_Procedure_Call_Statement               |\n-               N_Statement_Other_Than_Procedure_Call    |\n+                 N_Procedure_Call_Statement\n+               | N_Statement_Other_Than_Procedure_Call\n \n                --  Pragmas\n \n-               N_Pragma                                 |\n+               | N_Pragma\n \n                --  Representation_Clause\n \n-               N_At_Clause                              |\n-               N_Attribute_Definition_Clause            |\n-               N_Enumeration_Representation_Clause      |\n-               N_Record_Representation_Clause           |\n+               | N_At_Clause\n+               | N_Attribute_Definition_Clause\n+               | N_Enumeration_Representation_Clause\n+               | N_Record_Representation_Clause\n \n                --  Declarations\n \n-               N_Abstract_Subprogram_Declaration        |\n-               N_Entry_Body                             |\n-               N_Exception_Declaration                  |\n-               N_Exception_Renaming_Declaration         |\n-               N_Expression_Function                    |\n-               N_Formal_Abstract_Subprogram_Declaration |\n-               N_Formal_Concrete_Subprogram_Declaration |\n-               N_Formal_Object_Declaration              |\n-               N_Formal_Type_Declaration                |\n-               N_Full_Type_Declaration                  |\n-               N_Function_Instantiation                 |\n-               N_Generic_Function_Renaming_Declaration  |\n-               N_Generic_Package_Declaration            |\n-               N_Generic_Package_Renaming_Declaration   |\n-               N_Generic_Procedure_Renaming_Declaration |\n-               N_Generic_Subprogram_Declaration         |\n-               N_Implicit_Label_Declaration             |\n-               N_Incomplete_Type_Declaration            |\n-               N_Number_Declaration                     |\n-               N_Object_Declaration                     |\n-               N_Object_Renaming_Declaration            |\n-               N_Package_Body                           |\n-               N_Package_Body_Stub                      |\n-               N_Package_Declaration                    |\n-               N_Package_Instantiation                  |\n-               N_Package_Renaming_Declaration           |\n-               N_Private_Extension_Declaration          |\n-               N_Private_Type_Declaration               |\n-               N_Procedure_Instantiation                |\n-               N_Protected_Body                         |\n-               N_Protected_Body_Stub                    |\n-               N_Protected_Type_Declaration             |\n-               N_Single_Task_Declaration                |\n-               N_Subprogram_Body                        |\n-               N_Subprogram_Body_Stub                   |\n-               N_Subprogram_Declaration                 |\n-               N_Subprogram_Renaming_Declaration        |\n-               N_Subtype_Declaration                    |\n-               N_Task_Body                              |\n-               N_Task_Body_Stub                         |\n-               N_Task_Type_Declaration                  |\n+               | N_Abstract_Subprogram_Declaration\n+               | N_Entry_Body\n+               | N_Exception_Declaration\n+               | N_Exception_Renaming_Declaration\n+               | N_Expression_Function\n+               | N_Formal_Abstract_Subprogram_Declaration\n+               | N_Formal_Concrete_Subprogram_Declaration\n+               | N_Formal_Object_Declaration\n+               | N_Formal_Type_Declaration\n+               | N_Full_Type_Declaration\n+               | N_Function_Instantiation\n+               | N_Generic_Function_Renaming_Declaration\n+               | N_Generic_Package_Declaration\n+               | N_Generic_Package_Renaming_Declaration\n+               | N_Generic_Procedure_Renaming_Declaration\n+               | N_Generic_Subprogram_Declaration\n+               | N_Implicit_Label_Declaration\n+               | N_Incomplete_Type_Declaration\n+               | N_Number_Declaration\n+               | N_Object_Declaration\n+               | N_Object_Renaming_Declaration\n+               | N_Package_Body\n+               | N_Package_Body_Stub\n+               | N_Package_Declaration\n+               | N_Package_Instantiation\n+               | N_Package_Renaming_Declaration\n+               | N_Private_Extension_Declaration\n+               | N_Private_Type_Declaration\n+               | N_Procedure_Instantiation\n+               | N_Protected_Body\n+               | N_Protected_Body_Stub\n+               | N_Protected_Type_Declaration\n+               | N_Single_Task_Declaration\n+               | N_Subprogram_Body\n+               | N_Subprogram_Body_Stub\n+               | N_Subprogram_Declaration\n+               | N_Subprogram_Renaming_Declaration\n+               | N_Subtype_Declaration\n+               | N_Task_Body\n+               | N_Task_Body_Stub\n+               | N_Task_Type_Declaration\n \n                --  Use clauses can appear in lists of declarations\n \n-               N_Use_Package_Clause                     |\n-               N_Use_Type_Clause                        |\n+               | N_Use_Package_Clause\n+               | N_Use_Type_Clause\n \n                --  Freeze entity behaves like a declaration or statement\n \n-               N_Freeze_Entity                          |\n-               N_Freeze_Generic_Entity\n+               | N_Freeze_Entity\n+               | N_Freeze_Generic_Entity\n             =>\n                --  Do not insert here if the item is not a list member (this\n                --  happens for example with a triggering statement, and the\n@@ -5685,22 +5681,21 @@ package body Exp_Util is\n             --  or a subexpression. We tell the difference by looking at the\n             --  Etype. It is set to Standard_Void_Type in the statement case.\n \n-            when\n-               N_Raise_xxx_Error =>\n-                  if Etype (P) = Standard_Void_Type then\n-                     if P = Wrapped_Node then\n-                        Store_Before_Actions_In_Scope (Ins_Actions);\n-                     else\n-                        Insert_List_Before_And_Analyze (P, Ins_Actions);\n-                     end if;\n+            when N_Raise_xxx_Error =>\n+               if Etype (P) = Standard_Void_Type then\n+                  if P = Wrapped_Node then\n+                     Store_Before_Actions_In_Scope (Ins_Actions);\n+                  else\n+                     Insert_List_Before_And_Analyze (P, Ins_Actions);\n+                  end if;\n \n-                     return;\n+                  return;\n \n-                  --  In the subexpression case, keep climbing\n+               --  In the subexpression case, keep climbing\n \n-                  else\n-                     null;\n-                  end if;\n+               else\n+                  null;\n+               end if;\n \n             --  If a component association appears within a loop created for\n             --  an array aggregate, attach the actions to the association so\n@@ -5724,7 +5719,6 @@ package body Exp_Util is\n                   if Is_Empty_List (Loop_Actions (P)) then\n                      Set_Loop_Actions (P, Ins_Actions);\n                      Analyze_List (Ins_Actions);\n-\n                   else\n                      declare\n                         Decl : Node_Id;\n@@ -5761,22 +5755,21 @@ package body Exp_Util is\n \n             --  Another special case, an attribute denoting a procedure call\n \n-            when\n-               N_Attribute_Reference =>\n-                  if Is_Procedure_Attribute_Name (Attribute_Name (P)) then\n-                     if P = Wrapped_Node then\n-                        Store_Before_Actions_In_Scope (Ins_Actions);\n-                     else\n-                        Insert_List_Before_And_Analyze (P, Ins_Actions);\n-                     end if;\n+            when N_Attribute_Reference =>\n+               if Is_Procedure_Attribute_Name (Attribute_Name (P)) then\n+                  if P = Wrapped_Node then\n+                     Store_Before_Actions_In_Scope (Ins_Actions);\n+                  else\n+                     Insert_List_Before_And_Analyze (P, Ins_Actions);\n+                  end if;\n \n-                     return;\n+                  return;\n \n-                  --  In the subexpression case, keep climbing\n+               --  In the subexpression case, keep climbing\n \n-                  else\n-                     null;\n-                  end if;\n+               else\n+                  null;\n+               end if;\n \n             --  A contract node should not belong to the tree\n \n@@ -5785,153 +5778,151 @@ package body Exp_Util is\n \n             --  For all other node types, keep climbing tree\n \n-            when\n-               N_Abortable_Part                         |\n-               N_Accept_Alternative                     |\n-               N_Access_Definition                      |\n-               N_Access_Function_Definition             |\n-               N_Access_Procedure_Definition            |\n-               N_Access_To_Object_Definition            |\n-               N_Aggregate                              |\n-               N_Allocator                              |\n-               N_Aspect_Specification                   |\n-               N_Case_Expression                        |\n-               N_Case_Statement_Alternative             |\n-               N_Character_Literal                      |\n-               N_Compilation_Unit                       |\n-               N_Compilation_Unit_Aux                   |\n-               N_Component_Clause                       |\n-               N_Component_Declaration                  |\n-               N_Component_Definition                   |\n-               N_Component_List                         |\n-               N_Constrained_Array_Definition           |\n-               N_Decimal_Fixed_Point_Definition         |\n-               N_Defining_Character_Literal             |\n-               N_Defining_Identifier                    |\n-               N_Defining_Operator_Symbol               |\n-               N_Defining_Program_Unit_Name             |\n-               N_Delay_Alternative                      |\n-               N_Delta_Constraint                       |\n-               N_Derived_Type_Definition                |\n-               N_Designator                             |\n-               N_Digits_Constraint                      |\n-               N_Discriminant_Association               |\n-               N_Discriminant_Specification             |\n-               N_Empty                                  |\n-               N_Entry_Body_Formal_Part                 |\n-               N_Entry_Call_Alternative                 |\n-               N_Entry_Declaration                      |\n-               N_Entry_Index_Specification              |\n-               N_Enumeration_Type_Definition            |\n-               N_Error                                  |\n-               N_Exception_Handler                      |\n-               N_Expanded_Name                          |\n-               N_Explicit_Dereference                   |\n-               N_Extension_Aggregate                    |\n-               N_Floating_Point_Definition              |\n-               N_Formal_Decimal_Fixed_Point_Definition  |\n-               N_Formal_Derived_Type_Definition         |\n-               N_Formal_Discrete_Type_Definition        |\n-               N_Formal_Floating_Point_Definition       |\n-               N_Formal_Modular_Type_Definition         |\n-               N_Formal_Ordinary_Fixed_Point_Definition |\n-               N_Formal_Package_Declaration             |\n-               N_Formal_Private_Type_Definition         |\n-               N_Formal_Incomplete_Type_Definition      |\n-               N_Formal_Signed_Integer_Type_Definition  |\n-               N_Function_Call                          |\n-               N_Function_Specification                 |\n-               N_Generic_Association                    |\n-               N_Handled_Sequence_Of_Statements         |\n-               N_Identifier                             |\n-               N_In                                     |\n-               N_Index_Or_Discriminant_Constraint       |\n-               N_Indexed_Component                      |\n-               N_Integer_Literal                        |\n-               N_Iterator_Specification                 |\n-               N_Itype_Reference                        |\n-               N_Label                                  |\n-               N_Loop_Parameter_Specification           |\n-               N_Mod_Clause                             |\n-               N_Modular_Type_Definition                |\n-               N_Not_In                                 |\n-               N_Null                                   |\n-               N_Op_Abs                                 |\n-               N_Op_Add                                 |\n-               N_Op_And                                 |\n-               N_Op_Concat                              |\n-               N_Op_Divide                              |\n-               N_Op_Eq                                  |\n-               N_Op_Expon                               |\n-               N_Op_Ge                                  |\n-               N_Op_Gt                                  |\n-               N_Op_Le                                  |\n-               N_Op_Lt                                  |\n-               N_Op_Minus                               |\n-               N_Op_Mod                                 |\n-               N_Op_Multiply                            |\n-               N_Op_Ne                                  |\n-               N_Op_Not                                 |\n-               N_Op_Or                                  |\n-               N_Op_Plus                                |\n-               N_Op_Rem                                 |\n-               N_Op_Rotate_Left                         |\n-               N_Op_Rotate_Right                        |\n-               N_Op_Shift_Left                          |\n-               N_Op_Shift_Right                         |\n-               N_Op_Shift_Right_Arithmetic              |\n-               N_Op_Subtract                            |\n-               N_Op_Xor                                 |\n-               N_Operator_Symbol                        |\n-               N_Ordinary_Fixed_Point_Definition        |\n-               N_Others_Choice                          |\n-               N_Package_Specification                  |\n-               N_Parameter_Association                  |\n-               N_Parameter_Specification                |\n-               N_Pop_Constraint_Error_Label             |\n-               N_Pop_Program_Error_Label                |\n-               N_Pop_Storage_Error_Label                |\n-               N_Pragma_Argument_Association            |\n-               N_Procedure_Specification                |\n-               N_Protected_Definition                   |\n-               N_Push_Constraint_Error_Label            |\n-               N_Push_Program_Error_Label               |\n-               N_Push_Storage_Error_Label               |\n-               N_Qualified_Expression                   |\n-               N_Quantified_Expression                  |\n-               N_Raise_Expression                       |\n-               N_Range                                  |\n-               N_Range_Constraint                       |\n-               N_Real_Literal                           |\n-               N_Real_Range_Specification               |\n-               N_Record_Definition                      |\n-               N_Reference                              |\n-               N_SCIL_Dispatch_Table_Tag_Init           |\n-               N_SCIL_Dispatching_Call                  |\n-               N_SCIL_Membership_Test                   |\n-               N_Selected_Component                     |\n-               N_Signed_Integer_Type_Definition         |\n-               N_Single_Protected_Declaration           |\n-               N_Slice                                  |\n-               N_String_Literal                         |\n-               N_Subtype_Indication                     |\n-               N_Subunit                                |\n-               N_Task_Definition                        |\n-               N_Terminate_Alternative                  |\n-               N_Triggering_Alternative                 |\n-               N_Type_Conversion                        |\n-               N_Unchecked_Expression                   |\n-               N_Unchecked_Type_Conversion              |\n-               N_Unconstrained_Array_Definition         |\n-               N_Unused_At_End                          |\n-               N_Unused_At_Start                        |\n-               N_Variant                                |\n-               N_Variant_Part                           |\n-               N_Validate_Unchecked_Conversion          |\n-               N_With_Clause\n+            when N_Abortable_Part\n+               | N_Accept_Alternative\n+               | N_Access_Definition\n+               | N_Access_Function_Definition\n+               | N_Access_Procedure_Definition\n+               | N_Access_To_Object_Definition\n+               | N_Aggregate\n+               | N_Allocator\n+               | N_Aspect_Specification\n+               | N_Case_Expression\n+               | N_Case_Statement_Alternative\n+               | N_Character_Literal\n+               | N_Compilation_Unit\n+               | N_Compilation_Unit_Aux\n+               | N_Component_Clause\n+               | N_Component_Declaration\n+               | N_Component_Definition\n+               | N_Component_List\n+               | N_Constrained_Array_Definition\n+               | N_Decimal_Fixed_Point_Definition\n+               | N_Defining_Character_Literal\n+               | N_Defining_Identifier\n+               | N_Defining_Operator_Symbol\n+               | N_Defining_Program_Unit_Name\n+               | N_Delay_Alternative\n+               | N_Delta_Constraint\n+               | N_Derived_Type_Definition\n+               | N_Designator\n+               | N_Digits_Constraint\n+               | N_Discriminant_Association\n+               | N_Discriminant_Specification\n+               | N_Empty\n+               | N_Entry_Body_Formal_Part\n+               | N_Entry_Call_Alternative\n+               | N_Entry_Declaration\n+               | N_Entry_Index_Specification\n+               | N_Enumeration_Type_Definition\n+               | N_Error\n+               | N_Exception_Handler\n+               | N_Expanded_Name\n+               | N_Explicit_Dereference\n+               | N_Extension_Aggregate\n+               | N_Floating_Point_Definition\n+               | N_Formal_Decimal_Fixed_Point_Definition\n+               | N_Formal_Derived_Type_Definition\n+               | N_Formal_Discrete_Type_Definition\n+               | N_Formal_Floating_Point_Definition\n+               | N_Formal_Modular_Type_Definition\n+               | N_Formal_Ordinary_Fixed_Point_Definition\n+               | N_Formal_Package_Declaration\n+               | N_Formal_Private_Type_Definition\n+               | N_Formal_Incomplete_Type_Definition\n+               | N_Formal_Signed_Integer_Type_Definition\n+               | N_Function_Call\n+               | N_Function_Specification\n+               | N_Generic_Association\n+               | N_Handled_Sequence_Of_Statements\n+               | N_Identifier\n+               | N_In\n+               | N_Index_Or_Discriminant_Constraint\n+               | N_Indexed_Component\n+               | N_Integer_Literal\n+               | N_Iterator_Specification\n+               | N_Itype_Reference\n+               | N_Label\n+               | N_Loop_Parameter_Specification\n+               | N_Mod_Clause\n+               | N_Modular_Type_Definition\n+               | N_Not_In\n+               | N_Null\n+               | N_Op_Abs\n+               | N_Op_Add\n+               | N_Op_And\n+               | N_Op_Concat\n+               | N_Op_Divide\n+               | N_Op_Eq\n+               | N_Op_Expon\n+               | N_Op_Ge\n+               | N_Op_Gt\n+               | N_Op_Le\n+               | N_Op_Lt\n+               | N_Op_Minus\n+               | N_Op_Mod\n+               | N_Op_Multiply\n+               | N_Op_Ne\n+               | N_Op_Not\n+               | N_Op_Or\n+               | N_Op_Plus\n+               | N_Op_Rem\n+               | N_Op_Rotate_Left\n+               | N_Op_Rotate_Right\n+               | N_Op_Shift_Left\n+               | N_Op_Shift_Right\n+               | N_Op_Shift_Right_Arithmetic\n+               | N_Op_Subtract\n+               | N_Op_Xor\n+               | N_Operator_Symbol\n+               | N_Ordinary_Fixed_Point_Definition\n+               | N_Others_Choice\n+               | N_Package_Specification\n+               | N_Parameter_Association\n+               | N_Parameter_Specification\n+               | N_Pop_Constraint_Error_Label\n+               | N_Pop_Program_Error_Label\n+               | N_Pop_Storage_Error_Label\n+               | N_Pragma_Argument_Association\n+               | N_Procedure_Specification\n+               | N_Protected_Definition\n+               | N_Push_Constraint_Error_Label\n+               | N_Push_Program_Error_Label\n+               | N_Push_Storage_Error_Label\n+               | N_Qualified_Expression\n+               | N_Quantified_Expression\n+               | N_Raise_Expression\n+               | N_Range\n+               | N_Range_Constraint\n+               | N_Real_Literal\n+               | N_Real_Range_Specification\n+               | N_Record_Definition\n+               | N_Reference\n+               | N_SCIL_Dispatch_Table_Tag_Init\n+               | N_SCIL_Dispatching_Call\n+               | N_SCIL_Membership_Test\n+               | N_Selected_Component\n+               | N_Signed_Integer_Type_Definition\n+               | N_Single_Protected_Declaration\n+               | N_Slice\n+               | N_String_Literal\n+               | N_Subtype_Indication\n+               | N_Subunit\n+               | N_Task_Definition\n+               | N_Terminate_Alternative\n+               | N_Triggering_Alternative\n+               | N_Type_Conversion\n+               | N_Unchecked_Expression\n+               | N_Unchecked_Type_Conversion\n+               | N_Unconstrained_Array_Definition\n+               | N_Unused_At_End\n+               | N_Unused_At_Start\n+               | N_Variant\n+               | N_Variant_Part\n+               | N_Validate_Unchecked_Conversion\n+               | N_With_Clause\n             =>\n                null;\n-\n          end case;\n \n          --  If we fall through above tests, keep climbing tree\n@@ -8686,7 +8677,6 @@ package body Exp_Util is\n             else\n                return False;\n             end if;\n-\n       end case;\n    end Possible_Bit_Aligned_Component;\n \n@@ -8777,11 +8767,11 @@ package body Exp_Util is\n       --  list and ensure that a finalizer is properly built.\n \n       case Nkind (N) is\n-         when N_Elsif_Part             |\n-              N_If_Statement           |\n-              N_Conditional_Entry_Call |\n-              N_Selective_Accept       =>\n-\n+         when N_Conditional_Entry_Call\n+            | N_Elsif_Part\n+            | N_If_Statement\n+            | N_Selective_Accept\n+         =>\n             --  Check the \"then statements\" for elsif parts and if statements\n \n             if Nkind_In (N, N_Elsif_Part, N_If_Statement)\n@@ -8813,15 +8803,15 @@ package body Exp_Util is\n                Analyze (Block);\n             end if;\n \n-         when N_Abortable_Part             |\n-              N_Accept_Alternative         |\n-              N_Case_Statement_Alternative |\n-              N_Delay_Alternative          |\n-              N_Entry_Call_Alternative     |\n-              N_Exception_Handler          |\n-              N_Loop_Statement             |\n-              N_Triggering_Alternative     =>\n-\n+         when N_Abortable_Part\n+            | N_Accept_Alternative\n+            | N_Case_Statement_Alternative\n+            | N_Delay_Alternative\n+            | N_Entry_Call_Alternative\n+            | N_Exception_Handler\n+            | N_Loop_Statement\n+            | N_Triggering_Alternative\n+         =>\n             if not Is_Empty_List (Statements (N))\n               and then not Are_Wrapped (Statements (N))\n               and then Requires_Cleanup_Actions (Statements (N), False, False)\n@@ -9042,7 +9032,9 @@ package body Exp_Util is\n          end if;\n \n          case Nkind (N) is\n-            when N_Indexed_Component | N_Slice =>\n+            when N_Indexed_Component\n+               | N_Slice\n+            =>\n                return\n                  Is_Name_Reference (Prefix (N))\n                    or else Is_Access_Type (Etype (Prefix (N)));\n@@ -9067,9 +9059,10 @@ package body Exp_Util is\n             --  A view conversion of a tagged name is a name reference\n \n             when N_Type_Conversion =>\n-               return Is_Tagged_Type (Etype (Subtype_Mark (N)))\n-                 and then Is_Tagged_Type (Etype (Expression (N)))\n-                 and then Is_Name_Reference (Expression (N));\n+               return\n+                 Is_Tagged_Type (Etype (Subtype_Mark (N)))\n+                   and then Is_Tagged_Type (Etype (Expression (N)))\n+                   and then Is_Name_Reference (Expression (N));\n \n             --  An unchecked type conversion is considered to be a name if\n             --  the operand is a name (this construction arises only as a\n@@ -9578,13 +9571,14 @@ package body Exp_Util is\n \n    begin\n       case Nkind (N) is\n-         when N_Accept_Statement      |\n-              N_Block_Statement       |\n-              N_Entry_Body            |\n-              N_Package_Body          |\n-              N_Protected_Body        |\n-              N_Subprogram_Body       |\n-              N_Task_Body             =>\n+         when N_Accept_Statement\n+            | N_Block_Statement\n+            | N_Entry_Body\n+            | N_Package_Body\n+            | N_Protected_Body\n+            | N_Subprogram_Body\n+            | N_Task_Body\n+         =>\n             return\n               Requires_Cleanup_Actions (Declarations (N), At_Lib_Level, True)\n                 or else\n@@ -9602,7 +9596,7 @@ package body Exp_Util is\n               Requires_Cleanup_Actions\n                 (Private_Declarations (N), At_Lib_Level, True);\n \n-         when others                  =>\n+         when others =>\n             return False;\n       end case;\n    end Requires_Cleanup_Actions;\n@@ -10629,17 +10623,21 @@ package body Exp_Util is\n          --  Is this right? what about x'first where x is a variable???\n \n          when N_Attribute_Reference =>\n-            return Side_Effect_Free (Expressions (N), Name_Req, Variable_Ref)\n-              and then Attribute_Name (N) /= Name_Input\n-              and then (Is_Entity_Name (Prefix (N))\n-                         or else Side_Effect_Free\n-                                   (Prefix (N), Name_Req, Variable_Ref));\n+            return\n+              Side_Effect_Free (Expressions (N), Name_Req, Variable_Ref)\n+                and then Attribute_Name (N) /= Name_Input\n+                and then (Is_Entity_Name (Prefix (N))\n+                           or else Side_Effect_Free\n+                                     (Prefix (N), Name_Req, Variable_Ref));\n \n          --  A binary operator is side effect free if and both operands are\n          --  side effect free. For this purpose binary operators include\n          --  membership tests and short circuit forms.\n \n-         when N_Binary_Op | N_Membership_Test | N_Short_Circuit =>\n+         when N_Binary_Op\n+            | N_Membership_Test\n+            | N_Short_Circuit\n+         =>\n             return Side_Effect_Free (Left_Opnd  (N), Name_Req, Variable_Ref)\n                      and then\n                    Side_Effect_Free (Right_Opnd (N), Name_Req, Variable_Ref);\n@@ -10654,9 +10652,10 @@ package body Exp_Util is\n          --  is side effect free and it has no actions.\n \n          when N_Expression_With_Actions =>\n-            return Is_Empty_List (Actions (N))\n-              and then\n-                Side_Effect_Free (Expression (N), Name_Req, Variable_Ref);\n+            return\n+              Is_Empty_List (Actions (N))\n+                and then Side_Effect_Free\n+                           (Expression (N), Name_Req, Variable_Ref);\n \n          --  A call to _rep_to_pos is side effect free, since we generate\n          --  this pure function call ourselves. Moreover it is critically\n@@ -10668,11 +10667,12 @@ package body Exp_Util is\n          --  All other function calls are not side effect free\n \n          when N_Function_Call =>\n-            return Nkind (Name (N)) = N_Identifier\n-              and then Is_TSS (Name (N), TSS_Rep_To_Pos)\n-              and then\n-                Side_Effect_Free\n-                  (First (Parameter_Associations (N)), Name_Req, Variable_Ref);\n+            return\n+              Nkind (Name (N)) = N_Identifier\n+                and then Is_TSS (Name (N), TSS_Rep_To_Pos)\n+                and then Side_Effect_Free\n+                           (First (Parameter_Associations (N)),\n+                            Name_Req, Variable_Ref);\n \n          --  An IF expression is side effect free if it's of a scalar type, and\n          --  all its components are all side effect free (conditions and then\n@@ -10681,17 +10681,19 @@ package body Exp_Util is\n          --  where the type involved is a string type.\n \n          when N_If_Expression =>\n-            return Is_Scalar_Type (Typ)\n-              and then\n-                Side_Effect_Free (Expressions (N), Name_Req, Variable_Ref);\n+            return\n+              Is_Scalar_Type (Typ)\n+                and then Side_Effect_Free\n+                           (Expressions (N), Name_Req, Variable_Ref);\n \n          --  An indexed component is side effect free if it is a side\n          --  effect free prefixed reference and all the indexing\n          --  expressions are side effect free.\n \n          when N_Indexed_Component =>\n-            return Side_Effect_Free (Expressions (N), Name_Req, Variable_Ref)\n-              and then Safe_Prefixed_Reference (N);\n+            return\n+              Side_Effect_Free (Expressions (N), Name_Req, Variable_Ref)\n+                and then Safe_Prefixed_Reference (N);\n \n          --  A type qualification is side effect free if the expression\n          --  is side effect free.\n@@ -10716,9 +10718,9 @@ package body Exp_Util is\n          --  prefixed reference and the bounds are side effect free.\n \n          when N_Slice =>\n-            return Side_Effect_Free\n-                     (Discrete_Range (N), Name_Req, Variable_Ref)\n-              and then Safe_Prefixed_Reference (N);\n+            return\n+               Side_Effect_Free (Discrete_Range (N), Name_Req, Variable_Ref)\n+                 and then Safe_Prefixed_Reference (N);\n \n          --  A type conversion is side effect free if the expression to be\n          --  converted is side effect free.\n@@ -10736,9 +10738,10 @@ package body Exp_Util is\n          --  is safe and its argument is side effect free.\n \n          when N_Unchecked_Type_Conversion =>\n-            return Safe_Unchecked_Type_Conversion (N)\n-              and then\n-                Side_Effect_Free (Expression (N), Name_Req, Variable_Ref);\n+            return\n+              Safe_Unchecked_Type_Conversion (N)\n+                and then Side_Effect_Free\n+                           (Expression (N), Name_Req, Variable_Ref);\n \n          --  An unchecked expression is side effect free if its expression\n          --  is side effect free.\n@@ -10748,10 +10751,11 @@ package body Exp_Util is\n \n          --  A literal is side effect free\n \n-         when N_Character_Literal    |\n-              N_Integer_Literal      |\n-              N_Real_Literal         |\n-              N_String_Literal       =>\n+         when N_Character_Literal\n+            | N_Integer_Literal\n+            | N_Real_Literal\n+            | N_String_Literal\n+         =>\n             return True;\n \n          --  We consider that anything else has side effects. This is a bit"}, {"sha": "9045b6a72b7b5525e6fe9b2d2904365944dfef51", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -489,7 +489,6 @@ package body Expander is\n \n                when others =>\n                   null;\n-\n             end case;\n \n          exception\n@@ -507,16 +506,19 @@ package body Expander is\n \n          if Scope_Is_Transient and then N = Node_To_Be_Wrapped then\n             case Nkind (N) is\n-               when N_Statement_Other_Than_Procedure_Call |\n-                    N_Procedure_Call_Statement            =>\n+               when N_Procedure_Call_Statement\n+                  | N_Statement_Other_Than_Procedure_Call\n+               =>\n                   Wrap_Transient_Statement (N);\n \n-               when N_Object_Declaration          |\n-                    N_Object_Renaming_Declaration |\n-                    N_Subtype_Declaration         =>\n+               when N_Object_Declaration\n+                  | N_Object_Renaming_Declaration\n+                  | N_Subtype_Declaration\n+               =>\n                   Wrap_Transient_Declaration (N);\n \n-               when others => Wrap_Transient_Expression (N);\n+               when others =>\n+                  Wrap_Transient_Expression (N);\n             end case;\n          end if;\n "}, {"sha": "81524c1f4d12c9daf799e94f068d7ce6a36ac2d4", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 40, "deletions": 37, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2250,7 +2250,8 @@ package body Freeze is\n                      return OK;\n                   end if;\n \n-               when others => return OK;\n+               when others =>\n+                  return OK;\n             end case;\n          end Process;\n \n@@ -3451,12 +3452,11 @@ package body Freeze is\n \n             R_Type := Etype (E);\n \n-            --  AI05-0151: the return type may have been incomplete\n-            --  at the point of declaration. Replace it with the full\n-            --  view, unless the current type is a limited view. In\n-            --  that case the full view is in a different unit, and\n-            --  gigi finds the non-limited view after the other unit\n-            --  is elaborated.\n+            --  AI05-0151: the return type may have been incomplete at the\n+            --  point of declaration. Replace it with the full view, unless the\n+            --  current type is a limited view. In that case the full view is\n+            --  in a different unit, and gigi finds the non-limited view after\n+            --  the other unit is elaborated.\n \n             if Ekind (R_Type) = E_Incomplete_Type\n               and then Present (Full_View (R_Type))\n@@ -3483,8 +3483,9 @@ package body Freeze is\n                  and then not Has_Warnings_Off (E)\n                  and then not Has_Warnings_Off (R_Type)\n                then\n-                  Error_Msg_N (\"?x?return type of& does not \"\n-                     & \"correspond to C pointer!\", E);\n+                  Error_Msg_N\n+                    (\"?x?return type of& does not correspond to C pointer!\",\n+                     E);\n \n                --  Check suspicious return of boolean\n \n@@ -6787,10 +6788,10 @@ package body Freeze is\n                Desig_Typ := Find_Aggregate_Component_Desig_Type;\n             end if;\n \n-         when N_Selected_Component |\n-            N_Indexed_Component    |\n-            N_Slice                =>\n-\n+         when N_Indexed_Component\n+            | N_Selected_Component\n+            | N_Slice\n+         =>\n             if Is_Access_Type (Etype (Prefix (N))) then\n                Desig_Typ := Designated_Type (Etype (Prefix (N)));\n             end if;\n@@ -7002,35 +7003,37 @@ package body Freeze is\n             --  is a statement or declaration and we can insert the freeze node\n             --  before it.\n \n-            when N_Block_Statement       |\n-                 N_Entry_Body            |\n-                 N_Package_Body          |\n-                 N_Package_Specification |\n-                 N_Protected_Body        |\n-                 N_Subprogram_Body       |\n-                 N_Task_Body             => exit;\n+            when N_Block_Statement\n+               | N_Entry_Body\n+               | N_Package_Body\n+               | N_Package_Specification\n+               | N_Protected_Body\n+               | N_Subprogram_Body\n+               | N_Task_Body\n+            =>\n+               exit;\n \n             --  The expander is allowed to define types in any statements list,\n             --  so any of the following parent nodes also mark a freezing point\n             --  if the actual node is in a list of statements or declarations.\n \n-            when N_Abortable_Part             |\n-                 N_Accept_Alternative         |\n-                 N_And_Then                   |\n-                 N_Case_Statement_Alternative |\n-                 N_Compilation_Unit_Aux       |\n-                 N_Conditional_Entry_Call     |\n-                 N_Delay_Alternative          |\n-                 N_Elsif_Part                 |\n-                 N_Entry_Call_Alternative     |\n-                 N_Exception_Handler          |\n-                 N_Extended_Return_Statement  |\n-                 N_Freeze_Entity              |\n-                 N_If_Statement               |\n-                 N_Or_Else                    |\n-                 N_Selective_Accept           |\n-                 N_Triggering_Alternative     =>\n-\n+            when N_Abortable_Part\n+               | N_Accept_Alternative\n+               | N_And_Then\n+               | N_Case_Statement_Alternative\n+               | N_Compilation_Unit_Aux\n+               | N_Conditional_Entry_Call\n+               | N_Delay_Alternative\n+               | N_Elsif_Part\n+               | N_Entry_Call_Alternative\n+               | N_Exception_Handler\n+               | N_Extended_Return_Statement\n+               | N_Freeze_Entity\n+               | N_If_Statement\n+               | N_Or_Else\n+               | N_Selective_Accept\n+               | N_Triggering_Alternative\n+            =>\n                exit when Is_List_Member (P);\n \n             --  Freeze nodes produced by an expression coming from the Actions"}, {"sha": "f3eaf809f97123c3946f9b17dfb195fd1eb8116a", "filename": "gcc/ada/g-arrspl.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -294,7 +294,6 @@ package body GNAT.Array_Split is\n             exit when K > Count_Sep;\n \n             case Mode is\n-\n                when Single =>\n \n                   --  In this mode just set start to character next to the\n@@ -313,7 +312,6 @@ package body GNAT.Array_Split is\n                      exit when K > Count_Sep\n                        or else S.D.Indexes (K) > S.D.Indexes (K - 1) + 1;\n                   end loop;\n-\n             end case;\n          end loop;\n "}, {"sha": "5771100b678e17a177f3a452e09199a694a8b953", "filename": "gcc/ada/g-awk.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2014, AdaCore                     --\n+--                     Copyright (C) 2000-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -974,7 +974,6 @@ package body GNAT.AWK is\n          Split_Line (Session);\n \n          case Callbacks is\n-\n             when None =>\n                exit;\n \n@@ -985,7 +984,6 @@ package body GNAT.AWK is\n             when Pass_Through =>\n                Filter_Active := Apply_Filters (Session);\n                exit;\n-\n          end case;\n       end loop;\n    end Get_Line;"}, {"sha": "772a70b88395cc80c26fef418d8e6bd11dde9b4b", "filename": "gcc/ada/g-catiio.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2014, AdaCore                     --\n+--                     Copyright (C) 1999-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -500,7 +500,6 @@ package body GNAT.Calendar.Time_IO is\n                when others =>\n                   raise Picture_Error with\n                     \"unknown format character in picture string\";\n-\n             end case;\n \n             --  Skip past % and format character"}, {"sha": "ef76fee3f68f490496c06b23c345ce8825234c6a", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -483,18 +483,22 @@ package body GNAT.Command_Line is\n       end if;\n \n       case Switch (Switch'Last) is\n-         when ':'    =>\n+         when ':' =>\n             Parameter_Type := Parameter_With_Optional_Space;\n             Switch_Last    := Switch'Last - 1;\n-         when '='    =>\n+\n+         when '=' =>\n             Parameter_Type := Parameter_With_Space_Or_Equal;\n             Switch_Last    := Switch'Last - 1;\n-         when '!'    =>\n+\n+         when '!' =>\n             Parameter_Type := Parameter_No_Space;\n             Switch_Last    := Switch'Last - 1;\n-         when '?'    =>\n+\n+         when '?' =>\n             Parameter_Type := Parameter_Optional;\n             Switch_Last    := Switch'Last - 1;\n+\n          when others =>\n             Parameter_Type := Parameter_None;\n             Switch_Last    := Switch'Last;\n@@ -2068,7 +2072,9 @@ package body GNAT.Command_Line is\n                   Found_In_Config := True;\n                   return False;\n \n-               when Parameter_No_Space | Parameter_Optional =>\n+               when Parameter_No_Space\n+                  | Parameter_Optional\n+               =>\n                   Callback (Switch (Switch'First .. Last),\n                             \"\", Switch (Param .. Switch'Last), Index);\n                   Found_In_Config := True;\n@@ -3407,7 +3413,6 @@ package body GNAT.Command_Line is\n                   Config.Switches (Index).String_Output.all :=\n                     new String'(Parameter);\n                   return;\n-\n             end case;\n          end if;\n "}, {"sha": "89de4d6183a364ec2428966906b683fe16372563", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1921,21 +1921,27 @@ package body GNAT.Debug_Pools is\n \n       begin\n          Put_Line (\"\");\n+\n          case Sort is\n-            when Memory_Usage | All_Reports  =>\n+            when All_Reports\n+               | Memory_Usage\n+            =>\n                Put_Line (Size'Img & \" biggest memory users at this time:\");\n                Put_Line (\"Results include bytes and chunks still allocated\");\n                Grand_Total := Float (Pool.Current_Water_Mark);\n+\n             when Allocations_Count =>\n                Put_Line (Size'Img & \" biggest number of live allocations:\");\n                Put_Line (\"Results include bytes and chunks still allocated\");\n                Grand_Total := Float (Pool.Current_Water_Mark);\n+\n             when Sort_Total_Allocs =>\n                Put_Line (Size'Img & \" biggest number of allocations:\");\n                Put_Line (\"Results include total bytes and chunks allocated,\");\n                Put_Line (\"even if no longer allocated - Deallocations are\"\n                          & \" ignored\");\n                Grand_Total := Float (Pool.Allocated);\n+\n             when Marked_Blocks =>\n                Put_Line (\"Special blocks marked by Mark_Traceback\");\n                Grand_Total := 0.0;\n@@ -1964,16 +1970,22 @@ package body GNAT.Debug_Pools is\n                      Bigger := Max (M) = null;\n                      if not Bigger then\n                         case Sort is\n-                        when Memory_Usage | All_Reports =>\n-                           Bigger :=\n-                             Max (M).Total - Max (M).Total_Frees <\n-                             Elem.Total - Elem.Total_Frees;\n-                        when Allocations_Count =>\n-                           Bigger :=\n-                             Max (M).Count - Max (M).Frees\n-                             < Elem.Count - Elem.Frees;\n-                        when Sort_Total_Allocs | Marked_Blocks =>\n-                           Bigger := Max (M).Count < Elem.Count;\n+                           when All_Reports\n+                              | Memory_Usage\n+                           =>\n+                              Bigger :=\n+                                Max (M).Total - Max (M).Total_Frees\n+                                  < Elem.Total - Elem.Total_Frees;\n+\n+                           when Allocations_Count =>\n+                              Bigger :=\n+                                Max (M).Count - Max (M).Frees\n+                                  < Elem.Count - Elem.Frees;\n+\n+                           when Marked_Blocks\n+                              | Sort_Total_Allocs\n+                           =>\n+                              Bigger := Max (M).Count < Elem.Count;\n                         end case;\n                      end if;\n \n@@ -2001,10 +2013,15 @@ package body GNAT.Debug_Pools is\n                P : Percent;\n             begin\n                case Sort is\n-                  when Memory_Usage | Allocations_Count | All_Reports =>\n+                  when All_Reports\n+                     | Allocations_Count\n+                     | Memory_Usage\n+                  =>\n                      Total := Max (M).Total - Max (M).Total_Frees;\n+\n                   when Sort_Total_Allocs =>\n                      Total := Max (M).Total;\n+\n                   when Marked_Blocks =>\n                      Total := Byte_Count (Max (M).Count);\n                end case;\n@@ -2056,7 +2073,6 @@ package body GNAT.Debug_Pools is\n          when others =>\n             Do_Report (Report);\n       end case;\n-\n    end Dump;\n \n    -----------------\n@@ -2068,7 +2084,6 @@ package body GNAT.Debug_Pools is\n       Size   : Positive;\n       Report : Report_Type := All_Reports)\n    is\n-\n       procedure Internal is new Dump\n         (Put_Line => Stdout_Put_Line,\n          Put      => Stdout_Put);"}, {"sha": "d7bb2dda3785d4e861a224c6d3f54648988c686b", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2015, AdaCore                     --\n+--                     Copyright (C) 2000-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -358,10 +358,14 @@ package body GNAT.Expect is\n          Expect_Internal (Descriptors, N, Timeout_Tmp, Full_Buffer);\n \n          case N is\n-            when Expect_Internal_Error | Expect_Process_Died =>\n+            when Expect_Internal_Error\n+               | Expect_Process_Died\n+            =>\n                raise Process_Died;\n \n-            when Expect_Timeout | Expect_Full_Buffer =>\n+            when Expect_Full_Buffer\n+               | Expect_Timeout\n+            =>\n                Result := N;\n                return;\n \n@@ -514,10 +518,14 @@ package body GNAT.Expect is\n          Expect_Internal (Descriptors, N, Timeout, Full_Buffer);\n \n          case N is\n-            when Expect_Internal_Error | Expect_Process_Died =>\n+            when Expect_Internal_Error\n+               | Expect_Process_Died\n+            =>\n                raise Process_Died;\n \n-            when Expect_Timeout | Expect_Full_Buffer =>\n+            when Expect_Full_Buffer\n+               | Expect_Timeout\n+            =>\n                Result := N;\n                return;\n \n@@ -576,10 +584,14 @@ package body GNAT.Expect is\n          Expect_Internal (Descriptors, N, Timeout, Full_Buffer);\n \n          case N is\n-            when Expect_Internal_Error | Expect_Process_Died =>\n+            when Expect_Internal_Error\n+               | Expect_Process_Died\n+            =>\n                raise Process_Died;\n \n-            when Expect_Timeout | Expect_Full_Buffer =>\n+            when Expect_Full_Buffer\n+               | Expect_Timeout\n+            =>\n                Result := N;\n                return;\n \n@@ -698,7 +710,6 @@ package body GNAT.Expect is\n                            --  If there is no limit to the buffer size\n \n                            if Descriptors (D).Buffer_Size = 0 then\n-\n                               declare\n                                  Tmp : String_Access := Descriptors (D).Buffer;\n \n@@ -728,7 +739,7 @@ package body GNAT.Expect is\n                               --  Add what we read to the buffer\n \n                               if Descriptors (D).Buffer_Index + N >\n-                                Descriptors (D).Buffer_Size\n+                                   Descriptors (D).Buffer_Size\n                               then\n                                  --  If the user wants to know when we have\n                                  --  read more than the buffer can contain."}, {"sha": "5652c11179118fbb66b0a870e110626e06b85041", "filename": "gcc/ada/g-forstr.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-forstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-forstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-forstr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2014, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -698,8 +698,9 @@ package body GNAT.Formatted_String is\n             S := Strings.Fixed.Index_Non_Blank (Buffer);\n             E := Buffer'Last;\n \n-         when Decimal_Scientific_Float | Decimal_Scientific_Float_Up =>\n-\n+         when Decimal_Scientific_Float\n+            | Decimal_Scientific_Float_Up\n+         =>\n             Put (Buffer, Var, Aft, Exp => 3);\n             S := Strings.Fixed.Index_Non_Blank (Buffer);\n             E := Buffer'Last;\n@@ -709,8 +710,9 @@ package body GNAT.Formatted_String is\n                  Characters.Handling.To_Lower (Buffer (S .. E));\n             end if;\n \n-         when Shortest_Decimal_Float | Shortest_Decimal_Float_Up =>\n-\n+         when Shortest_Decimal_Float\n+            | Shortest_Decimal_Float_Up\n+         =>\n             --  Without exponent\n \n             Put (Buffer, Var, Aft, Exp => 0);\n@@ -907,10 +909,10 @@ package body GNAT.Formatted_String is\n                                   N'First));\n       begin\n          case F.Base is\n-            when None   =>\n+            when None =>\n                null;\n \n-            when C_Style   =>\n+            when C_Style =>\n                case F.Kind is\n                   when Unsigned_Octal =>\n                      N (P) := 'O';\n@@ -933,7 +935,7 @@ package body GNAT.Formatted_String is\n                      null;\n                end case;\n \n-            when Ada_Style   =>\n+            when Ada_Style =>\n                case F.Kind is\n                   when Unsigned_Octal =>\n                      if F.Left_Justify then\n@@ -945,8 +947,9 @@ package body GNAT.Formatted_String is\n                      N (N'First .. N'First + 1) := \"8#\";\n                      N (N'Last) := '#';\n \n-                  when Unsigned_Hexadecimal_Int    |\n-                       Unsigned_Hexadecimal_Int_Up =>\n+                  when Unsigned_Hexadecimal_Int\n+                     | Unsigned_Hexadecimal_Int_Up\n+                  =>\n                      if F.Left_Justify then\n                         N (N'First + 3 .. N'Last) := N (N'First .. N'Last - 3);\n                      else"}, {"sha": "bee7991ce6477ef5af4868b6e4be5a65ce262057", "filename": "gcc/ada/g-memdum.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-memdum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-memdum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2014, AdaCore                     --\n+--                     Copyright (C) 2003-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -133,6 +133,7 @@ package body GNAT.Memory_Dump is\n                           Offset_Buf (4 .. Last - 1);\n                         Line_Buf (AIL - 1 .. AIL) := \": \";\n                      end;\n+\n                   when None =>\n                      null;\n                end case;"}, {"sha": "76ecb02356f24d496060ff7d136dfdbd4b615b62", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2015, AdaCore                     --\n+--                     Copyright (C) 2002-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -886,7 +886,8 @@ package body GNAT.Perfect_Hash_Generators is\n             Length_2  := 0;\n \n          when Function_Table_1\n-           |  Function_Table_2 =>\n+            | Function_Table_2\n+         =>\n             Item_Size := Type_Size (NV);\n             Length_1  := T1_Len;\n             Length_2  := T2_Len;\n@@ -1675,6 +1676,7 @@ package body GNAT.Perfect_Hash_Generators is\n       case Opt is\n          when CPU_Time =>\n             Put (File, Type_Img (256));\n+\n          when Memory_Space =>\n             Put (File, \"Natural\");\n       end case;\n@@ -1693,6 +1695,7 @@ package body GNAT.Perfect_Hash_Generators is\n       case Opt is\n          when CPU_Time =>\n             Put (File, \"C\");\n+\n          when Memory_Space =>\n             Put (File, \"Character'Pos\");\n       end case;\n@@ -2591,7 +2594,6 @@ package body GNAT.Perfect_Hash_Generators is\n \n          when Graph_Table =>\n             return Get_Graph (J);\n-\n       end case;\n    end Value;\n "}, {"sha": "4140106c8d6ae8eee03cd3958b5d96657a66cbd6", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2015, AdaCore                      --\n+--                    Copyright (C) 2007-2016, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -239,10 +239,12 @@ package body GNAT.Serial_Communications is\n       end if;\n \n       case Flow is\n-         when None     =>\n+         when None =>\n             null;\n-         when RTS_CTS  =>\n+\n+         when RTS_CTS =>\n             Current.c_cflag := Current.c_cflag or CRTSCTS;\n+\n          when Xon_Xoff =>\n             Current.c_iflag := Current.c_iflag or IXON;\n       end case;"}, {"sha": "a8b718a511abb6e117a4b3f7190081c8295bc935", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 64, "deletions": 55, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1169,28 +1169,30 @@ package body GNAT.Sockets is\n       end if;\n \n       case Name is\n-         when Multicast_Loop      |\n-              Multicast_TTL       |\n-              Receive_Packet_Info =>\n+         when Multicast_Loop\n+            | Multicast_TTL\n+            | Receive_Packet_Info\n+         =>\n             Len := V1'Size / 8;\n             Add := V1'Address;\n \n-         when Generic_Option |\n-              Keep_Alive     |\n-              Reuse_Address  |\n-              Broadcast      |\n-              No_Delay       |\n-              Send_Buffer    |\n-              Receive_Buffer |\n-              Multicast_If   |\n-              Error          |\n-              Busy_Polling   =>\n+         when Broadcast\n+            | Busy_Polling\n+            | Error\n+            | Generic_Option\n+            | Keep_Alive\n+            | Multicast_If\n+            | No_Delay\n+            | Receive_Buffer\n+            | Reuse_Address\n+            | Send_Buffer\n+         =>\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Send_Timeout    |\n-              Receive_Timeout =>\n-\n+         when Receive_Timeout\n+            | Send_Timeout\n+         =>\n             --  The standard argument for SO_RCVTIMEO and SO_SNDTIMEO is a\n             --  struct timeval, but on Windows it is a milliseconds count in\n             --  a DWORD.\n@@ -1204,12 +1206,12 @@ package body GNAT.Sockets is\n                Add := VT'Address;\n             end if;\n \n-         when Linger          |\n-              Add_Membership  |\n-              Drop_Membership =>\n+         when Add_Membership\n+            | Drop_Membership\n+            | Linger\n+         =>\n             Len := V8'Size / 8;\n             Add := V8'Address;\n-\n       end case;\n \n       Res :=\n@@ -1228,44 +1230,48 @@ package body GNAT.Sockets is\n             Opt.Optname := Onm;\n             Opt.Optval  := V4;\n \n-         when Keep_Alive    |\n-              Reuse_Address |\n-              Broadcast     |\n-              No_Delay      =>\n+         when Broadcast\n+            | Keep_Alive\n+            | No_Delay\n+            | Reuse_Address\n+         =>\n             Opt.Enabled := (V4 /= 0);\n \n          when Busy_Polling =>\n             Opt.Microseconds := Natural (V4);\n \n-         when Linger          =>\n+         when Linger =>\n             Opt.Enabled := (V8 (V8'First) /= 0);\n             Opt.Seconds := Natural (V8 (V8'Last));\n \n-         when Send_Buffer     |\n-              Receive_Buffer  =>\n+         when Receive_Buffer\n+            | Send_Buffer\n+         =>\n             Opt.Size := Natural (V4);\n \n-         when Error           =>\n+         when Error =>\n             Opt.Error := Resolve_Error (Integer (V4));\n \n-         when Add_Membership  |\n-              Drop_Membership =>\n+         when Add_Membership\n+            | Drop_Membership\n+         =>\n             To_Inet_Addr (To_In_Addr (V8 (V8'First)), Opt.Multicast_Address);\n             To_Inet_Addr (To_In_Addr (V8 (V8'Last)), Opt.Local_Interface);\n \n-         when Multicast_If    =>\n+         when Multicast_If =>\n             To_Inet_Addr (To_In_Addr (V4), Opt.Outgoing_If);\n \n-         when Multicast_TTL   =>\n+         when Multicast_TTL =>\n             Opt.Time_To_Live := Integer (V1);\n \n-         when Multicast_Loop      |\n-              Receive_Packet_Info =>\n+         when Multicast_Loop\n+            | Receive_Packet_Info\n+         =>\n             Opt.Enabled := (V1 /= 0);\n \n-         when Send_Timeout    |\n-              Receive_Timeout =>\n-\n+         when Receive_Timeout\n+            | Send_Timeout\n+         =>\n             if Target_OS = Windows then\n \n                --  Timeout is in milliseconds, actual value is 500 ms +\n@@ -2296,10 +2302,11 @@ package body GNAT.Sockets is\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Keep_Alive    |\n-              Reuse_Address |\n-              Broadcast     |\n-              No_Delay      =>\n+         when Broadcast\n+            | Keep_Alive\n+            | No_Delay\n+            | Reuse_Address\n+         =>\n             V4  := C.int (Boolean'Pos (Option.Enabled));\n             Len := V4'Size / 8;\n             Add := V4'Address;\n@@ -2309,49 +2316,52 @@ package body GNAT.Sockets is\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Linger          =>\n+         when Linger =>\n             V8 (V8'First) := C.int (Boolean'Pos (Option.Enabled));\n             V8 (V8'Last)  := C.int (Option.Seconds);\n             Len := V8'Size / 8;\n             Add := V8'Address;\n \n-         when Send_Buffer     |\n-              Receive_Buffer  =>\n+         when Receive_Buffer\n+            | Send_Buffer\n+         =>\n             V4  := C.int (Option.Size);\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Error           =>\n+         when Error =>\n             V4  := C.int (Boolean'Pos (True));\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Add_Membership  |\n-              Drop_Membership =>\n+         when Add_Membership\n+            | Drop_Membership\n+         =>\n             V8 (V8'First) := To_Int (To_In_Addr (Option.Multicast_Address));\n             V8 (V8'Last)  := To_Int (To_In_Addr (Option.Local_Interface));\n             Len := V8'Size / 8;\n             Add := V8'Address;\n \n-         when Multicast_If    =>\n+         when Multicast_If =>\n             V4  := To_Int (To_In_Addr (Option.Outgoing_If));\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n-         when Multicast_TTL   =>\n+         when Multicast_TTL =>\n             V1  := C.unsigned_char (Option.Time_To_Live);\n             Len := V1'Size / 8;\n             Add := V1'Address;\n \n-         when Multicast_Loop      |\n-              Receive_Packet_Info =>\n+         when Multicast_Loop\n+            | Receive_Packet_Info\n+         =>\n             V1  := C.unsigned_char (Boolean'Pos (Option.Enabled));\n             Len := V1'Size / 8;\n             Add := V1'Address;\n \n-         when Send_Timeout    |\n-              Receive_Timeout =>\n-\n+         when Receive_Timeout\n+            | Send_Timeout\n+         =>\n             if Target_OS = Windows then\n \n                --  On Windows, the timeout is a DWORD in milliseconds, and\n@@ -2375,7 +2385,6 @@ package body GNAT.Sockets is\n                Len := VT'Size / 8;\n                Add := VT'Address;\n             end if;\n-\n       end case;\n \n       if Option.Name in Specific_Option_Name then"}, {"sha": "6ce2fb6cc4201a46ccd09154e5a646fc764ace90", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 45, "deletions": 47, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -569,62 +569,60 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       case Errno is\n-         when EINTR =>           Errm := Error_Messages (N_EINTR);\n-         when EBADF =>           Errm := Error_Messages (N_EBADF);\n-         when EACCES =>          Errm := Error_Messages (N_EACCES);\n-         when EFAULT =>          Errm := Error_Messages (N_EFAULT);\n-         when EINVAL =>          Errm := Error_Messages (N_EINVAL);\n-         when EMFILE =>          Errm := Error_Messages (N_EMFILE);\n-         when EWOULDBLOCK =>     Errm := Error_Messages (N_EWOULDBLOCK);\n-         when EINPROGRESS =>     Errm := Error_Messages (N_EINPROGRESS);\n-         when EALREADY =>        Errm := Error_Messages (N_EALREADY);\n-         when ENOTSOCK =>        Errm := Error_Messages (N_ENOTSOCK);\n-         when EDESTADDRREQ =>    Errm := Error_Messages (N_EDESTADDRREQ);\n-         when EMSGSIZE =>        Errm := Error_Messages (N_EMSGSIZE);\n-         when EPROTOTYPE =>      Errm := Error_Messages (N_EPROTOTYPE);\n-         when ENOPROTOOPT =>     Errm := Error_Messages (N_ENOPROTOOPT);\n-         when EPROTONOSUPPORT => Errm := Error_Messages (N_EPROTONOSUPPORT);\n-         when ESOCKTNOSUPPORT => Errm := Error_Messages (N_ESOCKTNOSUPPORT);\n-         when EOPNOTSUPP =>      Errm := Error_Messages (N_EOPNOTSUPP);\n-         when EPFNOSUPPORT =>    Errm := Error_Messages (N_EPFNOSUPPORT);\n-         when EAFNOSUPPORT =>    Errm := Error_Messages (N_EAFNOSUPPORT);\n-         when EADDRINUSE =>      Errm := Error_Messages (N_EADDRINUSE);\n-         when EADDRNOTAVAIL =>   Errm := Error_Messages (N_EADDRNOTAVAIL);\n-         when ENETDOWN =>        Errm := Error_Messages (N_ENETDOWN);\n-         when ENETUNREACH =>     Errm := Error_Messages (N_ENETUNREACH);\n-         when ENETRESET =>       Errm := Error_Messages (N_ENETRESET);\n-         when ECONNABORTED =>    Errm := Error_Messages (N_ECONNABORTED);\n-         when ECONNRESET =>      Errm := Error_Messages (N_ECONNRESET);\n-         when ENOBUFS =>         Errm := Error_Messages (N_ENOBUFS);\n-         when EISCONN =>         Errm := Error_Messages (N_EISCONN);\n-         when ENOTCONN =>        Errm := Error_Messages (N_ENOTCONN);\n-         when ESHUTDOWN =>       Errm := Error_Messages (N_ESHUTDOWN);\n-         when ETOOMANYREFS =>    Errm := Error_Messages (N_ETOOMANYREFS);\n-         when ETIMEDOUT =>       Errm := Error_Messages (N_ETIMEDOUT);\n-         when ECONNREFUSED =>    Errm := Error_Messages (N_ECONNREFUSED);\n-         when ELOOP =>           Errm := Error_Messages (N_ELOOP);\n-         when ENAMETOOLONG =>    Errm := Error_Messages (N_ENAMETOOLONG);\n-         when EHOSTDOWN =>       Errm := Error_Messages (N_EHOSTDOWN);\n-         when EHOSTUNREACH =>    Errm := Error_Messages (N_EHOSTUNREACH);\n+         when EINTR              => Errm := Error_Messages (N_EINTR);\n+         when EBADF              => Errm := Error_Messages (N_EBADF);\n+         when EACCES             => Errm := Error_Messages (N_EACCES);\n+         when EFAULT             => Errm := Error_Messages (N_EFAULT);\n+         when EINVAL             => Errm := Error_Messages (N_EINVAL);\n+         when EMFILE             => Errm := Error_Messages (N_EMFILE);\n+         when EWOULDBLOCK        => Errm := Error_Messages (N_EWOULDBLOCK);\n+         when EINPROGRESS        => Errm := Error_Messages (N_EINPROGRESS);\n+         when EALREADY           => Errm := Error_Messages (N_EALREADY);\n+         when ENOTSOCK           => Errm := Error_Messages (N_ENOTSOCK);\n+         when EDESTADDRREQ       => Errm := Error_Messages (N_EDESTADDRREQ);\n+         when EMSGSIZE           => Errm := Error_Messages (N_EMSGSIZE);\n+         when EPROTOTYPE         => Errm := Error_Messages (N_EPROTOTYPE);\n+         when ENOPROTOOPT        => Errm := Error_Messages (N_ENOPROTOOPT);\n+         when EPROTONOSUPPORT    => Errm := Error_Messages (N_EPROTONOSUPPORT);\n+         when ESOCKTNOSUPPORT    => Errm := Error_Messages (N_ESOCKTNOSUPPORT);\n+         when EOPNOTSUPP         => Errm := Error_Messages (N_EOPNOTSUPP);\n+         when EPFNOSUPPORT       => Errm := Error_Messages (N_EPFNOSUPPORT);\n+         when EAFNOSUPPORT       => Errm := Error_Messages (N_EAFNOSUPPORT);\n+         when EADDRINUSE         => Errm := Error_Messages (N_EADDRINUSE);\n+         when EADDRNOTAVAIL      => Errm := Error_Messages (N_EADDRNOTAVAIL);\n+         when ENETDOWN           => Errm := Error_Messages (N_ENETDOWN);\n+         when ENETUNREACH        => Errm := Error_Messages (N_ENETUNREACH);\n+         when ENETRESET          => Errm := Error_Messages (N_ENETRESET);\n+         when ECONNABORTED       => Errm := Error_Messages (N_ECONNABORTED);\n+         when ECONNRESET         => Errm := Error_Messages (N_ECONNRESET);\n+         when ENOBUFS            => Errm := Error_Messages (N_ENOBUFS);\n+         when EISCONN            => Errm := Error_Messages (N_EISCONN);\n+         when ENOTCONN           => Errm := Error_Messages (N_ENOTCONN);\n+         when ESHUTDOWN          => Errm := Error_Messages (N_ESHUTDOWN);\n+         when ETOOMANYREFS       => Errm := Error_Messages (N_ETOOMANYREFS);\n+         when ETIMEDOUT          => Errm := Error_Messages (N_ETIMEDOUT);\n+         when ECONNREFUSED       => Errm := Error_Messages (N_ECONNREFUSED);\n+         when ELOOP              => Errm := Error_Messages (N_ELOOP);\n+         when ENAMETOOLONG       => Errm := Error_Messages (N_ENAMETOOLONG);\n+         when EHOSTDOWN          => Errm := Error_Messages (N_EHOSTDOWN);\n+         when EHOSTUNREACH       => Errm := Error_Messages (N_EHOSTUNREACH);\n \n          --  Windows-specific error codes\n \n-         when WSASYSNOTREADY =>  Errm := Error_Messages (N_WSASYSNOTREADY);\n+         when WSASYSNOTREADY     => Errm := Error_Messages (N_WSASYSNOTREADY);\n          when WSAVERNOTSUPPORTED =>\n             Errm := Error_Messages (N_WSAVERNOTSUPPORTED);\n-         when WSANOTINITIALISED =>\n+         when WSANOTINITIALISED  =>\n             Errm := Error_Messages (N_WSANOTINITIALISED);\n-         when WSAEDISCON =>\n-            Errm := Error_Messages (N_WSAEDISCON);\n+         when WSAEDISCON         => Errm := Error_Messages (N_WSAEDISCON);\n \n          --  h_errno values\n \n-         when HOST_NOT_FOUND =>  Errm := Error_Messages (N_HOST_NOT_FOUND);\n-         when TRY_AGAIN =>       Errm := Error_Messages (N_TRY_AGAIN);\n-         when NO_RECOVERY =>     Errm := Error_Messages (N_NO_RECOVERY);\n-         when NO_DATA =>         Errm := Error_Messages (N_NO_DATA);\n-\n-         when others =>          Errm := Error_Messages (N_OTHERS);\n+         when HOST_NOT_FOUND     => Errm := Error_Messages (N_HOST_NOT_FOUND);\n+         when TRY_AGAIN          => Errm := Error_Messages (N_TRY_AGAIN);\n+         when NO_RECOVERY        => Errm := Error_Messages (N_NO_RECOVERY);\n+         when NO_DATA            => Errm := Error_Messages (N_NO_DATA);\n+         when others             => Errm := Error_Messages (N_OTHERS);\n       end case;\n \n       return Value (Errm);"}, {"sha": "348c8e4e00a078ecd9d8d7b51a87c39dbaa404bd", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 197, "deletions": 167, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2015, AdaCore                     --\n+--                     Copyright (C) 1998-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -220,103 +220,130 @@ package body GNAT.Spitbol.Patterns is\n       --  Successor element, to be matched after this one\n \n       case Pcode is\n+         when PC_Arb_Y\n+            | PC_Assign\n+            | PC_Bal\n+            | PC_BreakX_X\n+            | PC_Cancel\n+            | PC_EOP\n+            | PC_Fail\n+            | PC_Fence\n+            | PC_Fence_X\n+            | PC_Fence_Y\n+            | PC_Null\n+            | PC_R_Enter\n+            | PC_R_Remove\n+            | PC_R_Restore\n+            | PC_Rest\n+            | PC_Succeed\n+            | PC_Unanchored\n+         =>\n+            null;\n+\n+         when PC_Alt\n+            | PC_Arb_X\n+            | PC_Arbno_S\n+            | PC_Arbno_X\n+         =>\n+            Alt : PE_Ptr;\n \n-         when PC_Arb_Y      |\n-              PC_Assign     |\n-              PC_Bal        |\n-              PC_BreakX_X   |\n-              PC_Cancel     |\n-              PC_EOP        |\n-              PC_Fail       |\n-              PC_Fence      |\n-              PC_Fence_X    |\n-              PC_Fence_Y    |\n-              PC_Null       |\n-              PC_R_Enter    |\n-              PC_R_Remove   |\n-              PC_R_Restore  |\n-              PC_Rest       |\n-              PC_Succeed    |\n-              PC_Unanchored => null;\n-\n-         when PC_Alt        |\n-              PC_Arb_X      |\n-              PC_Arbno_S    |\n-              PC_Arbno_X    => Alt  : PE_Ptr;\n-\n-         when PC_Rpat       => PP   : Pattern_Ptr;\n-\n-         when PC_Pred_Func  => BF   : Boolean_Func;\n-\n-         when PC_Assign_Imm |\n-              PC_Assign_OnM |\n-              PC_Any_VP     |\n-              PC_Break_VP   |\n-              PC_BreakX_VP  |\n-              PC_NotAny_VP  |\n-              PC_NSpan_VP   |\n-              PC_Span_VP    |\n-              PC_String_VP  => VP   : VString_Ptr;\n-\n-         when PC_Write_Imm  |\n-              PC_Write_OnM  => FP   : File_Ptr;\n-\n-         when PC_String     => Str  : String_Ptr;\n-\n-         when PC_String_2   => Str2 : String (1 .. 2);\n-\n-         when PC_String_3   => Str3 : String (1 .. 3);\n-\n-         when PC_String_4   => Str4 : String (1 .. 4);\n-\n-         when PC_String_5   => Str5 : String (1 .. 5);\n-\n-         when PC_String_6   => Str6 : String (1 .. 6);\n-\n-         when PC_Setcur     => Var  : Natural_Ptr;\n-\n-         when PC_Any_CH     |\n-              PC_Break_CH   |\n-              PC_BreakX_CH  |\n-              PC_Char       |\n-              PC_NotAny_CH  |\n-              PC_NSpan_CH   |\n-              PC_Span_CH    => Char : Character;\n-\n-         when PC_Any_CS     |\n-              PC_Break_CS   |\n-              PC_BreakX_CS  |\n-              PC_NotAny_CS  |\n-              PC_NSpan_CS   |\n-              PC_Span_CS    => CS   : Character_Set;\n-\n-         when PC_Arbno_Y    |\n-              PC_Len_Nat    |\n-              PC_Pos_Nat    |\n-              PC_RPos_Nat   |\n-              PC_RTab_Nat   |\n-              PC_Tab_Nat    => Nat  : Natural;\n-\n-         when PC_Pos_NF     |\n-              PC_Len_NF     |\n-              PC_RPos_NF    |\n-              PC_RTab_NF    |\n-              PC_Tab_NF     => NF   : Natural_Func;\n-\n-         when PC_Pos_NP     |\n-              PC_Len_NP     |\n-              PC_RPos_NP    |\n-              PC_RTab_NP    |\n-              PC_Tab_NP     => NP   : Natural_Ptr;\n-\n-         when PC_Any_VF     |\n-              PC_Break_VF   |\n-              PC_BreakX_VF  |\n-              PC_NotAny_VF  |\n-              PC_NSpan_VF   |\n-              PC_Span_VF    |\n-              PC_String_VF  => VF   : VString_Func;\n+         when PC_Rpat =>\n+            PP : Pattern_Ptr;\n+\n+         when PC_Pred_Func =>\n+            BF : Boolean_Func;\n+\n+         when PC_Assign_Imm\n+            | PC_Assign_OnM\n+            | PC_Any_VP\n+            | PC_Break_VP\n+            | PC_BreakX_VP\n+            | PC_NotAny_VP\n+            | PC_NSpan_VP\n+            | PC_Span_VP\n+            | PC_String_VP\n+         =>\n+            VP : VString_Ptr;\n+\n+         when PC_Write_Imm\n+            | PC_Write_OnM\n+         =>\n+            FP : File_Ptr;\n+\n+         when PC_String =>\n+            Str : String_Ptr;\n+\n+         when PC_String_2 =>\n+            Str2 : String (1 .. 2);\n+\n+         when PC_String_3 =>\n+            Str3 : String (1 .. 3);\n+\n+         when PC_String_4 =>\n+            Str4 : String (1 .. 4);\n \n+         when PC_String_5 =>\n+            Str5 : String (1 .. 5);\n+\n+         when PC_String_6 =>\n+            Str6 : String (1 .. 6);\n+\n+         when PC_Setcur =>\n+            Var : Natural_Ptr;\n+\n+         when PC_Any_CH\n+            | PC_Break_CH\n+            | PC_BreakX_CH\n+            | PC_Char\n+            | PC_NotAny_CH\n+            | PC_NSpan_CH\n+            | PC_Span_CH\n+         =>\n+            Char : Character;\n+\n+         when PC_Any_CS\n+            | PC_Break_CS\n+            | PC_BreakX_CS\n+            | PC_NotAny_CS\n+            | PC_NSpan_CS\n+            | PC_Span_CS\n+         =>\n+            CS : Character_Set;\n+\n+         when PC_Arbno_Y\n+            | PC_Len_Nat\n+            | PC_Pos_Nat\n+            | PC_RPos_Nat\n+            | PC_RTab_Nat\n+            | PC_Tab_Nat\n+         =>\n+            Nat : Natural;\n+\n+         when PC_Pos_NF\n+            | PC_Len_NF\n+            | PC_RPos_NF\n+            | PC_RTab_NF\n+            | PC_Tab_NF\n+         =>\n+            NF : Natural_Func;\n+\n+         when PC_Pos_NP\n+            | PC_Len_NP\n+            | PC_RPos_NP\n+            | PC_RTab_NP\n+            | PC_Tab_NP\n+         =>\n+            NP : Natural_Ptr;\n+\n+         when PC_Any_VF\n+            | PC_Break_VF\n+            | PC_BreakX_VF\n+            | PC_NotAny_VF\n+            | PC_NSpan_VF\n+            | PC_Span_VF\n+            | PC_String_VF\n+         =>\n+            VF : VString_Func;\n       end case;\n    end record;\n \n@@ -2163,11 +2190,11 @@ package body GNAT.Spitbol.Patterns is\n          Set_Col (24 + 2 * Count (Cols) + Address_Image_Length);\n \n          case E.Pcode is\n-\n-            when PC_Alt     |\n-                 PC_Arb_X   |\n-                 PC_Arbno_S |\n-                 PC_Arbno_X =>\n+            when PC_Alt\n+               | PC_Arb_X\n+               | PC_Arbno_S\n+               | PC_Arbno_X\n+            =>\n                Write_Node_Id (E.Alt);\n \n             when PC_Rpat =>\n@@ -2176,19 +2203,21 @@ package body GNAT.Spitbol.Patterns is\n             when PC_Pred_Func =>\n                Put (Str_BF (E.BF));\n \n-            when PC_Assign_Imm |\n-                 PC_Assign_OnM |\n-                 PC_Any_VP     |\n-                 PC_Break_VP   |\n-                 PC_BreakX_VP  |\n-                 PC_NotAny_VP  |\n-                 PC_NSpan_VP   |\n-                 PC_Span_VP    |\n-                 PC_String_VP  =>\n+            when PC_Assign_Imm\n+               | PC_Assign_OnM\n+               | PC_Any_VP\n+               | PC_Break_VP\n+               | PC_BreakX_VP\n+               | PC_NotAny_VP\n+               | PC_NSpan_VP\n+               | PC_Span_VP\n+               | PC_String_VP\n+            =>\n                Put (Str_VP (E.VP));\n \n-            when PC_Write_Imm  |\n-                 PC_Write_OnM =>\n+            when PC_Write_Imm\n+               | PC_Write_OnM\n+            =>\n                Put (Str_FP (E.FP));\n \n             when PC_String =>\n@@ -2212,56 +2241,62 @@ package body GNAT.Spitbol.Patterns is\n             when PC_Setcur =>\n                Put (Str_NP (E.Var));\n \n-            when PC_Any_CH      |\n-                 PC_Break_CH    |\n-                 PC_BreakX_CH   |\n-                 PC_Char        |\n-                 PC_NotAny_CH   |\n-                 PC_NSpan_CH    |\n-                 PC_Span_CH     =>\n+            when PC_Any_CH\n+               | PC_Break_CH\n+               | PC_BreakX_CH\n+               | PC_Char\n+               | PC_NotAny_CH\n+               | PC_NSpan_CH\n+               | PC_Span_CH\n+            =>\n                Put (''' & E.Char & ''');\n \n-            when PC_Any_CS      |\n-                 PC_Break_CS    |\n-                 PC_BreakX_CS   |\n-                 PC_NotAny_CS   |\n-                 PC_NSpan_CS    |\n-                 PC_Span_CS     =>\n+            when PC_Any_CS\n+               | PC_Break_CS\n+               | PC_BreakX_CS\n+               | PC_NotAny_CS\n+               | PC_NSpan_CS\n+               | PC_Span_CS\n+            =>\n                Put ('\"' & To_Sequence (E.CS) & '\"');\n \n-            when PC_Arbno_Y     |\n-                 PC_Len_Nat     |\n-                 PC_Pos_Nat     |\n-                 PC_RPos_Nat    |\n-                 PC_RTab_Nat    |\n-                 PC_Tab_Nat     =>\n+            when PC_Arbno_Y\n+               | PC_Len_Nat\n+               | PC_Pos_Nat\n+               | PC_RPos_Nat\n+               | PC_RTab_Nat\n+               | PC_Tab_Nat\n+            =>\n                Put (S (E.Nat));\n \n-            when PC_Pos_NF      |\n-                 PC_Len_NF      |\n-                 PC_RPos_NF     |\n-                 PC_RTab_NF     |\n-                 PC_Tab_NF      =>\n+            when PC_Pos_NF\n+               | PC_Len_NF\n+               | PC_RPos_NF\n+               | PC_RTab_NF\n+               | PC_Tab_NF\n+            =>\n                Put (Str_NF (E.NF));\n \n-            when PC_Pos_NP      |\n-                 PC_Len_NP      |\n-                 PC_RPos_NP     |\n-                 PC_RTab_NP     |\n-                 PC_Tab_NP      =>\n+            when PC_Pos_NP\n+               | PC_Len_NP\n+               | PC_RPos_NP\n+               | PC_RTab_NP\n+               | PC_Tab_NP\n+            =>\n                Put (Str_NP (E.NP));\n \n-            when PC_Any_VF      |\n-                 PC_Break_VF    |\n-                 PC_BreakX_VF   |\n-                 PC_NotAny_VF   |\n-                 PC_NSpan_VF    |\n-                 PC_Span_VF     |\n-                 PC_String_VF   =>\n+            when PC_Any_VF\n+               | PC_Break_VF\n+               | PC_BreakX_VF\n+               | PC_NotAny_VF\n+               | PC_NSpan_VF\n+               | PC_Span_VF\n+               | PC_String_VF\n+            =>\n                Put (Str_VF (E.VF));\n \n-            when others => null;\n-\n+            when others =>\n+               null;\n          end case;\n \n          New_Line;\n@@ -2409,7 +2444,6 @@ package body GNAT.Spitbol.Patterns is\n \n       begin\n          case E.Pcode is\n-\n             when PC_Cancel =>\n                Append (Result, \"Cancel\");\n \n@@ -2668,17 +2702,17 @@ package body GNAT.Spitbol.Patterns is\n \n             --  Other pattern codes should not appear as leading elements\n \n-            when PC_Arb_Y      |\n-                 PC_Arbno_Y    |\n-                 PC_Assign     |\n-                 PC_BreakX_X   |\n-                 PC_EOP        |\n-                 PC_Fence_Y    |\n-                 PC_R_Remove   |\n-                 PC_R_Restore  |\n-                 PC_Unanchored =>\n+            when PC_Arb_Y\n+               | PC_Arbno_Y\n+               | PC_Assign\n+               | PC_BreakX_X\n+               | PC_EOP\n+               | PC_Fence_Y\n+               | PC_R_Remove\n+               | PC_R_Restore\n+               | PC_Unanchored\n+            =>\n                Append (Result, \"???\");\n-\n          end case;\n \n          E := ER;\n@@ -3450,7 +3484,6 @@ package body GNAT.Spitbol.Patterns is\n \n          when others =>\n             return new PE'(PC_String, 1, EOP, new String'(Str));\n-\n       end case;\n    end S_To_PE;\n \n@@ -3998,7 +4031,7 @@ package body GNAT.Spitbol.Patterns is\n \n          --  Arb (extension)\n \n-         when PC_Arb_Y  =>\n+         when PC_Arb_Y =>\n             if Cursor < Length then\n                Cursor := Cursor + 1;\n                Push (Node);\n@@ -4916,7 +4949,6 @@ package body GNAT.Spitbol.Patterns is\n             Pop_Region;\n             Assign_OnM := True;\n             goto Succeed;\n-\n       end case;\n \n       --  We are NOT allowed to fall though this case statement, since every\n@@ -5315,8 +5347,7 @@ package body GNAT.Spitbol.Patterns is\n          --  Alternation\n \n          when PC_Alt =>\n-            Dout\n-              (Img (Node) & \"setting up alternative \" & Img (Node.Alt));\n+            Dout (Img (Node) & \"setting up alternative \" & Img (Node.Alt));\n             Push (Node.Alt);\n             Node := Node.Pthen;\n             goto Match;\n@@ -6437,7 +6468,6 @@ package body GNAT.Spitbol.Patterns is\n             Pop_Region;\n             Assign_OnM := True;\n             goto Succeed;\n-\n       end case;\n \n       --  We are NOT allowed to fall though this case statement, since every"}, {"sha": "79e0a954883e533717d645a82596cc33c8790d46", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -304,7 +304,6 @@ begin\n \n                when others =>\n                   raise Program_Error;\n-\n             end case;\n \n          --  Statement entry"}, {"sha": "9b82d5bfdd1d089f63ae820cc20a4b8fc40e112a", "filename": "gcc/ada/get_spark_xrefs.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fget_spark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fget_spark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_spark_xrefs.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -412,7 +412,6 @@ begin\n                --  Loop through cross-references for this entity\n \n                loop\n-\n                   declare\n                      Line  : Nat;\n                      Col   : Nat;"}, {"sha": "34aea34f06b9b218ef30734ccb8719d0b34d58e4", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -543,9 +543,11 @@ procedure Gnat1drv is\n                      Write_Line\n                        (\"(requesting support for Frontend ZCX exceptions)\");\n                      raise Unrecoverable_Error;\n+\n                   when False =>\n                      Exception_Mechanism := Front_End_SJLJ;\n                end case;\n+\n             when False =>\n                case Targparm.ZCX_By_Default_On_Target is\n                   when True =>"}, {"sha": "7d9875173cc67a901b6bcea1fb0b669eb9d2bc0b", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -277,7 +277,6 @@ procedure Gnatbind is\n \n             when others =>\n                raise Program_Error;\n-\n          end case;\n       end Restriction_Could_Be_Set;\n "}, {"sha": "e82e8d591ae8325e5a1ef6c7156eb9dff73ef3f2", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -701,7 +701,11 @@ begin\n \n                if Call_GPR_Tool then\n                   case The_Command is\n-                     when Make | Compile | Bind | Link =>\n+                     when Bind\n+                        | Compile\n+                        | Link\n+                        | Make\n+                     =>\n                         if Locate_Exec_On_Path (Gprbuild) /= null then\n                            Program    := new String'(Gprbuild);\n                            Get_Target := True;"}, {"sha": "94b39b8cc7d59a2fc7376e7ddf56ca14d9317d88", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -271,7 +271,6 @@ procedure Gnatdll is\n \n       loop\n          case Getopt (\"g h v q k a? b: d: e: l: n m I:\") is\n-\n             when ASCII.NUL =>\n                exit;\n \n@@ -305,11 +304,9 @@ procedure Gnatdll is\n                end if;\n \n             when 'k' =>\n-\n                MDLL.Kill_Suffix := True;\n \n             when 'a' =>\n-\n                if Parameter = \"\" then\n \n                   --  Default address for a relocatable dynamic library.\n@@ -324,13 +321,10 @@ procedure Gnatdll is\n                Must_Build_Relocatable := False;\n \n             when 'b' =>\n-\n                DLL_Address := To_Unbounded_String (Parameter);\n-\n                Must_Build_Relocatable := True;\n \n             when 'e' =>\n-\n                Def_Filename := To_Unbounded_String (Parameter);\n \n             when 'd' =>\n@@ -347,11 +341,9 @@ procedure Gnatdll is\n                Build_Mode := Dynamic_Lib;\n \n             when 'm' =>\n-\n                Gen_Map_File := True;\n \n             when 'n' =>\n-\n                Build_Import := False;\n \n             when 'l' =>\n@@ -398,14 +390,12 @@ procedure Gnatdll is\n \n       loop\n          case Getopt (\"*\") is\n-\n             when ASCII.NUL =>\n                exit;\n \n             when others =>\n                Bopts (B) := new String'(Full_Switch);\n                B := B + 1;\n-\n          end case;\n       end loop;\n "}, {"sha": "666d0ae2dcdf6096074a555bb307b46fab05fbd2", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -729,7 +729,6 @@ package body GPrep is\n             Switch := GNAT.Command_Line.Getopt (\"D: a b c C r s T u v\");\n \n             case Switch is\n-\n                when ASCII.NUL =>\n                   exit;\n "}, {"sha": "bd331b48c92252645b39620872634c86e2e8bda3", "filename": "gcc/ada/i-cobol.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fi-cobol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fi-cobol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -543,7 +543,6 @@ package body Interfaces.COBOL is\n             Val := abs Val;\n             Convert (1, Length);\n             Embed_Sign (Length);\n-\n       end case;\n \n       return Result;"}, {"sha": "4373a970ec4fbbc496573daed0d10e5a62669261", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -668,13 +668,12 @@ package body Layout is\n \n       type Val_Status_Type is (Const, Dynamic);\n \n-      type Val_Type (Status : Val_Status_Type := Const) is\n-         record\n-            case Status is\n-               when Const   => Val : Uint;\n-               when Dynamic => Nod : Node_Id;\n-            end case;\n-         end record;\n+      type Val_Type (Status : Val_Status_Type := Const) is record\n+         case Status is\n+            when Const   => Val : Uint;\n+            when Dynamic => Nod : Node_Id;\n+         end case;\n+      end record;\n       --  Shows the status of the value so far. Const means that the value is\n       --  constant, and Val is the current constant value. Dynamic means that\n       --  the value is dynamic, and in this case Nod is the Node_Id of the\n@@ -932,19 +931,19 @@ package body Layout is\n \n       type Val_Status_Type is (Const, Dynamic, Discrim);\n \n-      type Val_Type (Status : Val_Status_Type := Const) is\n-         record\n-            case Status is\n-               when Const =>\n-                  Val : Uint;\n-                  --  Calculated value so far if Val_Status = Const\n-\n-               when Dynamic | Discrim =>\n-                  Nod : Node_Id;\n-                  --  Expression value so far if Val_Status /= Const\n-\n-            end case;\n-         end record;\n+      type Val_Type (Status : Val_Status_Type := Const) is record\n+         case Status is\n+            when Const =>\n+               Val : Uint;\n+               --  Calculated value so far if Val_Status = Const\n+\n+            when Discrim\n+               | Dynamic\n+            =>\n+               Nod : Node_Id;\n+               --  Expression value so far if Val_Status /= Const\n+         end case;\n+      end record;\n       --  Records the value or expression computed so far. Const means that\n       --  the value is constant, and Val is the current constant value.\n       --  Dynamic means that the value is dynamic, and in this case Nod is"}, {"sha": "b74489fb34d9d617a7904be005d27b0e662691e1", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 35, "deletions": 28, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -144,18 +144,20 @@ package body SPARK_Specific is\n          end if;\n \n          case Ekind (E) is\n-            when E_Entry             |\n-                 E_Entry_Family      |\n-                 E_Generic_Function  |\n-                 E_Generic_Package   |\n-                 E_Generic_Procedure |\n-                 E_Package           |\n-                 E_Protected_Type    |\n-                 E_Task_Type         =>\n+            when E_Entry\n+               | E_Entry_Family\n+               | E_Generic_Function\n+               | E_Generic_Package\n+               | E_Generic_Procedure\n+               | E_Package\n+               | E_Protected_Type\n+               | E_Task_Type\n+            =>\n                Typ := Xref_Entity_Letters (Ekind (E));\n \n-            when E_Function | E_Procedure =>\n-\n+            when E_Function\n+               | E_Procedure\n+            =>\n                --  In SPARK we need to distinguish protected functions and\n                --  procedures from ordinary subprograms, but there are no\n                --  special Xref letters for them. Since this distiction is\n@@ -168,10 +170,11 @@ package body SPARK_Specific is\n                   Typ := Xref_Entity_Letters (Ekind (E));\n                end if;\n \n-            when E_Package_Body    |\n-                 E_Protected_Body  |\n-                 E_Subprogram_Body |\n-                 E_Task_Body       =>\n+            when E_Package_Body\n+               | E_Protected_Body\n+               | E_Subprogram_Body\n+               | E_Task_Body\n+            =>\n                Typ := Xref_Entity_Letters (Ekind (Unique_Entity (E)));\n \n             when E_Void =>\n@@ -456,7 +459,9 @@ package body SPARK_Specific is\n                   end if;\n                end;\n \n-            when E_Loop_Parameter | E_In_Parameter =>\n+            when E_In_Parameter\n+               | E_Loop_Parameter\n+            =>\n                Result := True;\n \n             when others =>\n@@ -1091,9 +1096,9 @@ package body SPARK_Specific is\n \n       while Present (Context) loop\n          case Nkind (Context) is\n-            when N_Package_Body          |\n-                 N_Package_Specification =>\n-\n+            when N_Package_Body\n+               | N_Package_Specification\n+            =>\n                --  Only return a library-level package\n \n                if Is_Library_Level_Entity (Defining_Entity (Context)) then\n@@ -1121,14 +1126,15 @@ package body SPARK_Specific is\n                   Context := Parent (Context);\n                end if;\n \n-            when N_Entry_Body                 |\n-                 N_Entry_Declaration          |\n-                 N_Protected_Type_Declaration |\n-                 N_Subprogram_Body            |\n-                 N_Subprogram_Declaration     |\n-                 N_Subprogram_Specification   |\n-                 N_Task_Body                  |\n-                 N_Task_Type_Declaration      =>\n+            when N_Entry_Body\n+               | N_Entry_Declaration\n+               | N_Protected_Type_Declaration\n+               | N_Subprogram_Body\n+               | N_Subprogram_Declaration\n+               | N_Subprogram_Specification\n+               | N_Task_Body\n+               | N_Task_Type_Declaration\n+            =>\n                Context := Defining_Entity (Context);\n                exit;\n \n@@ -1317,8 +1323,9 @@ package body SPARK_Specific is\n                   Traverse_Protected_Body (Get_Body_From_Stub (N));\n                end if;\n \n-            when N_Protected_Type_Declaration   |\n-                 N_Single_Protected_Declaration =>\n+            when N_Protected_Type_Declaration\n+               | N_Single_Protected_Declaration\n+            =>\n                Traverse_Visible_And_Private_Parts (Protected_Definition (N));\n \n             when N_Task_Definition =>"}, {"sha": "0c09609ea7d783216567433dd21672b8bd464b24", "filename": "gcc/ada/live.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flive.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Flive.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flive.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -267,6 +267,7 @@ package body Live is\n             when others =>\n                null;\n          end case;\n+\n          return OK;\n       end Process;\n \n@@ -305,8 +306,11 @@ package body Live is\n \n       begin\n          case Nkind (N) is\n-            when N_Pragma | N_Generic_Declaration'Range |\n-                 N_Subprogram_Declaration | N_Subprogram_Body_Stub =>\n+            when N_Generic_Declaration'Range\n+               | N_Pragma\n+               | N_Subprogram_Body_Stub\n+               | N_Subprogram_Declaration\n+            =>\n                Result := Skip;\n \n             when N_Subprogram_Body =>\n@@ -319,7 +323,10 @@ package body Live is\n                   Traverse (Proper_Body (Unit (Library_Unit (N))));\n                end if;\n \n-            when N_Identifier | N_Operator_Symbol | N_Expanded_Name =>\n+            when N_Expanded_Name\n+               | N_Identifier\n+               | N_Operator_Symbol\n+            =>\n                E := Entity (N);\n \n                if E /= Empty and then not Marked (Marks, E) then"}, {"sha": "4fd741c1be600f33f78e7ef3cb010963d7a2622f", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2163,15 +2163,15 @@ package body Make is\n \n          for Ptr in Template'Range loop\n             case Template (Ptr) is\n-               when '*'    =>\n+               when '*' =>\n                   Add_Str_To_Name_Buffer (Name);\n \n-               when ';'    =>\n+               when ';' =>\n                   File := Full_Lib_File_Name (Name_Find);\n                   exit when File /= No_File;\n                   Name_Len := 0;\n \n-               when NUL    =>\n+               when NUL =>\n                   exit;\n \n                when others =>"}, {"sha": "53233a02e306475960154fda550224962b818346", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2375,13 +2375,15 @@ package body Makeutl is\n       begin\n          case S.Format is\n             when Format_Gprbuild =>\n-               return not Busy_Obj_Dirs.Get\n-                 (S.Id.Project.Object_Directory.Name);\n+               return\n+                 not Busy_Obj_Dirs.Get\n+                       (S.Id.Project.Object_Directory.Name);\n \n             when Format_Gnatmake =>\n-               return S.Project = No_Project\n-                 or else\n-                   not Busy_Obj_Dirs.Get (S.Project.Object_Directory.Name);\n+               return\n+                 S.Project = No_Project\n+                   or else not Busy_Obj_Dirs.Get\n+                                 (S.Project.Object_Directory.Name);\n          end case;\n       end Available_Obj_Dir;\n \n@@ -2522,10 +2524,11 @@ package body Makeutl is\n \n             for J in 1 .. Q.Last loop\n                case Q.Table (J).Info.Format is\n-               when Format_Gprbuild =>\n-                  Q.Table (J).Info.Id.In_The_Queue := False;\n-               when Format_Gnatmake =>\n-                  null;\n+                  when Format_Gprbuild =>\n+                     Q.Table (J).Info.Id.In_The_Queue := False;\n+\n+                  when Format_Gnatmake =>\n+                     null;\n                end case;\n             end loop;\n \n@@ -2739,14 +2742,15 @@ package body Makeutl is\n \n                      if Root_Found then\n                         case Root_Source.Kind is\n-                        when Impl =>\n-                           null;\n+                           when Impl =>\n+                              null;\n \n-                        when Spec =>\n-                           Root_Found := Other_Part (Root_Source) = No_Source;\n+                           when Spec =>\n+                              Root_Found :=\n+                                Other_Part (Root_Source) = No_Source;\n \n-                        when Sep =>\n-                           Root_Found := False;\n+                           when Sep =>\n+                              Root_Found := False;\n                         end case;\n                      end if;\n \n@@ -2886,6 +2890,7 @@ package body Makeutl is\n             case Q.Table (Rank).Info.Format is\n                when Format_Gprbuild =>\n                   return Q.Table (Rank).Info.Id.File;\n+\n                when Format_Gnatmake =>\n                   return Q.Table (Rank).Info.File;\n             end case;"}, {"sha": "d830b668378fda095f88271b85f5d288afd36d38", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2015, AdaCore                     --\n+--                     Copyright (C) 2001-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1898,7 +1898,9 @@ package body MLib.Prj is\n          --  Call procedure to build the library, depending on the build mode\n \n          case The_Build_Mode is\n-            when Dynamic | Relocatable =>\n+            when Dynamic\n+               | Relocatable\n+            =>\n                Build_Dynamic_Library\n                  (Ofiles        => Object_Files.all,\n                   Options       => Options.all,"}, {"sha": "8c6c22b9d1452e87ef0bbfd4bfa9d96119a7f1b5", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1977,7 +1977,6 @@ package body Osint is\n       Dir_Name := new String'(File_Name (File_Name'First .. Fptr - 1));\n \n       case Running_Program is\n-\n          when Compiler =>\n             Src_Search_Directories.Table (Primary_Directory) := Dir_Name;\n             Look_In_Primary_Directory_For_Current_Main := True;\n@@ -1989,7 +1988,9 @@ package body Osint is\n                Look_In_Primary_Directory_For_Current_Main := True;\n             end if;\n \n-         when Binder | Gnatls =>\n+         when Binder\n+            | Gnatls\n+          =>\n             Dir_Name := Normalize_Directory_Name (Dir_Name.all);\n             Lib_Search_Directories.Table (Primary_Directory) := Dir_Name;\n "}, {"sha": "52f687ee03dfa0c4f022b64619dee836a403e1ee", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -763,10 +763,10 @@ package body Ch12 is\n          --  Ada 2005 (AI-345): Task, Protected or Synchronized interface or\n          --  (AI-443): Synchronized formal derived type declaration.\n \n-         when Tok_Protected    |\n-              Tok_Synchronized |\n-              Tok_Task         =>\n-\n+         when Tok_Protected\n+            | Tok_Synchronized\n+            | Tok_Task\n+         =>\n             declare\n                Saved_Token : constant Token_Type := Token;\n \n@@ -812,7 +812,6 @@ package body Ch12 is\n             Error_Msg_BC (\"expecting generic type definition here\");\n             Resync_Past_Semicolon;\n             return Error;\n-\n       end case;\n    end P_Formal_Type_Definition;\n "}, {"sha": "4dda2980c805d0202b561b814e11811043d1906a", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -464,9 +464,9 @@ package body Ch3 is\n \n       loop\n          case Token is\n-\n-            when Tok_Access |\n-                 Tok_Not    => --  Ada 2005 (AI-231)\n+            when Tok_Access\n+               | Tok_Not  --  Ada 2005 (AI-231)\n+            =>\n                Typedef_Node := P_Access_Type_Definition;\n                exit;\n \n@@ -777,10 +777,10 @@ package body Ch3 is\n             --  Ada 2005 (AI-345): Protected, synchronized or task interface\n             --  or Ada 2005 (AI-443): Synchronized private extension.\n \n-            when Tok_Protected    |\n-                 Tok_Synchronized |\n-                 Tok_Task         =>\n-\n+            when Tok_Protected\n+               | Tok_Synchronized\n+               | Tok_Task\n+            =>\n                declare\n                   Saved_Token : constant Token_Type := Token;\n \n@@ -864,7 +864,6 @@ package body Ch3 is\n                   Error_Msg_AP (\"type definition expected\");\n                   raise Error_Resync;\n                end if;\n-\n          end case;\n       end loop;\n \n@@ -4315,7 +4314,6 @@ package body Ch3 is\n       end if;\n \n       case Token is\n-\n          when Tok_Function =>\n             Check_Bad_Layout;\n             Append (P_Subprogram (Pf_Decl_Gins_Pbod_Rnam_Stub_Pexp), Decls);\n@@ -4580,19 +4578,19 @@ package body Ch3 is\n          --  judgment, because it is a real mess to go into statement mode\n          --  prematurely in response to a junk declaration.\n \n-         when Tok_Abort     |\n-              Tok_Accept    |\n-              Tok_Declare   |\n-              Tok_Delay     |\n-              Tok_Exit      |\n-              Tok_Goto      |\n-              Tok_If        |\n-              Tok_Loop      |\n-              Tok_Null      |\n-              Tok_Requeue   |\n-              Tok_Select    |\n-              Tok_While     =>\n-\n+         when Tok_Abort\n+            | Tok_Accept\n+            | Tok_Declare\n+            | Tok_Delay\n+            | Tok_Exit\n+            | Tok_Goto\n+            | Tok_If\n+            | Tok_Loop\n+            | Tok_Null\n+            | Tok_Requeue\n+            | Tok_Select\n+            | Tok_While\n+         =>\n             --  But before we decide that it's a statement, let's check for\n             --  a reserved word misused as an identifier.\n "}, {"sha": "7bbd48b2dc0b2be34f654ddfe422e663bcd0aaf3", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2583,7 +2583,10 @@ package body Ch4 is\n             --  that string literal is included in name (as operator symbol)\n             --  and type conversion is included in name (as indexed component).\n \n-            when Tok_Char_Literal | Tok_Operator_Symbol | Tok_Identifier =>\n+            when Tok_Char_Literal\n+               | Tok_Identifier\n+               | Tok_Operator_Symbol\n+            =>\n                Node1 := P_Name;\n \n                --  All done unless apostrophe follows\n@@ -2624,10 +2627,10 @@ package body Ch4 is\n \n             --  Numeric or string literal\n \n-            when Tok_Integer_Literal |\n-                 Tok_Real_Literal    |\n-                 Tok_String_Literal  =>\n-\n+            when Tok_Integer_Literal\n+               | Tok_Real_Literal\n+               | Tok_String_Literal\n+            =>\n                Node1 := Token_Node;\n                Scan; -- past number\n                return Node1;\n@@ -2797,7 +2800,6 @@ package body Ch4 is\n                   Error_Msg_AP (\"missing operand\");\n                   raise Error_Resync;\n                end if;\n-\n          end case;\n       end loop;\n    end P_Primary;"}, {"sha": "5d8b45ceae523044987332e5f019e65623b39e02", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -342,8 +342,9 @@ package body Ch5 is\n \n                --  Case of end or EOF\n \n-               when Tok_End | Tok_EOF =>\n-\n+               when Tok_End\n+                  | Tok_EOF\n+               =>\n                   --  These tokens always terminate the statement sequence\n \n                   Test_Statement_Required;\n@@ -459,13 +460,14 @@ package body Ch5 is\n \n                --  Case of WHEN (error because we are not in a case)\n \n-               when Tok_When | Tok_Others =>\n-\n+               when Tok_Others\n+                  | Tok_When\n+               =>\n                   --  Terminate if Whtm set or if the WHEN is to the left of\n                   --  the expected column of the end for this sequence.\n \n                   if SS_Flags.Whtm\n-                     or else Start_Column < Scope.Table (Scope.Last).Ecol\n+                    or else Start_Column < Scope.Table (Scope.Last).Ecol\n                   then\n                      Test_Statement_Required;\n                      exit;\n@@ -948,7 +950,6 @@ package body Ch5 is\n                --  handling of a bad statement.\n \n                when others =>\n-\n                   if Token in Token_Class_Declk then\n                      Junk_Declaration;\n \n@@ -972,11 +973,9 @@ package body Ch5 is\n          end;\n \n          exit when SS_Flags.Unco;\n-\n       end loop;\n \n       return Statement_List;\n-\n    end P_Sequence_Of_Statements;\n \n    --------------------"}, {"sha": "0046badb39fb338dd4aa1f0cd0f178b37cda767d", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 230, "deletions": 219, "changes": 449, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -257,7 +257,9 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n                   Restriction_Warnings (No_Obsolescent_Features) :=\n                     Prag_Id = Pragma_Restriction_Warnings;\n \n-               when Name_SPARK | Name_SPARK_05 =>\n+               when Name_SPARK\n+                  | Name_SPARK_05\n+               =>\n                   Set_Restriction (SPARK_05, Pragma_Node);\n                   Restriction_Warnings (SPARK_05) :=\n                     Prag_Id = Pragma_Restriction_Warnings;\n@@ -359,7 +361,9 @@ begin\n       --  Ada version syntax. However, it is only the zero argument form that\n       --  must be processed at parse time.\n \n-      when Pragma_Ada_05 | Pragma_Ada_2005 =>\n+      when Pragma_Ada_05\n+         | Pragma_Ada_2005\n+      =>\n          if Arg_Count = 0 and not Latest_Ada_Only then\n             Ada_Version := Ada_2005;\n             Ada_Version_Explicit := Ada_2005;\n@@ -375,7 +379,9 @@ begin\n       --  Ada version syntax. However, it is only the zero argument form that\n       --  must be processed at parse time.\n \n-      when Pragma_Ada_12 | Pragma_Ada_2012 =>\n+      when Pragma_Ada_12\n+         | Pragma_Ada_2012\n+      =>\n          if Arg_Count = 0 then\n             Ada_Version := Ada_2012;\n             Ada_Version_Explicit := Ada_2012;\n@@ -389,7 +395,9 @@ begin\n       --  This pragma must be processed at parse time, since the resulting\n       --  status may be tested during the parsing of the program.\n \n-      when Pragma_Compiler_Unit | Pragma_Compiler_Unit_Warning =>\n+      when Pragma_Compiler_Unit\n+         | Pragma_Compiler_Unit_Warning\n+      =>\n          Check_Arg_Count (0);\n \n          --  Only recognized in main unit\n@@ -578,7 +586,9 @@ begin\n       --  source file names set well before the semantic analysis starts,\n       --  since we load the spec and with'ed packages before analysis.\n \n-      when Pragma_Source_File_Name | Pragma_Source_File_Name_Project =>\n+      when Pragma_Source_File_Name\n+         | Pragma_Source_File_Name_Project\n+      =>\n          Source_File_Name : declare\n             Unam  : Unit_Name_Type;\n             Expr1 : Node_Id;\n@@ -1285,220 +1295,221 @@ begin\n       --  For all other pragmas, checking and processing is handled\n       --  entirely in Sem_Prag, and no further checking is done by Par.\n \n-      when Pragma_Abort_Defer                    |\n-           Pragma_Abstract_State                 |\n-           Pragma_Async_Readers                  |\n-           Pragma_Async_Writers                  |\n-           Pragma_Assertion_Policy               |\n-           Pragma_Assume                         |\n-           Pragma_Assume_No_Invalid_Values       |\n-           Pragma_All_Calls_Remote               |\n-           Pragma_Allow_Integer_Address          |\n-           Pragma_Annotate                       |\n-           Pragma_Assert                         |\n-           Pragma_Assert_And_Cut                 |\n-           Pragma_Asynchronous                   |\n-           Pragma_Atomic                         |\n-           Pragma_Atomic_Components              |\n-           Pragma_Attach_Handler                 |\n-           Pragma_Attribute_Definition           |\n-           Pragma_Check                          |\n-           Pragma_Check_Float_Overflow           |\n-           Pragma_Check_Name                     |\n-           Pragma_Check_Policy                   |\n-           Pragma_Compile_Time_Error             |\n-           Pragma_Compile_Time_Warning           |\n-           Pragma_Constant_After_Elaboration     |\n-           Pragma_Contract_Cases                 |\n-           Pragma_Convention_Identifier          |\n-           Pragma_CPP_Class                      |\n-           Pragma_CPP_Constructor                |\n-           Pragma_CPP_Virtual                    |\n-           Pragma_CPP_Vtable                     |\n-           Pragma_CPU                            |\n-           Pragma_C_Pass_By_Copy                 |\n-           Pragma_Comment                        |\n-           Pragma_Common_Object                  |\n-           Pragma_Complete_Representation        |\n-           Pragma_Complex_Representation         |\n-           Pragma_Component_Alignment            |\n-           Pragma_Controlled                     |\n-           Pragma_Convention                     |\n-           Pragma_Debug_Policy                   |\n-           Pragma_Depends                        |\n-           Pragma_Detect_Blocking                |\n-           Pragma_Default_Initial_Condition      |\n-           Pragma_Default_Scalar_Storage_Order   |\n-           Pragma_Default_Storage_Pool           |\n-           Pragma_Disable_Atomic_Synchronization |\n-           Pragma_Discard_Names                  |\n-           Pragma_Dispatching_Domain             |\n-           Pragma_Effective_Reads                |\n-           Pragma_Effective_Writes               |\n-           Pragma_Eliminate                      |\n-           Pragma_Elaborate                      |\n-           Pragma_Elaborate_All                  |\n-           Pragma_Elaborate_Body                 |\n-           Pragma_Elaboration_Checks             |\n-           Pragma_Enable_Atomic_Synchronization  |\n-           Pragma_Export                         |\n-           Pragma_Export_Function                |\n-           Pragma_Export_Object                  |\n-           Pragma_Export_Procedure               |\n-           Pragma_Export_Value                   |\n-           Pragma_Export_Valued_Procedure        |\n-           Pragma_Extend_System                  |\n-           Pragma_Extensions_Visible             |\n-           Pragma_External                       |\n-           Pragma_External_Name_Casing           |\n-           Pragma_Favor_Top_Level                |\n-           Pragma_Fast_Math                      |\n-           Pragma_Finalize_Storage_Only          |\n-           Pragma_Ghost                          |\n-           Pragma_Global                         |\n-           Pragma_Ident                          |\n-           Pragma_Implementation_Defined         |\n-           Pragma_Implemented                    |\n-           Pragma_Implicit_Packing               |\n-           Pragma_Import                         |\n-           Pragma_Import_Function                |\n-           Pragma_Import_Object                  |\n-           Pragma_Import_Procedure               |\n-           Pragma_Import_Valued_Procedure        |\n-           Pragma_Independent                    |\n-           Pragma_Independent_Components         |\n-           Pragma_Initial_Condition              |\n-           Pragma_Initialize_Scalars             |\n-           Pragma_Initializes                    |\n-           Pragma_Inline                         |\n-           Pragma_Inline_Always                  |\n-           Pragma_Inline_Generic                 |\n-           Pragma_Inspection_Point               |\n-           Pragma_Interface                      |\n-           Pragma_Interface_Name                 |\n-           Pragma_Interrupt_Handler              |\n-           Pragma_Interrupt_State                |\n-           Pragma_Interrupt_Priority             |\n-           Pragma_Invariant                      |\n-           Pragma_Keep_Names                     |\n-           Pragma_License                        |\n-           Pragma_Link_With                      |\n-           Pragma_Linker_Alias                   |\n-           Pragma_Linker_Constructor             |\n-           Pragma_Linker_Destructor              |\n-           Pragma_Linker_Options                 |\n-           Pragma_Linker_Section                 |\n-           Pragma_Lock_Free                      |\n-           Pragma_Locking_Policy                 |\n-           Pragma_Loop_Invariant                 |\n-           Pragma_Loop_Optimize                  |\n-           Pragma_Loop_Variant                   |\n-           Pragma_Machine_Attribute              |\n-           Pragma_Main                           |\n-           Pragma_Main_Storage                   |\n-           Pragma_Max_Queue_Length               |\n-           Pragma_Memory_Size                    |\n-           Pragma_No_Body                        |\n-           Pragma_No_Elaboration_Code_All        |\n-           Pragma_No_Inline                      |\n-           Pragma_No_Return                      |\n-           Pragma_No_Run_Time                    |\n-           Pragma_No_Strict_Aliasing             |\n-           Pragma_No_Tagged_Streams              |\n-           Pragma_Normalize_Scalars              |\n-           Pragma_Obsolescent                    |\n-           Pragma_Ordered                        |\n-           Pragma_Optimize                       |\n-           Pragma_Optimize_Alignment             |\n-           Pragma_Overflow_Mode                  |\n-           Pragma_Overriding_Renamings           |\n-           Pragma_Pack                           |\n-           Pragma_Part_Of                        |\n-           Pragma_Partition_Elaboration_Policy   |\n-           Pragma_Passive                        |\n-           Pragma_Preelaborable_Initialization   |\n-           Pragma_Polling                        |\n-           Pragma_Prefix_Exception_Messages      |\n-           Pragma_Persistent_BSS                 |\n-           Pragma_Post                           |\n-           Pragma_Postcondition                  |\n-           Pragma_Post_Class                     |\n-           Pragma_Pre                            |\n-           Pragma_Precondition                   |\n-           Pragma_Predicate                      |\n-           Pragma_Predicate_Failure              |\n-           Pragma_Preelaborate                   |\n-           Pragma_Pre_Class                      |\n-           Pragma_Priority                       |\n-           Pragma_Priority_Specific_Dispatching  |\n-           Pragma_Profile                        |\n-           Pragma_Profile_Warnings               |\n-           Pragma_Propagate_Exceptions           |\n-           Pragma_Provide_Shift_Operators        |\n-           Pragma_Psect_Object                   |\n-           Pragma_Pure                           |\n-           Pragma_Pure_Function                  |\n-           Pragma_Queuing_Policy                 |\n-           Pragma_Refined_Depends                |\n-           Pragma_Refined_Global                 |\n-           Pragma_Refined_Post                   |\n-           Pragma_Refined_State                  |\n-           Pragma_Relative_Deadline              |\n-           Pragma_Remote_Access_Type             |\n-           Pragma_Remote_Call_Interface          |\n-           Pragma_Remote_Types                   |\n-           Pragma_Restricted_Run_Time            |\n-           Pragma_Rational                       |\n-           Pragma_Ravenscar                      |\n-           Pragma_Rename_Pragma                  |\n-           Pragma_Reviewable                     |\n-           Pragma_Secondary_Stack_Size           |\n-           Pragma_Share_Generic                  |\n-           Pragma_Shared                         |\n-           Pragma_Shared_Passive                 |\n-           Pragma_Short_Circuit_And_Or           |\n-           Pragma_Short_Descriptors              |\n-           Pragma_Simple_Storage_Pool_Type       |\n-           Pragma_SPARK_Mode                     |\n-           Pragma_Storage_Size                   |\n-           Pragma_Storage_Unit                   |\n-           Pragma_Static_Elaboration_Desired     |\n-           Pragma_Stream_Convert                 |\n-           Pragma_Subtitle                       |\n-           Pragma_Suppress                       |\n-           Pragma_Suppress_Debug_Info            |\n-           Pragma_Suppress_Exception_Locations   |\n-           Pragma_Suppress_Initialization        |\n-           Pragma_System_Name                    |\n-           Pragma_Task_Dispatching_Policy        |\n-           Pragma_Task_Info                      |\n-           Pragma_Task_Name                      |\n-           Pragma_Task_Storage                   |\n-           Pragma_Test_Case                      |\n-           Pragma_Thread_Local_Storage           |\n-           Pragma_Time_Slice                     |\n-           Pragma_Title                          |\n-           Pragma_Type_Invariant                 |\n-           Pragma_Type_Invariant_Class           |\n-           Pragma_Unchecked_Union                |\n-           Pragma_Unevaluated_Use_Of_Old         |\n-           Pragma_Unimplemented_Unit             |\n-           Pragma_Universal_Aliasing             |\n-           Pragma_Universal_Data                 |\n-           Pragma_Unmodified                     |\n-           Pragma_Unreferenced                   |\n-           Pragma_Unreferenced_Objects           |\n-           Pragma_Unreserve_All_Interrupts       |\n-           Pragma_Unsuppress                     |\n-           Pragma_Unused                         |\n-           Pragma_Use_VADS_Size                  |\n-           Pragma_Volatile                       |\n-           Pragma_Volatile_Components            |\n-           Pragma_Volatile_Full_Access           |\n-           Pragma_Volatile_Function              |\n-           Pragma_Warning_As_Error               |\n-           Pragma_Weak_External                  |\n-           Pragma_Validity_Checks                =>\n+      when Pragma_Abort_Defer\n+         | Pragma_Abstract_State\n+         | Pragma_Async_Readers\n+         | Pragma_Async_Writers\n+         | Pragma_Assertion_Policy\n+         | Pragma_Assume\n+         | Pragma_Assume_No_Invalid_Values\n+         | Pragma_All_Calls_Remote\n+         | Pragma_Allow_Integer_Address\n+         | Pragma_Annotate\n+         | Pragma_Assert\n+         | Pragma_Assert_And_Cut\n+         | Pragma_Asynchronous\n+         | Pragma_Atomic\n+         | Pragma_Atomic_Components\n+         | Pragma_Attach_Handler\n+         | Pragma_Attribute_Definition\n+         | Pragma_Check\n+         | Pragma_Check_Float_Overflow\n+         | Pragma_Check_Name\n+         | Pragma_Check_Policy\n+         | Pragma_Compile_Time_Error\n+         | Pragma_Compile_Time_Warning\n+         | Pragma_Constant_After_Elaboration\n+         | Pragma_Contract_Cases\n+         | Pragma_Convention_Identifier\n+         | Pragma_CPP_Class\n+         | Pragma_CPP_Constructor\n+         | Pragma_CPP_Virtual\n+         | Pragma_CPP_Vtable\n+         | Pragma_CPU\n+         | Pragma_C_Pass_By_Copy\n+         | Pragma_Comment\n+         | Pragma_Common_Object\n+         | Pragma_Complete_Representation\n+         | Pragma_Complex_Representation\n+         | Pragma_Component_Alignment\n+         | Pragma_Controlled\n+         | Pragma_Convention\n+         | Pragma_Debug_Policy\n+         | Pragma_Depends\n+         | Pragma_Detect_Blocking\n+         | Pragma_Default_Initial_Condition\n+         | Pragma_Default_Scalar_Storage_Order\n+         | Pragma_Default_Storage_Pool\n+         | Pragma_Disable_Atomic_Synchronization\n+         | Pragma_Discard_Names\n+         | Pragma_Dispatching_Domain\n+         | Pragma_Effective_Reads\n+         | Pragma_Effective_Writes\n+         | Pragma_Eliminate\n+         | Pragma_Elaborate\n+         | Pragma_Elaborate_All\n+         | Pragma_Elaborate_Body\n+         | Pragma_Elaboration_Checks\n+         | Pragma_Enable_Atomic_Synchronization\n+         | Pragma_Export\n+         | Pragma_Export_Function\n+         | Pragma_Export_Object\n+         | Pragma_Export_Procedure\n+         | Pragma_Export_Value\n+         | Pragma_Export_Valued_Procedure\n+         | Pragma_Extend_System\n+         | Pragma_Extensions_Visible\n+         | Pragma_External\n+         | Pragma_External_Name_Casing\n+         | Pragma_Favor_Top_Level\n+         | Pragma_Fast_Math\n+         | Pragma_Finalize_Storage_Only\n+         | Pragma_Ghost\n+         | Pragma_Global\n+         | Pragma_Ident\n+         | Pragma_Implementation_Defined\n+         | Pragma_Implemented\n+         | Pragma_Implicit_Packing\n+         | Pragma_Import\n+         | Pragma_Import_Function\n+         | Pragma_Import_Object\n+         | Pragma_Import_Procedure\n+         | Pragma_Import_Valued_Procedure\n+         | Pragma_Independent\n+         | Pragma_Independent_Components\n+         | Pragma_Initial_Condition\n+         | Pragma_Initialize_Scalars\n+         | Pragma_Initializes\n+         | Pragma_Inline\n+         | Pragma_Inline_Always\n+         | Pragma_Inline_Generic\n+         | Pragma_Inspection_Point\n+         | Pragma_Interface\n+         | Pragma_Interface_Name\n+         | Pragma_Interrupt_Handler\n+         | Pragma_Interrupt_State\n+         | Pragma_Interrupt_Priority\n+         | Pragma_Invariant\n+         | Pragma_Keep_Names\n+         | Pragma_License\n+         | Pragma_Link_With\n+         | Pragma_Linker_Alias\n+         | Pragma_Linker_Constructor\n+         | Pragma_Linker_Destructor\n+         | Pragma_Linker_Options\n+         | Pragma_Linker_Section\n+         | Pragma_Lock_Free\n+         | Pragma_Locking_Policy\n+         | Pragma_Loop_Invariant\n+         | Pragma_Loop_Optimize\n+         | Pragma_Loop_Variant\n+         | Pragma_Machine_Attribute\n+         | Pragma_Main\n+         | Pragma_Main_Storage\n+         | Pragma_Max_Queue_Length\n+         | Pragma_Memory_Size\n+         | Pragma_No_Body\n+         | Pragma_No_Elaboration_Code_All\n+         | Pragma_No_Inline\n+         | Pragma_No_Return\n+         | Pragma_No_Run_Time\n+         | Pragma_No_Strict_Aliasing\n+         | Pragma_No_Tagged_Streams\n+         | Pragma_Normalize_Scalars\n+         | Pragma_Obsolescent\n+         | Pragma_Ordered\n+         | Pragma_Optimize\n+         | Pragma_Optimize_Alignment\n+         | Pragma_Overflow_Mode\n+         | Pragma_Overriding_Renamings\n+         | Pragma_Pack\n+         | Pragma_Part_Of\n+         | Pragma_Partition_Elaboration_Policy\n+         | Pragma_Passive\n+         | Pragma_Preelaborable_Initialization\n+         | Pragma_Polling\n+         | Pragma_Prefix_Exception_Messages\n+         | Pragma_Persistent_BSS\n+         | Pragma_Post\n+         | Pragma_Postcondition\n+         | Pragma_Post_Class\n+         | Pragma_Pre\n+         | Pragma_Precondition\n+         | Pragma_Predicate\n+         | Pragma_Predicate_Failure\n+         | Pragma_Preelaborate\n+         | Pragma_Pre_Class\n+         | Pragma_Priority\n+         | Pragma_Priority_Specific_Dispatching\n+         | Pragma_Profile\n+         | Pragma_Profile_Warnings\n+         | Pragma_Propagate_Exceptions\n+         | Pragma_Provide_Shift_Operators\n+         | Pragma_Psect_Object\n+         | Pragma_Pure\n+         | Pragma_Pure_Function\n+         | Pragma_Queuing_Policy\n+         | Pragma_Refined_Depends\n+         | Pragma_Refined_Global\n+         | Pragma_Refined_Post\n+         | Pragma_Refined_State\n+         | Pragma_Relative_Deadline\n+         | Pragma_Remote_Access_Type\n+         | Pragma_Remote_Call_Interface\n+         | Pragma_Remote_Types\n+         | Pragma_Restricted_Run_Time\n+         | Pragma_Rational\n+         | Pragma_Ravenscar\n+         | Pragma_Rename_Pragma\n+         | Pragma_Reviewable\n+         | Pragma_Secondary_Stack_Size\n+         | Pragma_Share_Generic\n+         | Pragma_Shared\n+         | Pragma_Shared_Passive\n+         | Pragma_Short_Circuit_And_Or\n+         | Pragma_Short_Descriptors\n+         | Pragma_Simple_Storage_Pool_Type\n+         | Pragma_SPARK_Mode\n+         | Pragma_Storage_Size\n+         | Pragma_Storage_Unit\n+         | Pragma_Static_Elaboration_Desired\n+         | Pragma_Stream_Convert\n+         | Pragma_Subtitle\n+         | Pragma_Suppress\n+         | Pragma_Suppress_Debug_Info\n+         | Pragma_Suppress_Exception_Locations\n+         | Pragma_Suppress_Initialization\n+         | Pragma_System_Name\n+         | Pragma_Task_Dispatching_Policy\n+         | Pragma_Task_Info\n+         | Pragma_Task_Name\n+         | Pragma_Task_Storage\n+         | Pragma_Test_Case\n+         | Pragma_Thread_Local_Storage\n+         | Pragma_Time_Slice\n+         | Pragma_Title\n+         | Pragma_Type_Invariant\n+         | Pragma_Type_Invariant_Class\n+         | Pragma_Unchecked_Union\n+         | Pragma_Unevaluated_Use_Of_Old\n+         | Pragma_Unimplemented_Unit\n+         | Pragma_Universal_Aliasing\n+         | Pragma_Universal_Data\n+         | Pragma_Unmodified\n+         | Pragma_Unreferenced\n+         | Pragma_Unreferenced_Objects\n+         | Pragma_Unreserve_All_Interrupts\n+         | Pragma_Unsuppress\n+         | Pragma_Unused\n+         | Pragma_Use_VADS_Size\n+         | Pragma_Volatile\n+         | Pragma_Volatile_Components\n+         | Pragma_Volatile_Full_Access\n+         | Pragma_Volatile_Function\n+         | Pragma_Warning_As_Error\n+         | Pragma_Weak_External\n+         | Pragma_Validity_Checks\n+      =>\n          null;\n \n       --------------------"}, {"sha": "4815cf0ba417a6ef5e32cbadcd3b4b2c1f2d3715", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 94, "deletions": 69, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -756,7 +756,12 @@ package body Par_SCO is\n             --  Logical operators, output table entries and then process\n             --  operands recursively to deal with nested conditions.\n \n-            when N_And_Then | N_Or_Else | N_Op_Not | N_Op_And | N_Op_Or =>\n+            when N_And_Then\n+               | N_Op_And\n+               | N_Op_Not\n+               | N_Op_Or\n+               | N_Or_Else\n+            =>\n                declare\n                   T : Character;\n \n@@ -828,7 +833,6 @@ package body Par_SCO is\n \n             when others =>\n                return OK;\n-\n          end case;\n       end Process_Node;\n \n@@ -1131,21 +1135,21 @@ package body Par_SCO is\n       Traverse_Aux_Decls (Cunit (U));\n \n       case Nkind (Lu) is\n-         when N_Generic_Instantiation       |\n-              N_Generic_Package_Declaration |\n-              N_Package_Body                |\n-              N_Package_Declaration         |\n-              N_Protected_Body              |\n-              N_Subprogram_Body             |\n-              N_Subprogram_Declaration      |\n-              N_Task_Body                   =>\n+         when N_Generic_Instantiation\n+            | N_Generic_Package_Declaration\n+            | N_Package_Body\n+            | N_Package_Declaration\n+            | N_Protected_Body\n+            | N_Subprogram_Body\n+            | N_Subprogram_Declaration\n+            | N_Task_Body\n+         =>\n             Traverse_Declarations_Or_Statements (L => No_List, P => Lu);\n \n-         when others =>\n-\n-            --  All other cases of compilation units (e.g. renamings), generate\n-            --  no SCO information.\n+         --  All other cases of compilation units (e.g. renamings), generate no\n+         --  SCO information.\n \n+         when others =>\n             null;\n       end case;\n \n@@ -1477,7 +1481,9 @@ package body Par_SCO is\n             when N_Case_Statement =>\n                To_Node := Expression (N);\n \n-            when N_If_Statement | N_Elsif_Part =>\n+            when N_Elsif_Part\n+               | N_If_Statement\n+            =>\n                To_Node := Condition (N);\n \n             when N_Extended_Return_Statement =>\n@@ -1486,15 +1492,18 @@ package body Par_SCO is\n             when N_Loop_Statement =>\n                To_Node := Iteration_Scheme (N);\n \n-            when N_Asynchronous_Select          |\n-                 N_Conditional_Entry_Call       |\n-                 N_Selective_Accept             |\n-                 N_Single_Protected_Declaration |\n-                 N_Single_Task_Declaration      |\n-                 N_Timed_Entry_Call             =>\n+            when N_Asynchronous_Select\n+               | N_Conditional_Entry_Call\n+               | N_Selective_Accept\n+               | N_Single_Protected_Declaration\n+               | N_Single_Task_Declaration\n+               | N_Timed_Entry_Call\n+            =>\n                T := F;\n \n-            when N_Protected_Type_Declaration | N_Task_Type_Declaration =>\n+            when N_Protected_Type_Declaration\n+               | N_Task_Type_Declaration\n+            =>\n                if Has_Aspects (N) then\n                   To_Node := Last (Aspect_Specifications (N));\n \n@@ -1507,7 +1516,6 @@ package body Par_SCO is\n \n             when others =>\n                null;\n-\n          end case;\n \n          if Present (To_Node) then\n@@ -1662,12 +1670,13 @@ package body Par_SCO is\n                --  specification. The corresponding pragma will have the same\n                --  sloc.\n \n-               when Aspect_Invariant      |\n-                    Aspect_Post           |\n-                    Aspect_Postcondition  |\n-                    Aspect_Pre            |\n-                    Aspect_Precondition   |\n-                    Aspect_Type_Invariant =>\n+               when Aspect_Invariant\n+                  | Aspect_Post\n+                  | Aspect_Postcondition\n+                  | Aspect_Pre\n+                  | Aspect_Precondition\n+                  | Aspect_Type_Invariant\n+               =>\n                   C1 := 'a';\n \n                --  Aspects whose checks are generated in client units,\n@@ -1680,9 +1689,10 @@ package body Par_SCO is\n                --  Pre/post can have checks in client units too because of\n                --  inheritance, so should they be moved here???\n \n-               when Aspect_Dynamic_Predicate |\n-                    Aspect_Predicate         |\n-                    Aspect_Static_Predicate  =>\n+               when Aspect_Dynamic_Predicate\n+                  | Aspect_Predicate\n+                  | Aspect_Static_Predicate\n+               =>\n                   C1 := 'A';\n \n                --  Other aspects: just process any decision nested in the\n@@ -1692,7 +1702,6 @@ package body Par_SCO is\n                   if Has_Decision (AE) then\n                      C1 := 'X';\n                   end if;\n-\n             end case;\n \n             if C1 /= ASCII.NUL then\n@@ -1744,7 +1753,9 @@ package body Par_SCO is\n \n             --  Subprogram declaration or subprogram body stub\n \n-            when N_Subprogram_Declaration | N_Subprogram_Body_Stub =>\n+            when N_Subprogram_Body_Stub\n+               | N_Subprogram_Declaration\n+            =>\n                Process_Decisions_Defer\n                  (Parameter_Specifications (Specification (N)), 'X');\n \n@@ -1763,7 +1774,9 @@ package body Par_SCO is\n \n             --  Task or subprogram body\n \n-            when N_Task_Body | N_Subprogram_Body =>\n+            when N_Subprogram_Body\n+               | N_Task_Body\n+            =>\n                Set_Statement_Entry;\n                Traverse_Subprogram_Or_Task_Body (N);\n \n@@ -1980,7 +1993,9 @@ package body Par_SCO is\n                  (L => Else_Statements (N),\n                   D => Current_Dominant);\n \n-            when N_Timed_Entry_Call | N_Conditional_Entry_Call =>\n+            when N_Conditional_Entry_Call\n+               | N_Timed_Entry_Call\n+            =>\n                Extend_Statement_Sequence (N, 'S');\n                Set_Statement_Entry;\n \n@@ -2042,9 +2057,10 @@ package body Par_SCO is\n             --  Unconditional exit points, which are included in the current\n             --  statement sequence, but then terminate it\n \n-            when N_Requeue_Statement |\n-                 N_Goto_Statement    |\n-                 N_Raise_Statement   =>\n+            when N_Goto_Statement\n+               | N_Raise_Statement\n+               | N_Requeue_Statement\n+            =>\n                Extend_Statement_Sequence (N, ' ');\n                Set_Statement_Entry;\n                Current_Dominant := No_Dominant;\n@@ -2139,14 +2155,14 @@ package body Par_SCO is\n \n                begin\n                   case Nam is\n-                     when Name_Assert         |\n-                          Name_Assert_And_Cut |\n-                          Name_Assume         |\n-                          Name_Check          |\n-                          Name_Loop_Invariant |\n-                          Name_Postcondition  |\n-                          Name_Precondition   =>\n-\n+                     when Name_Assert\n+                        | Name_Assert_And_Cut\n+                        | Name_Assume\n+                        | Name_Check\n+                        | Name_Loop_Invariant\n+                        | Name_Postcondition\n+                        | Name_Precondition\n+                     =>\n                         --  For Assert/Check/Precondition/Postcondition, we\n                         --  must generate a P entry for the decision. Note\n                         --  that this is done unconditionally at this stage.\n@@ -2204,7 +2220,9 @@ package body Par_SCO is\n             --  want one entry in the SCOs, so we take the first, for which\n             --  Prev_Ids is False.\n \n-            when N_Object_Declaration | N_Number_Declaration =>\n+            when N_Number_Declaration\n+               | N_Object_Declaration\n+            =>\n                if not Prev_Ids (N) then\n                   Extend_Statement_Sequence (N, 'o');\n \n@@ -2216,14 +2234,18 @@ package body Par_SCO is\n             --  All other cases, which extend the current statement sequence\n             --  but do not terminate it, even if they have nested decisions.\n \n-            when N_Protected_Type_Declaration | N_Task_Type_Declaration =>\n+            when N_Protected_Type_Declaration\n+               | N_Task_Type_Declaration\n+            =>\n                Extend_Statement_Sequence (N, 't');\n                Process_Decisions_Defer (Discriminant_Specifications (N), 'X');\n                Set_Statement_Entry;\n \n                Traverse_Sync_Definition (N);\n \n-            when N_Single_Protected_Declaration | N_Single_Task_Declaration =>\n+            when N_Single_Protected_Declaration\n+               | N_Single_Task_Declaration\n+            =>\n                Extend_Statement_Sequence (N, 'o');\n                Set_Statement_Entry;\n \n@@ -2240,33 +2262,35 @@ package body Par_SCO is\n \n                begin\n                   case NK is\n-                     when N_Full_Type_Declaration         |\n-                          N_Incomplete_Type_Declaration   |\n-                          N_Private_Extension_Declaration |\n-                          N_Private_Type_Declaration      =>\n+                     when N_Full_Type_Declaration\n+                        | N_Incomplete_Type_Declaration\n+                        | N_Private_Extension_Declaration\n+                        | N_Private_Type_Declaration\n+                     =>\n                         Typ := 't';\n \n-                     when N_Subtype_Declaration           =>\n+                     when N_Subtype_Declaration =>\n                         Typ := 's';\n \n-                     when N_Renaming_Declaration          =>\n+                     when N_Renaming_Declaration =>\n                         Typ := 'r';\n \n-                     when N_Generic_Instantiation         =>\n+                     when N_Generic_Instantiation =>\n                         Typ := 'i';\n \n-                     when N_Package_Body_Stub             |\n-                          N_Protected_Body_Stub           |\n-                          N_Representation_Clause         |\n-                          N_Task_Body_Stub                |\n-                          N_Use_Package_Clause            |\n-                          N_Use_Type_Clause               =>\n+                     when N_Package_Body_Stub\n+                        | N_Protected_Body_Stub\n+                        | N_Representation_Clause\n+                        | N_Task_Body_Stub\n+                        | N_Use_Package_Clause\n+                        | N_Use_Type_Clause\n+                     =>\n                         Typ := ASCII.NUL;\n \n                      when N_Procedure_Call_Statement =>\n                         Typ := ' ';\n \n-                     when others                          =>\n+                     when others =>\n                         if NK in N_Statement_Other_Than_Procedure_Call then\n                            Typ := ' ';\n                         else\n@@ -2421,12 +2445,14 @@ package body Par_SCO is\n \n    begin\n       case Nkind (N) is\n-         when N_Protected_Type_Declaration   |\n-              N_Single_Protected_Declaration =>\n+         when N_Protected_Type_Declaration\n+            | N_Single_Protected_Declaration\n+         =>\n             Sync_Def := Protected_Definition (N);\n \n-         when N_Single_Task_Declaration      |\n-              N_Task_Type_Declaration        =>\n+         when N_Single_Task_Declaration\n+            | N_Task_Type_Declaration\n+         =>\n             Sync_Def := Task_Definition (N);\n \n          when others =>\n@@ -2724,7 +2750,6 @@ package body Par_SCO is\n                      --  operator.\n \n                      return T.C2 /= '?';\n-\n                end case;\n             end;\n          end loop;"}, {"sha": "fcfccd316f8aa7e2d12bccab660b23b8786a9142", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 58, "deletions": 42, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -205,7 +205,9 @@ package body Pprint is\n          end if;\n \n          case Nkind (Expr) is\n-            when N_Defining_Identifier | N_Identifier =>\n+            when N_Defining_Identifier\n+               | N_Identifier\n+            =>\n                return Ident_Image (Expr, Expression_Image.Expr, Expand_Type);\n \n             when N_Character_Literal =>\n@@ -340,7 +342,9 @@ package body Pprint is\n                   return \".all\";\n                end if;\n \n-            when N_Expanded_Name | N_Selected_Component =>\n+            when N_Expanded_Name\n+               | N_Selected_Component\n+            =>\n                if Take_Prefix then\n                   return\n                     Expr_Name (Prefix (Expr)) & \".\" &\n@@ -381,7 +385,9 @@ package body Pprint is\n                   end if;\n                end;\n \n-            when N_Unchecked_Expression | N_Expression_With_Actions =>\n+            when N_Expression_With_Actions\n+               | N_Unchecked_Expression\n+            =>\n                return Expr_Name (Expression (Expr));\n \n             when N_Raise_Constraint_Error =>\n@@ -623,24 +629,27 @@ package body Pprint is\n \n       loop\n          case Nkind (Left) is\n-            when N_And_Then                   |\n-                 N_Binary_Op                  |\n-                 N_Membership_Test            |\n-                 N_Or_Else                    =>\n+            when N_And_Then\n+               | N_Binary_Op\n+               | N_Membership_Test\n+               | N_Or_Else\n+            =>\n                Left := Original_Node (Left_Opnd (Left));\n \n-            when N_Attribute_Reference        |\n-                 N_Expanded_Name              |\n-                 N_Explicit_Dereference       |\n-                 N_Indexed_Component          |\n-                 N_Reference                  |\n-                 N_Selected_Component         |\n-                 N_Slice                      =>\n+            when N_Attribute_Reference\n+               | N_Expanded_Name\n+               | N_Explicit_Dereference\n+               | N_Indexed_Component\n+               | N_Reference\n+               | N_Selected_Component\n+               | N_Slice\n+            =>\n                Left := Original_Node (Prefix (Left));\n \n-            when N_Defining_Program_Unit_Name |\n-                 N_Designator                 |\n-                 N_Function_Call              =>\n+            when N_Defining_Program_Unit_Name\n+               | N_Designator\n+               | N_Function_Call\n+            =>\n                Left := Original_Node (Name (Left));\n \n             when N_Range =>\n@@ -658,14 +667,16 @@ package body Pprint is\n \n       loop\n          case Nkind (Right) is\n-            when N_And_Then           |\n-                 N_Membership_Test    |\n-                 N_Op                 |\n-                 N_Or_Else            =>\n+            when N_And_Then\n+               | N_Membership_Test\n+               | N_Op\n+               | N_Or_Else\n+            =>\n                Right := Original_Node (Right_Opnd (Right));\n \n-            when N_Expanded_Name      |\n-                 N_Selected_Component =>\n+            when N_Expanded_Name\n+               | N_Selected_Component\n+            =>\n                Right := Original_Node (Selector_Name (Right));\n \n             when N_Designator =>\n@@ -749,33 +760,38 @@ package body Pprint is\n             if Right /= Expr then\n                while Scn < End_Sloc loop\n                   case Src (Scn) is\n-                  when ' ' | ASCII.HT =>\n-                     if not Skipping_Comment and then not Underscore then\n-                        Underscore := True;\n-                        Index := Index + 1;\n-                        Buffer (Index) := ' ';\n-                     end if;\n+                     when ' '\n+                        | ASCII.HT\n+                     =>\n+                        if not Skipping_Comment and then not Underscore then\n+                           Underscore := True;\n+                           Index := Index + 1;\n+                           Buffer (Index) := ' ';\n+                        end if;\n \n-                  --  CR/LF/FF is the end of any comment\n+                     --  CR/LF/FF is the end of any comment\n \n-                  when ASCII.LF | ASCII.CR | ASCII.FF =>\n-                     Skipping_Comment := False;\n+                     when ASCII.CR\n+                        | ASCII.FF\n+                        | ASCII.LF\n+                     =>\n+                        Skipping_Comment := False;\n \n-                  when others =>\n-                     Underscore := False;\n+                     when others =>\n+                        Underscore := False;\n \n-                     if not Skipping_Comment then\n+                        if not Skipping_Comment then\n \n-                        --  Ignore comment\n+                           --  Ignore comment\n \n-                        if Src (Scn) = '-' and then Src (Scn + 1) = '-' then\n-                           Skipping_Comment := True;\n+                           if Src (Scn) = '-' and then Src (Scn + 1) = '-' then\n+                              Skipping_Comment := True;\n \n-                        else\n-                           Index := Index + 1;\n-                           Buffer (Index) := Src (Scn);\n+                           else\n+                              Index := Index + 1;\n+                              Buffer (Index) := Src (Scn);\n+                           end if;\n                         end if;\n-                     end if;\n                   end case;\n \n                   Scn := Scn + 1;"}, {"sha": "02256ec66c0bfd0ceb7ee649ee06ce74a504dec5", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -211,8 +211,14 @@ package body Prep is\n    begin\n       if New_Name /= No_Name then\n          case Token is\n-            when Tok_If  | Tok_Else | Tok_Elsif | Tok_End |\n-                 Tok_And | Tok_Or   | Tok_Then =>\n+            when Tok_And\n+               | Tok_Else\n+               | Tok_Elsif\n+               | Tok_End\n+               | Tok_If\n+               | Tok_Or\n+               | Tok_Then\n+            =>\n                if All_Keywords then\n                   Token := Tok_Identifier;\n                   Token_Name := New_Name;\n@@ -458,12 +464,11 @@ package body Prep is\n \n                --  Handle relational operator\n \n-               elsif\n-                 Token = Tok_Equal      or else\n-                 Token = Tok_Less       or else\n-                 Token = Tok_Less_Equal or else\n-                 Token = Tok_Greater    or else\n-                 Token = Tok_Greater_Equal\n+               elsif     Token = Tok_Equal\n+                 or else Token = Tok_Less\n+                 or else Token = Tok_Less_Equal\n+                 or else Token = Tok_Greater\n+                 or else Token = Tok_Greater_Equal\n                then\n                   Relop := Token;\n                   Scan.all;"}, {"sha": "9c9472cc61ebf64c4e95f77a5d00f106b9c40a6c", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 36, "deletions": 37, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -245,7 +245,9 @@ package body Prj.Dect is\n \n    begin\n       case Qualif is\n-         when Aggregate | Aggregate_Library =>\n+         when Aggregate\n+            | Aggregate_Library\n+         =>\n             if        Name = Snames.Name_Languages\n               or else Name = Snames.Name_Source_Files\n               or else Name = Snames.Name_Source_List_File\n@@ -449,38 +451,39 @@ package body Prj.Dect is\n \n                if Token = Tok_At then\n                   case Attribute_Kind_Of (Current_Attribute) is\n-                  when Optional_Index_Associative_Array |\n-                       Optional_Index_Case_Insensitive_Associative_Array =>\n-                     Scan (In_Tree);\n-                     Expect (Tok_Integer_Literal, \"integer literal\");\n-\n-                     if Token = Tok_Integer_Literal then\n-\n-                        --  Set the source index value from given literal\n-\n-                        declare\n-                           Index : constant Int :=\n-                                     UI_To_Int (Int_Literal_Value);\n-                        begin\n-                           if Index = 0 then\n-                              Error_Msg\n-                                (Flags, \"index cannot be zero\", Token_Ptr);\n-                           else\n-                              Set_Source_Index_Of\n-                                (Attribute, In_Tree, To => Index);\n-                           end if;\n-                        end;\n-\n+                     when Optional_Index_Associative_Array\n+                        | Optional_Index_Case_Insensitive_Associative_Array\n+                     =>\n                         Scan (In_Tree);\n-                     end if;\n+                        Expect (Tok_Integer_Literal, \"integer literal\");\n+\n+                        if Token = Tok_Integer_Literal then\n+\n+                           --  Set the source index value from given literal\n+\n+                           declare\n+                              Index : constant Int :=\n+                                        UI_To_Int (Int_Literal_Value);\n+                           begin\n+                              if Index = 0 then\n+                                 Error_Msg\n+                                   (Flags, \"index cannot be zero\", Token_Ptr);\n+                              else\n+                                 Set_Source_Index_Of\n+                                   (Attribute, In_Tree, To => Index);\n+                              end if;\n+                           end;\n \n-                  when others =>\n-                     Error_Msg (Flags, \"index not allowed here\", Token_Ptr);\n-                     Scan (In_Tree);\n+                           Scan (In_Tree);\n+                        end if;\n \n-                     if Token = Tok_Integer_Literal then\n+                     when others =>\n+                        Error_Msg (Flags, \"index not allowed here\", Token_Ptr);\n                         Scan (In_Tree);\n-                     end if;\n+\n+                        if Token = Tok_Integer_Literal then\n+                           Scan (In_Tree);\n+                        end if;\n                   end case;\n                end if;\n             end if;\n@@ -1022,7 +1025,7 @@ package body Prj.Dect is\n \n                      while Present (The_Variable)\n                        and then Name_Of (The_Variable, In_Tree) /=\n-                                Token_Name\n+                                  Token_Name\n                      loop\n                         The_Variable := Next_Variable (The_Variable, In_Tree);\n                      end loop;\n@@ -1032,10 +1035,8 @@ package body Prj.Dect is\n \n                      if No (The_Variable) then\n                         Error_Msg\n-                          (Flags,\n-                           \"a variable cannot be declared \" &\n-                           \"for the first time here\",\n-                           Token_Ptr);\n+                          (Flags, \"a variable cannot be declared for the \"\n+                           & \"first time here\", Token_Ptr);\n                      end if;\n                   end;\n                end if;\n@@ -1051,7 +1052,6 @@ package body Prj.Dect is\n                Set_Previous_Line_Node (Current_Declaration);\n \n             when Tok_For =>\n-\n                Parse_Attribute_Declaration\n                  (In_Tree           => In_Tree,\n                   Attribute         => Current_Declaration,\n@@ -1065,7 +1065,6 @@ package body Prj.Dect is\n                Set_Previous_Line_Node (Current_Declaration);\n \n             when Tok_Null =>\n-\n                Scan (In_Tree); --  past \"null\"\n \n             when Tok_Package =>"}, {"sha": "18741be7917dfe9be570d9ce03101ad5b9f228a3", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -887,7 +887,10 @@ package body Prj.Env is\n                         when Spec =>\n                            Suffix :=\n                              Source.Language.Config.Mapping_Spec_Suffix;\n-                        when Impl | Sep =>\n+\n+                        when Impl\n+                           | Sep\n+                        =>\n                            Suffix :=\n                              Source.Language.Config.Mapping_Body_Suffix;\n                      end case;"}, {"sha": "a224e7d038448808e5c4c0fa1bbe4bd2941712cd", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 31, "deletions": 18, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1501,9 +1501,9 @@ package body Prj.Nmsc is\n                            Lang_Index.Config.Compiler_Driver :=\n                              File_Name_Type (Element.Value.Value);\n \n-                        when Name_Required_Switches\n-                           | Name_Leading_Required_Switches\n-                           =>\n+                        when Name_Leading_Required_Switches\n+                           | Name_Required_Switches\n+                        =>\n                            Put (Into_List =>\n                                   Lang_Index.Config.\n                                     Compiler_Leading_Required_Switches,\n@@ -1808,8 +1808,9 @@ package body Prj.Nmsc is\n                     and then Element.Value.Value /= No_Name\n                   then\n                      case Current_Array.Name is\n-                        when Name_Spec_Suffix | Name_Specification_Suffix =>\n-\n+                        when Name_Spec_Suffix\n+                           | Name_Specification_Suffix\n+                        =>\n                            --  Attribute Spec_Suffix (<language>)\n \n                            Get_Name_String (Element.Value.Value);\n@@ -1818,8 +1819,9 @@ package body Prj.Nmsc is\n                            Lang_Index.Config.Naming_Data.Spec_Suffix :=\n                              Name_Find;\n \n-                        when Name_Implementation_Suffix | Name_Body_Suffix =>\n-\n+                        when Name_Body_Suffix\n+                           | Name_Implementation_Suffix\n+                        =>\n                            Get_Name_String (Element.Value.Value);\n                            Canonical_Case_File_Name\n                              (Name_Buffer (1 .. Name_Len));\n@@ -2513,6 +2515,7 @@ package body Prj.Nmsc is\n                                  & \"\"\" for Objects_Linked\",\n                                  Element.Value.Location, Project);\n                         end;\n+\n                      when others =>\n                         null;\n                   end case;\n@@ -3448,7 +3451,9 @@ package body Prj.Nmsc is\n                      Lib_Name.Location, Project);\n                end if;\n \n-            when Library | Aggregate_Library =>\n+            when Aggregate_Library\n+               | Library\n+            =>\n                if not Project.Library then\n                   if Project.Library_Name = No_Name then\n                      Error_Msg\n@@ -4043,7 +4048,9 @@ package body Prj.Nmsc is\n \n       begin\n          case Kind is\n-            when Impl | Sep =>\n+            when Impl\n+               | Sep\n+            =>\n                Exceptions :=\n                  Value_Of\n                    (Name_Implementation_Exceptions,\n@@ -4139,7 +4146,9 @@ package body Prj.Nmsc is\n \n       begin\n          case Kind is\n-            when Impl | Sep =>\n+            when Impl\n+               | Sep\n+            =>\n                Exceptions :=\n                  Value_Of\n                    (Name_Body,\n@@ -4403,11 +4412,11 @@ package body Prj.Nmsc is\n                Lang_Id := Project.Languages;\n                while Lang_Id /= No_Language_Index loop\n                   case Lang_Id.Config.Kind is\n-                  when File_Based =>\n-                     Process_Exceptions_File_Based (Lang_Id, Kind);\n+                     when File_Based =>\n+                        Process_Exceptions_File_Based (Lang_Id, Kind);\n \n-                  when Unit_Based =>\n-                     Process_Exceptions_Unit_Based (Lang_Id, Kind);\n+                     when Unit_Based =>\n+                        Process_Exceptions_Unit_Based (Lang_Id, Kind);\n                   end case;\n \n                   Lang_Id := Lang_Id.Next;\n@@ -6001,7 +6010,9 @@ package body Prj.Nmsc is\n                   end if;\n                end loop;\n \n-            when Mixed_Case | Unknown =>\n+            when Mixed_Case\n+               | Unknown\n+            =>\n                null;\n          end case;\n       end if;\n@@ -8412,11 +8423,13 @@ package body Prj.Nmsc is\n          when Silent =>\n             null;\n \n-         when Warning | Error =>\n+         when Error\n+            | Warning\n+         =>\n             declare\n                Msg : constant String :=\n-                      \"<there are no \"\n-                      & Lang_Name & \" sources in this project\";\n+                       \"<there are no \" & Lang_Name\n+                         & \" sources in this project\";\n \n             begin\n                Error_Msg_Warn := Data.Flags.When_No_Sources = Warning;"}, {"sha": "6da5ae2325d0389b3ef0f49a4c9052aad0905523", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -393,16 +393,21 @@ package body Prj.PP is\n                   Start_Line (Indent);\n \n                   case Project_Qualifier_Of (Node, In_Tree) is\n-                     when Unspecified | Standard =>\n+                     when Standard\n+                        | Unspecified\n+                     =>\n                         null;\n-                     when Aggregate   =>\n+                     when Aggregate =>\n                         Write_String (\"aggregate \", Indent);\n+\n                      when Aggregate_Library =>\n                         Write_String (\"aggregate library \", Indent);\n-                     when Library     =>\n+                     when Library =>\n                         Write_String (\"library \", Indent);\n+\n                      when Configuration =>\n                         Write_String (\"configuration \", Indent);\n+\n                      when Abstract_Project =>\n                         Write_String (\"abstract \", Indent);\n                   end case;"}, {"sha": "ff68ce79b6b23545ddf131aebf4d5b0bf78979bd", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -547,7 +547,6 @@ package body Prj.Proc is\n               Kind_Of (The_Current_Term, From_Project_Node_Tree);\n \n             case Current_Term_Kind is\n-\n             when N_Literal_String =>\n                case Kind is\n                   when Undefined =>\n@@ -566,7 +565,6 @@ package body Prj.Proc is\n                          (The_Current_Term, From_Project_Node_Tree);\n \n                   when List =>\n-\n                      String_Element_Table.Increment_Last\n                        (Shared.String_Elements);\n \n@@ -695,7 +693,9 @@ package body Prj.Proc is\n                   end if;\n                end;\n \n-            when N_Variable_Reference | N_Attribute_Reference =>\n+            when N_Attribute_Reference\n+               | N_Variable_Reference\n+            =>\n                declare\n                   The_Project     : Project_Id  := Project;\n                   The_Package     : Package_Id  := Pkg;\n@@ -981,16 +981,17 @@ package body Prj.Proc is\n                                  when Read_Only_Value  =>\n                                     null;\n \n-                                 when Empty_Value      =>\n+                                 when Empty_Value =>\n                                     The_Variable.Values := Nil_String;\n \n-                                 when Dot_Value        =>\n+                                 when Dot_Value =>\n                                     The_Variable.Values :=\n                                       Shared.Dot_String_List;\n \n-                                 when Object_Dir_Value |\n-                                      Target_Value     |\n-                                      Runtime_Value    =>\n+                                 when Object_Dir_Value\n+                                    | Runtime_Value\n+                                    | Target_Value\n+                                 =>\n                                     null;\n                               end case;\n                            end case;\n@@ -1008,7 +1009,6 @@ package body Prj.Proc is\n \n                      when Single =>\n                         case The_Variable.Kind is\n-\n                            when Undefined =>\n                               null;\n \n@@ -1028,7 +1028,6 @@ package body Prj.Proc is\n \n                      when List =>\n                         case The_Variable.Kind is\n-\n                            when Undefined =>\n                               null;\n \n@@ -1066,7 +1065,6 @@ package body Prj.Proc is\n                                  Index         => 0);\n \n                            when List =>\n-\n                               declare\n                                  The_List : String_List_Id :=\n                                               The_Variable.Values;\n@@ -1283,7 +1281,6 @@ package body Prj.Proc is\n                   end if;\n \n                   case Kind is\n-\n                      when Undefined =>\n                         null;\n \n@@ -1365,7 +1362,6 @@ package body Prj.Proc is\n                  (False,\n                   \"illegal node kind in an expression\");\n                raise Program_Error;\n-\n             end case;\n          end if;\n \n@@ -2465,9 +2461,10 @@ package body Prj.Proc is\n             when N_String_Type_Declaration =>\n                null;\n \n-            when N_Attribute_Declaration      |\n-                 N_Typed_Variable_Declaration |\n-                 N_Variable_Declaration       =>\n+            when N_Attribute_Declaration\n+               | N_Typed_Variable_Declaration\n+               | N_Variable_Declaration\n+            =>\n                Process_Attribute_Declaration (Current);\n \n             when N_Case_Construction =>"}, {"sha": "eb7aaa3f4dffe5d97dadb31ef910e4f58506f55f", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1556,7 +1556,9 @@ package body Prj.Strt is\n                end if;\n             end if;\n \n-         when Tok_External | Tok_External_As_List  =>\n+         when Tok_External\n+            | Tok_External_As_List\n+         =>\n             External_Reference\n               (In_Tree         => In_Tree,\n                Flags           => Flags,"}, {"sha": "ea852d110c7ea942b48fc097c38ece4ac058073f", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1743,8 +1743,8 @@ package body Prj.Tree is\n                --  comment zone with the node of the preceding line (either\n                --  a Previous_Line or a Previous_End node), if any.\n \n-               if Comments.Last > 0 and then\n-                 not Comments.Table (1).Follows_Empty_Line\n+               if Comments.Last > 0\n+                 and then not Comments.Table (1).Follows_Empty_Line\n                then\n                   if Present (Previous_Line_Node) then\n                      Add_Comments"}, {"sha": "e14f63e7feb78e80a5b082c5ba02aa3f17ca3c9c", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -306,7 +306,9 @@ package body Prj is\n          when Makefile =>\n             return Extend_Name (Source_File_Name, Makefile_Dependency_Suffix);\n \n-         when ALI_File | ALI_Closure =>\n+         when ALI_Closure\n+            | ALI_File\n+         =>\n             return Extend_Name (Source_File_Name, ALI_Dependency_Suffix);\n       end case;\n    end Dependency_Name;\n@@ -1250,7 +1252,9 @@ package body Prj is\n          Free_List (Project.Languages);\n \n          case Project.Qualifier is\n-            when Aggregate | Aggregate_Library =>\n+            when Aggregate\n+               | Aggregate_Library\n+            =>\n                Free (Project.Aggregated_Projects);\n \n             when others =>\n@@ -1899,12 +1903,9 @@ package body Prj is\n    begin\n       if Source.Unit /= No_Unit_Index then\n          case Source.Kind is\n-            when Impl =>\n-               return Source.Unit.File_Names (Spec);\n-            when Spec =>\n-               return Source.Unit.File_Names (Impl);\n-            when Sep =>\n-               return No_Source;\n+            when Impl => return Source.Unit.File_Names (Spec);\n+            when Spec => return Source.Unit.File_Names (Impl);\n+            when Sep  => return No_Source;\n          end case;\n       else\n          return No_Source;"}, {"sha": "90bb6dacc23cec732cbff1ae522e89732beb8b2e", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -643,7 +643,6 @@ package body Repinfo is\n                   when Discrim_Val =>\n                      Write_Char ('#');\n                      UI_Write (Node.Op1);\n-\n                end case;\n             end;\n          end if;\n@@ -711,7 +710,9 @@ package body Repinfo is\n          when E_Subprogram_Type =>\n             Write_Str (\"type \");\n \n-         when E_Entry | E_Entry_Family =>\n+         when E_Entry\n+            | E_Entry_Family\n+         =>\n             Write_Str (\"entry \");\n \n          when others =>\n@@ -727,31 +728,43 @@ package body Repinfo is\n       Write_Str (\"  convention : \");\n \n       case Convention (Ent) is\n-         when Convention_Ada                   =>\n+         when Convention_Ada =>\n             Write_Line (\"Ada\");\n-         when Convention_Ada_Pass_By_Copy      =>\n+\n+         when Convention_Ada_Pass_By_Copy =>\n             Write_Line (\"Ada_Pass_By_Copy\");\n+\n          when Convention_Ada_Pass_By_Reference =>\n             Write_Line (\"Ada_Pass_By_Reference\");\n-         when Convention_Intrinsic             =>\n+\n+         when Convention_Intrinsic =>\n             Write_Line (\"Intrinsic\");\n-         when Convention_Entry                 =>\n+\n+         when Convention_Entry =>\n             Write_Line (\"Entry\");\n-         when Convention_Protected             =>\n+\n+         when Convention_Protected =>\n             Write_Line (\"Protected\");\n-         when Convention_Assembler             =>\n+\n+         when Convention_Assembler =>\n             Write_Line (\"Assembler\");\n-         when Convention_C                     =>\n+\n+         when Convention_C =>\n             Write_Line (\"C\");\n-         when Convention_COBOL                 =>\n+\n+         when Convention_COBOL =>\n             Write_Line (\"COBOL\");\n-         when Convention_CPP                   =>\n+\n+         when Convention_CPP =>\n             Write_Line (\"C++\");\n-         when Convention_Fortran               =>\n+\n+         when Convention_Fortran =>\n             Write_Line (\"Fortran\");\n-         when Convention_Stdcall               =>\n+\n+         when Convention_Stdcall =>\n             Write_Line (\"Stdcall\");\n-         when Convention_Stubbed               =>\n+\n+         when Convention_Stubbed =>\n             Write_Line (\"Stubbed\");\n       end case;\n \n@@ -1435,7 +1448,6 @@ package body Repinfo is\n                         pragma Assert (Sub in D'Range);\n                         return D (Sub);\n                      end;\n-\n                end case;\n             end;\n          end if;"}, {"sha": "3b078c2e660f9f0f7c0bd3d6831a957a36ae765b", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -33,6 +33,7 @@ with Errout;   use Errout;\n with Exp_Dist; use Exp_Dist;\n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n+with Ghost;    use Ghost;\n with Lib;      use Lib;\n with Lib.Load; use Lib.Load;\n with Namet;    use Namet;\n@@ -938,7 +939,7 @@ package body Rtsfind is\n \n       --  Provide a clean environment for the unit\n \n-      Ghost_Mode := None;\n+      Install_Ghost_Mode (None);\n \n       --  Note if secondary stack is used\n \n@@ -1041,7 +1042,7 @@ package body Rtsfind is\n          Set_Is_Potentially_Use_Visible (U.Entity, True);\n       end if;\n \n-      Ghost_Mode := Save_Ghost_Mode;\n+      Restore_Ghost_Mode (Save_Ghost_Mode);\n    end Load_RTU;\n \n    --------------------"}, {"sha": "343a723b67db415fdb939906bf45a021df303c27", "filename": "gcc/ada/s-exctra.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-exctra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-exctra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exctra.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2015, AdaCore                     --\n+--                     Copyright (C) 2000-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,8 +112,10 @@ package body System.Exception_Traces is\n       case Kind is\n          when Every_Raise =>\n             Exception_Trace := Every_Raise;\n+\n          when Unhandled_Raise =>\n             Exception_Trace := Unhandled_Raise;\n+\n          when Unhandled_Raise_In_Main =>\n             Exception_Trace := Unhandled_Raise_In_Main;\n       end case;"}, {"sha": "9c27a0e907224b4a60a2dd07876ac6b16a052850", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -500,7 +500,9 @@ package body System.File_IO is\n                Fptr := 2;\n             end if;\n \n-         when Inout_File | Append_File =>\n+         when Append_File\n+            | Inout_File\n+         =>\n             Fopstr (1) := (if Creat then 'w' else 'r');\n             Fopstr (2) := '+';\n             Fptr := 3;"}, {"sha": "a88b643784f69a854ca6ea5da25d40dc82d05cc7", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2014, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2016, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -761,8 +761,8 @@ package body System.Interrupts is\n             Server := Server_ID (Interrupt);\n \n             case Server.Common.State is\n-               when Interrupt_Server_Idle_Sleep |\n-                    Interrupt_Server_Blocked_Interrupt_Sleep\n+               when Interrupt_Server_Blocked_Interrupt_Sleep\n+                  | Interrupt_Server_Idle_Sleep\n                =>\n                   POP.Wakeup (Server, Server.Common.State);\n \n@@ -1119,8 +1119,8 @@ package body System.Interrupts is\n                   if User_Handler (Interrupt).H /= null\n                     or else User_Entry (Interrupt).T /= Null_Task\n                   then\n-                     --  This is the case where the Server_Task is\n-                     --  waiting on \"sigwait.\" Wake it up by sending an\n+                     --  This is the case where the Server_Task\n+                     --  is waiting on\"sigwait.\" Wake it up by sending an\n                      --  Abort_Task_Interrupt so that the Server_Task waits\n                      --  on Cond.\n "}, {"sha": "6c8f0fbe1d40177f53ab741188eb7eee69135528", "filename": "gcc/ada/s-intman-android.adb", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-android.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-android.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-android.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -111,21 +111,15 @@ package body System.Interrupt_Management is\n       pragma Unreferenced (ucontext);\n \n    begin\n-\n       --  Check that treatment of exception propagation here is consistent with\n       --  treatment of the abort signal in System.Task_Primitives.Operations.\n \n       case signo is\n-         when SIGFPE =>\n-            raise Constraint_Error;\n-         when SIGILL =>\n-            raise Program_Error;\n-         when SIGSEGV =>\n-            raise Storage_Error;\n-         when SIGBUS =>\n-            raise Storage_Error;\n-         when others =>\n-            null;\n+         when SIGFPE  => raise Constraint_Error;\n+         when SIGILL  => raise Program_Error;\n+         when SIGSEGV => raise Storage_Error;\n+         when SIGBUS  => raise Storage_Error;\n+         when others  => null;\n       end case;\n    end Map_Signal;\n "}, {"sha": "92e7ab156b922ca8d4733a9341a4789a5f157ba8", "filename": "gcc/ada/s-intman-posix.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-posix.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -131,16 +131,11 @@ package body System.Interrupt_Management is\n       --  treatment of the abort signal in System.Task_Primitives.Operations.\n \n       case signo is\n-         when SIGFPE =>\n-            raise Constraint_Error;\n-         when SIGILL =>\n-            raise Program_Error;\n-         when SIGSEGV =>\n-            raise Storage_Error;\n-         when SIGBUS =>\n-            raise Storage_Error;\n-         when others =>\n-            null;\n+         when SIGFPE  => raise Constraint_Error;\n+         when SIGILL  => raise Program_Error;\n+         when SIGSEGV => raise Storage_Error;\n+         when SIGBUS  => raise Storage_Error;\n+         when others  => null;\n       end case;\n    end Notify_Exception;\n "}, {"sha": "03366b90189ced9c1da97d30b1ec565db7c76347", "filename": "gcc/ada/s-intman-solaris.adb", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-intman-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-solaris.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -92,25 +92,20 @@ package body System.Interrupt_Management is\n       pragma Unreferenced (info);\n \n    begin\n-      --  Perform the necessary context adjustments prior to a raise\n-      --  from a signal handler.\n+      --  Perform the necessary context adjustments prior to a raise from a\n+      --  signal handler.\n \n       Adjust_Context_For_Raise (signo, context.all'Address);\n \n       --  Check that treatment of exception propagation here is consistent with\n       --  treatment of the abort signal in System.Task_Primitives.Operations.\n \n       case signo is\n-         when SIGFPE =>\n-            raise Constraint_Error;\n-         when SIGILL =>\n-            raise Program_Error;\n-         when SIGSEGV =>\n-            raise Storage_Error;\n-         when SIGBUS =>\n-            raise Storage_Error;\n-         when others =>\n-            null;\n+         when SIGFPE  => raise Constraint_Error;\n+         when SIGILL  => raise Program_Error;\n+         when SIGSEGV => raise Storage_Error;\n+         when SIGBUS  => raise Storage_Error;\n+         when others  => null;\n       end case;\n    end Notify_Exception;\n "}, {"sha": "d8fd5f51c4fe1cf312917fe313031ca5c63248c1", "filename": "gcc/ada/s-io.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-io.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,10 +59,8 @@ package body System.IO is\n \n    begin\n       case Current_Out is\n-         when Stdout =>\n-            Put_Int (X);\n-         when Stderr =>\n-            Put_Int_Err (X);\n+         when Stdout => Put_Int (X);\n+         when Stderr => Put_Int_Err (X);\n       end case;\n    end Put;\n \n@@ -75,10 +73,8 @@ package body System.IO is\n \n    begin\n       case Current_Out is\n-         when Stdout =>\n-            Put_Char (C);\n-         when Stderr =>\n-            Put_Char_Stderr (C);\n+         when Stdout => Put_Char (C);\n+         when Stderr => Put_Char_Stderr (C);\n       end case;\n    end Put;\n "}, {"sha": "6d4f2bf242a43dd097813e2ea73aab90fda0a03f", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -329,7 +329,6 @@ package body System.OS_Primitives is\n    -----------------\n \n    procedure Timed_Delay (Time : Duration; Mode : Integer) is\n-\n       function Mode_Clock return Duration;\n       pragma Inline (Mode_Clock);\n       --  Return the current clock value using either the monotonic clock or\n@@ -342,10 +341,8 @@ package body System.OS_Primitives is\n       function Mode_Clock return Duration is\n       begin\n          case Mode is\n-            when Absolute_RT =>\n-               return Monotonic_Clock;\n-            when others =>\n-               return Clock;\n+            when Absolute_RT => return Monotonic_Clock;\n+            when others      => return Clock;\n          end case;\n       end Mode_Clock;\n "}, {"sha": "8324504168f7b7741a1f5f55c43ebf34ea0979be", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -970,7 +970,10 @@ package body System.Regexp is\n                         End_State := Current_State;\n                      end if;\n \n-                  when '*' | '+' | '?' | Close_Paren | Close_Bracket =>\n+                  when Close_Bracket\n+                     | Close_Paren\n+                     | '*' | '+' | '?'\n+                  =>\n                      Raise_Exception\n                        (\"Incorrect character in regular expression :\", J);\n \n@@ -1020,7 +1023,6 @@ package body System.Regexp is\n \n                         End_State := Current_State;\n                      end if;\n-\n                end case;\n \n                if Start_State = 0 then\n@@ -1159,7 +1161,6 @@ package body System.Regexp is\n             J := Start_Index;\n             while J <= End_Index loop\n                case S (J) is\n-\n                   when Open_Bracket =>\n                      Current_State := Current_State + 1;\n \n@@ -1344,7 +1345,6 @@ package body System.Regexp is\n                      end if;\n \n                      End_State := Current_State;\n-\n                end case;\n \n                if Start_State = 0 then"}, {"sha": "48444431c52f4bdf154534a67070a1575070b33b", "filename": "gcc/ada/s-tasini.adb", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2015, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2016, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -434,12 +434,15 @@ package body System.Tasking.Initialization is\n    begin\n       if not T.Aborting and then T /= Self_ID then\n          case T.Common.State is\n-            when Unactivated | Terminated =>\n+            when Terminated\n+               | Unactivated\n+            =>\n                pragma Assert (False);\n                null;\n \n-            when Activating | Runnable =>\n-\n+            when Activating\n+               | Runnable\n+            =>\n                --  This is needed to cancel an asynchronous protected entry\n                --  call during a requeue with abort.\n \n@@ -449,15 +452,18 @@ package body System.Tasking.Initialization is\n             when Interrupt_Server_Blocked_On_Event_Flag =>\n                null;\n \n-            when Delay_Sleep                              |\n-                 Async_Select_Sleep                       |\n-                 Interrupt_Server_Idle_Sleep              |\n-                 Interrupt_Server_Blocked_Interrupt_Sleep |\n-                 Timer_Server_Sleep                       |\n-                 AST_Server_Sleep                         =>\n+            when AST_Server_Sleep\n+               | Async_Select_Sleep\n+               | Delay_Sleep\n+               | Interrupt_Server_Blocked_Interrupt_Sleep\n+               | Interrupt_Server_Idle_Sleep\n+               | Timer_Server_Sleep\n+            =>\n                Wakeup (T, T.Common.State);\n \n-            when Acceptor_Sleep | Acceptor_Delay_Sleep =>\n+            when Acceptor_Delay_Sleep\n+               | Acceptor_Sleep\n+            =>\n                T.Open_Accepts := null;\n                Wakeup (T, T.Common.State);\n \n@@ -466,10 +472,11 @@ package body System.Tasking.Initialization is\n                  (T.ATC_Nesting_Level).Cancellation_Attempted := True;\n                Wakeup (T, T.Common.State);\n \n-            when Activator_Sleep         |\n-                 Master_Completion_Sleep |\n-                 Master_Phase_2_Sleep    |\n-                 Asynchronous_Hold       =>\n+            when Activator_Sleep\n+               | Asynchronous_Hold\n+               | Master_Completion_Sleep\n+               | Master_Phase_2_Sleep\n+            =>\n                null;\n          end case;\n       end if;"}, {"sha": "754507130b6117fefb1afe1e889cbfd8f2fc742e", "filename": "gcc/ada/s-tfsetr-default.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tfsetr-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tfsetr-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tfsetr-default.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -81,10 +81,10 @@ procedure Send_Trace (Id : Trace_T; Info : String) is\n       --  We need comments here ???\n \n       case Param is\n-         when Name_Param     =>\n+         when Name_Param =>\n             Match (\"/N:([\\w]+)\", Input, Matches);\n \n-         when Caller_Param   =>\n+         when Caller_Param =>\n             Match (\"/C:([\\w]+)\", Input, Matches);\n \n          when Entry_Param =>\n@@ -96,7 +96,7 @@ procedure Send_Trace (Id : Trace_T; Info : String) is\n          when Acceptor_Param =>\n             Match (\"/A:([\\w]+)\", Input, Matches);\n \n-         when Parent_Param   =>\n+         when Parent_Param =>\n             Match (\"/P:([\\w]+)\", Input, Matches);\n \n          when Number_Param =>\n@@ -108,7 +108,10 @@ procedure Send_Trace (Id : Trace_T; Info : String) is\n       end if;\n \n       case Param is\n-         when Timeout_Param | Entry_Param | Number_Param =>\n+         when Entry_Param\n+            | Number_Param\n+            | Timeout_Param\n+         =>\n             return Input (Matches (2).First .. Matches (2).Last);\n \n          when others =>"}, {"sha": "cb57b5e00e142caeb692e1567df21a285a8a7794", "filename": "gcc/ada/s-tfsetr-vxworks.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tfsetr-vxworks.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---           Copyright (C) 2001-2009, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2001-2016, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -98,7 +98,6 @@ begin\n       --  Unrecognized events are given the special Id_Event value 29999\n \n       when others            => Id_Event := 29999;\n-\n    end case;\n \n    Wv_Event (Id_Event, Info_Trace'Address, Max_Size);"}, {"sha": "379ec41dfec7f063605922a8f12fbe91e5b3c588", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -671,7 +671,9 @@ package body System.Tasking.Protected_Objects.Operations is\n \n       else\n          case Mode is\n-            when Simple_Call | Conditional_Call =>\n+            when Conditional_Call\n+               | Simple_Call\n+            =>\n                if Single_Lock then\n                   STPO.Lock_RTS;\n                   Entry_Calls.Wait_For_Completion (Entry_Call);\n@@ -685,7 +687,9 @@ package body System.Tasking.Protected_Objects.Operations is\n \n                Block.Cancelled := Entry_Call.State = Cancelled;\n \n-            when Asynchronous_Call | Timed_Call =>\n+            when Asynchronous_Call\n+               | Timed_Call\n+            =>\n                pragma Assert (False);\n                null;\n          end case;"}, {"sha": "9e45771bd0924a0c30dddf2de9609959b291b542", "filename": "gcc/ada/s-tratas-default.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tratas-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-tratas-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tratas-default.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,7 +62,9 @@ package body System.Traces.Tasking is\n    begin\n       if Parameters.Runtime_Traces then\n          case Id is\n-            when M_RDV_Complete | PO_Done =>\n+            when M_RDV_Complete\n+               | PO_Done\n+            =>\n                Trace_S (1 .. 3)                 := \"/N:\";\n                Trace_S (4 .. 3 + L0)            := Task_S;\n                Trace_S (4 + L0 .. 6 + L0)       := \"/C:\";"}, {"sha": "7e2ab08e55b6676ff426966282d89c18f3c3b101", "filename": "gcc/ada/s-wchcnv.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-wchcnv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fs-wchcnv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcnv.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -97,7 +97,6 @@ package body System.WCh_Cnv is\n \n    begin\n       case EM is\n-\n          when WCEM_Hex =>\n             if C /= ASCII.ESC then\n                return Character'Pos (C);\n@@ -245,7 +244,6 @@ package body System.WCh_Cnv is\n             end if;\n \n             return UTF_32_Code (B1);\n-\n       end case;\n    end Char_Sequence_To_UTF_32;\n \n@@ -293,7 +291,6 @@ package body System.WCh_Cnv is\n       --  Processing depends on encoding mode\n \n       case EM is\n-\n          when WCEM_Hex =>\n             if Val < 256 then\n                Out_Char (Character'Val (Val));"}, {"sha": "3e2d7fa03fac6270d9b43cbb845b76099ae5bbea", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 263, "deletions": 67, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -149,45 +149,131 @@ package body Scng is\n       --  Token_Type are detected by the compiler.\n \n       case Token is\n-         when Tok_Integer_Literal | Tok_Real_Literal | Tok_String_Literal |\n-              Tok_Char_Literal | Tok_Operator_Symbol | Tok_Identifier |\n-              Tok_Double_Asterisk | Tok_Ampersand | Tok_Minus | Tok_Plus |\n-              Tok_Asterisk | Tok_Mod | Tok_Rem | Tok_Slash | Tok_New |\n-              Tok_Abs | Tok_Others | Tok_Null | Tok_Dot | Tok_Apostrophe |\n-              Tok_Left_Paren | Tok_Delta | Tok_Digits | Tok_Range |\n-              Tok_Right_Paren | Tok_Comma | Tok_And | Tok_Or | Tok_Xor |\n-              Tok_Less | Tok_Equal | Tok_Greater | Tok_Not_Equal |\n-              Tok_Greater_Equal | Tok_Less_Equal | Tok_In | Tok_Not |\n-              Tok_Box | Tok_Colon_Equal | Tok_Colon | Tok_Greater_Greater |\n-              Tok_Abstract | Tok_Access | Tok_Aliased | Tok_All | Tok_Array |\n-              Tok_At | Tok_Body | Tok_Constant | Tok_Do | Tok_Is |\n-              Tok_Interface | Tok_Limited | Tok_Of | Tok_Out | Tok_Record |\n-              Tok_Renames | Tok_Reverse =>\n-\n+         when Tok_Abs\n+            | Tok_Abstract\n+            | Tok_Access\n+            | Tok_Aliased\n+            | Tok_All\n+            | Tok_Ampersand\n+            | Tok_And\n+            | Tok_Apostrophe\n+            | Tok_Array\n+            | Tok_Asterisk\n+            | Tok_At\n+            | Tok_Body\n+            | Tok_Box\n+            | Tok_Char_Literal\n+            | Tok_Colon\n+            | Tok_Colon_Equal\n+            | Tok_Comma\n+            | Tok_Constant\n+            | Tok_Delta\n+            | Tok_Digits\n+            | Tok_Do\n+            | Tok_Dot\n+            | Tok_Double_Asterisk\n+            | Tok_Equal\n+            | Tok_Greater\n+            | Tok_Greater_Equal\n+            | Tok_Greater_Greater\n+            | Tok_Identifier\n+            | Tok_In\n+            | Tok_Integer_Literal\n+            | Tok_Interface\n+            | Tok_Is\n+            | Tok_Left_Paren\n+            | Tok_Less\n+            | Tok_Less_Equal\n+            | Tok_Limited\n+            | Tok_Minus\n+            | Tok_Mod\n+            | Tok_New\n+            | Tok_Not\n+            | Tok_Not_Equal\n+            | Tok_Null\n+            | Tok_Of\n+            | Tok_Operator_Symbol\n+            | Tok_Or\n+            | Tok_Others\n+            | Tok_Out\n+            | Tok_Plus\n+            | Tok_Range\n+            | Tok_Real_Literal\n+            | Tok_Record\n+            | Tok_Rem\n+            | Tok_Renames\n+            | Tok_Reverse\n+            | Tok_Right_Paren\n+            | Tok_Slash\n+            | Tok_String_Literal\n+            | Tok_Xor\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token)));\n \n          when Tok_Some =>\n-\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Tok_Identifier)));\n \n-         when Tok_Tagged | Tok_Then | Tok_Less_Less | Tok_Abort | Tok_Accept |\n-              Tok_Case | Tok_Delay | Tok_Else | Tok_Elsif | Tok_End |\n-              Tok_Exception | Tok_Exit | Tok_Goto | Tok_If | Tok_Pragma |\n-              Tok_Raise | Tok_Requeue | Tok_Return | Tok_Select |\n-              Tok_Terminate | Tok_Until | Tok_When | Tok_Begin | Tok_Declare |\n-              Tok_For | Tok_Loop | Tok_While | Tok_Entry | Tok_Protected |\n-              Tok_Task | Tok_Type | Tok_Subtype | Tok_Overriding |\n-              Tok_Synchronized | Tok_Use | Tok_Function | Tok_Generic |\n-              Tok_Package | Tok_Procedure | Tok_Private | Tok_With |\n-              Tok_Separate | Tok_EOF | Tok_Semicolon | Tok_Arrow |\n-              Tok_Vertical_Bar | Tok_Dot_Dot | Tok_Project | Tok_Extends |\n-              Tok_External | Tok_External_As_List | Tok_Comment |\n-              Tok_End_Of_Line | Tok_Special | Tok_SPARK_Hide | No_Token =>\n-\n+         when No_Token\n+            | Tok_Abort\n+            | Tok_Accept\n+            | Tok_Arrow\n+            | Tok_Begin\n+            | Tok_Case\n+            | Tok_Comment\n+            | Tok_Declare\n+            | Tok_Delay\n+            | Tok_Dot_Dot\n+            | Tok_Else\n+            | Tok_Elsif\n+            | Tok_End\n+            | Tok_End_Of_Line\n+            | Tok_Entry\n+            | Tok_EOF\n+            | Tok_Exception\n+            | Tok_Exit\n+            | Tok_Extends\n+            | Tok_External\n+            | Tok_External_As_List\n+            | Tok_For\n+            | Tok_Function\n+            | Tok_Generic\n+            | Tok_Goto\n+            | Tok_If\n+            | Tok_Less_Less\n+            | Tok_Loop\n+            | Tok_Overriding\n+            | Tok_Package\n+            | Tok_Pragma\n+            | Tok_Private\n+            | Tok_Procedure\n+            | Tok_Project\n+            | Tok_Protected\n+            | Tok_Raise\n+            | Tok_Requeue\n+            | Tok_Return\n+            | Tok_Select\n+            | Tok_Semicolon\n+            | Tok_Separate\n+            | Tok_SPARK_Hide\n+            | Tok_Special\n+            | Tok_Subtype\n+            | Tok_Synchronized\n+            | Tok_Tagged\n+            | Tok_Task\n+            | Tok_Terminate\n+            | Tok_Then\n+            | Tok_Type\n+            | Tok_Until\n+            | Tok_Use\n+            | Tok_Vertical_Bar\n+            | Tok_When\n+            | Tok_While\n+            | Tok_With\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token_Type'Pred (Token))));\n@@ -205,54 +291,142 @@ package body Scng is\n       --  Token_Type are detected by the compiler.\n \n       case Token is\n-         when Tok_Integer_Literal | Tok_Real_Literal | Tok_String_Literal |\n-              Tok_Char_Literal | Tok_Operator_Symbol | Tok_Identifier |\n-              Tok_Double_Asterisk | Tok_Ampersand | Tok_Minus | Tok_Plus |\n-              Tok_Asterisk | Tok_Mod | Tok_Rem | Tok_Slash | Tok_New |\n-              Tok_Abs | Tok_Others | Tok_Null | Tok_Dot | Tok_Apostrophe |\n-              Tok_Left_Paren | Tok_Delta | Tok_Digits | Tok_Range |\n-              Tok_Right_Paren | Tok_Comma | Tok_And | Tok_Or | Tok_Xor |\n-              Tok_Less | Tok_Equal | Tok_Greater | Tok_Not_Equal |\n-              Tok_Greater_Equal | Tok_Less_Equal | Tok_In | Tok_Not |\n-              Tok_Box | Tok_Colon_Equal | Tok_Colon | Tok_Greater_Greater |\n-              Tok_Abstract | Tok_Access | Tok_Aliased | Tok_All | Tok_Array |\n-              Tok_At | Tok_Body | Tok_Constant | Tok_Do | Tok_Is =>\n-\n+         when Tok_Abs\n+            | Tok_Abstract\n+            | Tok_Access\n+            | Tok_Aliased\n+            | Tok_All\n+            | Tok_Ampersand\n+            | Tok_And\n+            | Tok_Apostrophe\n+            | Tok_Array\n+            | Tok_Asterisk\n+            | Tok_At\n+            | Tok_Body\n+            | Tok_Box\n+            | Tok_Char_Literal\n+            | Tok_Colon\n+            | Tok_Colon_Equal\n+            | Tok_Comma\n+            | Tok_Constant\n+            | Tok_Delta\n+            | Tok_Digits\n+            | Tok_Do\n+            | Tok_Dot\n+            | Tok_Double_Asterisk\n+            | Tok_Equal\n+            | Tok_Greater\n+            | Tok_Greater_Equal\n+            | Tok_Greater_Greater\n+            | Tok_Identifier\n+            | Tok_In\n+            | Tok_Integer_Literal\n+            | Tok_Is\n+            | Tok_Left_Paren\n+            | Tok_Less\n+            | Tok_Less_Equal\n+            | Tok_Minus\n+            | Tok_Mod\n+            | Tok_New\n+            | Tok_Not\n+            | Tok_Not_Equal\n+            | Tok_Null\n+            | Tok_Operator_Symbol\n+            | Tok_Or\n+            | Tok_Others\n+            | Tok_Plus\n+            | Tok_Range\n+            | Tok_Real_Literal\n+            | Tok_Rem\n+            | Tok_Right_Paren\n+            | Tok_Slash\n+            | Tok_String_Literal\n+            | Tok_Xor\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token)));\n \n-         when Tok_Interface | Tok_Some | Tok_Overriding | Tok_Synchronized =>\n+         when Tok_Interface\n+            | Tok_Overriding\n+            | Tok_Some\n+            | Tok_Synchronized\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Tok_Identifier)));\n \n-         when Tok_Limited | Tok_Of | Tok_Out | Tok_Record |\n-              Tok_Renames | Tok_Reverse =>\n-\n+         when Tok_Limited\n+            | Tok_Of\n+            | Tok_Out\n+            | Tok_Record\n+            | Tok_Renames\n+            | Tok_Reverse\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token) - 1));\n \n-         when Tok_Tagged | Tok_Then | Tok_Less_Less | Tok_Abort | Tok_Accept |\n-              Tok_Case | Tok_Delay | Tok_Else | Tok_Elsif | Tok_End |\n-              Tok_Exception | Tok_Exit | Tok_Goto | Tok_If | Tok_Pragma |\n-              Tok_Raise | Tok_Requeue | Tok_Return | Tok_Select |\n-              Tok_Terminate | Tok_Until | Tok_When | Tok_Begin | Tok_Declare |\n-              Tok_For | Tok_Loop | Tok_While | Tok_Entry | Tok_Protected |\n-              Tok_Task | Tok_Type | Tok_Subtype =>\n-\n+         when Tok_Abort\n+            | Tok_Accept\n+            | Tok_Begin\n+            | Tok_Case\n+            | Tok_Declare\n+            | Tok_Delay\n+            | Tok_Else\n+            | Tok_Elsif\n+            | Tok_End\n+            | Tok_Entry\n+            | Tok_Exception\n+            | Tok_Exit\n+            | Tok_For\n+            | Tok_Goto\n+            | Tok_If\n+            | Tok_Less_Less\n+            | Tok_Loop\n+            | Tok_Pragma\n+            | Tok_Protected\n+            | Tok_Raise\n+            | Tok_Requeue\n+            | Tok_Return\n+            | Tok_Select\n+            | Tok_Subtype\n+            | Tok_Tagged\n+            | Tok_Task\n+            | Tok_Terminate\n+            | Tok_Then\n+            | Tok_Type\n+            | Tok_Until\n+            | Tok_When\n+            | Tok_While\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token) - 2));\n \n-         when Tok_Use | Tok_Function | Tok_Generic |\n-              Tok_Package | Tok_Procedure | Tok_Private | Tok_With |\n-              Tok_Separate | Tok_EOF | Tok_Semicolon | Tok_Arrow |\n-              Tok_Vertical_Bar | Tok_Dot_Dot | Tok_Project | Tok_Extends |\n-              Tok_External | Tok_External_As_List | Tok_Comment |\n-              Tok_End_Of_Line | Tok_Special | Tok_SPARK_Hide | No_Token =>\n-\n+         when No_Token\n+            | Tok_Arrow\n+            | Tok_Comment\n+            | Tok_Dot_Dot\n+            | Tok_End_Of_Line\n+            | Tok_EOF\n+            | Tok_Extends\n+            | Tok_External\n+            | Tok_External_As_List\n+            | Tok_Function\n+            | Tok_Generic\n+            | Tok_Package\n+            | Tok_Private\n+            | Tok_Procedure\n+            | Tok_Project\n+            | Tok_Semicolon\n+            | Tok_Separate\n+            | Tok_SPARK_Hide\n+            | Tok_Special\n+            | Tok_Use\n+            | Tok_Vertical_Bar\n+            | Tok_With\n+         =>\n             System.CRC32.Update\n               (System.CRC32.CRC32 (Checksum),\n                Character'Val (Token_Type'Pos (Token) - 4));\n@@ -2217,9 +2391,32 @@ package body Scng is\n \n          --  Invalid control characters\n \n-         when NUL | SOH | STX | ETX | EOT | ENQ | ACK | BEL | BS  | ASCII.SO |\n-              SI  | DLE | DC1 | DC2 | DC3 | DC4 | NAK | SYN | ETB | CAN |\n-              EM  | FS  | GS  | RS  | US  | DEL\n+         when ACK\n+            | ASCII.SO\n+            | BEL\n+            | BS\n+            | CAN\n+            | DC1\n+            | DC2\n+            | DC3\n+            | DC4\n+            | DEL\n+            | DLE\n+            | EM\n+            | ENQ\n+            | EOT\n+            | ETB\n+            | ETX\n+            | FS\n+            | GS\n+            | NAK\n+            | NUL\n+            | RS\n+            | SI\n+            | SOH\n+            | STX\n+            | SYN\n+            | US\n          =>\n             Error_Illegal_Character;\n \n@@ -2322,7 +2519,6 @@ package body Scng is\n       --  initial character of a wide character sequence.\n \n       <<Scan_Wide_Character>>\n-\n          declare\n             Code : Char_Code;\n             Cat  : Category;"}, {"sha": "f06f68457481bcb3154236d1f1de4c6c43c46942", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 77, "deletions": 75, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -643,9 +643,10 @@ package body Sem is\n          --  the call to analyze them is generated when the full list is\n          --  analyzed.\n \n-         when N_SCIL_Dispatch_Table_Tag_Init |\n-              N_SCIL_Dispatching_Call        |\n-              N_SCIL_Membership_Test         =>\n+         when N_SCIL_Dispatch_Table_Tag_Init\n+            | N_SCIL_Dispatching_Call\n+            | N_SCIL_Membership_Test\n+         =>\n             null;\n \n          --  For the remaining node types, we generate compiler abort, because\n@@ -655,64 +656,65 @@ package body Sem is\n          --  node appears only in the context of a type declaration, and is\n          --  processed by the analyze routine for type declarations.\n \n-         when N_Abortable_Part                         |\n-              N_Access_Definition                      |\n-              N_Access_Function_Definition             |\n-              N_Access_Procedure_Definition            |\n-              N_Access_To_Object_Definition            |\n-              N_Aspect_Specification                   |\n-              N_Case_Expression_Alternative            |\n-              N_Case_Statement_Alternative             |\n-              N_Compilation_Unit_Aux                   |\n-              N_Component_Association                  |\n-              N_Component_Clause                       |\n-              N_Component_Definition                   |\n-              N_Component_List                         |\n-              N_Constrained_Array_Definition           |\n-              N_Contract                               |\n-              N_Decimal_Fixed_Point_Definition         |\n-              N_Defining_Character_Literal             |\n-              N_Defining_Identifier                    |\n-              N_Defining_Operator_Symbol               |\n-              N_Defining_Program_Unit_Name             |\n-              N_Delta_Constraint                       |\n-              N_Derived_Type_Definition                |\n-              N_Designator                             |\n-              N_Digits_Constraint                      |\n-              N_Discriminant_Association               |\n-              N_Discriminant_Specification             |\n-              N_Elsif_Part                             |\n-              N_Entry_Call_Statement                   |\n-              N_Enumeration_Type_Definition            |\n-              N_Exception_Handler                      |\n-              N_Floating_Point_Definition              |\n-              N_Formal_Decimal_Fixed_Point_Definition  |\n-              N_Formal_Derived_Type_Definition         |\n-              N_Formal_Discrete_Type_Definition        |\n-              N_Formal_Floating_Point_Definition       |\n-              N_Formal_Modular_Type_Definition         |\n-              N_Formal_Ordinary_Fixed_Point_Definition |\n-              N_Formal_Private_Type_Definition         |\n-              N_Formal_Incomplete_Type_Definition      |\n-              N_Formal_Signed_Integer_Type_Definition  |\n-              N_Function_Specification                 |\n-              N_Generic_Association                    |\n-              N_Index_Or_Discriminant_Constraint       |\n-              N_Iterated_Component_Association         |\n-              N_Iteration_Scheme                       |\n-              N_Mod_Clause                             |\n-              N_Modular_Type_Definition                |\n-              N_Ordinary_Fixed_Point_Definition        |\n-              N_Parameter_Specification                |\n-              N_Pragma_Argument_Association            |\n-              N_Procedure_Specification                |\n-              N_Real_Range_Specification               |\n-              N_Record_Definition                      |\n-              N_Signed_Integer_Type_Definition         |\n-              N_Unconstrained_Array_Definition         |\n-              N_Unused_At_Start                        |\n-              N_Unused_At_End                          |\n-              N_Variant                                =>\n+         when N_Abortable_Part\n+            | N_Access_Definition\n+            | N_Access_Function_Definition\n+            | N_Access_Procedure_Definition\n+            | N_Access_To_Object_Definition\n+            | N_Aspect_Specification\n+            | N_Case_Expression_Alternative\n+            | N_Case_Statement_Alternative\n+            | N_Compilation_Unit_Aux\n+            | N_Component_Association\n+            | N_Component_Clause\n+            | N_Component_Definition\n+            | N_Component_List\n+            | N_Constrained_Array_Definition\n+            | N_Contract\n+            | N_Decimal_Fixed_Point_Definition\n+            | N_Defining_Character_Literal\n+            | N_Defining_Identifier\n+            | N_Defining_Operator_Symbol\n+            | N_Defining_Program_Unit_Name\n+            | N_Delta_Constraint\n+            | N_Derived_Type_Definition\n+            | N_Designator\n+            | N_Digits_Constraint\n+            | N_Discriminant_Association\n+            | N_Discriminant_Specification\n+            | N_Elsif_Part\n+            | N_Entry_Call_Statement\n+            | N_Enumeration_Type_Definition\n+            | N_Exception_Handler\n+            | N_Floating_Point_Definition\n+            | N_Formal_Decimal_Fixed_Point_Definition\n+            | N_Formal_Derived_Type_Definition\n+            | N_Formal_Discrete_Type_Definition\n+            | N_Formal_Floating_Point_Definition\n+            | N_Formal_Modular_Type_Definition\n+            | N_Formal_Ordinary_Fixed_Point_Definition\n+            | N_Formal_Private_Type_Definition\n+            | N_Formal_Incomplete_Type_Definition\n+            | N_Formal_Signed_Integer_Type_Definition\n+            | N_Function_Specification\n+            | N_Generic_Association\n+            | N_Index_Or_Discriminant_Constraint\n+            | N_Iterated_Component_Association\n+            | N_Iteration_Scheme\n+            | N_Mod_Clause\n+            | N_Modular_Type_Definition\n+            | N_Ordinary_Fixed_Point_Definition\n+            | N_Parameter_Specification\n+            | N_Pragma_Argument_Association\n+            | N_Procedure_Specification\n+            | N_Real_Range_Specification\n+            | N_Record_Definition\n+            | N_Signed_Integer_Type_Definition\n+            | N_Unconstrained_Array_Definition\n+            | N_Unused_At_End\n+            | N_Unused_At_Start\n+            | N_Variant\n+         =>\n             raise Program_Error;\n       end case;\n \n@@ -1745,16 +1747,16 @@ package body Sem is\n          pragma Assert (No (CU) or else Nkind (CU) = N_Compilation_Unit);\n \n          case Nkind (Item) is\n-            when N_Generic_Subprogram_Declaration        |\n-                 N_Generic_Package_Declaration           |\n-                 N_Package_Declaration                   |\n-                 N_Subprogram_Declaration                |\n-                 N_Subprogram_Renaming_Declaration       |\n-                 N_Package_Renaming_Declaration          |\n-                 N_Generic_Function_Renaming_Declaration |\n-                 N_Generic_Package_Renaming_Declaration  |\n-                 N_Generic_Procedure_Renaming_Declaration =>\n-\n+            when N_Generic_Function_Renaming_Declaration\n+               | N_Generic_Package_Declaration\n+               | N_Generic_Package_Renaming_Declaration\n+               | N_Generic_Procedure_Renaming_Declaration\n+               | N_Generic_Subprogram_Declaration\n+               | N_Package_Declaration\n+               | N_Package_Renaming_Declaration\n+               | N_Subprogram_Declaration\n+               | N_Subprogram_Renaming_Declaration\n+            =>\n                --  Specs are OK\n \n                null;\n@@ -1774,10 +1776,10 @@ package body Sem is\n                                or else CU = Cunit (Main_Unit));\n                null;\n \n-            when N_Function_Instantiation  |\n-                 N_Procedure_Instantiation |\n-                 N_Package_Instantiation   =>\n-\n+            when N_Function_Instantiation\n+               | N_Package_Instantiation\n+               | N_Procedure_Instantiation\n+            =>\n                --  Can only happen if some generic body (needed for gnat2scil\n                --  traversal, but not by GNAT) is not available, ignore.\n "}, {"sha": "8630554d98885fb6f5b7f7e7cdb93a37941b871c", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -4738,8 +4738,9 @@ package body Sem_Aggr is\n          when E_Array_Type  =>\n             Comp_Typ := Component_Type (Typ);\n \n-         when E_Component    |\n-              E_Discriminant =>\n+         when E_Component\n+            | E_Discriminant\n+         =>\n             Comp_Typ := Etype (Typ);\n \n          when others =>"}, {"sha": "5c244eed70b3dcb4808ce2230ced97f103cdb5ec", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 466, "deletions": 465, "changes": 931, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2946,12 +2946,13 @@ package body Sem_Attr is\n       --  Attributes related to Ada 2012 iterators. Attribute specifications\n       --  exist for these, but they cannot be queried.\n \n-      when Attribute_Constant_Indexing    |\n-           Attribute_Default_Iterator     |\n-           Attribute_Implicit_Dereference |\n-           Attribute_Iterator_Element     |\n-           Attribute_Iterable             |\n-           Attribute_Variable_Indexing    =>\n+      when Attribute_Constant_Indexing\n+         | Attribute_Default_Iterator\n+         | Attribute_Implicit_Dereference\n+         | Attribute_Iterator_Element\n+         | Attribute_Iterable\n+         | Attribute_Variable_Indexing\n+      =>\n          Error_Msg_N (\"illegal attribute\", N);\n \n       --  Internal attributes used to deal with Ada 2012 delayed aspects. These\n@@ -3122,8 +3123,7 @@ package body Sem_Attr is\n       -- Bit --\n       ---------\n \n-      when Attribute_Bit => Bit :\n-      begin\n+      when Attribute_Bit =>\n          Check_E0;\n \n          if not Is_Object_Reference (P) then\n@@ -3136,14 +3136,12 @@ package body Sem_Attr is\n          end if;\n \n          Set_Etype (N, Universal_Integer);\n-      end Bit;\n \n       ---------------\n       -- Bit_Order --\n       ---------------\n \n-      when Attribute_Bit_Order => Bit_Order :\n-      begin\n+      when Attribute_Bit_Order =>\n          Check_E0;\n          Check_Type;\n \n@@ -3165,7 +3163,6 @@ package body Sem_Attr is\n          --  Reset incorrect indication of staticness\n \n          Set_Is_Static_Expression (N, False);\n-      end Bit_Order;\n \n       ------------------\n       -- Bit_Position --\n@@ -3357,8 +3354,8 @@ package body Sem_Attr is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"constrained for private type is an \" &\n-                  \"obsolescent feature (RM J.4)?j?\", N);\n+                 (\"constrained for private type is an obsolescent feature \"\n+                  & \"(RM J.4)?j?\", N);\n             end if;\n \n             --  If we are within an instance, the attribute must be legal\n@@ -3450,8 +3447,7 @@ package body Sem_Attr is\n       -- Count --\n       -----------\n \n-      when Attribute_Count => Count :\n-      declare\n+      when Attribute_Count => Count : declare\n          Ent : Entity_Id;\n          S   : Entity_Id;\n          Tsk : Entity_Id;\n@@ -3525,8 +3521,10 @@ package body Sem_Attr is\n                exit;\n \n             elsif Ekind (Scope (Ent)) in Task_Kind\n-              and then\n-                not Ekind_In (S, E_Loop, E_Block, E_Entry, E_Entry_Family)\n+              and then not Ekind_In (S, E_Block,\n+                                        E_Entry,\n+                                        E_Entry_Family,\n+                                        E_Loop)\n             then\n                Error_Attr (\"Attribute % cannot appear in inner unit\", N);\n \n@@ -3692,10 +3690,10 @@ package body Sem_Attr is\n \n       --  Also handles processing for Elab_Spec and Elab_Subp_Body\n \n-      when Attribute_Elab_Body      |\n-           Attribute_Elab_Spec      |\n-           Attribute_Elab_Subp_Body =>\n-\n+      when Attribute_Elab_Body\n+         | Attribute_Elab_Spec\n+         | Attribute_Elab_Subp_Body\n+      =>\n          Check_E0;\n          Check_Unit_Name (P);\n          Set_Etype (N, Standard_Void_Type);\n@@ -3755,8 +3753,7 @@ package body Sem_Attr is\n       -- Enum_Rep --\n       --------------\n \n-      when Attribute_Enum_Rep => Enum_Rep : declare\n-      begin\n+      when Attribute_Enum_Rep =>\n          if Present (E1) then\n             Check_E1;\n             Check_Discrete_Type;\n@@ -3767,13 +3764,12 @@ package body Sem_Attr is\n          end if;\n \n          Set_Etype (N, Universal_Integer);\n-      end Enum_Rep;\n \n       --------------\n       -- Enum_Val --\n       --------------\n \n-      when Attribute_Enum_Val => Enum_Val : begin\n+      when Attribute_Enum_Val =>\n          Check_E1;\n          Check_Type;\n \n@@ -3799,7 +3795,6 @@ package body Sem_Attr is\n             Resolve (E1, Any_Integer);\n             Set_Etype (N, P_Base_Type);\n          end if;\n-      end Enum_Val;\n \n       -------------\n       -- Epsilon --\n@@ -4013,8 +4008,8 @@ package body Sem_Attr is\n          else\n             if Ada_Version >= Ada_2005 then\n                Error_Attr_P\n-                 (\"prefix of % attribute must be an exception, a \" &\n-                  \"task or a task interface class-wide object\");\n+                 (\"prefix of % attribute must be an exception, a task or a \"\n+                  & \"task interface class-wide object\");\n             else\n                Error_Attr_P\n                  (\"prefix of % attribute must be a task or an exception\");\n@@ -4025,7 +4020,7 @@ package body Sem_Attr is\n       -- Image --\n       -----------\n \n-      when Attribute_Image => Image : begin\n+      when Attribute_Image =>\n          Check_SPARK_05_Restriction_On_Attribute;\n \n          --  AI12-00124-1 : The ARG has adopted the GNAT semantics of 'Img\n@@ -4077,14 +4072,12 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Image;\n \n       ---------\n       -- Img --\n       ---------\n \n-      when Attribute_Img => Img :\n-      begin\n+      when Attribute_Img =>\n          Check_E0;\n          Set_Etype (N, Standard_String);\n \n@@ -4104,7 +4097,6 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Img;\n \n       -----------\n       -- Input --\n@@ -5100,8 +5092,7 @@ package body Sem_Attr is\n       -- Partition_ID --\n       ------------------\n \n-      when Attribute_Partition_ID => Partition_Id :\n-      begin\n+      when Attribute_Partition_ID =>\n          Check_E0;\n \n          if P_Type /= Any_Type then\n@@ -5120,7 +5111,6 @@ package body Sem_Attr is\n          end if;\n \n          Set_Etype (N, Universal_Integer);\n-      end Partition_Id;\n \n       -------------------------\n       -- Passed_By_Reference --\n@@ -5680,8 +5670,7 @@ package body Sem_Attr is\n       -- Scalar_Storage_Order --\n       --------------------------\n \n-      when Attribute_Scalar_Storage_Order => Scalar_Storage_Order :\n-      declare\n+      when Attribute_Scalar_Storage_Order => Scalar_Storage_Order : declare\n          Ent : Entity_Id := Empty;\n \n       begin\n@@ -5757,8 +5746,9 @@ package body Sem_Attr is\n       -- Size --\n       ----------\n \n-      when Attribute_Size | Attribute_VADS_Size => Size :\n-      begin\n+      when Attribute_Size\n+         | Attribute_VADS_Size\n+      =>\n          Check_E0;\n \n          --  If prefix is parameterless function call, rewrite and resolve\n@@ -5821,7 +5811,6 @@ package body Sem_Attr is\n             Rewrite (N, Make_Integer_Literal (Sloc (N), Esize (Entity (P))));\n             Analyze (N);\n          end if;\n-      end Size;\n \n       -----------\n       -- Small --\n@@ -5836,9 +5825,9 @@ package body Sem_Attr is\n       -- Storage_Pool --\n       ------------------\n \n-      when Attribute_Storage_Pool        |\n-           Attribute_Simple_Storage_Pool => Storage_Pool :\n-      begin\n+      when Attribute_Storage_Pool\n+         | Attribute_Simple_Storage_Pool\n+      =>\n          Check_E0;\n \n          if Is_Access_Type (P_Type) then\n@@ -5861,8 +5850,9 @@ package body Sem_Attr is\n                then\n                   Error_Msg_Name_1 := Aname;\n                      Error_Msg_Warn := SPARK_Mode /= On;\n-                  Error_Msg_N (\"cannot use % attribute for type with simple \"\n-                               & \"storage pool<<\", N);\n+                  Error_Msg_N\n+                    (\"cannot use % attribute for type with simple storage \"\n+                     & \"pool<<\", N);\n                   Error_Msg_N (\"\\Program_Error [<<\", N);\n \n                   Rewrite\n@@ -5897,14 +5887,12 @@ package body Sem_Attr is\n          else\n             Error_Attr_P (\"prefix of % attribute must be access type\");\n          end if;\n-      end Storage_Pool;\n \n       ------------------\n       -- Storage_Size --\n       ------------------\n \n-      when Attribute_Storage_Size => Storage_Size :\n-      begin\n+      when Attribute_Storage_Size =>\n          Check_E0;\n \n          if Is_Task_Type (P_Type) then\n@@ -5943,7 +5931,6 @@ package body Sem_Attr is\n          else\n             Error_Attr_P (\"prefix of % attribute must be access or task type\");\n          end if;\n-      end Storage_Size;\n \n       ------------------\n       -- Storage_Unit --\n@@ -6052,8 +6039,7 @@ package body Sem_Attr is\n       -- Tag --\n       ---------\n \n-      when Attribute_Tag => Tag :\n-      begin\n+      when Attribute_Tag =>\n          Check_E0;\n          Check_Dereference;\n \n@@ -6083,7 +6069,6 @@ package body Sem_Attr is\n          --  Set appropriate type\n \n          Set_Etype (N, RTE (RE_Tag));\n-      end Tag;\n \n       -----------------\n       -- Target_Name --\n@@ -6401,8 +6386,7 @@ package body Sem_Attr is\n       --  the literal as it appeared in the source program with a possible\n       --  leading minus sign.\n \n-      when Attribute_Universal_Literal_String => Universal_Literal_String :\n-      begin\n+      when Attribute_Universal_Literal_String =>\n          Check_E0;\n \n          if not Is_Entity_Name (P)\n@@ -6456,7 +6440,6 @@ package body Sem_Attr is\n                Set_Is_Static_Expression (N, True);\n             end;\n          end if;\n-      end Universal_Literal_String;\n \n       -------------------------\n       -- Unrestricted_Access --\n@@ -6809,8 +6792,7 @@ package body Sem_Attr is\n       -- Val --\n       ---------\n \n-      when Attribute_Val => Val : declare\n-      begin\n+      when Attribute_Val =>\n          Check_E1;\n          Check_Discrete_Type;\n \n@@ -6821,13 +6803,12 @@ package body Sem_Attr is\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n-         Resolve (E1, Any_Integer);\n-         Set_Etype (N, P_Base_Type);\n-\n          --  Note, we need a range check in general, but we wait for the\n          --  Resolve call to do this, since we want to let Eval_Attribute\n          --  have a chance to find an static illegality first.\n-      end Val;\n+\n+         Resolve (E1, Any_Integer);\n+         Set_Etype (N, P_Base_Type);\n \n       -----------\n       -- Valid --\n@@ -6894,8 +6875,7 @@ package body Sem_Attr is\n       -- Value --\n       -----------\n \n-      when Attribute_Value => Value :\n-      begin\n+      when Attribute_Value =>\n          Check_SPARK_05_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n@@ -6941,7 +6921,6 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Value;\n \n       ----------------\n       -- Value_Size --\n@@ -6973,8 +6952,7 @@ package body Sem_Attr is\n       -- Wide_Image --\n       ----------------\n \n-      when Attribute_Wide_Image => Wide_Image :\n-      begin\n+      when Attribute_Wide_Image =>\n          Check_SPARK_05_Restriction_On_Attribute;\n          Check_Scalar_Type;\n          Set_Etype (N, Standard_Wide_String);\n@@ -6989,14 +6967,12 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Wide_Image;\n \n       ---------------------\n       -- Wide_Wide_Image --\n       ---------------------\n \n-      when Attribute_Wide_Wide_Image => Wide_Wide_Image :\n-      begin\n+      when Attribute_Wide_Wide_Image =>\n          Check_Scalar_Type;\n          Set_Etype (N, Standard_Wide_Wide_String);\n          Check_E1;\n@@ -7010,14 +6986,12 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Wide_Wide_Image;\n \n       ----------------\n       -- Wide_Value --\n       ----------------\n \n-      when Attribute_Wide_Value => Wide_Value :\n-      begin\n+      when Attribute_Wide_Value =>\n          Check_SPARK_05_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n@@ -7035,14 +7009,12 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Wide_Value;\n \n       ---------------------\n       -- Wide_Wide_Value --\n       ---------------------\n \n-      when Attribute_Wide_Wide_Value => Wide_Wide_Value :\n-      begin\n+      when Attribute_Wide_Wide_Value =>\n          Check_E1;\n          Check_Scalar_Type;\n \n@@ -7059,7 +7031,6 @@ package body Sem_Attr is\n          then\n             Check_Restriction (No_Fixed_IO, P);\n          end if;\n-      end Wide_Wide_Value;\n \n       ---------------------\n       -- Wide_Wide_Width --\n@@ -7119,10 +7090,11 @@ package body Sem_Attr is\n \n          begin\n             case Attr_Id is\n-               when Attribute_Callable   |\n-                    Attribute_Caller     |\n-                    Attribute_Count      |\n-                    Attribute_Terminated =>\n+               when Attribute_Callable\n+                  | Attribute_Caller\n+                  | Attribute_Count\n+                  | Attribute_Terminated\n+               =>\n                   Unused := RTE (RE_Tasking_State);\n \n                when others =>\n@@ -8187,12 +8159,14 @@ package body Sem_Attr is\n \n       --  Attributes related to Ada 2012 iterators (placeholder ???)\n \n-      when Attribute_Constant_Indexing    |\n-           Attribute_Default_Iterator     |\n-           Attribute_Implicit_Dereference |\n-           Attribute_Iterator_Element     |\n-           Attribute_Iterable             |\n-           Attribute_Variable_Indexing    => null;\n+      when Attribute_Constant_Indexing\n+         | Attribute_Default_Iterator\n+         | Attribute_Implicit_Dereference\n+         | Attribute_Iterator_Element\n+         | Attribute_Iterable\n+         | Attribute_Variable_Indexing\n+      =>\n+         null;\n \n       --  Internal attributes used to deal with Ada 2012 delayed aspects.\n       --  These were already rejected by the parser. Thus they shouldn't\n@@ -8488,8 +8462,7 @@ package body Sem_Attr is\n       -- First --\n       -----------\n \n-      when Attribute_First => First_Attr :\n-      begin\n+      when Attribute_First =>\n          Set_Bounds;\n \n          if Compile_Time_Known_Value (Lo_Bound) then\n@@ -8502,14 +8475,12 @@ package body Sem_Attr is\n          else\n             Check_Concurrent_Discriminant (Lo_Bound);\n          end if;\n-      end First_Attr;\n \n       -----------------\n       -- First_Valid --\n       -----------------\n \n-      when Attribute_First_Valid => First_Valid :\n-      begin\n+      when Attribute_First_Valid =>\n          if Has_Predicates (P_Type)\n            and then Has_Static_Predicate (P_Type)\n          then\n@@ -8528,7 +8499,6 @@ package body Sem_Attr is\n             Set_Bounds;\n             Fold_Uint (N, Expr_Value (Lo_Bound), Static);\n          end if;\n-      end First_Valid;\n \n       -----------------\n       -- Fixed_Value --\n@@ -8721,8 +8691,7 @@ package body Sem_Attr is\n       -- Last --\n       ----------\n \n-      when Attribute_Last => Last_Attr :\n-      begin\n+      when Attribute_Last =>\n          Set_Bounds;\n \n          if Compile_Time_Known_Value (Hi_Bound) then\n@@ -8735,14 +8704,12 @@ package body Sem_Attr is\n          else\n             Check_Concurrent_Discriminant (Hi_Bound);\n          end if;\n-      end Last_Attr;\n \n       ----------------\n       -- Last_Valid --\n       ----------------\n \n-      when Attribute_Last_Valid => Last_Valid :\n-      begin\n+      when Attribute_Last_Valid =>\n          if Has_Predicates (P_Type)\n            and then Has_Static_Predicate (P_Type)\n          then\n@@ -8761,7 +8728,6 @@ package body Sem_Attr is\n             Set_Bounds;\n             Fold_Uint (N, Expr_Value (Hi_Bound), Static);\n          end if;\n-      end Last_Valid;\n \n       ------------------\n       -- Leading_Part --\n@@ -9055,15 +9021,13 @@ package body Sem_Attr is\n       -- Max --\n       ---------\n \n-      when Attribute_Max => Max :\n-      begin\n+      when Attribute_Max =>\n          if Is_Real_Type (P_Type) then\n             Fold_Ureal\n               (N, UR_Max (Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n          else\n             Fold_Uint (N, UI_Max (Expr_Value (E1), Expr_Value (E2)), Static);\n          end if;\n-      end Max;\n \n       ----------------------------------\n       -- Max_Alignment_For_Allocation --\n@@ -9075,18 +9039,17 @@ package body Sem_Attr is\n       --  and the alignment of the dope. Also, if the alignment is unknown, we\n       --  use the max (it's OK to be pessimistic).\n \n-      when Attribute_Max_Alignment_For_Allocation =>\n-         declare\n-            A : Uint := UI_From_Int (Ttypes.Maximum_Alignment);\n-         begin\n-            if Known_Alignment (P_Type) and then\n-              (not Is_Array_Type (P_Type) or else Alignment (P_Type) > A)\n-            then\n-               A := Alignment (P_Type);\n-            end if;\n+      when Attribute_Max_Alignment_For_Allocation => Max_Align : declare\n+         A : Uint := UI_From_Int (Ttypes.Maximum_Alignment);\n+      begin\n+         if Known_Alignment (P_Type)\n+           and then (not Is_Array_Type (P_Type) or else Alignment (P_Type) > A)\n+         then\n+            A := Alignment (P_Type);\n+         end if;\n \n             Fold_Uint (N, A, Static);\n-         end;\n+      end Max_Align;\n \n       ----------------------------------\n       -- Max_Size_In_Storage_Elements --\n@@ -9108,45 +9071,43 @@ package body Sem_Attr is\n       -- Mechanism_Code --\n       --------------------\n \n-      when Attribute_Mechanism_Code =>\n-         declare\n-            Val    : Int;\n-            Formal : Entity_Id;\n-            Mech   : Mechanism_Type;\n+      when Attribute_Mechanism_Code => Mechanism_Code : declare\n+         Formal : Entity_Id;\n+         Mech   : Mechanism_Type;\n+         Val    : Int;\n \n-         begin\n-            if No (E1) then\n-               Mech := Mechanism (P_Entity);\n+      begin\n+         if No (E1) then\n+            Mech := Mechanism (P_Entity);\n \n-            else\n-               Val := UI_To_Int (Expr_Value (E1));\n+         else\n+            Val := UI_To_Int (Expr_Value (E1));\n \n-               Formal := First_Formal (P_Entity);\n-               for J in 1 .. Val - 1 loop\n-                  Next_Formal (Formal);\n-               end loop;\n-               Mech := Mechanism (Formal);\n-            end if;\n+            Formal := First_Formal (P_Entity);\n+            for J in 1 .. Val - 1 loop\n+               Next_Formal (Formal);\n+            end loop;\n \n-            if Mech < 0 then\n-               Fold_Uint (N, UI_From_Int (Int (-Mech)), Static);\n-            end if;\n-         end;\n+            Mech := Mechanism (Formal);\n+         end if;\n+\n+         if Mech < 0 then\n+            Fold_Uint (N, UI_From_Int (Int (-Mech)), Static);\n+         end if;\n+      end Mechanism_Code;\n \n       ---------\n       -- Min --\n       ---------\n \n-      when Attribute_Min => Min :\n-      begin\n+      when Attribute_Min =>\n          if Is_Real_Type (P_Type) then\n             Fold_Ureal\n               (N, UR_Min (Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n          else\n             Fold_Uint\n               (N, UI_Min (Expr_Value (E1), Expr_Value (E2)), Static);\n          end if;\n-      end Min;\n \n       ---------\n       -- Mod --\n@@ -9253,8 +9214,8 @@ package body Sem_Attr is\n       -- Pred --\n       ----------\n \n-      when Attribute_Pred => Pred :\n-      begin\n+      when Attribute_Pred =>\n+\n          --  Floating-point case\n \n          if Is_Floating_Point_Type (P_Type) then\n@@ -9293,7 +9254,6 @@ package body Sem_Attr is\n \n             Fold_Uint (N, Expr_Value (E1) - 1, Static);\n          end if;\n-      end Pred;\n \n       -----------\n       -- Range --\n@@ -9309,7 +9269,10 @@ package body Sem_Attr is\n       -- Range_Length --\n       ------------------\n \n-      when Attribute_Range_Length =>\n+      when Attribute_Range_Length => Range_Length : declare\n+         Diff : aliased Uint;\n+\n+      begin\n          Set_Bounds;\n \n          --  Can fold if both bounds are compile time known\n@@ -9326,29 +9289,24 @@ package body Sem_Attr is\n          --  One more case is where Hi_Bound and Lo_Bound are compile-time\n          --  comparable, and we can figure out the difference between them.\n \n-         declare\n-            Diff : aliased Uint;\n-\n-         begin\n-            case\n-              Compile_Time_Compare\n+         case Compile_Time_Compare\n                 (Lo_Bound, Hi_Bound, Diff'Access, Assume_Valid => False)\n-            is\n-               when EQ =>\n-                  Fold_Uint (N, Uint_1, Static);\n+         is\n+            when EQ =>\n+               Fold_Uint (N, Uint_1, Static);\n \n-               when GT =>\n-                  Fold_Uint (N, Uint_0, Static);\n+            when GT =>\n+               Fold_Uint (N, Uint_0, Static);\n \n-               when LT =>\n-                  if Diff /= No_Uint then\n-                     Fold_Uint (N, Diff + 1, Static);\n-                  end if;\n+            when LT =>\n+               if Diff /= No_Uint then\n+                  Fold_Uint (N, Diff + 1, Static);\n+               end if;\n \n-               when others =>\n-                  null;\n-            end case;\n-         end;\n+            when others =>\n+               null;\n+         end case;\n+      end Range_Length;\n \n       ---------\n       -- Ref --\n@@ -9383,18 +9341,15 @@ package body Sem_Attr is\n       -- Restriction --\n       -----------------\n \n-      when Attribute_Restriction_Set => Restriction_Set : declare\n-      begin\n+      when Attribute_Restriction_Set =>\n          Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n          Set_Is_Static_Expression (N);\n-      end Restriction_Set;\n \n       -----------\n       -- Round --\n       -----------\n \n-      when Attribute_Round => Round :\n-      declare\n+      when Attribute_Round => Round : declare\n          Sr : Ureal;\n          Si : Uint;\n \n@@ -9508,53 +9463,57 @@ package body Sem_Attr is\n       --  one of the places where it is annoying that a size of zero means two\n       --  things (zero size for scalars, unspecified size for non-scalars).\n \n-      when Attribute_Size | Attribute_VADS_Size => Size : declare\n-         P_TypeA : constant Entity_Id := Underlying_Type (P_Type);\n-\n-      begin\n-         if Is_Scalar_Type (P_TypeA) or else RM_Size (P_TypeA) /= Uint_0 then\n+      when Attribute_Size\n+         | Attribute_VADS_Size\n+      =>\n+         Size : declare\n+            P_TypeA : constant Entity_Id := Underlying_Type (P_Type);\n \n-            --  VADS_Size case\n+         begin\n+            if Is_Scalar_Type (P_TypeA)\n+              or else RM_Size (P_TypeA) /= Uint_0\n+            then\n+               --  VADS_Size case\n \n-            if Id = Attribute_VADS_Size or else Use_VADS_Size then\n-               declare\n-                  S : constant Node_Id := Size_Clause (P_TypeA);\n+               if Id = Attribute_VADS_Size or else Use_VADS_Size then\n+                  declare\n+                     S : constant Node_Id := Size_Clause (P_TypeA);\n \n-               begin\n-                  --  If a size clause applies, then use the size from it.\n-                  --  This is one of the rare cases where we can use the\n-                  --  Size_Clause field for a subtype when Has_Size_Clause\n-                  --  is False. Consider:\n+                  begin\n+                     --  If a size clause applies, then use the size from it.\n+                     --  This is one of the rare cases where we can use the\n+                     --  Size_Clause field for a subtype when Has_Size_Clause\n+                     --  is False. Consider:\n \n-                  --    type x is range 1 .. 64;\n-                  --    for x'size use 12;\n-                  --    subtype y is x range 0 .. 3;\n+                     --    type x is range 1 .. 64;\n+                     --    for x'size use 12;\n+                     --    subtype y is x range 0 .. 3;\n \n-                  --  Here y has a size clause inherited from x, but normally\n-                  --  it does not apply, and y'size is 2. However, y'VADS_Size\n-                  --  is indeed 12 and not 2.\n+                     --  Here y has a size clause inherited from x, but\n+                     --  normally it does not apply, and y'size is 2. However,\n+                     --  y'VADS_Size is indeed 12 and not 2.\n \n-                  if Present (S)\n-                    and then Is_OK_Static_Expression (Expression (S))\n-                  then\n-                     Fold_Uint (N, Expr_Value (Expression (S)), Static);\n+                     if Present (S)\n+                       and then Is_OK_Static_Expression (Expression (S))\n+                     then\n+                        Fold_Uint (N, Expr_Value (Expression (S)), Static);\n \n-                  --  If no size is specified, then we simply use the object\n-                  --  size in the VADS_Size case (e.g. Natural'Size is equal\n-                  --  to Integer'Size, not one less).\n+                     --  If no size is specified, then we simply use the object\n+                     --  size in the VADS_Size case (e.g. Natural'Size is equal\n+                     --  to Integer'Size, not one less).\n \n-                  else\n-                     Fold_Uint (N, Esize (P_TypeA), Static);\n-                  end if;\n-               end;\n+                     else\n+                        Fold_Uint (N, Esize (P_TypeA), Static);\n+                     end if;\n+                  end;\n \n-            --  Normal case (Size) in which case we want the RM_Size\n+               --  Normal case (Size) in which case we want the RM_Size\n \n-            else\n-               Fold_Uint (N, RM_Size (P_TypeA), Static);\n+               else\n+                  Fold_Uint (N, RM_Size (P_TypeA), Static);\n+               end if;\n             end if;\n-         end if;\n-      end Size;\n+         end Size;\n \n       -----------\n       -- Small --\n@@ -9596,8 +9555,7 @@ package body Sem_Attr is\n       -- Succ --\n       ----------\n \n-      when Attribute_Succ => Succ :\n-      begin\n+      when Attribute_Succ =>\n          --  Floating-point case\n \n          if Is_Floating_Point_Type (P_Type) then\n@@ -9635,7 +9593,6 @@ package body Sem_Attr is\n                Fold_Uint (N, Expr_Value (E1) + 1, Static);\n             end if;\n          end if;\n-      end Succ;\n \n       ----------------\n       -- Truncation --\n@@ -9750,8 +9707,7 @@ package body Sem_Attr is\n       -- Val --\n       ---------\n \n-      when Attribute_Val => Val :\n-      begin\n+      when Attribute_Val =>\n          if  Expr_Value (E1) < Expr_Value (Type_Low_Bound (P_Base_Type))\n            or else\n              Expr_Value (E1) > Expr_Value (Type_High_Bound (P_Base_Type))\n@@ -9767,7 +9723,6 @@ package body Sem_Attr is\n          else\n             Fold_Uint (N, Expr_Value (E1), Static);\n          end if;\n-      end Val;\n \n       ----------------\n       -- Value_Size --\n@@ -9780,6 +9735,7 @@ package body Sem_Attr is\n \n       when Attribute_Value_Size => Value_Size : declare\n          P_TypeA : constant Entity_Id := Underlying_Type (P_Type);\n+\n       begin\n          if Is_Scalar_Type (P_TypeA) or else RM_Size (P_TypeA) /= Uint_0 then\n             Fold_Uint (N, RM_Size (P_TypeA), Static);\n@@ -9833,10 +9789,10 @@ package body Sem_Attr is\n \n       --  This processing also handles the case of Wide_[Wide_]Width\n \n-      when Attribute_Width |\n-           Attribute_Wide_Width |\n-           Attribute_Wide_Wide_Width => Width :\n-      begin\n+      when Attribute_Width\n+         | Attribute_Wide_Width\n+         | Attribute_Wide_Wide_Width\n+      =>\n          if Compile_Time_Known_Bounds (P_Type) then\n \n             --  Floating-point types\n@@ -9944,29 +9900,83 @@ package body Sem_Attr is\n                            --  names (length = 12).\n \n                            case C is\n-                              when Reserved_128 | Reserved_129 |\n-                                   Reserved_132 | Reserved_153\n-                                => Wt := 12;\n-\n-                              when BS | HT | LF | VT | FF | CR |\n-                                   SO | SI | EM | FS | GS | RS |\n-                                   US | RI | MW | ST | PM\n-                                => Wt := 2;\n-\n-                              when NUL | SOH | STX | ETX | EOT |\n-                                   ENQ | ACK | BEL | DLE | DC1 |\n-                                   DC2 | DC3 | DC4 | NAK | SYN |\n-                                   ETB | CAN | SUB | ESC | DEL |\n-                                   BPH | NBH | NEL | SSA | ESA |\n-                                   HTS | HTJ | VTS | PLD | PLU |\n-                                   SS2 | SS3 | DCS | PU1 | PU2 |\n-                                   STS | CCH | SPA | EPA | SOS |\n-                                   SCI | CSI | OSC | APC\n-                                => Wt := 3;\n-\n-                              when Space .. Tilde |\n-                                   No_Break_Space .. LC_Y_Diaeresis\n-                                =>\n+                              when Reserved_128\n+                                 | Reserved_129\n+                                 | Reserved_132\n+                                 | Reserved_153\n+                              =>\n+                                 Wt := 12;\n+\n+                              when BS\n+                                 | CR\n+                                 | EM\n+                                 | FF\n+                                 | FS\n+                                 | GS\n+                                 | HT\n+                                 | LF\n+                                 | MW\n+                                 | PM\n+                                 | RI\n+                                 | RS\n+                                 | SI\n+                                 | SO\n+                                 | ST\n+                                 | US\n+                                 | VT\n+                              =>\n+                                 Wt := 2;\n+\n+                              when ACK\n+                                 | APC\n+                                 | BEL\n+                                 | BPH\n+                                 | CAN\n+                                 | CCH\n+                                 | CSI\n+                                 | DC1\n+                                 | DC2\n+                                 | DC3\n+                                 | DC4\n+                                 | DCS\n+                                 | DEL\n+                                 | DLE\n+                                 | ENQ\n+                                 | EOT\n+                                 | EPA\n+                                 | ESA\n+                                 | ESC\n+                                 | ETB\n+                                 | ETX\n+                                 | HTJ\n+                                 | HTS\n+                                 | NAK\n+                                 | NBH\n+                                 | NEL\n+                                 | NUL\n+                                 | OSC\n+                                 | PLD\n+                                 | PLU\n+                                 | PU1\n+                                 | PU2\n+                                 | SCI\n+                                 | SOH\n+                                 | SOS\n+                                 | SPA\n+                                 | SS2\n+                                 | SS3\n+                                 | SSA\n+                                 | STS\n+                                 | STX\n+                                 | SUB\n+                                 | SYN\n+                                 | VTS\n+                              =>\n+                                 Wt := 3;\n+\n+                              when Space .. Tilde\n+                                 | No_Break_Space .. LC_Y_Diaeresis\n+                              =>\n                                  --  Special case of soft hyphen in Ada 2005\n \n                                  if C = Character'Val (16#AD#)\n@@ -10076,13 +10086,13 @@ package body Sem_Attr is\n                end;\n             end if;\n          end if;\n-      end Width;\n \n       --  The following attributes denote functions that cannot be folded\n \n-      when Attribute_From_Any |\n-           Attribute_To_Any   |\n-           Attribute_TypeCode =>\n+      when Attribute_From_Any\n+         | Attribute_To_Any\n+         | Attribute_TypeCode\n+      =>\n          null;\n \n       --  The following attributes can never be folded, and furthermore we\n@@ -10091,69 +10101,69 @@ package body Sem_Attr is\n       --  a result of the processing in Analyze_Attribute or earlier in\n       --  this procedure.\n \n-      when Attribute_Abort_Signal                 |\n-           Attribute_Access                       |\n-           Attribute_Address                      |\n-           Attribute_Address_Size                 |\n-           Attribute_Asm_Input                    |\n-           Attribute_Asm_Output                   |\n-           Attribute_Base                         |\n-           Attribute_Bit_Order                    |\n-           Attribute_Bit_Position                 |\n-           Attribute_Callable                     |\n-           Attribute_Caller                       |\n-           Attribute_Class                        |\n-           Attribute_Code_Address                 |\n-           Attribute_Compiler_Version             |\n-           Attribute_Count                        |\n-           Attribute_Default_Bit_Order            |\n-           Attribute_Default_Scalar_Storage_Order |\n-           Attribute_Deref                        |\n-           Attribute_Elaborated                   |\n-           Attribute_Elab_Body                    |\n-           Attribute_Elab_Spec                    |\n-           Attribute_Elab_Subp_Body               |\n-           Attribute_Enabled                      |\n-           Attribute_External_Tag                 |\n-           Attribute_Fast_Math                    |\n-           Attribute_First_Bit                    |\n-           Attribute_Img                          |\n-           Attribute_Input                        |\n-           Attribute_Last_Bit                     |\n-           Attribute_Library_Level                |\n-           Attribute_Maximum_Alignment            |\n-           Attribute_Old                          |\n-           Attribute_Output                       |\n-           Attribute_Partition_ID                 |\n-           Attribute_Pool_Address                 |\n-           Attribute_Position                     |\n-           Attribute_Priority                     |\n-           Attribute_Read                         |\n-           Attribute_Result                       |\n-           Attribute_Scalar_Storage_Order         |\n-           Attribute_Simple_Storage_Pool          |\n-           Attribute_Storage_Pool                 |\n-           Attribute_Storage_Size                 |\n-           Attribute_Storage_Unit                 |\n-           Attribute_Stub_Type                    |\n-           Attribute_System_Allocator_Alignment   |\n-           Attribute_Tag                          |\n-           Attribute_Target_Name                  |\n-           Attribute_Terminated                   |\n-           Attribute_To_Address                   |\n-           Attribute_Type_Key                     |\n-           Attribute_Unchecked_Access             |\n-           Attribute_Universal_Literal_String     |\n-           Attribute_Unrestricted_Access          |\n-           Attribute_Valid                        |\n-           Attribute_Valid_Scalars                |\n-           Attribute_Value                        |\n-           Attribute_Wchar_T_Size                 |\n-           Attribute_Wide_Value                   |\n-           Attribute_Wide_Wide_Value              |\n-           Attribute_Word_Size                    |\n-           Attribute_Write                        =>\n-\n+      when Attribute_Abort_Signal\n+         | Attribute_Access\n+         | Attribute_Address\n+         | Attribute_Address_Size\n+         | Attribute_Asm_Input\n+         | Attribute_Asm_Output\n+         | Attribute_Base\n+         | Attribute_Bit_Order\n+         | Attribute_Bit_Position\n+         | Attribute_Callable\n+         | Attribute_Caller\n+         | Attribute_Class\n+         | Attribute_Code_Address\n+         | Attribute_Compiler_Version\n+         | Attribute_Count\n+         | Attribute_Default_Bit_Order\n+         | Attribute_Default_Scalar_Storage_Order\n+         | Attribute_Deref\n+         | Attribute_Elaborated\n+         | Attribute_Elab_Body\n+         | Attribute_Elab_Spec\n+         | Attribute_Elab_Subp_Body\n+         | Attribute_Enabled\n+         | Attribute_External_Tag\n+         | Attribute_Fast_Math\n+         | Attribute_First_Bit\n+         | Attribute_Img\n+         | Attribute_Input\n+         | Attribute_Last_Bit\n+         | Attribute_Library_Level\n+         | Attribute_Maximum_Alignment\n+         | Attribute_Old\n+         | Attribute_Output\n+         | Attribute_Partition_ID\n+         | Attribute_Pool_Address\n+         | Attribute_Position\n+         | Attribute_Priority\n+         | Attribute_Read\n+         | Attribute_Result\n+         | Attribute_Scalar_Storage_Order\n+         | Attribute_Simple_Storage_Pool\n+         | Attribute_Storage_Pool\n+         | Attribute_Storage_Size\n+         | Attribute_Storage_Unit\n+         | Attribute_Stub_Type\n+         | Attribute_System_Allocator_Alignment\n+         | Attribute_Tag\n+         | Attribute_Target_Name\n+         | Attribute_Terminated\n+         | Attribute_To_Address\n+         | Attribute_Type_Key\n+         | Attribute_Unchecked_Access\n+         | Attribute_Universal_Literal_String\n+         | Attribute_Unrestricted_Access\n+         | Attribute_Valid\n+         | Attribute_Valid_Scalars\n+         | Attribute_Value\n+         | Attribute_Wchar_T_Size\n+         | Attribute_Wide_Value\n+         | Attribute_Wide_Wide_Value\n+         | Attribute_Word_Size\n+         | Attribute_Write\n+      =>\n          raise Program_Error;\n       end case;\n \n@@ -10354,10 +10364,8 @@ package body Sem_Attr is\n \n          when Attribute_Access\n             | Attribute_Unchecked_Access\n-            | Attribute_Unrestricted_Access =>\n-\n-         Access_Attribute :\n-         begin\n+            | Attribute_Unrestricted_Access\n+         =>\n             --  Note possible modification if we have a variable\n \n             if Is_Variable (P) then\n@@ -11181,7 +11189,6 @@ package body Sem_Attr is\n                   end if;\n                end;\n             end if;\n-         end Access_Attribute;\n \n          -------------\n          -- Address --\n@@ -11190,9 +11197,9 @@ package body Sem_Attr is\n          --  Deal with resolving the type for Address attribute, overloading\n          --  is not permitted here, since there is no context to resolve it.\n \n-         when Attribute_Address | Attribute_Code_Address =>\n-         Address_Attribute : begin\n-\n+         when Attribute_Address\n+            | Attribute_Code_Address\n+         =>\n             --  To be safe, assume that if the address of a variable is taken,\n             --  it may be modified via this address, so note modification.\n \n@@ -11301,7 +11308,6 @@ package body Sem_Attr is\n                   end if;\n                end;\n             end if;\n-         end Address_Attribute;\n \n          ------------------\n          -- Body_Version --\n@@ -11425,81 +11431,77 @@ package body Sem_Attr is\n          --  specifically mentions this equivalence, we take care that the\n          --  prefix is only evaluated once).\n \n-         when Attribute_Range => Range_Attribute :\n-            declare\n-               LB   : Node_Id;\n-               HB   : Node_Id;\n-               Dims : List_Id;\n+         when Attribute_Range => Range_Attribute : declare\n+            Dims : List_Id;\n+            HB   : Node_Id;\n+            LB   : Node_Id;\n \n-            begin\n-               if not Is_Entity_Name (P)\n-                 or else not Is_Type (Entity (P))\n-               then\n-                  Resolve (P);\n-               end if;\n+         begin\n+            if not Is_Entity_Name (P) or else not Is_Type (Entity (P)) then\n+               Resolve (P);\n+            end if;\n \n-               Dims := Expressions (N);\n+            Dims := Expressions (N);\n \n-               HB :=\n-                 Make_Attribute_Reference (Loc,\n-                   Prefix         => Duplicate_Subexpr (P, Name_Req => True),\n-                   Attribute_Name => Name_Last,\n-                   Expressions    => Dims);\n+            HB :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => Duplicate_Subexpr (P, Name_Req => True),\n+                Attribute_Name => Name_Last,\n+                Expressions    => Dims);\n \n-               LB :=\n-                 Make_Attribute_Reference (Loc,\n-                   Prefix          => P,\n-                   Attribute_Name  => Name_First,\n-                   Expressions     => (Dims));\n+            LB :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix          => P,\n+                Attribute_Name  => Name_First,\n+                Expressions     => (Dims));\n \n-               --  Do not share the dimension indicator, if present. Even\n-               --  though it is a static constant, its source location\n-               --  may be modified when printing expanded code and node\n-               --  sharing will lead to chaos in Sprint.\n+            --  Do not share the dimension indicator, if present. Even though\n+            --  it is a static constant, its source location may be modified\n+            --  when printing expanded code and node sharing will lead to chaos\n+            --  in Sprint.\n \n-               if Present (Dims) then\n-                  Set_Expressions (LB,\n-                    New_List (New_Copy_Tree (First (Dims))));\n-               end if;\n+            if Present (Dims) then\n+               Set_Expressions (LB, New_List (New_Copy_Tree (First (Dims))));\n+            end if;\n \n-               --  If the original was marked as Must_Not_Freeze (see code\n-               --  in Sem_Ch3.Make_Index), then make sure the rewriting\n-               --  does not freeze either.\n+            --  If the original was marked as Must_Not_Freeze (see code in\n+            --  Sem_Ch3.Make_Index), then make sure the rewriting does not\n+            --  freeze either.\n \n-               if Must_Not_Freeze (N) then\n-                  Set_Must_Not_Freeze (HB);\n-                  Set_Must_Not_Freeze (LB);\n-                  Set_Must_Not_Freeze (Prefix (HB));\n-                  Set_Must_Not_Freeze (Prefix (LB));\n-               end if;\n+            if Must_Not_Freeze (N) then\n+               Set_Must_Not_Freeze (HB);\n+               Set_Must_Not_Freeze (LB);\n+               Set_Must_Not_Freeze (Prefix (HB));\n+               Set_Must_Not_Freeze (Prefix (LB));\n+            end if;\n \n-               if Raises_Constraint_Error (Prefix (N)) then\n+            if Raises_Constraint_Error (Prefix (N)) then\n \n-                  --  Preserve Sloc of prefix in the new bounds, so that\n-                  --  the posted warning can be removed if we are within\n-                  --  unreachable code.\n+               --  Preserve Sloc of prefix in the new bounds, so that the\n+               --  posted warning can be removed if we are within unreachable\n+               --  code.\n \n-                  Set_Sloc (LB, Sloc (Prefix (N)));\n-                  Set_Sloc (HB, Sloc (Prefix (N)));\n-               end if;\n+               Set_Sloc (LB, Sloc (Prefix (N)));\n+               Set_Sloc (HB, Sloc (Prefix (N)));\n+            end if;\n \n-               Rewrite (N, Make_Range (Loc, LB, HB));\n-               Analyze_And_Resolve (N, Typ);\n+            Rewrite (N, Make_Range (Loc, LB, HB));\n+            Analyze_And_Resolve (N, Typ);\n \n-               --  Ensure that the expanded range does not have side effects\n+            --  Ensure that the expanded range does not have side effects\n \n-               Force_Evaluation (LB);\n-               Force_Evaluation (HB);\n+            Force_Evaluation (LB);\n+            Force_Evaluation (HB);\n \n-               --  Normally after resolving attribute nodes, Eval_Attribute\n-               --  is called to do any possible static evaluation of the node.\n-               --  However, here since the Range attribute has just been\n-               --  transformed into a range expression it is no longer an\n-               --  attribute node and therefore the call needs to be avoided\n-               --  and is accomplished by simply returning from the procedure.\n+            --  Normally after resolving attribute nodes, Eval_Attribute\n+            --  is called to do any possible static evaluation of the node.\n+            --  However, here since the Range attribute has just been\n+            --  transformed into a range expression it is no longer an\n+            --  attribute node and therefore the call needs to be avoided\n+            --  and is accomplished by simply returning from the procedure.\n \n-               return;\n-            end Range_Attribute;\n+            return;\n+         end Range_Attribute;\n \n          ------------\n          -- Result --\n@@ -11530,121 +11532,120 @@ package body Sem_Attr is\n \n          --  Resolve aggregate components in component associations\n \n-         when Attribute_Update =>\n-            declare\n-               Aggr  : constant Node_Id   := First (Expressions (N));\n-               Typ   : constant Entity_Id := Etype (Prefix (N));\n-               Assoc : Node_Id;\n-               Comp  : Node_Id;\n-               Expr  : Node_Id;\n+         when Attribute_Update => Update : declare\n+            Aggr  : constant Node_Id   := First (Expressions (N));\n+            Typ   : constant Entity_Id := Etype (Prefix (N));\n+            Assoc : Node_Id;\n+            Comp  : Node_Id;\n+            Expr  : Node_Id;\n \n-            begin\n-               --  Set the Etype of the aggregate to that of the prefix, even\n-               --  though the aggregate may not be a proper representation of a\n-               --  value of the type (missing or duplicated associations, etc.)\n-               --  Complete resolution of the prefix. Note that in Ada 2012 it\n-               --  can be a qualified expression that is e.g. an aggregate.\n-\n-               Set_Etype (Aggr, Typ);\n-               Resolve (Prefix (N), Typ);\n-\n-               --  For an array type, resolve expressions with the component\n-               --  type of the array, and apply constraint checks when needed.\n-\n-               if Is_Array_Type (Typ) then\n-                  Assoc := First (Component_Associations (Aggr));\n-                  while Present (Assoc) loop\n-                     Expr := Expression (Assoc);\n-                     Resolve (Expr, Component_Type (Typ));\n-\n-                     --  For scalar array components set Do_Range_Check when\n-                     --  needed. Constraint checking on non-scalar components\n-                     --  is done in Aggregate_Constraint_Checks, but only if\n-                     --  full analysis is enabled. These flags are not set in\n-                     --  the front-end in GnatProve mode.\n-\n-                     if Is_Scalar_Type (Component_Type (Typ))\n-                       and then not Is_OK_Static_Expression (Expr)\n+         begin\n+            --  Set the Etype of the aggregate to that of the prefix, even\n+            --  though the aggregate may not be a proper representation of a\n+            --  value of the type (missing or duplicated associations, etc.)\n+            --  Complete resolution of the prefix. Note that in Ada 2012 it\n+            --  can be a qualified expression that is e.g. an aggregate.\n+\n+            Set_Etype (Aggr, Typ);\n+            Resolve (Prefix (N), Typ);\n+\n+            --  For an array type, resolve expressions with the component type\n+            --  of the array, and apply constraint checks when needed.\n+\n+            if Is_Array_Type (Typ) then\n+               Assoc := First (Component_Associations (Aggr));\n+               while Present (Assoc) loop\n+                  Expr := Expression (Assoc);\n+                  Resolve (Expr, Component_Type (Typ));\n+\n+                  --  For scalar array components set Do_Range_Check when\n+                  --  needed. Constraint checking on non-scalar components\n+                  --  is done in Aggregate_Constraint_Checks, but only if\n+                  --  full analysis is enabled. These flags are not set in\n+                  --  the front-end in GnatProve mode.\n+\n+                  if Is_Scalar_Type (Component_Type (Typ))\n+                    and then not Is_OK_Static_Expression (Expr)\n+                  then\n+                     if Is_Entity_Name (Expr)\n+                       and then Etype (Expr) = Component_Type (Typ)\n                      then\n-                        if Is_Entity_Name (Expr)\n-                          and then Etype (Expr) = Component_Type (Typ)\n-                        then\n-                           null;\n+                        null;\n \n-                        else\n-                           Set_Do_Range_Check (Expr);\n-                        end if;\n+                     else\n+                        Set_Do_Range_Check (Expr);\n                      end if;\n+                  end if;\n \n-                     --  The choices in the association are static constants,\n-                     --  or static aggregates each of whose components belongs\n-                     --  to the proper index type. However, they must also\n-                     --  belong to the index subtype (s) of the prefix, which\n-                     --  may be a subtype (e.g. given by a slice).\n+                  --  The choices in the association are static constants,\n+                  --  or static aggregates each of whose components belongs\n+                  --  to the proper index type. However, they must also\n+                  --  belong to the index subtype (s) of the prefix, which\n+                  --  may be a subtype (e.g. given by a slice).\n \n-                     --  Choices may also be identifiers with no staticness\n-                     --  requirements, in which case they must resolve to the\n-                     --  index type.\n+                  --  Choices may also be identifiers with no staticness\n+                  --  requirements, in which case they must resolve to the\n+                  --  index type.\n \n-                     declare\n-                        C    : Node_Id;\n-                        C_E  : Node_Id;\n-                        Indx : Node_Id;\n+                  declare\n+                     C    : Node_Id;\n+                     C_E  : Node_Id;\n+                     Indx : Node_Id;\n \n-                     begin\n-                        C := First (Choices (Assoc));\n-                        while Present (C) loop\n-                           Indx := First_Index (Etype (Prefix (N)));\n+                  begin\n+                     C := First (Choices (Assoc));\n+                     while Present (C) loop\n+                        Indx := First_Index (Etype (Prefix (N)));\n \n-                           if Nkind (C) /= N_Aggregate then\n-                              Analyze_And_Resolve (C, Etype (Indx));\n-                              Apply_Constraint_Check (C, Etype (Indx));\n-                              Check_Non_Static_Context (C);\n+                        if Nkind (C) /= N_Aggregate then\n+                           Analyze_And_Resolve (C, Etype (Indx));\n+                           Apply_Constraint_Check (C, Etype (Indx));\n+                           Check_Non_Static_Context (C);\n \n-                           else\n-                              C_E := First (Expressions (C));\n-                              while Present (C_E) loop\n-                                 Analyze_And_Resolve (C_E, Etype (Indx));\n-                                 Apply_Constraint_Check (C_E, Etype (Indx));\n-                                 Check_Non_Static_Context (C_E);\n-\n-                                 Next (C_E);\n-                                 Next_Index (Indx);\n-                              end loop;\n-                           end if;\n+                        else\n+                           C_E := First (Expressions (C));\n+                           while Present (C_E) loop\n+                              Analyze_And_Resolve (C_E, Etype (Indx));\n+                              Apply_Constraint_Check (C_E, Etype (Indx));\n+                              Check_Non_Static_Context (C_E);\n+\n+                              Next (C_E);\n+                              Next_Index (Indx);\n+                           end loop;\n+                        end if;\n \n-                           Next (C);\n-                        end loop;\n-                     end;\n+                        Next (C);\n+                     end loop;\n+                  end;\n \n-                     Next (Assoc);\n-                  end loop;\n+                  Next (Assoc);\n+               end loop;\n \n-               --  For a record type, use type of each component, which is\n-               --  recorded during analysis.\n+            --  For a record type, use type of each component, which is\n+            --  recorded during analysis.\n \n-               else\n-                  Assoc := First (Component_Associations (Aggr));\n-                  while Present (Assoc) loop\n-                     Comp := First (Choices (Assoc));\n-                     Expr := Expression (Assoc);\n+            else\n+               Assoc := First (Component_Associations (Aggr));\n+               while Present (Assoc) loop\n+                  Comp := First (Choices (Assoc));\n+                  Expr := Expression (Assoc);\n \n-                     if Nkind (Comp) /= N_Others_Choice\n-                       and then not Error_Posted (Comp)\n-                     then\n-                        Resolve (Expr, Etype (Entity (Comp)));\n+                  if Nkind (Comp) /= N_Others_Choice\n+                    and then not Error_Posted (Comp)\n+                  then\n+                     Resolve (Expr, Etype (Entity (Comp)));\n \n-                        if Is_Scalar_Type (Etype (Entity (Comp)))\n-                          and then not Is_OK_Static_Expression (Expr)\n-                        then\n-                           Set_Do_Range_Check (Expr);\n-                        end if;\n+                     if Is_Scalar_Type (Etype (Entity (Comp)))\n+                       and then not Is_OK_Static_Expression (Expr)\n+                     then\n+                        Set_Do_Range_Check (Expr);\n                      end if;\n+                  end if;\n \n-                     Next (Assoc);\n-                  end loop;\n-               end if;\n-            end;\n+                  Next (Assoc);\n+               end loop;\n+            end if;\n+         end Update;\n \n          ---------\n          -- Val --"}, {"sha": "0ba45981558a91a63779228281ac408c14e23340", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 26, "deletions": 47, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -438,42 +438,24 @@ package body Sem_Aux is\n    function Get_Binary_Nkind (Op : Entity_Id) return Node_Kind is\n    begin\n       case Chars (Op) is\n-         when Name_Op_Add =>\n-            return N_Op_Add;\n-         when Name_Op_Concat =>\n-            return N_Op_Concat;\n-         when Name_Op_Expon =>\n-            return N_Op_Expon;\n-         when Name_Op_Subtract =>\n-            return N_Op_Subtract;\n-         when Name_Op_Mod =>\n-            return N_Op_Mod;\n-         when Name_Op_Multiply =>\n-            return N_Op_Multiply;\n-         when Name_Op_Divide =>\n-            return N_Op_Divide;\n-         when Name_Op_Rem =>\n-            return N_Op_Rem;\n-         when Name_Op_And =>\n-            return N_Op_And;\n-         when Name_Op_Eq =>\n-            return N_Op_Eq;\n-         when Name_Op_Ge =>\n-            return N_Op_Ge;\n-         when Name_Op_Gt =>\n-            return N_Op_Gt;\n-         when Name_Op_Le =>\n-            return N_Op_Le;\n-         when Name_Op_Lt =>\n-            return N_Op_Lt;\n-         when Name_Op_Ne =>\n-            return N_Op_Ne;\n-         when Name_Op_Or =>\n-            return N_Op_Or;\n-         when Name_Op_Xor =>\n-            return N_Op_Xor;\n-         when others =>\n-            raise Program_Error;\n+         when Name_Op_Add      => return N_Op_Add;\n+         when Name_Op_Concat   => return N_Op_Concat;\n+         when Name_Op_Expon    => return N_Op_Expon;\n+         when Name_Op_Subtract => return N_Op_Subtract;\n+         when Name_Op_Mod      => return N_Op_Mod;\n+         when Name_Op_Multiply => return N_Op_Multiply;\n+         when Name_Op_Divide   => return N_Op_Divide;\n+         when Name_Op_Rem      => return N_Op_Rem;\n+         when Name_Op_And      => return N_Op_And;\n+         when Name_Op_Eq       => return N_Op_Eq;\n+         when Name_Op_Ge       => return N_Op_Ge;\n+         when Name_Op_Gt       => return N_Op_Gt;\n+         when Name_Op_Le       => return N_Op_Le;\n+         when Name_Op_Lt       => return N_Op_Lt;\n+         when Name_Op_Ne       => return N_Op_Ne;\n+         when Name_Op_Or       => return N_Op_Or;\n+         when Name_Op_Xor      => return N_Op_Xor;\n+         when others           => raise Program_Error;\n       end case;\n    end Get_Binary_Nkind;\n \n@@ -663,16 +645,11 @@ package body Sem_Aux is\n    function Get_Unary_Nkind (Op : Entity_Id) return Node_Kind is\n    begin\n       case Chars (Op) is\n-         when Name_Op_Abs =>\n-            return N_Op_Abs;\n-         when Name_Op_Subtract =>\n-            return N_Op_Minus;\n-         when Name_Op_Not =>\n-            return N_Op_Not;\n-         when Name_Op_Add =>\n-            return N_Op_Plus;\n-         when others =>\n-            raise Program_Error;\n+         when Name_Op_Abs      => return N_Op_Abs;\n+         when Name_Op_Subtract => return N_Op_Minus;\n+         when Name_Op_Not      => return N_Op_Not;\n+         when Name_Op_Add      => return N_Op_Plus;\n+         when others           => raise Program_Error;\n       end case;\n    end Get_Unary_Nkind;\n \n@@ -1556,7 +1533,9 @@ package body Sem_Aux is\n          when N_Subprogram_Body =>\n             return E;\n \n-         when N_Subprogram_Declaration | N_Subprogram_Body_Stub =>\n+         when N_Subprogram_Body_Stub\n+            | N_Subprogram_Declaration\n+         =>\n             return Corresponding_Body (N);\n \n          when others =>"}, {"sha": "7bc75b1e6d883ed496ae199abee46b5910aea859", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 33, "deletions": 23, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -486,7 +486,6 @@ package body Sem_Cat is\n \n                when others =>\n                   null;\n-\n             end case;\n          end if;\n \n@@ -746,13 +745,17 @@ package body Sem_Cat is\n \n             if Nkind (PN) = N_Pragma then\n                case Get_Pragma_Id (PN) is\n-                  when Pragma_All_Calls_Remote   |\n-                    Pragma_Preelaborate          |\n-                    Pragma_Pure                  |\n-                    Pragma_Remote_Call_Interface |\n-                    Pragma_Remote_Types          |\n-                    Pragma_Shared_Passive        => Analyze (PN);\n-                  when others                    => null;\n+                  when Pragma_All_Calls_Remote\n+                     | Pragma_Preelaborate\n+                     | Pragma_Pure\n+                     | Pragma_Remote_Call_Interface\n+                     | Pragma_Remote_Types\n+                     | Pragma_Shared_Passive\n+                  =>\n+                     Analyze (PN);\n+\n+                  when others =>\n+                     null;\n                end case;\n             end if;\n \n@@ -2089,30 +2092,37 @@ package body Sem_Cat is\n \n       begin\n          case K is\n-            when N_Op | N_Membership_Test =>\n-               return True;\n-\n             when N_Aggregate\n                | N_Component_Association\n-               | N_Index_Or_Discriminant_Constraint =>\n+               | N_Index_Or_Discriminant_Constraint\n+               | N_Membership_Test\n+               | N_Op\n+            =>\n                return True;\n \n             when N_Attribute_Reference =>\n-               return Attribute_Name (Parent (N)) /= Name_Address\n-                 and then Attribute_Name (Parent (N)) /= Name_Access\n-                 and then Attribute_Name (Parent (N)) /= Name_Unchecked_Access\n-                 and then\n-                   Attribute_Name (Parent (N)) /= Name_Unrestricted_Access;\n+               declare\n+                  Attr : constant Name_Id := Attribute_Name (Parent (N));\n+\n+               begin\n+                  return     Attr /= Name_Address\n+                    and then Attr /= Name_Access\n+                    and then Attr /= Name_Unchecked_Access\n+                    and then Attr /= Name_Unrestricted_Access;\n+               end;\n \n             when N_Indexed_Component =>\n-               return (N /= Prefix (Parent (N))\n-                 or else Is_Primary (Parent (N)));\n+               return N /= Prefix (Parent (N)) or else Is_Primary (Parent (N));\n \n-            when N_Qualified_Expression | N_Type_Conversion =>\n+            when N_Qualified_Expression\n+               | N_Type_Conversion\n+            =>\n                return Is_Primary (Parent (N));\n \n-            when N_Assignment_Statement | N_Object_Declaration =>\n-               return (N = Expression (Parent (N)));\n+            when N_Assignment_Statement\n+               | N_Object_Declaration\n+            =>\n+               return N = Expression (Parent (N));\n \n             when N_Selected_Component =>\n                return Is_Primary (Parent (N));"}, {"sha": "c1f671fb43a99b36b7911c1b086f6c8c58046ed3", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3664,10 +3664,11 @@ package body Sem_Ch10 is\n          --  Protect the frontend against previous critical errors\n \n          case Nkind (Unit (Library_Unit (W))) is\n-            when N_Subprogram_Declaration         |\n-                 N_Package_Declaration            |\n-                 N_Generic_Subprogram_Declaration |\n-                 N_Generic_Package_Declaration    =>\n+            when N_Generic_Package_Declaration\n+               | N_Generic_Subprogram_Declaration\n+               | N_Package_Declaration\n+               | N_Subprogram_Declaration\n+            =>\n                null;\n \n             when others =>\n@@ -6003,8 +6004,9 @@ package body Sem_Ch10 is\n             Error_Msg_N (\"subprograms not allowed in limited with_clauses\", N);\n             return;\n \n-         when N_Generic_Package_Declaration |\n-              N_Generic_Subprogram_Declaration =>\n+         when N_Generic_Package_Declaration\n+            | N_Generic_Subprogram_Declaration\n+         =>\n             Error_Msg_N (\"generics not allowed in limited with_clauses\", N);\n             return;\n "}, {"sha": "89c008092f8bd028c6a355a7144746e50eb6c939", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 79, "deletions": 57, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1459,7 +1459,6 @@ package body Sem_Ch12 is\n             Kind := Nkind (Analyzed_Formal);\n \n             case Nkind (Formal) is\n-\n                when N_Formal_Subprogram_Declaration =>\n                   exit when Kind in N_Formal_Subprogram_Declaration\n                     and then\n@@ -1473,7 +1472,10 @@ package body Sem_Ch12 is\n                                             N_Generic_Package_Declaration,\n                                             N_Package_Declaration);\n \n-               when N_Use_Package_Clause | N_Use_Type_Clause => exit;\n+               when N_Use_Package_Clause\n+                  | N_Use_Type_Clause\n+               =>\n+                  exit;\n \n                when others =>\n \n@@ -1855,8 +1857,9 @@ package body Sem_Ch12 is\n                --  they belong (we mustn't recopy them since this would mess up\n                --  the Sloc values).\n \n-               when N_Use_Package_Clause |\n-                    N_Use_Type_Clause    =>\n+               when N_Use_Package_Clause\n+                  | N_Use_Type_Clause\n+               =>\n                   if Nkind (Original_Node (I_Node)) =\n                                      N_Formal_Package_Declaration\n                   then\n@@ -1868,7 +1871,6 @@ package body Sem_Ch12 is\n \n                when others =>\n                   raise Program_Error;\n-\n             end case;\n \n             Formal := Saved_Formal;\n@@ -2656,13 +2658,13 @@ package body Sem_Ch12 is\n             --  continue analysis to minimize cascaded errors.\n \n             Error_Msg_N\n-              (\"generic parent cannot be used as formal package \"\n-               & \"of a child unit\", Gen_Id);\n+              (\"generic parent cannot be used as formal package of a child \"\n+               & \"unit\", Gen_Id);\n \n          else\n             Error_Msg_N\n-              (\"generic package cannot be used as a formal package \"\n-               & \"within itself\", Gen_Id);\n+              (\"generic package cannot be used as a formal package within \"\n+               & \"itself\", Gen_Id);\n             Restore_Env;\n             goto Leave;\n          end if;\n@@ -3135,56 +3137,56 @@ package body Sem_Ch12 is\n       --  Enter the new name, and branch to specific routine\n \n       case Nkind (Def) is\n-         when N_Formal_Private_Type_Definition         =>\n+         when N_Formal_Private_Type_Definition =>\n             Analyze_Formal_Private_Type (N, T, Def);\n \n-         when N_Formal_Derived_Type_Definition         =>\n+         when N_Formal_Derived_Type_Definition =>\n             Analyze_Formal_Derived_Type (N, T, Def);\n \n-         when N_Formal_Incomplete_Type_Definition         =>\n+         when N_Formal_Incomplete_Type_Definition =>\n             Analyze_Formal_Incomplete_Type (T, Def);\n \n-         when N_Formal_Discrete_Type_Definition        =>\n+         when N_Formal_Discrete_Type_Definition =>\n             Analyze_Formal_Discrete_Type (T, Def);\n \n-         when N_Formal_Signed_Integer_Type_Definition  =>\n+         when N_Formal_Signed_Integer_Type_Definition =>\n             Analyze_Formal_Signed_Integer_Type (T, Def);\n \n-         when N_Formal_Modular_Type_Definition         =>\n+         when N_Formal_Modular_Type_Definition =>\n             Analyze_Formal_Modular_Type (T, Def);\n \n-         when N_Formal_Floating_Point_Definition       =>\n+         when N_Formal_Floating_Point_Definition =>\n             Analyze_Formal_Floating_Type (T, Def);\n \n          when N_Formal_Ordinary_Fixed_Point_Definition =>\n             Analyze_Formal_Ordinary_Fixed_Point_Type (T, Def);\n \n-         when N_Formal_Decimal_Fixed_Point_Definition  =>\n+         when N_Formal_Decimal_Fixed_Point_Definition =>\n             Analyze_Formal_Decimal_Fixed_Point_Type (T, Def);\n \n          when N_Array_Type_Definition =>\n             Analyze_Formal_Array_Type (T, Def);\n \n-         when N_Access_To_Object_Definition            |\n-              N_Access_Function_Definition             |\n-              N_Access_Procedure_Definition            =>\n+         when N_Access_Function_Definition\n+            | N_Access_Procedure_Definition\n+            | N_Access_To_Object_Definition\n+         =>\n             Analyze_Generic_Access_Type (T, Def);\n \n          --  Ada 2005: a interface declaration is encoded as an abstract\n          --  record declaration or a abstract type derivation.\n \n-         when N_Record_Definition                      =>\n+         when N_Record_Definition =>\n             Analyze_Formal_Interface_Type (N, T, Def);\n \n-         when N_Derived_Type_Definition                =>\n+         when N_Derived_Type_Definition =>\n             Analyze_Formal_Derived_Interface_Type (N, T, Def);\n \n-         when N_Error                                  =>\n+         when N_Error =>\n             null;\n \n-         when others                                   =>\n+         when others =>\n             raise Program_Error;\n-\n       end case;\n \n       Set_Is_Generic_Type (T);\n@@ -9661,18 +9663,20 @@ package body Sem_Ch12 is\n \n       begin\n          case Nkind (Original_Node (F)) is\n-            when N_Formal_Object_Declaration |\n-                 N_Formal_Type_Declaration   =>\n+            when N_Formal_Object_Declaration\n+               | N_Formal_Type_Declaration\n+            =>\n                Formal_Ent := Defining_Identifier (F);\n \n                while Chars (Act) /= Chars (Formal_Ent) loop\n                   Next_Entity (Act);\n                end loop;\n \n-            when N_Formal_Subprogram_Declaration |\n-                 N_Formal_Package_Declaration    |\n-                 N_Package_Declaration           |\n-                 N_Generic_Package_Declaration   =>\n+            when N_Formal_Package_Declaration\n+               | N_Formal_Subprogram_Declaration\n+               | N_Generic_Package_Declaration\n+               | N_Package_Declaration\n+            =>\n                Formal_Ent := Defining_Entity (F);\n \n                while Chars (Act) /= Chars (Formal_Ent) loop\n@@ -9766,19 +9770,19 @@ package body Sem_Ch12 is\n          Kind : constant Node_Kind := Nkind (Original_Node (N));\n       begin\n          case Kind is\n-            when N_Formal_Object_Declaration     =>\n+            when N_Formal_Object_Declaration =>\n                return Defining_Identifier (N);\n \n-            when N_Formal_Type_Declaration       =>\n+            when N_Formal_Type_Declaration =>\n                return Defining_Identifier (N);\n \n             when N_Formal_Subprogram_Declaration =>\n                return Defining_Unit_Name (Specification (N));\n \n-            when N_Formal_Package_Declaration    =>\n+            when N_Formal_Package_Declaration =>\n                return Defining_Identifier (Original_Node (N));\n \n-            when N_Generic_Package_Declaration   =>\n+            when N_Generic_Package_Declaration =>\n                return Defining_Identifier (Original_Node (N));\n \n             --  All other declarations are introduced by semantic analysis and\n@@ -12815,19 +12819,19 @@ package body Sem_Ch12 is\n             when N_Access_To_Object_Definition =>\n                Validate_Access_Type_Instance;\n \n-            when N_Access_Function_Definition |\n-                 N_Access_Procedure_Definition =>\n+            when N_Access_Function_Definition\n+               | N_Access_Procedure_Definition\n+            =>\n                Validate_Access_Subprogram_Instance;\n \n-            when N_Record_Definition           =>\n+            when N_Record_Definition =>\n                Validate_Interface_Type_Instance;\n \n-            when N_Derived_Type_Definition     =>\n+            when N_Derived_Type_Definition =>\n                Validate_Derived_Interface_Type_Instance;\n \n             when others =>\n                raise Program_Error;\n-\n          end case;\n       end if;\n \n@@ -14523,14 +14527,16 @@ package body Sem_Ch12 is\n             when N_Unary_Op =>\n                Save_Global_Descendant (Union_Id (Right_Opnd (N)));\n \n-            when N_Expanded_Name      |\n-                 N_Selected_Component =>\n+            when N_Expanded_Name\n+               | N_Selected_Component\n+            =>\n                Save_Global_Descendant (Union_Id (Prefix (N)));\n                Save_Global_Descendant (Union_Id (Selector_Name (N)));\n \n-            when N_Identifier         |\n-                 N_Character_Literal  |\n-                 N_Operator_Symbol    =>\n+            when N_Character_Literal\n+               | N_Identifier\n+               | N_Operator_Symbol\n+            =>\n                null;\n \n             when others =>\n@@ -15479,27 +15485,43 @@ package body Sem_Ch12 is\n       end loop;\n \n       case Attr_Id is\n-         when Attribute_Adjacent |  Attribute_Ceiling   | Attribute_Copy_Sign |\n-              Attribute_Floor    |  Attribute_Fraction  | Attribute_Machine   |\n-              Attribute_Model    |  Attribute_Remainder | Attribute_Rounding  |\n-              Attribute_Unbiased_Rounding  =>\n+         when Attribute_Adjacent\n+            | Attribute_Ceiling\n+            | Attribute_Copy_Sign\n+            | Attribute_Floor\n+            | Attribute_Fraction\n+            | Attribute_Machine\n+            | Attribute_Model\n+            | Attribute_Remainder\n+            | Attribute_Rounding\n+            | Attribute_Unbiased_Rounding\n+         =>\n             OK := Is_Fun\n                     and then Num_F = 1\n                     and then Is_Floating_Point_Type (T);\n \n-         when Attribute_Image    | Attribute_Pred       | Attribute_Succ |\n-              Attribute_Value    | Attribute_Wide_Image |\n-              Attribute_Wide_Value  =>\n-            OK := (Is_Fun and then Num_F = 1 and then Is_Scalar_Type (T));\n+         when Attribute_Image\n+            | Attribute_Pred\n+            | Attribute_Succ\n+            | Attribute_Value\n+            | Attribute_Wide_Image\n+            | Attribute_Wide_Value\n+         =>\n+            OK := Is_Fun and then Num_F = 1 and then Is_Scalar_Type (T);\n \n-         when Attribute_Max      |  Attribute_Min  =>\n-            OK := (Is_Fun and then Num_F = 2 and then Is_Scalar_Type (T));\n+         when Attribute_Max\n+            | Attribute_Min\n+         =>\n+            OK := Is_Fun and then Num_F = 2 and then Is_Scalar_Type (T);\n \n          when Attribute_Input =>\n             OK := (Is_Fun and then Num_F = 1);\n \n-         when Attribute_Output | Attribute_Read | Attribute_Write =>\n-            OK := (not Is_Fun and then Num_F = 2);\n+         when Attribute_Output\n+            | Attribute_Read\n+            | Attribute_Write\n+         =>\n+            OK := not Is_Fun and then Num_F = 2;\n \n          when others =>\n             OK := False;"}, {"sha": "ec0080bbc438a9be489ebd2dcad8d3dd99c906d6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 216, "deletions": 196, "changes": 412, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -963,7 +963,9 @@ package body Sem_Ch13 is\n \n                      --  Object_Size (also Size which also sets Object_Size)\n \n-                     when Aspect_Object_Size | Aspect_Size =>\n+                     when Aspect_Object_Size\n+                        | Aspect_Size\n+                     =>\n                         if not Has_Size_Clause (E)\n                           and then\n                             No (Get_Attribute_Definition_Clause\n@@ -1057,7 +1059,6 @@ package body Sem_Ch13 is\n                      when others =>\n                         pragma Assert (Aspect_Delay (A_Id) /= Rep_Aspect);\n                         null;\n-\n                   end case;\n                end if;\n             end if;\n@@ -1100,7 +1101,9 @@ package body Sem_Ch13 is\n             Par := Nearest_Ancestor (E);\n \n             case A_Id is\n-               when Aspect_Atomic | Aspect_Shared =>\n+               when Aspect_Atomic\n+                  | Aspect_Shared\n+               =>\n                   if not Is_Atomic (Par) then\n                      return;\n                   end if;\n@@ -1212,9 +1215,9 @@ package body Sem_Ch13 is\n                   --  For aspects whose expression is an optional Boolean, make\n                   --  the corresponding pragma at the freeze point.\n \n-                  when Boolean_Aspects      |\n-                       Library_Unit_Aspects =>\n-\n+                  when Boolean_Aspects\n+                     | Library_Unit_Aspects\n+                  =>\n                      --  Aspects Export and Import require special handling.\n                      --  Both are by definition Boolean and may benefit from\n                      --  forward references, however their expressions are\n@@ -1237,9 +1240,9 @@ package body Sem_Ch13 is\n                   --  Special handling for aspects that don't correspond to\n                   --  pragmas/attributes.\n \n-                  when Aspect_Default_Value           |\n-                       Aspect_Default_Component_Value =>\n-\n+                  when Aspect_Default_Value\n+                     | Aspect_Default_Component_Value\n+                  =>\n                      --  Do not inherit aspect for anonymous base type of a\n                      --  scalar or array type, because they apply to the first\n                      --  subtype of the type, and will be processed when that\n@@ -1257,10 +1260,11 @@ package body Sem_Ch13 is\n                   --  Ditto for iterator aspects, because the corresponding\n                   --  attributes may not have been analyzed yet.\n \n-                  when Aspect_Constant_Indexing |\n-                       Aspect_Variable_Indexing |\n-                       Aspect_Default_Iterator  |\n-                       Aspect_Iterator_Element  =>\n+                  when Aspect_Constant_Indexing\n+                     | Aspect_Default_Iterator\n+                     | Aspect_Iterator_Element\n+                     | Aspect_Variable_Indexing\n+                  =>\n                      Analyze (Expression (ASN));\n \n                      if Etype (Expression (ASN)) = Any_Type then\n@@ -2064,32 +2068,32 @@ package body Sem_Ch13 is\n                --  Case 1: Aspects corresponding to attribute definition\n                --  clauses.\n \n-               when Aspect_Address              |\n-                    Aspect_Alignment            |\n-                    Aspect_Bit_Order            |\n-                    Aspect_Component_Size       |\n-                    Aspect_Constant_Indexing    |\n-                    Aspect_Default_Iterator     |\n-                    Aspect_Dispatching_Domain   |\n-                    Aspect_External_Tag         |\n-                    Aspect_Input                |\n-                    Aspect_Iterable             |\n-                    Aspect_Iterator_Element     |\n-                    Aspect_Machine_Radix        |\n-                    Aspect_Object_Size          |\n-                    Aspect_Output               |\n-                    Aspect_Read                 |\n-                    Aspect_Scalar_Storage_Order |\n-                    Aspect_Secondary_Stack_Size |\n-                    Aspect_Simple_Storage_Pool  |\n-                    Aspect_Size                 |\n-                    Aspect_Small                |\n-                    Aspect_Storage_Pool         |\n-                    Aspect_Stream_Size          |\n-                    Aspect_Value_Size           |\n-                    Aspect_Variable_Indexing    |\n-                    Aspect_Write                =>\n-\n+               when Aspect_Address\n+                  | Aspect_Alignment\n+                  | Aspect_Bit_Order\n+                  | Aspect_Component_Size\n+                  | Aspect_Constant_Indexing\n+                  | Aspect_Default_Iterator\n+                  | Aspect_Dispatching_Domain\n+                  | Aspect_External_Tag\n+                  | Aspect_Input\n+                  | Aspect_Iterable\n+                  | Aspect_Iterator_Element\n+                  | Aspect_Machine_Radix\n+                  | Aspect_Object_Size\n+                  | Aspect_Output\n+                  | Aspect_Read\n+                  | Aspect_Scalar_Storage_Order\n+                  | Aspect_Secondary_Stack_Size\n+                  | Aspect_Simple_Storage_Pool\n+                  | Aspect_Size\n+                  | Aspect_Small\n+                  | Aspect_Storage_Pool\n+                  | Aspect_Stream_Size\n+                  | Aspect_Value_Size\n+                  | Aspect_Variable_Indexing\n+                  | Aspect_Write\n+               =>\n                   --  Indexing aspects apply only to tagged type\n \n                   if (A_Id = Aspect_Constant_Indexing\n@@ -2170,10 +2174,10 @@ package body Sem_Ch13 is\n \n                --  Linker_Section/Suppress/Unsuppress\n \n-               when Aspect_Linker_Section |\n-                    Aspect_Suppress       |\n-                    Aspect_Unsuppress     =>\n-\n+               when Aspect_Linker_Section\n+                  | Aspect_Suppress\n+                  | Aspect_Unsuppress\n+               =>\n                   Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n@@ -2214,10 +2218,10 @@ package body Sem_Ch13 is\n \n                --  Dynamic_Predicate, Predicate, Static_Predicate\n \n-               when Aspect_Dynamic_Predicate |\n-                    Aspect_Predicate         |\n-                    Aspect_Static_Predicate  =>\n-\n+               when Aspect_Dynamic_Predicate\n+                  | Aspect_Predicate\n+                  | Aspect_Static_Predicate\n+               =>\n                   --  These aspects apply only to subtypes\n \n                   if not Is_Type (E) then\n@@ -2326,8 +2330,9 @@ package body Sem_Ch13 is\n \n                --  External_Name, Link_Name\n \n-               when Aspect_External_Name |\n-                    Aspect_Link_Name     =>\n+               when Aspect_External_Name\n+                  | Aspect_Link_Name\n+               =>\n                   Analyze_Aspect_External_Link_Name;\n                   goto Continue;\n \n@@ -2346,10 +2351,10 @@ package body Sem_Ch13 is\n                --  to duplicate than to translate the aspect in the spec into\n                --  a pragma in the declarative part of the body.\n \n-               when Aspect_CPU                |\n-                    Aspect_Interrupt_Priority |\n-                    Aspect_Priority           =>\n-\n+               when Aspect_CPU\n+                  | Aspect_Interrupt_Priority\n+                  | Aspect_Priority\n+               =>\n                   if Nkind_In (N, N_Subprogram_Body,\n                                   N_Subprogram_Declaration)\n                   then\n@@ -2484,9 +2489,9 @@ package body Sem_Ch13 is\n \n                --  Invariant, Type_Invariant\n \n-               when Aspect_Invariant      |\n-                    Aspect_Type_Invariant =>\n-\n+               when Aspect_Invariant\n+                  | Aspect_Type_Invariant\n+               =>\n                   --  Analysis of the pragma will verify placement legality:\n                   --  an invariant must apply to a private type, or appear in\n                   --  the private part of a spec and apply to a completion.\n@@ -3376,9 +3381,9 @@ package body Sem_Ch13 is\n                --  generated yet because the evaluation of the boolean needs\n                --  to be delayed till the freeze point.\n \n-               when Boolean_Aspects      |\n-                    Library_Unit_Aspects =>\n-\n+               when Boolean_Aspects\n+                  | Library_Unit_Aspects\n+               =>\n                   Set_Is_Boolean_Aspect (Aspect);\n \n                   --  Lock_Free aspect only apply to protected objects\n@@ -4624,15 +4629,16 @@ package body Sem_Ch13 is\n             --  affect legality (except possibly to be rejected because they\n             --  are incompatible with the compilation target).\n \n-            when Attribute_Alignment      |\n-                 Attribute_Bit_Order      |\n-                 Attribute_Component_Size |\n-                 Attribute_Machine_Radix  |\n-                 Attribute_Object_Size    |\n-                 Attribute_Size           |\n-                 Attribute_Small          |\n-                 Attribute_Stream_Size    |\n-                 Attribute_Value_Size     =>\n+            when Attribute_Alignment\n+               | Attribute_Bit_Order\n+               | Attribute_Component_Size\n+               | Attribute_Machine_Radix\n+               | Attribute_Object_Size\n+               | Attribute_Size\n+               | Attribute_Small\n+               | Attribute_Stream_Size\n+               | Attribute_Value_Size\n+            =>\n                Kill_Rep_Clause (N);\n                return;\n \n@@ -4642,14 +4648,15 @@ package body Sem_Ch13 is\n             --  legality, e.g. failing to provide a stream attribute for a type\n             --  may make a program illegal.\n \n-            when Attribute_External_Tag        |\n-                 Attribute_Input               |\n-                 Attribute_Output              |\n-                 Attribute_Read                |\n-                 Attribute_Simple_Storage_Pool |\n-                 Attribute_Storage_Pool        |\n-                 Attribute_Storage_Size        |\n-                 Attribute_Write               =>\n+            when Attribute_External_Tag\n+               | Attribute_Input\n+               | Attribute_Output\n+               | Attribute_Read\n+               | Attribute_Simple_Storage_Pool\n+               | Attribute_Storage_Pool\n+               | Attribute_Storage_Size\n+               | Attribute_Write\n+            =>\n                null;\n \n             --  We do not do anything here with address clauses, they will be\n@@ -5142,8 +5149,7 @@ package body Sem_Ch13 is\n \n          --  Bit_Order attribute definition clause\n \n-         when Attribute_Bit_Order => Bit_Order : declare\n-         begin\n+         when Attribute_Bit_Order =>\n             if not Is_Record_Type (U_Ent) then\n                Error_Msg_N\n                  (\"Bit_Order can only be defined for record type\", Nam);\n@@ -5167,7 +5173,6 @@ package body Sem_Ch13 is\n                   end if;\n                end if;\n             end if;\n-         end Bit_Order;\n \n          --------------------\n          -- Component_Size --\n@@ -5261,8 +5266,8 @@ package body Sem_Ch13 is\n          -- CPU --\n          ---------\n \n-         when Attribute_CPU => CPU :\n-         begin\n+         when Attribute_CPU =>\n+\n             --  CPU attribute definition clause not allowed except from aspect\n             --  specification.\n \n@@ -5293,7 +5298,6 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"attribute& cannot be set with definition clause\", N);\n             end if;\n-         end CPU;\n \n          ----------------------\n          -- Default_Iterator --\n@@ -5355,8 +5359,8 @@ package body Sem_Ch13 is\n          -- Dispatching_Domain --\n          ------------------------\n \n-         when Attribute_Dispatching_Domain => Dispatching_Domain :\n-         begin\n+         when Attribute_Dispatching_Domain =>\n+\n             --  Dispatching_Domain attribute definition clause not allowed\n             --  except from aspect specification.\n \n@@ -5387,14 +5391,12 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"attribute& cannot be set with definition clause\", N);\n             end if;\n-         end Dispatching_Domain;\n \n          ------------------\n          -- External_Tag --\n          ------------------\n \n-         when Attribute_External_Tag => External_Tag :\n-         begin\n+         when Attribute_External_Tag =>\n             if not Is_Tagged_Type (U_Ent) then\n                Error_Msg_N (\"should be a tagged type\", Nam);\n             end if;\n@@ -5420,7 +5422,6 @@ package body Sem_Ch13 is\n                     (\"\\??corresponding internal tag cannot be obtained\", N);\n                end if;\n             end if;\n-         end External_Tag;\n \n          --------------------------\n          -- Implicit_Dereference --\n@@ -5445,8 +5446,8 @@ package body Sem_Ch13 is\n          -- Interrupt_Priority --\n          ------------------------\n \n-         when Attribute_Interrupt_Priority => Interrupt_Priority :\n-         begin\n+         when Attribute_Interrupt_Priority =>\n+\n             --  Interrupt_Priority attribute definition clause not allowed\n             --  except from aspect specification.\n \n@@ -5484,7 +5485,6 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"attribute& cannot be set with definition clause\", N);\n             end if;\n-         end Interrupt_Priority;\n \n          --------------\n          -- Iterable --\n@@ -5620,8 +5620,8 @@ package body Sem_Ch13 is\n          -- Priority --\n          --------------\n \n-         when Attribute_Priority => Priority :\n-         begin\n+         when Attribute_Priority =>\n+\n             --  Priority attribute definition clause not allowed except from\n             --  aspect specification.\n \n@@ -5656,7 +5656,6 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"attribute& cannot be set with definition clause\", N);\n             end if;\n-         end Priority;\n \n          ----------\n          -- Read --\n@@ -5672,8 +5671,7 @@ package body Sem_Ch13 is\n \n          --  Scalar_Storage_Order attribute definition clause\n \n-         when Attribute_Scalar_Storage_Order => Scalar_Storage_Order : declare\n-         begin\n+         when Attribute_Scalar_Storage_Order =>\n             if not (Is_Record_Type (U_Ent) or else Is_Array_Type (U_Ent)) then\n                Error_Msg_N\n                  (\"Scalar_Storage_Order can only be defined for record or \"\n@@ -5712,14 +5710,13 @@ package body Sem_Ch13 is\n                Set_SSO_Set_Low_By_Default  (Base_Type (U_Ent), False);\n                Set_SSO_Set_High_By_Default (Base_Type (U_Ent), False);\n             end if;\n-         end Scalar_Storage_Order;\n \n          --------------------------\n          -- Secondary_Stack_Size --\n          --------------------------\n \n-         when Attribute_Secondary_Stack_Size => Secondary_Stack_Size :\n-         begin\n+         when Attribute_Secondary_Stack_Size =>\n+\n             --  Secondary_Stack_Size attribute definition clause not allowed\n             --  except from aspect specification.\n \n@@ -5753,7 +5750,6 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"attribute& cannot be set with definition clause\", N);\n             end if;\n-         end Secondary_Stack_Size;\n \n          ----------\n          -- Size --\n@@ -5922,7 +5918,10 @@ package body Sem_Ch13 is\n \n          --  Storage_Pool attribute definition clause\n \n-         when Attribute_Storage_Pool | Attribute_Simple_Storage_Pool => declare\n+         when Attribute_Simple_Storage_Pool\n+            | Attribute_Storage_Pool\n+         =>\n+         Storage_Pool : declare\n             Pool : Entity_Id;\n             T    : Entity_Id;\n \n@@ -5933,8 +5932,7 @@ package body Sem_Ch13 is\n                   Nam);\n                return;\n \n-            elsif not\n-              Ekind_In (U_Ent, E_Access_Type, E_General_Access_Type)\n+            elsif not Ekind_In (U_Ent, E_Access_Type, E_General_Access_Type)\n             then\n                Error_Msg_N\n                  (\"storage pool can only be given for access types\", Nam);\n@@ -6079,7 +6077,7 @@ package body Sem_Ch13 is\n                Error_Msg_N (\"incorrect reference to a Storage Pool\", Expr);\n                return;\n             end if;\n-         end;\n+         end Storage_Pool;\n \n          ------------------\n          -- Storage_Size --\n@@ -7601,14 +7599,18 @@ package body Sem_Ch13 is\n \n             --  And\n \n-            when N_Op_And | N_And_Then =>\n+            when N_And_Then\n+               | N_Op_And\n+            =>\n                return Get_RList (Left_Opnd (Exp))\n                         and\n                       Get_RList (Right_Opnd (Exp));\n \n             --  Or\n \n-            when N_Op_Or | N_Or_Else =>\n+            when N_Op_Or\n+               | N_Or_Else\n+            =>\n                return Get_RList (Left_Opnd (Exp))\n                         or\n                       Get_RList (Right_Opnd (Exp));\n@@ -9148,9 +9150,9 @@ package body Sem_Ch13 is\n \n          --  Aspects taking an optional boolean argument\n \n-         when Boolean_Aspects      |\n-              Library_Unit_Aspects =>\n-\n+         when Boolean_Aspects\n+            | Library_Unit_Aspects\n+         =>\n             T := Standard_Boolean;\n \n          --  Aspects corresponding to attribute definition clauses\n@@ -9161,7 +9163,9 @@ package body Sem_Ch13 is\n          when Aspect_Attach_Handler =>\n             T := RTE (RE_Interrupt_ID);\n \n-         when Aspect_Bit_Order | Aspect_Scalar_Storage_Order =>\n+         when Aspect_Bit_Order\n+            | Aspect_Scalar_Storage_Order\n+         =>\n             T := RTE (RE_Bit_Order);\n \n          when Aspect_Convention =>\n@@ -9195,7 +9199,9 @@ package body Sem_Ch13 is\n          when Aspect_Link_Name =>\n             T := Standard_String;\n \n-         when Aspect_Priority | Aspect_Interrupt_Priority =>\n+         when Aspect_Interrupt_Priority\n+            | Aspect_Priority\n+         =>\n             T := Standard_Integer;\n \n          when Aspect_Relative_Deadline =>\n@@ -9217,14 +9223,15 @@ package body Sem_Ch13 is\n          when Aspect_Storage_Pool =>\n             T := Class_Wide_Type (RTE (RE_Root_Storage_Pool));\n \n-         when Aspect_Alignment      |\n-              Aspect_Component_Size |\n-              Aspect_Machine_Radix  |\n-              Aspect_Object_Size    |\n-              Aspect_Size           |\n-              Aspect_Storage_Size   |\n-              Aspect_Stream_Size    |\n-              Aspect_Value_Size     =>\n+         when Aspect_Alignment\n+            | Aspect_Component_Size\n+            | Aspect_Machine_Radix\n+            | Aspect_Object_Size\n+            | Aspect_Size\n+            | Aspect_Storage_Size\n+            | Aspect_Stream_Size\n+            | Aspect_Value_Size\n+         =>\n             T := Any_Integer;\n \n          when Aspect_Linker_Section =>\n@@ -9236,23 +9243,25 @@ package body Sem_Ch13 is\n          --  Special case, the expression of these aspects is just an entity\n          --  that does not need any resolution, so just analyze.\n \n-         when Aspect_Input      |\n-              Aspect_Output     |\n-              Aspect_Read       |\n-              Aspect_Suppress   |\n-              Aspect_Unsuppress |\n-              Aspect_Warnings   |\n-              Aspect_Write      =>\n+         when Aspect_Input\n+            | Aspect_Output\n+            | Aspect_Read\n+            | Aspect_Suppress\n+            | Aspect_Unsuppress\n+            | Aspect_Warnings\n+            | Aspect_Write\n+         =>\n             Analyze (Expression (ASN));\n             return;\n \n          --  Same for Iterator aspects, where the expression is a function\n          --  name. Legality rules are checked separately.\n \n-         when Aspect_Constant_Indexing |\n-              Aspect_Default_Iterator  |\n-              Aspect_Iterator_Element  |\n-              Aspect_Variable_Indexing =>\n+         when Aspect_Constant_Indexing\n+            | Aspect_Default_Iterator\n+            | Aspect_Iterator_Element\n+            | Aspect_Variable_Indexing\n+         =>\n             Analyze (Expression (ASN));\n             return;\n \n@@ -9289,51 +9298,53 @@ package body Sem_Ch13 is\n \n          --  Invariant/Predicate take boolean expressions\n \n-         when Aspect_Dynamic_Predicate |\n-              Aspect_Invariant         |\n-              Aspect_Predicate         |\n-              Aspect_Static_Predicate  |\n-              Aspect_Type_Invariant    =>\n+         when Aspect_Dynamic_Predicate\n+            | Aspect_Invariant\n+            | Aspect_Predicate\n+            | Aspect_Static_Predicate\n+            | Aspect_Type_Invariant\n+         =>\n             T := Standard_Boolean;\n \n          when Aspect_Predicate_Failure =>\n             T := Standard_String;\n \n          --  Here is the list of aspects that don't require delay analysis\n \n-         when Aspect_Abstract_State             |\n-              Aspect_Annotate                   |\n-              Aspect_Async_Readers              |\n-              Aspect_Async_Writers              |\n-              Aspect_Constant_After_Elaboration |\n-              Aspect_Contract_Cases             |\n-              Aspect_Default_Initial_Condition  |\n-              Aspect_Depends                    |\n-              Aspect_Dimension                  |\n-              Aspect_Dimension_System           |\n-              Aspect_Effective_Reads            |\n-              Aspect_Effective_Writes           |\n-              Aspect_Extensions_Visible         |\n-              Aspect_Ghost                      |\n-              Aspect_Global                     |\n-              Aspect_Implicit_Dereference       |\n-              Aspect_Initial_Condition          |\n-              Aspect_Initializes                |\n-              Aspect_Max_Queue_Length           |\n-              Aspect_Obsolescent                |\n-              Aspect_Part_Of                    |\n-              Aspect_Post                       |\n-              Aspect_Postcondition              |\n-              Aspect_Pre                        |\n-              Aspect_Precondition               |\n-              Aspect_Refined_Depends            |\n-              Aspect_Refined_Global             |\n-              Aspect_Refined_Post               |\n-              Aspect_Refined_State              |\n-              Aspect_SPARK_Mode                 |\n-              Aspect_Test_Case                  |\n-              Aspect_Unimplemented              |\n-              Aspect_Volatile_Function          =>\n+         when Aspect_Abstract_State\n+            | Aspect_Annotate\n+            | Aspect_Async_Readers\n+            | Aspect_Async_Writers\n+            | Aspect_Constant_After_Elaboration\n+            | Aspect_Contract_Cases\n+            | Aspect_Default_Initial_Condition\n+            | Aspect_Depends\n+            | Aspect_Dimension\n+            | Aspect_Dimension_System\n+            | Aspect_Effective_Reads\n+            | Aspect_Effective_Writes\n+            | Aspect_Extensions_Visible\n+            | Aspect_Ghost\n+            | Aspect_Global\n+            | Aspect_Implicit_Dereference\n+            | Aspect_Initial_Condition\n+            | Aspect_Initializes\n+            | Aspect_Max_Queue_Length\n+            | Aspect_Obsolescent\n+            | Aspect_Part_Of\n+            | Aspect_Post\n+            | Aspect_Postcondition\n+            | Aspect_Pre\n+            | Aspect_Precondition\n+            | Aspect_Refined_Depends\n+            | Aspect_Refined_Global\n+            | Aspect_Refined_Post\n+            | Aspect_Refined_State\n+            | Aspect_SPARK_Mode\n+            | Aspect_Test_Case\n+            | Aspect_Unimplemented\n+            | Aspect_Volatile_Function\n+         =>\n             raise Program_Error;\n \n       end case;\n@@ -9375,11 +9386,10 @@ package body Sem_Ch13 is\n             if Present (Address_Clause (Entity ((Nod)))) then\n                Error_Msg_NE\n                  (\"invalid address clause for initialized object &!\",\n-                           Nod, U_Ent);\n-               Error_Msg_NE\n-                 (\"address for& cannot\" &\n-                    \" depend on another address clause! (RM 13.1(22))!\",\n                   Nod, U_Ent);\n+               Error_Msg_NE\n+                 (\"address for& cannot depend on another address clause! \"\n+                  & \"(RM 13.1(22))!\", Nod, U_Ent);\n \n             elsif In_Same_Source_Unit (Entity (Nod), U_Ent)\n               and then Sloc (U_Ent) < Sloc (Entity (Nod))\n@@ -9409,9 +9419,8 @@ package body Sem_Ch13 is\n                     (\"invalid address clause for initialized object &!\",\n                      Nod, U_Ent);\n                   Error_Msg_N\n-                    (\"\\address cannot depend on component\" &\n-                     \" of discriminated record (RM 13.1(22))!\",\n-                     Nod);\n+                    (\"\\address cannot depend on component of discriminated \"\n+                     & \"record (RM 13.1(22))!\", Nod);\n                else\n                   Check_At_Constant_Address (Prefix (Nod));\n                end if;\n@@ -9442,10 +9451,14 @@ package body Sem_Ch13 is\n          end if;\n \n          case Nkind (Nod) is\n-            when N_Empty | N_Error =>\n+            when N_Empty\n+               | N_Error\n+            =>\n                return;\n \n-            when N_Identifier | N_Expanded_Name =>\n+            when N_Expanded_Name\n+               | N_Identifier\n+            =>\n                Ent := Entity (Nod);\n \n                --  We need to look at the original node if it is different\n@@ -9551,9 +9564,10 @@ package body Sem_Ch13 is\n                   Set_Etype (Nod, Base_Type (Etype (Nod)));\n                end if;\n \n-            when N_Real_Literal      |\n-                 N_String_Literal    |\n-                 N_Character_Literal =>\n+            when N_Character_Literal\n+               | N_Real_Literal\n+               | N_String_Literal\n+            =>\n                return;\n \n             when N_Range =>\n@@ -9602,17 +9616,21 @@ package body Sem_Ch13 is\n             when N_Null =>\n                return;\n \n-            when N_Binary_Op | N_Short_Circuit | N_Membership_Test =>\n+            when N_Binary_Op\n+               | N_Membership_Test\n+               | N_Short_Circuit\n+            =>\n                Check_Expr_Constants (Left_Opnd (Nod));\n                Check_Expr_Constants (Right_Opnd (Nod));\n \n             when N_Unary_Op =>\n                Check_Expr_Constants (Right_Opnd (Nod));\n \n-            when N_Type_Conversion           |\n-                 N_Qualified_Expression      |\n-                 N_Allocator                 |\n-                 N_Unchecked_Type_Conversion =>\n+            when N_Allocator\n+               | N_Qualified_Expression\n+               | N_Type_Conversion\n+               | N_Unchecked_Type_Conversion\n+            =>\n                Check_Expr_Constants (Expression (Nod));\n \n             when N_Function_Call =>\n@@ -12706,14 +12724,15 @@ package body Sem_Ch13 is\n                --  subprograms, or that may mention current instances of\n                --  types. These will require special handling (???TBD).\n \n-               when Aspect_Predicate         |\n-                    Aspect_Predicate_Failure |\n-                    Aspect_Invariant         =>\n+               when Aspect_Invariant\n+                  | Aspect_Predicate\n+                  | Aspect_Predicate_Failure\n+               =>\n                   null;\n \n-               when Aspect_Dynamic_Predicate |\n-                    Aspect_Static_Predicate  =>\n-\n+               when Aspect_Dynamic_Predicate\n+                  | Aspect_Static_Predicate\n+               =>\n                   --  Build predicate function specification and preanalyze\n                   --  expression after type replacement.\n \n@@ -12747,18 +12766,19 @@ package body Sem_Ch13 is\n                when others =>\n                   if Present (Expr) then\n                      case Aspect_Argument (A_Id) is\n-                        when Expression | Optional_Expression  =>\n+                        when Expression\n+                           | Optional_Expression\n+                        =>\n                            Analyze_And_Resolve (Expression (ASN));\n \n-                        when Name | Optional_Name =>\n+                        when Name\n+                           | Optional_Name\n+                        =>\n                            if Nkind (Expr) = N_Identifier then\n                               Find_Direct_Name (Expr);\n \n                            elsif Nkind (Expr) = N_Selected_Component then\n                               Find_Selected_Component (Expr);\n-\n-                           else\n-                              null;\n                            end if;\n                      end case;\n                   end if;"}, {"sha": "ab1e8c04fa91161762d8386269d46fbb794e2529", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 49, "deletions": 37, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1847,7 +1847,6 @@ package body Sem_Ch3 is\n \n             when others =>\n                return False;\n-\n          end case;\n       end Contains_POC;\n \n@@ -2892,7 +2891,6 @@ package body Sem_Ch3 is\n \n             when others =>\n                raise Program_Error;\n-\n          end case;\n       end if;\n \n@@ -4869,8 +4867,8 @@ package body Sem_Ch3 is\n \n          case Ekind (T) is\n             when Array_Kind =>\n-               Set_Ekind                       (Id, E_Array_Subtype);\n-               Copy_Array_Subtype_Attributes   (Id, T);\n+               Set_Ekind                     (Id, E_Array_Subtype);\n+               Copy_Array_Subtype_Attributes (Id, T);\n \n             when Decimal_Fixed_Point_Kind =>\n                Set_Ekind                (Id, E_Decimal_Fixed_Point_Subtype);\n@@ -4942,7 +4940,9 @@ package body Sem_Ch3 is\n                   Set_Equivalent_Type   (Id, Equivalent_Type    (T));\n                end if;\n \n-            when E_Record_Type | E_Record_Subtype =>\n+            when E_Record_Subtype\n+               | E_Record_Type\n+            =>\n                Set_Ekind                (Id, E_Record_Subtype);\n \n                if Ekind (T) = E_Record_Subtype\n@@ -5097,7 +5097,7 @@ package body Sem_Ch3 is\n                   Set_Stored_Constraint_From_Discriminant_Constraint (Id);\n                end if;\n \n-            when Incomplete_Kind  =>\n+            when Incomplete_Kind =>\n                if Ada_Version >= Ada_2005 then\n \n                   --  In Ada 2005 an incomplete type can be explicitly tagged:\n@@ -5808,9 +5808,10 @@ package body Sem_Ch3 is\n       Set_Is_Internal (Anon);\n \n       case Nkind (N) is\n-         when N_Component_Declaration       |\n-           N_Unconstrained_Array_Definition |\n-           N_Constrained_Array_Definition   =>\n+         when N_Constrained_Array_Definition\n+            | N_Component_Declaration\n+            | N_Unconstrained_Array_Definition\n+         =>\n             Comp := Component_Definition (N);\n             Acc  := Access_Definition (Comp);\n \n@@ -9103,9 +9104,10 @@ package body Sem_Ch3 is\n          when Array_Kind =>\n             Build_Derived_Array_Type (N, Parent_Type,  Derived_Type);\n \n-         when E_Record_Type\n+         when Class_Wide_Kind\n             | E_Record_Subtype\n-            | Class_Wide_Kind  =>\n+            | E_Record_Type\n+         =>\n             Build_Derived_Record_Type\n               (N, Parent_Type, Derived_Type, Derive_Subps);\n             return;\n@@ -11660,12 +11662,13 @@ package body Sem_Ch3 is\n       Save_Homonym     := Homonym (Priv);\n \n       case Ekind (Full_Base) is\n-         when E_Record_Type    |\n-              E_Record_Subtype |\n-              Class_Wide_Kind  |\n-              Private_Kind     |\n-              Task_Kind        |\n-              Protected_Kind   =>\n+         when Class_Wide_Kind\n+            | Private_Kind\n+            | Protected_Kind\n+            | Task_Kind\n+            | E_Record_Subtype\n+            | E_Record_Type\n+         =>\n             Copy_Node (Priv, Full);\n \n             Set_Has_Discriminants\n@@ -17958,8 +17961,9 @@ package body Sem_Ch3 is\n    is\n    begin\n       case T_Kind is\n-         when Enumeration_Kind |\n-              Integer_Kind =>\n+         when Enumeration_Kind\n+            | Integer_Kind\n+         =>\n             return Constraint_Kind = N_Range_Constraint;\n \n          when Decimal_Fixed_Point_Kind =>\n@@ -17974,14 +17978,15 @@ package body Sem_Ch3 is\n             return Nkind_In (Constraint_Kind, N_Digits_Constraint,\n                                               N_Range_Constraint);\n \n-         when Access_Kind       |\n-              Array_Kind        |\n-              E_Record_Type     |\n-              E_Record_Subtype  |\n-              Class_Wide_Kind   |\n-              E_Incomplete_Type |\n-              Private_Kind      |\n-              Concurrent_Kind  =>\n+         when Access_Kind\n+            | Array_Kind\n+            | Class_Wide_Kind\n+            | Concurrent_Kind\n+            | Private_Kind\n+            | E_Incomplete_Type\n+            | E_Record_Subtype\n+            | E_Record_Type\n+         =>\n             return Constraint_Kind = N_Index_Or_Discriminant_Constraint;\n \n          when others =>\n@@ -18817,7 +18822,11 @@ package body Sem_Ch3 is\n       end if;\n \n       case Nkind (Original_Node (Exp)) is\n-         when N_Aggregate | N_Extension_Aggregate | N_Function_Call | N_Op =>\n+         when N_Aggregate\n+            | N_Extension_Aggregate\n+            | N_Function_Call\n+            | N_Op\n+         =>\n             return True;\n \n          when N_Identifier =>\n@@ -18837,16 +18846,18 @@ package body Sem_Ch3 is\n          --  A return statement for a build-in-place function returning a\n          --  synchronized type also introduces an unchecked conversion.\n \n-         when N_Type_Conversion           |\n-              N_Unchecked_Type_Conversion =>\n+         when N_Type_Conversion\n+            | N_Unchecked_Type_Conversion\n+         =>\n             return not Comes_From_Source (Exp)\n               and then\n                 OK_For_Limited_Init_In_05\n                   (Typ, Expression (Original_Node (Exp)));\n \n-         when N_Indexed_Component     |\n-              N_Selected_Component    |\n-              N_Explicit_Dereference  =>\n+         when N_Explicit_Dereference\n+            | N_Indexed_Component\n+            | N_Selected_Component\n+         =>\n             return Nkind (Exp) = N_Function_Call;\n \n          --  A use of 'Input is a function call, hence allowed. Normally the\n@@ -20891,10 +20902,11 @@ package body Sem_Ch3 is\n                Constrain_Integer (Def_Id, S);\n                Inherit_Predicate_Flags (Def_Id, Subtype_Mark_Id);\n \n-            when E_Record_Type     |\n-                 E_Record_Subtype  |\n-                 Class_Wide_Kind   |\n-                 E_Incomplete_Type =>\n+            when Class_Wide_Kind\n+               | E_Incomplete_Type\n+               | E_Record_Subtype\n+               | E_Record_Type\n+            =>\n                Constrain_Discriminated_Type (Def_Id, S, Related_Nod);\n \n                if Ekind (Def_Id) = E_Incomplete_Type then"}, {"sha": "d2fa0a4d899541196c4164565591334de91ffbf6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 32, "deletions": 26, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3656,54 +3656,59 @@ package body Sem_Ch4 is\n          --  Otherwise action depends on operator\n \n          case Op_Name is\n-            when Name_Op_Add      |\n-                 Name_Op_Subtract |\n-                 Name_Op_Multiply |\n-                 Name_Op_Divide   |\n-                 Name_Op_Mod      |\n-                 Name_Op_Rem      |\n-                 Name_Op_Expon    =>\n+            when Name_Op_Add\n+               | Name_Op_Divide\n+               | Name_Op_Expon\n+               | Name_Op_Mod\n+               | Name_Op_Multiply\n+               | Name_Op_Rem\n+               | Name_Op_Subtract\n+            =>\n                Find_Arithmetic_Types (Act1, Act2, Op_Id, N);\n \n-            when Name_Op_And      |\n-                 Name_Op_Or       |\n-                 Name_Op_Xor      =>\n+            when Name_Op_And\n+               | Name_Op_Or\n+               | Name_Op_Xor\n+            =>\n                Find_Boolean_Types (Act1, Act2, Op_Id, N);\n \n-            when Name_Op_Lt       |\n-                 Name_Op_Le       |\n-                 Name_Op_Gt       |\n-                 Name_Op_Ge       =>\n+            when Name_Op_Ge\n+               | Name_Op_Gt\n+               | Name_Op_Le\n+               | Name_Op_Lt\n+            =>\n                Find_Comparison_Types (Act1, Act2, Op_Id,  N);\n \n-            when Name_Op_Eq       |\n-                 Name_Op_Ne       =>\n+            when Name_Op_Eq\n+               | Name_Op_Ne\n+            =>\n                Find_Equality_Types (Act1, Act2, Op_Id,  N);\n \n-            when Name_Op_Concat   =>\n+            when Name_Op_Concat =>\n                Find_Concatenation_Types (Act1, Act2, Op_Id, N);\n \n             --  Is this when others, or should it be an abort???\n \n-            when others           =>\n+            when others =>\n                null;\n          end case;\n \n       --  Unary operator case\n \n       else\n          case Op_Name is\n-            when Name_Op_Subtract |\n-                 Name_Op_Add      |\n-                 Name_Op_Abs      =>\n+            when Name_Op_Abs\n+               | Name_Op_Add\n+               | Name_Op_Subtract\n+            =>\n                Find_Unary_Types (Act1, Op_Id, N);\n \n-            when Name_Op_Not      =>\n+            when Name_Op_Not =>\n                Find_Negation_Types (Act1, Op_Id, N);\n \n             --  Is this when others correct, or should it be an abort???\n \n-            when others           =>\n+            when others =>\n                null;\n          end case;\n       end if;\n@@ -6688,7 +6693,6 @@ package body Sem_Ch4 is\n       --  Now test the entity we got to see if it is a bad case\n \n       case Ekind (Entity (Enode)) is\n-\n          when E_Package =>\n             Error_Msg_N\n               (\"package name cannot be used as operand\", Enode);\n@@ -6713,13 +6717,15 @@ package body Sem_Ch4 is\n             Error_Msg_N\n               (\"exception name cannot be used as operand\", Enode);\n \n-         when E_Block | E_Label | E_Loop =>\n+         when E_Block\n+            | E_Label\n+            | E_Loop\n+         =>\n             Error_Msg_N\n               (\"label name cannot be used as operand\", Enode);\n \n          when others =>\n             return False;\n-\n       end case;\n \n       return True;"}, {"sha": "70b4a36a2b535ac0e8f5135e6bc7089f58e7e09c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1685,8 +1685,8 @@ package body Sem_Ch6 is\n \n       elsif Nkind (P) = N_Selected_Component\n         and then Ekind_In (Entity (Selector_Name (P)), E_Entry,\n-                                                       E_Procedure,\n-                                                       E_Function)\n+                                                       E_Function,\n+                                                       E_Procedure)\n       then\n          Analyze_Call_And_Resolve;\n \n@@ -1702,7 +1702,7 @@ package body Sem_Ch6 is\n \n          New_N :=\n            Make_Indexed_Component (Loc,\n-             Prefix => New_Copy (P),\n+             Prefix      => New_Copy (P),\n              Expressions => Actuals);\n          Set_Name (N, New_N);\n          Set_Etype (New_N, Standard_Void_Type);\n@@ -7690,8 +7690,9 @@ package body Sem_Ch6 is\n                --  All but \"&\" and \"**\" have same-types parameters\n \n                case Op is\n-                  when Name_Op_Concat |\n-                       Name_Op_Expon  =>\n+                  when Name_Op_Concat\n+                     | Name_Op_Expon\n+                  =>\n                      null;\n \n                   when others =>\n@@ -7703,37 +7704,42 @@ package body Sem_Ch6 is\n                --  Check parameter and result types\n \n                case Op is\n-                  when Name_Op_And |\n-                       Name_Op_Or  |\n-                       Name_Op_Xor =>\n+                  when Name_Op_And\n+                     | Name_Op_Or\n+                     | Name_Op_Xor\n+                  =>\n                      return\n                        Is_Boolean_Type (Result_Type)\n                          and then Result_Type = Type_1;\n \n-                  when Name_Op_Mod |\n-                       Name_Op_Rem =>\n+                  when Name_Op_Mod\n+                     | Name_Op_Rem\n+                  =>\n                      return\n                        Is_Integer_Type (Result_Type)\n                          and then Result_Type = Type_1;\n \n-                  when Name_Op_Add      |\n-                       Name_Op_Divide   |\n-                       Name_Op_Multiply |\n-                       Name_Op_Subtract =>\n+                  when Name_Op_Add\n+                     | Name_Op_Divide\n+                     | Name_Op_Multiply\n+                     | Name_Op_Subtract\n+                  =>\n                      return\n                        Is_Numeric_Type (Result_Type)\n                          and then Result_Type = Type_1;\n \n-                  when Name_Op_Eq |\n-                       Name_Op_Ne =>\n+                  when Name_Op_Eq\n+                     | Name_Op_Ne\n+                  =>\n                      return\n                        Is_Boolean_Type (Result_Type)\n                          and then not Is_Limited_Type (Type_1);\n \n-                  when Name_Op_Ge |\n-                       Name_Op_Gt |\n-                       Name_Op_Le |\n-                       Name_Op_Lt =>\n+                  when Name_Op_Ge\n+                     | Name_Op_Gt\n+                     | Name_Op_Le\n+                     | Name_Op_Lt\n+                  =>\n                      return\n                        Is_Boolean_Type (Result_Type)\n                          and then (Is_Array_Type (Type_1)\n@@ -7758,9 +7764,10 @@ package body Sem_Ch6 is\n \n          else\n             case Op is\n-               when Name_Op_Abs      |\n-                    Name_Op_Add      |\n-                    Name_Op_Subtract =>\n+               when Name_Op_Abs\n+                  | Name_Op_Add\n+                  | Name_Op_Subtract\n+               =>\n                   return\n                     Is_Numeric_Type (Result_Type)\n                       and then Result_Type = Type_1;\n@@ -8480,7 +8487,6 @@ package body Sem_Ch6 is\n \n       else\n          case Nkind (E1) is\n-\n             when N_Aggregate =>\n                return\n                  FCL (Expressions (E1), Expressions (E2))\n@@ -8550,7 +8556,9 @@ package body Sem_Ch6 is\n                    and then FCE (Left_Opnd  (E1), Left_Opnd  (E2))\n                    and then FCE (Right_Opnd (E1), Right_Opnd (E2));\n \n-            when N_Short_Circuit | N_Membership_Test =>\n+            when N_Membership_Test\n+               | N_Short_Circuit\n+            =>\n                return\n                  FCE (Left_Opnd  (E1), Left_Opnd  (E2))\n                    and then\n@@ -8777,7 +8785,6 @@ package body Sem_Ch6 is\n \n             when others =>\n                return True;\n-\n          end case;\n       end if;\n    end Fully_Conformant_Expressions;"}, {"sha": "c81d425276729f51ae0f1d4dbd1a622ca0c636f5", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -2694,19 +2694,23 @@ package body Sem_Ch8 is\n                --  operation).\n \n                case Attribute_Name (Nam) is\n-                  when Name_Input  =>\n+                  when Name_Input =>\n                      Stream_Prim :=\n                        Find_Optional_Prim_Op (Prefix_Type, TSS_Stream_Input);\n+\n                   when Name_Output =>\n                      Stream_Prim :=\n                        Find_Optional_Prim_Op (Prefix_Type, TSS_Stream_Output);\n-                  when Name_Read   =>\n+\n+                  when Name_Read =>\n                      Stream_Prim :=\n                        Find_Optional_Prim_Op (Prefix_Type, TSS_Stream_Read);\n-                  when Name_Write  =>\n+\n+                  when Name_Write =>\n                      Stream_Prim :=\n                        Find_Optional_Prim_Op (Prefix_Type, TSS_Stream_Write);\n-                  when others      =>\n+\n+                  when others =>\n                      Error_Msg_N\n                        (\"attribute must be a primitive dispatching operation\",\n                         Nam);\n@@ -5710,8 +5714,8 @@ package body Sem_Ch8 is\n \n                         --  If we don't know now, generate reference later\n \n-                     when Unknown =>\n-                        Deferred_References.Append ((E, N));\n+                        when Unknown =>\n+                           Deferred_References.Append ((E, N));\n                      end case;\n                   end if;\n                end if;\n@@ -6254,8 +6258,10 @@ package body Sem_Ch8 is\n          case Is_LHS (N) is\n             when Yes =>\n                Generate_Reference (Id, N, 'm');\n+\n             when No =>\n                Generate_Reference (Id, N, 'r');\n+\n             when Unknown =>\n                Deferred_References.Append ((Id, N));\n          end case;\n@@ -7655,7 +7661,11 @@ package body Sem_Ch8 is\n          --  contains a declaration for a derived Boolean type, or for an\n          --  array of Boolean type.\n \n-         when Name_Op_And | Name_Op_Not | Name_Op_Or  | Name_Op_Xor =>\n+         when Name_Op_And\n+            | Name_Op_Not\n+            | Name_Op_Or\n+            | Name_Op_Xor\n+         =>\n             while Id /= Priv_Id loop\n                if Valid_Boolean_Arg (Id) and then Is_Base_Type (Id) then\n                   Add_Implicit_Operator (Id);\n@@ -7667,7 +7677,9 @@ package body Sem_Ch8 is\n \n          --  Equality: look for any non-limited type (result is Boolean)\n \n-         when Name_Op_Eq | Name_Op_Ne =>\n+         when Name_Op_Eq\n+            | Name_Op_Ne\n+         =>\n             while Id /= Priv_Id loop\n                if Is_Type (Id)\n                  and then not Is_Limited_Type (Id)\n@@ -7682,7 +7694,11 @@ package body Sem_Ch8 is\n \n          --  Comparison operators: scalar type, or array of scalar\n \n-         when Name_Op_Lt | Name_Op_Le | Name_Op_Gt | Name_Op_Ge =>\n+         when Name_Op_Ge\n+            | Name_Op_Gt\n+            | Name_Op_Le\n+            | Name_Op_Lt\n+         =>\n             while Id /= Priv_Id loop\n                if (Is_Scalar_Type (Id)\n                     or else (Is_Array_Type (Id)\n@@ -7698,14 +7714,15 @@ package body Sem_Ch8 is\n \n          --  Arithmetic operators: any numeric type\n \n-         when Name_Op_Abs      |\n-              Name_Op_Add      |\n-              Name_Op_Mod      |\n-              Name_Op_Rem      |\n-              Name_Op_Subtract |\n-              Name_Op_Multiply |\n-              Name_Op_Divide   |\n-              Name_Op_Expon    =>\n+         when Name_Op_Abs\n+            | Name_Op_Add\n+            | Name_Op_Divide\n+            | Name_Op_Expon\n+            | Name_Op_Mod\n+            | Name_Op_Multiply\n+            | Name_Op_Rem\n+            | Name_Op_Subtract\n+         =>\n             while Id /= Priv_Id loop\n                if Is_Numeric_Type (Id) and then Is_Base_Type (Id) then\n                   Add_Implicit_Operator (Id);\n@@ -7733,13 +7750,13 @@ package body Sem_Ch8 is\n          --  What is the others condition here? Should we be using a\n          --  subtype of Name_Id that would restrict to operators ???\n \n-         when others => null;\n+         when others =>\n+            null;\n       end case;\n \n       --  If we fall through, then we do not have an implicit operator\n \n       return False;\n-\n    end Has_Implicit_Operator;\n \n    -----------------------------------"}, {"sha": "97c9335c4f6a56e04b8da3291d77755201963380", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -292,14 +292,14 @@ package body Sem_Ch9 is\n                      pragma Assert (Nkind (Attr) = N_Attribute_Reference);\n \n                      case Attribute_Name (Attr) is\n-                        when Name_Min             |\n-                             Name_Max             |\n-                             Name_Pred            |\n-                             Name_Succ            |\n-                             Name_Value           |\n-                             Name_Wide_Value      |\n-                             Name_Wide_Wide_Value =>\n-\n+                        when Name_Max\n+                           | Name_Min\n+                           | Name_Pred\n+                           | Name_Succ\n+                           | Name_Value\n+                           | Name_Wide_Value\n+                           | Name_Wide_Wide_Value\n+                        =>\n                            --  A language-defined attribute denotes a static\n                            --  function if the prefix denotes a static scalar\n                            --  subtype, and if the parameter and result types\n@@ -326,7 +326,8 @@ package body Sem_Ch9 is\n                               return False;\n                            end if;\n \n-                        when others => return False;\n+                        when others =>\n+                           return False;\n                      end case;\n                   end Is_Static_Function;\n \n@@ -892,13 +893,18 @@ package body Sem_Ch9 is\n          loop\n             P := Parent (P);\n             case Nkind (P) is\n-               when N_Task_Body | N_Compilation_Unit =>\n+               when N_Compilation_Unit\n+                  | N_Task_Body\n+               =>\n                   exit;\n+\n                when N_Asynchronous_Select =>\n-                  Error_Msg_N (\"accept statements are not allowed within\" &\n-                               \" an asynchronous select inner\" &\n-                               \" to the enclosing task body\", N);\n+                  Error_Msg_N\n+                    (\"accept statements are not allowed within an \"\n+                     & \"asynchronous select inner to the enclosing task body\",\n+                     N);\n                   exit;\n+\n                when others =>\n                   null;\n             end case;"}, {"sha": "44794ba1e0a5e691a53062d037f43ad46c95a0e2", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1147,22 +1147,23 @@ package body Sem_Dim is\n          when N_Extended_Return_Statement =>\n             Analyze_Dimension_Extended_Return_Statement (N);\n \n-         when N_Attribute_Reference       |\n-              N_Expanded_Name             |\n-              N_Explicit_Dereference      |\n-              N_Function_Call             |\n-              N_Indexed_Component         |\n-              N_Qualified_Expression      |\n-              N_Selected_Component        |\n-              N_Slice                     |\n-              N_Type_Conversion           |\n-              N_Unchecked_Type_Conversion =>\n+         when N_Attribute_Reference\n+            | N_Expanded_Name\n+            | N_Explicit_Dereference\n+            | N_Function_Call\n+            | N_Indexed_Component\n+            | N_Qualified_Expression\n+            | N_Selected_Component\n+            | N_Slice\n+            | N_Type_Conversion\n+            | N_Unchecked_Type_Conversion\n+         =>\n             Analyze_Dimension_Has_Etype (N);\n \n          --  In the presence of a repaired syntax error, an identifier\n          --  may be introduced without a usable type.\n \n-         when  N_Identifier                =>\n+         when N_Identifier =>\n             if Present (Etype (N)) then\n                Analyze_Dimension_Has_Etype (N);\n             end if;\n@@ -1187,8 +1188,8 @@ package body Sem_Dim is\n          when N_Unary_Op =>\n             Analyze_Dimension_Unary_Op (N);\n \n-         when others => null;\n-\n+         when others =>\n+            null;\n       end case;\n    end Analyze_Dimension;\n \n@@ -2021,11 +2022,13 @@ package body Sem_Dim is\n       --  table from growing uselessly.\n \n       case Nkind (N) is\n-         when N_Attribute_Reference |\n-              N_Indexed_Component   =>\n+         when N_Attribute_Reference\n+            | N_Indexed_Component\n+         =>\n             declare\n-               Expr  : Node_Id;\n                Exprs : constant List_Id := Expressions (N);\n+               Expr  : Node_Id;\n+\n             begin\n                if Present (Exprs) then\n                   Expr := First (Exprs);\n@@ -2036,15 +2039,17 @@ package body Sem_Dim is\n                end if;\n             end;\n \n-         when N_Qualified_Expression      |\n-              N_Type_Conversion           |\n-              N_Unchecked_Type_Conversion =>\n+         when N_Qualified_Expression\n+            | N_Type_Conversion\n+            | N_Unchecked_Type_Conversion\n+         =>\n             Remove_Dimensions (Expression (N));\n \n          when N_Selected_Component =>\n             Remove_Dimensions (Selector_Name (N));\n \n-         when others => null;\n+         when others =>\n+            null;\n       end case;\n    end Analyze_Dimension_Has_Etype;\n \n@@ -2273,18 +2278,21 @@ package body Sem_Dim is\n    procedure Analyze_Dimension_Unary_Op (N : Node_Id) is\n    begin\n       case Nkind (N) is\n-         when N_Op_Plus | N_Op_Minus | N_Op_Abs =>\n \n-            --  Propagate the dimension if the operand is not dimensionless\n+         --  Propagate the dimension if the operand is not dimensionless\n \n+         when N_Op_Abs\n+            | N_Op_Minus\n+            | N_Op_Plus\n+         =>\n             declare\n                R : constant Node_Id := Right_Opnd (N);\n             begin\n                Move_Dimensions (R, N);\n             end;\n \n-         when others => null;\n-\n+         when others =>\n+            null;\n       end case;\n    end Analyze_Dimension_Unary_Op;\n \n@@ -3502,22 +3510,14 @@ package body Sem_Dim is\n       function Belong_To_Numeric_Literal (C : Character) return Boolean is\n       begin\n          case C is\n-            when '0' .. '9' |\n-                 '_'        |\n-                 '.'        |\n-                 'e'        |\n-                 '#'        |\n-                 'A'        |\n-                 'B'        |\n-                 'C'        |\n-                 'D'        |\n-                 'E'        |\n-                 'F'        =>\n+            when '0' .. '9'\n+               | '_' | '.' | 'e' | '#' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'\n+            =>\n                return True;\n \n             --  Make sure '+' or '-' is part of an exponent.\n \n-            when '+'  | '-' =>\n+            when '+' | '-' =>\n                declare\n                   Prev_C : constant Character := Sbuffer (Src_Ptr - 1);\n                begin\n@@ -3526,7 +3526,7 @@ package body Sem_Dim is\n \n             --  All other character doesn't belong to a numeric literal\n \n-            when others     =>\n+            when others =>\n                return False;\n          end case;\n       end Belong_To_Numeric_Literal;"}, {"sha": "fe94150816c75cdf726d2e184bcebb06c92db140", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -272,15 +272,19 @@ package body Sem_Dist is\n    ---------------------------------\n \n    function Is_RACW_Stub_Type_Operation (Op : Entity_Id) return Boolean is\n-      Dispatching_Type : Entity_Id;\n+      Typ : Entity_Id;\n \n    begin\n       case Ekind (Op) is\n-         when E_Function | E_Procedure =>\n-            Dispatching_Type := Find_Dispatching_Type (Op);\n-            return Present (Dispatching_Type)\n-                     and then Is_RACW_Stub_Type (Dispatching_Type)\n-                     and then not Is_Internal (Op);\n+         when E_Function\n+            | E_Procedure\n+         =>\n+            Typ := Find_Dispatching_Type (Op);\n+\n+            return\n+              Present (Typ)\n+                and then Is_RACW_Stub_Type (Typ)\n+                and then not Is_Internal (Op);\n \n          when others =>\n             return False;"}, {"sha": "936c1c3f559039d11ddab6e0401378156b97b9b2", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3430,9 +3430,7 @@ package body Sem_Eval is\n                   when N_Op_Le => Result := (Left_Real <= Right_Real);\n                   when N_Op_Gt => Result := (Left_Real >  Right_Real);\n                   when N_Op_Ge => Result := (Left_Real >= Right_Real);\n-\n-                  when others =>\n-                     raise Program_Error;\n+                  when others  => raise Program_Error;\n                end case;\n \n                Fold_Uint (N, Test (Result), True);\n@@ -6522,7 +6520,10 @@ package body Sem_Eval is\n \n          --  Entity name\n \n-         when N_Expanded_Name | N_Identifier | N_Operator_Symbol =>\n+         when N_Expanded_Name\n+            | N_Identifier\n+            | N_Operator_Symbol\n+         =>\n             E := Entity (N);\n \n             if Is_Named_Number (E) then\n@@ -6596,10 +6597,13 @@ package body Sem_Eval is\n \n          --  Binary operator\n \n-         when N_Binary_Op | N_Short_Circuit | N_Membership_Test =>\n+         when N_Binary_Op\n+            | N_Membership_Test\n+            | N_Short_Circuit\n+         =>\n             if Nkind (N) in N_Op_Shift then\n                Error_Msg_N\n-                (\"!shift functions are never static (RM 4.9(6,18))\", N);\n+                 (\"!shift functions are never static (RM 4.9(6,18))\", N);\n             else\n                Why_Not_Static (Left_Opnd (N));\n                Why_Not_Static (Right_Opnd (N));\n@@ -6718,7 +6722,9 @@ package body Sem_Eval is\n \n          --  Aggregate\n \n-         when N_Aggregate | N_Extension_Aggregate =>\n+         when N_Aggregate\n+            | N_Extension_Aggregate\n+         =>\n             Error_Msg_N (\"!an aggregate is never static (RM 4.9)\", N);\n \n          --  Range\n@@ -6768,7 +6774,6 @@ package body Sem_Eval is\n \n          when others =>\n             null;\n-\n       end case;\n    end Why_Not_Static;\n "}, {"sha": "b28562e050044da392c6082b17829eefbae42c76", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -146,12 +146,12 @@ package body Sem_Mech is\n                --  the point of view of parameter passing mechanism. Convention\n                --  Ghost has the same dynamic semantics as convention Ada.\n \n-               when Convention_Ada       |\n-                    Convention_Intrinsic |\n-                    Convention_Entry     |\n-                    Convention_Protected |\n-                    Convention_Stubbed   =>\n-\n+               when Convention_Ada\n+                  | Convention_Entry\n+                  | Convention_Intrinsic\n+                  | Convention_Protected\n+                  | Convention_Stubbed\n+               =>\n                   --  By reference types are passed by reference (RM 6.2(4))\n \n                   if Is_By_Reference_Type (Typ) then\n@@ -183,11 +183,11 @@ package body Sem_Mech is\n \n                --  Note: Assembler, C++, Stdcall also use C conventions\n \n-               when Convention_Assembler |\n-                    Convention_C         |\n-                    Convention_CPP       |\n-                    Convention_Stdcall   =>\n-\n+               when Convention_Assembler\n+                  | Convention_C\n+                  | Convention_CPP\n+                  | Convention_Stdcall\n+               =>\n                   --  The following values are passed by copy\n \n                   --    IN Scalar parameters (RM B.3(66))"}, {"sha": "87228eb888b9856fc850b7a3fab3ccbca38b3ba9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 121, "deletions": 92, "changes": 213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -9003,8 +9003,10 @@ package body Sem_Prag is\n             case Status is\n                when Suppressed =>\n                   Set_Is_Inlined (Subp, False);\n+\n                when Disabled =>\n                   null;\n+\n                when Enabled =>\n                   if not Has_Pragma_No_Inline (Subp) then\n                      Set_Is_Inlined (Subp, True);\n@@ -10390,10 +10392,13 @@ package body Sem_Prag is\n       case Opt.Uneval_Old is\n          when 'A' =>\n             Set_Uneval_Old_Accept (N);\n+\n          when 'E' =>\n             null;\n+\n          when 'W' =>\n             Set_Uneval_Old_Warn (N);\n+\n          when others =>\n             raise Program_Error;\n       end case;\n@@ -11371,7 +11376,10 @@ package body Sem_Prag is\n          --  otherwise legal pre-Ada_2005 programs. The one argument form is\n          --  intended for exclusive use in the GNAT run-time library.\n \n-         when Pragma_Ada_05 | Pragma_Ada_2005 => declare\n+         when Pragma_Ada_05\n+            | Pragma_Ada_2005\n+         =>\n+         declare\n             E_Id : Node_Id;\n \n          begin\n@@ -11432,7 +11440,10 @@ package body Sem_Prag is\n          --  otherwise legal pre-Ada_2012 programs. The one argument form is\n          --  intended for exclusive use in the GNAT run-time library.\n \n-         when Pragma_Ada_12 | Pragma_Ada_2012 => declare\n+         when Pragma_Ada_12\n+            | Pragma_Ada_2012\n+         =>\n+         declare\n             E_Id : Node_Id;\n \n          begin\n@@ -11648,10 +11659,11 @@ package body Sem_Prag is\n          --    (   [Check => ]  Boolean_EXPRESSION\n          --     [, [Message =>] Static_String_EXPRESSION]);\n \n-         when Pragma_Assert         |\n-              Pragma_Assert_And_Cut |\n-              Pragma_Assume         |\n-              Pragma_Loop_Invariant =>\n+         when Pragma_Assert\n+            | Pragma_Assert_And_Cut\n+            | Pragma_Assume\n+            | Pragma_Loop_Invariant\n+         =>\n          Assert : declare\n             function Contains_Loop_Entry (Expr : Node_Id) return Boolean;\n             --  Determine whether expression Expr contains a Loop_Entry\n@@ -12083,10 +12095,11 @@ package body Sem_Prag is\n          --  pragma Effective_Reads  [ (boolean_EXPRESSION) ];\n          --  pragma Effective_Writes [ (boolean_EXPRESSION) ];\n \n-         when Pragma_Async_Readers    |\n-              Pragma_Async_Writers    |\n-              Pragma_Effective_Reads  |\n-              Pragma_Effective_Writes =>\n+         when Pragma_Async_Readers\n+            | Pragma_Async_Writers\n+            | Pragma_Effective_Reads\n+            | Pragma_Effective_Writes\n+         =>\n          Async_Effective : declare\n             Obj_Decl : Node_Id;\n             Obj_Id   : Entity_Id;\n@@ -12305,8 +12318,9 @@ package body Sem_Prag is\n \n          --  This processing is shared by Volatile_Components\n \n-         when Pragma_Atomic_Components   |\n-              Pragma_Volatile_Components =>\n+         when Pragma_Atomic_Components\n+            | Pragma_Volatile_Components\n+         =>\n          Atomic_Components : declare\n             D    : Node_Id;\n             E    : Entity_Id;\n@@ -12947,7 +12961,9 @@ package body Sem_Prag is\n          --  older run-times that use this pragma. That's an unusual case, but\n          --  it's easy enough to handle, so why not?\n \n-         when Pragma_Compiler_Unit | Pragma_Compiler_Unit_Warning =>\n+         when Pragma_Compiler_Unit\n+            | Pragma_Compiler_Unit_Warning\n+         =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n \n@@ -13362,6 +13378,7 @@ package body Sem_Prag is\n             E : Entity_Id;\n             pragma Warnings (Off, C);\n             pragma Warnings (Off, E);\n+\n          begin\n             Check_Arg_Order ((Name_Convention, Name_Entity));\n             Check_Ada_83_Warning;\n@@ -13411,8 +13428,7 @@ package body Sem_Prag is\n \n          --  pragma CPP_Class ([Entity =>] LOCAL_NAME)\n \n-         when Pragma_CPP_Class => CPP_Class : declare\n-         begin\n+         when Pragma_CPP_Class =>\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n@@ -13431,7 +13447,6 @@ package body Sem_Prag is\n                     Expression => Make_Identifier (Loc, Name_CPP)),\n                   New_Copy (First (Pragma_Argument_Associations (N))))));\n             Analyze (N);\n-         end CPP_Class;\n \n          ---------------------\n          -- CPP_Constructor --\n@@ -13536,31 +13551,27 @@ package body Sem_Prag is\n          -- CPP_Virtual --\n          -----------------\n \n-         when Pragma_CPP_Virtual => CPP_Virtual : declare\n-         begin\n+         when Pragma_CPP_Virtual =>\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"'G'N'A'T pragma Cpp'_Virtual is now obsolete and has no \"\n                   & \"effect?j?\", N);\n             end if;\n-         end CPP_Virtual;\n \n          ----------------\n          -- CPP_Vtable --\n          ----------------\n \n-         when Pragma_CPP_Vtable => CPP_Vtable : declare\n-         begin\n+         when Pragma_CPP_Vtable =>\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"'G'N'A'T pragma Cpp'_Vtable is now obsolete and has no \"\n                   & \"effect?j?\", N);\n             end if;\n-         end CPP_Vtable;\n \n          ---------\n          -- CPU --\n@@ -14903,8 +14914,7 @@ package body Sem_Prag is\n \n          --  pragma Extend_System ([Name =>] Identifier);\n \n-         when Pragma_Extend_System => Extend_System : declare\n-         begin\n+         when Pragma_Extend_System =>\n             GNAT_Pragma;\n             Check_Valid_Configuration_Pragma;\n             Check_Arg_Count (1);\n@@ -14936,7 +14946,6 @@ package body Sem_Prag is\n             else\n                Error_Pragma (\"incorrect name for pragma%, must be Aux_xxx\");\n             end if;\n-         end Extend_System;\n \n          ------------------------\n          -- Extensions_Allowed --\n@@ -15149,8 +15158,7 @@ package body Sem_Prag is\n          --    UPPERCASE | LOWERCASE\n          --    [, AS_IS | UPPERCASE | LOWERCASE]);\n \n-         when Pragma_External_Name_Casing => External_Name_Casing : declare\n-         begin\n+         when Pragma_External_Name_Casing =>\n             GNAT_Pragma;\n             Check_No_Identifiers;\n \n@@ -15188,7 +15196,6 @@ package body Sem_Prag is\n                when others =>\n                   null;\n             end case;\n-         end External_Name_Casing;\n \n          ---------------\n          -- Fast_Math --\n@@ -15625,7 +15632,10 @@ package body Sem_Prag is\n          --  Note: pragma Comment shares this processing. Pragma Ident is\n          --  identical in effect to pragma Commment.\n \n-         when Pragma_Ident | Pragma_Comment => Ident : declare\n+         when Pragma_Comment\n+            | Pragma_Ident\n+         =>\n+         Ident : declare\n             Str : Node_Id;\n \n          begin\n@@ -17141,8 +17151,9 @@ package body Sem_Prag is\n \n          --  pragma Linker_Destructor (procedure_LOCAL_NAME);\n \n-         when Pragma_Linker_Constructor |\n-              Pragma_Linker_Destructor =>\n+         when Pragma_Linker_Constructor\n+            | Pragma_Linker_Destructor\n+         =>\n          Linker_Constructor : declare\n             Arg1_X : Node_Id;\n             Proc   : Entity_Id;\n@@ -17247,7 +17258,10 @@ package body Sem_Prag is\n                --  all we need to do is to set the Linker_Section_pragma field,\n                --  checking that we do not have a duplicate.\n \n-               when E_Constant | E_Variable | Type_Kind =>\n+               when Type_Kind\n+                  | E_Constant\n+                  | E_Variable\n+               =>\n                   LPE := Linker_Section_Pragma (Ent);\n \n                   if Present (LPE) then\n@@ -17416,12 +17430,9 @@ package body Sem_Prag is\n             LP_Val := Chars (Get_Pragma_Arg (Arg1));\n \n             case LP_Val is\n-               when Name_Ceiling_Locking            =>\n-                  LP := 'C';\n-               when Name_Inheritance_Locking        =>\n-                  LP := 'I';\n-               when Name_Concurrent_Readers_Locking =>\n-                  LP := 'R';\n+               when Name_Ceiling_Locking            => LP := 'C';\n+               when Name_Concurrent_Readers_Locking => LP := 'R';\n+               when Name_Inheritance_Locking        => LP := 'I';\n             end case;\n \n             if Locking_Policy /= ' '\n@@ -18338,12 +18349,10 @@ package body Sem_Prag is\n                Nam : constant Name_Id := Chars (Get_Pragma_Arg (Arg1));\n             begin\n                case Nam is\n-                  when Name_Time =>\n-                     Opt.Optimize_Alignment := 'T';\n-                  when Name_Space =>\n-                     Opt.Optimize_Alignment := 'S';\n-                  when Name_Off =>\n-                     Opt.Optimize_Alignment := 'O';\n+                  when Name_Off   => Opt.Optimize_Alignment := 'O';\n+                  when Name_Space => Opt.Optimize_Alignment := 'S';\n+                  when Name_Time  => Opt.Optimize_Alignment := 'T';\n+\n                   when others =>\n                      Error_Pragma_Arg (\"invalid argument for pragma%\", Arg1);\n                end case;\n@@ -18816,7 +18825,7 @@ package body Sem_Prag is\n \n          --  pragma Partition_Elaboration_Policy (policy_IDENTIFIER);\n \n-         when Pragma_Partition_Elaboration_Policy => declare\n+         when Pragma_Partition_Elaboration_Policy => PEP : declare\n             subtype PEP_Range is Name_Id\n               range First_Partition_Elaboration_Policy_Name\n                  .. Last_Partition_Elaboration_Policy_Name;\n@@ -18832,10 +18841,8 @@ package body Sem_Prag is\n             PEP_Val := Chars (Get_Pragma_Arg (Arg1));\n \n             case PEP_Val is\n-               when Name_Concurrent =>\n-                  PEP := 'C';\n-               when Name_Sequential =>\n-                  PEP := 'S';\n+               when Name_Concurrent => PEP := 'C';\n+               when Name_Sequential => PEP := 'S';\n             end case;\n \n             if Partition_Elaboration_Policy /= ' '\n@@ -18855,7 +18862,7 @@ package body Sem_Prag is\n                   Partition_Elaboration_Policy_Sloc := Loc;\n                end if;\n             end if;\n-         end;\n+         end PEP;\n \n          -------------\n          -- Passive --\n@@ -19125,9 +19132,10 @@ package body Sem_Prag is\n          --    the \"pragma on subprogram declaration\" case. In that scenario\n          --    the annotation must instantiate itself.\n \n-         when Pragma_Post          |\n-              Pragma_Post_Class    |\n-              Pragma_Postcondition =>\n+         when Pragma_Post\n+            | Pragma_Post_Class\n+            | Pragma_Postcondition\n+         =>\n             Analyze_Pre_Post_Condition;\n \n          --------------------------------\n@@ -19171,9 +19179,10 @@ package body Sem_Prag is\n          --    the \"pragma on subprogram declaration\" case. In that scenario\n          --    the annotation must instantiate itself.\n \n-         when Pragma_Pre          |\n-              Pragma_Pre_Class    |\n-              Pragma_Precondition =>\n+         when Pragma_Pre\n+            | Pragma_Pre_Class\n+            | Pragma_Precondition\n+         =>\n             Analyze_Pre_Post_Condition;\n \n          ---------------\n@@ -19788,7 +19797,9 @@ package body Sem_Prag is\n          --     [, [External =>] EXTERNAL_SYMBOL]\n          --     [, [Size     =>] EXTERNAL_SYMBOL]);\n \n-         when Pragma_Psect_Object | Pragma_Common_Object =>\n+         when Pragma_Common_Object\n+            | Pragma_Psect_Object\n+         =>\n          Psect_Object : declare\n             Args  : Args_List (1 .. 3);\n             Names : constant Name_List (1 .. 3) := (\n@@ -21659,7 +21670,6 @@ package body Sem_Prag is\n          --    [Write  =>] function NAME);\n \n          when Pragma_Stream_Convert => Stream_Convert : declare\n-\n             procedure Check_OK_Stream_Convert_Function (Arg : Node_Id);\n             --  Check that the given argument is the name of a local function\n             --  of one argument that is not overloaded earlier in the current\n@@ -22560,8 +22570,9 @@ package body Sem_Prag is\n          --    ([Entity =>] type_LOCAL_NAME,\n          --     [Check  =>] EXPRESSION);\n \n-         when Pragma_Type_Invariant       |\n-              Pragma_Type_Invariant_Class =>\n+         when Pragma_Type_Invariant\n+            | Pragma_Type_Invariant_Class\n+         =>\n          Type_Invariant : declare\n             I_Pragma : Node_Id;\n \n@@ -26996,11 +27007,15 @@ package body Sem_Prag is\n                Policy := Chars (Get_Pragma_Arg (Last (PPA)));\n \n                case Policy is\n-                  when Name_Off | Name_Ignore =>\n+                  when Name_Ignore\n+                     | Name_Off\n+                  =>\n                      Set_Is_Ignored (N, True);\n                      Set_Is_Checked (N, False);\n \n-                  when Name_On | Name_Check =>\n+                  when Name_Check\n+                     | Name_On\n+                  =>\n                      Set_Is_Checked (N, True);\n                      Set_Is_Ignored (N, False);\n \n@@ -27116,12 +27131,19 @@ package body Sem_Prag is\n                                               Name_Loop_Variant))\n             then\n                case (Chars (Get_Pragma_Arg (Last (PPA)))) is\n-                  when Name_On | Name_Check =>\n+                  when Name_Check\n+                     | Name_On\n+                  =>\n                      return Name_Check;\n-                  when Name_Off | Name_Ignore =>\n+\n+                  when Name_Ignore\n+                     | Name_Off\n+                  =>\n                      return Name_Ignore;\n+\n                   when Name_Disable =>\n                      return Name_Disable;\n+\n                   when others =>\n                      raise Program_Error;\n                end case;\n@@ -28993,37 +29015,40 @@ package body Sem_Prag is\n          when\n             --  RM defined\n \n-            Name_Assert                    |\n-            Name_Assertion_Policy          |\n-            Name_Static_Predicate          |\n-            Name_Dynamic_Predicate         |\n-            Name_Pre                       |\n-            Name_uPre                      |\n-            Name_Post                      |\n-            Name_uPost                     |\n-            Name_Type_Invariant            |\n-            Name_uType_Invariant           |\n+              Name_Assert\n+            | Name_Assertion_Policy\n+            | Name_Static_Predicate\n+            | Name_Dynamic_Predicate\n+            | Name_Pre\n+            | Name_uPre\n+            | Name_Post\n+            | Name_uPost\n+            | Name_Type_Invariant\n+            | Name_uType_Invariant\n \n             --  Impl defined\n \n-            Name_Assert_And_Cut            |\n-            Name_Assume                    |\n-            Name_Contract_Cases            |\n-            Name_Debug                     |\n-            Name_Default_Initial_Condition |\n-            Name_Ghost                     |\n-            Name_Initial_Condition         |\n-            Name_Invariant                 |\n-            Name_uInvariant                |\n-            Name_Loop_Invariant            |\n-            Name_Loop_Variant              |\n-            Name_Postcondition             |\n-            Name_Precondition              |\n-            Name_Predicate                 |\n-            Name_Refined_Post              |\n-            Name_Statement_Assertions      => return True;\n-\n-         when others                       => return False;\n+            | Name_Assert_And_Cut\n+            | Name_Assume\n+            | Name_Contract_Cases\n+            | Name_Debug\n+            | Name_Default_Initial_Condition\n+            | Name_Ghost\n+            | Name_Initial_Condition\n+            | Name_Invariant\n+            | Name_uInvariant\n+            | Name_Loop_Invariant\n+            | Name_Loop_Variant\n+            | Name_Postcondition\n+            | Name_Precondition\n+            | Name_Predicate\n+            | Name_Refined_Post\n+            | Name_Statement_Assertions\n+         =>\n+            return True;\n+\n+         when others =>\n+            return False;\n       end case;\n    end Is_Valid_Assertion_Kind;\n \n@@ -29425,12 +29450,16 @@ package body Sem_Prag is\n          case Chars (Prefix (N)) is\n             when Name_Pre =>\n                Nam := Name_uPre;\n+\n             when Name_Post =>\n                Nam := Name_uPost;\n+\n             when Name_Type_Invariant =>\n                Nam := Name_uType_Invariant;\n+\n             when Name_Invariant =>\n                Nam := Name_uInvariant;\n+\n             when others =>\n                return;\n          end case;"}, {"sha": "2a8baaa6c0857aa4d878a210a83939422ea82c52", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 137, "deletions": 94, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1410,7 +1410,7 @@ package body Sem_Res is\n                Opnd_Type := Base_Type (Typ);\n \n             elsif (Scope (Opnd_Type) = Standard_Standard\n-                     and then Is_Binary)\n+                    and then Is_Binary)\n               or else (Nkind (Right_Opnd (Op_Node)) = N_Attribute_Reference\n                         and then Is_Binary\n                         and then not Comes_From_Source (Opnd_Type))\n@@ -1424,7 +1424,6 @@ package body Sem_Res is\n                --  the given literal. Optimize the case where Pack is Standard.\n \n                if Pack /= Standard_Standard then\n-\n                   if Opnd_Type = Universal_Integer then\n                      Orig_Type := Type_In_P (Is_Integer_Type'Access);\n \n@@ -1576,11 +1575,20 @@ package body Sem_Res is\n \n       if Is_Private_Type (Typ) then\n          case Nkind (N) is\n-            when N_Op_Add   | N_Op_Subtract | N_Op_Multiply | N_Op_Divide |\n-                 N_Op_Expon | N_Op_Mod      | N_Op_Rem      =>\n+            when N_Op_Add\n+               | N_Op_Divide\n+               | N_Op_Expon\n+               | N_Op_Mod\n+               | N_Op_Multiply\n+               | N_Op_Rem\n+               | N_Op_Subtract\n+            =>\n                Resolve_Intrinsic_Operator (N, Typ);\n \n-            when N_Op_Plus  | N_Op_Minus    | N_Op_Abs      =>\n+            when N_Op_Abs\n+               | N_Op_Minus\n+               | N_Op_Plus\n+            =>\n                Resolve_Intrinsic_Unary_Operator (N, Typ);\n \n             when others =>\n@@ -2840,122 +2848,148 @@ package body Sem_Res is\n          end if;\n \n          case N_Subexpr'(Nkind (N)) is\n-            when N_Aggregate => Resolve_Aggregate                (N, Ctx_Type);\n-\n-            when N_Allocator => Resolve_Allocator                (N, Ctx_Type);\n+            when N_Aggregate =>\n+               Resolve_Aggregate                 (N, Ctx_Type);\n \n-            when N_Short_Circuit\n-                             => Resolve_Short_Circuit            (N, Ctx_Type);\n+            when N_Allocator =>\n+               Resolve_Allocator                 (N, Ctx_Type);\n \n-            when N_Attribute_Reference\n-                             => Resolve_Attribute                (N, Ctx_Type);\n+            when N_Short_Circuit =>\n+               Resolve_Short_Circuit             (N, Ctx_Type);\n \n-            when N_Case_Expression\n-                             => Resolve_Case_Expression          (N, Ctx_Type);\n+            when N_Attribute_Reference =>\n+               Resolve_Attribute                 (N, Ctx_Type);\n \n-            when N_Character_Literal\n-                             => Resolve_Character_Literal        (N, Ctx_Type);\n+            when N_Case_Expression =>\n+               Resolve_Case_Expression           (N, Ctx_Type);\n \n-            when N_Expanded_Name\n-                             => Resolve_Entity_Name              (N, Ctx_Type);\n+            when N_Character_Literal =>\n+               Resolve_Character_Literal         (N, Ctx_Type);\n \n-            when N_Explicit_Dereference\n-                             => Resolve_Explicit_Dereference     (N, Ctx_Type);\n+            when N_Expanded_Name =>\n+               Resolve_Entity_Name               (N, Ctx_Type);\n \n-            when N_Expression_With_Actions\n-                             => Resolve_Expression_With_Actions  (N, Ctx_Type);\n+            when N_Explicit_Dereference =>\n+               Resolve_Explicit_Dereference      (N, Ctx_Type);\n \n-            when N_Extension_Aggregate\n-                             => Resolve_Extension_Aggregate      (N, Ctx_Type);\n+            when N_Expression_With_Actions =>\n+               Resolve_Expression_With_Actions   (N, Ctx_Type);\n \n-            when N_Function_Call\n-                             => Resolve_Call                     (N, Ctx_Type);\n+            when N_Extension_Aggregate =>\n+               Resolve_Extension_Aggregate       (N, Ctx_Type);\n \n-            when N_Identifier\n-                             => Resolve_Entity_Name              (N, Ctx_Type);\n+            when N_Function_Call =>\n+               Resolve_Call                      (N, Ctx_Type);\n \n-            when N_If_Expression\n-                             => Resolve_If_Expression            (N, Ctx_Type);\n+            when N_Identifier =>\n+               Resolve_Entity_Name               (N, Ctx_Type);\n \n-            when N_Indexed_Component\n-                             => Resolve_Indexed_Component        (N, Ctx_Type);\n+            when N_If_Expression =>\n+               Resolve_If_Expression             (N, Ctx_Type);\n \n-            when N_Integer_Literal\n-                             => Resolve_Integer_Literal          (N, Ctx_Type);\n+            when N_Indexed_Component =>\n+               Resolve_Indexed_Component         (N, Ctx_Type);\n \n-            when N_Membership_Test\n-                             => Resolve_Membership_Op            (N, Ctx_Type);\n+            when N_Integer_Literal =>\n+               Resolve_Integer_Literal           (N, Ctx_Type);\n \n-            when N_Null      => Resolve_Null                     (N, Ctx_Type);\n+            when N_Membership_Test =>\n+               Resolve_Membership_Op             (N, Ctx_Type);\n \n-            when N_Op_And | N_Op_Or | N_Op_Xor\n-                             => Resolve_Logical_Op               (N, Ctx_Type);\n+            when N_Null =>\n+               Resolve_Null                      (N, Ctx_Type);\n \n-            when N_Op_Eq | N_Op_Ne\n-                             => Resolve_Equality_Op              (N, Ctx_Type);\n+            when N_Op_And\n+               | N_Op_Or\n+               | N_Op_Xor\n+            =>\n+               Resolve_Logical_Op                (N, Ctx_Type);\n \n-            when N_Op_Lt | N_Op_Le | N_Op_Gt | N_Op_Ge\n-                             => Resolve_Comparison_Op            (N, Ctx_Type);\n+            when N_Op_Eq\n+               | N_Op_Ne\n+            =>\n+               Resolve_Equality_Op               (N, Ctx_Type);\n \n-            when N_Op_Not    => Resolve_Op_Not                   (N, Ctx_Type);\n+            when N_Op_Ge\n+               | N_Op_Gt\n+               | N_Op_Le\n+               | N_Op_Lt\n+            =>\n+               Resolve_Comparison_Op             (N, Ctx_Type);\n \n-            when N_Op_Add    | N_Op_Subtract | N_Op_Multiply |\n-                 N_Op_Divide | N_Op_Mod      | N_Op_Rem\n+            when N_Op_Not =>\n+               Resolve_Op_Not                    (N, Ctx_Type);\n \n-                             => Resolve_Arithmetic_Op            (N, Ctx_Type);\n+            when N_Op_Add\n+               | N_Op_Divide\n+               | N_Op_Mod\n+               | N_Op_Multiply\n+               | N_Op_Rem\n+               | N_Op_Subtract\n+            =>\n+               Resolve_Arithmetic_Op             (N, Ctx_Type);\n \n-            when N_Op_Concat => Resolve_Op_Concat                (N, Ctx_Type);\n+            when N_Op_Concat =>\n+               Resolve_Op_Concat                 (N, Ctx_Type);\n \n-            when N_Op_Expon  => Resolve_Op_Expon                 (N, Ctx_Type);\n+            when N_Op_Expon =>\n+               Resolve_Op_Expon                  (N, Ctx_Type);\n \n-            when N_Op_Plus | N_Op_Minus  | N_Op_Abs\n-                             => Resolve_Unary_Op                 (N, Ctx_Type);\n+            when N_Op_Abs\n+               | N_Op_Minus\n+               | N_Op_Plus\n+            =>\n+               Resolve_Unary_Op                  (N, Ctx_Type);\n \n-            when N_Op_Shift  => Resolve_Shift                    (N, Ctx_Type);\n+            when N_Op_Shift =>\n+               Resolve_Shift                     (N, Ctx_Type);\n \n-            when N_Procedure_Call_Statement\n-                             => Resolve_Call                     (N, Ctx_Type);\n+            when N_Procedure_Call_Statement =>\n+               Resolve_Call                      (N, Ctx_Type);\n \n-            when N_Operator_Symbol\n-                             => Resolve_Operator_Symbol          (N, Ctx_Type);\n+            when N_Operator_Symbol =>\n+               Resolve_Operator_Symbol           (N, Ctx_Type);\n \n-            when N_Qualified_Expression\n-                             => Resolve_Qualified_Expression     (N, Ctx_Type);\n+            when N_Qualified_Expression =>\n+               Resolve_Qualified_Expression      (N, Ctx_Type);\n \n             --  Why is the following null, needs a comment ???\n \n-            when N_Quantified_Expression\n-                             => null;\n+            when N_Quantified_Expression =>\n+               null;\n \n-            when N_Raise_Expression\n-                             => Resolve_Raise_Expression         (N, Ctx_Type);\n+            when N_Raise_Expression =>\n+               Resolve_Raise_Expression          (N, Ctx_Type);\n \n-            when N_Raise_xxx_Error\n-                             => Set_Etype (N, Ctx_Type);\n+            when N_Raise_xxx_Error =>\n+               Set_Etype (N, Ctx_Type);\n \n-            when N_Range     => Resolve_Range                    (N, Ctx_Type);\n+            when N_Range =>\n+               Resolve_Range                     (N, Ctx_Type);\n \n-            when N_Real_Literal\n-                             => Resolve_Real_Literal             (N, Ctx_Type);\n+            when N_Real_Literal =>\n+               Resolve_Real_Literal              (N, Ctx_Type);\n \n-            when N_Reference => Resolve_Reference                (N, Ctx_Type);\n+            when N_Reference =>\n+               Resolve_Reference                 (N, Ctx_Type);\n \n-            when N_Selected_Component\n-                             => Resolve_Selected_Component       (N, Ctx_Type);\n+            when N_Selected_Component =>\n+               Resolve_Selected_Component        (N, Ctx_Type);\n \n-            when N_Slice     => Resolve_Slice                    (N, Ctx_Type);\n+            when N_Slice =>\n+               Resolve_Slice                     (N, Ctx_Type);\n \n-            when N_String_Literal\n-                             => Resolve_String_Literal           (N, Ctx_Type);\n+            when N_String_Literal =>\n+               Resolve_String_Literal            (N, Ctx_Type);\n \n-            when N_Type_Conversion\n-                             => Resolve_Type_Conversion          (N, Ctx_Type);\n+            when N_Type_Conversion =>\n+               Resolve_Type_Conversion           (N, Ctx_Type);\n \n             when N_Unchecked_Expression =>\n-               Resolve_Unchecked_Expression                      (N, Ctx_Type);\n+               Resolve_Unchecked_Expression      (N, Ctx_Type);\n \n             when N_Unchecked_Type_Conversion =>\n-               Resolve_Unchecked_Type_Conversion                 (N, Ctx_Type);\n+               Resolve_Unchecked_Type_Conversion (N, Ctx_Type);\n          end case;\n \n          --  Ada 2012 (AI05-0149): Apply an (implicit) conversion to an\n@@ -9303,20 +9337,20 @@ package body Sem_Res is\n \n          else\n             case Nkind (Parent (N)) is\n-               when N_Op_And   |\n-                    N_Op_Eq    |\n-                    N_Op_Ge    |\n-                    N_Op_Gt    |\n-                    N_Op_Le    |\n-                    N_Op_Lt    |\n-                    N_Op_Ne    |\n-                    N_Op_Or    |\n-                    N_Op_Xor   |\n-                    N_In       |\n-                    N_Not_In   |\n-                    N_And_Then |\n-                    N_Or_Else  =>\n-\n+               when N_And_Then\n+                  | N_In\n+                  | N_Not_In\n+                  | N_Op_And\n+                  | N_Op_Eq\n+                  | N_Op_Ge\n+                  | N_Op_Gt\n+                  | N_Op_Le\n+                  | N_Op_Lt\n+                  | N_Op_Ne\n+                  | N_Op_Or\n+                  | N_Op_Xor\n+                  | N_Or_Else\n+               =>\n                   return Left_Opnd (Parent (N)) = N;\n \n                when others =>\n@@ -11312,11 +11346,20 @@ package body Sem_Res is\n \n          if Is_Intrinsic_Subprogram (Op) and then Is_Private_Type (Typ) then\n             case Nkind (N) is\n-               when N_Op_Add   | N_Op_Subtract | N_Op_Multiply | N_Op_Divide |\n-                    N_Op_Expon | N_Op_Mod      | N_Op_Rem      =>\n+               when N_Op_Add\n+                  | N_Op_Divide\n+                  | N_Op_Expon\n+                  | N_Op_Mod\n+                  | N_Op_Multiply\n+                  | N_Op_Rem\n+                  | N_Op_Subtract\n+               =>\n                   Resolve_Intrinsic_Operator (N, Typ);\n \n-               when N_Op_Plus  | N_Op_Minus    | N_Op_Abs      =>\n+               when N_Op_Abs\n+                  | N_Op_Minus\n+                  | N_Op_Plus\n+               =>\n                   Resolve_Intrinsic_Unary_Operator (N, Typ);\n \n                when others =>"}, {"sha": "3b90fe82c7e79b94e9075008d2cf5a29d82d2144", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 222, "deletions": 201, "changes": 423, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -1663,9 +1663,9 @@ package body Sem_Util is\n                   return Cannot_Raise_Constraint_Error (Right_Opnd (Expr));\n                end if;\n \n-            when N_Op_Divide |\n-                 N_Op_Mod    |\n-                 N_Op_Rem\n+            when N_Op_Divide\n+               | N_Op_Mod\n+               | N_Op_Rem\n             =>\n                if Do_Division_Check (Expr)\n                     or else\n@@ -1679,25 +1679,25 @@ package body Sem_Util is\n                     Cannot_Raise_Constraint_Error (Right_Opnd (Expr));\n                end if;\n \n-            when N_Op_Add                    |\n-                 N_Op_And                    |\n-                 N_Op_Concat                 |\n-                 N_Op_Eq                     |\n-                 N_Op_Expon                  |\n-                 N_Op_Ge                     |\n-                 N_Op_Gt                     |\n-                 N_Op_Le                     |\n-                 N_Op_Lt                     |\n-                 N_Op_Multiply               |\n-                 N_Op_Ne                     |\n-                 N_Op_Or                     |\n-                 N_Op_Rotate_Left            |\n-                 N_Op_Rotate_Right           |\n-                 N_Op_Shift_Left             |\n-                 N_Op_Shift_Right            |\n-                 N_Op_Shift_Right_Arithmetic |\n-                 N_Op_Subtract               |\n-                 N_Op_Xor\n+            when N_Op_Add\n+               | N_Op_And\n+               | N_Op_Concat\n+               | N_Op_Eq\n+               | N_Op_Expon\n+               | N_Op_Ge\n+               | N_Op_Gt\n+               | N_Op_Le\n+               | N_Op_Lt\n+               | N_Op_Multiply\n+               | N_Op_Ne\n+               | N_Op_Or\n+               | N_Op_Rotate_Left\n+               | N_Op_Rotate_Right\n+               | N_Op_Shift_Left\n+               | N_Op_Shift_Right\n+               | N_Op_Shift_Right_Arithmetic\n+               | N_Op_Subtract\n+               | N_Op_Xor\n             =>\n                if Do_Overflow_Check (Expr) then\n                   return False;\n@@ -2272,7 +2272,9 @@ package body Sem_Util is\n             Collect_Identifiers (Low_Bound (N));\n             Collect_Identifiers (High_Bound (N));\n \n-         when N_Op | N_Membership_Test =>\n+         when N_Membership_Test\n+            | N_Op\n+         =>\n             declare\n                Expr : Node_Id;\n \n@@ -2349,8 +2351,9 @@ package body Sem_Util is\n                end loop;\n             end;\n \n-         when N_Subprogram_Call      |\n-              N_Entry_Call_Statement =>\n+         when N_Entry_Call_Statement\n+            | N_Subprogram_Call\n+         =>\n             declare\n                Id     : constant Entity_Id := Get_Function_Id (N);\n                Formal : Node_Id;\n@@ -2371,8 +2374,9 @@ package body Sem_Util is\n                end loop;\n             end;\n \n-         when N_Aggregate           |\n-              N_Extension_Aggregate =>\n+         when N_Aggregate\n+            | N_Extension_Aggregate\n+         =>\n             declare\n                Assoc     : Node_Id;\n                Choice    : Node_Id;\n@@ -2681,16 +2685,19 @@ package body Sem_Util is\n                while Present (Elmt_2) loop\n                   if Entity (Node (Elmt_1)) = Entity (Node (Elmt_2)) then\n                      case Nkind (Parent (Node (Elmt_2))) is\n-                        when N_Aggregate             |\n-                             N_Component_Association |\n-                             N_Component_Declaration =>\n+                        when N_Aggregate\n+                           | N_Component_Association\n+                           | N_Component_Declaration\n+                        =>\n                            Error_Msg_N\n                              (\"value may be affected by call in other \"\n                               & \"component because they are evaluated \"\n                               & \"in unspecified order\",\n                               Node (Elmt_2));\n \n-                        when N_In | N_Not_In =>\n+                        when N_In\n+                           | N_Not_In\n+                        =>\n                            Error_Msg_N\n                              (\"value may be affected by call in other \"\n                               & \"alternative because they are evaluated \"\n@@ -5183,67 +5190,67 @@ package body Sem_Util is\n \n    begin\n       case Nkind (N) is\n-         when N_Abstract_Subprogram_Declaration        |\n-              N_Expression_Function                    |\n-              N_Formal_Subprogram_Declaration          |\n-              N_Generic_Package_Declaration            |\n-              N_Generic_Subprogram_Declaration         |\n-              N_Package_Declaration                    |\n-              N_Subprogram_Body                        |\n-              N_Subprogram_Body_Stub                   |\n-              N_Subprogram_Declaration                 |\n-              N_Subprogram_Renaming_Declaration\n+         when N_Abstract_Subprogram_Declaration\n+            | N_Expression_Function\n+            | N_Formal_Subprogram_Declaration\n+            | N_Generic_Package_Declaration\n+            | N_Generic_Subprogram_Declaration\n+            | N_Package_Declaration\n+            | N_Subprogram_Body\n+            | N_Subprogram_Body_Stub\n+            | N_Subprogram_Declaration\n+            | N_Subprogram_Renaming_Declaration\n          =>\n             return Defining_Entity (Specification (N));\n \n-         when N_Component_Declaration                  |\n-              N_Defining_Program_Unit_Name             |\n-              N_Discriminant_Specification             |\n-              N_Entry_Body                             |\n-              N_Entry_Declaration                      |\n-              N_Entry_Index_Specification              |\n-              N_Exception_Declaration                  |\n-              N_Exception_Renaming_Declaration         |\n-              N_Formal_Object_Declaration              |\n-              N_Formal_Package_Declaration             |\n-              N_Formal_Type_Declaration                |\n-              N_Full_Type_Declaration                  |\n-              N_Implicit_Label_Declaration             |\n-              N_Incomplete_Type_Declaration            |\n-              N_Loop_Parameter_Specification           |\n-              N_Number_Declaration                     |\n-              N_Object_Declaration                     |\n-              N_Object_Renaming_Declaration            |\n-              N_Package_Body_Stub                      |\n-              N_Parameter_Specification                |\n-              N_Private_Extension_Declaration          |\n-              N_Private_Type_Declaration               |\n-              N_Protected_Body                         |\n-              N_Protected_Body_Stub                    |\n-              N_Protected_Type_Declaration             |\n-              N_Single_Protected_Declaration           |\n-              N_Single_Task_Declaration                |\n-              N_Subtype_Declaration                    |\n-              N_Task_Body                              |\n-              N_Task_Body_Stub                         |\n-              N_Task_Type_Declaration\n+         when N_Component_Declaration\n+            | N_Defining_Program_Unit_Name\n+            | N_Discriminant_Specification\n+            | N_Entry_Body\n+            | N_Entry_Declaration\n+            | N_Entry_Index_Specification\n+            | N_Exception_Declaration\n+            | N_Exception_Renaming_Declaration\n+            | N_Formal_Object_Declaration\n+            | N_Formal_Package_Declaration\n+            | N_Formal_Type_Declaration\n+            | N_Full_Type_Declaration\n+            | N_Implicit_Label_Declaration\n+            | N_Incomplete_Type_Declaration\n+            | N_Loop_Parameter_Specification\n+            | N_Number_Declaration\n+            | N_Object_Declaration\n+            | N_Object_Renaming_Declaration\n+            | N_Package_Body_Stub\n+            | N_Parameter_Specification\n+            | N_Private_Extension_Declaration\n+            | N_Private_Type_Declaration\n+            | N_Protected_Body\n+            | N_Protected_Body_Stub\n+            | N_Protected_Type_Declaration\n+            | N_Single_Protected_Declaration\n+            | N_Single_Task_Declaration\n+            | N_Subtype_Declaration\n+            | N_Task_Body\n+            | N_Task_Body_Stub\n+            | N_Task_Type_Declaration\n          =>\n             return Defining_Identifier (N);\n \n          when N_Subunit =>\n             return Defining_Entity (Proper_Body (N));\n \n-         when N_Function_Instantiation                 |\n-              N_Function_Specification                 |\n-              N_Generic_Function_Renaming_Declaration  |\n-              N_Generic_Package_Renaming_Declaration   |\n-              N_Generic_Procedure_Renaming_Declaration |\n-              N_Package_Body                           |\n-              N_Package_Instantiation                  |\n-              N_Package_Renaming_Declaration           |\n-              N_Package_Specification                  |\n-              N_Procedure_Instantiation                |\n-              N_Procedure_Specification\n+         when N_Function_Instantiation\n+            | N_Function_Specification\n+            | N_Generic_Function_Renaming_Declaration\n+            | N_Generic_Package_Renaming_Declaration\n+            | N_Generic_Procedure_Renaming_Declaration\n+            | N_Package_Body\n+            | N_Package_Instantiation\n+            | N_Package_Renaming_Declaration\n+            | N_Package_Specification\n+            | N_Procedure_Instantiation\n+            | N_Procedure_Specification\n          =>\n             declare\n                Nam : constant Node_Id := Defining_Unit_Name (N);\n@@ -5272,8 +5279,9 @@ package body Sem_Util is\n                end if;\n             end;\n \n-         when N_Block_Statement                        |\n-              N_Loop_Statement                         =>\n+         when N_Block_Statement\n+            | N_Loop_Statement\n+         =>\n             return Entity (Identifier (N));\n \n          when others =>\n@@ -5282,7 +5290,6 @@ package body Sem_Util is\n             else\n                raise Program_Error;\n             end if;\n-\n       end case;\n    end Defining_Entity;\n \n@@ -5818,8 +5825,9 @@ package body Sem_Util is\n \n                --  Treat the unchecked attributes as library-level\n \n-               when Attribute_Unchecked_Access    |\n-                    Attribute_Unrestricted_Access =>\n+               when Attribute_Unchecked_Access\n+                  | Attribute_Unrestricted_Access\n+               =>\n                   return Make_Level_Literal (Scope_Depth (Standard_Standard));\n \n                --  No other access-valued attributes\n@@ -7290,11 +7298,10 @@ package body Sem_Util is\n          pragma Assert (Present (Alt));\n       end loop Search;\n \n-      --  The above loop *must* terminate by finding a match, since\n-      --  we know the case statement is valid, and the value of the\n-      --  expression is known at compile time. When we fall out of\n-      --  the loop, Alt points to the alternative that we know will\n-      --  be selected at run time.\n+      --  The above loop *must* terminate by finding a match, since we know the\n+      --  case statement is valid, and the value of the expression is known at\n+      --  compile time. When we fall out of the loop, Alt points to the\n+      --  alternative that we know will be selected at run time.\n \n       return Alt;\n    end Find_Static_Alternative;\n@@ -7847,10 +7854,10 @@ package body Sem_Util is\n          return Entity (N);\n       else\n          case Nkind (N) is\n-            when N_Indexed_Component  |\n-                 N_Slice              |\n-                 N_Selected_Component =>\n-\n+            when N_Indexed_Component\n+               | N_Selected_Component\n+               | N_Slice\n+            =>\n                --  If not generating code, a dereference may be left implicit.\n                --  In thoses cases, return Empty.\n \n@@ -8933,10 +8940,10 @@ package body Sem_Util is\n                Assn := First (Constraints (Constr));\n                while Present (Assn) loop\n                   case Nkind (Assn) is\n-                     when N_Subtype_Indication |\n-                          N_Range              |\n-                          N_Identifier\n-                       =>\n+                     when N_Identifier\n+                        | N_Range\n+                        | N_Subtype_Indication\n+                     =>\n                         if Depends_On_Discriminant (Assn) then\n                            return True;\n                         end if;\n@@ -9518,19 +9525,21 @@ package body Sem_Util is\n    function Has_Null_Exclusion (N : Node_Id) return Boolean is\n    begin\n       case Nkind (N) is\n-         when N_Access_Definition               |\n-              N_Access_Function_Definition      |\n-              N_Access_Procedure_Definition     |\n-              N_Access_To_Object_Definition     |\n-              N_Allocator                       |\n-              N_Derived_Type_Definition         |\n-              N_Function_Specification          |\n-              N_Subtype_Declaration             =>\n+         when N_Access_Definition\n+            | N_Access_Function_Definition\n+            | N_Access_Procedure_Definition\n+            | N_Access_To_Object_Definition\n+            | N_Allocator\n+            | N_Derived_Type_Definition\n+            | N_Function_Specification\n+            | N_Subtype_Declaration\n+         =>\n             return Null_Exclusion_Present (N);\n \n-         when N_Component_Definition            |\n-              N_Formal_Object_Declaration       |\n-              N_Object_Renaming_Declaration     =>\n+         when N_Component_Definition\n+            | N_Formal_Object_Declaration\n+            | N_Object_Renaming_Declaration\n+         =>\n             if Present (Subtype_Mark (N)) then\n                return Null_Exclusion_Present (N);\n             else pragma Assert (Present (Access_Definition (N)));\n@@ -9560,7 +9569,6 @@ package body Sem_Util is\n \n          when others =>\n             return False;\n-\n       end case;\n    end Has_Null_Exclusion;\n \n@@ -12087,22 +12095,23 @@ package body Sem_Util is\n    function Is_Declaration_Other_Than_Renaming (N : Node_Id) return Boolean is\n    begin\n       case Nkind (N) is\n-         when N_Abstract_Subprogram_Declaration        |\n-              N_Exception_Declaration                  |\n-              N_Expression_Function                    |\n-              N_Full_Type_Declaration                  |\n-              N_Generic_Package_Declaration            |\n-              N_Generic_Subprogram_Declaration         |\n-              N_Number_Declaration                     |\n-              N_Object_Declaration                     |\n-              N_Package_Declaration                    |\n-              N_Private_Extension_Declaration          |\n-              N_Private_Type_Declaration               |\n-              N_Subprogram_Declaration                 |\n-              N_Subtype_Declaration                    =>\n+         when N_Abstract_Subprogram_Declaration\n+            | N_Exception_Declaration\n+            | N_Expression_Function\n+            | N_Full_Type_Declaration\n+            | N_Generic_Package_Declaration\n+            | N_Generic_Subprogram_Declaration\n+            | N_Number_Declaration\n+            | N_Object_Declaration\n+            | N_Package_Declaration\n+            | N_Private_Extension_Declaration\n+            | N_Private_Type_Declaration\n+            | N_Subprogram_Declaration\n+            | N_Subtype_Declaration\n+         =>\n             return True;\n \n-         when others                                   =>\n+         when others =>\n             return False;\n       end case;\n    end Is_Declaration_Other_Than_Renaming;\n@@ -13283,7 +13292,9 @@ package body Sem_Util is\n \n       else\n          case Nkind (N) is\n-            when N_Indexed_Component | N_Slice =>\n+            when N_Indexed_Component\n+               | N_Slice\n+            =>\n                return\n                  Is_Object_Reference (Prefix (N))\n                    or else Is_Access_Type (Etype (Prefix (N)));\n@@ -14219,16 +14230,17 @@ package body Sem_Util is\n    function Is_Renaming_Declaration (N : Node_Id) return Boolean is\n    begin\n       case Nkind (N) is\n-         when N_Exception_Renaming_Declaration         |\n-              N_Generic_Function_Renaming_Declaration  |\n-              N_Generic_Package_Renaming_Declaration   |\n-              N_Generic_Procedure_Renaming_Declaration |\n-              N_Object_Renaming_Declaration            |\n-              N_Package_Renaming_Declaration           |\n-              N_Subprogram_Renaming_Declaration        =>\n+         when N_Exception_Renaming_Declaration\n+            | N_Generic_Function_Renaming_Declaration\n+            | N_Generic_Package_Renaming_Declaration\n+            | N_Generic_Procedure_Renaming_Declaration\n+            | N_Object_Renaming_Declaration\n+            | N_Package_Renaming_Declaration\n+            | N_Subprogram_Renaming_Declaration\n+          =>\n             return True;\n \n-         when others                                   =>\n+         when others =>\n             return False;\n       end case;\n    end Is_Renaming_Declaration;\n@@ -14397,23 +14409,27 @@ package body Sem_Util is\n       pragma Assert (Nkind (Orig_N) in N_Subexpr);\n \n       case Nkind (Orig_N) is\n-         when N_Character_Literal |\n-              N_Integer_Literal   |\n-              N_Real_Literal      |\n-              N_String_Literal    =>\n+         when N_Character_Literal\n+            | N_Integer_Literal\n+            | N_Real_Literal\n+            | N_String_Literal\n+         =>\n             null;\n \n-         when N_Identifier    |\n-              N_Expanded_Name =>\n+         when N_Expanded_Name\n+            | N_Identifier\n+         =>\n             if Is_Entity_Name (Orig_N)\n               and then Present (Entity (Orig_N))  --  needed in some cases\n             then\n                case Ekind (Entity (Orig_N)) is\n-                  when E_Constant            |\n-                       E_Enumeration_Literal |\n-                       E_Named_Integer       |\n-                       E_Named_Real          =>\n+                  when E_Constant\n+                     | E_Enumeration_Literal\n+                     | E_Named_Integer\n+                     | E_Named_Real\n+                  =>\n                      null;\n+\n                   when others =>\n                      if Is_Type (Entity (Orig_N)) then\n                         null;\n@@ -14423,22 +14439,25 @@ package body Sem_Util is\n                end case;\n             end if;\n \n-         when N_Qualified_Expression |\n-              N_Type_Conversion      =>\n+         when N_Qualified_Expression\n+            | N_Type_Conversion\n+         =>\n             Is_Ok := Is_SPARK_05_Initialization_Expr (Expression (Orig_N));\n \n          when N_Unary_Op =>\n             Is_Ok := Is_SPARK_05_Initialization_Expr (Right_Opnd (Orig_N));\n \n-         when N_Binary_Op       |\n-              N_Short_Circuit   |\n-              N_Membership_Test =>\n+         when N_Binary_Op\n+            | N_Membership_Test\n+            | N_Short_Circuit\n+         =>\n             Is_Ok := Is_SPARK_05_Initialization_Expr (Left_Opnd (Orig_N))\n                        and then\n                          Is_SPARK_05_Initialization_Expr (Right_Opnd (Orig_N));\n \n-         when N_Aggregate           |\n-              N_Extension_Aggregate =>\n+         when N_Aggregate\n+            | N_Extension_Aggregate\n+         =>\n             if Nkind (Orig_N) = N_Extension_Aggregate then\n                Is_Ok :=\n                  Is_SPARK_05_Initialization_Expr (Ancestor_Part (Orig_N));\n@@ -15037,7 +15056,9 @@ package body Sem_Util is\n \n       else\n          case Nkind (Orig_Node) is\n-            when N_Indexed_Component | N_Slice =>\n+            when N_Indexed_Component\n+               | N_Slice\n+            =>\n                return Is_Variable_Prefix (Prefix (Orig_Node));\n \n             when N_Selected_Component =>\n@@ -15397,9 +15418,9 @@ package body Sem_Util is\n \n          --  Positional parameter for procedure or accept call\n \n-         when N_Procedure_Call_Statement |\n-              N_Accept_Statement\n-          =>\n+         when N_Accept_Statement\n+            | N_Procedure_Call_Statement\n+         =>\n             declare\n                Proc : Entity_Id;\n                Form : Entity_Id;\n@@ -15487,7 +15508,6 @@ package body Sem_Util is\n \n          when others =>\n             return False;\n-\n       end case;\n    end Known_To_Be_Assigned;\n \n@@ -15681,7 +15701,9 @@ package body Sem_Util is\n          --  or slice is an lvalue, except if it is an access type, where we\n          --  have an implicit dereference.\n \n-         when N_Indexed_Component | N_Slice =>\n+         when N_Indexed_Component\n+            | N_Slice\n+         =>\n             if N /= Prefix (P)\n               or else (Present (Etype (N)) and then Is_Access_Type (Etype (N)))\n             then\n@@ -15704,9 +15726,9 @@ package body Sem_Util is\n          --  In older versions of Ada function call arguments are never\n          --  lvalues. In Ada 2012 functions can have in-out parameters.\n \n-         when N_Subprogram_Call      |\n-              N_Entry_Call_Statement |\n-              N_Accept_Statement\n+         when N_Accept_Statement\n+            | N_Entry_Call_Statement\n+            | N_Subprogram_Call\n          =>\n             if Nkind (P) = N_Function_Call and then Ada_Version < Ada_2012 then\n                return False;\n@@ -15807,7 +15829,6 @@ package body Sem_Util is\n \n          when others =>\n             return False;\n-\n       end case;\n    end May_Be_Lvalue;\n \n@@ -17746,7 +17767,6 @@ package body Sem_Util is\n \n          else\n             Return_Master_Scope_Depth_Of_Call : declare\n-\n                function Innermost_Master_Scope_Depth\n                  (N : Node_Id) return Uint;\n                --  Returns the scope depth of the given node's innermost\n@@ -17769,42 +17789,42 @@ package body Sem_Util is\n \n                   while Present (Node_Par) loop\n                      case Nkind (Node_Par) is\n-                        when N_Component_Declaration           |\n-                             N_Entry_Declaration               |\n-                             N_Formal_Object_Declaration       |\n-                             N_Formal_Type_Declaration         |\n-                             N_Full_Type_Declaration           |\n-                             N_Incomplete_Type_Declaration     |\n-                             N_Loop_Parameter_Specification    |\n-                             N_Object_Declaration              |\n-                             N_Protected_Type_Declaration      |\n-                             N_Private_Extension_Declaration   |\n-                             N_Private_Type_Declaration        |\n-                             N_Subtype_Declaration             |\n-                             N_Function_Specification          |\n-                             N_Procedure_Specification         |\n-                             N_Task_Type_Declaration           |\n-                             N_Body_Stub                       |\n-                             N_Generic_Instantiation           |\n-                             N_Proper_Body                     |\n-                             N_Implicit_Label_Declaration      |\n-                             N_Package_Declaration             |\n-                             N_Single_Task_Declaration         |\n-                             N_Subprogram_Declaration          |\n-                             N_Generic_Declaration             |\n-                             N_Renaming_Declaration            |\n-                             N_Block_Statement                 |\n-                             N_Formal_Subprogram_Declaration   |\n-                             N_Abstract_Subprogram_Declaration |\n-                             N_Entry_Body                      |\n-                             N_Exception_Declaration           |\n-                             N_Formal_Package_Declaration      |\n-                             N_Number_Declaration              |\n-                             N_Package_Specification           |\n-                             N_Parameter_Specification         |\n-                             N_Single_Protected_Declaration    |\n-                             N_Subunit                         =>\n-\n+                        when N_Abstract_Subprogram_Declaration\n+                           | N_Block_Statement\n+                           | N_Body_Stub\n+                           | N_Component_Declaration\n+                           | N_Entry_Body\n+                           | N_Entry_Declaration\n+                           | N_Exception_Declaration\n+                           | N_Formal_Object_Declaration\n+                           | N_Formal_Package_Declaration\n+                           | N_Formal_Subprogram_Declaration\n+                           | N_Formal_Type_Declaration\n+                           | N_Full_Type_Declaration\n+                           | N_Function_Specification\n+                           | N_Generic_Declaration\n+                           | N_Generic_Instantiation\n+                           | N_Implicit_Label_Declaration\n+                           | N_Incomplete_Type_Declaration\n+                           | N_Loop_Parameter_Specification\n+                           | N_Number_Declaration\n+                           | N_Object_Declaration\n+                           | N_Package_Declaration\n+                           | N_Package_Specification\n+                           | N_Parameter_Specification\n+                           | N_Private_Extension_Declaration\n+                           | N_Private_Type_Declaration\n+                           | N_Procedure_Specification\n+                           | N_Proper_Body\n+                           | N_Protected_Type_Declaration\n+                           | N_Renaming_Declaration\n+                           | N_Single_Protected_Declaration\n+                           | N_Single_Task_Declaration\n+                           | N_Subprogram_Declaration\n+                           | N_Subtype_Declaration\n+                           | N_Subunit\n+                           | N_Task_Type_Declaration\n+                        =>\n                            return Scope_Depth\n                                     (Nearest_Dynamic_Scope\n                                        (Defining_Entity (Node_Par)));\n@@ -20382,7 +20402,8 @@ package body Sem_Util is\n       case Size is\n          when 8 | 16 | 32 | 64 =>\n             return Size = UI_To_Int (Alignment (Typ)) * 8;\n-         when others           =>\n+\n+         when others =>\n             return False;\n       end case;\n    end Support_Atomic_Primitives;"}, {"sha": "5cd37f0c619e9416378f40b7cb20d1023870c79c", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -990,7 +990,7 @@ package body Sem_Warn is\n                --  Similarly, the generic formals of a generic subprogram are\n                --  not accessible.\n \n-               when N_Generic_Subprogram_Declaration  =>\n+               when N_Generic_Subprogram_Declaration =>\n                   if Is_List_Member (Prev)\n                     and then List_Containing (Prev) =\n                                Generic_Formal_Declarations (P)\n@@ -1014,12 +1014,13 @@ package body Sem_Warn is\n \n                --  If we reach any other body, definitely not referenceable\n \n-               when N_Package_Body    |\n-                    N_Task_Body       |\n-                    N_Entry_Body      |\n-                    N_Protected_Body  |\n-                    N_Block_Statement |\n-                    N_Subunit         =>\n+               when N_Block_Statement\n+                  | N_Entry_Body\n+                  | N_Package_Body\n+                  | N_Protected_Body\n+                  | N_Subunit\n+                  | N_Task_Body\n+               =>\n                   return False;\n \n                --  For all other cases, keep looking up tree\n@@ -1792,7 +1793,9 @@ package body Sem_Warn is\n \n          --  For identifier or expanded name, examine the entity involved\n \n-         when N_Identifier | N_Expanded_Name =>\n+         when N_Expanded_Name\n+            | N_Identifier\n+         =>\n             declare\n                E : constant Entity_Id := Entity (N);\n \n@@ -2052,8 +2055,9 @@ package body Sem_Warn is\n \n          --  Indexed component or slice\n \n-         when N_Indexed_Component | N_Slice =>\n-\n+         when N_Indexed_Component\n+            | N_Slice\n+         =>\n             --  If prefix does not involve dereferencing an access type, then\n             --  we know we are OK if the component type is fully initialized,\n             --  since the component will have been set as part of the default\n@@ -2124,9 +2128,10 @@ package body Sem_Warn is\n          --  For type conversions, qualifications, or expressions with actions,\n          --  examine the expression.\n \n-         when N_Type_Conversion         |\n-              N_Qualified_Expression    |\n-              N_Expression_With_Actions =>\n+         when N_Expression_With_Actions\n+            | N_Qualified_Expression\n+            | N_Type_Conversion\n+         =>\n             Check_Unset_Reference (Expression (N));\n \n          --  For explicit dereference, always check prefix, which will generate\n@@ -2139,7 +2144,6 @@ package body Sem_Warn is\n \n          when others =>\n             null;\n-\n       end case;\n    end Check_Unset_Reference;\n \n@@ -4141,11 +4145,11 @@ package body Sem_Warn is\n                   end if;\n                end if;\n \n-            when E_In_Parameter     |\n-                 E_In_Out_Parameter =>\n-\n-               --  Do not emit message for formals of a renaming, because\n-               --  they are never referenced explicitly.\n+            when E_In_Out_Parameter\n+               | E_In_Parameter\n+            =>\n+               --  Do not emit message for formals of a renaming, because they\n+               --  are never referenced explicitly.\n \n                if Nkind (Original_Node (Unit_Declaration_Node (Scope (E)))) /=\n                                           N_Subprogram_Renaming_Declaration\n@@ -4176,8 +4180,9 @@ package body Sem_Warn is\n             when E_Discriminant =>\n                Error_Msg_N (\"?u?discriminant & is not referenced!\", E);\n \n-            when E_Named_Integer |\n-                 E_Named_Real    =>\n+            when E_Named_Integer\n+               | E_Named_Real\n+            =>\n                Error_Msg_N -- CODEFIX\n                  (\"?u?named number & is not referenced!\", E);\n "}, {"sha": "f25c9f84f812717a34aa3c61aaae358f2e82b820", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -203,10 +203,14 @@ package body Set_Targ is\n \n    begin\n       case T is\n-         when S_Short_Float | S_Float =>\n+         when S_Float\n+            | S_Short_Float\n+         =>\n             return \"float\";\n+\n          when S_Long_Float =>\n             return \"double\";\n+\n          when S_Long_Long_Float =>\n             if Long_Double_Index >= 0\n               and then FPT_Mode_Table (Long_Double_Index).DIGS <= Max_HW_Digs\n@@ -302,8 +306,8 @@ package body Set_Targ is\n             Write_Str (\"pragma Float_Representation (\");\n \n             case Float_Rep is\n-               when IEEE_Binary => Write_Str (\"IEEE\");\n                when AAMP        => Write_Str (\"AAMP\");\n+               when IEEE_Binary => Write_Str (\"IEEE\");\n             end case;\n \n             Write_Line (\", \" & T (1 .. Last) & \");\");\n@@ -525,10 +529,8 @@ package body Set_Targ is\n             AddC (' ');\n \n             case E.FLOAT_REP is\n-               when IEEE_Binary =>\n-                  AddC ('I');\n-               when AAMP        =>\n-                  AddC ('A');\n+               when AAMP        => AddC ('A');\n+               when IEEE_Binary => AddC ('I');\n             end case;\n \n             AddC (' ');\n@@ -781,8 +783,10 @@ package body Set_Targ is\n             case Buffer (N) is\n                when 'I'    =>\n                   E.FLOAT_REP := IEEE_Binary;\n+\n                when 'A'    =>\n                   E.FLOAT_REP := AAMP;\n+\n                when others =>\n                   FailN (\"bad float rep field for\");\n             end case;"}, {"sha": "8141262d5581e37c7868bf2c8e38d503050f04bd", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -817,8 +817,10 @@ package body Sinput.L is\n \n             --  PRAGMA, WITH, USE (which can appear before a body)\n \n-            when Tok_Pragma | Tok_With | Tok_Use =>\n-\n+            when Tok_Pragma\n+               | Tok_Use\n+               | Tok_With\n+            =>\n                --  We just want to skip any of these, do it by skipping to a\n                --  semicolon, but check for EOF, in case we have bad syntax.\n \n@@ -844,7 +846,9 @@ package body Sinput.L is\n \n             --  FUNCTION or PROCEDURE\n \n-            when Tok_Procedure | Tok_Function =>\n+            when Tok_Function\n+               | Tok_Procedure\n+            =>\n                Pcount := 0;\n \n                --  Loop through tokens following PROCEDURE or FUNCTION\n@@ -870,7 +874,10 @@ package body Sinput.L is\n \n                      --  BEGIN or IS or END definitely means body is present\n \n-                     when Tok_Begin | Tok_Is | Tok_End =>\n+                     when Tok_Begin\n+                        | Tok_End\n+                        | Tok_Is\n+                     =>\n                         return True;\n \n                      --  Semicolon means no body present if at outside any"}, {"sha": "4b4775734b3cf2a23fc5d0042b59abe51cbec467", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -280,13 +280,17 @@ package body Sinput is\n             Wide_Character_Encoding_Method := WCEM_UTF8;\n             Upper_Half_Encoding := True;\n \n-         when UTF16_LE | UTF16_BE =>\n+         when UTF16_BE\n+            | UTF16_LE\n+         =>\n             Set_Standard_Error;\n             Write_Line (\"UTF-16 encoding format not recognized\");\n             Set_Standard_Output;\n             raise Unrecoverable_Error;\n \n-         when UTF32_LE | UTF32_BE =>\n+         when UTF32_BE\n+            | UTF32_LE\n+         =>\n             Set_Standard_Error;\n             Write_Line (\"UTF-32 encoding format not recognized\");\n             Set_Standard_Output;"}, {"sha": "3951b5778b82cbbdf233af37eb753d5921ecc02c", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -3976,7 +3976,9 @@ package body Sprint is\n \n             Write_Str (\");\");\n \n-         when E_Signed_Integer_Subtype | E_Enumeration_Subtype =>\n+         when E_Enumeration_Subtype\n+            | E_Signed_Integer_Subtype\n+         =>\n             Write_Str_With_Col_Check (\"subtype \");\n             Write_Id (E);\n             Write_Str (\" is \");\n@@ -3992,7 +3994,6 @@ package body Sprint is\n             Write_Ekind (E);\n             Write_Str (\">;\");\n       end case;\n-\n    end Write_Implicit_Def;\n \n    ------------------\n@@ -4265,11 +4266,11 @@ package body Sprint is\n                   --  Signed integer types, and modular integer subtypes,\n                   --  and also enumeration subtypes.\n \n-                  when E_Signed_Integer_Type     |\n-                       E_Signed_Integer_Subtype  |\n-                       E_Modular_Integer_Subtype |\n-                       E_Enumeration_Subtype     =>\n-\n+                  when E_Enumeration_Subtype\n+                     | E_Modular_Integer_Subtype\n+                     | E_Signed_Integer_Subtype\n+                     | E_Signed_Integer_Type\n+                  =>\n                      Write_Header (Ekind (Typ) = E_Signed_Integer_Type);\n \n                      if Ekind (Typ) = E_Signed_Integer_Type then\n@@ -4329,9 +4330,9 @@ package body Sprint is\n \n                   --  Floating point types and subtypes\n \n-                  when E_Floating_Point_Type    |\n-                       E_Floating_Point_Subtype =>\n-\n+                  when E_Floating_Point_Subtype\n+                     | E_Floating_Point_Type\n+                  =>\n                      Write_Header (Ekind (Typ) = E_Floating_Point_Type);\n \n                      if Ekind (Typ) = E_Floating_Point_Type then\n@@ -4374,7 +4375,9 @@ package body Sprint is\n \n                   --  Record subtypes\n \n-                  when E_Record_Subtype | E_Record_Subtype_With_Private =>\n+                  when E_Record_Subtype\n+                     | E_Record_Subtype_With_Private\n+                  =>\n                      Write_Header (False);\n                      Write_Str (\"record\");\n                      Indent_Begin;\n@@ -4397,8 +4400,9 @@ package body Sprint is\n \n                   --  Class-Wide types\n \n-                  when E_Class_Wide_Type    |\n-                       E_Class_Wide_Subtype =>\n+                  when E_Class_Wide_Subtype\n+                     | E_Class_Wide_Type\n+                  =>\n                      Write_Header (Ekind (Typ) = E_Class_Wide_Type);\n                      Write_Name_With_Col_Check (Chars (Etype (Typ)));\n                      Write_Str (\"'Class\");\n@@ -4467,7 +4471,6 @@ package body Sprint is\n                   when others =>\n                      Write_Header (True);\n                      Write_Str (\"???\");\n-\n                end case;\n             end if;\n "}, {"sha": "ff8155adfc9ed4b375fc445194325bde580424b7", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -306,7 +306,6 @@ package body Stylesw is\n \n          if On then\n             case C is\n-\n             when '+' =>\n                null;\n \n@@ -480,7 +479,6 @@ package body Stylesw is\n \n          else\n             case C is\n-\n             when '+' =>\n                On := True;\n "}, {"sha": "8795703bac774a0b398c01afe946696d758f6497", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -150,7 +150,6 @@ package body Switch.M is\n          --  Processing for a switch\n \n          case Switch_Starts_With_Gnat is\n-\n             when False =>\n \n                --  All switches that don't start with -gnat stay as is,\n@@ -218,15 +217,15 @@ package body Switch.M is\n                return;\n \n             when True =>\n-\n                case C is\n \n                   --  One-letter switches\n \n-                  when 'a' | 'A' | 'b' | 'B' | 'c' | 'C' | 'E' | 'f' |\n-                       'F' | 'g' | 'h' | 'H' | 'I' | 'L' | 'N' | 'p' |\n-                       'P' | 'q' | 'Q' | 'r' | 's' | 'S' | 't' | 'u' |\n-                       'U' | 'v' | 'x' | 'X' | 'Z' =>\n+                  when 'a' | 'A' | 'b' | 'B' | 'c' | 'C' | 'E' | 'f' | 'F'\n+                     | 'g' | 'h' | 'H' | 'I' | 'L' | 'N' | 'p' | 'P' | 'q'\n+                     | 'Q' | 'r' | 's' | 'S' | 't' | 'u' | 'U' | 'v' | 'x'\n+                     | 'X' | 'Z'\n+                  =>\n                      Storing (First_Stored) := C;\n                      Add_Switch_Component\n                        (Storing (Storing'First .. First_Stored));\n@@ -291,7 +290,6 @@ package body Switch.M is\n \n                      else\n                         case Switch_Chars (Ptr) is\n-\n                            when 'A' =>\n                               Ptr := Ptr + 1;\n                               Add_Switch_Component (\"-gnateA\");\n@@ -687,9 +685,7 @@ package body Switch.M is\n                   when others =>\n                      Last := 0;\n                      return;\n-\n                end case;\n-\n          end case;\n       end loop;\n    end Normalize_Compiler_Switches;\n@@ -793,17 +789,10 @@ package body Switch.M is\n             Verbose_Mode := True;\n \n             case Switch_Chars (Ptr) is\n-               when 'l' =>\n-                  Verbosity_Level := Opt.Low;\n-\n-               when 'm' =>\n-                  Verbosity_Level := Opt.Medium;\n-\n-               when 'h' =>\n-                  Verbosity_Level := Opt.High;\n-\n-               when others =>\n-                  Success := False;\n+               when 'l'    => Verbosity_Level := Opt.Low;\n+               when 'm'    => Verbosity_Level := Opt.Medium;\n+               when 'h'    => Verbosity_Level := Opt.High;\n+               when others => Success := False;\n             end case;\n \n          elsif C = 'd' then\n@@ -916,9 +905,7 @@ package body Switch.M is\n \n       else\n          Check_Switch : begin\n-\n             case C is\n-\n                when 'a' =>\n                   Check_Readonly_Files := True;\n \n@@ -1058,7 +1045,6 @@ package body Switch.M is\n                   else\n                      Success := False;\n                   end if;\n-\n             end case;\n          end Check_Switch;\n       end if;"}, {"sha": "7c1f1b7d93e372e894eedebd8da76342cc133ff2", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -603,13 +603,13 @@ package body Treepr is\n \n             begin\n                case M is\n-                  when Default_Mechanism        =>\n+                  when Default_Mechanism =>\n                      Write_Str (\"Default\");\n \n-                  when By_Copy                  =>\n+                  when By_Copy =>\n                      Write_Str (\"By_Copy\");\n \n-                  when By_Reference             =>\n+                  when By_Reference =>\n                      Write_Str (\"By_Reference\");\n \n                   when 1 .. Mechanism_Type'Last =>\n@@ -1200,8 +1200,8 @@ package body Treepr is\n          F := Pchars (P);\n          P := P + 1;\n \n-         --  Check for case of False flag, which we never print, or\n-         --  an Empty field, which is also never printed\n+         --  Check for case of False flag, which we never print, or an Empty\n+         --  field, which is also never printed.\n \n          case F is\n             when F_Field1 =>\n@@ -1268,24 +1268,24 @@ package body Treepr is\n                      Print_Field (Field5 (N), Fmt);\n                   end if;\n \n-               when F_Flag1  => Print_Flag  (Flag1 (N));\n-               when F_Flag2  => Print_Flag  (Flag2 (N));\n-               when F_Flag3  => Print_Flag  (Flag3 (N));\n-               when F_Flag4  => Print_Flag  (Flag4 (N));\n-               when F_Flag5  => Print_Flag  (Flag5 (N));\n-               when F_Flag6  => Print_Flag  (Flag6 (N));\n-               when F_Flag7  => Print_Flag  (Flag7 (N));\n-               when F_Flag8  => Print_Flag  (Flag8 (N));\n-               when F_Flag9  => Print_Flag  (Flag9 (N));\n-               when F_Flag10 => Print_Flag  (Flag10 (N));\n-               when F_Flag11 => Print_Flag  (Flag11 (N));\n-               when F_Flag12 => Print_Flag  (Flag12 (N));\n-               when F_Flag13 => Print_Flag  (Flag13 (N));\n-               when F_Flag14 => Print_Flag  (Flag14 (N));\n-               when F_Flag15 => Print_Flag  (Flag15 (N));\n-               when F_Flag16 => Print_Flag  (Flag16 (N));\n-               when F_Flag17 => Print_Flag  (Flag17 (N));\n-               when F_Flag18 => Print_Flag  (Flag18 (N));\n+               when F_Flag1  => Print_Flag (Flag1 (N));\n+               when F_Flag2  => Print_Flag (Flag2 (N));\n+               when F_Flag3  => Print_Flag (Flag3 (N));\n+               when F_Flag4  => Print_Flag (Flag4 (N));\n+               when F_Flag5  => Print_Flag (Flag5 (N));\n+               when F_Flag6  => Print_Flag (Flag6 (N));\n+               when F_Flag7  => Print_Flag (Flag7 (N));\n+               when F_Flag8  => Print_Flag (Flag8 (N));\n+               when F_Flag9  => Print_Flag (Flag9 (N));\n+               when F_Flag10 => Print_Flag (Flag10 (N));\n+               when F_Flag11 => Print_Flag (Flag11 (N));\n+               when F_Flag12 => Print_Flag (Flag12 (N));\n+               when F_Flag13 => Print_Flag (Flag13 (N));\n+               when F_Flag14 => Print_Flag (Flag14 (N));\n+               when F_Flag15 => Print_Flag (Flag15 (N));\n+               when F_Flag16 => Print_Flag (Flag16 (N));\n+               when F_Flag17 => Print_Flag (Flag17 (N));\n+               when F_Flag18 => Print_Flag (Flag18 (N));\n             end case;\n \n             Print_Eol;\n@@ -1637,10 +1637,13 @@ package body Treepr is\n       case N is\n          when List_Low_Bound .. List_High_Bound - 1 =>\n             Print_List_Subtree (List_Id (N));\n+\n          when Node_Range =>\n             Print_Node_Subtree (Node_Id (N));\n+\n          when Elist_Range =>\n             Print_Elist_Subtree (Elist_Id (N));\n+\n          when others =>\n             pp (N);\n       end case;\n@@ -1684,7 +1687,6 @@ package body Treepr is\n       Hash_Slot := H;\n       Hash_Table (H).Id := Id;\n       return 0;\n-\n    end Serial_Number;\n \n    -----------------------"}, {"sha": "c879cbbdee200174862b38bed225d9ece66e6a38", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 61, "deletions": 57, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -234,85 +234,89 @@ package body Uname is\n \n          else\n             case Kind is\n-\n-               when N_Identifier                      |\n-                    N_Defining_Identifier             |\n-                    N_Defining_Operator_Symbol        =>\n-\n+               when N_Defining_Identifier\n+                  | N_Defining_Operator_Symbol\n+                  | N_Identifier\n+               =>\n                   --  Note: it is of course an error to have a defining\n                   --  operator symbol at this point, but this is not where\n                   --  the error is signalled, so we handle it nicely here.\n \n                   Add_Name (Chars (Node));\n \n-               when N_Defining_Program_Unit_Name      =>\n+               when N_Defining_Program_Unit_Name =>\n                   Add_Node_Name (Name (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Defining_Identifier (Node));\n \n-               when N_Selected_Component              |\n-                    N_Expanded_Name                   =>\n+               when N_Expanded_Name\n+                  | N_Selected_Component\n+               =>\n                   Add_Node_Name (Prefix (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Selector_Name (Node));\n \n-               when N_Subprogram_Specification        |\n-                    N_Package_Specification           =>\n+               when N_Package_Specification\n+                  | N_Subprogram_Specification\n+               =>\n                   Add_Node_Name (Defining_Unit_Name (Node));\n \n-               when N_Subprogram_Body                 |\n-                    N_Subprogram_Declaration          |\n-                    N_Package_Declaration             |\n-                    N_Generic_Declaration             =>\n+               when N_Generic_Declaration\n+                  | N_Package_Declaration\n+                  | N_Subprogram_Body\n+                  | N_Subprogram_Declaration\n+               =>\n                   Add_Node_Name (Specification (Node));\n \n-               when N_Generic_Instantiation           =>\n+               when N_Generic_Instantiation =>\n                   Add_Node_Name (Defining_Unit_Name (Node));\n \n-               when N_Package_Body                    =>\n+               when N_Package_Body =>\n                   Add_Node_Name (Defining_Unit_Name (Node));\n \n-               when N_Task_Body                       |\n-                    N_Protected_Body                  =>\n+               when N_Protected_Body\n+                  | N_Task_Body\n+               =>\n                   Add_Node_Name (Defining_Identifier (Node));\n \n-               when N_Package_Renaming_Declaration    =>\n+               when N_Package_Renaming_Declaration =>\n                   Add_Node_Name (Defining_Unit_Name (Node));\n \n                when N_Subprogram_Renaming_Declaration =>\n                   Add_Node_Name (Specification (Node));\n \n-               when N_Generic_Renaming_Declaration   =>\n+               when N_Generic_Renaming_Declaration =>\n                   Add_Node_Name (Defining_Unit_Name (Node));\n \n-               when N_Subprogram_Body_Stub            =>\n+               when N_Subprogram_Body_Stub =>\n                   Add_Node_Name (Get_Parent (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Specification (Node));\n \n-               when N_Compilation_Unit                =>\n+               when N_Compilation_Unit =>\n                   Add_Node_Name (Unit (Node));\n \n-               when N_Package_Body_Stub               =>\n+               when N_Package_Body_Stub =>\n                   Add_Node_Name (Get_Parent (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Defining_Identifier (Node));\n \n-               when N_Task_Body_Stub                  |\n-                    N_Protected_Body_Stub             =>\n+               when N_Protected_Body_Stub\n+                  | N_Task_Body_Stub\n+               =>\n                   Add_Node_Name (Get_Parent (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Defining_Identifier (Node));\n \n-               when N_Subunit                         =>\n+               when N_Subunit =>\n                   Add_Node_Name (Name (Node));\n                   Add_Char ('.');\n                   Add_Node_Name (Proper_Body (Node));\n \n-               when N_With_Clause                     =>\n+               when N_With_Clause =>\n                   Add_Node_Name (Name (Node));\n \n-               when N_Pragma                          =>\n+               when N_Pragma =>\n                   Add_Node_Name (Expression (First\n                     (Pragma_Argument_Associations (Node))));\n \n@@ -321,15 +325,15 @@ package body Uname is\n                --  with these error situations here, and produce a reasonable\n                --  unit name using the defining identifier.\n \n-               when N_Task_Type_Declaration           |\n-                    N_Single_Task_Declaration         |\n-                    N_Protected_Type_Declaration      |\n-                    N_Single_Protected_Declaration    =>\n+               when N_Protected_Type_Declaration\n+                  | N_Single_Protected_Declaration\n+                  | N_Single_Task_Declaration\n+                  | N_Task_Type_Declaration\n+               =>\n                   Add_Node_Name (Defining_Identifier (Node));\n \n                when others =>\n                   raise Program_Error;\n-\n             end case;\n          end if;\n       end Add_Node_Name;\n@@ -378,31 +382,31 @@ package body Uname is\n       Add_Char ('%');\n \n       case Nkind (Node) is\n-         when N_Generic_Declaration             |\n-              N_Subprogram_Declaration          |\n-              N_Package_Declaration             |\n-              N_With_Clause                     |\n-              N_Pragma                          |\n-              N_Generic_Instantiation           |\n-              N_Package_Renaming_Declaration    |\n-              N_Subprogram_Renaming_Declaration |\n-              N_Generic_Renaming_Declaration    |\n-              N_Single_Task_Declaration         |\n-              N_Single_Protected_Declaration    |\n-              N_Task_Type_Declaration           |\n-              N_Protected_Type_Declaration      =>\n-\n+         when N_Generic_Declaration\n+            | N_Generic_Instantiation\n+            | N_Generic_Renaming_Declaration\n+            | N_Package_Declaration\n+            | N_Package_Renaming_Declaration\n+            | N_Pragma\n+            | N_Protected_Type_Declaration\n+            | N_Single_Protected_Declaration\n+            | N_Single_Task_Declaration\n+            | N_Subprogram_Declaration\n+            | N_Subprogram_Renaming_Declaration\n+            | N_Task_Type_Declaration\n+            | N_With_Clause\n+         =>\n             Add_Char ('s');\n \n-         when N_Subprogram_Body                 |\n-              N_Package_Body                    |\n-              N_Subunit                         |\n-              N_Body_Stub                       |\n-              N_Task_Body                       |\n-              N_Protected_Body                  |\n-              N_Identifier                      |\n-              N_Selected_Component              =>\n-\n+         when N_Body_Stub\n+            | N_Identifier\n+            | N_Package_Body\n+            | N_Protected_Body\n+            | N_Selected_Component\n+            | N_Subprogram_Body\n+            | N_Subunit\n+            | N_Task_Body\n+         =>\n             Add_Char ('b');\n \n          when others =>"}, {"sha": "18adda31187b46324276ce7651e71ceb5d99225b", "filename": "gcc/ada/validsw.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fvalidsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fvalidsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -132,7 +132,6 @@ package body Validsw is\n          Validity_Checks_On := True;\n \n          case C is\n-\n             when 'c' =>\n                Validity_Check_Copies         := True;\n \n@@ -237,7 +236,6 @@ package body Validsw is\n                   Err_Col := J - 1;\n                   return;\n                end if;\n-\n          end case;\n       end loop;\n "}, {"sha": "8dd162cf414c12a6a0395c21f945390c9581dd93", "filename": "gcc/ada/widechar.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fwidechar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fwidechar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -74,10 +74,11 @@ package body Widechar is\n          --  All other encoding methods use the upper bit set in the first\n          --  character to uniquely represent a wide character.\n \n-         when WCEM_Upper     |\n-              WCEM_Shift_JIS |\n-              WCEM_EUC       |\n-              WCEM_UTF8      =>\n+         when WCEM_EUC\n+            | WCEM_Shift_JIS\n+            | WCEM_Upper\n+            | WCEM_UTF8\n+         =>\n             return S (P) >= Character'Val (16#80#);\n       end case;\n    end Is_Start_Of_Wide_Char;"}, {"sha": "8eecb298f3625ed826352eb60a89f9a4bae50061", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2008-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -354,7 +354,12 @@ procedure XOSCons is\n            Integer (Parse_Int (Line (Index1 .. Index2 - 1), CNU).Abs_Value);\n \n          case Info.Kind is\n-            when CND | CNU | CNS | C | SUB =>\n+            when C\n+               | CND\n+               | CNS\n+               | CNU\n+               | SUB\n+            =>\n                Index1 := Index2 + 1;\n                Find_Colon (Index2);\n "}, {"sha": "8a6411c75e39f0ab36c5adedaed11b573a8d3cdc", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f43ee6d0921b73670e8e123cdd0850dfeb330e/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -401,8 +401,8 @@ package body Xr_Tabls is\n \n    begin\n       case Ref_Type is\n-         when 'b' | 'c' | 'H' | 'm' | 'o' | 'r' | 'R' |\n-              's' | 'i' | ' ' | 'x' =>\n+         when ' ' | 'b' | 'c' | 'H' | 'i' | 'm' | 'o' | 'r' | 'R' | 's' | 'x'\n+         =>\n             null;\n \n          when 'l' | 'w' =>\n@@ -430,10 +430,10 @@ package body Xr_Tabls is\n                  Decl_Type    => ' ',\n                  Is_Parameter => True);\n \n-         when 'e' | 'E' | 'z' | 't' | 'p' | 'P' | 'k' | 'd' =>\n+         when 'd' | 'e' | 'E' | 'k' | 'p' | 'P' | 't' | 'z' =>\n             return;\n \n-         when others    =>\n+         when others =>\n             Ada.Text_IO.Put_Line (\"Unknown reference type: \" & Ref_Type);\n             return;\n       end case;\n@@ -455,7 +455,7 @@ package body Xr_Tabls is\n             New_Ref.Next          := Declaration.Body_Ref;\n             Declaration.Body_Ref  := New_Ref;\n \n-         when 'r' | 'R' | 's' | 'H' | 'i' | 'l' | 'o' | ' ' | 'x' | 'w' =>\n+         when ' ' | 'H' | 'i' | 'l' | 'o' | 'r' | 'R' | 's' | 'w' | 'x' =>\n             New_Ref.Next          := Declaration.Ref_Ref;\n             Declaration.Ref_Ref   := New_Ref;\n "}]}