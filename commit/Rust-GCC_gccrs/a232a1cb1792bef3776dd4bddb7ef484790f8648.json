{"sha": "a232a1cb1792bef3776dd4bddb7ef484790f8648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIzMmExY2IxNzkyYmVmMzc3NmRkNGJkZGI3ZWY0ODQ3OTBmODY0OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-02-21T20:23:09Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-02-21T20:23:09Z"}, "message": "re PR c++/79535 (ICE in verify_ctor_sanity, at cp/constexpr.c:2636)\n\n\tPR c++/79535\n\t* cp-tree.h (maybe_reject_flexarray_init): Declare.\n\t* init.c (maybe_reject_flexarray_init): No longer static.\n\tAdd check for current_function_decl.\n\t* parser.c (cp_parser_late_parse_one_default_arg): Reject\n\ta default mem-initializer for a flexible array.\n\n\t* g++.dg/ext/flexary23.C: New test.\n\nFrom-SVN: r245641", "tree": {"sha": "4590cdaaddcae61143a8e8bc8a1ea54029fdb264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4590cdaaddcae61143a8e8bc8a1ea54029fdb264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a232a1cb1792bef3776dd4bddb7ef484790f8648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a232a1cb1792bef3776dd4bddb7ef484790f8648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a232a1cb1792bef3776dd4bddb7ef484790f8648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a232a1cb1792bef3776dd4bddb7ef484790f8648/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2b48844ed315cdceef32e22f15268eca0c71785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b48844ed315cdceef32e22f15268eca0c71785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b48844ed315cdceef32e22f15268eca0c71785"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "90272d2638edb44699ff91eca87ed80ceb4add94", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -1,3 +1,12 @@\n+2017-02-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/79535\n+\t* cp-tree.h (maybe_reject_flexarray_init): Declare.\n+\t* init.c (maybe_reject_flexarray_init): No longer static.\n+\tAdd check for current_function_decl.\n+\t* parser.c (cp_parser_late_parse_one_default_arg): Reject\n+\ta default mem-initializer for a flexible array.\n+\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "f53f7442bc9fee734e8af1ca81aeb6cc77c1b17f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -6069,6 +6069,7 @@ extern tree scalar_constant_value\t\t(tree);\n extern tree decl_really_constant_value\t\t(tree);\n extern int diagnose_uninitialized_cst_or_ref_member (tree, bool, bool);\n extern tree build_vtbl_address                  (tree);\n+extern bool maybe_reject_flexarray_init\t\t(tree, tree);\n \n /* in lex.c */\n extern void cxx_dup_lang_specific_decl\t\t(tree);"}, {"sha": "13ade8a616b8e96d7d07f254dd0c6a46e46314fb", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -600,7 +600,7 @@ get_nsdmi (tree member, bool in_ctor)\n /* Diagnose the flexible array MEMBER if its INITializer is non-null\n    and return true if so.  Otherwise return false.  */\n \n-static bool\n+bool\n maybe_reject_flexarray_init (tree member, tree init)\n {\n   tree type = TREE_TYPE (member);\n@@ -615,6 +615,7 @@ maybe_reject_flexarray_init (tree member, tree init)\n      initializer list.  */\n   location_t loc;\n   if (DECL_INITIAL (member) == init\n+      || !current_function_decl\n       || DECL_DEFAULTED_FN (current_function_decl))\n     loc = DECL_SOURCE_LOCATION (member);\n   else"}, {"sha": "3992516de0e3c730bdc885af8a187560f23b6258", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -27228,6 +27228,8 @@ cp_parser_late_parse_one_default_arg (cp_parser *parser, tree decl,\n       if (TREE_CODE (decl) == PARM_DECL)\n \tparsed_arg = check_default_argument (parmtype, parsed_arg,\n \t\t\t\t\t     tf_warning_or_error);\n+      else if (maybe_reject_flexarray_init (decl, parsed_arg))\n+\tparsed_arg = error_mark_node;\n       else\n \tparsed_arg = digest_nsdmi_init (decl, parsed_arg);\n     }"}, {"sha": "b76d0a31f8617e694c46dc4acbae4c35a345bad6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -1,3 +1,8 @@\n+2017-02-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/79535\n+\t* g++.dg/ext/flexary23.C: New test.\n+\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/79654"}, {"sha": "099e7fd2938e27038261d81c4e7049ea8dd5748c", "filename": "gcc/testsuite/g++.dg/ext/flexary23.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a232a1cb1792bef3776dd4bddb7ef484790f8648/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary23.C?ref=a232a1cb1792bef3776dd4bddb7ef484790f8648", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/79535 - ICE with NSDMI and array\n+// { dg-do compile { target c++14 } }\n+// { dg-options -Wno-pedantic }\n+\n+struct A\n+{\n+  int b = 1;\n+  int c = 2;\n+  int x[] = { c, 3 }; // { dg-error \"initializer for flexible array member\" }\n+};\n+A a = { 4, 5 };"}]}