{"sha": "ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5NTJmZDVlOWNmYjYxZTJiZTdiZTA1M2ZjMGQyNmY4N2M3NTA0MA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2017-04-28T13:26:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-28T13:26:33Z"}, "message": "exp_util.adb, [...]: Minor reformatting.\n\n2017-04-28  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb, g-dyntab.adb, par-ch4.adb, sem_util.adb, sem_attr.adb,\n\tgnat1drv.adb, exp_disp.adb, namet.adb, alloc.ads: Minor reformatting.\n\nFrom-SVN: r247383", "tree": {"sha": "f120c4e8d6a455eebaf1edaebf8c3ad2928097e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f120c4e8d6a455eebaf1edaebf8c3ad2928097e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc99d2417170e3aadc9ea7ae5e9a4a8578c240a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc99d2417170e3aadc9ea7ae5e9a4a8578c240a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc99d2417170e3aadc9ea7ae5e9a4a8578c240a3"}], "stats": {"total": 228, "additions": 125, "deletions": 103}, "files": [{"sha": "6997493e6a566443830bd84fc065f032e78e3c75", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -1,3 +1,8 @@\n+2017-04-28  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb, g-dyntab.adb, par-ch4.adb, sem_util.adb, sem_attr.adb,\n+\tgnat1drv.adb, exp_disp.adb, namet.adb, alloc.ads: Minor reformatting.\n+\n 2017-04-28  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_util.adb: Minor reformatting."}, {"sha": "380ea2cebfffe18d8debf0f506e818ca4f1e3078", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -43,122 +43,122 @@ package Alloc is\n \n    --  The comment shows the unit in which the table is defined\n \n-   All_Interp_Initial               : constant := 1_000;   -- Sem_Type\n+   All_Interp_Initial               : constant := 1_000;      -- Sem_Type\n    All_Interp_Increment             : constant := 100;\n \n-   Branches_Initial                 : constant := 1_000;   -- Sem_Warn\n+   Branches_Initial                 : constant := 1_000;      -- Sem_Warn\n    Branches_Increment               : constant := 100;\n \n-   Conditionals_Initial             : constant := 1_000;   -- Sem_Warn\n+   Conditionals_Initial             : constant := 1_000;      -- Sem_Warn\n    Conditionals_Increment           : constant := 100;\n \n-   Conditional_Stack_Initial        : constant := 50;      -- Sem_Warn\n+   Conditional_Stack_Initial        : constant := 50;         -- Sem_Warn\n    Conditional_Stack_Increment      : constant := 100;\n \n-   Elists_Initial                   : constant := 200;     -- Elists\n+   Elists_Initial                   : constant := 200;        -- Elists\n    Elists_Increment                 : constant := 100;\n \n-   Elmts_Initial                    : constant := 1_200;   -- Elists\n+   Elmts_Initial                    : constant := 1_200;      -- Elists\n    Elmts_Increment                  : constant := 100;\n \n-   File_Name_Chars_Initial          : constant := 10_000;  -- Osint\n+   File_Name_Chars_Initial          : constant := 10_000;     -- Osint\n    File_Name_Chars_Increment        : constant := 100;\n \n-   In_Out_Warnings_Initial          : constant := 100;     -- Sem_Warn\n+   In_Out_Warnings_Initial          : constant := 100;        -- Sem_Warn\n    In_Out_Warnings_Increment        : constant := 100;\n \n-   Ignored_Ghost_Units_Initial      : constant := 20;      -- Sem_Util\n+   Ignored_Ghost_Units_Initial      : constant := 20;         -- Sem_Util\n    Ignored_Ghost_Units_Increment    : constant := 50;\n \n-   Inlined_Initial                  : constant := 100;     -- Inline\n+   Inlined_Initial                  : constant := 100;        -- Inline\n    Inlined_Increment                : constant := 100;\n \n-   Inlined_Bodies_Initial           : constant := 50;      -- Inline\n+   Inlined_Bodies_Initial           : constant := 50;         -- Inline\n    Inlined_Bodies_Increment         : constant := 200;\n \n-   Interp_Map_Initial               : constant := 200;     -- Sem_Type\n+   Interp_Map_Initial               : constant := 200;        -- Sem_Type\n    Interp_Map_Increment             : constant := 100;\n \n-   Lines_Initial                    : constant := 500;     -- Sinput\n+   Lines_Initial                    : constant := 500;        -- Sinput\n    Lines_Increment                  : constant := 150;\n \n-   Linker_Option_Lines_Initial      : constant := 5;       -- Lib\n+   Linker_Option_Lines_Initial      : constant := 5;          -- Lib\n    Linker_Option_Lines_Increment    : constant := 200;\n \n-   Lists_Initial                    : constant := 4_000;   -- Nlists\n+   Lists_Initial                    : constant := 4_000;      -- Nlists\n    Lists_Increment                  : constant := 200;\n \n-   Load_Stack_Initial               : constant := 10;      -- Lib\n+   Load_Stack_Initial               : constant := 10;         -- Lib\n    Load_Stack_Increment             : constant := 100;\n \n-   Name_Chars_Initial               : constant := 50_000;  -- Namet\n+   Name_Chars_Initial               : constant := 50_000;     -- Namet\n    Name_Chars_Increment             : constant := 100;\n \n-   Name_Qualify_Units_Initial       : constant := 200;     -- Exp_Dbug\n+   Name_Qualify_Units_Initial       : constant := 200;        -- Exp_Dbug\n    Name_Qualify_Units_Increment     : constant := 300;\n \n-   Names_Initial                    : constant := 6_000;   -- Namet\n+   Names_Initial                    : constant := 6_000;      -- Namet\n    Names_Increment                  : constant := 100;\n \n    Nodes_Initial                    : constant := 5_000_000;  -- Atree\n    Nodes_Increment                  : constant := 100;\n    Nodes_Release_Threshold          : constant := 100_000;\n \n-   Notes_Initial                    : constant := 100;     -- Lib\n+   Notes_Initial                    : constant := 100;        -- Lib\n    Notes_Increment                  : constant := 200;\n \n-   Obsolescent_Warnings_Initial     : constant := 50;      -- Sem_Prag\n+   Obsolescent_Warnings_Initial     : constant := 50;         -- Sem_Prag\n    Obsolescent_Warnings_Increment   : constant := 200;\n \n-   Pending_Instantiations_Initial   : constant := 10;      -- Inline\n+   Pending_Instantiations_Initial   : constant := 10;         -- Inline\n    Pending_Instantiations_Increment : constant := 100;\n \n-   Rep_Table_Initial                : constant := 1000;    -- Repinfo\n+   Rep_Table_Initial                : constant := 1000;       -- Repinfo\n    Rep_Table_Increment              : constant := 200;\n \n-   Scope_Stack_Initial              : constant := 10;      -- Sem\n+   Scope_Stack_Initial              : constant := 10;         -- Sem\n    Scope_Stack_Increment            : constant := 200;\n \n-   SFN_Table_Initial                : constant := 10;      -- Fname\n+   SFN_Table_Initial                : constant := 10;         -- Fname\n    SFN_Table_Increment              : constant := 200;\n \n-   Source_File_Initial              : constant := 10;      -- Sinput\n+   Source_File_Initial              : constant := 10;         -- Sinput\n    Source_File_Increment            : constant := 200;\n \n-   String_Chars_Initial             : constant := 2_500;   -- Stringt\n+   String_Chars_Initial             : constant := 2_500;      -- Stringt\n    String_Chars_Increment           : constant := 150;\n \n-   Strings_Initial                  : constant := 5_00;    -- Stringt\n+   Strings_Initial                  : constant := 5_00;       -- Stringt\n    Strings_Increment                : constant := 150;\n \n-   Successors_Initial               : constant := 2_00;    -- Inline\n+   Successors_Initial               : constant := 2_00;       -- Inline\n    Successors_Increment             : constant := 100;\n \n-   Udigits_Initial                  : constant := 10_000;  -- Uintp\n+   Udigits_Initial                  : constant := 10_000;     -- Uintp\n    Udigits_Increment                : constant := 100;\n \n-   Uints_Initial                    : constant := 5_000;   -- Uintp\n+   Uints_Initial                    : constant := 5_000;      -- Uintp\n    Uints_Increment                  : constant := 100;\n \n-   Units_Initial                    : constant := 30;      -- Lib\n+   Units_Initial                    : constant := 30;         -- Lib\n    Units_Increment                  : constant := 100;\n \n-   Ureals_Initial                   : constant := 200;     -- Urealp\n+   Ureals_Initial                   : constant := 200;        -- Urealp\n    Ureals_Increment                 : constant := 100;\n \n-   Unreferenced_Entities_Initial    : constant := 1_000;   -- Sem_Warn\n+   Unreferenced_Entities_Initial    : constant := 1_000;      -- Sem_Warn\n    Unreferenced_Entities_Increment  : constant := 100;\n \n-   Warnings_Off_Pragmas_Initial     : constant := 500;     -- Sem_Warn\n+   Warnings_Off_Pragmas_Initial     : constant := 500;        -- Sem_Warn\n    Warnings_Off_Pragmas_Increment   : constant := 100;\n \n-   With_List_Initial                : constant := 10;      -- Features\n+   With_List_Initial                : constant := 10;         -- Features\n    With_List_Increment              : constant := 300;\n \n-   Xrefs_Initial                    : constant := 5_000;   -- Cross-refs\n+   Xrefs_Initial                    : constant := 5_000;      -- Cross-refs\n    Xrefs_Increment                  : constant := 300;\n \n-   Drefs_Initial                    : constant := 5;       -- Dereferences\n+   Drefs_Initial                    : constant := 5;          -- Dereferences\n    Drefs_Increment                  : constant := 1_000;\n \n end Alloc;"}, {"sha": "b74724ed3627f6b4105f4b5e20908043ee04263f", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -651,8 +651,8 @@ package body Exp_Disp is\n       Controlling_Tag : Node_Id;\n \n       procedure Build_Class_Wide_Check;\n-      --  If the denoted subprogram has a class-wide precondition, generate\n-      --  a check using that precondition before the dispatching call, because\n+      --  If the denoted subprogram has a class-wide precondition, generate a\n+      --  check using that precondition before the dispatching call, because\n       --  this is the only class-wide precondition that applies to the call.\n \n       function New_Value (From : Node_Id) return Node_Id;\n@@ -665,11 +665,6 @@ package body Exp_Disp is\n       ----------------------------\n \n       procedure Build_Class_Wide_Check is\n-         Prec    : Node_Id;\n-         Cond    : Node_Id;\n-         Msg     : Node_Id;\n-         Str_Loc : constant String := Build_Location_String (Loc);\n-\n          function Replace_Formals (N : Node_Id) return Traverse_Result;\n          --  Replace occurrences of the formals of the subprogram by the\n          --  corresponding actuals in the call, given that this check is\n@@ -697,6 +692,7 @@ package body Exp_Disp is\n                         Rewrite (N, New_Copy_Tree (A));\n                         exit;\n                      end if;\n+\n                      Next_Formal (F);\n                      Next_Actual (A);\n                   end loop;\n@@ -707,6 +703,17 @@ package body Exp_Disp is\n          end Replace_Formals;\n \n          procedure Update is new Traverse_Proc (Replace_Formals);\n+\n+         --  Local variables\n+\n+         Str_Loc : constant String := Build_Location_String (Loc);\n+\n+         Cond : Node_Id;\n+         Msg  : Node_Id;\n+         Prec : Node_Id;\n+\n+      --  Start of processing for Build_Class_Wide_Check\n+\n       begin\n \n          --  Locate class-wide precondition, if any\n@@ -727,11 +734,12 @@ package body Exp_Disp is\n             end if;\n \n             --  The expression for the precondition is analyzed within the\n-            --  generated pragma. The message text is the last parameter\n-            --  of the generated pragma, indicating source of precondition.\n+            --  generated pragma. The message text is the last parameter of\n+            --  the generated pragma, indicating source of precondition.\n \n-            Cond := New_Copy_Tree\n-              (Expression (First (Pragma_Argument_Associations (Prec))));\n+            Cond :=\n+              New_Copy_Tree\n+                (Expression (First (Pragma_Argument_Associations (Prec))));\n             Update (Cond);\n \n             --  Build message indicating the failed precondition and the\n@@ -745,14 +753,13 @@ package body Exp_Disp is\n             Msg := Make_String_Literal (Loc, Name_Buffer (1 .. Name_Len));\n \n             Insert_Action (Call_Node,\n-               Make_If_Statement (Loc,\n-                  Condition => Make_Op_Not (Loc, Cond),\n-                  Then_Statements => New_List (\n-                     Make_Procedure_Call_Statement (Loc,\n-                       Name                   =>\n-                         New_Occurrence_Of\n-                           (RTE (RE_Raise_Assert_Failure), Loc),\n-                       Parameter_Associations => New_List (Msg)))));\n+              Make_If_Statement (Loc,\n+                Condition       => Make_Op_Not (Loc, Cond),\n+                Then_Statements => New_List (\n+                  Make_Procedure_Call_Statement (Loc,\n+                    Name                   =>\n+                      New_Occurrence_Of (RTE (RE_Raise_Assert_Failure), Loc),\n+                    Parameter_Associations => New_List (Msg)))));\n          end if;\n       end Build_Class_Wide_Check;\n "}, {"sha": "1713ff60c62c154339754f27f6f7863f9f68e807", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -1114,16 +1114,16 @@ package body Exp_Util is\n             if Present (New_E) then\n                Rewrite (N, New_Occurrence_Of (New_E, Sloc (N)));\n \n-               --  If the entity is an overridden primitive and we are not in\n-               --  GNATprove mode, we must build a wrapper for the current\n+               --  If the entity is an overridden primitive and we are not\n+               --  in GNATprove mode, we must build a wrapper for the current\n                --  inherited operation. If the reference is the prefix of an\n                --  attribute such as 'Result (or others ???) there is no need\n                --  for a wrapper: the condition is just rewritten in terms of\n                --  the inherited subprogram.\n \n                if Is_Subprogram (New_E)\n                   and then Nkind (Parent (N)) /= N_Attribute_Reference\n-                    and then not GNATprove_Mode\n+                  and then not GNATprove_Mode\n                then\n                   Needs_Wrapper := True;\n                end if;"}, {"sha": "ff27f07dbf7d9383d6d47d113e4e8f7d748fbb40", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -71,9 +71,12 @@ package body GNAT.Dynamic_Tables is\n    procedure Append (T : in out Instance; New_Val : Table_Component_Type) is\n       pragma Assert (not T.Locked);\n       New_Last : constant Table_Last_Type := Last (T) + 1;\n+\n    begin\n       if New_Last <= Last_Allocated (T) then\n-         --  fast path\n+\n+         --  Fast path\n+\n          T.P.Last := New_Last;\n          T.Table (New_Last) := New_Val;\n \n@@ -144,7 +147,7 @@ package body GNAT.Dynamic_Tables is\n       subtype Table_Length_Type is Table_Index_Type'Base\n         range 0 .. Table_Index_Type'Base'Last;\n \n-      Old_Last_Allocated   : constant Table_Last_Type  := Last_Allocated (T);\n+      Old_Last_Allocated   : constant Table_Last_Type := Last_Allocated (T);\n       Old_Allocated_Length : constant Table_Length_Type :=\n                                Old_Last_Allocated - First + 1;\n "}, {"sha": "9edc9587c0b25be3fd10ed50f767b2693e89251e", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -116,6 +116,24 @@ procedure Gnat1drv is\n    ----------------------------\n \n    procedure Adjust_Global_Switches is\n+      procedure SPARK_Library_Warning (Kind : String);\n+      --  Issue a warning in GNATprove mode if the run-time library does not\n+      --  fully support IEEE-754 floating-point semantics.\n+\n+      ---------------------------\n+      -- SPARK_Library_Warning --\n+      ---------------------------\n+\n+      procedure SPARK_Library_Warning (Kind : String) is\n+      begin\n+         Write_Line\n+           (\"warning: run-time library may be configured incorrectly\");\n+         Write_Line\n+           (\"warning: (SPARK analysis requires support for \" & Kind & ')');\n+      end SPARK_Library_Warning;\n+\n+   --  Start of processing for Adjust_Global_Switches\n+\n    begin\n       --  -gnatd.M enables Relaxed_RM_Semantics\n \n@@ -500,29 +518,15 @@ procedure Gnat1drv is\n          --  Detect that the runtime library support for floating-point numbers\n          --  may not be compatible with SPARK analysis of IEEE-754 floats.\n \n-         declare\n-            procedure SPARK_Library_Warning (Kind : String);\n-            --  Issue a warning in GNATprove mode if the run-time library does\n-            --  not fully support IEEE-754 floating-point semantics.\n+         if Denorm_On_Target = False then\n+            SPARK_Library_Warning (\"float subnormals\");\n \n-            procedure SPARK_Library_Warning (Kind : String) is\n-            begin\n-               Write_Line\n-                 (\"warning: run-time library may be configured incorrectly\");\n-               Write_Line\n-                 (\"warning: (SPARK analysis requires support for \" & Kind\n-                  & ')');\n-            end SPARK_Library_Warning;\n+         elsif Machine_Rounds_On_Target = False then\n+            SPARK_Library_Warning (\"float rounding\");\n \n-         begin\n-            if Denorm_On_Target = False then\n-               SPARK_Library_Warning (\"float subnormals\");\n-            elsif Machine_Rounds_On_Target = False then\n-               SPARK_Library_Warning (\"float rounding\");\n-            elsif Signed_Zeros_On_Target = False then\n-               SPARK_Library_Warning (\"signed zeros\");\n-            end if;\n-         end;\n+         elsif Signed_Zeros_On_Target = False then\n+            SPARK_Library_Warning (\"signed zeros\");\n+         end if;\n       end if;\n \n       --  Set Configurable_Run_Time mode if system.ads flag set or if the"}, {"sha": "fd458a3085a91f4cd7b0a32ebf284373a0c6d0c1", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -161,10 +161,11 @@ package body Namet is\n \n    procedure Append (Buf : in out Bounded_String; Id : Name_Id) is\n       pragma Assert (Id in Name_Entries.First .. Name_Entries.Last);\n-      Index : constant Int := Name_Entries.Table (Id).Name_Chars_Index;\n-      Len : constant Short := Name_Entries.Table (Id).Name_Len;\n+\n+      Index : constant Int   := Name_Entries.Table (Id).Name_Chars_Index;\n+      Len   : constant Short := Name_Entries.Table (Id).Name_Len;\n       Chars : Name_Chars.Table_Type renames\n-        Name_Chars.Table (Index + 1 .. Index + Int (Len));\n+                Name_Chars.Table (Index + 1 .. Index + Int (Len));\n    begin\n       Append (Buf, String (Chars));\n    end Append;\n@@ -174,8 +175,8 @@ package body Namet is\n    --------------------\n \n    procedure Append_Decoded (Buf : in out Bounded_String; Id : Name_Id) is\n-      C : Character;\n-      P : Natural;\n+      C    : Character;\n+      P    : Natural;\n       Temp : Bounded_String;\n \n    begin"}, {"sha": "2844b4ea03d0f7548bfcb4144e6e4f758e357711", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -589,7 +589,7 @@ package body Ch4 is\n                            --  Special handling for 'Image in Ada 2012, where\n                            --  the attribute can be parameterless and its value\n                            --  can be the prefix of a slice. Rewrite name as a\n-                           --  a slice, Expr is its low bound.\n+                           --  slice, Expr is its low bound.\n \n                            if Token = Tok_Dot_Dot\n                              and then Attr_Name = Name_Image"}, {"sha": "7e4dba5382e268c301f63548a3348c2ba05932b4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -4032,11 +4032,11 @@ package body Sem_Attr is\n       when Attribute_Image =>\n          Check_SPARK_05_Restriction_On_Attribute;\n \n-         --  AI12-00124-1 : The ARG has adopted the GNAT semantics of 'Img\n-         --  for scalar types, so that the prefix can be an object and not\n-         --  a type, and there is no need for an argument. Given this vote\n-         --  of confidence from the ARG, simplest is to transform this new\n-         --  usage of 'Image into a reference to 'Img.\n+         --  AI12-00124-1 : The ARG has adopted the GNAT semantics of 'Img for\n+         --  scalar types, so that the prefix can be an object and not a type,\n+         --  and there is no need for an argument. Given the vote of confidence\n+         --  from the ARG, simplest is to transform this new usage of 'Image\n+         --  into a reference to 'Img.\n \n          if Ada_Version > Ada_2005\n            and then Is_Object_Reference (P)\n@@ -4048,19 +4048,20 @@ package body Sem_Attr is\n                    Prefix         => Relocate_Node (P),\n                    Attribute_Name => Name_Img));\n \n-            --  If the attribute reference includes expressions, the\n-            --  only possible interpretation is as an indexing of the\n-            --  parameterless version of 'Image, so rewrite it accordingly.\n+            --  If the attribute reference includes expressions, the only\n+            --  possible interpretation is as an indexing of the parameterless\n+            --  version of 'Image, so rewrite it accordingly.\n \n             else\n                Rewrite (N,\n-                  Make_Indexed_Component (Loc,\n-                     Prefix      =>\n-                       Make_Attribute_Reference (Loc,\n-                         Prefix         => Relocate_Node (P),\n-                         Attribute_Name => Name_Img),\n-                     Expressions => Expressions (N)));\n+                 Make_Indexed_Component (Loc,\n+                   Prefix      =>\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (P),\n+                       Attribute_Name => Name_Img),\n+                   Expressions => Expressions (N)));\n             end if;\n+\n             Analyze (N);\n             return;\n "}, {"sha": "8b1f9c08797dff6347628f3a2fc8b7d52490f546", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef952fd5e9cfb61e2be7be053fc0d26f87c75040/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ef952fd5e9cfb61e2be7be053fc0d26f87c75040", "patch": "@@ -11251,6 +11251,7 @@ package body Sem_Util is\n       S := Current_Scope;\n       while Present (S) and then S /= Standard_Standard loop\n          if Is_Generic_Instance (S) then\n+\n             --  A child instance is always compiled in the context of a parent\n             --  instance. Nevertheless, the actuals are not analyzed in an\n             --  instance context. We detect this case by examining the current"}]}