{"sha": "3af9ac15a959da9d7c70b7e041029a70d144569d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FmOWFjMTVhOTU5ZGE5ZDdjNzBiN2UwNDEwMjlhNzBkMTQ0NTY5ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-06-29T17:36:16Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-06-29T17:36:16Z"}, "message": "re PR libgcj/22211 ([4.0 only] Thread.interrupt sometimes causes abort if thread is already dead)\n\n\tPR libgcj/22211:\n\t* testsuite/libjava.lang/pr22211.java: New file.\n\t* java/lang/natThread.cc (finish_): Synchronize when updating\n\talive_flag.\n\t(_Jv_AttachCurrentThread): Likewise.\n\t(interrupt): Only call _Jv_ThreadInterrupt if thread is alive.\n\t* java/lang/Thread.java (isAlive): Now synchronized.\n\nFrom-SVN: r101430", "tree": {"sha": "df37a657fa3ca4386879af5b0154c15a9a08e524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df37a657fa3ca4386879af5b0154c15a9a08e524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3af9ac15a959da9d7c70b7e041029a70d144569d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af9ac15a959da9d7c70b7e041029a70d144569d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af9ac15a959da9d7c70b7e041029a70d144569d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af9ac15a959da9d7c70b7e041029a70d144569d/comments", "author": null, "committer": null, "parents": [{"sha": "9fb93f8966ec9f17346c683d00b56f47bf9798ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb93f8966ec9f17346c683d00b56f47bf9798ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb93f8966ec9f17346c683d00b56f47bf9798ad"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "ba83c06cf2e6488cee6903030838da6a5d91b541", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3af9ac15a959da9d7c70b7e041029a70d144569d", "patch": "@@ -1,3 +1,13 @@\n+2005-06-29  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/22211:\n+\t* testsuite/libjava.lang/pr22211.java: New file.\n+\t* java/lang/natThread.cc (finish_): Synchronize when updating\n+\talive_flag.\n+\t(_Jv_AttachCurrentThread): Likewise.\n+\t(interrupt): Only call _Jv_ThreadInterrupt if thread is alive.\n+\t* java/lang/Thread.java (isAlive): Now synchronized.\n+\n 2005-06-29  Tom Tromey  <tromey@redhat.com>\n \n \t* interpret.cc (run) <insn_checkcast, checkcast_resolved>: Use"}, {"sha": "b58ff175c0239e850e81946062ea84509e688054", "filename": "libjava/java/lang/Thread.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Fjava%2Flang%2FThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Fjava%2Flang%2FThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThread.java?ref=3af9ac15a959da9d7c70b7e041029a70d144569d", "patch": "@@ -550,7 +550,7 @@ public boolean isInterrupted()\n    *\n    * @return whether this Thread is alive\n    */\n-  public final boolean isAlive()\n+  public final synchronized boolean isAlive()\n   {\n     return alive_flag;\n   }"}, {"sha": "f1064f17c690cab3f50b780e7e5b7b569c16699d", "filename": "libjava/java/lang/natThread.cc", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Fjava%2Flang%2FnatThread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Fjava%2Flang%2FnatThread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatThread.cc?ref=3af9ac15a959da9d7c70b7e041029a70d144569d", "patch": "@@ -1,6 +1,6 @@\n // natThread.cc - Native part of Thread class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -115,7 +115,9 @@ java::lang::Thread::interrupt (void)\n {\n   checkAccess ();\n   natThread *nt = (natThread *) data;\n-  _Jv_ThreadInterrupt (nt->thread);\n+  JvSynchronize sync (this);\n+  if (alive_flag)\n+    _Jv_ThreadInterrupt (nt->thread);\n }\n \n void\n@@ -215,7 +217,12 @@ java::lang::Thread::finish_ ()\n   \n   // Signal any threads that are waiting to join() us.\n   _Jv_MutexLock (&nt->join_mutex);\n-  alive_flag = false;\n+\n+  {\n+    JvSynchronize sync (this);\n+    alive_flag = false;\n+  }\n+\n   _Jv_CondNotifyAll (&nt->join_cond, &nt->join_mutex);\n   _Jv_MutexUnlock (&nt->join_mutex);  \n }\n@@ -392,6 +399,7 @@ _Jv_SetCurrentJNIEnv (JNIEnv *env)\n jint\n _Jv_AttachCurrentThread(java::lang::Thread* thread)\n {\n+  JvSynchronize sync (thread);\n   if (thread == NULL || thread->startable_flag == false)\n     return -1;\n   thread->startable_flag = false;"}, {"sha": "87a8e555c5dba22a7fae11427aaeb00de3fdf416", "filename": "libjava/testsuite/libjava.lang/pr22211.java", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Ftestsuite%2Flibjava.lang%2Fpr22211.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af9ac15a959da9d7c70b7e041029a70d144569d/libjava%2Ftestsuite%2Flibjava.lang%2Fpr22211.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fpr22211.java?ref=3af9ac15a959da9d7c70b7e041029a70d144569d", "patch": "@@ -0,0 +1,8 @@\n+public class pr22211\n+{\n+  public static void main(String[] args)\n+  {\n+    Thread x = new Thread();\n+    x.interrupt();\n+  }\n+}"}]}