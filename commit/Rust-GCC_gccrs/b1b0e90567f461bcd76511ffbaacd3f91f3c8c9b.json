{"sha": "b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiMGU5MDU2N2Y0NjFiY2Q3NjUxMWZmYmFhY2QzZjkxZjNjOGM5Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-05-11T16:19:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-05-11T16:19:23Z"}, "message": "runtime: Fix runtime/pprof test when libgo is not optimized.\n\nWhen libgo is not optimized the static function profilealloc\nin malloc.goc shows up in the stack trace.  Rename it to\nruntime_profilealloc so that runtime/pprof.printStackRecord\nignores it.\n\nFrom-SVN: r223006", "tree": {"sha": "ca2076085cadde84d093d695ed2994a6c60704dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2076085cadde84d093d695ed2994a6c60704dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b/comments", "author": null, "committer": null, "parents": [{"sha": "f1ed9790a36ceff598fc2ad873a0bb7778c9fa6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ed9790a36ceff598fc2ad873a0bb7778c9fa6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ed9790a36ceff598fc2ad873a0bb7778c9fa6e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "473879c3da437d61665c38131558b6ee4f81a8f6", "filename": "libgo/runtime/malloc.goc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b/libgo%2Fruntime%2Fmalloc.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b/libgo%2Fruntime%2Fmalloc.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmalloc.goc?ref=b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "patch": "@@ -64,7 +64,7 @@ extern volatile intgo runtime_MemProfileRate\n   __asm__ (GOSYM_PREFIX \"runtime.MemProfileRate\");\n \n static MSpan* largealloc(uint32, uintptr*);\n-static void profilealloc(void *v, uintptr size);\n+static void runtime_profilealloc(void *v, uintptr size);\n static void settype(MSpan *s, void *v, uintptr typ);\n \n // Allocate an object of at least size bytes.\n@@ -250,7 +250,7 @@ runtime_mallocgc(uintptr size, uintptr typ, uint32 flag)\n \t\tif(size < (uintptr)rate && size < (uintptr)(uint32)c->next_sample)\n \t\t\tc->next_sample -= size;\n \t\telse\n-\t\t\tprofilealloc(v, size);\n+\t\t\truntime_profilealloc(v, size);\n \t}\n \n \tm->locks--;\n@@ -290,7 +290,7 @@ largealloc(uint32 flag, uintptr *sizep)\n }\n \n static void\n-profilealloc(void *v, uintptr size)\n+runtime_profilealloc(void *v, uintptr size)\n {\n \tuintptr rate;\n \tint32 next;"}]}