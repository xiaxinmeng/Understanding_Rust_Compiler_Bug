{"sha": "6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI4NGExYmEzMDBmNmVhZjdmZmViNDlmNmY4YjMzMmQ2NDNiMzBhNQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@rabi.columbia.edu", "date": "1999-04-18T14:54:35Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-18T14:54:35Z"}, "message": "cppfiles.c (find_position, [...]): Use `unsigned long' variables consistently to count line and column numbers.\n\n1999-04-18 17:46 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n\t* cppfiles.c (find_position, read_and_prescan): Use `unsigned\n\tlong' variables consistently to count line and column numbers.\n\nFrom-SVN: r26539", "tree": {"sha": "bf4861c84f50c41cdf1c064033be8e3af0f9aa4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf4861c84f50c41cdf1c064033be8e3af0f9aa4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5/comments", "author": null, "committer": null, "parents": [{"sha": "54ff41b717adbdea60052aaf1ae686b518acbffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ff41b717adbdea60052aaf1ae686b518acbffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ff41b717adbdea60052aaf1ae686b518acbffb"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "f8f5aa336615333a05d6c115b38d9f2305087d85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "patch": "@@ -1,3 +1,8 @@\n+1999-04-18 17:46 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n+\n+\t* cppfiles.c (find_position, read_and_prescan): Use `unsigned\n+\tlong' variables consistently to count line and column numbers.\n+\n Sun Apr 18 15:50:33 EDT 1999  John Wehle  (john@feith.com)\n \n \t* output.h (current_function_is_leaf,"}, {"sha": "e2305c6ad6cb1852707674eb1eec443539c064e3", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=6b84a1ba300f6eaf7ffeb49f6f8b332d643b30a5", "patch": "@@ -764,10 +764,10 @@ static void\n find_position (start, limit, linep, colp)\n      U_CHAR *start;\n      U_CHAR *limit;\n-     long *linep;\n-     long *colp;\n+     unsigned long *linep;\n+     unsigned long *colp;\n {\n-  long line = *linep, col = 0;\n+  unsigned long line = *linep, col = 0;\n   while (start < limit)\n     {\n       U_CHAR ch = *start++;\n@@ -818,7 +818,8 @@ read_and_prescan (pfile, fp, desc, len)\n   U_CHAR *buf = (U_CHAR *) xmalloc (len);\n   U_CHAR *ip, *op, *line_base;\n   U_CHAR *ibase;\n-  unsigned int line, deferred_newlines;\n+  unsigned long line;\n+  unsigned int deferred_newlines;\n   int count;\n   size_t offset;\n   /* PIPE_BUF bytes of buffer proper, 2 to detect running off the end\n@@ -1014,7 +1015,7 @@ read_and_prescan (pfile, fp, desc, len)\n \n \t\tif (CPP_OPTIONS (pfile)->warn_trigraphs)\n \t\t  {\n-\t\t    long col;\n+\t\t    unsigned long col;\n \t\t    find_position (line_base, op, &line, &col);\n \t\t    line_base = op - col;\n \t\t    cpp_warning_with_line (pfile, line, col,\n@@ -1066,7 +1067,7 @@ read_and_prescan (pfile, fp, desc, len)\n \n   if (op[-1] != '\\n')\n     {\n-      long col;\n+      unsigned long col;\n       find_position (line_base, op, &line, &col);\n       cpp_warning_with_line (pfile, line, col, \"no newline at end of file\\n\");\n       if (offset + 1 > len)"}]}