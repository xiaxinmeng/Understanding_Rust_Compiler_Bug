{"sha": "e953f9588d4a7ea4183d14914f915329cc37941f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk1M2Y5NTg4ZDRhN2VhNDE4M2QxNDkxNGY5MTUzMjljYzM3OTQxZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-10T15:01:46Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-10T22:56:45Z"}, "message": "analyzer: fix ICE reporting NULL dereference (PR 93647)\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93647\n\t* diagnostic-manager.cc\n\t(diagnostic_manager::prune_for_sm_diagnostic): Bulletproof against\n\tVAR being constant.\n\t* region-model.cc (region_model::get_lvalue_1): Provide a better\n\terror message when encountering an unhandled tree code.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93647\n\t* gcc.dg/analyzer/torture/pr93647.c: New test.", "tree": {"sha": "7f0dee21c8dc9de1a24fa2abfe7ccf77099adcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f0dee21c8dc9de1a24fa2abfe7ccf77099adcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e953f9588d4a7ea4183d14914f915329cc37941f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e953f9588d4a7ea4183d14914f915329cc37941f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e953f9588d4a7ea4183d14914f915329cc37941f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e953f9588d4a7ea4183d14914f915329cc37941f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f57aa9503ff170ff6c8549718bd736f6c8168bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57aa9503ff170ff6c8549718bd736f6c8168bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f57aa9503ff170ff6c8549718bd736f6c8168bab"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "0960a49eb62cdb2be0946caff9fe3b776f5a67a4", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=e953f9588d4a7ea4183d14914f915329cc37941f", "patch": "@@ -1,3 +1,12 @@\n+2020-02-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93647\n+\t* diagnostic-manager.cc\n+\t(diagnostic_manager::prune_for_sm_diagnostic): Bulletproof against\n+\tVAR being constant.\n+\t* region-model.cc (region_model::get_lvalue_1): Provide a better\n+\terror message when encountering an unhandled tree code.\n+\n 2020-02-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93405"}, {"sha": "580152586f4004469de0b69210ffe4cfe5d3a6d9", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=e953f9588d4a7ea4183d14914f915329cc37941f", "patch": "@@ -965,6 +965,12 @@ diagnostic_manager::prune_for_sm_diagnostic (checker_path *path,\n \t\t\t\t\t     tree var,\n \t\t\t\t\t     state_machine::state_t state) const\n {\n+  /* If we have a constant (such as NULL), assume its state is also\n+     constant, so as not to attempt to get its lvalue whilst tracking the\n+     origin of the state.  */\n+  if (var && CONSTANT_CLASS_P (var))\n+    var = NULL_TREE;\n+\n   int idx = path->num_events () - 1;\n   while (idx >= 0 && idx < (signed)path->num_events ())\n     {"}, {"sha": "a88a85d70ab5d4edb7ccca9f377055a42d10c224", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=e953f9588d4a7ea4183d14914f915329cc37941f", "patch": "@@ -4614,6 +4614,8 @@ region_model::get_lvalue_1 (path_var pv, region_model_context *ctxt)\n   switch (TREE_CODE (expr))\n     {\n     default:\n+      internal_error (\"unhandled tree code in region_model::get_lvalue_1: %qs\",\n+\t\t      get_tree_code_name (TREE_CODE (expr)));\n       gcc_unreachable ();\n \n     case ARRAY_REF:"}, {"sha": "bb7ecda48e8b680221477f25ebadd13f22cc75ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e953f9588d4a7ea4183d14914f915329cc37941f", "patch": "@@ -1,3 +1,8 @@\n+2020-02-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93647\n+\t* gcc.dg/analyzer/torture/pr93647.c: New test.\n+\n 2020-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93637"}, {"sha": "fbfe570780bbdbcff56d19af949f3f560ff2439b", "filename": "gcc/testsuite/gcc.dg/analyzer/torture/pr93647.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93647.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e953f9588d4a7ea4183d14914f915329cc37941f/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93647.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93647.c?ref=e953f9588d4a7ea4183d14914f915329cc37941f", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n+\n+int *tz;\n+\n+void\n+ky (int);\n+\n+void\n+wd (void)\n+{\n+  tz = 0;\n+  ky (*tz); /* { dg-warning \"dereference of NULL\" } */\n+}\n+"}]}