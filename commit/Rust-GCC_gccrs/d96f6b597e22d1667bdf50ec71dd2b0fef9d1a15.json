{"sha": "d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2ZjZiNTk3ZTIyZDE2NjdiZGY1MGVjNzFkZDJiMGZlZjlkMWExNQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-06-17T04:49:59Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-06-17T04:49:59Z"}, "message": "tree-alias-ander.h: Add standard top-of-file comment.\n\n\t* tree-alias-ander.h: Add standard top-of-file comment.\n\t* tree-alias-common.h: Likewise.\n\t* tree-alias-type.h: Likewise.\n\nFrom-SVN: r83285", "tree": {"sha": "889b5c6029f913c419ffa44e7f0bc7daa4a35d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/889b5c6029f913c419ffa44e7f0bc7daa4a35d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/comments", "author": null, "committer": null, "parents": [{"sha": "f44272eef7d8d7945fd038db1b1c383ffad24ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f44272eef7d8d7945fd038db1b1c383ffad24ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f44272eef7d8d7945fd038db1b1c383ffad24ba7"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "0211e518c0f399be79fe26657c36f33901a81f03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "patch": "@@ -1,3 +1,9 @@\n+2004-06-17  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* tree-alias-ander.h: Add standard top-of-file comment.\n+\t* tree-alias-common.h: Likewise.\n+\t* tree-alias-type.h: Likewise.\n+\n 2004-06-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-pre.c (compute_avail): Value number uses as well."}, {"sha": "4af8b2c99d6a40bb34ecb607cb888d3a2c9e740d", "filename": "gcc/tree-alias-ander.h", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-ander.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-ander.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-alias-ander.h?ref=d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "patch": "@@ -1,7 +1,29 @@\n+/* Tree based Andersen points-to analysis\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Contributed by Daniel Berlin <dberlin@dberlin.org>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or\n+(at your option) any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+*/\n+\n #ifndef TREE_ALIAS_ANDER\n #define TREE_ALIAS_ANDER\n-#include \"tree-alias-common.h\"\n \n+#include \"tree-alias-common.h\"\n \n extern struct tree_alias_ops *andersen_alias_ops;\n-#endif\n+\n+#endif /* TREE_ALIAS_ANDER */"}, {"sha": "bf3cfcb75cc132f97ebd831bc82e45a74b292afb", "filename": "gcc/tree-alias-common.h", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-alias-common.h?ref=d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "patch": "@@ -1,6 +1,29 @@\n+/* Tree based points-to analysis\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Contributed by Daniel Berlin <dberlin@dberlin.org>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or\n+(at your option) any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+*/\n+\n #ifndef TREE_ALIAS_COMMON\n #define TREE_ALIAS_COMMON\n+\n #include \"tree-alias-type.h\"\n+\n /* Alias analysis function pointers.\n    Functions implemented by the actual alias analysis algorithms in\n    order for them to work with the common points-to structure.  */\n@@ -96,4 +119,5 @@ extern bool ptr_may_alias_var (tree, tree);\n extern bool same_points_to_set (tree, tree);\n extern bool empty_points_to_set (tree);\n extern const char *alias_get_name (tree);\n-#endif\n+\n+#endif /* TREE_ALIAS_COMMON */"}, {"sha": "5c81af764631c443929e6773561dc6925ec3d203", "filename": "gcc/tree-alias-type.h", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15/gcc%2Ftree-alias-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-alias-type.h?ref=d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15", "patch": "@@ -1,3 +1,24 @@\n+/* Tree based linear points-to analysis\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Contributed by Daniel Berlin <dberlin@dberlin.org>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or\n+(at your option) any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+*/\n+\n #ifndef TREE_ALIAS_TYPE_H\n #define TREE_ALIAS_TYPE_H\n \n@@ -6,27 +27,32 @@\n union alias_var_def;\n struct aterm_;\n struct aterm_list_a;\n+\n enum alias_var_kind\n {\n   ATERM_AVAR\n };\n+\n struct alias_var_common  GTY (())\n {\n   enum alias_var_kind kind;\n   unsigned int varnum;\n   tree decl;\n };\n+\n struct alias_var_aterm GTY (())\n {\n   struct alias_var_common common;\n   struct aterm_ * GTY((skip (\"\"))) term;\n   struct aterm_list_a *GTY ((skip (\"\"))) ptset;\n };\n+\n union alias_var_def GTY ((desc (\"%0.common.kind\")))\n {\n   struct alias_var_common GTY ((tag (\"-1\"))) common;\n   struct alias_var_aterm GTY ((tag (\"ATERM_AVAR\"))) aterm;\n };\n+\n typedef union alias_var_def *alias_var;\n \n #define ALIAS_VAR_KIND(x) ((x)->common.kind)\n@@ -38,4 +64,5 @@ union alias_type_def;\n typedef union alias_type_def *alias_type;\n \n alias_var alias_var_new_with_aterm (tree, struct aterm_ *);\n-#endif\n+\n+#endif /* TREE_ALIAS_TYPE_H */"}]}