{"sha": "9186a9d353815352d9625fc765dd0449fb64d8a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE4NmE5ZDM1MzgxNTM1MmQ5NjI1ZmM3NjVkZDA0NDlmYjY0ZDhhOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-02T13:11:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-02T13:11:11Z"}, "message": "tree-vect-slp.c (vect_detect_hybrid_slp_2): Match up what we consider a relevant use stmt with vect_detect_hybrid_slp_stmts.\n\n2017-06-02  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_detect_hybrid_slp_2): Match up\n\twhat we consider a relevant use stmt with vect_detect_hybrid_slp_stmts.\n\nFrom-SVN: r248825", "tree": {"sha": "89a6dc145266d08ca66847b3acdc6faa3ac7a86e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a6dc145266d08ca66847b3acdc6faa3ac7a86e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9186a9d353815352d9625fc765dd0449fb64d8a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9186a9d353815352d9625fc765dd0449fb64d8a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9186a9d353815352d9625fc765dd0449fb64d8a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9186a9d353815352d9625fc765dd0449fb64d8a9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "4f861e16ade94221d14cb8f7c9c63d5c26c8a7b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9186a9d353815352d9625fc765dd0449fb64d8a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9186a9d353815352d9625fc765dd0449fb64d8a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9186a9d353815352d9625fc765dd0449fb64d8a9", "patch": "@@ -1,3 +1,8 @@\n+2017-06-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_detect_hybrid_slp_2): Match up\n+\twhat we consider a relevant use stmt with vect_detect_hybrid_slp_stmts.\n+\n 2017-06-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80948"}, {"sha": "31194b823d022e01cda5dc0c07167b7f4e152aae", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9186a9d353815352d9625fc765dd0449fb64d8a9/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9186a9d353815352d9625fc765dd0449fb64d8a9/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=9186a9d353815352d9625fc765dd0449fb64d8a9", "patch": "@@ -2245,9 +2245,16 @@ static tree\n vect_detect_hybrid_slp_2 (gimple_stmt_iterator *gsi, bool *handled,\n \t\t\t  walk_stmt_info *)\n {\n+  stmt_vec_info use_vinfo = vinfo_for_stmt (gsi_stmt (*gsi));\n   /* If the stmt is in a SLP instance then this isn't a reason\n      to mark use definitions in other SLP instances as hybrid.  */\n-  if (STMT_SLP_TYPE (vinfo_for_stmt (gsi_stmt (*gsi))) != loop_vect)\n+  if (! STMT_SLP_TYPE (use_vinfo)\n+      && (STMT_VINFO_RELEVANT (use_vinfo)\n+\t  || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (use_vinfo)))\n+      && ! (gimple_code (gsi_stmt (*gsi)) == GIMPLE_PHI\n+\t    && STMT_VINFO_DEF_TYPE (use_vinfo) == vect_reduction_def))\n+    ;\n+  else\n     *handled = true;\n   return NULL_TREE;\n }"}]}