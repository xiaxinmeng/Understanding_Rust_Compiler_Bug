{"sha": "54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ5ODVjNzBhYTIxZmU2Y2Y0OWYyZDEwOWE2YmQ1MWYwYTRjOTY0Zg==", "commit": {"author": {"name": "Tsvetkova Alexandra", "email": "aleksandra.tsvetkova@intel.com", "date": "2015-11-13T06:48:20Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-11-13T06:48:20Z"}, "message": "configure.ac: Enable libmpx by default.\n\n2015-11-13  Tsvetkova Alexandra  <aleksandra.tsvetkova@intel.com>\n\n\t* configure.ac: Enable libmpx by default.\n\t* configure: Regenerated.\n\nFrom-SVN: r230288", "tree": {"sha": "97e5d1df24ca19da4ed69e95ab4f34748e863afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97e5d1df24ca19da4ed69e95ab4f34748e863afd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/comments", "author": null, "committer": null, "parents": [{"sha": "d93861237f5136949e6c80a65439aa796e2af224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d93861237f5136949e6c80a65439aa796e2af224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d93861237f5136949e6c80a65439aa796e2af224"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "f665a3d0c5f0964ff0f6be2a9a0f79049e1aa431", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "patch": "@@ -1,3 +1,8 @@\n+2015-11-13  Tsvetkova Alexandra  <aleksandra.tsvetkova@intel.com>\n+\n+\t* configure.ac: Enable libmpx by default.\n+\t* configure: Regenerated.\n+\n 2015-10-23  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* MAINTAINERS: Update email address."}, {"sha": "7dcaa2424784b20c16a1272a8b67e703013f3b9b", "filename": "configure", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "patch": "@@ -3320,7 +3320,7 @@ fi\n \n # Enable libmpx on supported systems by request.\n if test -d ${srcdir}/libmpx; then\n-    if test x$enable_libmpx = xyes; then\n+    if test x$enable_libmpx = x; then\n        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for libmpx support\" >&5\n $as_echo_n \"checking for libmpx support... \" >&6; }\n        if (srcdir=${srcdir}/libmpx; \\\n@@ -3334,8 +3334,6 @@ $as_echo \"no\" >&6; }\n            { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n        fi\n-    else\n-       noconfigdirs=\"$noconfigdirs target-libmpx\"\n     fi\n fi\n "}, {"sha": "55f9ab0af25c0e10a20c6171fe046fd01aa257c2", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54985c70aa21fe6cf49f2d109a6bd51f0a4c964f/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=54985c70aa21fe6cf49f2d109a6bd51f0a4c964f", "patch": "@@ -660,7 +660,7 @@ fi\n \n # Enable libmpx on supported systems by request.\n if test -d ${srcdir}/libmpx; then\n-    if test x$enable_libmpx = xyes; then\n+    if test x$enable_libmpx = x; then\n        AC_MSG_CHECKING([for libmpx support])\n        if (srcdir=${srcdir}/libmpx; \\\n                . ${srcdir}/configure.tgt; \\\n@@ -671,8 +671,6 @@ if test -d ${srcdir}/libmpx; then\n        else\n            AC_MSG_RESULT([yes])\n        fi\n-    else\n-       noconfigdirs=\"$noconfigdirs target-libmpx\"\n     fi\n fi\n "}]}