{"sha": "e3b69cc24f53d5502721c3358b24b1d0faf55d04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiNjljYzI0ZjUzZDU1MDI3MjFjMzM1OGIyNGIxZDBmYWY1NWQwNA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-07-23T09:55:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-20T07:21:47Z"}, "message": "[Ada] Spurious error in current instance used as formal package\n\ngcc/ada/\n\n\t* sem_ch12.adb (Install_Parents_Of_Generic_Context,\n\tRemove_Parents_Of_Generic_Context): New subprograms.\n\t(Instantiate_Package_Body): Adding assertions to ensure that\n\tinstalled parents are properly removed.", "tree": {"sha": "62848b652d6b9965a9f5833b3bba6bc281b56c03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62848b652d6b9965a9f5833b3bba6bc281b56c03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3b69cc24f53d5502721c3358b24b1d0faf55d04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b69cc24f53d5502721c3358b24b1d0faf55d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b69cc24f53d5502721c3358b24b1d0faf55d04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b69cc24f53d5502721c3358b24b1d0faf55d04/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6875e1282d303eb1e15cfefc4686e31d56795de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6875e1282d303eb1e15cfefc4686e31d56795de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6875e1282d303eb1e15cfefc4686e31d56795de0"}], "stats": {"total": 175, "additions": 175, "deletions": 0}, "files": [{"sha": "78e84d476879cd5429c0d62101ab9a765811dabe", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b69cc24f53d5502721c3358b24b1d0faf55d04/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b69cc24f53d5502721c3358b24b1d0faf55d04/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=e3b69cc24f53d5502721c3358b24b1d0faf55d04", "patch": "@@ -11683,6 +11683,7 @@ package body Sem_Ch12 is\n       Act_Decl    : constant Node_Id    := Body_Info.Act_Decl;\n       Act_Decl_Id : constant Entity_Id  := Defining_Entity (Act_Decl);\n       Act_Spec    : constant Node_Id    := Specification (Act_Decl);\n+      Ctx_Parents : Elist_Id            := No_Elist;\n       Inst_Node   : constant Node_Id    := Body_Info.Inst_Node;\n       Gen_Id      : constant Node_Id    := Name (Inst_Node);\n       Gen_Unit    : constant Entity_Id  := Get_Generic_Entity (Inst_Node);\n@@ -11694,6 +11695,24 @@ package body Sem_Ch12 is\n       --  appear uninitialized. This is suspicious, unless the actual is a\n       --  fully initialized type.\n \n+      procedure Install_Parents_Of_Generic_Context (Inst_Scope : Entity_Id);\n+      --  Inst_Scope is the scope where the instance appears within; when\n+      --  the instance of a generic child package G1 appears within a generic\n+      --  child package G2, this routine collects and installs the enclosing\n+      --  packages of G2 which are not already installed in the Scopes stack.\n+      --  For example, considering the following hierarchy of generic packages:\n+      --      G          (library level generic package)\n+      --      G.G1       (generic child package of G)\n+      --      G.Ga       (generic child package of G)\n+      --      G.Ga.Gb    (generic child package of Ga)\n+      --      G.Ga.Gb.G2 (generic child package of Gb)\n+      --  ... if G2 contains an instance of G1, this routine installs Ga and Gb\n+      --  (it does not install G because it was installed previously as part of\n+      --  the regular installation of G1 parents done by Install_Parent)\n+\n+      procedure Remove_Parents_Of_Generic_Context;\n+      --  Reverse effect after instantiation is complete\n+\n       -----------------------------\n       -- Check_Initialized_Types --\n       -----------------------------\n@@ -11757,6 +11776,143 @@ package body Sem_Ch12 is\n          end loop;\n       end Check_Initialized_Types;\n \n+      ----------------------------------------\n+      -- Install_Parents_Of_Generic_Context --\n+      ----------------------------------------\n+\n+      procedure Install_Parents_Of_Generic_Context (Inst_Scope : Entity_Id) is\n+         procedure Install_Enclosing_Parent (P : Entity_Id);\n+         --  Install public declarations of package P\n+\n+         function In_Enclosing_Open_Scopes (S : Entity_Id) return Boolean;\n+         --  Determine if the scope S is currently open (i.e. it appears\n+         --  somewhere in the scope stack) or appears within the compilation\n+         --  unit of an open scope.\n+\n+         ------------------------------\n+         -- Install_Enclosing_Parent --\n+         ------------------------------\n+\n+         procedure Install_Enclosing_Parent (P : Entity_Id) is\n+            Inst_Par : Entity_Id := P;\n+\n+         begin\n+            --  If this is a nested instance, the parent unit itself resolves\n+            --  to a renaming of the parent instance, whose declaration we\n+            --  need; in the common case the parent may be a generic (not an\n+            --  instance) and appears as a formal package.\n+\n+            if Present (Renamed_Entity (Inst_Par)) then\n+               Inst_Par := Renamed_Entity (Inst_Par);\n+            end if;\n+\n+            Push_Scope (Inst_Par);\n+            Set_Is_Immediately_Visible   (Inst_Par);\n+            Install_Visible_Declarations (Inst_Par);\n+         end Install_Enclosing_Parent;\n+\n+         ------------------------------\n+         -- In_Enclosing_Open_Scopes --\n+         ------------------------------\n+\n+         function In_Enclosing_Open_Scopes (S : Entity_Id) return Boolean is\n+            E      : Entity_Id;\n+            E_Unit : Entity_Id;\n+\n+         begin\n+            for J in reverse 0 .. Scope_Stack.Last loop\n+               E      := Scope_Stack.Table (J).Entity;\n+               E_Unit := Cunit_Entity (Get_Source_Unit (E));\n+\n+               if S = E or else S = E_Unit then\n+                  return True;\n+               end if;\n+\n+               --  Check Is_Active_Stack_Base to tell us when to stop, as there\n+               --  are cases where Standard_Standard appears in the middle of\n+               --  the active set of scopes. This affects the declaration and\n+               --  overriding of private inherited operations in instantiations\n+               --  of generic child units.\n+\n+               exit when Scope_Stack.Table (J).Is_Active_Stack_Base;\n+            end loop;\n+\n+            return False;\n+         end In_Enclosing_Open_Scopes;\n+\n+         --  Local variables\n+\n+         Actuals : constant List_Id := Generic_Associations (Inst_Node);\n+         Elmt    : Elmt_Id;\n+         S       : Entity_Id;\n+\n+      --  Start of processing for Install_Parents_Of_Generic_Context\n+\n+      begin\n+         --  Check cases where no action is required\n+\n+         if No (Actuals) then\n+            return;\n+\n+         elsif not Is_Child_Unit (Inst_Scope)\n+           or else Ekind (Inst_Scope) /= E_Generic_Package\n+         then\n+            return;\n+         end if;\n+\n+         --  Collect context parents not previously installed\n+\n+         S := Inst_Scope;\n+         while S /= Standard_Standard\n+           and then not In_Enclosing_Open_Scopes (S)\n+         loop\n+            if No (Ctx_Parents) then\n+               Ctx_Parents := New_Elmt_List;\n+            end if;\n+\n+            Prepend_Elmt (S, Ctx_Parents);\n+            S := Scope (S);\n+         end loop;\n+\n+         --  Install enclosing parents\n+\n+         if Present (Ctx_Parents) then\n+            Elmt := First_Elmt (Ctx_Parents);\n+            while Present (Elmt) loop\n+               Install_Enclosing_Parent (Node (Elmt));\n+               Next_Elmt (Elmt);\n+            end loop;\n+         end if;\n+      end Install_Parents_Of_Generic_Context;\n+\n+      ---------------------------------------\n+      -- Remove_Parents_Of_Generic_Context --\n+      ---------------------------------------\n+\n+      procedure Remove_Parents_Of_Generic_Context is\n+         Elmt : Elmt_Id;\n+         Par  : Entity_Id;\n+\n+      begin\n+         if No (Ctx_Parents) then\n+            return;\n+         end if;\n+\n+         --  Traverse Ctx_Parents in LIFO order to check the removed scopes\n+\n+         Elmt := Last_Elmt (Ctx_Parents);\n+         while Present (Elmt) loop\n+            Par := Current_Scope;\n+            pragma Assert (Par = Node (Elmt));\n+\n+            End_Package_Scope (Par);\n+            Set_Is_Immediately_Visible (Par, False);\n+\n+            Remove_Last_Elmt (Ctx_Parents);\n+            Elmt := Last_Elmt (Ctx_Parents);\n+         end loop;\n+      end Remove_Parents_Of_Generic_Context;\n+\n       --  Local variables\n \n       --  The following constants capture the context prior to instantiating\n@@ -11784,6 +11940,11 @@ package body Sem_Ch12 is\n       Par_Installed : Boolean := False;\n       Par_Vis       : Boolean   := False;\n \n+      Scope_Check_Id   : Entity_Id;\n+      Scope_Check_Last : Nat;\n+      --  Value of Current_Scope before calls to Install_Parents; used to check\n+      --  that scopes are correctly removed after instantiation.\n+\n       Vis_Prims_List : Elist_Id := No_Elist;\n       --  List of primitives made temporarily visible in the instantiation\n       --  to match the visibility of the formal type.\n@@ -11997,6 +12158,9 @@ package body Sem_Ch12 is\n             end loop;\n          end;\n \n+         Scope_Check_Id   := Current_Scope;\n+         Scope_Check_Last := Scope_Stack.Last;\n+\n          --  If it is a child unit, make the parent instance (which is an\n          --  instance of the parent of the generic) visible. The parent\n          --  instance is the prefix of the name of the generic unit.\n@@ -12016,6 +12180,12 @@ package body Sem_Ch12 is\n             Par_Installed := True;\n          end if;\n \n+         --  If the instantiation appears within a generic child some actual\n+         --  parameter may be the current instance of the enclosing generic\n+         --  parent.\n+\n+         Install_Parents_Of_Generic_Context (Scope (Act_Decl_Id));\n+\n          --  If the instantiation is a library unit, and this is the main unit,\n          --  then build the resulting compilation unit nodes for the instance.\n          --  If this is a compilation unit but it is not the main unit, then it\n@@ -12064,6 +12234,8 @@ package body Sem_Ch12 is\n          --  Remove the parent instances if they have been placed on the scope\n          --  stack to compile the body.\n \n+         Remove_Parents_Of_Generic_Context;\n+\n          if Par_Installed then\n             Remove_Parent (In_Body => True);\n \n@@ -12072,6 +12244,9 @@ package body Sem_Ch12 is\n             Set_Is_Immediately_Visible (Par_Ent, Par_Vis);\n          end if;\n \n+         pragma Assert (Current_Scope    = Scope_Check_Id);\n+         pragma Assert (Scope_Stack.Last = Scope_Check_Last);\n+\n          Restore_Hidden_Primitives (Vis_Prims_List);\n \n          --  Restore the private views that were made visible when the body of"}]}