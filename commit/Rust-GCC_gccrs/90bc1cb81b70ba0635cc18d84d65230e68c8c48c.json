{"sha": "90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiYzFjYjgxYjcwYmEwNjM1Y2MxOGQ4NGQ2NTIzMGU2OGM4YzQ4Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-25T10:47:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-25T10:47:50Z"}, "message": "re PR middle-end/45393 (ICE in redirect_eh_edge_1, at tree-eh.c:2135)\n\n2010-08-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45393\n\t* tree-ssa-math-opts.c (execute_cse_sincos_1): Properly transfer\n\tand clean EH info.  Avoid SSA update.\n\t(execute_cse_sincos): Cleanup the CFG if it has changed.\n\n\t* g++.dg/torture/pr45393.C: New testcase.\n\nFrom-SVN: r163541", "tree": {"sha": "1dd13ec1e29c90431e4280a13f800819f82897e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dd13ec1e29c90431e4280a13f800819f82897e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9407f6bcfba46e815e8b5b2ea9e1be9cb8c4df79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9407f6bcfba46e815e8b5b2ea9e1be9cb8c4df79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9407f6bcfba46e815e8b5b2ea9e1be9cb8c4df79"}], "stats": {"total": 72, "additions": 64, "deletions": 8}, "files": [{"sha": "9f85999a3548373a22d0f394c7e794801d44876d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "patch": "@@ -1,3 +1,10 @@\n+2010-08-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45393\n+\t* tree-ssa-math-opts.c (execute_cse_sincos_1): Properly transfer\n+\tand clean EH info.  Avoid SSA update.\n+\t(execute_cse_sincos): Cleanup the CFG if it has changed.\n+\n 2010-08-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45379"}, {"sha": "c8871f71e39f41383835e241de843a62b308117a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "patch": "@@ -1,3 +1,8 @@\n+2010-08-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45393\n+\t* g++.dg/torture/pr45393.C: New testcase.\n+\n 2010-08-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45059"}, {"sha": "5bf16b034d6f49f67c01f61face5dd125288550f", "filename": "gcc/testsuite/g++.dg/torture/pr45393.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45393.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45393.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45393.C?ref=90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "patch": "@@ -0,0 +1,38 @@\n+// { dg-do compile }\n+\n+class FloatPoint;\n+class Path {\n+public:\n+    ~Path();\n+    void moveTo(const FloatPoint&);\n+    static void createEllipse(const FloatPoint& center, float rx, float ry);\n+};\n+extern \"C\" {\n+    extern float cosf (float);\n+    extern float sinf (float);\n+}\n+const float piFloat = static_cast<float>(3.14159265358979323846);\n+class FloatPoint {\n+public:\n+    FloatPoint(float x, float y) : m_x(x), m_y(y) { }\n+    float x() const;\n+    float y() const;\n+    float m_x, m_y;\n+};\n+void Path::createEllipse(const FloatPoint& center, float rx, float ry)\n+{\n+  float cx = center.x();\n+  float cy = center.y();\n+  Path path;\n+  float x = cx;\n+  float y = cy;\n+  unsigned step = 0, num = 100;\n+  while (1) {\n+      float angle = static_cast<float>(step) / num * 2.0f * piFloat;\n+      x = cx + cosf(angle) * rx;\n+      y = cy + sinf(angle) * ry;\n+      step++;\n+      if (step == 1)\n+\tpath.moveTo(FloatPoint(x, y));\n+  }\n+}"}, {"sha": "a814f6f0288ef72920cd7dcd78c8d6e0125191eb", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc1cb81b70ba0635cc18d84d65230e68c8c48c/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=90bc1cb81b70ba0635cc18d84d65230e68c8c48c", "patch": "@@ -641,7 +641,7 @@ maybe_record_sincos (VEC(gimple, heap) **stmts,\n    result of the cexpi call we insert before the use statement that\n    dominates all other candidates.  */\n \n-static void\n+static bool\n execute_cse_sincos_1 (tree name)\n {\n   gimple_stmt_iterator gsi;\n@@ -652,6 +652,7 @@ execute_cse_sincos_1 (tree name)\n   VEC(gimple, heap) *stmts = NULL;\n   basic_block top_bb = NULL;\n   int i;\n+  bool cfg_changed = false;\n \n   type = TREE_TYPE (name);\n   FOR_EACH_IMM_USE_STMT (use_stmt, use_iter, name)\n@@ -683,16 +684,17 @@ execute_cse_sincos_1 (tree name)\n   if (seen_cos + seen_sin + seen_cexpi <= 1)\n     {\n       VEC_free(gimple, heap, stmts);\n-      return;\n+      return false;\n     }\n \n   /* Simply insert cexpi at the beginning of top_bb but not earlier than\n      the name def statement.  */\n   fndecl = mathfn_built_in (type, BUILT_IN_CEXPI);\n   if (!fndecl)\n-    return;\n-  res = make_rename_temp (TREE_TYPE (TREE_TYPE (fndecl)), \"sincostmp\");\n+    return false;\n+  res = create_tmp_reg (TREE_TYPE (TREE_TYPE (fndecl)), \"sincostmp\");\n   stmt = gimple_build_call (fndecl, 1, name);\n+  res = make_ssa_name (res, stmt);\n   gimple_call_set_lhs (stmt, res);\n \n   def_stmt = SSA_NAME_DEF_STMT (name);\n@@ -738,11 +740,14 @@ execute_cse_sincos_1 (tree name)\n \tstmt = gimple_build_assign (gimple_call_lhs (use_stmt), rhs);\n \n \tgsi = gsi_for_stmt (use_stmt);\n-\tgsi_insert_after (&gsi, stmt, GSI_SAME_STMT);\n-\tgsi_remove (&gsi, true);\n+\tgsi_replace (&gsi, stmt, true);\n+\tif (gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n+\t  cfg_changed = true;\n     }\n \n   VEC_free(gimple, heap, stmts);\n+\n+  return cfg_changed;\n }\n \n /* Go through all calls to sin, cos and cexpi and call execute_cse_sincos_1\n@@ -752,6 +757,7 @@ static unsigned int\n execute_cse_sincos (void)\n {\n   basic_block bb;\n+  bool cfg_changed = false;\n \n   calculate_dominance_info (CDI_DOMINATORS);\n \n@@ -778,7 +784,7 @@ execute_cse_sincos (void)\n \t\tCASE_FLT_FN (BUILT_IN_CEXPI):\n \t\t  arg = gimple_call_arg (stmt, 0);\n \t\t  if (TREE_CODE (arg) == SSA_NAME)\n-\t\t    execute_cse_sincos_1 (arg);\n+\t\t    cfg_changed |= execute_cse_sincos_1 (arg);\n \t\t  break;\n \n \t\tdefault:;\n@@ -788,7 +794,7 @@ execute_cse_sincos (void)\n     }\n \n   free_dominance_info (CDI_DOMINATORS);\n-  return 0;\n+  return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n \n static bool"}]}