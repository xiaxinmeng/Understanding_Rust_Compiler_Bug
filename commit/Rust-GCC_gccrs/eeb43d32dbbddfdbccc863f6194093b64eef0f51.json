{"sha": "eeb43d32dbbddfdbccc863f6194093b64eef0f51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWViNDNkMzJkYmJkZGZkYmNjYzg2M2Y2MTk0MDkzYjY0ZWVmMGY1MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-21T11:52:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-21T11:52:57Z"}, "message": "(subst): Move up test for too many restarts.\n\nIf we restart, clear OP0_MODE since we don't know it.\n\nFrom-SVN: r1926", "tree": {"sha": "9b626f7b5458c5ac875c97b11dccb78e2b49a1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b626f7b5458c5ac875c97b11dccb78e2b49a1d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeb43d32dbbddfdbccc863f6194093b64eef0f51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb43d32dbbddfdbccc863f6194093b64eef0f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb43d32dbbddfdbccc863f6194093b64eef0f51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb43d32dbbddfdbccc863f6194093b64eef0f51/comments", "author": null, "committer": null, "parents": [{"sha": "4d6697ca225160f459ba1e0be1721d3e460a4b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6697ca225160f459ba1e0be1721d3e460a4b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6697ca225160f459ba1e0be1721d3e460a4b4e"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "5b9b9a446f5c010071187acc42634a91f977272e", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb43d32dbbddfdbccc863f6194093b64eef0f51/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb43d32dbbddfdbccc863f6194093b64eef0f51/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=eeb43d32dbbddfdbccc863f6194093b64eef0f51", "patch": "@@ -2580,6 +2580,18 @@ subst (x, from, to, in_dest, unique_copy)\n \n  restart:\n \n+  /* If we have restarted more than 4 times, we are probably looping, so\n+     give up.  */\n+  if (++n_restarts > 4)\n+    return x;\n+\n+  /* If we are restarting at all, it means that we no longer know the\n+     original mode of operand 0 (since we have probably changed the\n+     form of X).  */\n+\n+  if (n_restarts > 1)\n+    op0_mode = VOIDmode;\n+\n   code = GET_CODE (x);\n \n   /* If this is a commutative operation, put a constant last and a complex\n@@ -2663,11 +2675,6 @@ subst (x, from, to, in_dest, unique_copy)\n   if (temp)\n     x = temp, code = GET_CODE (temp);\n \n-  /* If we have restarted more than 4 times, we are probably looping, so\n-     give up.  */\n-  if (++n_restarts > 4)\n-    return x;\n-\n   /* First see if we can apply the inverse distributive law.  */\n   if (code == PLUS || code == MINUS || code == IOR || code == XOR)\n     {"}]}