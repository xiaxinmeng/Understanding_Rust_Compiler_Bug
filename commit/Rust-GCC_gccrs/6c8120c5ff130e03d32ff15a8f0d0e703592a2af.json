{"sha": "6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4MTIwYzVmZjEzMGUwM2QzMmZmMTVhOGYwZDBlNzAzNTkyYTJhZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-12-23T00:06:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-12-23T00:06:34Z"}, "message": "Remove support for demangling GCC 2.x era mangling schemes.\n\nlibiberty/\n\t* cplus-dem.c: Remove cplus_mangle_opname, cplus_demangle_opname,\n\tinternal_cplus_demangle, and all subroutines.\n\t(libiberty_demanglers): Remove entries for ancient GNU (pre-3.0),\n\tLucid, ARM, HP, and EDG demangling styles.\n\t(cplus_demangle): Remove 'work' variable.  Don't call\n\tinternal_cplus_demangle.\ninclude/\n\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n\tARM, HP, and EDG demangling styles.\n\nFrom-SVN: r267363", "tree": {"sha": "04eae78b55780f82d8cb85b1e2359aa35c05d07f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04eae78b55780f82d8cb85b1e2359aa35c05d07f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61e8dc4b93e6c177eb971e826e29bc195c283fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e8dc4b93e6c177eb971e826e29bc195c283fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e8dc4b93e6c177eb971e826e29bc195c283fda"}], "stats": {"total": 8075, "additions": 73, "deletions": 8002}, "files": [{"sha": "74b5a1f1dd45b982951056728309d62c3b73ad64", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "patch": "@@ -1,3 +1,8 @@\n+2018-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n+\tARM, HP, and EDG demangling styles.\n+\n 2018-12-11  Nick Clifton  <nickc@redhat.com>\n \n \tPR 88409"}, {"sha": "768fc5140ce543f8b081420082177886989a7d9d", "filename": "include/demangle.h", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/include%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/include%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdemangle.h?ref=6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "patch": "@@ -53,20 +53,13 @@ extern \"C\" {\n \t\t\t\t\t   */\n \n #define DMGL_AUTO\t (1 << 8)\n-#define DMGL_GNU\t (1 << 9)\n-#define DMGL_LUCID\t (1 << 10)\n-#define DMGL_ARM\t (1 << 11)\n-#define DMGL_HP \t (1 << 12)       /* For the HP aCC compiler;\n-                                            same as ARM except for\n-                                            template arguments, etc. */\n-#define DMGL_EDG\t (1 << 13)\n #define DMGL_GNU_V3\t (1 << 14)\n #define DMGL_GNAT\t (1 << 15)\n #define DMGL_DLANG\t (1 << 16)\n #define DMGL_RUST\t (1 << 17)\t/* Rust wraps GNU_V3 style mangling.  */\n \n /* If none of these are set, use 'current_demangling_style' as the default. */\n-#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU|DMGL_LUCID|DMGL_ARM|DMGL_HP|DMGL_EDG|DMGL_GNU_V3|DMGL_JAVA|DMGL_GNAT|DMGL_DLANG|DMGL_RUST)\n+#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU_V3|DMGL_JAVA|DMGL_GNAT|DMGL_DLANG|DMGL_RUST)\n \n /* Disable a limit on the depth of recursion in mangled strings.\n    Note if this limit is disabled then stack exhaustion is possible when\n@@ -92,11 +85,6 @@ extern enum demangling_styles\n   no_demangling = -1,\n   unknown_demangling = 0,\n   auto_demangling = DMGL_AUTO,\n-  gnu_demangling = DMGL_GNU,\n-  lucid_demangling = DMGL_LUCID,\n-  arm_demangling = DMGL_ARM,\n-  hp_demangling = DMGL_HP,\n-  edg_demangling = DMGL_EDG,\n   gnu_v3_demangling = DMGL_GNU_V3,\n   java_demangling = DMGL_JAVA,\n   gnat_demangling = DMGL_GNAT,\n@@ -108,11 +96,6 @@ extern enum demangling_styles\n \n #define NO_DEMANGLING_STYLE_STRING            \"none\"\n #define AUTO_DEMANGLING_STYLE_STRING\t      \"auto\"\n-#define GNU_DEMANGLING_STYLE_STRING    \t      \"gnu\"\n-#define LUCID_DEMANGLING_STYLE_STRING\t      \"lucid\"\n-#define ARM_DEMANGLING_STYLE_STRING\t      \"arm\"\n-#define HP_DEMANGLING_STYLE_STRING\t      \"hp\"\n-#define EDG_DEMANGLING_STYLE_STRING\t      \"edg\"\n #define GNU_V3_DEMANGLING_STYLE_STRING        \"gnu-v3\"\n #define JAVA_DEMANGLING_STYLE_STRING          \"java\"\n #define GNAT_DEMANGLING_STYLE_STRING          \"gnat\"\n@@ -123,11 +106,6 @@ extern enum demangling_styles\n \n #define CURRENT_DEMANGLING_STYLE current_demangling_style\n #define AUTO_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_AUTO)\n-#define GNU_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNU)\n-#define LUCID_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_LUCID)\n-#define ARM_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_ARM)\n-#define HP_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_HP)\n-#define EDG_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_EDG)\n #define GNU_V3_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNU_V3)\n #define JAVA_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_JAVA)\n #define GNAT_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNAT)\n@@ -147,17 +125,8 @@ extern const struct demangler_engine\n extern char *\n cplus_demangle (const char *mangled, int options);\n \n-extern int\n-cplus_demangle_opname (const char *opname, char *result, int options);\n-\n-extern const char *\n-cplus_mangle_opname (const char *opname, int options);\n-\n /* Note: This sets global state.  FIXME if you care about multi-threading. */\n \n-extern void\n-set_cplus_marker_for_demangling (int ch);\n-\n extern enum demangling_styles\n cplus_demangle_set_style (enum demangling_styles style);\n "}, {"sha": "a86ac71e0a49dacafad263d3d495e5ec42cea174", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6c8120c5ff130e03d32ff15a8f0d0e703592a2af", "patch": "@@ -1,3 +1,13 @@\n+2018-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\tRemove support for demangling GCC 2.x era mangling schemes.\n+\t* cplus-dem.c: Remove cplus_mangle_opname, cplus_demangle_opname,\n+\tinternal_cplus_demangle, and all subroutines.\n+\t(libiberty_demanglers): Remove entries for ancient GNU (pre-3.0),\n+\tLucid, ARM, HP, and EDG demangling styles.\n+\t(cplus_demangle): Remove 'work' variable.  Don't call\n+\tinternal_cplus_demangle.\n+\n 2018-12-07  Nick Clifton  <nickc@redhat.com>\n \n \tPR 87681"}, {"sha": "ad40869a6863638e47e59661f8715efba713edc9", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 5, "deletions": 4581, "changes": 4586, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=6c8120c5ff130e03d32ff15a8f0d0e703592a2af"}, {"sha": "3723b7a90f1d5bc60b34cd8cfd3364539cb9aa40", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 52, "deletions": 3389, "changes": 3441, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c8120c5ff130e03d32ff15a8f0d0e703592a2af/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=6c8120c5ff130e03d32ff15a8f0d0e703592a2af"}]}