{"sha": "ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ3YTNlMzk5N2VjOTZjZGI4YjBlN2JkM2ZlM2I3ZDc0MDYxNzAwYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T11:07:44Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T11:07:44Z"}, "message": "S/390: arch13: vector shift double by bit builtins\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390-builtin-types.def: Add new builtin function\n\ttypes.\n\t* config/s390/s390-builtins.def (s390_vec_sldb, s390_vec_srdb):\n\tNew overloaded builtins.\n\t(s390_vec_sldb, s390_vec_srdb): New low-level builtins.  and\n\ts390_vsrd.\n\t* config/s390/s390.md (UNSPEC_VEC_SLDB): Rename to ...\n\t(UNSPEC_VEC_SLDBYTE): ... this.\n\t(UNSPEC_VEC_SLDBIT, UNSPEC_VEC_SRDBIT): New constant definitions.\n\t* config/s390/vecintrin.h (vec_sldb, vec_srdb): New builtin name\n\tdefinitions.\n\t* config/s390/vx-builtins.md (\"vec_sld<mode>\", \"vec_sldw<mode>\"):\n\tRename UNSPEC_VEC_SLDB to UNSPEC_VEC_SLDBYTE.\n\t(\"vec_sldb<mode>\", \"vec_srdb<mode>\"): New insn definitions.\n\ngcc/testsuite/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/zvector/vec-shift-left-double-by-bit-1.c: New test.\n\t* gcc.target/s390/zvector/vec-shift-right-double-by-bit-1.c: New test.\n\nFrom-SVN: r270089", "tree": {"sha": "49979f913a59720741eebba7fb719ec96fd38565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49979f913a59720741eebba7fb719ec96fd38565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6913111a953ed51a4ad232a53abecb08ed42c703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6913111a953ed51a4ad232a53abecb08ed42c703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6913111a953ed51a4ad232a53abecb08ed42c703"}], "stats": {"total": 233, "additions": 230, "deletions": 3}, "files": [{"sha": "bfc101f3754ee6dd1a77cf6040eb8596bf408571", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -1,3 +1,20 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390-builtin-types.def: Add new builtin function\n+\ttypes.\n+\t* config/s390/s390-builtins.def (s390_vec_sldb, s390_vec_srdb):\n+\tNew overloaded builtins.\n+\t(s390_vec_sldb, s390_vec_srdb): New low-level builtins.  and\n+\ts390_vsrd.\n+\t* config/s390/s390.md (UNSPEC_VEC_SLDB): Rename to ...\n+\t(UNSPEC_VEC_SLDBYTE): ... this.\n+\t(UNSPEC_VEC_SLDBIT, UNSPEC_VEC_SRDBIT): New constant definitions.\n+\t* config/s390/vecintrin.h (vec_sldb, vec_srdb): New builtin name\n+\tdefinitions.\n+\t* config/s390/vx-builtins.md (\"vec_sld<mode>\", \"vec_sldw<mode>\"):\n+\tRename UNSPEC_VEC_SLDB to UNSPEC_VEC_SLDBYTE.\n+\t(\"vec_sldb<mode>\", \"vec_srdb<mode>\"): New insn definitions.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t(\"*vec_splats_bswap_vec<mode>\", \"*vec_splats_bswap_elem<mode>\"):"}, {"sha": "c0dd2086cde91fa47a6e64a171407498b0cde74b", "filename": "gcc/config/s390/s390-builtin-types.def", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -285,6 +285,7 @@ DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_INT, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INT\n DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_INTPTR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI)\n DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_UCHAR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_UINT, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_UINT)\n DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI_ULONGLONG, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_ULONGLONG)\n DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UCHAR_INT, BT_UV16QI, BT_UV16QI, BT_UCHAR, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UV16QI_INT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n@@ -513,6 +514,7 @@ DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_BV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI,\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_INT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_UCHAR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UCHAR)\n+DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_UINT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UINT)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_ULONGLONG, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n@@ -544,6 +546,7 @@ DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_BV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_BV2DI)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_INT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_UCHAR, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UCHAR)\n+DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_UINT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UINT)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_ULONGLONG, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_ULONGLONGCONSTPTR_UCHAR, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_ULONGLONGCONSTPTR, BT_UCHAR)\n DEF_OV_TYPE (BT_OV_UV2DI_UV2DI_UV2DI_UV16QI, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV16QI)\n@@ -581,6 +584,7 @@ DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_BV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_BV4\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_INT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_UCHAR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UCHAR)\n+DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_UINT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UINT)\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_UINTCONSTPTR_UCHAR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UINTCONSTPTR, BT_UCHAR)\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_ULONGLONG, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_UV4SI_UV4SI_UV4SI_UV16QI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV16QI)\n@@ -621,6 +625,7 @@ DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_BV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_BV8\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_INT, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_UCHAR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UCHAR)\n+DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_UINT, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UINT)\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_ULONGLONG, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_UV16QI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_UV8HI_UV8HI_UV8HI_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI)\n@@ -651,6 +656,7 @@ DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_BV16QI, BT_V16QI, BT_V16QI, BT_V16QI, BT_BV16QI)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_INT, BT_V16QI, BT_V16QI, BT_V16QI, BT_INT)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_INTPTR, BT_V16QI, BT_V16QI, BT_V16QI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_UINT, BT_V16QI, BT_V16QI, BT_V16QI, BT_UINT)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_ULONGLONG, BT_V16QI, BT_V16QI, BT_V16QI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_UV16QI, BT_V16QI, BT_V16QI, BT_V16QI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V16QI_V16QI_V16QI_V16QI, BT_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n@@ -675,6 +681,7 @@ DEF_OV_TYPE (BT_OV_V2DF_V2DF_UV2DI_DBLCONSTPTR_UCHAR, BT_V2DF, BT_V2DF, BT_UV2DI\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF, BT_V2DF, BT_V2DF, BT_V2DF)\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_BV2DI, BT_V2DF, BT_V2DF, BT_V2DF, BT_BV2DI)\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_INT, BT_V2DF, BT_V2DF, BT_V2DF, BT_INT)\n+DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_UINT, BT_V2DF, BT_V2DF, BT_V2DF, BT_UINT)\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_ULONGLONG, BT_V2DF, BT_V2DF, BT_V2DF, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_UV16QI, BT_V2DF, BT_V2DF, BT_V2DF, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V2DF_V2DF_V2DF_UV2DI, BT_V2DF, BT_V2DF, BT_V2DF, BT_UV2DI)\n@@ -705,6 +712,7 @@ DEF_OV_TYPE (BT_OV_V2DI_V2DI_UV8HI, BT_V2DI, BT_V2DI, BT_UV8HI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI, BT_V2DI, BT_V2DI, BT_V2DI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_BV2DI, BT_V2DI, BT_V2DI, BT_V2DI, BT_BV2DI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_INT, BT_V2DI, BT_V2DI, BT_V2DI, BT_INT)\n+DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_UINT, BT_V2DI, BT_V2DI, BT_V2DI, BT_UINT)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_ULONGLONG, BT_V2DI, BT_V2DI, BT_V2DI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_UV16QI, BT_V2DI, BT_V2DI, BT_V2DI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_V2DI_UV2DI, BT_V2DI, BT_V2DI, BT_V2DI, BT_UV2DI)\n@@ -728,6 +736,7 @@ DEF_OV_TYPE (BT_OV_V4SF_V4SF_UV4SI, BT_V4SF, BT_V4SF, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_UV4SI_FLTCONSTPTR_UCHAR, BT_V4SF, BT_V4SF, BT_UV4SI, BT_FLTCONSTPTR, BT_UCHAR)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF, BT_V4SF, BT_V4SF, BT_V4SF)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_BV4SI, BT_V4SF, BT_V4SF, BT_V4SF, BT_BV4SI)\n+DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_UINT, BT_V4SF, BT_V4SF, BT_V4SF, BT_UINT)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_ULONGLONG, BT_V4SF, BT_V4SF, BT_V4SF, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_UV16QI, BT_V4SF, BT_V4SF, BT_V4SF, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_UV4SI, BT_V4SF, BT_V4SF, BT_V4SF, BT_UV4SI)\n@@ -759,6 +768,7 @@ DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI, BT_V4SI, BT_V4SI, BT_V4SI)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_BV4SI, BT_V4SI, BT_V4SI, BT_V4SI, BT_BV4SI)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_INT, BT_V4SI, BT_V4SI, BT_V4SI, BT_INT)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_INTPTR, BT_V4SI, BT_V4SI, BT_V4SI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_UINT, BT_V4SI, BT_V4SI, BT_V4SI, BT_UINT)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_ULONGLONG, BT_V4SI, BT_V4SI, BT_V4SI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_UV16QI, BT_V4SI, BT_V4SI, BT_V4SI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_V4SI_UV4SI, BT_V4SI, BT_V4SI, BT_V4SI, BT_UV4SI)\n@@ -794,6 +804,7 @@ DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_BV8HI, BT_V8HI, BT_V8HI, BT_V8HI, BT_BV8HI)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_INT, BT_V8HI, BT_V8HI, BT_V8HI, BT_INT)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_INTPTR, BT_V8HI, BT_V8HI, BT_V8HI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_UINT, BT_V8HI, BT_V8HI, BT_V8HI, BT_UINT)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_ULONGLONG, BT_V8HI, BT_V8HI, BT_V8HI, BT_ULONGLONG)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_UV16QI, BT_V8HI, BT_V8HI, BT_V8HI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V8HI_V8HI_V8HI_UV8HI, BT_V8HI, BT_V8HI, BT_V8HI, BT_UV8HI)"}, {"sha": "6ee921d24992d8c2fc94cff5d2199e245f48d7c0", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -2923,3 +2923,31 @@ B_DEF      (s390_vsterf,                eltswapv4si,        0,\n B_DEF      (s390_vsterg,                eltswapv2di,        0,                  B_VX,               0,                   BT_FN_V2DI_V2DI)\n B_DEF      (s390_vsterf_flt,            eltswapv4sf,        0,                  B_VXE,              0,                   BT_FN_V4SF_V4SF)\n B_DEF      (s390_vsterg_dbl,            eltswapv2df,        0,                  B_VX,               0,                   BT_FN_V2DF_V2DF)\n+\n+OB_DEF     (s390_vec_sldb,              s390_vec_sldb_s8,   s390_vec_sldb_dbl,  B_VXE2,             BT_FN_OV4SI_OV4SI_OV4SI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_s8,           s390_vsld,          0,                  O3_U3,              BT_OV_V16QI_V16QI_V16QI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_u8,           s390_vsld,          0,                  O3_U3,              BT_OV_UV16QI_UV16QI_UV16QI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_s16,          s390_vsld,          0,                  O3_U3,              BT_OV_V8HI_V8HI_V8HI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_u16,          s390_vsld,          0,                  O3_U3,              BT_OV_UV8HI_UV8HI_UV8HI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_s32,          s390_vsld,          0,                  O3_U3,              BT_OV_V4SI_V4SI_V4SI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_u32,          s390_vsld,          0,                  O3_U3,              BT_OV_UV4SI_UV4SI_UV4SI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_s64,          s390_vsld,          0,                  O3_U3,              BT_OV_V2DI_V2DI_V2DI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_u64,          s390_vsld,          0,                  O3_U3,              BT_OV_UV2DI_UV2DI_UV2DI_UINT)\n+OB_DEF_VAR (s390_vec_sldb_flt,          s390_vsld,          0,                  O3_U3,              BT_OV_V4SF_V4SF_V4SF_UINT)\n+OB_DEF_VAR (s390_vec_sldb_dbl,          s390_vsld,          0,                  O3_U3,              BT_OV_V2DF_V2DF_V2DF_UINT)\n+\n+B_DEF      (s390_vsld,                  vec_sldbv16qi,      0,                  B_VXE2,             O3_U3,              BT_FN_UV16QI_UV16QI_UV16QI_INT)\n+\n+OB_DEF     (s390_vec_srdb,              s390_vec_srdb_s8,   s390_vec_srdb_dbl,  B_VXE2,             BT_FN_OV4SI_OV4SI_OV4SI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_s8,           s390_vsrd,          0,                  O3_U3,              BT_OV_V16QI_V16QI_V16QI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_u8,           s390_vsrd,          0,                  O3_U3,              BT_OV_UV16QI_UV16QI_UV16QI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_s16,          s390_vsrd,          0,                  O3_U3,              BT_OV_V8HI_V8HI_V8HI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_u16,          s390_vsrd,          0,                  O3_U3,              BT_OV_UV8HI_UV8HI_UV8HI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_s32,          s390_vsrd,          0,                  O3_U3,              BT_OV_V4SI_V4SI_V4SI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_u32,          s390_vsrd,          0,                  O3_U3,              BT_OV_UV4SI_UV4SI_UV4SI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_s64,          s390_vsrd,          0,                  O3_U3,              BT_OV_V2DI_V2DI_V2DI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_u64,          s390_vsrd,          0,                  O3_U3,              BT_OV_UV2DI_UV2DI_UV2DI_UINT)\n+OB_DEF_VAR (s390_vec_srdb_flt,          s390_vsrd,          0,                  O3_U3,              BT_OV_V4SF_V4SF_V4SF_UINT)\n+OB_DEF_VAR (s390_vec_srdb_dbl,          s390_vsrd,          0,                  O3_U3,              BT_OV_V2DF_V2DF_V2DF_UINT)\n+\n+B_DEF      (s390_vsrd,                  vec_srdbv16qi,      0,                  B_VXE2,             O3_U3,              BT_FN_UV16QI_UV16QI_UV16QI_INT)"}, {"sha": "56ad11fe3d71db0781eff4a80095cd667ee5ac9c", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -194,7 +194,9 @@\n    UNSPEC_VEC_RL_MASK\n    UNSPEC_VEC_SLL\n    UNSPEC_VEC_SLB\n-   UNSPEC_VEC_SLDB\n+   UNSPEC_VEC_SLDBYTE\n+   UNSPEC_VEC_SLDBIT\n+   UNSPEC_VEC_SRDBIT\n    UNSPEC_VEC_SRAL\n    UNSPEC_VEC_SRAB\n    UNSPEC_VEC_SRL"}, {"sha": "fb60a77ba06dc03044207c547137befe0368d0d4", "filename": "gcc/config/s390/vecintrin.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvecintrin.h?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -327,4 +327,6 @@ __lcbb(const void *ptr, int bndry)\n #define vec_fp_test_data_class __builtin_s390_vec_fp_test_data_class\n #define vec_revb __builtin_s390_vec_revb\n #define vec_reve __builtin_s390_vec_reve\n+#define vec_sldb __builtin_s390_vec_sldb\n+#define vec_srdb __builtin_s390_vec_srdb\n #endif /* _VECINTRIN_H */"}, {"sha": "1c42d4e679b0630a531dafb86e594a39f7bfe911", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -1030,7 +1030,7 @@\n \t(unspec:V_HW [(match_operand:V_HW 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V_HW 2 \"register_operand\" \"v\")\n \t\t      (match_operand:QI 3 \"const_int_operand\"  \"C\")]\n-\t\t     UNSPEC_VEC_SLDB))]\n+\t\t     UNSPEC_VEC_SLDBYTE))]\n   \"TARGET_VX\"\n   \"vsldb\\t%v0,%v1,%v2,%b3\"\n   [(set_attr \"op_type\" \"VRI\")])\n@@ -1040,12 +1040,36 @@\n \t(unspec:V_HW [(match_operand:V_HW 1 \"register_operand\" \"\")\n \t\t      (match_operand:V_HW 2 \"register_operand\" \"\")\n \t\t      (match_operand:QI 3 \"const_int_operand\"  \"\")]\n-\t\t     UNSPEC_VEC_SLDB))]\n+\t\t     UNSPEC_VEC_SLDBYTE))]\n   \"TARGET_VX\"\n {\n   operands[3] = GEN_INT (INTVAL (operands[3]) << 2);\n })\n \n+; Vector shift left double by bit\n+\n+(define_insn \"vec_sldb<mode>\"\n+  [(set (match_operand:V_HW 0 \"register_operand\"              \"=v\")\n+\t(unspec:V_HW [(match_operand:V_HW 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:V_HW 2 \"register_operand\" \"v\")\n+\t\t      (match_operand:QI 3 \"const_int_operand\"  \"C\")]\n+\t\t     UNSPEC_VEC_SLDBIT))]\n+  \"TARGET_VXE2\"\n+  \"vsld\\t%v0,%v1,%v2,%b3\"\n+  [(set_attr \"op_type\" \"VRI\")])\n+\n+; Vector shift right double by bit\n+\n+(define_insn \"vec_srdb<mode>\"\n+  [(set (match_operand:V_HW 0 \"register_operand\"              \"=v\")\n+\t(unspec:V_HW [(match_operand:V_HW 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:V_HW 2 \"register_operand\" \"v\")\n+\t\t      (match_operand:QI 3 \"const_int_operand\"  \"C\")]\n+\t\t     UNSPEC_VEC_SRDBIT))]\n+  \"TARGET_VXE2\"\n+  \"vsrd\\t%v0,%v1,%v2,%b3\"\n+  [(set_attr \"op_type\" \"VRI\")])\n+\n ; Vector shift right arithmetic\n \n (define_insn \"vec_sral<VI_HW:mode><VI_HW_QHS:mode>\""}, {"sha": "693655b5e5d30a4abff4eb56e85f0162fb03b2cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -1,3 +1,8 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/zvector/vec-shift-left-double-by-bit-1.c: New test.\n+\t* gcc.target/s390/zvector/vec-shift-right-double-by-bit-1.c: New test.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/zvector/replicate-bswap-1.c: New test."}, {"sha": "5fe1bb35fbb76156e02f50f771dd61427a0f0eed", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-shift-left-double-by-bit-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-left-double-by-bit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-left-double-by-bit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-left-double-by-bit-1.c?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector unsigned char\n+foo1 (vector unsigned char a, vector unsigned char b)\n+{\n+  return vec_sldb (a, b, 0);\n+}\n+\n+vector signed char\n+foo2 (vector signed char a, vector signed char b)\n+{\n+  return vec_sldb (a, b, 1);\n+}\n+\n+\n+vector unsigned short\n+foo3 (vector unsigned short a, vector unsigned short b)\n+{\n+  return vec_sldb (a, b, 2);\n+}\n+\n+vector signed short\n+foo4 (vector signed short a, vector signed short b)\n+{\n+  return vec_sldb (a, b, 3);\n+}\n+\n+vector unsigned int\n+foo5 (vector unsigned int a, vector unsigned int *b)\n+{\n+  return vec_sldb (a, *b, 4);\n+}\n+\n+vector signed int\n+foo6 (vector signed int a, vector signed int b)\n+{\n+  return vec_sldb (a, b, 5);\n+}\n+\n+\n+vector unsigned long long\n+foo7 (vector unsigned long long a, vector unsigned long long b)\n+{\n+  return vec_sldb (a, (vector unsigned long long){ 1, 2 }, 6);\n+}\n+\n+vector signed long long\n+foo8 (vector signed long long a, vector signed long long b)\n+{\n+  return vec_sldb (a, b, 7);\n+}\n+\n+\n+vector float\n+foo9 (vector float a, vector float b)\n+{\n+  return vec_sldb (a, b, 1);\n+}\n+\n+vector double\n+foo10 (vector double a, vector double b)\n+{\n+  return vec_sldb (a, b, 3);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsld\" 10 } } */"}, {"sha": "dce3b8a1d7543f11c21906fd6068c2a5e4cb0e99", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-shift-right-double-by-bit-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-right-double-by-bit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-right-double-by-bit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-shift-right-double-by-bit-1.c?ref=ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector unsigned char\n+foo1 (vector unsigned char a, vector unsigned char b)\n+{\n+  return vec_srdb (a, b, 0);\n+}\n+\n+vector signed char\n+foo2 (vector signed char a, vector signed char b)\n+{\n+  return vec_srdb (a, b, 1);\n+}\n+\n+\n+vector unsigned short\n+foo3 (vector unsigned short a, vector unsigned short b)\n+{\n+  return vec_srdb (a, b, 2);\n+}\n+\n+vector signed short\n+foo4 (vector signed short a, vector signed short b)\n+{\n+  return vec_srdb (a, b, 3);\n+}\n+\n+vector unsigned int\n+foo5 (vector unsigned int a, vector unsigned int *b)\n+{\n+  return vec_srdb (a, *b, 4);\n+}\n+\n+vector signed int\n+foo6 (vector signed int a, vector signed int b)\n+{\n+  return vec_srdb (a, b, 5);\n+}\n+\n+\n+vector unsigned long long\n+foo7 (vector unsigned long long a, vector unsigned long long b)\n+{\n+  return vec_srdb (a, (vector unsigned long long){ 1, 2 }, 6);\n+}\n+\n+vector signed long long\n+foo8 (vector signed long long a, vector signed long long b)\n+{\n+  return vec_srdb (a, b, 7);\n+}\n+\n+\n+vector float\n+foo9 (vector float a, vector float b)\n+{\n+  return vec_srdb (a, b, 1);\n+}\n+\n+vector double\n+foo10 (vector double a, vector double b)\n+{\n+  return vec_srdb (a, b, 3);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsrd\" 10 } } */"}]}