{"sha": "387e818cda0ffde86f624228c3da1ab28f453685", "node_id": "C_kwDOANBUbNoAKDM4N2U4MThjZGEwZmZkZTg2ZjYyNDIyOGMzZGExYWIyOGY0NTM2ODU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-30T08:21:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-30T08:21:16Z"}, "message": "store-merging: Avoid ICEs on roughly ~0ULL/8 sized stores [PR105094]\n\nOn the following testcase on 64-bit targets, store-merging sees\na MEM_REF store from {} ctor with \"negative\" bitsize where bitoff + bitsize\nwraps around to very small end offset.  This later confuses the code\nso that it allocates just a few bytes of memory but fills in huge amounts of\nit.  Later on there is a param_store_merging_max_size size check but due to\nthe wrap-around we pass that.\n\nThe following patch punts on such large bitsizes.\n\n2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/105094\n\t* gimple-ssa-store-merging.cc (mem_valid_for_store_merging): Punt if\n\tbitsize <= 0 rather than just == 0.\n\n\t* gcc.dg/pr105094.c: New test.", "tree": {"sha": "8df9a9b6da26884063bede81345849558b8c9633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df9a9b6da26884063bede81345849558b8c9633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/387e818cda0ffde86f624228c3da1ab28f453685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387e818cda0ffde86f624228c3da1ab28f453685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387e818cda0ffde86f624228c3da1ab28f453685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387e818cda0ffde86f624228c3da1ab28f453685/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "410f39f56c14b195f066b9a18a3c6e8ffa03f848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410f39f56c14b195f066b9a18a3c6e8ffa03f848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410f39f56c14b195f066b9a18a3c6e8ffa03f848"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "b952ce57917e69821fbcc998ef4c58e4b0314257", "filename": "gcc/gimple-ssa-store-merging.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387e818cda0ffde86f624228c3da1ab28f453685/gcc%2Fgimple-ssa-store-merging.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387e818cda0ffde86f624228c3da1ab28f453685/gcc%2Fgimple-ssa-store-merging.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.cc?ref=387e818cda0ffde86f624228c3da1ab28f453685", "patch": "@@ -4940,7 +4940,7 @@ mem_valid_for_store_merging (tree mem, poly_uint64 *pbitsize,\n   tree base_addr = get_inner_reference (mem, &bitsize, &bitpos, &offset, &mode,\n \t\t\t\t\t&unsignedp, &reversep, &volatilep);\n   *pbitsize = bitsize;\n-  if (known_eq (bitsize, 0))\n+  if (known_le (bitsize, 0))\n     return NULL_TREE;\n \n   if (TREE_CODE (mem) == COMPONENT_REF"}, {"sha": "da6dc172a64e45280d1e072d27ef65087b7fcbcf", "filename": "gcc/testsuite/gcc.dg/pr105094.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387e818cda0ffde86f624228c3da1ab28f453685/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105094.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387e818cda0ffde86f624228c3da1ab28f453685/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105094.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105094.c?ref=387e818cda0ffde86f624228c3da1ab28f453685", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/105094 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct S { short a; char b[~(__SIZE_TYPE__)0 / __CHAR_BIT__ - 1]; };\n+void bar (struct S *);\n+\n+void\n+foo (void)\n+{\n+  struct S s = { 5 };\n+  bar (&s);\n+}"}]}