{"sha": "4bb91707a857eebd6b9357da7fabcec87a942340", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiOTE3MDdhODU3ZWViZDZiOTM1N2RhN2ZhYmNlYzg3YTk0MjM0MA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-02-12T16:10:22Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-02-12T16:10:22Z"}, "message": "re PR fortran/65542 (SPREAD intrinsic incorrectly accepted in initialization expressions with -std=f95)\n\n2017-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/65542\n\t* intrinsic.c (gfc_intrinsic_func_interface):  Return an error\n\tfor -std=f95 for disallowed transformational functions in\n\tinitialization expressions.\n\n2017-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/65542\n\t* gfortran.dg/spread_init_expr_2.f90:  New test case.\n\nFrom-SVN: r245376", "tree": {"sha": "88035cf4c2b5a23c7b58223152ddcf7032fd5e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88035cf4c2b5a23c7b58223152ddcf7032fd5e6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb91707a857eebd6b9357da7fabcec87a942340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb91707a857eebd6b9357da7fabcec87a942340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb91707a857eebd6b9357da7fabcec87a942340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb91707a857eebd6b9357da7fabcec87a942340/comments", "author": null, "committer": null, "parents": [{"sha": "ab874efd6bc48a36b79d5d054da943b31680a6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab874efd6bc48a36b79d5d054da943b31680a6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab874efd6bc48a36b79d5d054da943b31680a6f4"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "dc5e50e9ab998cf2c54d8208b1a4889da5c57475", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4bb91707a857eebd6b9357da7fabcec87a942340", "patch": "@@ -1,3 +1,10 @@\n+2017-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/65542\n+\t* intrinsic.c (gfc_intrinsic_func_interface):  Return an error\n+\tfor -std=f95 for disallowed transformational functions in\n+\tinitialization expressions.\n+\n 2017-02-09  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "923572d888c44d6c176a9d1757c2bf50147d6133", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=4bb91707a857eebd6b9357da7fabcec87a942340", "patch": "@@ -4680,6 +4680,27 @@ gfc_intrinsic_func_interface (gfc_expr *expr, int error_flag)\n       return MATCH_ERROR;\n     }\n \n+  /* F95, 7.1.6.1: Only transformational functions REPEAT, RESHAPE,\n+     SELECTED_INT_KIND, SELECTED_REAL_KIND, TRANSFER, and TRIM are allowed in\n+     initialization expressions.  */\n+\n+  if (gfc_init_expr_flag && isym->transformational)\n+    {\n+      gfc_isym_id id = isym->id;\n+      if (id != GFC_ISYM_REPEAT && id != GFC_ISYM_RESHAPE\n+\t  && id != GFC_ISYM_SI_KIND && id != GFC_ISYM_SR_KIND\n+\t  && id != GFC_ISYM_TRANSFER && id != GFC_ISYM_TRIM\n+\t  && !gfc_notify_std (GFC_STD_F2003, \"Transformational function %qs \"\n+\t\t\t      \"at %L is invalid in an initialization \"\n+\t\t\t      \"expression\", name, &expr->where))\n+\t{\n+\t  if (!error_flag)\n+\t    gfc_pop_suppress_errors ();\n+\n+\t  return MATCH_ERROR;\n+\t}\n+    }\n+\n   gfc_current_intrinsic_where = &expr->where;\n \n   /* Bypass the generic list for min, max and ISO_C_Binding's c_loc.  */"}, {"sha": "429fe944fe32e785feb50d50c7a1cc8741b8f565", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bb91707a857eebd6b9357da7fabcec87a942340", "patch": "@@ -1,3 +1,8 @@\n+2017-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/65542\n+\t* gfortran.dg/spread_init_expr_2.f90:  New test case.\n+\n 2017-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/79341"}, {"sha": "19c27fadca8a2e4b4c56053326e56c2d7dfaab6a", "filename": "gcc/testsuite/gfortran.dg/spread_init_expr_2.f90", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_init_expr_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb91707a857eebd6b9357da7fabcec87a942340/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_init_expr_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_init_expr_2.f90?ref=4bb91707a857eebd6b9357da7fabcec87a942340", "patch": "@@ -0,0 +1,5 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+module bug\n+  integer :: ibug(42) = spread(42, 1, 42) ! { dg-error \"invalid in an initialization expression\" }\n+end module"}]}