{"sha": "b96806f679f892e68261cc25e907a524e46f885c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2ODA2ZjY3OWY4OTJlNjgyNjFjYzI1ZTkwN2E1MjRlNDZmODg1Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T22:27:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T22:27:52Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r971", "tree": {"sha": "65aaefcd8dfc4884a600105d1497c6dc49866be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65aaefcd8dfc4884a600105d1497c6dc49866be4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96806f679f892e68261cc25e907a524e46f885c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96806f679f892e68261cc25e907a524e46f885c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96806f679f892e68261cc25e907a524e46f885c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96806f679f892e68261cc25e907a524e46f885c/comments", "author": null, "committer": null, "parents": [{"sha": "b71a4aa92ab01d6f611705a4ac91172f88697e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b71a4aa92ab01d6f611705a4ac91172f88697e3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b71a4aa92ab01d6f611705a4ac91172f88697e3f"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f0c3cf8ab27687cbe9e8227ac4624cbd94b0b298", "filename": "gcc/rtl.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96806f679f892e68261cc25e907a524e46f885c/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96806f679f892e68261cc25e907a524e46f885c/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=b96806f679f892e68261cc25e907a524e46f885c", "patch": "@@ -751,6 +751,9 @@ init_rtl ()\n   for (i = 0; i < (int) MAX_MODE_CLASS; i++)\n     min_class_size[i] = 1000;\n \n+  byte_mode = VOIDmode;\n+  word_mode = VOIDmode;\n+\n   for (mode = VOIDmode; (int) mode < (int) MAX_MACHINE_MODE;\n        mode = (enum machine_mode) ((int) mode + 1))\n     {\n@@ -760,11 +763,13 @@ init_rtl ()\n \t  min_class_size[(int) GET_MODE_CLASS (mode)] = GET_MODE_SIZE (mode);\n \t}\n       if (GET_MODE_CLASS (mode) == MODE_INT\n-\t  && GET_MODE_BITSIZE (mode) == BITS_PER_UNIT)\n+\t  && GET_MODE_BITSIZE (mode) == BITS_PER_UNIT\n+\t  && byte_mode == VOIDmode)\n \tbyte_mode = mode;\n \n       if (GET_MODE_CLASS (mode) == MODE_INT\n-\t  && GET_MODE_BITSIZE (mode) == BITS_PER_WORD)\n+\t  && GET_MODE_BITSIZE (mode) == BITS_PER_WORD\n+\t  && word_mode == VOIDmode)\n \tword_mode = mode;\n     }\n }"}]}