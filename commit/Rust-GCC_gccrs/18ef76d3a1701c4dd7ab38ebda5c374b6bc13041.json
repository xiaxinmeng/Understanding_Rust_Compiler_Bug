{"sha": "18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "node_id": "C_kwDOANBUbNoAKDE4ZWY3NmQzYTE3MDFjNGRkN2FiMzhlYmRhNWMzNzRiNmJjMTMwNDE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-22T09:26:08Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-22T11:19:24Z"}, "message": "Allow space in git commit-mklog args\n\ncontrib/ChangeLog:\n\n\t* git-commit-mklog.py: Do not parse -b argument.\n\tPass mklog_args as json environment variable.\n\t* mklog.py: Parse GCC_MKLOG_ARGS and append it to sys.argv.\n\t* prepare-commit-msg: Do not append GCC_MKLOG_ARGS to args.", "tree": {"sha": "41a6602d7b0a289e8c83aa377770ce4e8b68d41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a6602d7b0a289e8c83aa377770ce4e8b68d41e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "786e51648bd9a6880339329380751809fb97cd6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786e51648bd9a6880339329380751809fb97cd6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/786e51648bd9a6880339329380751809fb97cd6d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "c7e90c8262fa481605c4f0e19bebdcb7ea3cbe04", "filename": "contrib/git-commit-mklog.py", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fgit-commit-mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fgit-commit-mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-commit-mklog.py?ref=18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "patch": "@@ -24,6 +24,7 @@\n # to mklog.py script.\n \n import argparse\n+import json\n import os\n import subprocess\n \n@@ -32,8 +33,7 @@\n     myenv = os.environ.copy()\n \n     parser = argparse.ArgumentParser(description='git-commit-mklog wrapped')\n-    parser.add_argument('-b', '--pr-numbers', action='store',\n-                        type=lambda arg: arg.split(','), nargs='?',\n+    parser.add_argument('-b', '--pr-numbers',\n                         help='Add the specified PRs (comma separated)')\n     parser.add_argument('-p', '--fill-up-bug-titles', action='store_true',\n                         help='Download title of mentioned PRs')\n@@ -44,12 +44,13 @@\n     myenv['GCC_FORCE_MKLOG'] = '1'\n     mklog_args = []\n     if args.pr_numbers:\n-        mklog_args.append(f'-b {\",\".join(args.pr_numbers)}')\n+        mklog_args += ['-b', args.pr_numbers]\n     if args.fill_up_bug_titles:\n         mklog_args.append('-p')\n \n     if mklog_args:\n-        myenv['GCC_MKLOG_ARGS'] = ' '.join(mklog_args)\n+        # wrap mklog arguments with JSON\n+        myenv['GCC_MKLOG_ARGS'] = json.dumps(mklog_args)\n \n     if args.co:\n         for author in args.co.split(','):"}, {"sha": "91c0dcd8864db1677f5da58c3c1e7c8a82a9e744", "filename": "contrib/mklog.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "patch": "@@ -28,6 +28,7 @@\n \n import argparse\n import datetime\n+import json\n import os\n import re\n import subprocess\n@@ -332,6 +333,10 @@ def skip_line_in_changelog(line):\n \n \n if __name__ == '__main__':\n+    extra_args = os.getenv('GCC_MKLOG_ARGS')\n+    if extra_args:\n+        sys.argv += json.loads(extra_args)\n+\n     parser = argparse.ArgumentParser(description=help_message)\n     parser.add_argument('input', nargs='?',\n                         help='Patch file (or missing, read standard input)')"}, {"sha": "969847df6f4f6eeaccb89faa862b29f6cbe2c948", "filename": "contrib/prepare-commit-msg", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fprepare-commit-msg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ef76d3a1701c4dd7ab38ebda5c374b6bc13041/contrib%2Fprepare-commit-msg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprepare-commit-msg?ref=18ef76d3a1701c4dd7ab38ebda5c374b6bc13041", "patch": "@@ -78,4 +78,4 @@ else\n     tee=\"cat\"\n fi\n \n-git $cmd | $tee | git gcc-mklog $GCC_MKLOG_ARGS -c \"$COMMIT_MSG_FILE\"\n+git $cmd | $tee | git gcc-mklog -c \"$COMMIT_MSG_FILE\""}]}