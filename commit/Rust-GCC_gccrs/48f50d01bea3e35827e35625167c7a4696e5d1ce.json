{"sha": "48f50d01bea3e35827e35625167c7a4696e5d1ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmNTBkMDFiZWEzZTM1ODI3ZTM1NjI1MTY3YzdhNDY5NmU1ZDFjZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-07T05:00:47Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-07T05:00:47Z"}, "message": "Initial revision\n\nFrom-SVN: r288", "tree": {"sha": "d52d43f0b5269de88bae43760f8f1b6d3e124351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d52d43f0b5269de88bae43760f8f1b6d3e124351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f50d01bea3e35827e35625167c7a4696e5d1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f50d01bea3e35827e35625167c7a4696e5d1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f50d01bea3e35827e35625167c7a4696e5d1ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f50d01bea3e35827e35625167c7a4696e5d1ce/comments", "author": null, "committer": null, "parents": [{"sha": "4e81a331e8df2459d19b82449b640938d9fd379b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81a331e8df2459d19b82449b640938d9fd379b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e81a331e8df2459d19b82449b640938d9fd379b"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "ab2d3455c1e938a84efc75264a3c0a2b8b7f39e3", "filename": "gcc/config/mips/xm-mips.h", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f50d01bea3e35827e35625167c7a4696e5d1ce/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f50d01bea3e35827e35625167c7a4696e5d1ce/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-mips.h?ref=48f50d01bea3e35827e35625167c7a4696e5d1ce", "patch": "@@ -0,0 +1,79 @@\n+/* Configuration for GNU C-compiler for MIPS Rx000 family\n+   Copyright (C) 1989, 1990, 1991 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+\n+/* #defines that need visibility everywhere.  */\n+#define FALSE 0\n+#define TRUE 1\n+\n+/* This describes the machine the compiler is hosted on.  */\n+#define HOST_BITS_PER_CHAR 8\n+#define HOST_BITS_PER_SHORT 16\n+#define HOST_BITS_PER_INT 32\n+#define HOST_BITS_PER_LONG 32\n+#define HOST_BITS_PER_LONGLONG 64\n+\n+#if !defined(MIPSEL) && !defined(__MIPSEL__)\n+#define HOST_WORDS_BIG_ENDIAN\n+#endif\n+\n+/* Enable host-conditionals for MIPS machines.  */\n+#ifndef MIPS\n+#define MIPS 1\n+#endif\n+\n+/* A code distinguishing the floating point format of the host\n+   machine.  There are three defined values: IEEE_FLOAT_FORMAT,\n+   VAX_FLOAT_FORMAT, and UNKNOWN_FLOAT_FORMAT.  */\n+\n+#define HOST_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n+\n+/* target machine dependencies.\n+   tm.h is a symbolic link to the actual target specific file.   */\n+#include \"tm.h\"\n+\n+/* Arguments to use with `exit'.  */\n+#define SUCCESS_EXIT_CODE 0\n+#define FATAL_EXIT_CODE 33\n+\n+#ifndef __GNUC__\n+/* The MIPS compiler gets it wrong, and treats enumerated bitfields\n+   as signed quantities, making it impossible to use an 8-bit enum\n+   for compiling GNU C++.  */\n+#define ONLY_INT_FIELDS 1\n+#endif\n+\n+#ifndef MIPS_OVERRIDE_ALLOCA\n+/* If compiled with GNU C, use the built-in alloca */\n+#ifdef __GNUC__\n+#define alloca __builtin_alloca\n+\n+#else\n+#define USE_C_ALLOCA\n+extern char * alloca ();\n+\n+/* for the emacs version of alloca */\n+#define STACK_DIRECTION\t-1\n+#endif\n+#endif /* not MIPS_OVERRIDE_ALLOCA */\n+\n+/* Say if we have vprintf.  BSD Mips targets probably don't have vfprintf.  */\n+#if defined(__OSF1__) ||  defined(__OSF__)\n+#define HAVE_VFPRINTF\n+#endif"}]}