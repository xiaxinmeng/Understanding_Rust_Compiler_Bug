{"sha": "e876acbd25c26828c235f0723fc5b4554f4ea9d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3NmFjYmQyNWMyNjgyOGMyMzVmMDcyM2ZjNWI0NTU0ZjRlYTlkNg==", "commit": {"author": {"name": "Steve Kargl", "email": "kargls@comcast.net", "date": "2004-05-17T23:19:47Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-05-17T23:19:47Z"}, "message": "arith.c (gfc_real2complex): Range checking wrong part of complex number.\n\n2004-05-17  Steve Kargl  <kargls@comcast.net>\n\n* arith.c (gfc_real2complex): Range checking wrong part of complex\n        number.\n\nFrom-SVN: r81957", "tree": {"sha": "a1867ab59ef9120ab930202aa1003d1ace7e95e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1867ab59ef9120ab930202aa1003d1ace7e95e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e876acbd25c26828c235f0723fc5b4554f4ea9d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e876acbd25c26828c235f0723fc5b4554f4ea9d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e876acbd25c26828c235f0723fc5b4554f4ea9d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e876acbd25c26828c235f0723fc5b4554f4ea9d6/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2342b5484b0e968f4a10f58025935df13b23941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2342b5484b0e968f4a10f58025935df13b23941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2342b5484b0e968f4a10f58025935df13b23941"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "1fed01aee95a8960b8bab4cbd7039e3f82c645f5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876acbd25c26828c235f0723fc5b4554f4ea9d6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876acbd25c26828c235f0723fc5b4554f4ea9d6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e876acbd25c26828c235f0723fc5b4554f4ea9d6", "patch": "@@ -1,3 +1,8 @@\n+2004-05-17  Steve Kargl  <kargls@comcast.net>\n+\n+\t* arith.c (gfc_real2complex): Range checking wrong part of complex\n+        number. \n+\t\n 2004-05-16  Paul Brook  <paul@codesourcery.com>\n \n \t* options.c (gfc_handle_module_path_options): Fix buffer overrun."}, {"sha": "5b4d7010427536903b68439f7eece08b8c2409b3", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876acbd25c26828c235f0723fc5b4554f4ea9d6/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876acbd25c26828c235f0723fc5b4554f4ea9d6/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=e876acbd25c26828c235f0723fc5b4554f4ea9d6", "patch": "@@ -2666,7 +2666,7 @@ gfc_real2complex (gfc_expr * src, int kind)\n   mpf_set (result->value.complex.r, src->value.real);\n   mpf_set_ui (result->value.complex.i, 0);\n \n-  if ((rc = gfc_check_real_range (result->value.complex.i, kind)) != ARITH_OK)\n+  if ((rc = gfc_check_real_range (result->value.complex.r, kind)) != ARITH_OK)\n     {\n       arith_error (rc, &src->ts, &result->ts, &src->where);\n       gfc_free_expr (result);"}]}