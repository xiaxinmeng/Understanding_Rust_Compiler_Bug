{"sha": "9ef4a0cd837d2820667243dd921bbda903330afe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmNGEwY2Q4MzdkMjgyMDY2NzI0M2RkOTIxYmJkYTkwMzMzMGFmZQ==", "commit": {"author": {"name": "Jesper Nilsson", "email": "jesper.nilsson@axis.com", "date": "2007-09-06T00:16:43Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-09-06T00:16:43Z"}, "message": "cris: longlong.h (count_trailing_zeros): Defined.\n\n\t* longlong.h [__CRIS_arch_version >= 8] (count_trailing_zeros):\n\tDefined.\n\t* config/cris/cris.md (ctzsi2, cris_swap_bits): Implemented.\n\t* config/cris/cris.h (CTZ_DEFINED_VALUE_AT_ZERO): Defined.\n\nFrom-SVN: r128165", "tree": {"sha": "b471f48ac8fe10b8d1c9562b6086669ae666de75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b471f48ac8fe10b8d1c9562b6086669ae666de75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef4a0cd837d2820667243dd921bbda903330afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef4a0cd837d2820667243dd921bbda903330afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef4a0cd837d2820667243dd921bbda903330afe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef4a0cd837d2820667243dd921bbda903330afe/comments", "author": {"login": "jniax", "id": 79859639, "node_id": "MDQ6VXNlcjc5ODU5NjM5", "avatar_url": "https://avatars.githubusercontent.com/u/79859639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jniax", "html_url": "https://github.com/jniax", "followers_url": "https://api.github.com/users/jniax/followers", "following_url": "https://api.github.com/users/jniax/following{/other_user}", "gists_url": "https://api.github.com/users/jniax/gists{/gist_id}", "starred_url": "https://api.github.com/users/jniax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jniax/subscriptions", "organizations_url": "https://api.github.com/users/jniax/orgs", "repos_url": "https://api.github.com/users/jniax/repos", "events_url": "https://api.github.com/users/jniax/events{/privacy}", "received_events_url": "https://api.github.com/users/jniax/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfb6473a78fa39128121aa2b178c88911754ab2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb6473a78fa39128121aa2b178c88911754ab2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb6473a78fa39128121aa2b178c88911754ab2d"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "cd17c1f6019c77dbd493f1ad85a35e7bee52f9da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef4a0cd837d2820667243dd921bbda903330afe", "patch": "@@ -1,3 +1,10 @@\n+2007-09-06  Jesper Nilsson  <jesper.nilsson@axis.com>\n+\n+\t* longlong.h [__CRIS_arch_version >= 8] (count_trailing_zeros):\n+\tDefined.\n+\t* config/cris/cris.md (ctzsi2, cris_swap_bits): Implemented.\n+\t* config/cris/cris.h (CTZ_DEFINED_VALUE_AT_ZERO): Defined.\n+\n 2007-09-06  Jie Zhang  <jie.zhang@analog.com>\n \n \t* config.gcc (tm_file): Add linux.h for bfin*-uclinux*."}, {"sha": "3dd0dbd95119a2aeb3d0072817074dd79de3de32", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=9ef4a0cd837d2820667243dd921bbda903330afe", "patch": "@@ -1410,6 +1410,7 @@ enum cris_pic_symbol_type\n #define TRULY_NOOP_TRUNCATION(OUTPREC, INPREC) 1\n \n #define CLZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE) ((VALUE) = 32, 1)\n+#define CTZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE) ((VALUE) = 32, 1)\n \n #define Pmode SImode\n "}, {"sha": "e248d4307edd759b6f2eacad1af577c027feeb64", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=9ef4a0cd837d2820667243dd921bbda903330afe", "patch": "@@ -69,7 +69,8 @@\n    (CRIS_UNSPEC_GOT 2)\n    (CRIS_UNSPEC_GOTREL 3)\n    (CRIS_UNSPEC_GOTREAD 4)\n-   (CRIS_UNSPEC_PLTGOTREAD 5)])\n+   (CRIS_UNSPEC_PLTGOTREAD 5)\n+   (CRIS_UNSPEC_SWAP_BITS 6)])\n \n ;; Register numbers.\n (define_constants\n@@ -2678,6 +2679,31 @@\n   \"swapwb %0\"\n   [(set_attr \"slottable\" \"yes\")])\n \n+;; This instruction swaps all bits in a register.\n+;; That means that the most significant bit is put in the place\n+;; of the least significant bit, and so on.\n+\n+(define_insn \"cris_swap_bits\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"0\")]\n+\t\t   CRIS_UNSPEC_SWAP_BITS))]\n+  \"TARGET_HAS_SWAP\"\n+  \"swapwbr %0\"\n+  [(set_attr \"slottable\" \"yes\")])\n+\n+;; Implement ctz using two instructions, one for bit swap and one for clz.\n+;; Defines a scratch register to avoid clobbering input.\n+\n+(define_expand \"ctzsi2\"\n+  [(set (match_dup 2)\n+\t(match_operand:SI 1 \"register_operand\"))\n+   (set (match_dup 2)\n+\t(unspec:SI [(match_dup 2)] CRIS_UNSPEC_SWAP_BITS))\n+   (set (match_operand:SI 0 \"register_operand\")\n+\t(clz:SI (match_dup 2)))]\n+  \"TARGET_HAS_LZ && TARGET_HAS_SWAP\"\n+  \"operands[2] = gen_reg_rtx (SImode);\")\n+\n ;; Bound-insn.  Defined to be the same as an unsigned minimum, which is an\n ;; operation supported by gcc.  Used in casesi, but used now and then in\n ;; normal code too."}, {"sha": "8350fbc2b45cfbe03fbc2117ba755fee0829e523", "filename": "gcc/longlong.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef4a0cd837d2820667243dd921bbda903330afe/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=9ef4a0cd837d2820667243dd921bbda903330afe", "patch": "@@ -228,6 +228,9 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__CRIS__) && __CRIS_arch_version >= 3\n #define count_leading_zeros(COUNT, X) ((COUNT) = __builtin_clz (X))\n+#if __CRIS_arch_version >= 8\n+#define count_trailing_zeros(COUNT, X) ((COUNT) = __builtin_ctz (X))\n+#endif\n #endif /* __CRIS__ */\n \n #if defined (__hppa) && W_TYPE_SIZE == 32"}]}