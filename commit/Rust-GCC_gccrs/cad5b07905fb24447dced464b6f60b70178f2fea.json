{"sha": "cad5b07905fb24447dced464b6f60b70178f2fea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkNWIwNzkwNWZiMjQ0NDdkY2VkNDY0YjZmNjBiNzAxNzhmMmZlYQ==", "commit": {"author": {"name": "Sebastian Perta", "email": "sebastian.perta@renesas.com", "date": "2018-02-09T17:43:11Z"}, "committer": {"name": "Sebastian Perta", "email": "sebastianperta@gcc.gnu.org", "date": "2018-02-09T17:43:11Z"}, "message": "rx.md: updated \"movsicc\" expand to be matched by GCC\n\n2018-02-09  Sebastian Perta  <sebastian.perta@renesas.com>\n\n\t*config/rx.md: updated \"movsicc\" expand to be matched by GCC\n\t*testsuite/gcc.target/rx/movsicc.c: new test case\n\nFrom-SVN: r257533", "tree": {"sha": "1fe730cec2c7f678fe130d5f0f557f4a48a56aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe730cec2c7f678fe130d5f0f557f4a48a56aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cad5b07905fb24447dced464b6f60b70178f2fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad5b07905fb24447dced464b6f60b70178f2fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad5b07905fb24447dced464b6f60b70178f2fea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad5b07905fb24447dced464b6f60b70178f2fea/comments", "author": null, "committer": null, "parents": [{"sha": "da86c81e6522f9b27cffd04f728e0edd937d09fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da86c81e6522f9b27cffd04f728e0edd937d09fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da86c81e6522f9b27cffd04f728e0edd937d09fc"}], "stats": {"total": 106, "additions": 105, "deletions": 1}, "files": [{"sha": "7f1985894767c1f32e3ded81b63b49ff11101692", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cad5b07905fb24447dced464b6f60b70178f2fea", "patch": "@@ -1,3 +1,8 @@\n+2018-02-09  Sebastian Perta  <sebastian.perta@renesas.com>\n+\n+\t*config/rx.md: updated \"movsicc\" expand to be matched by GCC\n+\t*testsuite/gcc.target/rx/movsicc.c: new test case\n+\n 2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/83926"}, {"sha": "3fb2ac854b0ca89a633a5a8feef2a0e396a30424", "filename": "gcc/config/rx/rx.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2Fconfig%2Frx%2Frx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2Fconfig%2Frx%2Frx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.md?ref=cad5b07905fb24447dced464b6f60b70178f2fea", "patch": "@@ -733,12 +733,17 @@\n (define_expand \"movsicc\"\n   [(parallel\n     [(set (match_operand:SI                  0 \"register_operand\")\n-\t  (if_then_else:SI (match_operand:SI 1 \"comparison_operator\")\n+\t  (if_then_else:SI (match_operand 1 \"comparison_operator\")\n \t\t\t   (match_operand:SI 2 \"nonmemory_operand\")\n \t\t\t   (match_operand:SI 3 \"nonmemory_operand\")))\n      (clobber (reg:CC CC_REG))])]\n   \"\"\n {\n+  /* Make sure that we have an integer comparison...  */\n+  if (GET_MODE (XEXP (operands[1], 0)) != CCmode\n+      && GET_MODE (XEXP (operands[1], 0)) != SImode)\n+    FAIL;\n+\n   /* One operand must be a constant or a register, the other must be a register.  */\n   if (   ! CONSTANT_P (operands[2])\n       && ! CONSTANT_P (operands[3])"}, {"sha": "d8e6bcc3055b2ce46976f17e690472e5d45291a0", "filename": "gcc/testsuite/gcc.target/rx/movsicc.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fmovsicc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad5b07905fb24447dced464b6f60b70178f2fea/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fmovsicc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fmovsicc.c?ref=cad5b07905fb24447dced464b6f60b70178f2fea", "patch": "@@ -0,0 +1,94 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+\n+typedef unsigned char u8;\n+typedef unsigned short u16;\n+signed int Xa, Xb;\n+\n+signed int stzreg_beq(int i, int a, int b)\n+{\n+  signed int x;\n+  x = a;\n+  if (i)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"bne 1f\" } } */\n+\n+signed int stzreg_bge(int i, int a, int b, int c)\n+{\n+  signed int x;\n+  x = a;\n+  if (i<c)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"blt 1f\" } } */\n+\n+signed int stzreg_bgt(int i, int a, int b)\n+{\n+  signed int x;\n+  x = a;\n+  if (i<10)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"ble 1f\" } } */\n+\n+signed int stzreg_ble(int i, int a, int b)\n+{\n+  signed int x;\n+  x = a;\n+  if (i>0)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"bgt 1f\" } } */\n+\n+signed int stzreg_blt(int i, int a, int b)\n+{\n+  signed int x;\n+  x = a;\n+  if (i<0)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"blt 1f\" } } */\n+\n+signed int stzreg_bne(int i, int a, int b)\n+{\n+  signed int x;\n+  x = a;\n+  if (!i)\n+    x = b;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"beq 1f\" } } */\n+\n+signed int stzimm_le( int i, int a )\n+{\n+  signed int x;\n+  x = a;\n+  if (i>0)\n+    x = 5;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"ble 1f\" } } */\n+\n+signed int stzimm_le_r( int i, int a )\n+{\n+  signed int x;\n+  x = a;\n+  if (i<0)\n+    x = 5;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"bge 1f\" } } */"}]}