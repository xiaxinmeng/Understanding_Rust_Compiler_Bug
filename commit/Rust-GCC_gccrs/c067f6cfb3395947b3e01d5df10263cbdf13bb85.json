{"sha": "c067f6cfb3395947b3e01d5df10263cbdf13bb85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA2N2Y2Y2ZiMzM5NTk0N2IzZTAxZDVkZjEwMjYzY2JkZjEzYmI4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-03T13:45:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-03T13:45:41Z"}, "message": "re PR pch/51722 (Options \"-g3\" or \"-ggdb3\" or \"-g3 -gdwarf-2\" and other \"-g..level3\" - internal compiler error)\n\n\tPR pch/51722\n\t* dwarf2out.c (dwarf2out_start_source_file, dwarf2out_define,\n\tdwarf2out_undef): Allocate e.info using ggc_strdup instead\n\tof xstrdup.\n\t(output_macinfo_op): Don't ggc_strdup fd->filename.\n\t(optimize_macinfo_range): Allocate grp_name using XALLOCAVEC,\n\tthen ggc_strdup it.  Don't free inc->info or cur->info.\n\t(output_macinfo): Don't free ref->info or file->info.\n\nFrom-SVN: r182845", "tree": {"sha": "d355d49f5e1edd515b954e364af97891615a9371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d355d49f5e1edd515b954e364af97891615a9371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c067f6cfb3395947b3e01d5df10263cbdf13bb85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067f6cfb3395947b3e01d5df10263cbdf13bb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c067f6cfb3395947b3e01d5df10263cbdf13bb85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067f6cfb3395947b3e01d5df10263cbdf13bb85/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d2eb24bfa271a1ae3f9ec782792e4c39f1166db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2eb24bfa271a1ae3f9ec782792e4c39f1166db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2eb24bfa271a1ae3f9ec782792e4c39f1166db"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "e5f0b66346d5cb2fb29626cd0b2e175125ecea64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067f6cfb3395947b3e01d5df10263cbdf13bb85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067f6cfb3395947b3e01d5df10263cbdf13bb85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c067f6cfb3395947b3e01d5df10263cbdf13bb85", "patch": "@@ -1,3 +1,14 @@\n+2012-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR pch/51722\n+\t* dwarf2out.c (dwarf2out_start_source_file, dwarf2out_define,\n+\tdwarf2out_undef): Allocate e.info using ggc_strdup instead\n+\tof xstrdup.\n+\t(output_macinfo_op): Don't ggc_strdup fd->filename.\n+\t(optimize_macinfo_range): Allocate grp_name using XALLOCAVEC,\n+\tthen ggc_strdup it.  Don't free inc->info or cur->info.\n+\t(output_macinfo): Don't free ref->info or file->info.\n+\n 2012-01-03  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/51269"}, {"sha": "77c021bb00df284f1d044bf33103cc5523f36b00", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067f6cfb3395947b3e01d5df10263cbdf13bb85/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067f6cfb3395947b3e01d5df10263cbdf13bb85/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c067f6cfb3395947b3e01d5df10263cbdf13bb85", "patch": "@@ -1,6 +1,6 @@\n /* Output Dwarf2 format symbol table information from GCC.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Gary Funck (gary@intrepid.com).\n    Derived from DWARF 1 implementation of Ron Guilmette (rfg@monkeys.com).\n@@ -20549,7 +20549,7 @@ dwarf2out_start_source_file (unsigned int lineno, const char *filename)\n       macinfo_entry e;\n       e.code = DW_MACINFO_start_file;\n       e.lineno = lineno;\n-      e.info = xstrdup (filename);\n+      e.info = ggc_strdup (filename);\n       VEC_safe_push (macinfo_entry, gc, macinfo_table, &e);\n     }\n }\n@@ -20595,7 +20595,7 @@ dwarf2out_define (unsigned int lineno ATTRIBUTE_UNUSED,\n \t}\n       e.code = DW_MACINFO_define;\n       e.lineno = lineno;\n-      e.info = xstrdup (buffer);;\n+      e.info = ggc_strdup (buffer);\n       VEC_safe_push (macinfo_entry, gc, macinfo_table, &e);\n     }\n }\n@@ -20622,7 +20622,7 @@ dwarf2out_undef (unsigned int lineno ATTRIBUTE_UNUSED,\n \t}\n       e.code = DW_MACINFO_undef;\n       e.lineno = lineno;\n-      e.info = xstrdup (buffer);\n+      e.info = ggc_strdup (buffer);\n       VEC_safe_push (macinfo_entry, gc, macinfo_table, &e);\n     }\n }\n@@ -20662,8 +20662,6 @@ output_macinfo_op (macinfo_entry *ref)\n     {\n     case DW_MACINFO_start_file:\n       fd = lookup_filename (ref->info);\n-      if (fd->filename == ref->info)\n-\tfd->filename = ggc_strdup (fd->filename);\n       file_num = maybe_emit_file (fd);\n       dw2_asm_output_data (1, DW_MACINFO_start_file, \"Start new file\");\n       dw2_asm_output_data_uleb128 (ref->lineno,\n@@ -20802,8 +20800,8 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n   linebuf_len = strlen (linebuf);\n \n   /* The group name format is: wmN.[<encoded filename>.]<lineno>.<md5sum>  */\n-  grp_name = XNEWVEC (char, 4 + encoded_filename_len + linebuf_len + 1\n-\t\t      + 16 * 2 + 1);\n+  grp_name = XALLOCAVEC (char, 4 + encoded_filename_len + linebuf_len + 1\n+\t\t\t + 16 * 2 + 1);\n   memcpy (grp_name, DWARF_OFFSET_SIZE == 4 ? \"wm4.\" : \"wm8.\", 4);\n   tail = grp_name + 4;\n   if (encoded_filename_len)\n@@ -20824,14 +20822,13 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n   inc = VEC_index (macinfo_entry, macinfo_table, idx - 1);\n   inc->code = DW_MACRO_GNU_transparent_include;\n   inc->lineno = 0;\n-  inc->info = grp_name;\n+  inc->info = ggc_strdup (grp_name);\n   if (*macinfo_htab == NULL)\n     *macinfo_htab = htab_create (10, htab_macinfo_hash, htab_macinfo_eq, NULL);\n   /* Avoid emitting duplicates.  */\n   slot = htab_find_slot (*macinfo_htab, inc, INSERT);\n   if (*slot != NULL)\n     {\n-      free (CONST_CAST (char *, inc->info));\n       inc->code = 0;\n       inc->info = NULL;\n       /* If such an entry has been used before, just emit\n@@ -20846,7 +20843,6 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n \t   i++)\n \t{\n \t  cur->code = 0;\n-\t  free (CONST_CAST (char *, cur->info));\n \t  cur->info = NULL;\n \t}\n     }\n@@ -20909,7 +20905,6 @@ output_macinfo (void)\n \t  if (!VEC_empty (macinfo_entry, files))\n \t    {\n \t      macinfo_entry *file = VEC_last (macinfo_entry, files);\n-\t      free (CONST_CAST (char *, file->info));\n \t      VEC_pop (macinfo_entry, files);\n \t    }\n \t  break;\n@@ -20939,10 +20934,6 @@ output_macinfo (void)\n \t  break;\n \t}\n       output_macinfo_op (ref);\n-      /* For DW_MACINFO_start_file ref->info has been copied into files\n-\t vector.  */\n-      if (ref->code != DW_MACINFO_start_file)\n-\tfree (CONST_CAST (char *, ref->info));\n       ref->info = NULL;\n       ref->code = 0;\n     }\n@@ -20976,7 +20967,6 @@ output_macinfo (void)\n \t\t\t\t       ref->lineno);\n \t  ASM_OUTPUT_LABEL (asm_out_file, label);\n \t  ref->code = 0;\n-\t  free (CONST_CAST (char *, ref->info));\n \t  ref->info = NULL;\n \t  dw2_asm_output_data (2, 4, \"DWARF macro version number\");\n \t  if (DWARF_OFFSET_SIZE == 8)\n@@ -20989,7 +20979,6 @@ output_macinfo (void)\n       case DW_MACINFO_undef:\n \toutput_macinfo_op (ref);\n \tref->code = 0;\n-\tfree (CONST_CAST (char *, ref->info));\n \tref->info = NULL;\n \tbreak;\n       default:"}]}