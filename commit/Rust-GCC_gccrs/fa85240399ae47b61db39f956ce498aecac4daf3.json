{"sha": "fa85240399ae47b61db39f956ce498aecac4daf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE4NTI0MDM5OWFlNDdiNjFkYjM5Zjk1NmNlNDk4YWVjYWM0ZGFmMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-04T09:40:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-04T09:40:57Z"}, "message": "combine.c (recog_for_combine): Create a dummy insn with PATTERN pat for recog.\n\n\t* combine.c (recog_for_combine): Create a dummy insn with PATTERN\n\tpat for recog.\n\n\t* gcc.dg/20020201-4.c: New test.\n\nFrom-SVN: r49473", "tree": {"sha": "5e75107a668fd1a7d17bce35fea894d0220c5b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e75107a668fd1a7d17bce35fea894d0220c5b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa85240399ae47b61db39f956ce498aecac4daf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa85240399ae47b61db39f956ce498aecac4daf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa85240399ae47b61db39f956ce498aecac4daf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa85240399ae47b61db39f956ce498aecac4daf3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9780c24faf10be83aaab8fef66a6390bc75e40b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9780c24faf10be83aaab8fef66a6390bc75e40b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9780c24faf10be83aaab8fef66a6390bc75e40b1"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "825d95e450809b02e86cb0ac6c526d8cfc5ea72d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa85240399ae47b61db39f956ce498aecac4daf3", "patch": "@@ -1,3 +1,8 @@\n+2002-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* combine.c (recog_for_combine): Create a dummy insn with PATTERN\n+\tpat for recog.\n+\n 2002-02-04  Hartmut Penner  <hpenner@de.ibm.com>\n \n         * varasm.c (decode_rtx_const): Allow unspec (symbol_ref) in"}, {"sha": "25b4d63d0f0ef4120b9d2853dbcdb43bbc3f43e8", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=fa85240399ae47b61db39f956ce498aecac4daf3", "patch": "@@ -9590,7 +9590,7 @@ recog_for_combine (pnewpat, insn, pnotes)\n   int num_clobbers_to_add = 0;\n   int i;\n   rtx notes = 0;\n-  rtx old_notes;\n+  rtx dummy_insn;\n \n   /* If PAT is a PARALLEL, check to see if it contains the CLOBBER\n      we use to indicate that something didn't match.  If we find such a\n@@ -9601,11 +9601,13 @@ recog_for_combine (pnewpat, insn, pnotes)\n \t  && XEXP (XVECEXP (pat, 0, i), 0) == const0_rtx)\n \treturn -1;\n \n-  /* Remove the old notes prior to trying to recognize the new pattern.  */\n-  old_notes = REG_NOTES (insn);\n-  REG_NOTES (insn) = 0;\n+  /* *pnewpat does not have to be actual PATTERN (insn), so make a dummy\n+     instruction for pattern recognition.  */\n+  dummy_insn = shallow_copy_rtx (insn);\n+  PATTERN (dummy_insn) = pat;\n+  REG_NOTES (dummy_insn) = 0;\n \n-  insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n+  insn_code_number = recog (pat, dummy_insn, &num_clobbers_to_add);\n \n   /* If it isn't, there is the possibility that we previously had an insn\n      that clobbered some register as a side effect, but the combined\n@@ -9630,15 +9632,14 @@ recog_for_combine (pnewpat, insn, pnotes)\n       if (pos == 1)\n \tpat = XVECEXP (pat, 0, 0);\n \n-      insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n+      PATTERN (dummy_insn) = pat;\n+      insn_code_number = recog (pat, dummy_insn, &num_clobbers_to_add);\n     }\n \n   /* Recognize all noop sets, these will be killed by followup pass.  */\n   if (insn_code_number < 0 && GET_CODE (pat) == SET && set_noop_p (pat))\n     insn_code_number = NOOP_MOVE_INSN_CODE, num_clobbers_to_add = 0;\n \n-  REG_NOTES (insn) = old_notes;\n-\n   /* If we had any clobbers to add, make a new pattern than contains\n      them.  Then check to make sure that all of them are dead.  */\n   if (num_clobbers_to_add)"}, {"sha": "fe11a62d690dc45c599a3c9fcae4349f715647ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa85240399ae47b61db39f956ce498aecac4daf3", "patch": "@@ -1,3 +1,7 @@\n+2002-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20020201-4.c: New test.\n+\n 2002-02-04  Ben Elliston  <bje@redhat.com>\n \n \t* lib/gcc.exp (gcc_init): Check that the need_status_wrapper"}, {"sha": "3c83fe76047d8a68cf04b1f7fc0f1e8db7b5842c", "filename": "gcc/testsuite/gcc.dg/20020201-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa85240399ae47b61db39f956ce498aecac4daf3/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-4.c?ref=fa85240399ae47b61db39f956ce498aecac4daf3", "patch": "@@ -0,0 +1,16 @@\n+/* This testcase failed because recog_for_combine used to pass a different\n+   pattern than contained in insn to recog.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fssa -fssa-ccp\" } */\n+/* { dg-options \"-O2 -march=i686 -fssa -fssa-ccp\" { target i?86-*-* } } */\n+\n+extern int bar (char *);\n+\n+int\n+foo (void)\n+{\n+  char b[512];\n+\n+  bar (b);\n+  return __builtin_strlen (b);\n+}"}]}