{"sha": "84f9b8e9b82be74c46b51666ff23868b514d6a5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmOWI4ZTliODJiZTc0YzQ2YjUxNjY2ZmYyMzg2OGI1MTRkNmE1Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-30T14:35:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-30T14:35:44Z"}, "message": "(significand_size): Declare.\n\nFrom-SVN: r7388", "tree": {"sha": "5b7f51f62b16c4e443ee220d4213a9da5674b2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b7f51f62b16c4e443ee220d4213a9da5674b2d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f9b8e9b82be74c46b51666ff23868b514d6a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f9b8e9b82be74c46b51666ff23868b514d6a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f9b8e9b82be74c46b51666ff23868b514d6a5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f9b8e9b82be74c46b51666ff23868b514d6a5c/comments", "author": null, "committer": null, "parents": [{"sha": "8ddae3488d9141bb94b8917e3c61c3e795833063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ddae3488d9141bb94b8917e3c61c3e795833063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ddae3488d9141bb94b8917e3c61c3e795833063"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "5d66861e7ae6e8d14b6e774f489aee7d82a2285a", "filename": "gcc/real.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f9b8e9b82be74c46b51666ff23868b514d6a5c/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f9b8e9b82be74c46b51666ff23868b514d6a5c/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=84f9b8e9b82be74c46b51666ff23868b514d6a5c", "patch": "@@ -113,6 +113,8 @@ typedef struct {\n #endif /* no TFmode support */\n #endif /* no XFmode support */\n \n+extern int significand_size\tPROTO((enum machine_mode));\n+\n /* If emulation has been enabled by defining REAL_ARITHMETIC or by\n    setting LONG_DOUBLE_TYPE_SIZE to 96 or 128, then define macros so that\n    they invoke emulator functions. This will succeed only if the machine"}]}