{"sha": "c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYwOTIyNDNjOWQ1MzIwYWFkNWE2ZjBkMDNjN2Q4MDY1OGJkNmMyZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-01-31T13:52:42Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-01-31T13:52:42Z"}, "message": "configure.ac (gcc_cv_ld_static_option): Define.\n\n\tgcc:\n\t* configure.ac (gcc_cv_ld_static_option): Define.\n\t(gcc_cv_ld_dynamic_option): Define.\n\t(gcc_cv_ld_static_dynamic): Tru64 UNIX support -noso/-so_archive\n\tinstead.\n\t(HAVE_LD_STATIC_DYNAMIC): Update message.\n\t(LD_STATIC_OPTION): Define.\n\t(LD_DYNAMIC_OPTION): Define.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* gcc.c (init_spec) [USE_LIBUNWIND_EXCEPTIONS &&\n\tHAVE_LD_STATIC_DYNAMIC]: Use them.\n\n\tgcc/cp:\n\t* g++spec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n\n\tgcc/fortran:\n\t* gfortranspec.c (add_arg_libgfortran) [HAVE_LD_STATIC_DYNAMIC] Use\n\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n\n\tgcc/go:\n\t* gospec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n\nFrom-SVN: r169435", "tree": {"sha": "e89584ce528d3f9d743b6a0d3da88c5ce5808271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e89584ce528d3f9d743b6a0d3da88c5ce5808271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7862be3faeac281495f58baab92408362275514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7862be3faeac281495f58baab92408362275514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7862be3faeac281495f58baab92408362275514"}], "stats": {"total": 104, "additions": 89, "deletions": 15}, "files": [{"sha": "272dc421a211d2df257de52366785201d87424fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,3 +1,17 @@\n+2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_ld_static_option): Define.\n+\t(gcc_cv_ld_dynamic_option): Define.\n+\t(gcc_cv_ld_static_dynamic): Tru64 UNIX support -noso/-so_archive\n+\tinstead.\n+\t(HAVE_LD_STATIC_DYNAMIC): Update message.\n+\t(LD_STATIC_OPTION): Define.\n+\t(LD_DYNAMIC_OPTION): Define.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* gcc.c (init_spec) [USE_LIBUNWIND_EXCEPTIONS &&\n+\tHAVE_LD_STATIC_DYNAMIC]: Use them.\n+\n 2011-01-31  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.c (rx_get_stack_layout): Only save call clobbered"}, {"sha": "f3b0eee312603602846d78b31a8d112bf3b8aff9", "filename": "gcc/config.in", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1142,10 +1142,6 @@\n #undef HAVE_LDFCN_H\n #endif\n \n-/* Define if your linker supports plugin. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_LTO_PLUGIN\n-#endif\n \n /* Define if your linker supports --as-needed and --no-as-needed options. */\n #ifndef USED_FOR_TARGET\n@@ -1213,7 +1209,7 @@\n #endif\n \n \n-/* Define if your linker supports -Bstatic/-Bdynamic option. */\n+/* Define if your linker supports -Bstatic/-Bdynamic or equivalent options. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_STATIC_DYNAMIC\n #endif\n@@ -1249,6 +1245,12 @@\n #endif\n \n \n+/* Define if your linker supports plugin. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_LTO_PLUGIN\n+#endif\n+\n+\n /* Define to 1 if you have the <malloc.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_MALLOC_H\n@@ -1544,6 +1546,18 @@\n #endif\n \n \n+/* Define to the linker option to enable use of shared objects. */\n+#ifndef USED_FOR_TARGET\n+#undef LD_DYNAMIC_OPTION\n+#endif\n+\n+\n+/* Define to the linker option to disable use of shared objects. */\n+#ifndef USED_FOR_TARGET\n+#undef LD_STATIC_OPTION\n+#endif\n+\n+\n /* Define to the linker flags to use for -pthread. */\n #ifndef USED_FOR_TARGET\n #undef LIB_THREAD_LDFLAGS_SPEC"}, {"sha": "85af3e59403bf0efc6e36cf37fb8f6c7cf7e2863", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -23051,6 +23051,8 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker -Bstatic/-Bdynamic option\" >&5\n $as_echo_n \"checking linker -Bstatic/-Bdynamic option... \" >&6; }\n gcc_cv_ld_static_dynamic=no\n+gcc_cv_ld_static_option='-Bstatic'\n+gcc_cv_ld_dynamic_option='-Bdynamic'\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n     gcc_cv_ld_static_dynamic=yes\n@@ -23062,6 +23064,12 @@ elif test x$gcc_cv_ld != x; then\n       gcc_cv_ld_static_dynamic=yes\n   else\n     case \"$target\" in\n+      # Tru64 UNIX support -noso/-so_archive instead of -Bstatic/-Bdynamic.\n+      alpha*-dec-osf*)\n+        gcc_cv_ld_static_dynamic=yes\n+\tgcc_cv_ld_static_option=\"-noso\"\n+\tgcc_cv_ld_dynamic_option=\"-so_archive\"\n+        ;;\n       # IRIX 6 ld supports -Bstatic/-Bdynamic.\n       mips-sgi-irix6*)\n         gcc_cv_ld_static_dynamic=yes\n@@ -23077,6 +23085,16 @@ if test x\"$gcc_cv_ld_static_dynamic\" = xyes; then\n \n $as_echo \"#define HAVE_LD_STATIC_DYNAMIC 1\" >>confdefs.h\n \n+\n+cat >>confdefs.h <<_ACEOF\n+#define LD_STATIC_OPTION \"$gcc_cv_ld_static_option\"\n+_ACEOF\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define LD_DYNAMIC_OPTION \"$gcc_cv_ld_dynamic_option\"\n+_ACEOF\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_ld_static_dynamic\" >&5\n $as_echo \"$gcc_cv_ld_static_dynamic\" >&6; }"}, {"sha": "6a90014d5fedc79d4d7f0907fcfe182c0ccacaec", "filename": "gcc/configure.ac", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -3112,6 +3112,8 @@ fi\n \n AC_MSG_CHECKING(linker -Bstatic/-Bdynamic option)\n gcc_cv_ld_static_dynamic=no\n+gcc_cv_ld_static_option='-Bstatic'\n+gcc_cv_ld_dynamic_option='-Bdynamic'\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n     gcc_cv_ld_static_dynamic=yes\n@@ -3123,6 +3125,12 @@ elif test x$gcc_cv_ld != x; then\n       gcc_cv_ld_static_dynamic=yes\n   else\n     case \"$target\" in\n+      # Tru64 UNIX support -noso/-so_archive instead of -Bstatic/-Bdynamic.\n+      alpha*-dec-osf*)\n+        gcc_cv_ld_static_dynamic=yes\n+\tgcc_cv_ld_static_option=\"-noso\"\n+\tgcc_cv_ld_dynamic_option=\"-so_archive\"\n+        ;;\n       # IRIX 6 ld supports -Bstatic/-Bdynamic.\n       mips-sgi-irix6*)\n         gcc_cv_ld_static_dynamic=yes\n@@ -3136,7 +3144,11 @@ elif test x$gcc_cv_ld != x; then\n fi\n if test x\"$gcc_cv_ld_static_dynamic\" = xyes; then\n \tAC_DEFINE(HAVE_LD_STATIC_DYNAMIC, 1,\n-[Define if your linker supports -Bstatic/-Bdynamic option.])\n+[Define if your linker supports -Bstatic/-Bdynamic or equivalent options.])\n+\tAC_DEFINE_UNQUOTED(LD_STATIC_OPTION, \"$gcc_cv_ld_static_option\",\n+[Define to the linker option to disable use of shared objects.])\n+\tAC_DEFINE_UNQUOTED(LD_DYNAMIC_OPTION, \"$gcc_cv_ld_dynamic_option\",\n+[Define to the linker option to enable use of shared objects.])\n fi\n AC_MSG_RESULT($gcc_cv_ld_static_dynamic)\n "}, {"sha": "48bc1db9b0c1d0670fd0491481da4de3340e94e0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,3 +1,8 @@\n+2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* g++spec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n+\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n+\n 2011-01-29  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47311"}, {"sha": "3a9faa9c1e91b541ca8080e8bbd96169ba59ce53", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,6 +1,6 @@\n /* Specific flags and argument handling of the C++ front end.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -316,7 +316,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (library > 1 && !static_link)\n \t{\n-\t  generate_option (OPT_Wl_, \"-Bstatic\", 1, CL_DRIVER,\n+\t  generate_option (OPT_Wl_, LD_STATIC_OPTION, 1, CL_DRIVER,\n \t\t\t   &new_decoded_options[j]);\n \t  j++;\n \t}\n@@ -337,7 +337,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (library > 1 && !static_link)\n \t{\n-\t  generate_option (OPT_Wl_, \"-Bdynamic\", 1, CL_DRIVER,\n+\t  generate_option (OPT_Wl_, LD_DYNAMIC_OPTION, 1, CL_DRIVER,\n \t\t\t   &new_decoded_options[j]);\n \t  j++;\n \t}"}, {"sha": "f787a974c22ca4b85b98f1b1ad0c6d3f22d760e2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,3 +1,8 @@\n+2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gfortranspec.c (add_arg_libgfortran) [HAVE_LD_STATIC_DYNAMIC] Use\n+\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n+\n 2011-01-31  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/47042"}, {"sha": "2d732fdd45b1e5d98e04960470b00bb0197f8dcc", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -192,12 +192,12 @@ add_arg_libgfortran (bool force_static ATTRIBUTE_UNUSED)\n {\n #ifdef HAVE_LD_STATIC_DYNAMIC\n   if (force_static)\n-    append_option (OPT_Wl_, \"-Bstatic\", 1);\n+    append_option (OPT_Wl_, LD_STATIC_OPTION, 1);\n #endif\n   append_option (OPT_l, FORTRAN_LIBRARY, 1);\n #ifdef HAVE_LD_STATIC_DYNAMIC\n   if (force_static)\n-    append_option (OPT_Wl_, \"-Bdynamic\", 1);\n+    append_option (OPT_Wl_, LD_DYNAMIC_OPTION, 1);\n #endif\n }\n "}, {"sha": "1736b091fb1143425a304622f2e1784100f19989", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1375,7 +1375,8 @@ init_spec (void)\n \t\t\t    \"-lgcc_eh\"\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n # ifdef HAVE_LD_STATIC_DYNAMIC\n-\t\t\t    \" %{!static:-Bstatic} -lunwind %{!static:-Bdynamic}\"\n+\t\t\t    \" %{!static:\" LD_STATIC_OPTION \"} -lunwind\"\n+\t\t\t    \" %{!static:\" LD_DYNAMIC_OPTION \"}\"\n # else\n \t\t\t    \" -lunwind\"\n # endif"}, {"sha": "ff6958abfcccc74a3ca9a79733a1eabb38ddb123", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,3 +1,8 @@\n+2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gospec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n+\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n+\n 2011-01-21  Ian Lance Taylor  <iant@google.com>\n \n \t* go-lang.c (go_langhook_init): Omit float_type_size when calling"}, {"sha": "55a3bcd5bb7f3e44e4b9c57263dca379d822b670", "filename": "gcc/go/gospec.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgo%2Fgospec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6092243c9d5320aad5a6f0d03c7d80658bd6c2e/gcc%2Fgo%2Fgospec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgospec.c?ref=c6092243c9d5320aad5a6f0d03c7d80658bd6c2e", "patch": "@@ -1,5 +1,5 @@\n /* gospec.c -- Specific flags and argument handling of the gcc Go front end.\n-   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -301,7 +301,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (library > 1 && !static_link)\n \t{\n-\t  generate_option (OPT_Wl_, \"-Bstatic\", 1, CL_DRIVER,\n+\t  generate_option (OPT_Wl_, LD_STATIC_OPTION, 1, CL_DRIVER,\n \t\t\t   &new_decoded_options[j]);\n \t  j++;\n \t}\n@@ -315,7 +315,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (library > 1 && !static_link)\n \t{\n-\t  generate_option (OPT_Wl_, \"-Bdynamic\", 1, CL_DRIVER,\n+\t  generate_option (OPT_Wl_, LD_DYNAMIC_OPTION, 1, CL_DRIVER,\n \t\t\t   &new_decoded_options[j]);\n \t  j++;\n \t}"}]}