{"sha": "740ce3316fbcbf1629585ed2190140173719d6f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwY2UzMzE2ZmJjYmYxNjI5NTg1ZWQyMTkwMTQwMTczNzE5ZDZmMg==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2012-02-22T13:55:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T13:55:17Z"}, "message": "sem_prag.adb (Analyze_PPC_In_Decl_Part): Clean up generation of error message text.\n\n2012-02-22  Steve Baird  <baird@adacore.com>\n\n\t* sem_prag.adb (Analyze_PPC_In_Decl_Part): Clean up generation of\n\terror message text.\n\nFrom-SVN: r184474", "tree": {"sha": "4e883c3a71da83aada33d6f1ee6f825368508e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e883c3a71da83aada33d6f1ee6f825368508e5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/740ce3316fbcbf1629585ed2190140173719d6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740ce3316fbcbf1629585ed2190140173719d6f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740ce3316fbcbf1629585ed2190140173719d6f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740ce3316fbcbf1629585ed2190140173719d6f2/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98ee6f8d5feca105be9b7ea12aae3dad9659d73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ee6f8d5feca105be9b7ea12aae3dad9659d73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ee6f8d5feca105be9b7ea12aae3dad9659d73a"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "5f8a264cd374df35a8b18035253b65b441482a71", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740ce3316fbcbf1629585ed2190140173719d6f2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740ce3316fbcbf1629585ed2190140173719d6f2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=740ce3316fbcbf1629585ed2190140173719d6f2", "patch": "@@ -1,3 +1,8 @@\n+2012-02-22  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_PPC_In_Decl_Part): Clean up generation of\n+\terror message text.\n+\n 2012-02-22  Vincent Pucci  <pucci@adacore.com>\n \n \t* rtsfind.adb (Get_Unit_Name): Ada_Numerics_Child and"}, {"sha": "72d47abf56200b26679ed126a33587c02e9e5a54", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740ce3316fbcbf1629585ed2190140173719d6f2/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740ce3316fbcbf1629585ed2190140173719d6f2/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=740ce3316fbcbf1629585ed2190140173719d6f2", "patch": "@@ -285,12 +285,6 @@ package body Sem_Prag is\n             --  Access to T'class, created if there is a controlling formal\n             --  that is an access parameter.\n \n-            function Aspect_Name return String;\n-            --  Return the name of the aspect being specified (\"Pre\" or \"Post\")\n-            --  properly capitalized for use in an error message. Precondition\n-            --  is Present (Corresponding_Aspect (N)), which will be satisfied\n-            --  if Class_Present (N).\n-\n             function Get_ACW return Entity_Id;\n             --  If the expression has a reference to an controlling access\n             --  parameter, create an access to T'class for the necessary\n@@ -305,19 +299,6 @@ package body Sem_Prag is\n             --  type access-to-T'Class. This ensures the expression is well-\n             --  defined for a primitive subprogram of a type descended from T.\n \n-            -----------------\n-            -- Aspect_Name --\n-            -----------------\n-\n-            function Aspect_Name return String is\n-            begin\n-               if Chars (Identifier (Corresponding_Aspect (N))) = Name_Pre then\n-                  return \"Pre\";\n-               else\n-                  return \"Post\";\n-               end if;\n-            end Aspect_Name;\n-\n             -------------\n             -- Get_ACW --\n             -------------\n@@ -388,20 +369,14 @@ package body Sem_Prag is\n \n          begin\n             if not Present (T) then\n+               Error_Msg_Name_1 :=\n+                 Chars (Identifier (Corresponding_Aspect (N)));\n \n-               --  This is weird code, why not just set Err_Msg_Name_1 to\n-               --  Identifier (Corresponding_Aspect (N)), and Err_Msg_Name_2\n-               --  to Name_Class and then use\n-\n-               --    \"aspect `%''%` can only be specified ...\n-\n-               --  That would be the more normal way of doing things ???\n-               --  Then you get proper identifier casing mode as well,\n-               --  instead of presuming mixed case ???\n+               Error_Msg_Name_2 := Name_Class;\n \n                Error_Msg_N\n-                 (\"aspect \" & Aspect_Name & \"''Class can only be specified \" &\n-                  \"for a primitive operation of a tagged type\",\n+                 (\"aspect `%''%` can only be specified for a primitive \" &\n+                  \"operation of a tagged type\",\n                   Corresponding_Aspect (N));\n             end if;\n "}]}