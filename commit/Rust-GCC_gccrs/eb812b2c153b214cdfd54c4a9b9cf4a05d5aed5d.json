{"sha": "eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4MTJiMmMxNTNiMjE0Y2RmZDU0YzRhOWI5Y2Y0YTA1ZDVhZWQ1ZA==", "commit": {"author": {"name": "Jesse Rosenstock", "email": "jmr@ugcs.caltech.edu", "date": "2002-08-14T01:07:59Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-08-14T01:07:59Z"}, "message": "Fix for PR libgcj/7570 and PR libgcj/7578:\n\n2002-08-13  Jesse Rosenstock  <jmr@ugcs.caltech.edu>\n\n\tFix for PR libgcj/7570 and PR libgcj/7578:\n\t* java/lang/natPosixProcess.cc: Include java/io/File.h.\n\t(startProcess): Handle new `dir' argument.\n\t* java/lang/Win32Process.java (ConcreteProcess): Added `dir'\n\targument.\n\t* java/lang/PosixProcess.java (ConcreteProcess): Added `dir'\n\targument.\n\t(startProcess): Likewise.\n\t* java/lang/EcosProcess.java (ConcreteProcess): Added `dir'\n\targument.\n\t* java/lang/Runtime.java (execInternal): Added `dir' argument.\n\t(exec): Don't create new environment if ENV==null.  Pass DIR to\n\texecInternal.\n\t* java/lang/natRuntime.cc: Include java/io/File.h.\n\t(execInternal): Added `dir' argument.\n\nFrom-SVN: r56268", "tree": {"sha": "8859acca9986ffae17e81f17067a13db5493f641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8859acca9986ffae17e81f17067a13db5493f641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/comments", "author": null, "committer": null, "parents": [{"sha": "cf87d551b09fe04a5878a6ea481114d039b93496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf87d551b09fe04a5878a6ea481114d039b93496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf87d551b09fe04a5878a6ea481114d039b93496"}], "stats": {"total": 77, "additions": 60, "deletions": 17}, "files": [{"sha": "e279ce94194d71a745021b9bdb8bed601bbef28b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -1,3 +1,21 @@\n+2002-08-13  Jesse Rosenstock  <jmr@ugcs.caltech.edu>\n+\n+\tFix for PR libgcj/7570 and PR libgcj/7578:\n+\t* java/lang/natPosixProcess.cc: Include java/io/File.h.\n+\t(startProcess): Handle new `dir' argument.\n+\t* java/lang/Win32Process.java (ConcreteProcess): Added `dir'\n+\targument.\n+\t* java/lang/PosixProcess.java (ConcreteProcess): Added `dir'\n+\targument.\n+\t(startProcess): Likewise.\n+\t* java/lang/EcosProcess.java (ConcreteProcess): Added `dir'\n+\targument.\n+\t* java/lang/Runtime.java (execInternal): Added `dir' argument.\n+\t(exec): Don't create new environment if ENV==null.  Pass DIR to\n+\texecInternal.\n+\t* java/lang/natRuntime.cc: Include java/io/File.h.\n+\t(execInternal): Added `dir' argument.\n+\n 2002-08-13  Jesse Rosenstock  <jmr@fulcrummicro.com>\n \n \t* java/io/RandomAccessFile.java (skipBytes): Return number of"}, {"sha": "aff534a39dfea5e92af42cae97755857e51dced7", "filename": "libjava/java/lang/EcosProcess.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FEcosProcess.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FEcosProcess.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FEcosProcess.java?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -10,6 +10,7 @@\n \n package java.lang;\n \n+import java.io.File;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.IOException;\n@@ -52,7 +53,10 @@ public int waitFor () throws InterruptedException\n     return 0;\n   }\n \n-  public ConcreteProcess (String[] progarray, String[] envp) throws IOException\n+  public ConcreteProcess (String[] progarray,\n+                          String[] envp,\n+                          File dir)\n+    throws IOException\n   {\n     throw new IOException (\"eCos processes unimplemented\");\n   }"}, {"sha": "199391b1d34cb62fd3ee078100608fb4dc724adc", "filename": "libjava/java/lang/PosixProcess.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FPosixProcess.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FPosixProcess.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FPosixProcess.java?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -10,6 +10,7 @@\n \n package java.lang;\n \n+import java.io.File;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.IOException;\n@@ -53,15 +54,20 @@ public OutputStream getOutputStream ()\n \n   // This is used for actual initialization, as we can't write a\n   // native constructor.\n-  public native void startProcess (String[] progarray, String[] envp)\n+  public native void startProcess (String[] progarray,\n+                                   String[] envp,\n+                                   File dir)\n     throws IOException;\n \n   // This file is copied to `ConcreteProcess.java' before\n   // compilation.  Hence the constructor name apparently does not\n   // match the file name.\n-  public ConcreteProcess (String[] progarray, String[] envp) throws IOException\n+  public ConcreteProcess (String[] progarray,\n+                          String[] envp,\n+                          File dir)\n+    throws IOException\n   {\n-    startProcess (progarray, envp);\n+    startProcess (progarray, envp, dir);\n   }\n \n   // The process id.  This is cast to a pid_t on the native side."}, {"sha": "932600b5f8f99619839ed7f19441e60ebf4872ec", "filename": "libjava/java/lang/Runtime.java", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FRuntime.java?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -526,18 +526,14 @@ public Process exec(String[] cmd, String[] env) throws IOException\n    *         entries\n    * @throws IndexOutOfBoundsException if cmd is length 0\n    * @since 1.3\n-   * @XXX Ignores dir, for now\n    */\n   public Process exec(String[] cmd, String[] env, File dir)\n     throws IOException\n   {\n     SecurityManager sm = securityManager; // Be thread-safe!\n     if (sm != null)\n       sm.checkExec(cmd[0]);\n-    if (env == null)\n-      env = new String[0];\n-    //XXX Should be:    return execInternal(cmd, env, dir);\n-    return execInternal(cmd, env);\n+    return execInternal(cmd, env, dir);\n   }\n \n   /**\n@@ -729,16 +725,14 @@ public OutputStream getLocalizedOutputStream(OutputStream out)\n    * the environment should contain name=value mappings. If directory is null,\n    * use the current working directory; otherwise start the process in that\n    * directory.\n-   * XXX Add directory support.\n    *\n    * @param cmd the non-null command tokens\n    * @param env the non-null environment setup\n    * @param dir the directory to use, may be null\n    * @return the newly created process\n    * @throws NullPointerException if cmd or env have null elements\n    */\n-  //  native Process execInternal(String[] cmd, String[] env, File dir);\n-  native Process execInternal(String[] cmd, String[] env);\n+  native Process execInternal(String[] cmd, String[] env, File dir);\n \n   /**\n    * Get the system properties. This is done here, instead of in System,"}, {"sha": "72911d2961b05f6b846deb362a5b453940b92d8a", "filename": "libjava/java/lang/Win32Process.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FWin32Process.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FWin32Process.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FWin32Process.java?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -10,6 +10,7 @@\n \n package java.lang;\n \n+import java.io.File;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.IOException;\n@@ -60,7 +61,10 @@ public int waitFor () throws InterruptedException\n     throw new Error(\"not implemented\");\n   }\n \n-  public ConcreteProcess (String[] progarray, String[] envp) throws IOException\n+  public ConcreteProcess (String[] progarray,\n+                          String[] envp,\n+                          File dir)\n+    throws IOException\n   {\n     throw new IOException(\"not implemented\");\n   }"}, {"sha": "a6c049b54b1506e2f0eb32fb0475205d9f2c9a80", "filename": "libjava/java/lang/natPosixProcess.cc", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatPosixProcess.cc?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -30,6 +30,7 @@ details.  */\n #include <java/lang/InterruptedException.h>\n #include <java/lang/NullPointerException.h>\n #include <java/lang/Thread.h>\n+#include <java/io/File.h>\n #include <java/io/FileDescriptor.h>\n #include <java/io/FileInputStream.h>\n #include <java/io/FileOutputStream.h>\n@@ -116,7 +117,8 @@ myclose (int &fd)\n \n void\n java::lang::ConcreteProcess::startProcess (jstringArray progarray,\n-\t\t\t\t\t   jstringArray envp)\n+\t\t\t\t\t   jstringArray envp,\n+\t\t\t\t\t   java::io::File *dir)\n {\n   using namespace java::io;\n \n@@ -188,7 +190,7 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,\n \n       if (pid == 0)\n \t{\n-\t  // Child process, so remap descriptors and exec.\n+\t  // Child process, so remap descriptors, chdir and exec.\n \n \t  if (envp)\n \t    {\n@@ -229,6 +231,19 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,\n \t  close (outp[0]);\n \t  close (outp[1]);\n \t  close (msgp[0]);\n+          \n+\t  // Change directory.\n+\t  if (dir != NULL)\n+\t    {\n+\t      // We don't care about leaking memory here; this process\n+\t      // is about to terminate one way or another.\n+\t      if (chdir (new_string (dir->getPath ())) != 0)\n+\t\t{\n+\t\t  char c = errno;\n+\t\t  write (msgp[1], &c, 1);\n+\t\t  _exit (127);\n+\t\t}\n+\t    }\n \n \t  execvp (args[0], args);\n "}, {"sha": "18ec2321475e32eda60ee52b1064c6201942081a", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=eb812b2c153b214cdfd54c4a9b9cf4a05d5aed5d", "patch": "@@ -21,6 +21,7 @@ details.  */\n #include <java/lang/UnsatisfiedLinkError.h>\n #include <gnu/gcj/runtime/FileDeleter.h>\n #include <gnu/gcj/runtime/FinalizerThread.h>\n+#include <java/io/File.h>\n #include <java/util/Properties.h>\n #include <java/util/TimeZone.h>\n #include <java/lang/StringBuffer.h>\n@@ -538,9 +539,10 @@ java::lang::Runtime::insertSystemProperties (java::util::Properties *newprops)\n \n java::lang::Process *\n java::lang::Runtime::execInternal (jstringArray cmd,\n-\t\t\t\t   jstringArray env)\n+\t\t\t\t   jstringArray env,\n+\t\t\t\t   java::io::File *dir)\n {\n-  return new java::lang::ConcreteProcess (cmd, env);\n+  return new java::lang::ConcreteProcess (cmd, env, dir);\n }\n \n jint"}]}