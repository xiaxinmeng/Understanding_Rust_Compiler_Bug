{"sha": "65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlNTc0N2VmNzJhN2UxMTgwNzI3ZTZiZjAzZmZmOWFkMmRkMDk3ZQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T13:09:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T13:09:17Z"}, "message": "[multiple changes]\n\n2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): Handle properly\n\tthe pragma Compile_Time_Error when it appears in a generic package\n\tdeclaration and uses an expanded name to denote the current unit.\n\n2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* libgnarl/s-taprop__qnx.adb: Fix incorrect casing for pthread_self.\n\t* tracebak.c: Add support for tracebacks in QNX.\n\n2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_aggr.adb (Aggr_Size_OK): Bump base limit from 50000 to 500000.\n\n2017-11-09  Yannick Moy  <moy@adacore.com>\n\n\t* erroutc.adb, set_targ.adb: Remove pragma Annotate for CodePeer\n\tjustification.\n\n2017-11-09  Joel Brobecker  <brobecker@adacore.com>\n\n\t* doc/gnat_ugn/platform_specific_information.rst: Document packages\n\tneeded on GNU/Linux by GNAT.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* contracts.adb (Analyze_Contracts): Remove the three parameter\n\tversion. This routine now only analyzes contracts and does not perform\n\tany freezing actions.\n\t(Analyze_Previous_Contracts): Removed.\n\t(Freeze_Previous_Contracts): New routine.\n\t* contracts.ads (Analyze_Previous_Contracts): Removed.\n\t(Freeze_Previous_Contracts): New routine.\n\t* sem_ch3.adb (Analyze_Declarations): Analyze the contract of an\n\tenclosing package spec regardless of whether the list denotes the\n\tvisible or private declarations.  Fix the removal of partial state\n\trefinements when the context is a package spec.\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Freeze previous\n\tcontracts.\n\t* sem_ch7.adb (Analyze_Package_Body_Helper): Freeze previous contracts.\n\t* sem_ch9.adb (Analyze_Entry_Body): Freeze previous contracts.\n\t(Analyze_Protected_Body): Freeze previous contracts.\n\t(Analyze_Task_Body): Freeze previous contracts.\n\t* sem_prag.adb: Comment reformatting.\n\n2017-11-09  Bob Duff  <duff@adacore.com>\n\n\t* libgnarl/g-thread.ads, libgnarl/g-thread.adb: (Make_Independent):\n\tExport this so users can use it without importing\n\tSystem.Tasking.Utilities.\n\t* libgnarl/s-tassta.adb (Vulnerable_Complete_Task): Relax assertion\n\tthat fails when Make_Independent is called on a user task.\n\t* libgnarl/s-taskin.ads (Master_Of_Task): Avoid unusual\n\tcapitalization style ((style) bad casing of \"Master_of_Task\").\n\nFrom-SVN: r254580", "tree": {"sha": "bcbbc4c0bc36e6d55147e0e94896a83f1d2ccccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcbbc4c0bc36e6d55147e0e94896a83f1d2ccccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/comments", "author": null, "committer": null, "parents": [{"sha": "d7a9512ea9131eed5202e670577741f768626244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a9512ea9131eed5202e670577741f768626244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a9512ea9131eed5202e670577741f768626244"}], "stats": {"total": 968, "additions": 618, "deletions": 350}, "files": [{"sha": "7413956105beaf5aefae9cacc0a096210f0c9803", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -1,3 +1,60 @@\n+2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): Handle properly\n+\tthe pragma Compile_Time_Error when it appears in a generic package\n+\tdeclaration and uses an expanded name to denote the current unit.\n+\n+2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* libgnarl/s-taprop__qnx.adb: Fix incorrect casing for pthread_self.\n+\t* tracebak.c: Add support for tracebacks in QNX.\n+\n+2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_aggr.adb (Aggr_Size_OK): Bump base limit from 50000 to 500000.\n+\n+2017-11-09  Yannick Moy  <moy@adacore.com>\n+\n+\t* erroutc.adb, set_targ.adb: Remove pragma Annotate for CodePeer\n+\tjustification.\n+\n+2017-11-09  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* doc/gnat_ugn/platform_specific_information.rst: Document packages\n+\tneeded on GNU/Linux by GNAT.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* contracts.adb (Analyze_Contracts): Remove the three parameter\n+\tversion. This routine now only analyzes contracts and does not perform\n+\tany freezing actions.\n+\t(Analyze_Previous_Contracts): Removed.\n+\t(Freeze_Previous_Contracts): New routine.\n+\t* contracts.ads (Analyze_Previous_Contracts): Removed.\n+\t(Freeze_Previous_Contracts): New routine.\n+\t* sem_ch3.adb (Analyze_Declarations): Analyze the contract of an\n+\tenclosing package spec regardless of whether the list denotes the\n+\tvisible or private declarations.  Fix the removal of partial state\n+\trefinements when the context is a package spec.\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Freeze previous\n+\tcontracts.\n+\t* sem_ch7.adb (Analyze_Package_Body_Helper): Freeze previous contracts.\n+\t* sem_ch9.adb (Analyze_Entry_Body): Freeze previous contracts.\n+\t(Analyze_Protected_Body): Freeze previous contracts.\n+\t(Analyze_Task_Body): Freeze previous contracts.\n+\t* sem_prag.adb: Comment reformatting.\n+\n+2017-11-09  Bob Duff  <duff@adacore.com>\n+\n+\t* libgnarl/g-thread.ads, libgnarl/g-thread.adb: (Make_Independent):\n+\tExport this so users can use it without importing\n+\tSystem.Tasking.Utilities.\n+\t* libgnarl/s-tassta.adb (Vulnerable_Complete_Task): Relax assertion\n+\tthat fails when Make_Independent is called on a user task.\n+\t* libgnarl/s-taskin.ads (Master_Of_Task): Avoid unusual\n+\tcapitalization style ((style) bad casing of \"Master_of_Task\").\n+\n 2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Correct use of"}, {"sha": "1bd13bd91d3bccfd1e2726b7cc2a68776015d1f9", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 189, "deletions": 104, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -53,16 +53,6 @@ with Tbuild;   use Tbuild;\n \n package body Contracts is\n \n-   procedure Analyze_Contracts\n-     (L          : List_Id;\n-      Freeze_Nod : Node_Id;\n-      Freeze_Id  : Entity_Id);\n-   --  Subsidiary to the one parameter version of Analyze_Contracts and routine\n-   --  Analyze_Previous_Constracts. Analyze the contracts of all constructs in\n-   --  the list L. If Freeze_Nod is set, then the analysis stops when the node\n-   --  is reached. Freeze_Id is the entity of some related context which caused\n-   --  freezing up to node Freeze_Nod.\n-\n    procedure Build_And_Analyze_Contract_Only_Subprograms (L : List_Id);\n    --  (CodePeer): Subsidiary procedure to Analyze_Contracts which builds the\n    --  contract-only subprogram body of eligible subprograms found in L, adds\n@@ -351,32 +341,16 @@ package body Contracts is\n    -----------------------\n \n    procedure Analyze_Contracts (L : List_Id) is\n+      Decl : Node_Id;\n+\n    begin\n       if CodePeer_Mode and then Debug_Flag_Dot_KK then\n          Build_And_Analyze_Contract_Only_Subprograms (L);\n       end if;\n \n-      Analyze_Contracts (L, Freeze_Nod => Empty, Freeze_Id => Empty);\n-   end Analyze_Contracts;\n-\n-   procedure Analyze_Contracts\n-     (L          : List_Id;\n-      Freeze_Nod : Node_Id;\n-      Freeze_Id  : Entity_Id)\n-   is\n-      Decl : Node_Id;\n-\n-   begin\n       Decl := First (L);\n       while Present (Decl) loop\n \n-         --  The caller requests that the traversal stops at a particular node\n-         --  that causes contract \"freezing\".\n-\n-         if Present (Freeze_Nod) and then Decl = Freeze_Nod then\n-            exit;\n-         end if;\n-\n          --  Entry or subprogram declarations\n \n          if Nkind_In (Decl, N_Abstract_Subprogram_Declaration,\n@@ -388,7 +362,7 @@ package body Contracts is\n                Subp_Id : constant Entity_Id := Defining_Entity (Decl);\n \n             begin\n-               Analyze_Entry_Or_Subprogram_Contract (Subp_Id, Freeze_Id);\n+               Analyze_Entry_Or_Subprogram_Contract (Subp_Id);\n \n                --  If analysis of a class-wide pre/postcondition indicates\n                --  that a class-wide clone is needed, analyze its declaration\n@@ -410,9 +384,7 @@ package body Contracts is\n          --  Objects\n \n          elsif Nkind (Decl) = N_Object_Declaration then\n-            Analyze_Object_Contract\n-              (Obj_Id    => Defining_Entity (Decl),\n-               Freeze_Id => Freeze_Id);\n+            Analyze_Object_Contract (Defining_Entity (Decl));\n \n          --  Protected units\n \n@@ -433,8 +405,9 @@ package body Contracts is\n          then\n             Analyze_Task_Contract (Defining_Entity (Decl));\n \n-         --  For type declarations, we need to do the pre-analysis of\n-         --  Iterable aspect specifications.\n+         --  For type declarations, we need to do the pre-analysis of Iterable\n+         --  aspect specifications.\n+\n          --  Other type aspects need to be resolved here???\n \n          elsif Nkind (Decl) = N_Private_Type_Declaration\n@@ -443,6 +416,7 @@ package body Contracts is\n             declare\n                E  : constant Entity_Id := Defining_Identifier (Decl);\n                It : constant Node_Id   := Find_Aspect (E, Aspect_Iterable);\n+\n             begin\n                if Present (It) then\n                   Validate_Iterable_Aspect (E, It);\n@@ -1126,76 +1100,6 @@ package body Contracts is\n       end if;\n    end Analyze_Package_Contract;\n \n-   --------------------------------\n-   -- Analyze_Previous_Contracts --\n-   --------------------------------\n-\n-   procedure Analyze_Previous_Contracts (Body_Decl : Node_Id) is\n-      Body_Id   : constant Entity_Id := Defining_Entity (Body_Decl);\n-      Orig_Decl : constant Node_Id   := Original_Node (Body_Decl);\n-\n-      Par : Node_Id;\n-\n-   begin\n-      --  A body that is in the process of being inlined appears from source,\n-      --  but carries name _parent. Such a body does not cause \"freezing\" of\n-      --  contracts.\n-\n-      if Chars (Body_Id) = Name_uParent then\n-         return;\n-      end if;\n-\n-      --  Climb the parent chain looking for an enclosing package body. Do not\n-      --  use the scope stack, as a body uses the entity of its corresponding\n-      --  spec.\n-\n-      Par := Parent (Body_Decl);\n-      while Present (Par) loop\n-         if Nkind (Par) = N_Package_Body then\n-            Analyze_Package_Body_Contract\n-              (Body_Id   => Defining_Entity (Par),\n-               Freeze_Id => Defining_Entity (Body_Decl));\n-\n-            exit;\n-\n-         --  Do not look for an enclosing package body when the construct which\n-         --  causes freezing is a body generated for an expression function and\n-         --  it appears within a package spec. This ensures that the traversal\n-         --  will not reach too far up the parent chain and attempt to freeze a\n-         --  package body which should not be frozen.\n-\n-         --    package body Enclosing_Body\n-         --      with Refined_State => (State => Var)\n-         --    is\n-         --       package Nested is\n-         --          type Some_Type is ...;\n-         --          function Cause_Freezing return ...;\n-         --       private\n-         --          function Cause_Freezing is (...);\n-         --       end Nested;\n-         --\n-         --       Var : Nested.Some_Type;\n-\n-         elsif Nkind (Par) = N_Package_Declaration\n-           and then Nkind (Orig_Decl) = N_Expression_Function\n-         then\n-            exit;\n-         end if;\n-\n-         Par := Parent (Par);\n-      end loop;\n-\n-      --  Analyze the contracts of all eligible construct up to the body which\n-      --  caused the \"freezing\".\n-\n-      if Is_List_Member (Body_Decl) then\n-         Analyze_Contracts\n-           (L          => List_Containing (Body_Decl),\n-            Freeze_Nod => Body_Decl,\n-            Freeze_Id  => Body_Id);\n-      end if;\n-   end Analyze_Previous_Contracts;\n-\n    --------------------------------\n    -- Analyze_Protected_Contract --\n    --------------------------------\n@@ -3097,6 +3001,187 @@ package body Contracts is\n       end if;\n    end Expand_Subprogram_Contract;\n \n+   -------------------------------\n+   -- Freeze_Previous_Contracts --\n+   -------------------------------\n+\n+   procedure Freeze_Previous_Contracts (Body_Decl : Node_Id) is\n+      function Causes_Contract_Freezing (N : Node_Id) return Boolean;\n+      pragma Inline (Causes_Contract_Freezing);\n+      --  Determine whether arbitrary node N causes contract freezing\n+\n+      procedure Freeze_Contracts;\n+      pragma Inline (Freeze_Contracts);\n+      --  Freeze the contracts of all eligible constructs which precede body\n+      --  Body_Decl.\n+\n+      procedure Freeze_Enclosing_Package_Body;\n+      pragma Inline (Freeze_Enclosing_Package_Body);\n+      --  Freeze the contract of the nearest package body (if any) which\n+      --  encloses body Body_Decl.\n+\n+      ------------------------------\n+      -- Causes_Contract_Freezing --\n+      ------------------------------\n+\n+      function Causes_Contract_Freezing (N : Node_Id) return Boolean is\n+      begin\n+         return Nkind_In (N, N_Entry_Body,\n+                             N_Package_Body,\n+                             N_Protected_Body,\n+                             N_Subprogram_Body,\n+                             N_Subprogram_Body_Stub,\n+                             N_Task_Body);\n+      end Causes_Contract_Freezing;\n+\n+      ----------------------\n+      -- Freeze_Contracts --\n+      ----------------------\n+\n+      procedure Freeze_Contracts is\n+         Body_Id : constant Entity_Id := Defining_Entity (Body_Decl);\n+         Decl    : Node_Id;\n+\n+      begin\n+         --  Nothing to do when the body which causes freezing does not appear\n+         --  in a declarative list because there cannot possibly be constructs\n+         --  with contracts.\n+\n+         if not Is_List_Member (Body_Decl) then\n+            return;\n+         end if;\n+\n+         --  Inspect the declarations preceding the body, and freeze individual\n+         --  contracts of eligible constructs.\n+\n+         Decl := Prev (Body_Decl);\n+         while Present (Decl) loop\n+\n+            --  Stop the traversal when a preceding construct that causes\n+            --  freezing is encountered as there is no point in refreezing\n+            --  the already frozen constructs.\n+\n+            if Causes_Contract_Freezing (Decl) then\n+               exit;\n+\n+            --  Entry or subprogram declarations\n+\n+            elsif Nkind_In (Decl, N_Abstract_Subprogram_Declaration,\n+                                  N_Entry_Declaration,\n+                                  N_Generic_Subprogram_Declaration,\n+                                  N_Subprogram_Declaration)\n+            then\n+               Analyze_Entry_Or_Subprogram_Contract\n+                 (Subp_Id   => Defining_Entity (Decl),\n+                  Freeze_Id => Body_Id);\n+\n+            --  Objects\n+\n+            elsif Nkind (Decl) = N_Object_Declaration then\n+               Analyze_Object_Contract\n+                 (Obj_Id    => Defining_Entity (Decl),\n+                  Freeze_Id => Body_Id);\n+\n+            --  Protected units\n+\n+            elsif Nkind_In (Decl, N_Protected_Type_Declaration,\n+                                  N_Single_Protected_Declaration)\n+            then\n+               Analyze_Protected_Contract (Defining_Entity (Decl));\n+\n+            --  Subprogram body stubs\n+\n+            elsif Nkind (Decl) = N_Subprogram_Body_Stub then\n+               Analyze_Subprogram_Body_Stub_Contract (Defining_Entity (Decl));\n+\n+            --  Task units\n+\n+            elsif Nkind_In (Decl, N_Single_Task_Declaration,\n+                                  N_Task_Type_Declaration)\n+            then\n+               Analyze_Task_Contract (Defining_Entity (Decl));\n+            end if;\n+\n+            Prev (Decl);\n+         end loop;\n+      end Freeze_Contracts;\n+\n+      -----------------------------------\n+      -- Freeze_Enclosing_Package_Body --\n+      -----------------------------------\n+\n+      procedure Freeze_Enclosing_Package_Body is\n+         Orig_Decl : constant Node_Id := Original_Node (Body_Decl);\n+         Par       : Node_Id;\n+\n+      begin\n+         --  Climb the parent chain looking for an enclosing package body. Do\n+         --  not use the scope stack, because a body utilizes the entity of its\n+         --  corresponding spec.\n+\n+         Par := Parent (Body_Decl);\n+         while Present (Par) loop\n+            if Nkind (Par) = N_Package_Body then\n+               Analyze_Package_Body_Contract\n+                 (Body_Id   => Defining_Entity (Par),\n+                  Freeze_Id => Defining_Entity (Body_Decl));\n+\n+               exit;\n+\n+            --  Do not look for an enclosing package body when the construct\n+            --  which causes freezing is a body generated for an expression\n+            --  function and it appears within a package spec. This ensures\n+            --  that the traversal will not reach too far up the parent chain\n+            --  and attempt to freeze a package body which must not be frozen.\n+\n+            --    package body Enclosing_Body\n+            --      with Refined_State => (State => Var)\n+            --    is\n+            --       package Nested is\n+            --          type Some_Type is ...;\n+            --          function Cause_Freezing return ...;\n+            --       private\n+            --          function Cause_Freezing is (...);\n+            --       end Nested;\n+            --\n+            --       Var : Nested.Some_Type;\n+\n+            elsif Nkind (Par) = N_Package_Declaration\n+              and then Nkind (Orig_Decl) = N_Expression_Function\n+            then\n+               exit;\n+\n+            --  Prevent the search from going too far\n+\n+            elsif Is_Body_Or_Package_Declaration (Par) then\n+               exit;\n+            end if;\n+\n+            Par := Parent (Par);\n+         end loop;\n+      end Freeze_Enclosing_Package_Body;\n+\n+      --  Local variables\n+\n+      Body_Id : constant Entity_Id := Defining_Entity (Body_Decl);\n+\n+   --  Start of processing for Freeze_Previous_Contracts\n+\n+   begin\n+      pragma Assert (Causes_Contract_Freezing (Body_Decl));\n+\n+      --  A body that is in the process of being inlined appears from source,\n+      --  but carries name _parent. Such a body does not cause freezing of\n+      --  contracts.\n+\n+      if Chars (Body_Id) = Name_uParent then\n+         return;\n+      end if;\n+\n+      Freeze_Enclosing_Package_Body;\n+      Freeze_Contracts;\n+   end Freeze_Previous_Contracts;\n+\n    ---------------------------------\n    -- Inherit_Subprogram_Contract --\n    ---------------------------------"}, {"sha": "3d700cc9dd3d83484eadc8f8c782367275d68a78", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2015-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2015-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -128,12 +128,6 @@ package Contracts is\n    --    Initializes\n    --    Part_Of\n \n-   procedure Analyze_Previous_Contracts (Body_Decl : Node_Id);\n-   --  Analyze the contracts of all source constructs found in the declarative\n-   --  list which contains entry, package, protected, subprogram, or task body\n-   --  denoted by Body_Decl. The analysis stops once Body_Decl is reached. In\n-   --  addition, analyze the contract of the nearest enclosing package body.\n-\n    procedure Analyze_Protected_Contract (Prot_Id : Entity_Id);\n    --  Analyze all delayed pragmas chained on the contract of protected unit\n    --  Prot_Id if they appeared at the end of a declarative region. Currently\n@@ -165,6 +159,12 @@ package Contracts is\n    --  generic body denoted by Unit by collecting all source contract-related\n    --  pragmas in the contract of the unit.\n \n+   procedure Freeze_Previous_Contracts (Body_Decl : Node_Id);\n+   --  Freeze the contracts of all source constructs found in the declarative\n+   --  list which contains entry, package, protected, subprogram, or task body\n+   --  denoted by Body_Decl. In addition, freeze the contract of the nearest\n+   --  enclosing package body.\n+\n    procedure Inherit_Subprogram_Contract\n      (Subp      : Entity_Id;\n       From_Subp : Entity_Id);"}, {"sha": "bbf790124cc67830ea75a40beb225387362ee495", "filename": "gcc/ada/doc/gnat_ugn/platform_specific_information.rst", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -219,6 +219,36 @@ this in a library package body in your application:\n It gets the effective user id, and if it's not 0 (i.e. root), it raises\n Program_Error.\n \n+.. index:: Linux\n+.. index:: GNU/Linux\n+\n+.. _GNU_Linux_Topics:\n+\n+GNU/Linux Topics\n+================\n+\n+This section describes topics that are specific to GNU/Linux platforms.\n+\n+.. _Required_packages_on_GNU_Linux:\n+\n+Required Packages on GNU/Linux:\n+-------------------------------\n+\n+GNAT requires the C library developer's package to be installed.\n+The name of of that package depends on your GNU/Linux distribution:\n+\n+* RedHat, SUSE: ``glibc-devel``;\n+* Debian, Ubuntu: ``libc6-dev`` (normally installed by default).\n+\n+If using the 32-bit version of GNAT on a 64-bit version of GNU/Linux,\n+you'll need the 32-bit version of that package instead:\n+\n+* RedHat, SUSE: ``glibc-devel.i686``;\n+* Debian, Ubuntu: ``libc6-dev:i386``.\n+\n+Other GNU/Linux distributions might be choosing a different name\n+for that package.\n+\n .. index:: Windows\n \n .. _Microsoft_Windows_Topics:"}, {"sha": "b77d53d7e61abfe08acdfe20dbe6b6363ed34ab4", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -512,9 +512,6 @@ package body Erroutc is\n                   --  so now we output a tab to match up with the text.\n \n                   if Src (P) = ASCII.HT then\n-                     pragma Annotate\n-                       (CodePeer, False_Positive, \"validity check\",\n-                        \"Src(P) is initialized at this point\");\n                      Write_Char (ASCII.HT);\n                      P := P + 1;\n "}, {"sha": "919f46fde00673116c5e3f57b98ae3ad9543c0a9", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -428,7 +428,7 @@ package body Exp_Aggr is\n    --  Start of processing for Aggr_Size_OK\n \n    begin\n-      --  The normal aggregate limit is 50000, but we increase this limit to\n+      --  The normal aggregate limit is 500000, but we increase this limit to\n       --  2**24 (about 16 million) if Restrictions (No_Elaboration_Code) or\n       --  Restrictions (No_Implicit_Loops) is specified, since in either case\n       --  we are at risk of declaring the program illegal because of this\n@@ -448,7 +448,7 @@ package body Exp_Aggr is\n       --  Finally, we use a small limit in CodePeer mode where we favor loops\n       --  instead of thousands of single assignments (from large aggregates).\n \n-      Max_Aggr_Size := 50000;\n+      Max_Aggr_Size := 500000;\n \n       if CodePeer_Mode then\n          Max_Aggr_Size := 100;"}, {"sha": "f21806923da3099c3179c9dac64831c58cb9c4f3", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -2544,8 +2544,8 @@ package body Exp_Ch3 is\n                  and then Has_Interfaces (Rec_Type)\n                then\n                   declare\n-                     Elab_List              : List_Id := New_List;\n                      Elab_Sec_DT_Stmts_List : constant List_Id := New_List;\n+                     Elab_List              : List_Id          := New_List;\n \n                   begin\n                      Init_Secondary_Tags"}, {"sha": "926df631ac9b1a2644709b5d93b924874c02427e", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 30, "deletions": 27, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -291,14 +291,15 @@ package body Exp_Disp is\n          Root_Typ := Full_View (Root_Typ);\n       end if;\n \n-      Static_DT := Building_Static_Dispatch_Tables\n-        and then Is_Library_Level_Tagged_Type (Typ)\n+      Static_DT :=\n+        Building_Static_Dispatch_Tables\n+          and then Is_Library_Level_Tagged_Type (Typ)\n \n-         --  If the type is derived from a CPP class we cannot statically\n-         --  build the dispatch tables because we must inherit primitives\n-         --  from the CPP side.\n+          --  If the type is derived from a CPP class we cannot statically\n+          --  build the dispatch tables because we must inherit primitives\n+          --  from the CPP side.\n \n-        and then not Is_CPP_Class (Root_Typ);\n+          and then not Is_CPP_Class (Root_Typ);\n \n       if not Static_DT then\n          Check_Restriction (Static_Dispatch_Tables, Typ);\n@@ -327,11 +328,12 @@ package body Exp_Disp is\n          Root_Typ := Full_View (Root_Typ);\n       end if;\n \n-      Static_DT := Building_Static_DT (Full_Typ)\n-        and then not Is_Interface (Full_Typ)\n-        and then Has_Interfaces (Full_Typ)\n-        and then (Full_Typ = Root_Typ\n-                   or else not Is_Variable_Size_Record (Etype (Full_Typ)));\n+      Static_DT :=\n+        Building_Static_DT (Full_Typ)\n+          and then not Is_Interface (Full_Typ)\n+          and then Has_Interfaces (Full_Typ)\n+          and then (Full_Typ = Root_Typ\n+                     or else not Is_Variable_Size_Record (Etype (Full_Typ)));\n \n       if not Static_DT\n         and then not Is_Interface (Full_Typ)\n@@ -5535,18 +5537,18 @@ package body Exp_Disp is\n                AI := First_Elmt (Typ_Ifaces);\n                while Present (AI) loop\n                   if Is_Ancestor (Node (AI), Typ, Use_Full_View => True) then\n-                     Sec_DT_Tag :=\n-                       New_Occurrence_Of (DT_Ptr, Loc);\n+                     Sec_DT_Tag := New_Occurrence_Of (DT_Ptr, Loc);\n+\n                   else\n                      Elmt :=\n                        Next_Elmt\n                         (Next_Elmt (First_Elmt (Access_Disp_Table (Typ))));\n                      pragma Assert (Has_Thunks (Node (Elmt)));\n \n                      while Is_Tag (Node (Elmt))\n-                        and then not\n-                          Is_Ancestor (Node (AI), Related_Type (Node (Elmt)),\n-                                       Use_Full_View => True)\n+                       and then not\n+                         Is_Ancestor (Node (AI), Related_Type (Node (Elmt)),\n+                                      Use_Full_View => True)\n                      loop\n                         pragma Assert (Has_Thunks (Node (Elmt)));\n                         Next_Elmt (Elmt);\n@@ -5561,9 +5563,10 @@ package body Exp_Disp is\n                      pragma Assert (Ekind (Node (Elmt)) = E_Constant\n                        and then not\n                          Has_Thunks (Node (Next_Elmt (Next_Elmt (Elmt)))));\n+\n                      Sec_DT_Tag :=\n-                       New_Occurrence_Of (Node (Next_Elmt (Next_Elmt (Elmt))),\n-                                         Loc);\n+                       New_Occurrence_Of\n+                         (Node (Next_Elmt (Next_Elmt (Elmt))), Loc);\n                   end if;\n \n                   --  For static dispatch tables compute Offset_To_Top using\n@@ -5589,6 +5592,7 @@ package body Exp_Disp is\n                            Next_Elmt (Iface_Elmt);\n                            Next_Elmt (Iface_Comp_Elmt);\n                         end loop;\n+\n                         pragma Assert (Present (Iface_Comp));\n \n                         Offset_To_Top :=\n@@ -5607,8 +5611,8 @@ package body Exp_Disp is\n                   end if;\n \n                   Append_To (TSD_Ifaces_List,\n-                     Make_Aggregate (Loc,\n-                       Expressions => New_List (\n+                    Make_Aggregate (Loc,\n+                      Expressions => New_List (\n \n                         --  Iface_Tag\n \n@@ -5631,9 +5635,7 @@ package body Exp_Disp is\n \n                         --  Secondary_DT\n \n-                        Unchecked_Convert_To (RTE (RE_Tag), Sec_DT_Tag)\n-\n-                        )));\n+                        Unchecked_Convert_To (RTE (RE_Tag), Sec_DT_Tag))));\n \n                   Next_Elmt (AI);\n                end loop;\n@@ -5661,10 +5663,11 @@ package body Exp_Disp is\n                            Constraints => New_List (\n                              Make_Integer_Literal (Loc, Num_Ifaces)))),\n \n-                   Expression           => Make_Aggregate (Loc,\n-                     Expressions => New_List (\n-                       Make_Integer_Literal (Loc, Num_Ifaces),\n-                       Make_Aggregate (Loc, TSD_Ifaces_List)))));\n+                   Expression           =>\n+                     Make_Aggregate (Loc,\n+                       Expressions => New_List (\n+                         Make_Integer_Literal (Loc, Num_Ifaces),\n+                         Make_Aggregate (Loc, TSD_Ifaces_List)))));\n \n                Append_To (Result,\n                  Make_Attribute_Definition_Clause (Loc,"}, {"sha": "5999d77f3322f0c7dcfc124e050a35ee3c4907f5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -4991,7 +4991,7 @@ package body Exp_Util is\n \n    --        is transformed into\n \n-   --     Val : Constrained_Subtype_of_T := Maybe_Modified_Expr;\n+   --     Val : Constrained_Subtype_Of_T := Maybe_Modified_Expr;\n    --\n    --  Here are the main cases :\n    --"}, {"sha": "05fdf4c84d079b4b62e62043e8f129d0c55157f5", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 159, "deletions": 103, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -446,6 +446,7 @@ Platform-Specific Information\n \n * Run-Time Libraries:: \n * Specifying a Run-Time Library:: \n+* GNU/Linux Topics:: \n * Microsoft Windows Topics:: \n * Mac OS Topics:: \n \n@@ -457,6 +458,10 @@ Specifying a Run-Time Library\n \n * Choosing the Scheduling Policy:: \n \n+GNU/Linux Topics\n+\n+* Required Packages on GNU/Linux;: Required Packages on GNU/Linux. \n+\n Microsoft Windows Topics\n \n * Using GNAT on Windows:: \n@@ -23449,6 +23454,7 @@ topics related to the GNAT implementation on Windows and Mac OS.\n @menu\n * Run-Time Libraries:: \n * Specifying a Run-Time Library:: \n+* GNU/Linux Topics:: \n * Microsoft Windows Topics:: \n * Mac OS Topics:: \n \n@@ -23615,7 +23621,7 @@ ZCX\n @end multitable\n \n \n-@node Specifying a Run-Time Library,Microsoft Windows Topics,Run-Time Libraries,Platform-Specific Information\n+@node Specifying a Run-Time Library,GNU/Linux Topics,Run-Time Libraries,Platform-Specific Information\n @anchor{gnat_ugn/platform_specific_information specifying-a-run-time-library}@anchor{1d6}@anchor{gnat_ugn/platform_specific_information id4}@anchor{1d7}\n @section Specifying a Run-Time Library\n \n@@ -23770,10 +23776,60 @@ Ignore : constant Boolean :=\n It gets the effective user id, and if it's not 0 (i.e. root), it raises\n Program_Error.\n \n+@geindex Linux\n+\n+@geindex GNU/Linux\n+\n+@node GNU/Linux Topics,Microsoft Windows Topics,Specifying a Run-Time Library,Platform-Specific Information\n+@anchor{gnat_ugn/platform_specific_information id6}@anchor{1da}@anchor{gnat_ugn/platform_specific_information gnu-linux-topics}@anchor{1db}\n+@section GNU/Linux Topics\n+\n+\n+This section describes topics that are specific to GNU/Linux platforms.\n+\n+@menu\n+* Required Packages on GNU/Linux;: Required Packages on GNU/Linux. \n+\n+@end menu\n+\n+@node Required Packages on GNU/Linux,,,GNU/Linux Topics\n+@anchor{gnat_ugn/platform_specific_information id7}@anchor{1dc}@anchor{gnat_ugn/platform_specific_information required-packages-on-gnu-linux}@anchor{1dd}\n+@subsection Required Packages on GNU/Linux:\n+\n+\n+GNAT requires the C library developer's package to be installed.\n+The name of of that package depends on your GNU/Linux distribution:\n+\n+\n+@itemize *\n+\n+@item \n+RedHat, SUSE: @code{glibc-devel};\n+\n+@item \n+Debian, Ubuntu: @code{libc6-dev} (normally installed by default).\n+@end itemize\n+\n+If using the 32-bit version of GNAT on a 64-bit version of GNU/Linux,\n+you'll need the 32-bit version of that package instead:\n+\n+\n+@itemize *\n+\n+@item \n+RedHat, SUSE: @code{glibc-devel.i686};\n+\n+@item \n+Debian, Ubuntu: @code{libc6-dev:i386}.\n+@end itemize\n+\n+Other GNU/Linux distributions might be choosing a different name\n+for that package.\n+\n @geindex Windows\n \n-@node Microsoft Windows Topics,Mac OS Topics,Specifying a Run-Time Library,Platform-Specific Information\n-@anchor{gnat_ugn/platform_specific_information id6}@anchor{1da}@anchor{gnat_ugn/platform_specific_information microsoft-windows-topics}@anchor{2c}\n+@node Microsoft Windows Topics,Mac OS Topics,GNU/Linux Topics,Platform-Specific Information\n+@anchor{gnat_ugn/platform_specific_information microsoft-windows-topics}@anchor{2c}@anchor{gnat_ugn/platform_specific_information id8}@anchor{1de}\n @section Microsoft Windows Topics\n \n \n@@ -23796,7 +23852,7 @@ platforms.\n @end menu\n \n @node Using GNAT on Windows,Using a network installation of GNAT,,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information using-gnat-on-windows}@anchor{1db}@anchor{gnat_ugn/platform_specific_information id7}@anchor{1dc}\n+@anchor{gnat_ugn/platform_specific_information using-gnat-on-windows}@anchor{1df}@anchor{gnat_ugn/platform_specific_information id9}@anchor{1e0}\n @subsection Using GNAT on Windows\n \n \n@@ -23873,7 +23929,7 @@ uninstall or integrate different GNAT products.\n @end itemize\n \n @node Using a network installation of GNAT,CONSOLE and WINDOWS subsystems,Using GNAT on Windows,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information id8}@anchor{1dd}@anchor{gnat_ugn/platform_specific_information using-a-network-installation-of-gnat}@anchor{1de}\n+@anchor{gnat_ugn/platform_specific_information id10}@anchor{1e1}@anchor{gnat_ugn/platform_specific_information using-a-network-installation-of-gnat}@anchor{1e2}\n @subsection Using a network installation of GNAT\n \n \n@@ -23900,7 +23956,7 @@ transfer of large amounts of data across the network and will likely cause\n serious performance penalty.\n \n @node CONSOLE and WINDOWS subsystems,Temporary Files,Using a network installation of GNAT,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information console-and-windows-subsystems}@anchor{1df}@anchor{gnat_ugn/platform_specific_information id9}@anchor{1e0}\n+@anchor{gnat_ugn/platform_specific_information id11}@anchor{1e3}@anchor{gnat_ugn/platform_specific_information console-and-windows-subsystems}@anchor{1e4}\n @subsection CONSOLE and WINDOWS subsystems\n \n \n@@ -23925,7 +23981,7 @@ $ gnatmake winprog -largs -mwindows\n @end quotation\n \n @node Temporary Files,Disabling Command Line Argument Expansion,CONSOLE and WINDOWS subsystems,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information id10}@anchor{1e1}@anchor{gnat_ugn/platform_specific_information temporary-files}@anchor{1e2}\n+@anchor{gnat_ugn/platform_specific_information id12}@anchor{1e5}@anchor{gnat_ugn/platform_specific_information temporary-files}@anchor{1e6}\n @subsection Temporary Files\n \n \n@@ -23964,7 +24020,7 @@ environments where you may not have write access to some\n directories.\n \n @node Disabling Command Line Argument Expansion,Mixed-Language Programming on Windows,Temporary Files,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information disabling-command-line-argument-expansion}@anchor{1e3}\n+@anchor{gnat_ugn/platform_specific_information disabling-command-line-argument-expansion}@anchor{1e7}\n @subsection Disabling Command Line Argument Expansion\n \n \n@@ -24035,7 +24091,7 @@ Ada.Command_Line.Argument (1) -> \"'*.txt'\"\n @end example\n \n @node Mixed-Language Programming on Windows,Windows Specific Add-Ons,Disabling Command Line Argument Expansion,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information id11}@anchor{1e4}@anchor{gnat_ugn/platform_specific_information mixed-language-programming-on-windows}@anchor{1e5}\n+@anchor{gnat_ugn/platform_specific_information id13}@anchor{1e8}@anchor{gnat_ugn/platform_specific_information mixed-language-programming-on-windows}@anchor{1e9}\n @subsection Mixed-Language Programming on Windows\n \n \n@@ -24057,12 +24113,12 @@ to use the Microsoft tools for your C++ code, you have two choices:\n Encapsulate your C++ code in a DLL to be linked with your Ada\n application. In this case, use the Microsoft or whatever environment to\n build the DLL and use GNAT to build your executable\n-(@ref{1e6,,Using DLLs with GNAT}).\n+(@ref{1ea,,Using DLLs with GNAT}).\n \n @item \n Or you can encapsulate your Ada code in a DLL to be linked with the\n other part of your application. In this case, use GNAT to build the DLL\n-(@ref{1e7,,Building DLLs with GNAT Project files}) and use the Microsoft\n+(@ref{1eb,,Building DLLs with GNAT Project files}) and use the Microsoft\n or whatever environment to build your executable.\n @end itemize\n \n@@ -24119,7 +24175,7 @@ native SEH support is used.\n @end menu\n \n @node Windows Calling Conventions,Introduction to Dynamic Link Libraries DLLs,,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information windows-calling-conventions}@anchor{1e8}@anchor{gnat_ugn/platform_specific_information id12}@anchor{1e9}\n+@anchor{gnat_ugn/platform_specific_information windows-calling-conventions}@anchor{1ec}@anchor{gnat_ugn/platform_specific_information id14}@anchor{1ed}\n @subsubsection Windows Calling Conventions\n \n \n@@ -24164,7 +24220,7 @@ are available for Windows:\n @end menu\n \n @node C Calling Convention,Stdcall Calling Convention,,Windows Calling Conventions\n-@anchor{gnat_ugn/platform_specific_information c-calling-convention}@anchor{1ea}@anchor{gnat_ugn/platform_specific_information id13}@anchor{1eb}\n+@anchor{gnat_ugn/platform_specific_information c-calling-convention}@anchor{1ee}@anchor{gnat_ugn/platform_specific_information id15}@anchor{1ef}\n @subsubsection @code{C} Calling Convention\n \n \n@@ -24206,10 +24262,10 @@ is missing, as in the above example, this parameter is set to be the\n When importing a variable defined in C, you should always use the @code{C}\n calling convention unless the object containing the variable is part of a\n DLL (in which case you should use the @code{Stdcall} calling\n-convention, @ref{1ec,,Stdcall Calling Convention}).\n+convention, @ref{1f0,,Stdcall Calling Convention}).\n \n @node Stdcall Calling Convention,Win32 Calling Convention,C Calling Convention,Windows Calling Conventions\n-@anchor{gnat_ugn/platform_specific_information stdcall-calling-convention}@anchor{1ec}@anchor{gnat_ugn/platform_specific_information id14}@anchor{1ed}\n+@anchor{gnat_ugn/platform_specific_information stdcall-calling-convention}@anchor{1f0}@anchor{gnat_ugn/platform_specific_information id16}@anchor{1f1}\n @subsubsection @code{Stdcall} Calling Convention\n \n \n@@ -24306,23 +24362,23 @@ Note that to ease building cross-platform bindings this convention\n will be handled as a @code{C} calling convention on non-Windows platforms.\n \n @node Win32 Calling Convention,DLL Calling Convention,Stdcall Calling Convention,Windows Calling Conventions\n-@anchor{gnat_ugn/platform_specific_information win32-calling-convention}@anchor{1ee}@anchor{gnat_ugn/platform_specific_information id15}@anchor{1ef}\n+@anchor{gnat_ugn/platform_specific_information win32-calling-convention}@anchor{1f2}@anchor{gnat_ugn/platform_specific_information id17}@anchor{1f3}\n @subsubsection @code{Win32} Calling Convention\n \n \n This convention, which is GNAT-specific is fully equivalent to the\n @code{Stdcall} calling convention described above.\n \n @node DLL Calling Convention,,Win32 Calling Convention,Windows Calling Conventions\n-@anchor{gnat_ugn/platform_specific_information dll-calling-convention}@anchor{1f0}@anchor{gnat_ugn/platform_specific_information id16}@anchor{1f1}\n+@anchor{gnat_ugn/platform_specific_information id18}@anchor{1f4}@anchor{gnat_ugn/platform_specific_information dll-calling-convention}@anchor{1f5}\n @subsubsection @code{DLL} Calling Convention\n \n \n This convention, which is GNAT-specific is fully equivalent to the\n @code{Stdcall} calling convention described above.\n \n @node Introduction to Dynamic Link Libraries DLLs,Using DLLs with GNAT,Windows Calling Conventions,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information introduction-to-dynamic-link-libraries-dlls}@anchor{1f2}@anchor{gnat_ugn/platform_specific_information id17}@anchor{1f3}\n+@anchor{gnat_ugn/platform_specific_information id19}@anchor{1f6}@anchor{gnat_ugn/platform_specific_information introduction-to-dynamic-link-libraries-dlls}@anchor{1f7}\n @subsubsection Introduction to Dynamic Link Libraries (DLLs)\n \n \n@@ -24406,10 +24462,10 @@ As a side note, an interesting difference between Microsoft DLLs and\n Unix shared libraries, is the fact that on most Unix systems all public\n routines are exported by default in a Unix shared library, while under\n Windows it is possible (but not required) to list exported routines in\n-a definition file (see @ref{1f4,,The Definition File}).\n+a definition file (see @ref{1f8,,The Definition File}).\n \n @node Using DLLs with GNAT,Building DLLs with GNAT Project files,Introduction to Dynamic Link Libraries DLLs,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information id18}@anchor{1f5}@anchor{gnat_ugn/platform_specific_information using-dlls-with-gnat}@anchor{1e6}\n+@anchor{gnat_ugn/platform_specific_information id20}@anchor{1f9}@anchor{gnat_ugn/platform_specific_information using-dlls-with-gnat}@anchor{1ea}\n @subsubsection Using DLLs with GNAT\n \n \n@@ -24500,7 +24556,7 @@ example a fictitious DLL called @code{API.dll}.\n @end menu\n \n @node Creating an Ada Spec for the DLL Services,Creating an Import Library,,Using DLLs with GNAT\n-@anchor{gnat_ugn/platform_specific_information creating-an-ada-spec-for-the-dll-services}@anchor{1f6}@anchor{gnat_ugn/platform_specific_information id19}@anchor{1f7}\n+@anchor{gnat_ugn/platform_specific_information id21}@anchor{1fa}@anchor{gnat_ugn/platform_specific_information creating-an-ada-spec-for-the-dll-services}@anchor{1fb}\n @subsubsection Creating an Ada Spec for the DLL Services\n \n \n@@ -24540,7 +24596,7 @@ end API;\n @end quotation\n \n @node Creating an Import Library,,Creating an Ada Spec for the DLL Services,Using DLLs with GNAT\n-@anchor{gnat_ugn/platform_specific_information id20}@anchor{1f8}@anchor{gnat_ugn/platform_specific_information creating-an-import-library}@anchor{1f9}\n+@anchor{gnat_ugn/platform_specific_information id22}@anchor{1fc}@anchor{gnat_ugn/platform_specific_information creating-an-import-library}@anchor{1fd}\n @subsubsection Creating an Import Library\n \n \n@@ -24554,7 +24610,7 @@ as in this case it is possible to link directly against the\n DLL. Otherwise read on.\n \n @geindex Definition file\n-@anchor{gnat_ugn/platform_specific_information the-definition-file}@anchor{1f4}\n+@anchor{gnat_ugn/platform_specific_information the-definition-file}@anchor{1f8}\n @subsubheading The Definition File\n \n \n@@ -24602,17 +24658,17 @@ EXPORTS\n @end table\n \n Note that you must specify the correct suffix (@code{@@@emph{nn}})\n-(see @ref{1e8,,Windows Calling Conventions}) for a Stdcall\n+(see @ref{1ec,,Windows Calling Conventions}) for a Stdcall\n calling convention function in the exported symbols list.\n \n There can actually be other sections in a definition file, but these\n sections are not relevant to the discussion at hand.\n-@anchor{gnat_ugn/platform_specific_information create-def-file-automatically}@anchor{1fa}\n+@anchor{gnat_ugn/platform_specific_information create-def-file-automatically}@anchor{1fe}\n @subsubheading Creating a Definition File Automatically\n \n \n You can automatically create the definition file @code{API.def}\n-(see @ref{1f4,,The Definition File}) from a DLL.\n+(see @ref{1f8,,The Definition File}) from a DLL.\n For that use the @code{dlltool} program as follows:\n \n @quotation\n@@ -24622,7 +24678,7 @@ $ dlltool API.dll -z API.def --export-all-symbols\n @end example\n \n Note that if some routines in the DLL have the @code{Stdcall} convention\n-(@ref{1e8,,Windows Calling Conventions}) with stripped @code{@@@emph{nn}}\n+(@ref{1ec,,Windows Calling Conventions}) with stripped @code{@@@emph{nn}}\n suffix then you'll have to edit @code{api.def} to add it, and specify\n @code{-k} to @code{gnatdll} when creating the import library.\n \n@@ -24646,13 +24702,13 @@ tells you what symbol is expected. You just have to go back to the\n definition file and add the right suffix.\n @end itemize\n @end quotation\n-@anchor{gnat_ugn/platform_specific_information gnat-style-import-library}@anchor{1fb}\n+@anchor{gnat_ugn/platform_specific_information gnat-style-import-library}@anchor{1ff}\n @subsubheading GNAT-Style Import Library\n \n \n To create a static import library from @code{API.dll} with the GNAT tools\n you should create the .def file, then use @code{gnatdll} tool\n-(see @ref{1fc,,Using gnatdll}) as follows:\n+(see @ref{200,,Using gnatdll}) as follows:\n \n @quotation\n \n@@ -24668,15 +24724,15 @@ definition file name is @code{xyz.def}, the import library name will\n be @code{libxyz.a}. Note that in the previous example option\n @code{-e} could have been removed because the name of the definition\n file (before the @code{.def} suffix) is the same as the name of the\n-DLL (@ref{1fc,,Using gnatdll} for more information about @code{gnatdll}).\n+DLL (@ref{200,,Using gnatdll} for more information about @code{gnatdll}).\n @end quotation\n-@anchor{gnat_ugn/platform_specific_information msvs-style-import-library}@anchor{1fd}\n+@anchor{gnat_ugn/platform_specific_information msvs-style-import-library}@anchor{201}\n @subsubheading Microsoft-Style Import Library\n \n \n A Microsoft import library is needed only if you plan to make an\n Ada DLL available to applications developed with Microsoft\n-tools (@ref{1e5,,Mixed-Language Programming on Windows}).\n+tools (@ref{1e9,,Mixed-Language Programming on Windows}).\n \n To create a Microsoft-style import library for @code{API.dll} you\n should create the .def file, then build the actual import library using\n@@ -24700,7 +24756,7 @@ See the Microsoft documentation for further details about the usage of\n @end quotation\n \n @node Building DLLs with GNAT Project files,Building DLLs with GNAT,Using DLLs with GNAT,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information id21}@anchor{1fe}@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnat-project-files}@anchor{1e7}\n+@anchor{gnat_ugn/platform_specific_information id23}@anchor{202}@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnat-project-files}@anchor{1eb}\n @subsubsection Building DLLs with GNAT Project files\n \n \n@@ -24716,7 +24772,7 @@ when inside the @code{DllMain} routine which is used for auto-initialization\n of shared libraries, so it is not possible to have library level tasks in SALs.\n \n @node Building DLLs with GNAT,Building DLLs with gnatdll,Building DLLs with GNAT Project files,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnat}@anchor{1ff}@anchor{gnat_ugn/platform_specific_information id22}@anchor{200}\n+@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnat}@anchor{203}@anchor{gnat_ugn/platform_specific_information id24}@anchor{204}\n @subsubsection Building DLLs with GNAT\n \n \n@@ -24747,7 +24803,7 @@ $ gcc -shared -shared-libgcc -o api.dll obj1.o obj2.o ...\n It is important to note that in this case all symbols found in the\n object files are automatically exported. It is possible to restrict\n the set of symbols to export by passing to @code{gcc} a definition\n-file (see @ref{1f4,,The Definition File}).\n+file (see @ref{1f8,,The Definition File}).\n For example:\n \n @example\n@@ -24785,16 +24841,16 @@ $ gnatmake main -Iapilib -bargs -shared -largs -Lapilib -lAPI\n @end quotation\n \n @node Building DLLs with gnatdll,Ada DLLs and Finalization,Building DLLs with GNAT,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnatdll}@anchor{201}@anchor{gnat_ugn/platform_specific_information id23}@anchor{202}\n+@anchor{gnat_ugn/platform_specific_information building-dlls-with-gnatdll}@anchor{205}@anchor{gnat_ugn/platform_specific_information id25}@anchor{206}\n @subsubsection Building DLLs with gnatdll\n \n \n @geindex DLLs\n @geindex building\n \n Note that it is preferred to use GNAT Project files\n-(@ref{1e7,,Building DLLs with GNAT Project files}) or the built-in GNAT\n-DLL support (@ref{1ff,,Building DLLs with GNAT}) or to build DLLs.\n+(@ref{1eb,,Building DLLs with GNAT Project files}) or the built-in GNAT\n+DLL support (@ref{203,,Building DLLs with GNAT}) or to build DLLs.\n \n This section explains how to build DLLs containing Ada code using\n @code{gnatdll}. These DLLs will be referred to as Ada DLLs in the\n@@ -24810,20 +24866,20 @@ non-Ada applications are as follows:\n You need to mark each Ada entity exported by the DLL with a @code{C} or\n @code{Stdcall} calling convention to avoid any Ada name mangling for the\n entities exported by the DLL\n-(see @ref{203,,Exporting Ada Entities}). You can\n+(see @ref{207,,Exporting Ada Entities}). You can\n skip this step if you plan to use the Ada DLL only from Ada applications.\n \n @item \n Your Ada code must export an initialization routine which calls the routine\n @code{adainit} generated by @code{gnatbind} to perform the elaboration of\n-the Ada code in the DLL (@ref{204,,Ada DLLs and Elaboration}). The initialization\n+the Ada code in the DLL (@ref{208,,Ada DLLs and Elaboration}). The initialization\n routine exported by the Ada DLL must be invoked by the clients of the DLL\n to initialize the DLL.\n \n @item \n When useful, the DLL should also export a finalization routine which calls\n routine @code{adafinal} generated by @code{gnatbind} to perform the\n-finalization of the Ada code in the DLL (@ref{205,,Ada DLLs and Finalization}).\n+finalization of the Ada code in the DLL (@ref{209,,Ada DLLs and Finalization}).\n The finalization routine exported by the Ada DLL must be invoked by the\n clients of the DLL when the DLL services are no further needed.\n \n@@ -24833,11 +24889,11 @@ of the programming languages to which you plan to make the DLL available.\n \n @item \n You must provide a definition file listing the exported entities\n-(@ref{1f4,,The Definition File}).\n+(@ref{1f8,,The Definition File}).\n \n @item \n Finally you must use @code{gnatdll} to produce the DLL and the import\n-library (@ref{1fc,,Using gnatdll}).\n+library (@ref{200,,Using gnatdll}).\n @end itemize\n \n Note that a relocatable DLL stripped using the @code{strip}\n@@ -24857,7 +24913,7 @@ chapter of the @emph{GPRbuild User's Guide}.\n @end menu\n \n @node Limitations When Using Ada DLLs from Ada,Exporting Ada Entities,,Building DLLs with gnatdll\n-@anchor{gnat_ugn/platform_specific_information limitations-when-using-ada-dlls-from-ada}@anchor{206}\n+@anchor{gnat_ugn/platform_specific_information limitations-when-using-ada-dlls-from-ada}@anchor{20a}\n @subsubsection Limitations When Using Ada DLLs from Ada\n \n \n@@ -24878,7 +24934,7 @@ It is completely safe to exchange plain elementary, array or record types,\n Windows object handles, etc.\n \n @node Exporting Ada Entities,Ada DLLs and Elaboration,Limitations When Using Ada DLLs from Ada,Building DLLs with gnatdll\n-@anchor{gnat_ugn/platform_specific_information exporting-ada-entities}@anchor{203}@anchor{gnat_ugn/platform_specific_information id24}@anchor{207}\n+@anchor{gnat_ugn/platform_specific_information exporting-ada-entities}@anchor{207}@anchor{gnat_ugn/platform_specific_information id26}@anchor{20b}\n @subsubsection Exporting Ada Entities\n \n \n@@ -24978,10 +25034,10 @@ end API;\n Note that if you do not export the Ada entities with a @code{C} or\n @code{Stdcall} convention you will have to provide the mangled Ada names\n in the definition file of the Ada DLL\n-(@ref{208,,Creating the Definition File}).\n+(@ref{20c,,Creating the Definition File}).\n \n @node Ada DLLs and Elaboration,,Exporting Ada Entities,Building DLLs with gnatdll\n-@anchor{gnat_ugn/platform_specific_information ada-dlls-and-elaboration}@anchor{204}@anchor{gnat_ugn/platform_specific_information id25}@anchor{209}\n+@anchor{gnat_ugn/platform_specific_information ada-dlls-and-elaboration}@anchor{208}@anchor{gnat_ugn/platform_specific_information id27}@anchor{20d}\n @subsubsection Ada DLLs and Elaboration\n \n \n@@ -24999,7 +25055,7 @@ the Ada elaboration routine @code{adainit} generated by the GNAT binder\n (@ref{b4,,Binding with Non-Ada Main Programs}). See the body of\n @code{Initialize_Api} for an example. Note that the GNAT binder is\n automatically invoked during the DLL build process by the @code{gnatdll}\n-tool (@ref{1fc,,Using gnatdll}).\n+tool (@ref{200,,Using gnatdll}).\n \n When a DLL is loaded, Windows systematically invokes a routine called\n @code{DllMain}. It would therefore be possible to call @code{adainit}\n@@ -25012,7 +25068,7 @@ time), which means that the GNAT run-time will deadlock waiting for the\n newly created task to complete its initialization.\n \n @node Ada DLLs and Finalization,Creating a Spec for Ada DLLs,Building DLLs with gnatdll,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information ada-dlls-and-finalization}@anchor{205}@anchor{gnat_ugn/platform_specific_information id26}@anchor{20a}\n+@anchor{gnat_ugn/platform_specific_information id28}@anchor{20e}@anchor{gnat_ugn/platform_specific_information ada-dlls-and-finalization}@anchor{209}\n @subsubsection Ada DLLs and Finalization\n \n \n@@ -25027,10 +25083,10 @@ routine @code{adafinal} generated by the GNAT binder\n See the body of @code{Finalize_Api} for an\n example. As already pointed out the GNAT binder is automatically invoked\n during the DLL build process by the @code{gnatdll} tool\n-(@ref{1fc,,Using gnatdll}).\n+(@ref{200,,Using gnatdll}).\n \n @node Creating a Spec for Ada DLLs,GNAT and Windows Resources,Ada DLLs and Finalization,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information id27}@anchor{20b}@anchor{gnat_ugn/platform_specific_information creating-a-spec-for-ada-dlls}@anchor{20c}\n+@anchor{gnat_ugn/platform_specific_information id29}@anchor{20f}@anchor{gnat_ugn/platform_specific_information creating-a-spec-for-ada-dlls}@anchor{210}\n @subsubsection Creating a Spec for Ada DLLs\n \n \n@@ -25088,7 +25144,7 @@ end API;\n @end menu\n \n @node Creating the Definition File,Using gnatdll,,Creating a Spec for Ada DLLs\n-@anchor{gnat_ugn/platform_specific_information id28}@anchor{20d}@anchor{gnat_ugn/platform_specific_information creating-the-definition-file}@anchor{208}\n+@anchor{gnat_ugn/platform_specific_information creating-the-definition-file}@anchor{20c}@anchor{gnat_ugn/platform_specific_information id30}@anchor{211}\n @subsubsection Creating the Definition File\n \n \n@@ -25124,7 +25180,7 @@ EXPORTS\n @end quotation\n \n @node Using gnatdll,,Creating the Definition File,Creating a Spec for Ada DLLs\n-@anchor{gnat_ugn/platform_specific_information id29}@anchor{20e}@anchor{gnat_ugn/platform_specific_information using-gnatdll}@anchor{1fc}\n+@anchor{gnat_ugn/platform_specific_information using-gnatdll}@anchor{200}@anchor{gnat_ugn/platform_specific_information id31}@anchor{212}\n @subsubsection Using @code{gnatdll}\n \n \n@@ -25335,7 +25391,7 @@ asks @code{gnatlink} to generate the routines @code{DllMain} and\n is loaded into memory.\n \n @item \n-@code{gnatdll} uses @code{dlltool} (see @ref{20f,,Using dlltool}) to build the\n+@code{gnatdll} uses @code{dlltool} (see @ref{213,,Using dlltool}) to build the\n export table (@code{api.exp}). The export table contains the relocation\n information in a form which can be used during the final link to ensure\n that the Windows loader is able to place the DLL anywhere in memory.\n@@ -25374,7 +25430,7 @@ $ gnatbind -n api\n $ gnatlink api api.exp -o api.dll -mdll\n @end example\n @end itemize\n-@anchor{gnat_ugn/platform_specific_information using-dlltool}@anchor{20f}\n+@anchor{gnat_ugn/platform_specific_information using-dlltool}@anchor{213}\n @subsubheading Using @code{dlltool}\n \n \n@@ -25433,7 +25489,7 @@ DLL in the static import library generated by @code{dlltool} with switch\n @item @code{-k}\n \n Kill @code{@@@emph{nn}} from exported names\n-(@ref{1e8,,Windows Calling Conventions}\n+(@ref{1ec,,Windows Calling Conventions}\n for a discussion about @code{Stdcall}-style symbols.\n @end table\n \n@@ -25489,7 +25545,7 @@ Use @code{assembler-name} as the assembler. The default is @code{as}.\n @end table\n \n @node GNAT and Windows Resources,Using GNAT DLLs from Microsoft Visual Studio Applications,Creating a Spec for Ada DLLs,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information gnat-and-windows-resources}@anchor{210}@anchor{gnat_ugn/platform_specific_information id30}@anchor{211}\n+@anchor{gnat_ugn/platform_specific_information gnat-and-windows-resources}@anchor{214}@anchor{gnat_ugn/platform_specific_information id32}@anchor{215}\n @subsubsection GNAT and Windows Resources\n \n \n@@ -25584,7 +25640,7 @@ the corresponding Microsoft documentation.\n @end menu\n \n @node Building Resources,Compiling Resources,,GNAT and Windows Resources\n-@anchor{gnat_ugn/platform_specific_information building-resources}@anchor{212}@anchor{gnat_ugn/platform_specific_information id31}@anchor{213}\n+@anchor{gnat_ugn/platform_specific_information building-resources}@anchor{216}@anchor{gnat_ugn/platform_specific_information id33}@anchor{217}\n @subsubsection Building Resources\n \n \n@@ -25604,7 +25660,7 @@ complete description of the resource script language can be found in the\n Microsoft documentation.\n \n @node Compiling Resources,Using Resources,Building Resources,GNAT and Windows Resources\n-@anchor{gnat_ugn/platform_specific_information compiling-resources}@anchor{214}@anchor{gnat_ugn/platform_specific_information id32}@anchor{215}\n+@anchor{gnat_ugn/platform_specific_information compiling-resources}@anchor{218}@anchor{gnat_ugn/platform_specific_information id34}@anchor{219}\n @subsubsection Compiling Resources\n \n \n@@ -25646,7 +25702,7 @@ $ windres -i myres.res -o myres.o\n @end quotation\n \n @node Using Resources,,Compiling Resources,GNAT and Windows Resources\n-@anchor{gnat_ugn/platform_specific_information using-resources}@anchor{216}@anchor{gnat_ugn/platform_specific_information id33}@anchor{217}\n+@anchor{gnat_ugn/platform_specific_information using-resources}@anchor{21a}@anchor{gnat_ugn/platform_specific_information id35}@anchor{21b}\n @subsubsection Using Resources\n \n \n@@ -25666,7 +25722,7 @@ $ gnatmake myprog -largs myres.o\n @end quotation\n \n @node Using GNAT DLLs from Microsoft Visual Studio Applications,Debugging a DLL,GNAT and Windows Resources,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information using-gnat-dll-from-msvs}@anchor{218}@anchor{gnat_ugn/platform_specific_information using-gnat-dlls-from-microsoft-visual-studio-applications}@anchor{219}\n+@anchor{gnat_ugn/platform_specific_information using-gnat-dll-from-msvs}@anchor{21c}@anchor{gnat_ugn/platform_specific_information using-gnat-dlls-from-microsoft-visual-studio-applications}@anchor{21d}\n @subsubsection Using GNAT DLLs from Microsoft Visual Studio Applications\n \n \n@@ -25700,7 +25756,7 @@ $ gprbuild -p mylib.gpr\n @item \n Produce a .def file for the symbols you need to interface with, either by\n hand or automatically with possibly some manual adjustments\n-(see @ref{1fa,,Creating Definition File Automatically}):\n+(see @ref{1fe,,Creating Definition File Automatically}):\n @end enumerate\n \n @quotation\n@@ -25717,7 +25773,7 @@ $ dlltool libmylib.dll -z libmylib.def --export-all-symbols\n Make sure that MSVS command-line tools are accessible on the path.\n \n @item \n-Create the Microsoft-style import library (see @ref{1fd,,MSVS-Style Import Library}):\n+Create the Microsoft-style import library (see @ref{201,,MSVS-Style Import Library}):\n @end enumerate\n \n @quotation\n@@ -25759,7 +25815,7 @@ or copy the DLL into into the directory containing the .exe.\n @end enumerate\n \n @node Debugging a DLL,Setting Stack Size from gnatlink,Using GNAT DLLs from Microsoft Visual Studio Applications,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information id34}@anchor{21a}@anchor{gnat_ugn/platform_specific_information debugging-a-dll}@anchor{21b}\n+@anchor{gnat_ugn/platform_specific_information id36}@anchor{21e}@anchor{gnat_ugn/platform_specific_information debugging-a-dll}@anchor{21f}\n @subsubsection Debugging a DLL\n \n \n@@ -25797,7 +25853,7 @@ tools suite used to build the DLL.\n @end menu\n \n @node Program and DLL Both Built with GCC/GNAT,Program Built with Foreign Tools and DLL Built with GCC/GNAT,,Debugging a DLL\n-@anchor{gnat_ugn/platform_specific_information program-and-dll-both-built-with-gcc-gnat}@anchor{21c}@anchor{gnat_ugn/platform_specific_information id35}@anchor{21d}\n+@anchor{gnat_ugn/platform_specific_information id37}@anchor{220}@anchor{gnat_ugn/platform_specific_information program-and-dll-both-built-with-gcc-gnat}@anchor{221}\n @subsubsection Program and DLL Both Built with GCC/GNAT\n \n \n@@ -25807,7 +25863,7 @@ the process. Let's suppose here that the main procedure is named\n @code{ada_main} and that in the DLL there is an entry point named\n @code{ada_dll}.\n \n-The DLL (@ref{1f2,,Introduction to Dynamic Link Libraries (DLLs)}) and\n+The DLL (@ref{1f7,,Introduction to Dynamic Link Libraries (DLLs)}) and\n program must have been built with the debugging information (see GNAT -g\n switch). Here are the step-by-step instructions for debugging it:\n \n@@ -25847,7 +25903,7 @@ you can use the standard approach to debug the whole program\n (@ref{24,,Running and Debugging Ada Programs}).\n \n @node Program Built with Foreign Tools and DLL Built with GCC/GNAT,,Program and DLL Both Built with GCC/GNAT,Debugging a DLL\n-@anchor{gnat_ugn/platform_specific_information id36}@anchor{21e}@anchor{gnat_ugn/platform_specific_information program-built-with-foreign-tools-and-dll-built-with-gcc-gnat}@anchor{21f}\n+@anchor{gnat_ugn/platform_specific_information program-built-with-foreign-tools-and-dll-built-with-gcc-gnat}@anchor{222}@anchor{gnat_ugn/platform_specific_information id38}@anchor{223}\n @subsubsection Program Built with Foreign Tools and DLL Built with GCC/GNAT\n \n \n@@ -25864,7 +25920,7 @@ example some C code built with Microsoft Visual C) and that there is a\n DLL named @code{test.dll} containing an Ada entry point named\n @code{ada_dll}.\n \n-The DLL (see @ref{1f2,,Introduction to Dynamic Link Libraries (DLLs)}) must have\n+The DLL (see @ref{1f7,,Introduction to Dynamic Link Libraries (DLLs)}) must have\n been built with debugging information (see the GNAT @code{-g} option).\n \n @subsubheading Debugging the DLL Directly\n@@ -26003,7 +26059,7 @@ approach to debug a program as described in\n @ref{24,,Running and Debugging Ada Programs}.\n \n @node Setting Stack Size from gnatlink,Setting Heap Size from gnatlink,Debugging a DLL,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information id37}@anchor{220}@anchor{gnat_ugn/platform_specific_information setting-stack-size-from-gnatlink}@anchor{136}\n+@anchor{gnat_ugn/platform_specific_information setting-stack-size-from-gnatlink}@anchor{136}@anchor{gnat_ugn/platform_specific_information id39}@anchor{224}\n @subsubsection Setting Stack Size from @code{gnatlink}\n \n \n@@ -26046,7 +26102,7 @@ because the comma is a separator for this option.\n @end itemize\n \n @node Setting Heap Size from gnatlink,,Setting Stack Size from gnatlink,Mixed-Language Programming on Windows\n-@anchor{gnat_ugn/platform_specific_information setting-heap-size-from-gnatlink}@anchor{137}@anchor{gnat_ugn/platform_specific_information id38}@anchor{221}\n+@anchor{gnat_ugn/platform_specific_information setting-heap-size-from-gnatlink}@anchor{137}@anchor{gnat_ugn/platform_specific_information id40}@anchor{225}\n @subsubsection Setting Heap Size from @code{gnatlink}\n \n \n@@ -26079,7 +26135,7 @@ because the comma is a separator for this option.\n @end itemize\n \n @node Windows Specific Add-Ons,,Mixed-Language Programming on Windows,Microsoft Windows Topics\n-@anchor{gnat_ugn/platform_specific_information windows-specific-add-ons}@anchor{222}@anchor{gnat_ugn/platform_specific_information win32-specific-addons}@anchor{223}\n+@anchor{gnat_ugn/platform_specific_information windows-specific-add-ons}@anchor{226}@anchor{gnat_ugn/platform_specific_information win32-specific-addons}@anchor{227}\n @subsection Windows Specific Add-Ons\n \n \n@@ -26092,7 +26148,7 @@ This section describes the Windows specific add-ons.\n @end menu\n \n @node Win32Ada,wPOSIX,,Windows Specific Add-Ons\n-@anchor{gnat_ugn/platform_specific_information win32ada}@anchor{224}@anchor{gnat_ugn/platform_specific_information id39}@anchor{225}\n+@anchor{gnat_ugn/platform_specific_information win32ada}@anchor{228}@anchor{gnat_ugn/platform_specific_information id41}@anchor{229}\n @subsubsection Win32Ada\n \n \n@@ -26123,7 +26179,7 @@ gprbuild p.gpr\n @end quotation\n \n @node wPOSIX,,Win32Ada,Windows Specific Add-Ons\n-@anchor{gnat_ugn/platform_specific_information wposix}@anchor{226}@anchor{gnat_ugn/platform_specific_information id40}@anchor{227}\n+@anchor{gnat_ugn/platform_specific_information id42}@anchor{22a}@anchor{gnat_ugn/platform_specific_information wposix}@anchor{22b}\n @subsubsection wPOSIX\n \n \n@@ -26156,7 +26212,7 @@ gprbuild p.gpr\n @end quotation\n \n @node Mac OS Topics,,Microsoft Windows Topics,Platform-Specific Information\n-@anchor{gnat_ugn/platform_specific_information mac-os-topics}@anchor{2d}@anchor{gnat_ugn/platform_specific_information id41}@anchor{228}\n+@anchor{gnat_ugn/platform_specific_information mac-os-topics}@anchor{2d}@anchor{gnat_ugn/platform_specific_information id43}@anchor{22c}\n @section Mac OS Topics\n \n \n@@ -26171,7 +26227,7 @@ platform.\n @end menu\n \n @node Codesigning the Debugger,,,Mac OS Topics\n-@anchor{gnat_ugn/platform_specific_information codesigning-the-debugger}@anchor{229}\n+@anchor{gnat_ugn/platform_specific_information codesigning-the-debugger}@anchor{22d}\n @subsection Codesigning the Debugger\n \n \n@@ -26252,7 +26308,7 @@ the location where you installed GNAT.  Also, be sure that users are\n in the Unix group @code{_developer}.\n \n @node Example of Binder Output File,Elaboration Order Handling in GNAT,Platform-Specific Information,Top\n-@anchor{gnat_ugn/example_of_binder_output example-of-binder-output-file}@anchor{e}@anchor{gnat_ugn/example_of_binder_output doc}@anchor{22a}@anchor{gnat_ugn/example_of_binder_output id1}@anchor{22b}\n+@anchor{gnat_ugn/example_of_binder_output example-of-binder-output-file}@anchor{e}@anchor{gnat_ugn/example_of_binder_output doc}@anchor{22e}@anchor{gnat_ugn/example_of_binder_output id1}@anchor{22f}\n @chapter Example of Binder Output File\n \n \n@@ -27004,7 +27060,7 @@ elaboration code in your own application).\n @c -- Example: A |withing| unit has a |with| clause, it |withs| a |withed| unit\n \n @node Elaboration Order Handling in GNAT,Inline Assembler,Example of Binder Output File,Top\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-order-handling-in-gnat}@anchor{f}@anchor{gnat_ugn/elaboration_order_handling_in_gnat doc}@anchor{22c}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id1}@anchor{22d}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-order-handling-in-gnat}@anchor{f}@anchor{gnat_ugn/elaboration_order_handling_in_gnat doc}@anchor{230}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id1}@anchor{231}\n @chapter Elaboration Order Handling in GNAT\n \n \n@@ -27037,7 +27093,7 @@ GNAT, either automatically or with explicit programming features.\n @end menu\n \n @node Elaboration Code,Elaboration Order,,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-code}@anchor{22e}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id2}@anchor{22f}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-code}@anchor{232}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id2}@anchor{233}\n @section Elaboration Code\n \n \n@@ -27179,7 +27235,7 @@ elaborated.\n @end itemize\n \n @node Elaboration Order,Checking the Elaboration Order,Elaboration Code,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-order}@anchor{230}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id3}@anchor{231}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-order}@anchor{234}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id3}@anchor{235}\n @section Elaboration Order\n \n \n@@ -27329,7 +27385,7 @@ avoids ABE problems should be chosen, however a compiler may not always find\n such an order due to complications with respect to control and data flow.\n \n @node Checking the Elaboration Order,Controlling the Elaboration Order in Ada,Elaboration Order,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id4}@anchor{232}@anchor{gnat_ugn/elaboration_order_handling_in_gnat checking-the-elaboration-order}@anchor{233}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id4}@anchor{236}@anchor{gnat_ugn/elaboration_order_handling_in_gnat checking-the-elaboration-order}@anchor{237}\n @section Checking the Elaboration Order\n \n \n@@ -27391,7 +27447,7 @@ order.\n @end itemize\n \n @node Controlling the Elaboration Order in Ada,Controlling the Elaboration Order in GNAT,Checking the Elaboration Order,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat controlling-the-elaboration-order-in-ada}@anchor{234}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id5}@anchor{235}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat controlling-the-elaboration-order-in-ada}@anchor{238}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id5}@anchor{239}\n @section Controlling the Elaboration Order in Ada\n \n \n@@ -27719,7 +27775,7 @@ is that the program continues to stay in the last state (one or more correct\n orders exist) even if maintenance changes the bodies of targets.\n \n @node Controlling the Elaboration Order in GNAT,Common Elaboration-model Traits,Controlling the Elaboration Order in Ada,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id6}@anchor{236}@anchor{gnat_ugn/elaboration_order_handling_in_gnat controlling-the-elaboration-order-in-gnat}@anchor{237}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id6}@anchor{23a}@anchor{gnat_ugn/elaboration_order_handling_in_gnat controlling-the-elaboration-order-in-gnat}@anchor{23b}\n @section Controlling the Elaboration Order in GNAT\n \n \n@@ -27776,7 +27832,7 @@ effect.\n @end itemize\n \n @node Common Elaboration-model Traits,Dynamic Elaboration Model in GNAT,Controlling the Elaboration Order in GNAT,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat common-elaboration-model-traits}@anchor{238}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id7}@anchor{239}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat common-elaboration-model-traits}@anchor{23c}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id7}@anchor{23d}\n @section Common Elaboration-model Traits\n \n \n@@ -27845,7 +27901,7 @@ data and control flow. The warnings can be suppressed with compiler switch\n @code{-gnatws}.\n \n @node Dynamic Elaboration Model in GNAT,Static Elaboration Model in GNAT,Common Elaboration-model Traits,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat dynamic-elaboration-model-in-gnat}@anchor{23a}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id8}@anchor{23b}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat dynamic-elaboration-model-in-gnat}@anchor{23e}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id8}@anchor{23f}\n @section Dynamic Elaboration Model in GNAT\n \n \n@@ -27902,7 +27958,7 @@ is in effect.\n @end example\n \n @node Static Elaboration Model in GNAT,SPARK Elaboration Model in GNAT,Dynamic Elaboration Model in GNAT,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat static-elaboration-model-in-gnat}@anchor{23c}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id9}@anchor{23d}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat static-elaboration-model-in-gnat}@anchor{240}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id9}@anchor{241}\n @section Static Elaboration Model in GNAT\n \n \n@@ -28045,7 +28101,7 @@ elaborated prior to the body of @code{Static_Model}.\n @end itemize\n \n @node SPARK Elaboration Model in GNAT,Mixing Elaboration Models,Static Elaboration Model in GNAT,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id10}@anchor{23e}@anchor{gnat_ugn/elaboration_order_handling_in_gnat spark-elaboration-model-in-gnat}@anchor{23f}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id10}@anchor{242}@anchor{gnat_ugn/elaboration_order_handling_in_gnat spark-elaboration-model-in-gnat}@anchor{243}\n @section SPARK Elaboration Model in GNAT\n \n \n@@ -28068,7 +28124,7 @@ external, and compiler switch @code{-gnatd.v} is in effect.\n @end example\n \n @node Mixing Elaboration Models,Elaboration Circularities,SPARK Elaboration Model in GNAT,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat mixing-elaboration-models}@anchor{240}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id11}@anchor{241}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat mixing-elaboration-models}@anchor{244}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id11}@anchor{245}\n @section Mixing Elaboration Models\n \n \n@@ -28112,7 +28168,7 @@ warning:   \"y.ads\" which has static elaboration checks\n The warnings can be suppressed by binder switch @code{-ws}.\n \n @node Elaboration Circularities,Resolving Elaboration Circularities,Mixing Elaboration Models,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id12}@anchor{242}@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-circularities}@anchor{243}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id12}@anchor{246}@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-circularities}@anchor{247}\n @section Elaboration Circularities\n \n \n@@ -28171,7 +28227,7 @@ they @emph{with}, must be elaborated prior to @code{Client}. However, @code{Serv\n @code{Client}, and this leads to a circularity.\n \n @node Resolving Elaboration Circularities,Resolving Task Issues,Elaboration Circularities,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id13}@anchor{244}@anchor{gnat_ugn/elaboration_order_handling_in_gnat resolving-elaboration-circularities}@anchor{245}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id13}@anchor{248}@anchor{gnat_ugn/elaboration_order_handling_in_gnat resolving-elaboration-circularities}@anchor{249}\n @section Resolving Elaboration Circularities\n \n \n@@ -28316,7 +28372,7 @@ run-time checks.\n @end itemize\n \n @node Resolving Task Issues,Elaboration-related Compiler Switches,Resolving Elaboration Circularities,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat id14}@anchor{246}@anchor{gnat_ugn/elaboration_order_handling_in_gnat resolving-task-issues}@anchor{247}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat id14}@anchor{24a}@anchor{gnat_ugn/elaboration_order_handling_in_gnat resolving-task-issues}@anchor{24b}\n @section Resolving Task Issues\n \n \n@@ -28612,7 +28668,7 @@ static model will verify that no entry calls take place at elaboration time.\n @end itemize\n \n @node Elaboration-related Compiler Switches,Summary of Procedures for Elaboration Control,Resolving Task Issues,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-related-compiler-switches}@anchor{248}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id15}@anchor{249}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat elaboration-related-compiler-switches}@anchor{24c}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id15}@anchor{24d}\n @section Elaboration-related Compiler Switches\n \n \n@@ -28904,7 +28960,7 @@ In the example above, the elaboration of declaration @code{Ptr} is assigned\n @end table\n \n @node Summary of Procedures for Elaboration Control,Inspecting the Chosen Elaboration Order,Elaboration-related Compiler Switches,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat summary-of-procedures-for-elaboration-control}@anchor{24a}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id16}@anchor{24b}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat summary-of-procedures-for-elaboration-control}@anchor{24e}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id16}@anchor{24f}\n @section Summary of Procedures for Elaboration Control\n \n \n@@ -28949,7 +29005,7 @@ program using the dynamic model by using compiler switch @code{-gnatE}.\n @end itemize\n \n @node Inspecting the Chosen Elaboration Order,,Summary of Procedures for Elaboration Control,Elaboration Order Handling in GNAT\n-@anchor{gnat_ugn/elaboration_order_handling_in_gnat inspecting-the-chosen-elaboration-order}@anchor{24c}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id17}@anchor{24d}\n+@anchor{gnat_ugn/elaboration_order_handling_in_gnat inspecting-the-chosen-elaboration-order}@anchor{250}@anchor{gnat_ugn/elaboration_order_handling_in_gnat id17}@anchor{251}\n @section Inspecting the Chosen Elaboration Order\n \n \n@@ -29086,7 +29142,7 @@ gdbstr (body)\n @end example\n \n @node Inline Assembler,GNU Free Documentation License,Elaboration Order Handling in GNAT,Top\n-@anchor{gnat_ugn/inline_assembler inline-assembler}@anchor{10}@anchor{gnat_ugn/inline_assembler doc}@anchor{24e}@anchor{gnat_ugn/inline_assembler id1}@anchor{24f}\n+@anchor{gnat_ugn/inline_assembler inline-assembler}@anchor{10}@anchor{gnat_ugn/inline_assembler doc}@anchor{252}@anchor{gnat_ugn/inline_assembler id1}@anchor{253}\n @chapter Inline Assembler\n \n \n@@ -29145,7 +29201,7 @@ and with assembly language programming.\n @end menu\n \n @node Basic Assembler Syntax,A Simple Example of Inline Assembler,,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler id2}@anchor{250}@anchor{gnat_ugn/inline_assembler basic-assembler-syntax}@anchor{251}\n+@anchor{gnat_ugn/inline_assembler id2}@anchor{254}@anchor{gnat_ugn/inline_assembler basic-assembler-syntax}@anchor{255}\n @section Basic Assembler Syntax\n \n \n@@ -29261,7 +29317,7 @@ Intel: Destination first; for example @code{mov eax, 4}@w{ }\n \n \n @node A Simple Example of Inline Assembler,Output Variables in Inline Assembler,Basic Assembler Syntax,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler a-simple-example-of-inline-assembler}@anchor{252}@anchor{gnat_ugn/inline_assembler id3}@anchor{253}\n+@anchor{gnat_ugn/inline_assembler a-simple-example-of-inline-assembler}@anchor{256}@anchor{gnat_ugn/inline_assembler id3}@anchor{257}\n @section A Simple Example of Inline Assembler\n \n \n@@ -29410,7 +29466,7 @@ If there are no errors, @code{as} will generate an object file\n @code{nothing.out}.\n \n @node Output Variables in Inline Assembler,Input Variables in Inline Assembler,A Simple Example of Inline Assembler,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler id4}@anchor{254}@anchor{gnat_ugn/inline_assembler output-variables-in-inline-assembler}@anchor{255}\n+@anchor{gnat_ugn/inline_assembler id4}@anchor{258}@anchor{gnat_ugn/inline_assembler output-variables-in-inline-assembler}@anchor{259}\n @section Output Variables in Inline Assembler\n \n \n@@ -29777,7 +29833,7 @@ end Get_Flags_3;\n @end quotation\n \n @node Input Variables in Inline Assembler,Inlining Inline Assembler Code,Output Variables in Inline Assembler,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler id5}@anchor{256}@anchor{gnat_ugn/inline_assembler input-variables-in-inline-assembler}@anchor{257}\n+@anchor{gnat_ugn/inline_assembler id5}@anchor{25a}@anchor{gnat_ugn/inline_assembler input-variables-in-inline-assembler}@anchor{25b}\n @section Input Variables in Inline Assembler\n \n \n@@ -29866,7 +29922,7 @@ _increment__incr.1:\n @end quotation\n \n @node Inlining Inline Assembler Code,Other Asm Functionality,Input Variables in Inline Assembler,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler id6}@anchor{258}@anchor{gnat_ugn/inline_assembler inlining-inline-assembler-code}@anchor{259}\n+@anchor{gnat_ugn/inline_assembler id6}@anchor{25c}@anchor{gnat_ugn/inline_assembler inlining-inline-assembler-code}@anchor{25d}\n @section Inlining Inline Assembler Code\n \n \n@@ -29937,7 +29993,7 @@ movl %esi,%eax\n thus saving the overhead of stack frame setup and an out-of-line call.\n \n @node Other Asm Functionality,,Inlining Inline Assembler Code,Inline Assembler\n-@anchor{gnat_ugn/inline_assembler other-asm-functionality}@anchor{25a}@anchor{gnat_ugn/inline_assembler id7}@anchor{25b}\n+@anchor{gnat_ugn/inline_assembler other-asm-functionality}@anchor{25e}@anchor{gnat_ugn/inline_assembler id7}@anchor{25f}\n @section Other @code{Asm} Functionality\n \n \n@@ -29952,7 +30008,7 @@ and @code{Volatile}, which inhibits unwanted optimizations.\n @end menu\n \n @node The Clobber Parameter,The Volatile Parameter,,Other Asm Functionality\n-@anchor{gnat_ugn/inline_assembler the-clobber-parameter}@anchor{25c}@anchor{gnat_ugn/inline_assembler id8}@anchor{25d}\n+@anchor{gnat_ugn/inline_assembler the-clobber-parameter}@anchor{260}@anchor{gnat_ugn/inline_assembler id8}@anchor{261}\n @subsection The @code{Clobber} Parameter\n \n \n@@ -30016,7 +30072,7 @@ Use 'register' name @code{memory} if you changed a memory location\n @end itemize\n \n @node The Volatile Parameter,,The Clobber Parameter,Other Asm Functionality\n-@anchor{gnat_ugn/inline_assembler the-volatile-parameter}@anchor{25e}@anchor{gnat_ugn/inline_assembler id9}@anchor{25f}\n+@anchor{gnat_ugn/inline_assembler the-volatile-parameter}@anchor{262}@anchor{gnat_ugn/inline_assembler id9}@anchor{263}\n @subsection The @code{Volatile} Parameter\n \n \n@@ -30052,7 +30108,7 @@ to @code{True} only if the compiler's optimizations have created\n problems.\n \n @node GNU Free Documentation License,Index,Inline Assembler,Top\n-@anchor{share/gnu_free_documentation_license gnu-fdl}@anchor{1}@anchor{share/gnu_free_documentation_license doc}@anchor{260}@anchor{share/gnu_free_documentation_license gnu-free-documentation-license}@anchor{261}\n+@anchor{share/gnu_free_documentation_license gnu-fdl}@anchor{1}@anchor{share/gnu_free_documentation_license doc}@anchor{264}@anchor{share/gnu_free_documentation_license gnu-free-documentation-license}@anchor{265}\n @chapter GNU Free Documentation License\n \n "}, {"sha": "59c444b1f9e2e81f5d2d666c96c649b60f3acf85", "filename": "gcc/ada/libgnarl/g-thread.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fg-thread.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -33,6 +33,7 @@ with Ada.Task_Identification; use Ada.Task_Identification;\n with System.Task_Primitives.Operations;\n with System.Tasking;\n with System.Tasking.Stages;   use System.Tasking.Stages;\n+with System.Tasking.Utilities;\n with System.OS_Interface;     use System.OS_Interface;\n with System.Soft_Links;       use System.Soft_Links;\n with Ada.Unchecked_Conversion;\n@@ -172,6 +173,15 @@ package body GNAT.Threads is\n       Thr.all := Task_Primitives.Operations.Get_Thread_Id (To_Id (Id));\n    end Get_Thread;\n \n+   ----------------------\n+   -- Make_Independent --\n+   ----------------------\n+\n+   function Make_Independent return Boolean is\n+   begin\n+      return System.Tasking.Utilities.Make_Independent;\n+   end Make_Independent;\n+\n    ----------------\n    -- To_Task_Id --\n    ----------------"}, {"sha": "027b7c2f747c3dc099b019b86d4848198ab85081", "filename": "gcc/ada/libgnarl/g-thread.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fg-thread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fg-thread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fg-thread.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -146,4 +146,15 @@ package GNAT.Threads is\n    --  Given a low level Id, as returned by Create_Thread, return a Task_Id,\n    --  so that operations in Ada.Task_Identification can be used.\n \n+   function Make_Independent return Boolean;\n+   --  If a procedure loads a shared library containing tasks, and that\n+   --  procedure is considered to be a master by the compiler (because it\n+   --  contains tasks or class-wide objects that might contain tasks),\n+   --  then the tasks in the shared library need to call Make_Independent\n+   --  because otherwise they will depend on the procedure that loaded the\n+   --  shared library.\n+   --\n+   --  See System.Tasking.Utilities.Make_Independent in s-tasuti.ads for\n+   --  further documentation.\n+\n end GNAT.Threads;"}, {"sha": "4ec033046c5e6b5341ef22932f62d4bbe0e168fe", "filename": "gcc/ada/libgnarl/s-taprop__qnx.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-taprop__qnx.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-taprop__qnx.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__qnx.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -645,7 +645,7 @@ package body System.Task_Primitives.Operations is\n         (T.Common.LL.Thread, To_Target_Priority (Prio));\n       pragma Assert (Result = 0);\n \n-      if T.Common.LL.Thread = Pthread_Self\n+      if T.Common.LL.Thread = pthread_self\n         and then Old > Prio\n       then\n          --  When lowering the priority via a pthread_setschedprio, QNX ensures"}, {"sha": "d83ed3cda14ee2138cfa513a5b925e037b9a1cf4", "filename": "gcc/ada/libgnarl/s-tasini.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -325,8 +325,8 @@ package body System.Tasking.Initialization is\n       --  of the environment task.\n \n       Self_Id := Environment_Task;\n-      Self_Id.Master_of_Task := Environment_Task_Level;\n-      Self_Id.Master_Within := Self_Id.Master_of_Task + 1;\n+      Self_Id.Master_Of_Task := Environment_Task_Level;\n+      Self_Id.Master_Within := Self_Id.Master_Of_Task + 1;\n \n       for L in Self_Id.Entry_Calls'Range loop\n          Self_Id.Entry_Calls (L).Self := Self_Id;"}, {"sha": "fe725b8d731b96efd57246447813c9b3324f933b", "filename": "gcc/ada/libgnarl/s-taskin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -982,7 +982,7 @@ package System.Tasking is\n       --  updated it itself using information from a suspended Caller, or\n       --  after Caller has updated it and awakened Self.\n \n-      Master_of_Task : Master_Level;\n+      Master_Of_Task : Master_Level;\n       --  The task executing the master of this task, and the ID of this task's\n       --  master (unique only among masters currently active within Parent).\n       --"}, {"sha": "f180631d4f838acdc4e787cbb727161683b1173d", "filename": "gcc/ada/libgnarl/s-tasren.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -1138,7 +1138,7 @@ package body System.Tasking.Rendezvous is\n                      Parent.Awake_Count := Parent.Awake_Count + 1;\n \n                      if Parent.Common.State = Master_Completion_Sleep\n-                       and then Acceptor.Master_of_Task = Parent.Master_Within\n+                       and then Acceptor.Master_Of_Task = Parent.Master_Within\n                      then\n                         Parent.Common.Wait_Count :=\n                           Parent.Common.Wait_Count + 1;"}, {"sha": "f0f1df4d8e7decbca636ac7d1a2786cd0640ad10", "filename": "gcc/ada/libgnarl/s-tassta.adb", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -151,7 +151,7 @@ package body System.Tasking.Stages is\n       --  duplicate master ids. For example, suppose we have three nested\n       --  task bodies T1,T2,T3. And suppose T1 also calls P which calls Q (and\n       --  both P and Q are task masters). Q will have the same master id as\n-      --  Master_of_Task of T3. Previous versions of this would abort T3 when\n+      --  Master_Of_Task of T3. Previous versions of this would abort T3 when\n       --  Q calls Complete_Master, which was completely wrong.\n \n    begin\n@@ -160,7 +160,7 @@ package body System.Tasking.Stages is\n          P := C.Common.Parent;\n \n          if P = Self_ID then\n-            if C.Master_of_Task = Self_ID.Master_Within then\n+            if C.Master_Of_Task = Self_ID.Master_Within then\n                pragma Debug\n                  (Debug.Trace (Self_ID, \"Aborting\", 'X', C));\n                Utilities.Abort_One_Task (Self_ID, C);\n@@ -304,7 +304,7 @@ package body System.Tasking.Stages is\n                P.Alive_Count := P.Alive_Count + 1;\n \n                if P.Common.State = Master_Completion_Sleep and then\n-                 C.Master_of_Task = P.Master_Within\n+                 C.Master_Of_Task = P.Master_Within\n                then\n                   pragma Assert (Self_ID /= P);\n                   P.Common.Wait_Count := P.Common.Wait_Count + 1;\n@@ -498,7 +498,7 @@ package body System.Tasking.Stages is\n       --  has already awaited its dependent tasks. This raises Program_Error,\n       --  by 4.8(10.3/2). See AI-280. Ignore this check for foreign threads.\n \n-      if Self_ID.Master_of_Task /= Foreign_Task_Level\n+      if Self_ID.Master_Of_Task /= Foreign_Task_Level\n         and then Master > Self_ID.Master_Within\n       then\n          raise Program_Error with\n@@ -559,10 +559,10 @@ package body System.Tasking.Stages is\n \n       P := Self_ID;\n \n-      if P.Master_of_Task <= Independent_Task_Level then\n+      if P.Master_Of_Task <= Independent_Task_Level then\n          P := Environment_Task;\n       else\n-         while P /= null and then P.Master_of_Task >= Master loop\n+         while P /= null and then P.Master_Of_Task >= Master loop\n             P := P.Common.Parent;\n          end loop;\n       end if;\n@@ -621,13 +621,13 @@ package body System.Tasking.Stages is\n          --  a regular library level task, otherwise the run-time will get\n          --  confused when waiting for these tasks to terminate.\n \n-         T.Master_of_Task := Library_Task_Level;\n+         T.Master_Of_Task := Library_Task_Level;\n \n       else\n-         T.Master_of_Task := Master;\n+         T.Master_Of_Task := Master;\n       end if;\n \n-      T.Master_Within := T.Master_of_Task + 1;\n+      T.Master_Within := T.Master_Of_Task + 1;\n \n       for L in T.Entry_Calls'Range loop\n          T.Entry_Calls (L).Self := T;\n@@ -710,7 +710,7 @@ package body System.Tasking.Stages is\n \n       pragma Debug\n         (Debug.Trace\n-           (Self_ID, \"Created task in \" & T.Master_of_Task'Img, 'C', T));\n+           (Self_ID, \"Created task in \" & T.Master_Of_Task'Img, 'C', T));\n    end Create_Task;\n \n    --------------------\n@@ -988,11 +988,11 @@ package body System.Tasking.Stages is\n \n       Initialization.Defer_Abort_Nestable (Self_ID);\n \n-      --  Loop through the From chain, changing their Master_of_Task fields,\n+      --  Loop through the From chain, changing their Master_Of_Task fields,\n       --  and to find the end of the chain.\n \n       loop\n-         C.Master_of_Task := New_Master;\n+         C.Master_Of_Task := New_Master;\n          exit when C.Common.Activation_Link = null;\n          C := C.Common.Activation_Link;\n       end loop;\n@@ -1094,7 +1094,7 @@ package body System.Tasking.Stages is\n       pragma Assert (Self_ID.Deferral_Level = 1);\n \n       Debug.Master_Hook\n-        (Self_ID, Self_ID.Common.Parent, Self_ID.Master_of_Task);\n+        (Self_ID, Self_ID.Common.Parent, Self_ID.Master_Of_Task);\n \n       if Use_Alternate_Stack then\n          Self_ID.Common.Task_Alternate_Stack := Task_Alternate_Stack'Address;\n@@ -1307,7 +1307,7 @@ package body System.Tasking.Stages is\n       --  environment task), because they are implementation artifacts that\n       --  should be invisible to Ada programs.\n \n-      elsif Self_ID.Master_of_Task /= Independent_Task_Level then\n+      elsif Self_ID.Master_Of_Task /= Independent_Task_Level then\n \n          --  Look for a fall-back handler following the master relationship\n          --  for the task. As specified in ARM C.7.3 par. 9/2, \"the fall-back\n@@ -1377,7 +1377,7 @@ package body System.Tasking.Stages is\n \n    procedure Terminate_Task (Self_ID : Task_Id) is\n       Environment_Task : constant Task_Id := STPO.Environment_Task;\n-      Master_of_Task   : Integer;\n+      Master_Of_Task   : Integer;\n       Deallocate       : Boolean;\n \n    begin\n@@ -1397,12 +1397,12 @@ package body System.Tasking.Stages is\n          Lock_RTS;\n       end if;\n \n-      Master_of_Task := Self_ID.Master_of_Task;\n+      Master_Of_Task := Self_ID.Master_Of_Task;\n \n       --  Check if the current task is an independent task If so, decrement\n       --  the Independent_Task_Count value.\n \n-      if Master_of_Task = Independent_Task_Level then\n+      if Master_Of_Task = Independent_Task_Level then\n          if Single_Lock then\n             Utilities.Independent_Task_Count :=\n               Utilities.Independent_Task_Count - 1;\n@@ -1439,7 +1439,7 @@ package body System.Tasking.Stages is\n          Free_Task (Self_ID);\n       end if;\n \n-      if Master_of_Task > 0 then\n+      if Master_Of_Task > 0 then\n          STPO.Exit_Task;\n       end if;\n    end Terminate_Task;\n@@ -1606,11 +1606,11 @@ package body System.Tasking.Stages is\n \n          C := All_Tasks_List;\n          while C /= null loop\n-            if C.Common.Activator = Self_ID and then C.Master_of_Task = CM then\n+            if C.Common.Activator = Self_ID and then C.Master_Of_Task = CM then\n                return False;\n             end if;\n \n-            if C.Common.Parent = Self_ID and then C.Master_of_Task = CM then\n+            if C.Common.Parent = Self_ID and then C.Master_Of_Task = CM then\n                Write_Lock (C);\n \n                if C.Common.State = Unactivated then\n@@ -1662,9 +1662,9 @@ package body System.Tasking.Stages is\n \n          --  Terminate unactivated (never-to-be activated) tasks\n \n-         if C.Common.Activator = Self_ID and then C.Master_of_Task = CM then\n+         if C.Common.Activator = Self_ID and then C.Master_Of_Task = CM then\n \n-            --  Usually, C.Common.Activator = Self_ID implies C.Master_of_Task\n+            --  Usually, C.Common.Activator = Self_ID implies C.Master_Of_Task\n             --  = CM. The only case where C is pending activation by this\n             --  task, but the master of C is not CM is in Ada 2005, when C is\n             --  part of a return object of a build-in-place function.\n@@ -1681,7 +1681,7 @@ package body System.Tasking.Stages is\n \n          --  Count it if directly dependent on this master\n \n-         if C.Common.Parent = Self_ID and then C.Master_of_Task = CM then\n+         if C.Common.Parent = Self_ID and then C.Master_Of_Task = CM then\n             Write_Lock (C);\n \n             if C.Awake_Count /= 0 then\n@@ -1781,7 +1781,7 @@ package body System.Tasking.Stages is\n \n          C := All_Tasks_List;\n          while C /= null loop\n-            if C.Common.Parent = Self_ID and then C.Master_of_Task = CM then\n+            if C.Common.Parent = Self_ID and then C.Master_Of_Task = CM then\n                Write_Lock (C);\n \n                pragma Assert (C.Awake_Count = 0);\n@@ -1840,7 +1840,7 @@ package body System.Tasking.Stages is\n          --  while the task calls Free_Task itself, in Terminate_Task.\n \n          if C.Common.Parent = Self_ID\n-           and then C.Master_of_Task >= CM\n+           and then C.Master_Of_Task >= CM\n            and then not C.Free_On_Termination\n          then\n             if P /= null then\n@@ -1912,7 +1912,7 @@ package body System.Tasking.Stages is\n \n          if (T.Common.Parent /= null\n               and then T.Common.Parent.Common.Parent /= null)\n-           or else T.Master_of_Task > Library_Task_Level\n+           or else T.Master_Of_Task > Library_Task_Level\n          then\n             Initialization.Task_Lock (Self_ID);\n \n@@ -1977,7 +1977,7 @@ package body System.Tasking.Stages is\n       pragma Assert (Self_ID = Self);\n       pragma Assert\n         (Self_ID.Master_Within in\n-           Self_ID.Master_of_Task + 1 ..  Self_ID.Master_of_Task + 3);\n+           Self_ID.Master_Of_Task .. Self_ID.Master_Of_Task + 3);\n       pragma Assert (Self_ID.Common.Wait_Count = 0);\n       pragma Assert (Self_ID.Open_Accepts = null);\n       pragma Assert (Self_ID.ATC_Nesting_Level = 1);\n@@ -2007,10 +2007,10 @@ package body System.Tasking.Stages is\n          Unlock_RTS;\n       end if;\n \n-      --  If Self_ID.Master_Within = Self_ID.Master_of_Task + 2 we may have\n+      --  If Self_ID.Master_Within = Self_ID.Master_Of_Task + 2 we may have\n       --  dependent tasks for which we need to wait. Otherwise we just exit.\n \n-      if Self_ID.Master_Within = Self_ID.Master_of_Task + 2 then\n+      if Self_ID.Master_Within = Self_ID.Master_Of_Task + 2 then\n          Vulnerable_Complete_Master (Self_ID);\n       end if;\n    end Vulnerable_Complete_Task;"}, {"sha": "10803823c851e1f5874c6d17960935efebc0fa98", "filename": "gcc/ada/libgnarl/s-tassta.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tassta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tassta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -285,7 +285,7 @@ package System.Tasking.Stages is\n      (From, To   : Activation_Chain_Access;\n       New_Master : Master_ID);\n    --  Compiler interface only. Do not call from within the RTS.\n-   --  Move all tasks on From list to To list, and change their Master_of_Task\n+   --  Move all tasks on From list to To list, and change their Master_Of_Task\n    --  to be New_Master. This is used to implement build-in-place function\n    --  returns. Tasks that are part of the return object are initially placed\n    --  on an activation chain local to the return statement, and their master"}, {"sha": "d95bfa861e611db03792a4866e4bc0b63f555c33", "filename": "gcc/ada/libgnarl/s-tasuti.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -258,7 +258,7 @@ package body System.Tasking.Utilities is\n \n       pragma Assert (Parent = Environment_Task);\n \n-      Self_Id.Master_of_Task := Independent_Task_Level;\n+      Self_Id.Master_Of_Task := Independent_Task_Level;\n \n       --  Update Independent_Task_Count that is needed for the GLADE\n       --  termination rule. See also pending update in\n@@ -396,7 +396,7 @@ package body System.Tasking.Utilities is\n          end loop;\n \n          if P.Common.State = Master_Phase_2_Sleep\n-           and then C.Master_of_Task = P.Master_Within\n+           and then C.Master_Of_Task = P.Master_Within\n          then\n             pragma Assert (P.Common.Wait_Count > 0);\n             P.Common.Wait_Count := P.Common.Wait_Count - 1;\n@@ -462,7 +462,7 @@ package body System.Tasking.Utilities is\n       --  P has non-passive dependents\n \n       if P.Common.State = Master_Completion_Sleep\n-        and then C.Master_of_Task = P.Master_Within\n+        and then C.Master_Of_Task = P.Master_Within\n       then\n          pragma Debug\n            (Debug.Trace"}, {"sha": "81351d37d670da0f3a7290309878cd226b270b18", "filename": "gcc/ada/libgnarl/s-tasuti.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tasuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasuti.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -54,9 +54,9 @@ package System.Tasking.Utilities is\n    --\n    --  This is a dangerous operation, and should never be used on nested tasks\n    --  or tasks that depend on any objects that might be finalized earlier than\n-   --  the termination of the environment task. It is for internal use by the\n-   --  GNARL, to prevent such internal server tasks from preventing a partition\n-   --  from terminating.\n+   --  the termination of the environment task. It is primarily for internal\n+   --  use by the GNARL, to prevent such internal server tasks from preventing\n+   --  a partition from terminating.\n    --\n    --  Also note that the run time assumes that the parent of an independent\n    --  task is the environment task. If this is not the case, Make_Independent"}, {"sha": "a1c68b337197778b6662cce8c103a85ea252bf67", "filename": "gcc/ada/libgnarl/s-tporft.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -70,8 +70,8 @@ begin\n    Unlock_RTS;\n    pragma Assert (Succeeded);\n \n-   Self_Id.Master_of_Task := 0;\n-   Self_Id.Master_Within := Self_Id.Master_of_Task + 1;\n+   Self_Id.Master_Of_Task := 0;\n+   Self_Id.Master_Within := Self_Id.Master_Of_Task + 1;\n \n    for L in Self_Id.Entry_Calls'Range loop\n       Self_Id.Entry_Calls (L).Self := Self_Id;"}, {"sha": "cc62ca8a540bd8d462a1548be3ee420d8effc5b7", "filename": "gcc/ada/libgnat/g-altive.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnat%2Fg-altive.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnat%2Fg-altive.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-altive.ads?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -668,18 +668,18 @@ end GNAT.Altivec;\n --  type of A.  The quad-word operations are only implemented by one\n --  Altivec primitive operation.  That means that, if QW_Operation is a\n --  quad-word operation, we should have:\n---  QW_Operation (To_Type_of_A (B)) = QW_Operation (A)\n+--  QW_Operation (To_Type_Of_A (B)) = QW_Operation (A)\n \n --  That is true iff:\n---  To_Quad_Word (To_Type_of_A (B)) = To_Quad_Word (A)\n+--  To_Quad_Word (To_Type_Of_A (B)) = To_Quad_Word (A)\n \n --  As To_Quad_Word is a bijection. we have:\n---  To_Type_of_A (B) = A\n+--  To_Type_Of_A (B) = A\n \n --  resp. any combination of A, B, C:\n---  To_Type_of_A (C) = A\n---  To_Type_of_B (A) = B\n---  To_Type_of_C (B) = C\n+--  To_Type_Of_A (C) = A\n+--  To_Type_Of_B (A) = B\n+--  To_Type_Of_C (B) = C\n --  ...\n \n --  Making sure that the properties described above are verified by the"}, {"sha": "f1faab268d879d225eae9befa5df00e7c99027f9", "filename": "gcc/ada/libgnat/s-spsufi.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnat%2Fs-spsufi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Flibgnat%2Fs-spsufi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-spsufi.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -71,9 +71,9 @@ package body System.Storage_Pools.Subpools.Finalization is\n       --  requires that \"The subpool no longer belongs to any pool\" BEFORE\n       --  calling Deallocate_Subpool. The actual dispatching call required is:\n       --\n-      --     Deallocate_Subpool(Pool_of_Subpool(Subpool).all, Subpool);\n+      --     Deallocate_Subpool(Pool_Of_Subpool(Subpool).all, Subpool);\n       --\n-      --  but that can't be taken literally, because Pool_of_Subpool will\n+      --  but that can't be taken literally, because Pool_Of_Subpool will\n       --  return null.\n \n       declare"}, {"sha": "23f9ca7c223b2be2b9ff9a17584613c31b4d0943", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -3466,9 +3466,9 @@ package body Sem_Ch12 is\n    ------------------------------------------\n \n    procedure Analyze_Generic_Package_Declaration (N : Node_Id) is\n-      Loc         : constant Source_Ptr := Sloc (N);\n-      Decls       : constant List_Id :=\n-                      Visible_Declarations (Specification (N));\n+      Decls : constant List_Id    := Visible_Declarations (Specification (N));\n+      Loc   : constant Source_Ptr := Sloc (N);\n+\n       Decl        : Node_Id;\n       Id          : Entity_Id;\n       New_N       : Node_Id;\n@@ -3492,9 +3492,20 @@ package body Sem_Ch12 is\n           Name               =>\n             Make_Identifier (Loc, Chars (Defining_Entity (N))));\n \n+      --  The declaration is inserted before other declarations, but before\n+      --  pragmas that may be library-unit pragmas and must appear before other\n+      --  declarations. The pragma Compile_Time_Error is not in this class, and\n+      --  may contain an expression that includes such a qualified name, so the\n+      --  renaming declaration must appear before it.\n+\n+      --  Are there other pragmas that require this special handling ???\n+\n       if Present (Decls) then\n          Decl := First (Decls);\n-         while Present (Decl) and then Nkind (Decl) = N_Pragma loop\n+         while Present (Decl)\n+           and then Nkind (Decl) = N_Pragma\n+           and then Get_Pragma_Id (Decl) /= Pragma_Compile_Time_Error\n+         loop\n             Next (Decl);\n          end loop;\n "}, {"sha": "9dc3902803307de020d8f56b3cae1dadad690a21", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -2818,19 +2818,23 @@ package body Sem_Ch3 is\n       if Present (L) then\n          Context := Parent (L);\n \n-         --  Analyze the contracts of packages and their bodies\n+         --  Certain contract annocations have forward visibility semantics and\n+         --  must be analyzed after all declarative items have been processed.\n+         --  This timing ensures that entities referenced by such contracts are\n+         --  visible.\n \n-         if Nkind (Context) = N_Package_Specification\n-           and then L = Visible_Declarations (Context)\n-         then\n-            Analyze_Package_Contract (Defining_Entity (Context));\n+         --  Analyze the contract of an immediately enclosing package spec or\n+         --  body first because other contracts may depend on its information.\n \n-         elsif Nkind (Context) = N_Package_Body then\n+         if Nkind (Context) = N_Package_Body then\n             Analyze_Package_Body_Contract (Defining_Entity (Context));\n+\n+         elsif Nkind (Context) = N_Package_Specification then\n+            Analyze_Package_Contract (Defining_Entity (Context));\n          end if;\n \n-         --  Analyze the contracts of various constructs now due to the delayed\n-         --  visibility needs of their aspects and pragmas.\n+         --  Analyze the contracts of various constructs in the declarative\n+         --  list.\n \n          Analyze_Contracts (L);\n \n@@ -2848,13 +2852,13 @@ package body Sem_Ch3 is\n             Remove_Visible_Refinements (Corresponding_Spec (Context));\n             Remove_Partial_Visible_Refinements (Corresponding_Spec (Context));\n \n-         elsif Nkind (Context) = N_Package_Declaration then\n+         elsif Nkind (Context) = N_Package_Specification then\n \n             --  Partial state refinements are visible up to the end of the\n             --  package spec declarations. Hide the partial state refinements\n             --  from visibility to restore the original state conditions.\n \n-            Remove_Partial_Visible_Refinements (Corresponding_Spec (Context));\n+            Remove_Partial_Visible_Refinements (Defining_Entity (Context));\n          end if;\n \n          --  Verify that all abstract states found in any package declared in"}, {"sha": "a6d70e5b59741ebfdbec5978407e11ad372333ee", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -3460,7 +3460,7 @@ package body Sem_Ch6 is\n    --  Start of processing for Analyze_Subprogram_Body_Helper\n \n    begin\n-      --  A [generic] subprogram body \"freezes\" the contract of the nearest\n+      --  A [generic] subprogram body freezes the contract of the nearest\n       --  enclosing package body and all other contracts encountered in the\n       --  same declarative part up to and excluding the subprogram body:\n \n@@ -3473,17 +3473,17 @@ package body Sem_Ch6 is\n       --         with Refined_Depends => (Input => Constit) ...\n \n       --  This ensures that any annotations referenced by the contract of the\n-      --  [generic] subprogram body are available. This form of \"freezing\" is\n+      --  [generic] subprogram body are available. This form of freezing is\n       --  decoupled from the usual Freeze_xxx mechanism because it must also\n       --  work in the context of generics where normal freezing is disabled.\n \n-      --  Only bodies coming from source should cause this type of \"freezing\".\n+      --  Only bodies coming from source should cause this type of freezing.\n       --  Expression functions that act as bodies and complete an initial\n       --  declaration must be included in this category, hence the use of\n       --  Original_Node.\n \n       if Comes_From_Source (Original_Node (N)) then\n-         Analyze_Previous_Contracts (N);\n+         Freeze_Previous_Contracts (N);\n       end if;\n \n       --  Generic subprograms are handled separately. They always have a\n@@ -4358,7 +4358,7 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n-      --  A subprogram body \"freezes\" its own contract. Analyze the contract\n+      --  A subprogram body freezes its own contract. Analyze the contract\n       --  after the declarations of the body have been processed as pragmas\n       --  are now chained on the contract of the subprogram body.\n "}, {"sha": "f50b8669529fddb9fdb70e6aff8e0153a4ed590a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -707,9 +707,9 @@ package body Sem_Ch7 is\n          end if;\n       end if;\n \n-      --  A [generic] package body \"freezes\" the contract of the nearest\n-      --  enclosing package body and all other contracts encountered in the\n-      --  same declarative part up to and excluding the package body:\n+      --  A [generic] package body freezes the contract of the nearest\n+      --  enclosing package body and all other contracts encountered in\n+      --  the same declarative part up to and excluding the package body:\n \n       --    package body Nearest_Enclosing_Package\n       --      with Refined_State => (State => Constit)\n@@ -726,21 +726,21 @@ package body Sem_Ch7 is\n \n       --  This ensures that any annotations referenced by the contract of a\n       --  [generic] subprogram body declared within the current package body\n-      --  are available. This form of \"freezing\" is decoupled from the usual\n+      --  are available. This form of freezing is decoupled from the usual\n       --  Freeze_xxx mechanism because it must also work in the context of\n       --  generics where normal freezing is disabled.\n \n-      --  Only bodies coming from source should cause this type of \"freezing\".\n+      --  Only bodies coming from source should cause this type of freezing.\n       --  Instantiated generic bodies are excluded because their processing is\n       --  performed in a separate compilation pass which lacks enough semantic\n       --  information with respect to contract analysis. It is safe to suppress\n-      --  the \"freezing\" of contracts in this case because this action already\n+      --  the freezing of contracts in this case because this action already\n       --  took place at the end of the enclosing declarative part.\n \n       if Comes_From_Source (N)\n         and then not Is_Generic_Instance (Spec_Id)\n       then\n-         Analyze_Previous_Contracts (N);\n+         Freeze_Previous_Contracts (N);\n       end if;\n \n       --  A package body is Ghost when the corresponding spec is Ghost. Set\n@@ -876,10 +876,6 @@ package body Sem_Ch7 is\n          Declare_Inherited_Private_Subprograms (Spec_Id);\n       end if;\n \n-      --  A package body \"freezes\" the contract of its initial declaration.\n-      --  This analysis depends on attribute Corresponding_Spec being set. Only\n-      --  bodies coming from source shuld cause this type of \"freezing\".\n-\n       if Present (Declarations (N)) then\n          Analyze_Declarations (Declarations (N));\n          Inspect_Deferred_Constant_Completion (Declarations (N));"}, {"sha": "766742297fac5e82d8ea20e4a6d4c7471fbc62d6", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -1210,13 +1210,13 @@ package body Sem_Ch9 is\n       Entry_Name : Entity_Id;\n \n    begin\n-      --  An entry body \"freezes\" the contract of the nearest enclosing package\n+      --  An entry body freezes the contract of the nearest enclosing package\n       --  body and all other contracts encountered in the same declarative part\n       --  up to and excluding the entry body. This ensures that any annotations\n       --  referenced by the contract of an entry or subprogram body declared\n       --  within the current protected body are available.\n \n-      Analyze_Previous_Contracts (N);\n+      Freeze_Previous_Contracts (N);\n \n       Tasking_Used := True;\n \n@@ -1794,14 +1794,14 @@ package body Sem_Ch9 is\n    --  Start of processing for Analyze_Protected_Body\n \n    begin\n-      --  A protected body \"freezes\" the contract of the nearest enclosing\n+      --  A protected body freezes the contract of the nearest enclosing\n       --  package body and all other contracts encountered in the same\n-      --  declarative part up to and excluding the protected body. This ensures\n-      --  that any annotations referenced by the contract of an entry or\n-      --  subprogram body declared within the current protected body are\n-      --  available.\n+      --  declarative part up to and excluding the protected body. This\n+      --  ensures that any annotations referenced by the contract of an\n+      --  entry or subprogram body declared within the current protected\n+      --  body are available.\n \n-      Analyze_Previous_Contracts (N);\n+      Freeze_Previous_Contracts (N);\n \n       Tasking_Used := True;\n       Set_Ekind (Body_Id, E_Protected_Body);\n@@ -2900,13 +2900,13 @@ package body Sem_Ch9 is\n       --  a single task, since Spec_Id is set to the task type).\n \n    begin\n-      --  A task body \"freezes\" the contract of the nearest enclosing package\n+      --  A task body freezes the contract of the nearest enclosing package\n       --  body and all other contracts encountered in the same declarative part\n       --  up to and excluding the task body. This ensures that annotations\n       --  referenced by the contract of an entry or subprogram body declared\n       --  within the current protected body are available.\n \n-      Analyze_Previous_Contracts (N);\n+      Freeze_Previous_Contracts (N);\n \n       Tasking_Used := True;\n       Set_Scope (Body_Id, Current_Scope);"}, {"sha": "b071aa8c8927f99c9ffb28f0c1888b40e640a61c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -217,7 +217,7 @@ package body Sem_Prag is\n       Freeze_Id   : Entity_Id);\n    --  Subsidiary to the analysis of pragmas Contract_Cases, Part_Of, Post, and\n    --  Pre. Emit a freezing-related error message where Freeze_Id is the entity\n-   --  of a body which caused contract \"freezing\" and Contract_Id denotes the\n+   --  of a body which caused contract freezing and Contract_Id denotes the\n    --  entity of the affected contstruct.\n \n    procedure Duplication_Error (Prag : Node_Id; Prev : Node_Id);\n@@ -432,7 +432,7 @@ package body Sem_Prag is\n \n                --  Emit a clarification message when the case guard contains\n                --  at least one undefined reference, possibly due to contract\n-               --  \"freezing\".\n+               --  freezing.\n \n                if Errors /= Serious_Errors_Detected\n                  and then Present (Freeze_Id)\n@@ -447,7 +447,7 @@ package body Sem_Prag is\n \n             --  Emit a clarification message when the consequence contains\n             --  at least one undefined reference, possibly due to contract\n-            --  \"freezing\".\n+            --  freezing.\n \n             if Errors /= Serious_Errors_Detected\n               and then Present (Freeze_Id)\n@@ -3510,7 +3510,7 @@ package body Sem_Prag is\n       end if;\n \n       --  Emit a clarification message when the encapsulator is undefined,\n-      --  possibly due to contract \"freezing\".\n+      --  possibly due to contract freezing.\n \n       if Errors /= Serious_Errors_Detected\n         and then Present (Freeze_Id)\n@@ -24613,7 +24613,7 @@ package body Sem_Prag is\n       Preanalyze_Assert_Expression (Expr, Standard_Boolean);\n \n       --  Emit a clarification message when the expression contains at least\n-      --  one undefined reference, possibly due to contract \"freezing\".\n+      --  one undefined reference, possibly due to contract freezing.\n \n       if Errors /= Serious_Errors_Detected\n         and then Present (Freeze_Id)\n@@ -27363,7 +27363,7 @@ package body Sem_Prag is\n                   Constit_Id := Entity_Of (Constit);\n \n                   --  When a constituent is declared after a subprogram body\n-                  --  that caused \"freezing\" of the related contract where\n+                  --  that caused freezing of the related contract where\n                   --  pragma Refined_State resides, the constituent appears\n                   --  undefined and carries Any_Id as its entity.\n "}, {"sha": "93b71018d89f8b887498c2251a1dc83f26abd1e6", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -604,10 +604,6 @@ package body Set_Targ is\n       procedure Check_Spaces is\n       begin\n          if N > Buflen or else Buffer (N) /= ' ' then\n-            pragma Annotate\n-              (CodePeer, False_Positive, \"condition predetermined\",\n-               \"N may be less than Buflen when calling Check_Spaces\");\n-\n             FailN (\"missing space for\");\n          end if;\n "}, {"sha": "e5eb0fefc2656cc56efde534918ba6184b08bbfc", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e5747ef72a7e1180727e6bf03fff9ad2dd097e/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=65e5747ef72a7e1180727e6bf03fff9ad2dd097e", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2000-2016, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2000-2017, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -500,6 +500,18 @@ struct layout\n         || ((*((ptr) - 1) & 0xff) == 0xff) \\\n         || (((*(ptr) & 0xd0ff) == 0xd0ff))))\n \n+/*----------------------------- qnx ----------------------------------*/\n+\n+#elif defined (__QNX__)\n+\n+#define USE_GCC_UNWINDER\n+\n+#if defined (__aarch64__)\n+#define PC_ADJUST -4\n+#else\n+#error Unhandled QNX architecture.\n+#endif\n+\n /*----------------------------- ia64 ---------------------------------*/\n \n #elif defined (__ia64__) && (defined (__linux__) || defined (__hpux__))"}]}