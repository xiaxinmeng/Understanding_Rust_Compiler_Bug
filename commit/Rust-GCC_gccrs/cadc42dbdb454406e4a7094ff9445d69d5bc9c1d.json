{"sha": "cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkYzQyZGJkYjQ1NDQwNmU0YTcwOTRmZjk0NDVkNjlkNWJjOWMxZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-10-11T18:28:25Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-10-11T18:28:25Z"}, "message": "s390.c (s390_trampoline_template): Generate shorter trampoline code.\n\n\t* config/s390/s390.c (s390_trampoline_template): Generate shorter\n\ttrampoline code.\n\t(s390_trampoline_instantiate): Adapt.\n\t* config/s390/s390.h (TRAMPOLINE_SIZE): Adapt to new code.\n\nFrom-SVN: r88895", "tree": {"sha": "5941775231a7f6e22d5e89a287520aac16f3cb76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5941775231a7f6e22d5e89a287520aac16f3cb76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/comments", "author": null, "committer": null, "parents": [{"sha": "169bb110d313303d04b411f5251317a6745c8b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/169bb110d313303d04b411f5251317a6745c8b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/169bb110d313303d04b411f5251317a6745c8b73"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "cd177e63d1067a1eaf5d6d9b71e5ac88b0def0d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "patch": "@@ -1,3 +1,10 @@\n+2004-10-11  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_trampoline_template): Generate shorter\n+\ttrampoline code.\n+\t(s390_trampoline_instantiate): Adapt.\n+\t* config/s390/s390.h (TRAMPOLINE_SIZE): Adapt to new code.\n+\n 2004-10-11  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/17657"}, {"sha": "79407a4137bb8f26a15b4dd1a1f41ca63a2e6da1", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "patch": "@@ -7825,23 +7825,23 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n void\n s390_trampoline_template (FILE *file)\n {\n+  rtx op[2];\n+  op[0] = gen_rtx_REG (Pmode, 0);\n+  op[1] = gen_rtx_REG (Pmode, 1);\n+\n   if (TARGET_64BIT)\n     {\n-      fprintf (file, \"larl\\t%s,0f\\n\", reg_names[1]);\n-      fprintf (file, \"lg\\t%s,0(%s)\\n\", reg_names[0], reg_names[1]);\n-      fprintf (file, \"lg\\t%s,8(%s)\\n\", reg_names[1], reg_names[1]);\n-      fprintf (file, \"br\\t%s\\n\", reg_names[1]);\n-      fprintf (file, \"0:\\t.quad\\t0\\n\");\n-      fprintf (file, \".quad\\t0\\n\");\n+      output_asm_insn (\"basr\\t%1,0\", op);\n+      output_asm_insn (\"lmg\\t%0,%1,14(%1)\", op);\n+      output_asm_insn (\"br\\t%1\", op);\n+      ASM_OUTPUT_SKIP (file, (HOST_WIDE_INT)(TRAMPOLINE_SIZE - 10));\n     }\n   else\n     {\n-      fprintf (file, \"basr\\t%s,0\\n\", reg_names[1]);\n-      fprintf (file, \"l\\t%s,10(%s)\\n\", reg_names[0], reg_names[1]);\n-      fprintf (file, \"l\\t%s,14(%s)\\n\", reg_names[1], reg_names[1]);\n-      fprintf (file, \"br\\t%s\\n\", reg_names[1]);\n-      fprintf (file, \".long\\t0\\n\");\n-      fprintf (file, \".long\\t0\\n\");\n+      output_asm_insn (\"basr\\t%1,0\", op);\n+      output_asm_insn (\"lm\\t%0,%1,6(%1)\", op);\n+      output_asm_insn (\"br\\t%1\", op);\n+      ASM_OUTPUT_SKIP (file, (HOST_WIDE_INT)(TRAMPOLINE_SIZE - 8));\n     }\n }\n \n@@ -7854,10 +7854,10 @@ s390_initialize_trampoline (rtx addr, rtx fnaddr, rtx cxt)\n {\n   emit_move_insn (gen_rtx_MEM (Pmode,\n \t\t   memory_address (Pmode,\n-\t\t   plus_constant (addr, (TARGET_64BIT ? 20 : 12) ))), cxt);\n+\t\t   plus_constant (addr, (TARGET_64BIT ? 16 : 8)))), cxt);\n   emit_move_insn (gen_rtx_MEM (Pmode,\n \t\t   memory_address (Pmode,\n-\t\t   plus_constant (addr, (TARGET_64BIT ? 28 : 16) ))), fnaddr);\n+\t\t   plus_constant (addr, (TARGET_64BIT ? 24 : 12)))), fnaddr);\n }\n \n /* Return rtx for 64-bit constant formed from the 32-bit subwords"}, {"sha": "2217e838f359ee59331aad4417640e565d206838", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadc42dbdb454406e4a7094ff9445d69d5bc9c1d/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=cadc42dbdb454406e4a7094ff9445d69d5bc9c1d", "patch": "@@ -730,7 +730,7 @@ CUMULATIVE_ARGS;\n \n /* Trampolines for nested functions.  */\n \n-#define TRAMPOLINE_SIZE (TARGET_64BIT ? 36 : 20)\n+#define TRAMPOLINE_SIZE (TARGET_64BIT ? 32 : 16)\n \n #define INITIALIZE_TRAMPOLINE(ADDR, FNADDR, CXT)                       \\\n    s390_initialize_trampoline ((ADDR), (FNADDR), (CXT))"}]}