{"sha": "834277a89aec821dc2d4da5ee03a6f0ca59b2819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0Mjc3YTg5YWVjODIxZGMyZDRkYTVlZTAzYTZmMGNhNTliMjgxOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-22T12:09:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-22T12:09:09Z"}, "message": "Fix typo in comment.\n\nFrom-SVN: r65935", "tree": {"sha": "ca3d8c758e59e03fb4c2908bd8012e9779259f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca3d8c758e59e03fb4c2908bd8012e9779259f7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834277a89aec821dc2d4da5ee03a6f0ca59b2819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834277a89aec821dc2d4da5ee03a6f0ca59b2819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834277a89aec821dc2d4da5ee03a6f0ca59b2819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834277a89aec821dc2d4da5ee03a6f0ca59b2819/comments", "author": null, "committer": null, "parents": [{"sha": "277b3b18b38538046fe1c76a6f8eb27216517dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277b3b18b38538046fe1c76a6f8eb27216517dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277b3b18b38538046fe1c76a6f8eb27216517dbd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c5c0d03c5590acf8130a26fa5b3429ab67cf9302", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834277a89aec821dc2d4da5ee03a6f0ca59b2819/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834277a89aec821dc2d4da5ee03a6f0ca59b2819/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=834277a89aec821dc2d4da5ee03a6f0ca59b2819", "patch": "@@ -3053,7 +3053,7 @@ purge_addressof_1 (loc, insn, force, store, may_postpone, ht)\n \n       start_sequence ();\n \n-      /* If SUB is a or virtual register, try it as a pseudo-register. \n+      /* If SUB is a hard or virtual register, try it as a pseudo-register. \n \t Otherwise, perhaps SUB is an expression, so generate code to compute\n \t it.  */\n       if (GET_CODE (sub) == REG && REGNO (sub) <= LAST_VIRTUAL_REGISTER)"}]}