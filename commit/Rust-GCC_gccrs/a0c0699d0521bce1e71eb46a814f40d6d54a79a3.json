{"sha": "a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjMDY5OWQwNTIxYmNlMWU3MWViNDZhODE0ZjQwZDZkNTRhNzlhMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-03-01T20:11:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-03-01T20:11:19Z"}, "message": "re PR target/70027 (invalid assembly syntax generated with -fno-plt -masm=intel)\n\n\tPR target/70027\n\t* config/i386/i386.c (ix86_output_call_insn): Add -masm=intel\n\tasm dialect alternatives to explicit GOTPCREL calls.\n\ntestsuite/ChangeLog:\n\n\tPR target/70027\n\t* gcc.target/i386/pr70027.c: New test.\n\nFrom-SVN: r233864", "tree": {"sha": "d44880a1bf295fc829e611596ee1bea485ff6ba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d44880a1bf295fc829e611596ee1bea485ff6ba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/comments", "author": null, "committer": null, "parents": [{"sha": "0ae3ef47651a0c164d212416096246583bfff820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae3ef47651a0c164d212416096246583bfff820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae3ef47651a0c164d212416096246583bfff820"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "b758d42656005ccfe691911b532b9d6c80494286", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "patch": "@@ -1,3 +1,9 @@\n+2016-03-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70027\n+\t* config/i386/i386.c (ix86_output_call_insn): Add -masm=intel\n+\tasm dialect alternatives to explicit GOTPCREL calls.\n+\n 2016-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/70017\n@@ -20,7 +26,8 @@\n \t2016-03-01  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/constraints.md (\"jm8\"): New constraint.\n-\t* config/s390/predicates.md (\"const_int_8bitset_operand\"): New predicate.\n+\t* config/s390/predicates.md (\"const_int_8bitset_operand\"): New\n+\tpredicate.\n \t* config/s390/s390.md (\"*setmem_long\", \"*setmem_long_and\"): Merge\n \tinto ...\n \t(\"*setmem_long<setmem_and>\"): New pattern.\n@@ -127,7 +134,7 @@\n 2016-03-01  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md (const_int_6bitset_operand): New\n-        predicates.\n+\tpredicate.\n \t* config/s390/s390.md: Include subst.md.\n \t(\"rotl<mode>3\"): New expander.\n \t(\"rotl<mode>3\", \"*rotl<mode>3_and\"): Merge insn definitions into\n@@ -578,8 +585,8 @@\n \n 2016-02-23  Evandro Menezes  <e.menezes@samsung.com>\n \n-        * config/aarch64/aarch64.c (exynosm1_tunings): Enable the Newton\n-        series for reciprocal square root in Exynos M1.\n+\t* config/aarch64/aarch64.c (exynosm1_tunings): Enable the Newton\n+\tseries for reciprocal square root in Exynos M1.\n \n 2016-02-23  Martin Sebor  <msebor@redhat.com>\n "}, {"sha": "7e2a85cd7e9abf58756929f582f7d5d5a70ccbe0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "patch": "@@ -27293,14 +27293,17 @@ ix86_output_call_insn (rtx_insn *insn, rtx call_op)\n \n   if (SIBLING_CALL_P (insn))\n     {\n-      if (direct_p && ix86_nopic_noplt_attribute_p (call_op))\n-\txasm = \"%!jmp\\t*%p0@GOTPCREL(%%rip)\";\n-      else if (direct_p)\n-\txasm = \"%!jmp\\t%P0\";\n+      if (direct_p)\n+\t{\n+\t  if (ix86_nopic_noplt_attribute_p (call_op))\n+\t    xasm = \"%!jmp\\t{*%p0@GOTPCREL(%%rip)|[QWORD PTR %p0@GOTPCREL[rip]]}\";\n+\t  else\n+\t    xasm = \"%!jmp\\t%P0\";\n+\t}\n       /* SEH epilogue detection requires the indirect branch case\n \t to include REX.W.  */\n       else if (TARGET_SEH)\n-\txasm = \"%!rex.W jmp %A0\";\n+\txasm = \"%!rex.W jmp\\t%A0\";\n       else\n \txasm = \"%!jmp\\t%A0\";\n \n@@ -27338,10 +27341,13 @@ ix86_output_call_insn (rtx_insn *insn, rtx call_op)\n \tseh_nop_p = true;\n     }\n \n-  if (direct_p && ix86_nopic_noplt_attribute_p (call_op))\n-    xasm = \"%!call\\t*%p0@GOTPCREL(%%rip)\";\n-  else if (direct_p)\n-    xasm = \"%!call\\t%P0\";\n+  if (direct_p)\n+    {\n+      if (ix86_nopic_noplt_attribute_p (call_op))\n+\txasm = \"%!call\\t{*%p0@GOTPCREL(%%rip)|[QWORD PTR %p0@GOTPCREL[rip]]}\";\n+      else\n+\txasm = \"%!call\\t%P0\";\n+    }\n   else\n     xasm = \"%!call\\t%A0\";\n "}, {"sha": "033a0d3f35fd88fd8e87ea1c5313e09ee5b625ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "patch": "@@ -1,3 +1,8 @@\n+2016-03-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70027\n+\t* gcc.target/i386/pr70027.c: New test.\n+\n 2016-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/pr70017.c: New test."}, {"sha": "b4b483074ede296c8d77930291be798ffa268c54", "filename": "gcc/testsuite/gcc.target/i386/pr70027.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70027.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0699d0521bce1e71eb46a814f40d6d54a79a3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70027.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70027.c?ref=a0c0699d0521bce1e71eb46a814f40d6d54a79a3", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-fno-plt -masm=intel\" } */\n+/* { dg-require-effective-target masm_intel } */\n+\n+extern void bar (int);\n+\n+void\n+foo (void)\n+{\n+  bar (123);\n+}"}]}