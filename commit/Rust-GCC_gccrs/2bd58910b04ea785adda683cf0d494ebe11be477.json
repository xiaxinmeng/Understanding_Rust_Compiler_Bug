{"sha": "2bd58910b04ea785adda683cf0d494ebe11be477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkNTg5MTBiMDRlYTc4NWFkZGE2ODNjZjBkNDk0ZWJlMTFiZTQ3Nw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-02T10:43:31Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-02T10:58:31Z"}, "message": "IBM Z: arch14: New instrinsics\n\nThis adds support for 5 new builtins.\n\ngcc/ChangeLog:\n\n\t* config/s390/s390-builtin-types.def (BT_FN_V4SF_V8HI_UINT): New\n\tbuiltin signature.\n\t(BT_FN_V8HI_V8HI_UINT): Likewise.\n\t(BT_FN_V8HI_V4SF_V4SF_UINT): Likewise.\n\t* config/s390/s390-builtins.def (B_NNPA): New macro definition.\n\t(s390_vclfnhs, s390_vclfnls, s390_vcrnfs, s390_vcfn, s390_vcnf):\n\tNew builtin definitions.\n\t* config/s390/s390-c.c (s390_cpu_cpp_builtins_internal): Bump\n\tvector extension version.\n\t* config/s390/s390.c (s390_expand_builtin): Check if builtins are\n\tavailable with current -march level.\n\t* config/s390/s390.md (UNSPEC_NNPA_VCLFNHS_V8HI)\n\t(UNSPEC_NNPA_VCLFNLS_V8HI, UNSPEC_NNPA_VCRNFS_V8HI)\n\t(UNSPEC_NNPA_VCFN_V8HI, UNSPEC_NNPA_VCNF_V8HI): New constants.\n\t* config/s390/vecintrin.h (vec_extend_to_fp32_hi): New macro.\n\t(vec_extend_to_fp32_lo): Likewise.\n\t(vec_round_from_fp32): Likewise.\n\t(vec_convert_to_fp16): Likewise.\n\t(vec_convert_from_fp16): Likewise.\n\t* config/s390/vx-builtins.md (vclfnhs_v8hi): New insn pattern.\n\t(vclfnls_v8hi): Likewise.\n\t(vcrnfs_v8hi): Likewise.\n\t(vcfn_v8hi): Likewise.\n\t(vcnf_v8hi): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/zvector/vec-nnpa-fp16-convert.c: New test.\n\t* gcc.target/s390/zvector/vec-nnpa-fp32-convert-1.c: New test.\n\t* gcc.target/s390/zvector/vec_convert_from_fp16.c: New test.\n\t* gcc.target/s390/zvector/vec_convert_to_fp16.c: New test.\n\t* gcc.target/s390/zvector/vec_extend_to_fp32_hi.c: New test.\n\t* gcc.target/s390/zvector/vec_extend_to_fp32_lo.c: New test.\n\t* gcc.target/s390/zvector/vec_round_from_fp32.c: New test.", "tree": {"sha": "a2911f60fa6f991fa9a8c7f8e75d951431e50a33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2911f60fa6f991fa9a8c7f8e75d951431e50a33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd58910b04ea785adda683cf0d494ebe11be477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd58910b04ea785adda683cf0d494ebe11be477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd58910b04ea785adda683cf0d494ebe11be477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd58910b04ea785adda683cf0d494ebe11be477/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c"}], "stats": {"total": 212, "additions": 211, "deletions": 1}, "files": [{"sha": "52ef57285391b4d12c4c78f092e7d1ec455c9b4e", "filename": "gcc/config/s390/s390-builtin-types.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -267,6 +267,7 @@ DEF_FN_TYPE_2 (BT_FN_V2DI_V4SI_V4SI, BT_V2DI, BT_V4SI, BT_V4SI)\n DEF_FN_TYPE_2 (BT_FN_V4SF_FLT_INT, BT_V4SF, BT_FLT, BT_INT)\n DEF_FN_TYPE_2 (BT_FN_V4SF_V4SF_UCHAR, BT_V4SF, BT_V4SF, BT_UCHAR)\n DEF_FN_TYPE_2 (BT_FN_V4SF_V4SF_V4SF, BT_V4SF, BT_V4SF, BT_V4SF)\n+DEF_FN_TYPE_2 (BT_FN_V4SF_V8HI_UINT, BT_V4SF, BT_V8HI, BT_UINT)\n DEF_FN_TYPE_2 (BT_FN_V4SI_BV4SI_V4SI, BT_V4SI, BT_BV4SI, BT_V4SI)\n DEF_FN_TYPE_2 (BT_FN_V4SI_INT_VOIDCONSTPTR, BT_V4SI, BT_INT, BT_VOIDCONSTPTR)\n DEF_FN_TYPE_2 (BT_FN_V4SI_UV4SI_UV4SI, BT_V4SI, BT_UV4SI, BT_UV4SI)\n@@ -278,6 +279,7 @@ DEF_FN_TYPE_2 (BT_FN_V8HI_BV8HI_V8HI, BT_V8HI, BT_BV8HI, BT_V8HI)\n DEF_FN_TYPE_2 (BT_FN_V8HI_UV8HI_UV8HI, BT_V8HI, BT_UV8HI, BT_UV8HI)\n DEF_FN_TYPE_2 (BT_FN_V8HI_V16QI_V16QI, BT_V8HI, BT_V16QI, BT_V16QI)\n DEF_FN_TYPE_2 (BT_FN_V8HI_V4SI_V4SI, BT_V8HI, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_2 (BT_FN_V8HI_V8HI_UINT, BT_V8HI, BT_V8HI, BT_UINT)\n DEF_FN_TYPE_2 (BT_FN_V8HI_V8HI_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)\n DEF_FN_TYPE_2 (BT_FN_VOID_UINT64PTR_UINT64, BT_VOID, BT_UINT64PTR, BT_UINT64)\n DEF_FN_TYPE_2 (BT_FN_VOID_V2DF_FLTPTR, BT_VOID, BT_V2DF, BT_FLTPTR)\n@@ -345,6 +347,7 @@ DEF_FN_TYPE_3 (BT_FN_V4SI_V4SI_V4SI_V4SI, BT_V4SI, BT_V4SI, BT_V4SI, BT_V4SI)\n DEF_FN_TYPE_3 (BT_FN_V4SI_V8HI_V8HI_V4SI, BT_V4SI, BT_V8HI, BT_V8HI, BT_V4SI)\n DEF_FN_TYPE_3 (BT_FN_V8HI_UV8HI_UV8HI_INTPTR, BT_V8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V8HI_V16QI_V16QI_V8HI, BT_V8HI, BT_V16QI, BT_V16QI, BT_V8HI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_V4SF_V4SF_UINT, BT_V8HI, BT_V4SF, BT_V4SF, BT_UINT)\n DEF_FN_TYPE_3 (BT_FN_V8HI_V4SI_V4SI_INTPTR, BT_V8HI, BT_V4SI, BT_V4SI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V8HI_V8HI_V8HI_INTPTR, BT_V8HI, BT_V8HI, BT_V8HI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V8HI_V8HI_V8HI_V8HI, BT_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)"}, {"sha": "129d7124cbade431c04487a3d21703510ba53b46", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -273,6 +273,7 @@\n #undef B_VXE\n #undef B_VXE2\n #undef B_DEP\n+#undef B_NNPA\n \n #undef BFLAGS_MASK_INIT\n #define BFLAGS_MASK_INIT (B_INT)\n@@ -283,6 +284,7 @@\n #define B_VXE   (1 << 3)  /* Builtins requiring the z14 vector extensions.  */\n #define B_VXE2  (1 << 4)  /* Builtins requiring the z15 vector extensions.  */\n #define B_DEP   (1 << 5)  /* Builtin has been deprecated and a warning should be issued.  */\n+#define B_NNPA  (1 << 6)  /* Builtins requiring the NNPA Facility.  */\n \n /* B_DEF defines a standard (not overloaded) builtin\n    B_DEF (<builtin name>, <RTL expander name>, <function attributes>, <builtin flags>, <operand flags, see above>, <fntype>)\n@@ -3005,3 +3007,13 @@ OB_DEF_VAR (s390_vstrsz_u32,             s390_vstrszf,      0,\n B_DEF      (s390_vstrszb,                vstrszv16qi,       0,                  B_VXE2,             0,                  BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR)\n B_DEF      (s390_vstrszh,                vstrszv8hi,        0,                  B_VXE2,             0,                  BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INTPTR)\n B_DEF      (s390_vstrszf,                vstrszv4si,        0,                  B_VXE2,             0,                  BT_FN_UV4SI_UV4SI_UV4SI_UV8HI_INTPTR)\n+\n+/* arch 14 builtins */\n+\n+B_DEF      (s390_vclfnhs,                vclfnhs_v8hi,      0,                  B_NNPA,             O3_U4,              BT_FN_V4SF_V8HI_UINT)\n+B_DEF      (s390_vclfnls,                vclfnls_v8hi,      0,                  B_NNPA,             O3_U4,              BT_FN_V4SF_V8HI_UINT)\n+\n+B_DEF      (s390_vcrnfs,                 vcrnfs_v8hi,       0,                  B_NNPA,             O4_U4,              BT_FN_V8HI_V4SF_V4SF_UINT)\n+\n+B_DEF      (s390_vcfn,                   vcfn_v8hi,         0,                  B_NNPA,             O3_U4,              BT_FN_V8HI_V8HI_UINT)\n+B_DEF      (s390_vcnf,                   vcnf_v8hi,         0,                  B_NNPA,             O3_U4,              BT_FN_V8HI_V8HI_UINT)"}, {"sha": "7dbd8bf5da381314f6d3a2866243a01e2dfdfa62", "filename": "gcc/config/s390/s390-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-c.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -339,7 +339,7 @@ s390_cpu_cpp_builtins_internal (cpp_reader *pfile,\n   s390_def_or_undef_macro (pfile, target_flag_set_p (MASK_OPT_VX), old_opts,\n \t\t\t   opts, \"__VX__\", \"__VX__\");\n   s390_def_or_undef_macro (pfile, target_flag_set_p (MASK_ZVECTOR), old_opts,\n-\t\t\t   opts, \"__VEC__=10303\", \"__VEC__\");\n+\t\t\t   opts, \"__VEC__=10304\", \"__VEC__\");\n   s390_def_or_undef_macro (pfile, target_flag_set_p (MASK_ZVECTOR), old_opts,\n \t\t\t   opts, \"__vector=__attribute__((vector_size(16)))\",\n \t\t\t   \"__vector__\");"}, {"sha": "f3d0d1ba59641c1fbeabd0069a2f8343fd28b2ad", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -827,6 +827,12 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \t  error (\"Builtin %qF requires z15 or higher.\", fndecl);\n \t  return const0_rtx;\n \t}\n+\n+      if ((bflags & B_NNPA) && !TARGET_NNPA)\n+\t{\n+\t  error (\"Builtin %qF requires arch14 or higher.\", fndecl);\n+\t  return const0_rtx;\n+\t}\n     }\n   if (fcode >= S390_OVERLOADED_BUILTIN_VAR_OFFSET\n       && fcode < S390_ALL_BUILTIN_MAX)"}, {"sha": "c10f25b2472718041523551cc45cef7f4b4ac5bf", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -246,6 +246,13 @@\n    UNSPEC_VEC_VFMAX\n \n    UNSPEC_VEC_ELTSWAP\n+\n+   UNSPEC_NNPA_VCLFNHS_V8HI\n+   UNSPEC_NNPA_VCLFNLS_V8HI\n+   UNSPEC_NNPA_VCRNFS_V8HI\n+\n+   UNSPEC_NNPA_VCFN_V8HI\n+   UNSPEC_NNPA_VCNF_V8HI\n ])\n \n ;;"}, {"sha": "6bd26f8a240fa401dcd680de74076e185f95f3f1", "filename": "gcc/config/s390/vecintrin.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvecintrin.h?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -173,6 +173,12 @@ __lcbb(const void *ptr, int bndry)\n #define vec_vsterg vec_vlerh\n #define vec_vsterf_flt vec_vlerf_flt\n #define vec_vsterg_dbl vec_vlerg_dbl\n+\n+#define vec_extend_to_fp32_hi __builtin_s390_vclfnhs\n+#define vec_extend_to_fp32_lo __builtin_s390_vclfnls\n+#define vec_round_from_fp32 __builtin_s390_vcrnfs\n+#define vec_convert_to_fp16 __builtin_s390_vcfn\n+#define vec_convert_from_fp16 __builtin_s390_vcnf\n #define vec_gather_element __builtin_s390_vec_gather_element\n #define vec_xl __builtin_s390_vec_xl\n #define vec_xld2 __builtin_s390_vec_xld2"}, {"sha": "3df501b562ca1e2bfea5bc8017e9c2ce531ac655", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -2312,3 +2312,58 @@\n   \"TARGET_VXE2 && UINTVAL (operands[2]) < GET_MODE_NUNITS (<V_HW_HSD:MODE>mode)\"\n   \"vstebr<bhfgq>\\t%v1,%0,%2\"\n   [(set_attr \"op_type\" \"VRX\")])\n+\n+\n+;;\n+;; NNPA Facility\n+;;\n+\n+(define_insn \"vclfnhs_v8hi\"\n+  [(set (match_operand:V4SF                0 \"register_operand\"  \"=v\")\n+\t(unspec:V4SF [(vec_select:V4HI\n+\t\t       (match_operand:V8HI 1 \"register_operand\"   \"v\")\n+\t\t       (parallel [(const_int 0) (const_int 1) (const_int 2) (const_int 3)]))\n+\t\t      (match_operand:QI    2 \"const_mask_operand\" \"C\")]\n+\t\t     UNSPEC_NNPA_VCLFNHS_V8HI))]\n+  \"TARGET_NNPA\"\n+  \"vclfnh\\t%v0,%v1,2,%2\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+(define_insn \"vclfnls_v8hi\"\n+  [(set (match_operand:V4SF                0 \"register_operand\"   \"=v\")\n+\t(unspec:V4SF [(vec_select:V4HI\n+\t\t       (match_operand:V8HI 1 \"register_operand\"   \"v\")\n+\t\t       (parallel [(const_int 4) (const_int 5) (const_int 6) (const_int 7)]))\n+\t\t      (match_operand:QI    2 \"const_mask_operand\"  \"C\")]\n+\t\t     UNSPEC_NNPA_VCLFNLS_V8HI))]\n+  \"TARGET_NNPA\"\n+  \"vclfnl\\t%v0,%v1,2,%2\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+(define_insn \"vcrnfs_v8hi\"\n+  [(set (match_operand:V8HI               0 \"register_operand\"   \"=v\")\n+\t(unspec:V8HI [(match_operand:V4SF 1 \"register_operand\"    \"v\")\n+\t\t      (match_operand:V4SF 2 \"register_operand\"    \"v\")\n+\t\t      (match_operand:QI   3 \"const_mask_operand\"  \"C\")]\n+\t\t     UNSPEC_NNPA_VCRNFS_V8HI))]\n+  \"TARGET_NNPA\"\n+  \"vcrnf\\t%v0,%v1,%v2,%3,2\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+(define_insn \"vcfn_v8hi\"\n+  [(set (match_operand:V8HI               0 \"register_operand\"   \"=v\")\n+\t(unspec:V8HI [(match_operand:V8HI 1 \"register_operand\"    \"v\")\n+\t\t      (match_operand:QI   2 \"const_mask_operand\"  \"C\")]\n+\t\t     UNSPEC_NNPA_VCFN_V8HI))]\n+  \"TARGET_NNPA\"\n+  \"vcfn\\t%v0,%v1,1,%2\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+(define_insn \"vcnf_v8hi\"\n+  [(set (match_operand:V8HI               0 \"register_operand\"   \"=v\")\n+\t(unspec:V8HI [(match_operand:V8HI 1 \"register_operand\"    \"v\")\n+\t\t      (match_operand:QI   2 \"const_mask_operand\"  \"C\")]\n+\t\t     UNSPEC_NNPA_VCNF_V8HI))]\n+  \"TARGET_NNPA\"\n+  \"vcnf\\t%v0,%v1,%2,1\"\n+  [(set_attr \"op_type\" \"VRR\")])"}, {"sha": "5ed7e050194f4a465025db6d1333aad3944378c6", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-nnpa-fp16-convert.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp16-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp16-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp16-convert.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target s390_nnpa } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector --save-temps\" } */\n+\n+#include <vecintrin.h>\n+\n+int\n+main ()\n+{\n+  vector float fp1 = (vector float){ 1.0f, 2.0f, 3.0f, 4.0f };\n+  vector float fp2 = (vector float){ 5.0f, 6.0f, 7.0f, 8.0f };\n+\n+  vector short int tmp1 = vec_round_from_fp32 (fp1, fp2, 0);\n+\n+  vector short int tmp2 = vec_convert_to_fp16 (tmp1, 0);\n+  vector short int tmp3 = vec_convert_from_fp16 (tmp2, 0);\n+\n+  vector float fp1_ret = vec_extend_to_fp32_hi (tmp3, 0);\n+  vector float fp2_ret = vec_extend_to_fp32_lo (tmp3, 0);\n+\n+  if (vec_any_ne (fp1, fp1_ret))\n+    __builtin_abort ();\n+\n+  if (vec_any_ne (fp2, fp2_ret))\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcrnf\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcfn\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcnf\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vclfnh\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vclfnl\\t\" 1 } } */"}, {"sha": "321488a09ac0f75a91b20fc2895dcf8d5a9f60e5", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-nnpa-fp32-convert-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp32-convert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp32-convert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-nnpa-fp32-convert-1.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target s390_nnpa } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector --save-temps\" } */\n+\n+#include <vecintrin.h>\n+\n+int\n+main ()\n+{\n+  vector float fp1 = (vector float){ 1.0f, 2.0f, 3.0f, 4.0f };\n+  vector float fp2 = (vector float){ 5.0f, 6.0f, 7.0f, 8.0f };\n+  vector short int conv = vec_round_from_fp32 (fp1, fp2, 0);\n+  vector float fp1_ret = vec_extend_to_fp32_hi (conv, 0);\n+  vector float fp2_ret = vec_extend_to_fp32_lo (conv, 0);\n+\n+  if (vec_any_ne (fp1, fp1_ret))\n+    __builtin_abort ();\n+\n+  if (vec_any_ne (fp2, fp2_ret))\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcrnf\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vclfnh\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vclfnl\\t\" 1 } } */"}, {"sha": "fc7ccf0ebaad15340ef95c53e5c2eb24d07164c1", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec_convert_from_fp16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_from_fp16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_from_fp16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_from_fp16.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+vector short int\n+test_vec_convert_from_fp16 (vector short int a)\n+{\n+  return vec_convert_from_fp16 (a, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcnf\\t\" 1 } } */"}, {"sha": "7232643f063d31720292cde48ac56c9514262b2a", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec_convert_to_fp16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_to_fp16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_to_fp16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_convert_to_fp16.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+vector short int\n+test_vec_convert_to_fp16 (vector short int a)\n+{\n+  return vec_convert_to_fp16 (a, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcfn\\t\" 1 } } */"}, {"sha": "feb5e784e0cc1f93c9104ded29e65cfa37bbc0ee", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec_extend_to_fp32_hi.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_hi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_hi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_hi.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+vector float\n+test_vec_extend_to_fp32_hi (vector short int a)\n+{\n+  return vec_extend_to_fp32_hi (a, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclfnh\\t\" 1 } } */"}, {"sha": "179de17de9e71b45acfc0a98a790943f6c5977a1", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec_extend_to_fp32_lo.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_lo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_lo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_extend_to_fp32_lo.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+vector float\n+test_vec_extend_to_fp32_lo (vector short int a)\n+{\n+  return vec_extend_to_fp32_lo (a, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclfnl\\t\" 1 } } */"}, {"sha": "839245228b9dfe886e5c1f09d0bf1e978356191e", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec_round_from_fp32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_round_from_fp32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58910b04ea785adda683cf0d494ebe11be477/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_round_from_fp32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec_round_from_fp32.c?ref=2bd58910b04ea785adda683cf0d494ebe11be477", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch14 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+vector short int\n+test_vec_round_from_fp32 (vector float hi, vector float lo)\n+{\n+  return vec_round_from_fp32 (hi, lo, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcrnf\\t\" 1 } } */"}]}