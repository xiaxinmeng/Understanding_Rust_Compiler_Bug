{"sha": "9c9e76325d93eabceed560108d5c924edbe19925", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM5ZTc2MzI1ZDkzZWFiY2VlZDU2MDEwOGQ1YzkyNGVkYmUxOTkyNQ==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "1999-11-24T06:35:10Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "1999-11-24T06:35:10Z"}, "message": "mips.h (ASM_SPEC): Don't pass -G to the assembler when -membedded-pic is passed.\n\n* config/mips/mips.h (ASM_SPEC): Don't pass -G to the assembler\nwhen -membedded-pic is passed.\n\n* config/mips/mips.md (casesi): Handle 64-bit case too.\n(casesi_internal_di): New insn.\n\n* config/mips/mips.c (embedded_pic_offset): Always make the\nembedded-pic subtractions relative to the name of the current\nfunction by use of the magic string \"..CURRENT_FUNCTION\".\n* config/mips/mips.h (ASM_OUTPUT_LABELREF): Make the magic happen.\n\nFrom-SVN: r30649", "tree": {"sha": "efa87a2f91facebe37d5e535e6a60414ad8cc93e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa87a2f91facebe37d5e535e6a60414ad8cc93e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c9e76325d93eabceed560108d5c924edbe19925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9e76325d93eabceed560108d5c924edbe19925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c9e76325d93eabceed560108d5c924edbe19925", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9e76325d93eabceed560108d5c924edbe19925/comments", "author": null, "committer": null, "parents": [{"sha": "8f8b5612dc889bdbbdbb1944217d6d5db7294c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8b5612dc889bdbbdbb1944217d6d5db7294c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8b5612dc889bdbbdbb1944217d6d5db7294c7c"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "ec4bccd06c5c6cc676dbcc799176a39b79311d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c9e76325d93eabceed560108d5c924edbe19925", "patch": "@@ -1,3 +1,16 @@\n+Wed Nov 24 17:26:05 1999  Geoffrey Keating  <geoffk@cygnus.com>\n+\n+\t* config/mips/mips.h (ASM_SPEC): Don't pass -G to the assembler\n+\twhen -membedded-pic is passed.\n+\n+\t* config/mips/mips.md (casesi): Handle 64-bit case too.\n+\t(casesi_internal_di): New insn.\n+\n+\t* config/mips/mips.c (embedded_pic_offset): Always make the\n+\tembedded-pic subtractions relative to the name of the current\n+\tfunction by use of the magic string \"..CURRENT_FUNCTION\".\n+\t* config/mips/mips.h (ASM_OUTPUT_LABELREF): Make the magic happen.\n+\n 1999-11-24  Geoffrey Keating  <geoffk@cygnus.com>\n \n \t* config/mips/mips.md (div_trap_normal): Don't ask for the REGNO"}, {"sha": "96d2fb87f18965e800015641567b8cdee30e7b44", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=9c9e76325d93eabceed560108d5c924edbe19925", "patch": "@@ -807,7 +807,7 @@ while (0)\n /* ASM_SPEC is the set of arguments to pass to the assembler.  */\n \n #define ASM_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n+%{!membedded-pic:%{G*}} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{mips16:%{!mno-mips16:-mips16}} %{mno-mips16:-no-mips16} \\\n %(subtarget_asm_optimizing_spec) \\\n %(subtarget_asm_debugging_spec) \\\n@@ -3210,6 +3210,16 @@ do\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n+/* This handles the magic '..CURRENT_FUNCTION' symbol, which means\n+   'the start of the function that this code is output in'.  */\n+\n+#define ASM_OUTPUT_LABELREF(FILE,NAME)  \\\n+  if (strcmp (NAME, \"..CURRENT_FUNCTION\") == 0)\t\t\t\t\\\n+    asm_fprintf ((FILE), \"%U%s\",\t\t\t\t\t\\\n+\t\t XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    asm_fprintf ((FILE), \"%U%s\", (NAME))\n+\n /* The mips16 wants the constant pool to be after the function,\n    because the PC relative load instructions use unsigned offsets.  */\n "}, {"sha": "8ef8a72a05a263b4be7e487bf4df83ec3b0b1608", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c9e76325d93eabceed560108d5c924edbe19925/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=9c9e76325d93eabceed560108d5c924edbe19925", "patch": "@@ -9217,10 +9217,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_EMBEDDED_PIC\"\n   \"\n {\n-  /* We need slightly different code for eight byte table entries.  */\n-  if (Pmode == DImode)\n-    abort ();\n-\n   if (operands[0])\n     {\n       rtx reg = gen_reg_rtx (SImode);\n@@ -9231,8 +9227,12 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_bgtu (operands[4]));\n \n       /* Do the PIC jump.  */\n-      emit_jump_insn (gen_casesi_internal (reg, operands[3],\n-\t\t\t\t\t   gen_reg_rtx (SImode)));\n+      if (Pmode != DImode)\n+        emit_jump_insn (gen_casesi_internal (reg, operands[3], \n+\t\t\t\t\t     gen_reg_rtx (SImode)));\n+      else\n+        emit_jump_insn (gen_casesi_internal_di (reg, operands[3], \n+\t\t\t\t\t\tgen_reg_rtx (DImode)));\n \n       DONE;\n     }\n@@ -9265,6 +9265,21 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"24\")])\n \n+(define_insn \"casesi_internal_di\"\n+  [(set (pc)\n+\t(mem:DI (plus:DI (sign_extend:DI \n+\t\t\t  (mult:SI (match_operand:SI 0 \"register_operand\" \"d\")\n+\t\t\t\t  (const_int 4))\n+\t\t\t (label_ref (match_operand 1 \"\" \"\")))))\n+   (clobber (match_operand:DI 2 \"register_operand\" \"=d\"))\n+   (clobber (reg:DI 31))]\n+  \"TARGET_EMBEDDED_PIC\"\n+  \"%(bal\\\\t%S1\\;sll\\\\t%2,%0,2\\\\n%~%S1:\\;addu\\\\t%2,%2,$31%)\\;\\\\\n+ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\;j\\\\t%2\"\n+  [(set_attr \"type\"\t\"jump\")\n+   (set_attr \"mode\"\t\"none\")\n+   (set_attr \"length\"\t\"24\")])\n+\n ;; For o32/n32/n64, we save the gp in the jmp_buf as well.  While it is\n ;; possible to either pull it off the stack (in the o32 case) or recalculate\n ;; it given t9 and our target label, it takes 3 or 4 insns to do so, and"}]}