{"sha": "3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "node_id": "C_kwDOANBUbNoAKDM3MzFkZDBiZWE4OTk0YzNkN2I1YTQ4NzlmODlmM2U3YTBlYjJjZjQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-04T00:16:19Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-04T00:16:19Z"}, "message": "Daily bump.", "tree": {"sha": "781acf281f0f953d008bc8a727f0d2bf1ed8886b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/781acf281f0f953d008bc8a727f0d2bf1ed8886b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/comments", "author": null, "committer": null, "parents": [{"sha": "f3a5e75cb66dc96efca7d494fe6060746c88acb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a5e75cb66dc96efca7d494fe6060746c88acb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a5e75cb66dc96efca7d494fe6060746c88acb1"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "f0c734e44fc1a730ab4e0c357b156fdd3812a82f", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "patch": "@@ -1,3 +1,11 @@\n+2022-07-03  Immad Mir  <mirimmad17@gmail.com>\n+\n+\t* MAINTAINERS: add myself.\n+\n+2022-07-03  Immad Mir  <mirimmad17@gmail.com>\n+\n+\t* MAINTAINERS: Add myself to write after approval and DCO.\n+\n 2022-07-02  Tim Lange  <mail@tim-lange.me>\n \n \t* MAINTAINERS: Add myself."}, {"sha": "a7bf96a3fe2a5cd463532ef1d6312df2ffdd68a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "patch": "@@ -1,3 +1,67 @@\n+2022-07-03  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/106022\n+\t* config/i386/i386-protos.h (ix86_convert_const_vector_to_integer):\n+\tNew.\n+\t* config/i386/i386.cc (ix86_convert_const_vector_to_integer):\n+\tNew.\n+\t* config/i386/mmx.md (V_16_32_64): New.\n+\t(*mov<mode>_imm): New patterns for stores with 16-bit, 32-bit\n+\tand 64-bit constant vector.\n+\t* config/i386/predicates.md (x86_64_const_vector_operand): New.\n+\n+2022-07-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-cache.cc: Include value-range-storage.h.\n+\t* gimple-range-cache.h (class block_range_cache): Add \"class\" to\n+\tm_range_allocator.\n+\t* gimple-range-edge.cc\n+\t(gimple_outgoing_range::gimple_outgoing_range): Allocate allocator.\n+\t(gimple_outgoing_range::~gimple_outgoing_range): Free allocator.\n+\t(gimple_outgoing_range::calc_switch_ranges): Dereference allocator.\n+\t* gimple-range-edge.h: Add \"class\" to m_range_allocator.\n+\t* gimple-range-infer.cc\n+\t(infer_range_manager::infer_range_manager): Allocate allocator.\n+\t(infer_range_manager::~infer_range_manager): Free allocator.\n+\t(infer_range_manager::get_nonzero): Dereference allocator.\n+\t(infer_range_manager::add_range): Same.\n+\t* gimple-range-infer.h (class vrange_allocator): Add \"class\" to\n+\tm_range_allocator.\n+\t* value-range-storage.h (class vrange_allocator): Move from\n+\tvalue-range.h.\n+\t(class obstack_vrange_allocator): Same.\n+\t(class ggc_vrange_allocator): Same.\n+\t(vrange_allocator::alloc_vrange): Same.\n+\t(vrange_allocator::alloc_irange): Same.\n+\t* value-range.h (class vrange_allocator): Move to value-range-storage.h.\n+\t(class obstack_vrange_allocator): Same.\n+\t(class ggc_vrange_allocator): Same.\n+\n+2022-07-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* Makefile.in (OBJS): Add value-range-storage.o.\n+\t(GTFILES): Add value-range-storage.h.\n+\t* gengtype.cc (open_base_files): Add value-range-storage.h.\n+\t* value-range-storage.cc: New file.\n+\t* value-range-storage.h: New file.\n+\n+2022-07-03  Xi Ruoyao  <xry111@xry111.site>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch.cc (loongarch_check_zero_div_p):\n+\tNew static function.\n+\t(loongarch_idiv_insns): Use loongarch_check_zero_div_p instead\n+\tof TARGET_CHECK_ZERO_DIV.\n+\t(loongarch_output_division): Likewise.\n+\t* common/config/loongarch/loongarch-common.cc\n+\t(TARGET_DEFAULT_TARGET_FLAGS): Remove unneeded hook.\n+\t* doc/invoke.texi: Update to match the new behavior.\n+\n+2022-07-03  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* tree-ssa-dse.cc (dse_optimize_stmt): Only delete a trapping\n+\tstatement if -fdelete-dead-exceptions.\n+\n 2022-07-02  Tim Lange  <mail@tim-lange.me>\n \n \tPR analyzer/105900"}, {"sha": "d9297661e6839fed2ee0b0235500bec4dd8a5990", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "patch": "@@ -1 +1 @@\n-20220703\n+20220704"}, {"sha": "c5772c71cd5d25aa89820587a72ff2a4cdb48d22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3731dd0bea8994c3d7b5a4879f89f3e7a0eb2cf4", "patch": "@@ -1,3 +1,29 @@\n+2022-07-03  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/106022\n+\t* gcc.target/i386/pr106022-1.c: New test.\n+\t* gcc.target/i386/pr106022-2.c: Likewise.\n+\t* gcc.target/i386/pr106022-3.c: Likewise.\n+\t* gcc.target/i386/pr106022-4.c: Likewise.\n+\n+2022-07-03  Xi Ruoyao  <xry111@xry111.site>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* gcc.c-torture/execute/20101011-1.c (dg-additional-options):\n+\tadd -mcheck-zero-division for LoongArch targets.\n+\n+2022-07-03  Tim Lange  <mail@tim-lange.me>\n+\n+\t* gcc.dg/analyzer/allocation-size-1.c: Use fixed-length types.\n+\t* gcc.dg/analyzer/allocation-size-2.c: Likewise.\n+\t* gcc.dg/analyzer/allocation-size-3.c: Likewise.\n+\t* gcc.dg/analyzer/allocation-size-4.c: Likewise.\n+\t* gcc.dg/analyzer/allocation-size-5.c: Likewise.\n+\n+2022-07-03  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* g++.dg/torture/except-1.C: New test.\n+\n 2022-07-02  Tim Lange  <mail@tim-lange.me>\n \n \tPR analyzer/105900"}]}