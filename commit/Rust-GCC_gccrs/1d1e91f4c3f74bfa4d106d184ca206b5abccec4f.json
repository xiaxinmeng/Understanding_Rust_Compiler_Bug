{"sha": "1d1e91f4c3f74bfa4d106d184ca206b5abccec4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxZTkxZjRjM2Y3NGJmYTRkMTA2ZDE4NGNhMjA2YjVhYmNjZWM0Zg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-04-29T09:39:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-05T13:09:14Z"}, "message": "[Ada] Fix excessive check for alignment of overlaying objects\n\ngcc/ada/\n\n\t* sem_util.adb (Has_Compatible_Alignment_Internal): If the\n\tprefix of the Address expression is an entire object with a\n\tknown alignment, then skip checks related to its size.", "tree": {"sha": "27e0659d556f8e11a85a73a3ae12a4fef88485f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e0659d556f8e11a85a73a3ae12a4fef88485f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63b43535dc775883436ac5c8445522e34e373efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b43535dc775883436ac5c8445522e34e373efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b43535dc775883436ac5c8445522e34e373efc"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "25060cc95025983c7583f87ecd921d976134d67b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1e91f4c3f74bfa4d106d184ca206b5abccec4f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1d1e91f4c3f74bfa4d106d184ca206b5abccec4f", "patch": "@@ -11939,6 +11939,7 @@ package body Sem_Util is\n                   elsif Is_Entity_Name (Expr)\n                     and then Known_Alignment (Entity (Expr))\n                   then\n+                     Offs := Uint_0;\n                      ExpA := Alignment (Entity (Expr));\n \n                   --  Otherwise, we can use the alignment of the type of Expr\n@@ -11961,9 +11962,9 @@ package body Sem_Util is\n                      Set_Result (Known_Incompatible);\n                   end if;\n \n-                  --  If Expr is not a piece of a larger object, see if size\n-                  --  is given. If so, check that it is not too small for the\n-                  --  required alignment.\n+                  --  If Expr is a component or an entire object with a known\n+                  --  alignment, then we are fine. Otherwise, if its size is\n+                  --  known, it must be big enough for the required alignment.\n \n                   if Offs /= No_Uint then\n                      null;\n@@ -11982,7 +11983,7 @@ package body Sem_Util is\n                   end if;\n \n                   --  If we got a size, see if it is a multiple of the Obj\n-                  --  alignment, if not, then the alignment cannot be\n+                  --  alignment; if not, then the alignment cannot be\n                   --  acceptable, since the size is always a multiple of the\n                   --  alignment.\n "}]}