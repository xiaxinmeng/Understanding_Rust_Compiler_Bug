{"sha": "9319fa21f4ee4dcff6b5ccc609eb28e303639529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxOWZhMjFmNGVlNGRjZmY2YjVjY2M2MDllYjI4ZTMwMzYzOTUyOQ==", "commit": {"author": {"name": "Michael Zolotukhin", "email": "michael.v.zolotukhin@intel.com", "date": "2012-08-09T14:35:02Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-08-09T14:35:02Z"}, "message": "adxintrin.h: Remove guarding __ADX__ check.\n\n\nChangelog\n        * config/i386/adxintrin.h: Remove guarding __ADX__ check.\n        * config/i386/x86intrin.h: Likewise.\n        * config/i386/i386.c (ix86_init_mmx_sse_builtins): Remove\n        OPTION_MASK_ISA_ADX from needed options for\n        __builtin_ia32_addcarryx_u32 and __builtin_ia32_addcarryx_u64.\n        (ix86_expand_builtin): Use add<mode>3_carry in expanding of\n        IX86_BUILTIN_ADDCARRYX32 and IX86_BUILTIN_ADDCARRYX64.\n\ntestsuite/Changelog\n        * gcc.target/i386/adx-addxcarry32-3.c: New.\n        * gcc.target/i386/adx-addxcarry64-3.c: New.\n\nFrom-SVN: r190254", "tree": {"sha": "8c10fb5e8e2bdfc976dd237694c4a3132810f2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c10fb5e8e2bdfc976dd237694c4a3132810f2f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9319fa21f4ee4dcff6b5ccc609eb28e303639529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9319fa21f4ee4dcff6b5ccc609eb28e303639529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9319fa21f4ee4dcff6b5ccc609eb28e303639529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9319fa21f4ee4dcff6b5ccc609eb28e303639529/comments", "author": null, "committer": null, "parents": [{"sha": "0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c02ab396ed1385ee0fc14c534fcfe36dbe11675"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "db6dbd5f7cd90ad9843e37c53f77fccf9c040c01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -1,3 +1,13 @@\n+2012-08-09  Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/adxintrin.h: Remove guarding __ADX__ check.\n+\t* config/i386/x86intrin.h: Likewise.\n+\t* config/i386/i386.c (ix86_init_mmx_sse_builtins): Remove\n+\tOPTION_MASK_ISA_ADX from needed options for\n+\t__builtin_ia32_addcarryx_u32 and __builtin_ia32_addcarryx_u64.\n+\t(ix86_expand_builtin): Use add<mode>3_carry in expanding of\n+\tIX86_BUILTIN_ADDCARRYX32 and IX86_BUILTIN_ADDCARRYX64.\n+\n 2012-08-09  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/53701"}, {"sha": "a68566d1a6f58000e0fae751485cbb2c70b36405", "filename": "gcc/config/i386/adxintrin.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fadxintrin.h?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -25,10 +25,6 @@\n # error \"Never use <adxintrin.h> directly; include <x86intrin.h> instead.\"\n #endif\n \n-#ifndef __ADX__\n-# error \"Flag-preserving add-carry instructions not enabled\"\n-#endif /* __ADX__ */\n-\n #ifndef _ADXINTRIN_H_INCLUDED\n #define _ADXINTRIN_H_INCLUDED\n "}, {"sha": "7a9e1345c77e852a22cadd58227f2461215f5c69", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -27968,9 +27968,9 @@ ix86_init_mmx_sse_builtins (void)\n \t       INT_FTYPE_PULONGLONG, IX86_BUILTIN_RDSEED64_STEP);\n \n   /* ADCX */\n-  def_builtin (OPTION_MASK_ISA_ADX, \"__builtin_ia32_addcarryx_u32\",\n+  def_builtin (0, \"__builtin_ia32_addcarryx_u32\",\n \t       UCHAR_FTYPE_UCHAR_UINT_UINT_PUNSIGNED, IX86_BUILTIN_ADDCARRYX32);\n-  def_builtin (OPTION_MASK_ISA_ADX && OPTION_MASK_ISA_64BIT,\n+  def_builtin (OPTION_MASK_ISA_64BIT,\n \t       \"__builtin_ia32_addcarryx_u64\",\n \t       UCHAR_FTYPE_UCHAR_ULONGLONG_ULONGLONG_PULONGLONG,\n \t       IX86_BUILTIN_ADDCARRYX64);\n@@ -30343,12 +30343,12 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       return target;\n \n     case IX86_BUILTIN_ADDCARRYX32:\n-      icode = CODE_FOR_adcxsi3;\n+      icode = TARGET_ADX ? CODE_FOR_adcxsi3 : CODE_FOR_addsi3_carry;\n       mode0 = SImode;\n       goto addcarryx;\n \n     case IX86_BUILTIN_ADDCARRYX64:\n-      icode = CODE_FOR_adcxdi3;\n+      icode = TARGET_ADX ? CODE_FOR_adcxdi3 : CODE_FOR_adddi3_carry;\n       mode0 = DImode;\n \n addcarryx:"}, {"sha": "fae6491c49f7a834080a693652b74e59b0cc68a6", "filename": "gcc/config/i386/x86intrin.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86intrin.h?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -105,8 +105,6 @@\n #include <prfchwintrin.h>\n #endif\n \n-#ifdef __ADX__\n #include <adxintrin.h>\n-#endif\n \n #endif /* _X86INTRIN_H_INCLUDED */"}, {"sha": "021ce85fac4f0eb513aab8a6e2f04490327559dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -1,3 +1,8 @@\n+2012-08-09  Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* gcc.target/i386/adx-addxcarry32-3.c: New.\n+\t* gcc.target/i386/adx-addxcarry64-3.c: New.\n+\n 2012-08-09  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/53701"}, {"sha": "0ed33a9503e1963230e85246de52d603201e8384", "filename": "gcc/testsuite/gcc.target/i386/adx-addcarryx32-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-3.c?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-adx -O2\" } */\n+/* { dg-final { scan-assembler \"adcl\" } } */\n+\n+#include <x86intrin.h>\n+\n+volatile unsigned char c;\n+volatile unsigned int x, y;\n+unsigned int *sum;\n+\n+void extern\n+adx_test (void)\n+{\n+    c = _addcarryx_u32 (c, x, y, sum);\n+}"}, {"sha": "4bbf74bfc2de8c717561d77cdd406c0073907061", "filename": "gcc/testsuite/gcc.target/i386/adx-addcarryx64-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9319fa21f4ee4dcff6b5ccc609eb28e303639529/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-3.c?ref=9319fa21f4ee4dcff6b5ccc609eb28e303639529", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mno-adx -O2\" } */\n+/* { dg-final { scan-assembler \"adcq\" } } */\n+\n+#include <x86intrin.h>\n+\n+volatile unsigned char c;\n+volatile unsigned long long x, y;\n+unsigned long long *sum;\n+\n+void extern\n+adx_test (void)\n+{\n+    c = _addcarryx_u64 (c, x, y, sum);\n+}"}]}