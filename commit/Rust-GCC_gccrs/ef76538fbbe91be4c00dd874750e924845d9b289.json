{"sha": "ef76538fbbe91be4c00dd874750e924845d9b289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3NjUzOGZiYmU5MWJlNGMwMGRkODc0NzUwZTkyNDg0NWQ5YjI4OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T13:10:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T13:10:51Z"}, "message": "[multiple changes]\n\n2009-07-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c: Add comment.\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.adb, sinfo.ads, sem_util.adb, atree.adb, atree.ads: Minor\n\treformatting. Minor code reorganization (add 9 argument version of\n\tNkind_In).\n\n\t* impunit.adb: Remove s-os_lib from list of system extensions.\n\n\t* sem_util.ads: Minor reformatting\n\n\t* output.adb: Add warnings off/on around System.OS_Lib.\n\nFrom-SVN: r149583", "tree": {"sha": "21b7fb988944d375fd24f4c38f8b5ae527a24bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21b7fb988944d375fd24f4c38f8b5ae527a24bca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef76538fbbe91be4c00dd874750e924845d9b289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef76538fbbe91be4c00dd874750e924845d9b289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef76538fbbe91be4c00dd874750e924845d9b289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef76538fbbe91be4c00dd874750e924845d9b289/comments", "author": null, "committer": null, "parents": [{"sha": "81c85afed3060fcf54978b01a98a086345c022bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c85afed3060fcf54978b01a98a086345c022bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c85afed3060fcf54978b01a98a086345c022bd"}], "stats": {"total": 147, "additions": 116, "deletions": 31}, "files": [{"sha": "1b00425fc04202bf1df88e43636eaf3a2b00d801", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -1,3 +1,19 @@\n+2009-07-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c: Add comment.\n+\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.adb, sinfo.ads, sem_util.adb, atree.adb, atree.ads: Minor\n+\treformatting. Minor code reorganization (add 9 argument version of\n+\tNkind_In).\n+\n+\t* impunit.adb: Remove s-os_lib from list of system extensions.\n+\n+\t* sem_util.ads: Minor reformatting\n+\n+\t* output.adb: Add warnings off/on around System.OS_Lib.\n+\n 2009-07-13  Bob Duff  <duff@adacore.com>\n \n \t* exp_dist.adb: Minor comment updates."}, {"sha": "b22732668a5436eca0c56a8d40886ce45ffe612e", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -1227,6 +1227,21 @@ package body Atree is\n       return Nkind_In (Nkind (N), V1, V2, V3, V4, V5, V6, V7, V8);\n    end Nkind_In;\n \n+   function Nkind_In\n+     (N  : Node_Id;\n+      V1 : Node_Kind;\n+      V2 : Node_Kind;\n+      V3 : Node_Kind;\n+      V4 : Node_Kind;\n+      V5 : Node_Kind;\n+      V6 : Node_Kind;\n+      V7 : Node_Kind;\n+      V8 : Node_Kind;\n+      V9 : Node_Kind) return Boolean\n+   is\n+   begin\n+      return Nkind_In (Nkind (N), V1, V2, V3, V4, V5, V6, V7, V8, V9);\n+   end Nkind_In;\n    --------\n    -- No --\n    --------"}, {"sha": "da0b28874c68a0635aa7993e999bc1cb98313373", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -602,6 +602,18 @@ package Atree is\n       V7 : Node_Kind;\n       V8 : Node_Kind) return Boolean;\n \n+   function Nkind_In\n+     (N  : Node_Id;\n+      V1 : Node_Kind;\n+      V2 : Node_Kind;\n+      V3 : Node_Kind;\n+      V4 : Node_Kind;\n+      V5 : Node_Kind;\n+      V6 : Node_Kind;\n+      V7 : Node_Kind;\n+      V8 : Node_Kind;\n+      V9 : Node_Kind) return Boolean;\n+\n    pragma Inline (Nkind_In);\n    --  Inline all above functions\n "}, {"sha": "4cf3e0c01a5838c2149dae23fbf4b7d5429a844d", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -327,7 +327,6 @@ package body Impunit is\n      \"s-addima\",    -- System.Address_Image\n      \"s-assert\",    -- System.Assertions\n      \"s-memory\",    -- System.Memory\n-     \"s-os_lib\",    -- System.Os_Lib\n      \"s-parint\",    -- System.Partition_Interface\n      \"s-pooglo\",    -- System.Pool_Global\n      \"s-pooloc\",    -- System.Pool_Local"}, {"sha": "d675decd68eeab5dce3b1abb6f599faf14ef7f61", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -29,7 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n package body Output is\n "}, {"sha": "b5dd2a86a7bf50e2ccb36c9654560b401204cd45", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -76,7 +76,6 @@ pragma Style_Checks (\"M32766\");\n  **  $ DEFINE/USER SYS$OUTPUT s-oscons-tmplt.s\n  **  $ RUN s-oscons-tmplt\n  **  $ RUN xoscons\n- **\n  **/\n \n #include <stdlib.h>\n@@ -90,7 +89,13 @@ pragma Style_Checks (\"M32766\");\n #endif\n \n #if defined (__vxworks)\n-#include <vxWorks.h>\n+\n+/**\n+ ** For VxWorks, always include vxWorks.h (gsocket.h provides it only for\n+ ** the case of runtime libraries that support sockets).\n+ **/\n+\n+# include <vxWorks.h>\n #endif\n \n #include \"gsocket.h\""}, {"sha": "7a0108511fb2f87390a6fde1e4c3aec1b70781b8", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -2896,7 +2896,7 @@ package body Sem_Util is\n    --------------------------\n \n    procedure Find_Overlaid_Entity\n-     (N : Node_Id;\n+     (N   : Node_Id;\n       Ent : out Entity_Id;\n       Off : out Boolean)\n    is\n@@ -3953,7 +3953,8 @@ package body Sem_Util is\n          elsif Nkind (Expr) = N_Indexed_Component then\n             declare\n                Typ : constant Entity_Id := Etype (Prefix (Expr));\n-               Ind : constant Node_Id := First_Index (Typ);\n+               Ind : constant Node_Id   := First_Index (Typ);\n+\n             begin\n                --  Bit packed array always generates unknown alignment\n \n@@ -3992,8 +3993,8 @@ package body Sem_Util is\n          elsif Known_Alignment (Obj) then\n             declare\n                ObjA : constant Uint := Alignment (Obj);\n-               ExpA : Uint := No_Uint;\n-               SizA : Uint := No_Uint;\n+               ExpA : Uint          := No_Uint;\n+               SizA : Uint          := No_Uint;\n \n             begin\n                --  If alignment of Obj is 1, then we are always OK\n@@ -4071,9 +4072,8 @@ package body Sem_Util is\n                end if;\n             end;\n \n-         --  If we do not know required alignment, any non-zero offset is\n-         --  a potential problem (but certainly may be OK, so result is\n-         --  unknown).\n+         --  If we do not know required alignment, any non-zero offset is a\n+         --  potential problem (but certainly may be OK, so result is unknown).\n \n          elsif Offs /= No_Uint then\n             Set_Result (Unknown);\n@@ -4099,8 +4099,8 @@ package body Sem_Util is\n \n                if Known_Alignment (Entity (Expr))\n                  and then\n-                   UI_To_Int (Alignment (Entity (Expr)))\n-                                 < Ttypes.Maximum_Alignment\n+                   UI_To_Int (Alignment (Entity (Expr))) <\n+                                                    Ttypes.Maximum_Alignment\n                then\n                   Set_Result (Unknown);\n \n@@ -4113,7 +4113,7 @@ package body Sem_Util is\n                  and then\n                    (UI_To_Int (Esize (Entity (Expr))) mod\n                      (Ttypes.Maximum_Alignment * Ttypes.System_Storage_Unit))\n-                         /= 0\n+                                                                        /= 0\n                then\n                   Set_Result (Unknown);\n \n@@ -4130,7 +4130,7 @@ package body Sem_Util is\n          --  Unknown, since that result will be set in any case.\n \n          elsif Default /= Unknown\n-           and then (Has_Size_Clause (Etype (Expr))\n+           and then (Has_Size_Clause      (Etype (Expr))\n                       or else\n                      Has_Alignment_Clause (Etype (Expr)))\n          then\n@@ -4169,17 +4169,16 @@ package body Sem_Util is\n    ----------------------\n \n    function Has_Declarations (N : Node_Id) return Boolean is\n-      K : constant Node_Kind := Nkind (N);\n-   begin\n-      return    K = N_Accept_Statement\n-        or else K = N_Block_Statement\n-        or else K = N_Compilation_Unit_Aux\n-        or else K = N_Entry_Body\n-        or else K = N_Package_Body\n-        or else K = N_Protected_Body\n-        or else K = N_Subprogram_Body\n-        or else K = N_Task_Body\n-        or else K = N_Package_Specification;\n+   begin\n+      return Nkind_In (Nkind (N), N_Accept_Statement,\n+                                  N_Block_Statement,\n+                                  N_Compilation_Unit_Aux,\n+                                  N_Entry_Body,\n+                                  N_Package_Body,\n+                                  N_Protected_Body,\n+                                  N_Subprogram_Body,\n+                                  N_Task_Body,\n+                                  N_Package_Specification);\n    end Has_Declarations;\n \n    -------------------------------------------"}, {"sha": "44d6c3ef5be06a086f06eabadb7e985b083608d3", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -321,15 +321,15 @@ package Sem_Util is\n    --  type denote the discriminant at the same position in this new type.\n \n    procedure Find_Overlaid_Entity\n-     (N : Node_Id;\n+     (N   : Node_Id;\n       Ent : out Entity_Id;\n       Off : out Boolean);\n-   --  The node N should be an address representation clause. Determines if\n-   --  the target expression is the address of an entity with an optional\n-   --  offset. If so, set Ent to the entity and, if there is an offset, set\n-   --  Off to True, otherwise to False. If N is not an address representation\n+   --  The node N should be an address representation clause. Determines if the\n+   --  target expression is the address of an entity with an optional offset.\n+   --  If so, Ent is set to the entity and, if there is an offset, Off is set\n+   --  to True, otherwise to False. If N is not an address representation\n    --  clause, or if it is not possible to determine that the address is of\n-   --  this form, then set Ent to Empty.\n+   --  this form, then Ent is set to Empty, and Off is set to False.\n \n    function Find_Parameter_Type (Param : Node_Id) return Entity_Id;\n    --  Return the type of formal parameter Param as determined by its"}, {"sha": "2ed3ad3ff8519bb6e9ab55ddbd2edf6d4cd5b67a", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -5822,6 +5822,31 @@ package body Sinfo is\n              T = V8;\n    end Nkind_In;\n \n+\n+   function Nkind_In\n+     (T  : Node_Kind;\n+      V1 : Node_Kind;\n+      V2 : Node_Kind;\n+      V3 : Node_Kind;\n+      V4 : Node_Kind;\n+      V5 : Node_Kind;\n+      V6 : Node_Kind;\n+      V7 : Node_Kind;\n+      V8 : Node_Kind;\n+      V9 : Node_Kind) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3 or else\n+             T = V4 or else\n+             T = V5 or else\n+             T = V6 or else\n+             T = V7 or else\n+             T = V8 or else\n+             T = V9;\n+   end Nkind_In;\n+\n    -----------------\n    -- Pragma_Name --\n    -----------------"}, {"sha": "686481346b81e991530cac330bae212d137344c5", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef76538fbbe91be4c00dd874750e924845d9b289/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ef76538fbbe91be4c00dd874750e924845d9b289", "patch": "@@ -9371,6 +9371,18 @@ package Sinfo is\n       V7 : Node_Kind;\n       V8 : Node_Kind) return Boolean;\n \n+   function Nkind_In\n+     (T  : Node_Kind;\n+      V1 : Node_Kind;\n+      V2 : Node_Kind;\n+      V3 : Node_Kind;\n+      V4 : Node_Kind;\n+      V5 : Node_Kind;\n+      V6 : Node_Kind;\n+      V7 : Node_Kind;\n+      V8 : Node_Kind;\n+      V9 : Node_Kind) return Boolean;\n+\n    pragma Inline (Nkind_In);\n    --  Inline all above functions\n "}]}