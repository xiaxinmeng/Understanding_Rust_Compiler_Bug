{"sha": "12c83d0b3529153a3725d4f28db68b50ab967fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJjODNkMGIzNTI5MTUzYTM3MjVkNGYyOGRiNjhiNTBhYjk2N2ZkZA==", "commit": {"author": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-10-14T14:35:44Z"}, "committer": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-10-14T14:35:44Z"}, "message": "Initial revision\n\nFrom-SVN: r2459", "tree": {"sha": "301b97784342a5d3181d47501862a56d72737343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/301b97784342a5d3181d47501862a56d72737343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12c83d0b3529153a3725d4f28db68b50ab967fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c83d0b3529153a3725d4f28db68b50ab967fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12c83d0b3529153a3725d4f28db68b50ab967fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c83d0b3529153a3725d4f28db68b50ab967fdd/comments", "author": null, "committer": null, "parents": [{"sha": "eee4bff6c2e7c18f5dc93387ad83d21370074f81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee4bff6c2e7c18f5dc93387ad83d21370074f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee4bff6c2e7c18f5dc93387ad83d21370074f81"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "4f168a6938edc94074d23bae09af988a11867a08", "filename": "gcc/config/pa/xm-pa.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c83d0b3529153a3725d4f28db68b50ab967fdd/gcc%2Fconfig%2Fpa%2Fxm-pa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c83d0b3529153a3725d4f28db68b50ab967fdd/gcc%2Fconfig%2Fpa%2Fxm-pa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fxm-pa.h?ref=12c83d0b3529153a3725d4f28db68b50ab967fdd", "patch": "@@ -0,0 +1,75 @@\n+/* Configuration for GNU C-compiler for PA-RISC.\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Contributed by Michael Tiemann (tiemann@cygnus.com).\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#ifdef hpux\n+\n+#include <magic.h>\n+#if defined(SHL_MAGIC)\n+#define hpux8 1\n+#endif\n+\n+#define USG\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+\n+#else /* hpux */\n+#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)\n+extern int errno;\n+#endif /* hpux */\n+\n+/* #defines that need visibility everywhere.  */\n+#define FALSE 0\n+#define TRUE 1\n+\n+/* This describes the machine the compiler is hosted on.  */\n+#define HOST_BITS_PER_CHAR 8\n+#define HOST_BITS_PER_SHORT 16\n+#define HOST_BITS_PER_INT 32\n+#define HOST_BITS_PER_LONG 32\n+#define HOST_BITS_PER_LONGLONG 64\n+\n+/* Doubles are stored in memory with the high order word first.  This\n+   matters when cross-compiling.  */\n+#define HOST_WORDS_BIG_ENDIAN 1\n+\n+/* Place any machine-dependent include files here, in case we\n+   are bootstrapping.  */\n+\n+/* target machine dependencies.\n+   tm.h is a symbolic link to the actual target specific file.   */\n+#include \"tm.h\"\n+\n+/* Arguments to use with `exit'.  */\n+#define SUCCESS_EXIT_CODE 0\n+#define FATAL_EXIT_CODE 33\n+\n+#if 0\n+/* If compiled with GNU C, use the built-in alloca */\n+#ifdef __GNUC__\n+#define alloca __builtin_alloca\n+#endif\n+#endif\n+\n+/* Don't try to use sys_siglist.  */\n+#define NO_SYS_SIGLIST\n+\n+/* HP's compiler has problems with enum bitfields.  */\n+#define ONLY_INT_FIELDS"}]}