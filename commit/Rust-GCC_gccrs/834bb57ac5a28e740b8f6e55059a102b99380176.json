{"sha": "834bb57ac5a28e740b8f6e55059a102b99380176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0YmI1N2FjNWEyOGU3NDBiOGY2ZTU1MDU5YTEwMmI5OTM4MDE3Ng==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-03-25T16:49:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:27Z"}, "message": "[Ada] Compiler locks up with -gnatX and formal subprogram with aspects\n\n2020-06-12  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Find_Matching_Actual): Add guard on search loops\n\tto detect a compilation error when using a compiler built\n\twithout assertions.\n\t(Instantiate_Formal_Subprogram): Create a new subprogram name\n\tfor the actual only if formal has contract aspects and expansion\n\tis enabled.", "tree": {"sha": "b4713691503071d4687babdbd70609f6cb9dd8df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4713691503071d4687babdbd70609f6cb9dd8df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834bb57ac5a28e740b8f6e55059a102b99380176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834bb57ac5a28e740b8f6e55059a102b99380176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834bb57ac5a28e740b8f6e55059a102b99380176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834bb57ac5a28e740b8f6e55059a102b99380176/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a80b1eb72d6f227fc7d1cca36a6c29614a80ab10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80b1eb72d6f227fc7d1cca36a6c29614a80ab10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a80b1eb72d6f227fc7d1cca36a6c29614a80ab10"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "8972bedae8208c31380fc7e70a66d70f6f9020e0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834bb57ac5a28e740b8f6e55059a102b99380176/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834bb57ac5a28e740b8f6e55059a102b99380176/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=834bb57ac5a28e740b8f6e55059a102b99380176", "patch": "@@ -10403,7 +10403,9 @@ package body Sem_Ch12 is\n             =>\n                Formal_Ent := Defining_Identifier (F);\n \n-               while Chars (Act) /= Chars (Formal_Ent) loop\n+               while Present (Act)\n+                 and then Chars (Act) /= Chars (Formal_Ent)\n+               loop\n                   Next_Entity (Act);\n                end loop;\n \n@@ -10414,7 +10416,9 @@ package body Sem_Ch12 is\n             =>\n                Formal_Ent := Defining_Entity (F);\n \n-               while Chars (Act) /= Chars (Formal_Ent) loop\n+               while Present (Act)\n+                 and then Chars (Act) /= Chars (Formal_Ent)\n+               loop\n                   Next_Entity (Act);\n                end loop;\n \n@@ -10934,13 +10938,16 @@ package body Sem_Ch12 is\n       --  Create new entity for the actual (New_Copy_Tree does not), and\n       --  indicate that it is an actual.\n \n-      --  If the actual is not an entity and the formal includes aspect\n-      --  specifications for contracts, we create an internal name for\n-      --  the renaming declaration. The constructed wrapper contains a\n-      --  call to the entity in the renaming.\n+      --  If the actual is not an entity (i.e. an attribute reference)\n+      --  and the formal includes aspect specifications for contracts,\n+      --  we create an internal name for the renaming declaration. The\n+      --  constructed wrapper contains a call to the entity in the renaming.\n+      --  This is an expansion activity, as is the wrapper creation.\n \n       if Ada_Version >= Ada_2020\n-        and then Present (Aspect_Specifications (Analyzed_Formal))\n+        and then Has_Contracts (Analyzed_Formal)\n+        and then not Is_Entity_Name (Actual)\n+        and then Expander_Active\n       then\n          New_Subp := Make_Temporary (Sloc (Actual), 'S');\n          Set_Defining_Unit_Name (New_Spec, New_Subp);"}]}