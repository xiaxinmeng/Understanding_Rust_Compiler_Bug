{"sha": "a04b23d8a4b8df18959c839795a59140689bb1f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0YjIzZDhhNGI4ZGYxODk1OWM4Mzk3OTVhNTkxNDA2ODliYjFmMw==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-18T14:42:21Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-18T14:42:21Z"}, "message": "re PR fortran/50420 ([Coarray] lcobound doesn't accept coarray subcomponents)\n\n\tPR fortran/50420\n\t* trans-array.c (gfc_conv_expr_descriptor): Count codimensions starting\n\tfrom zero, and add then the relevant offset (either ndim or loop.dimen)\n\tdepending on context.\n\nFrom-SVN: r180142", "tree": {"sha": "0ac4083fa009b1767348d572f86c658ca468ebf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac4083fa009b1767348d572f86c658ca468ebf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04b23d8a4b8df18959c839795a59140689bb1f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04b23d8a4b8df18959c839795a59140689bb1f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04b23d8a4b8df18959c839795a59140689bb1f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04b23d8a4b8df18959c839795a59140689bb1f3/comments", "author": null, "committer": null, "parents": [{"sha": "7c5950bd7f9afd05ea528fc3d42ceb63af1fd8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c5950bd7f9afd05ea528fc3d42ceb63af1fd8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c5950bd7f9afd05ea528fc3d42ceb63af1fd8de"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "06a65a4b475d7f0277e044d0451584316c3cfe63", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04b23d8a4b8df18959c839795a59140689bb1f3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04b23d8a4b8df18959c839795a59140689bb1f3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a04b23d8a4b8df18959c839795a59140689bb1f3", "patch": "@@ -1,3 +1,10 @@\n+2011-10-18  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50420\n+\t* trans-array.c (gfc_conv_expr_descriptor): Count codimensions starting\n+\tfrom zero, and add then the relevant offset (either ndim or loop.dimen)\n+\tdepending on context.\n+\n 2011-10-18  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_conv_expr_descriptor): Save some horizontal space."}, {"sha": "0da1720c40b1c1325903937463fdbe78571a30e0", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04b23d8a4b8df18959c839795a59140689bb1f3/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04b23d8a4b8df18959c839795a59140689bb1f3/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=a04b23d8a4b8df18959c839795a59140689bb1f3", "patch": "@@ -5981,25 +5981,24 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n \t  gfc_array_ref *ar = &info->ref->u.ar;\n \n \t  codim = gfc_get_corank (expr);\n-\t  for (n = ss->data.info.dimen; n < ss->data.info.dimen + codim - 1;\n-\t       n++)\n+\t  for (n = 0; n < codim - 1; n++)\n \t    {\n \t      /* Make sure we are not lost somehow.  */\n-\t      gcc_assert (ar->dimen_type[n] == DIMEN_THIS_IMAGE);\n+\t      gcc_assert (ar->dimen_type[n + ndim] == DIMEN_THIS_IMAGE);\n \n \t      /* Make sure the call to gfc_conv_section_startstride won't\n \t         generate unnecessary code to calculate stride.  */\n-\t      gcc_assert (ar->stride[n] == NULL);\n+\t      gcc_assert (ar->stride[n + ndim] == NULL);\n \n-\t      gfc_conv_section_startstride (&loop, ss, n);\n-\t      loop.from[n] = info->start[n];\n-\t      loop.to[n]   = info->end[n];\n+\t      gfc_conv_section_startstride (&loop, ss, n + ndim);\n+\t      loop.from[n + loop.dimen] = info->start[n + ndim];\n+\t      loop.to[n + loop.dimen]   = info->end[n + ndim];\n \t    }\n \n-\t  gcc_assert (n == ss->data.info.dimen + codim - 1);\n+\t  gcc_assert (n == codim - 1);\n \t  evaluate_bound (&loop.pre, info->start, ar->start,\n-\t\t\t  info->descriptor, n, true);\n-\t  loop.from[n] = info->start[n];\n+\t\t\t  info->descriptor, n + ndim, true);\n+\t  loop.from[n + loop.dimen] = info->start[n + ndim];\n \t}\n       else\n \tcodim = 0;"}]}