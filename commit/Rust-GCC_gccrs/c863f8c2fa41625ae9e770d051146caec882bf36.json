{"sha": "c863f8c2fa41625ae9e770d051146caec882bf36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2M2Y4YzJmYTQxNjI1YWU5ZTc3MGQwNTExNDZjYWVjODgyYmYzNg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-23T16:37:58Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-23T16:37:58Z"}, "message": "cse.c (approx_reg_cost_1, [...]): Recode to not use regsets.\n\n2002-05-23  David S. Miller  <davem@redhat.com>\n\n\t* cse.c (approx_reg_cost_1, approx_reg_cost): Recode to not use\n\tregsets.\n\nFrom-SVN: r53793", "tree": {"sha": "7db800c574409ae957b5ba34bbdd00d9fb66930d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7db800c574409ae957b5ba34bbdd00d9fb66930d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c863f8c2fa41625ae9e770d051146caec882bf36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c863f8c2fa41625ae9e770d051146caec882bf36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c863f8c2fa41625ae9e770d051146caec882bf36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c863f8c2fa41625ae9e770d051146caec882bf36/comments", "author": null, "committer": null, "parents": [{"sha": "da2c31aee994a650c6aa9f36e556eeec8396e1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2c31aee994a650c6aa9f36e556eeec8396e1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2c31aee994a650c6aa9f36e556eeec8396e1df"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "f3ed28a0c2f25fa9210b602988f569029d76ec3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c863f8c2fa41625ae9e770d051146caec882bf36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c863f8c2fa41625ae9e770d051146caec882bf36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c863f8c2fa41625ae9e770d051146caec882bf36", "patch": "@@ -1,3 +1,8 @@\n+2002-05-23  David S. Miller  <davem@redhat.com>\n+\n+\t* cse.c (approx_reg_cost_1, approx_reg_cost): Recode to not use\n+\tregsets.\n+\n 2002-05-23  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* c-common.c (warn_nonnull): Declare."}, {"sha": "9cc048b85f0f416b9d02288ae6dd267f7339f1bb", "filename": "gcc/cse.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c863f8c2fa41625ae9e770d051146caec882bf36/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c863f8c2fa41625ae9e770d051146caec882bf36/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c863f8c2fa41625ae9e770d051146caec882bf36", "patch": "@@ -720,10 +720,25 @@ approx_reg_cost_1 (xp, data)\n      void *data;\n {\n   rtx x = *xp;\n-  regset set = (regset) data;\n+  int *cost_p = data;\n \n   if (x && GET_CODE (x) == REG)\n-    SET_REGNO_REG_SET (set, REGNO (x));\n+    {\n+      unsigned int regno = REGNO (x);\n+\n+      if (! CHEAP_REGNO (regno))\n+\t{\n+\t  if (regno < FIRST_PSEUDO_REGISTER)\n+\t    {\n+\t      if (SMALL_REGISTER_CLASSES)\n+\t\treturn 1;\n+\t      *cost_p += 2;\n+\t    }\n+\t  else\n+\t    *cost_p += 1;\n+\t}\n+    }\n+\n   return 0;\n }\n \n@@ -736,28 +751,12 @@ static int\n approx_reg_cost (x)\n      rtx x;\n {\n-  regset_head set;\n-  int i;\n   int cost = 0;\n-  int hardregs = 0;\n-\n-  INIT_REG_SET (&set);\n-  for_each_rtx (&x, approx_reg_cost_1, (void *) &set);\n-\n-  EXECUTE_IF_SET_IN_REG_SET\n-    (&set, 0, i,\n-     {\n-       if (! CHEAP_REGNO (i))\n-\t {\n-\t   if (i < FIRST_PSEUDO_REGISTER)\n-\t     hardregs++;\n \n-\t   cost += i < FIRST_PSEUDO_REGISTER ? 2 : 1;\n-\t }\n-     });\n+  if (for_each_rtx (&x, approx_reg_cost_1, (void *) &cost))\n+    return MAX_COST;\n \n-  CLEAR_REG_SET (&set);\n-  return hardregs && SMALL_REGISTER_CLASSES ? MAX_COST : cost;\n+  return cost;\n }\n \n /* Return a negative value if an rtx A, whose costs are given by COST_A"}]}