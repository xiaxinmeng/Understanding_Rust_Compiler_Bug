{"sha": "47bcd07d56940085a9b606833d729812ea9c02a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiY2QwN2Q1Njk0MDA4NWE5YjYwNjgzM2Q3Mjk4MTJlYTljMDJhMg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2004-10-01T18:26:37Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-10-01T18:26:37Z"}, "message": "common.opt (ftree-loop-ivcanon): Enable by default.\n\n\t* common.opt (ftree-loop-ivcanon): Enable by default.\n\t* tree-ssa-loop-ivcanon.c (try_unroll_loop_completely):\n\tEnable complete loop unrolling.\n\t(canonicalize_induction_variables, tree_unroll_loops_completely):\n\tReset scev info.\n\n\t* gcc.dg/tree-ssa/loop-1.c: Check that unrolling occurs already on\n\ttree level.\n\nFrom-SVN: r88404", "tree": {"sha": "730348fe9c15ef1c758714891bae729413c7f6e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/730348fe9c15ef1c758714891bae729413c7f6e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47bcd07d56940085a9b606833d729812ea9c02a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47bcd07d56940085a9b606833d729812ea9c02a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47bcd07d56940085a9b606833d729812ea9c02a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47bcd07d56940085a9b606833d729812ea9c02a2/comments", "author": null, "committer": null, "parents": [{"sha": "734268f5901c7691b3fc9e33a9e22fc1c4f8b0bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734268f5901c7691b3fc9e33a9e22fc1c4f8b0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/734268f5901c7691b3fc9e33a9e22fc1c4f8b0bb"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "f5e780e8cc2e21d16bad3ede963aa370acd26025", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47bcd07d56940085a9b606833d729812ea9c02a2", "patch": "@@ -1,3 +1,11 @@\n+2004-10-01  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* common.opt (ftree-loop-ivcanon): Enable by default.\n+\t* tree-ssa-loop-ivcanon.c (try_unroll_loop_completely):\n+\tEnable complete loop unrolling.\n+\t(canonicalize_induction_variables, tree_unroll_loops_completely):\n+\tReset scev info.\n+\n 2004-01-01  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (thumb_compute_saved_rag_mask): Or with bitmask,"}, {"sha": "2c5538c4a3ebf35147082532cb1c31a0283a32b9", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=47bcd07d56940085a9b606833d729812ea9c02a2", "patch": "@@ -857,7 +857,7 @@ Common Report Var(flag_tree_loop_linear)\n Enable linear loop transforms on trees\n \n ftree-loop-ivcanon\n-Common Report Var(flag_tree_loop_ivcanon)\n+Common Report Var(flag_tree_loop_ivcanon) Init(1)\n Create canonical induction variables in loops\n \n ftree-loop-optimize"}, {"sha": "901edf25804f65241448c8671ec12d2410b9ad14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47bcd07d56940085a9b606833d729812ea9c02a2", "patch": "@@ -1,3 +1,8 @@\n+2004-10-01  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/loop-1.c: Check that unrolling occurs already on\n+\ttree level.\n+\n 2004-10-01  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* gcc.dg/tree-ssa/pr17343.c: Remove."}, {"sha": "f2860997a62ac80075e78a8d9ce36dde8bfb215c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=47bcd07d56940085a9b606833d729812ea9c02a2", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -ftree-loop-ivcanon -funroll-loops -fdump-tree-ivcanon-details\" } */\n+/* { dg-options \"-O1 -ftree-loop-ivcanon -funroll-loops -fdump-tree-ivcanon-details -fdump-tree-cunroll-details -fdump-tree-vars\" } */\n \n /* On 31-bit S/390 the function address will be stored (once) in the literal pool,\n    so scan-assembler-times \"foo\" will return 1 even if the loop is fully unrolled.\n@@ -17,6 +17,8 @@ void xxx(void)\n /* We should be able to find out that the loop iterates four times and unroll it completely.  */\n \n /* { dg-final { scan-tree-dump-times \"Added canonical iv to loop 1, 4 iterations\" 1 \"ivcanon\"} } */\n+/* { dg-final { scan-tree-dump-times \"Unrolled loop 1 completely\" 1 \"cunroll\"} } */\n+/* { dg-final { scan-tree-dump-times \"foo\" 5 \"vars\"} } */\n /* { dg-final { scan-assembler-times \"foo\" 5} } */\n \n "}, {"sha": "4635a023962a57f555af6cd2d7a2a4ecf74e5636", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bcd07d56940085a9b606833d729812ea9c02a2/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=47bcd07d56940085a9b606833d729812ea9c02a2", "patch": "@@ -175,12 +175,9 @@ try_unroll_loop_completely (struct loops *loops ATTRIBUTE_UNUSED,\n       COND_EXPR_COND (cond) = dont_exit;\n       modify_stmt (cond);\n \n-#if 0\n-      /* The necessary infrastructure is not in yet.  */\n       if (!tree_duplicate_loop_to_header_edge (loop, loop_preheader_edge (loop),\n \t\t\t\t\t       loops, n_unroll, NULL,\n \t\t\t\t\t       NULL, NULL, NULL, 0))\n-#endif\n \t{\n \t  COND_EXPR_COND (cond) = old_cond;\n \t  return false;\n@@ -263,6 +260,10 @@ canonicalize_induction_variables (struct loops *loops)\n \tcanonicalize_loop_induction_variables (loops, loop, true, false, true);\n     }\n \n+  /* Clean up the information about numbers of iterations, since brute force\n+     evaluation could reveal new information.  */\n+  scev_reset ();\n+\n #if 0\n   /* The necessary infrastructure is not in yet.  */\n   if (changed)\n@@ -291,6 +292,10 @@ tree_unroll_loops_completely (struct loops *loops)\n \t\t\t\t\t\t\t!flag_tree_loop_ivcanon);\n     }\n \n+  /* Clean up the information about numbers of iterations, since complete\n+     unrolling might have invalidated it.  */\n+  scev_reset ();\n+\n #if 0\n   /* The necessary infrastructure is not in yet.  */\n   if (changed)"}]}