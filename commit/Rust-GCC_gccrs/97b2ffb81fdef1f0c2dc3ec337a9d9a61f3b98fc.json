{"sha": "97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiMmZmYjgxZmRlZjFmMGMyZGMzZWMzMzdhOWQ5YTYxZjNiOThmYw==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2019-12-12T10:03:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:03:43Z"}, "message": "[Ada] Tighten up semantic checking for protected subprogram declarations\n\n2019-12-12  Steve Baird  <baird@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb\n\t(New_Overloaded_Entity.Check_Conforming_Paramters): Add new\n\tConformance_Type parameter. With the value of\n\tSubtype_Conformant, the behavior of Check_Conforming_Parameters\n\tis unchanged.  The call in Matching_Entry_Or_Subprogram to\n\tinstead passes in Type_Conformant. This corresponds to the use\n\tof \"type conformant\" in Ada RM 9.4(11.4/3).\n\t(New_Overloaded_Entity.Has_Matching_Entry_Or_Subprogram): Add\n\tnew Normalized_First_Parameter_Type function to help in ignoring\n\tthe distinction between protected and access-to-protected first\n\tparameters when checking prefixed-view profile matching. Replace\n\tcomputations of the type of the first parameter with calls to\n\tthis function as appropriate.\n\nFrom-SVN: r279303", "tree": {"sha": "8cb96956fab8552d2c8f818becd4a78fc56d7484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cb96956fab8552d2c8f818becd4a78fc56d7484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93350089be1a068328192eb1a89f232099d0f0c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93350089be1a068328192eb1a89f232099d0f0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93350089be1a068328192eb1a89f232099d0f0c7"}], "stats": {"total": 75, "additions": 62, "deletions": 13}, "files": [{"sha": "19e7fea30b95c92250e9de593851f5ac15644614", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "patch": "@@ -1,3 +1,19 @@\n+2019-12-12  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch6.adb\n+\t(New_Overloaded_Entity.Check_Conforming_Paramters): Add new\n+\tConformance_Type parameter. With the value of\n+\tSubtype_Conformant, the behavior of Check_Conforming_Parameters\n+\tis unchanged.  The call in Matching_Entry_Or_Subprogram to\n+\tinstead passes in Type_Conformant. This corresponds to the use\n+\tof \"type conformant\" in Ada RM 9.4(11.4/3).\n+\t(New_Overloaded_Entity.Has_Matching_Entry_Or_Subprogram): Add\n+\tnew Normalized_First_Parameter_Type function to help in ignoring\n+\tthe distinction between protected and access-to-protected first\n+\tparameters when checking prefixed-view profile matching. Replace\n+\tcomputations of the type of the first parameter with calls to\n+\tthis function as appropriate.\n+\n 2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch5.adb: (Analyze_Iterator_Specification): If the"}, {"sha": "988edc682b12a07015e160a1495a10e5968d653b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 46, "deletions": 13, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=97b2ffb81fdef1f0c2dc3ec337a9d9a61f3b98fc", "patch": "@@ -10487,9 +10487,10 @@ package body Sem_Ch6 is\n       is\n          function Check_Conforming_Parameters\n            (E1_Param : Node_Id;\n-            E2_Param : Node_Id) return Boolean;\n+            E2_Param : Node_Id;\n+            Ctype    : Conformance_Type) return Boolean;\n          --  Starting from the given parameters, check that all the parameters\n-         --  of two entries or subprograms are subtype conformant. Used to skip\n+         --  of two entries or subprograms are conformant. Used to skip\n          --  the check on the controlling argument.\n \n          function Matching_Entry_Or_Subprogram\n@@ -10516,26 +10517,38 @@ package body Sem_Ch6 is\n          --  whose name matches the original name of Subp and has a profile\n          --  conformant with the profile of Subp; return Empty if not found.\n \n+         function Normalized_First_Parameter_Type\n+           (E : Entity_Id) return Entity_Id;\n+         --  Return the type of the first parameter unless that type\n+         --  is an anonymous access type, in which case return the\n+         --  designated type. Used to treat anonymous-access-to-synchronized\n+         --  the same as synchronized for purposes of checking for\n+         --  prefixed view profile conflicts.\n+\n          ---------------------------------\n          -- Check_Conforming_Parameters --\n          ---------------------------------\n \n          function Check_Conforming_Parameters\n            (E1_Param : Node_Id;\n-            E2_Param : Node_Id) return Boolean\n+            E2_Param : Node_Id;\n+            Ctype    : Conformance_Type) return Boolean\n          is\n             Param_E1 : Node_Id := E1_Param;\n             Param_E2 : Node_Id := E2_Param;\n \n          begin\n             while Present (Param_E1) and then Present (Param_E2) loop\n-               if Ekind (Defining_Identifier (Param_E1)) /=\n-                    Ekind (Defining_Identifier (Param_E2))\n-                 or else not\n+               if (Ctype >= Mode_Conformant) and then\n+                 Ekind (Defining_Identifier (Param_E1)) /=\n+                 Ekind (Defining_Identifier (Param_E2))\n+               then\n+                  return False;\n+               elsif not\n                    Conforming_Types\n                      (Find_Parameter_Type (Param_E1),\n                       Find_Parameter_Type (Param_E2),\n-                      Subtype_Conformant)\n+                      Ctype)\n                then\n                   return False;\n                end if;\n@@ -10568,7 +10581,8 @@ package body Sem_Ch6 is\n                  and then\n                    Check_Conforming_Parameters\n                      (First (Parameter_Specifications (Parent (E))),\n-                      Next (First (Parameter_Specifications (Parent (Subp)))))\n+                      Next (First (Parameter_Specifications (Parent (Subp)))),\n+                      Type_Conformant)\n                then\n                   return E;\n                end if;\n@@ -10608,7 +10622,8 @@ package body Sem_Ch6 is\n                  and then\n                    Check_Conforming_Parameters\n                      (First (Parameter_Specifications (Parent (Ent))),\n-                      Next (First (Parameter_Specifications (Parent (E)))))\n+                      Next (First (Parameter_Specifications (Parent (E)))),\n+                      Subtype_Conformant)\n                then\n                   return E;\n                end if;\n@@ -10662,6 +10677,21 @@ package body Sem_Ch6 is\n             return Empty;\n          end Matching_Original_Protected_Subprogram;\n \n+         -------------------------------------\n+         -- Normalized_First_Parameter_Type --\n+         -------------------------------------\n+\n+         function Normalized_First_Parameter_Type\n+           (E : Entity_Id) return Entity_Id\n+         is\n+            Result : Entity_Id := Etype (First_Entity (E));\n+         begin\n+            if Ekind (Result) = E_Anonymous_Access_Type then\n+               Result := Designated_Type (Result);\n+            end if;\n+            return Result;\n+         end Normalized_First_Parameter_Type;\n+\n       --  Start of processing for Has_Matching_Entry_Or_Subprogram\n \n       begin\n@@ -10672,20 +10702,23 @@ package body Sem_Ch6 is\n          if Comes_From_Source (E)\n            and then Is_Subprogram (E)\n            and then Present (First_Entity (E))\n-           and then Is_Concurrent_Record_Type (Etype (First_Entity (E)))\n+           and then Is_Concurrent_Record_Type\n+                      (Normalized_First_Parameter_Type (E))\n          then\n             if Scope (E) =\n                  Scope (Corresponding_Concurrent_Type\n-                         (Etype (First_Entity (E))))\n+                         (Normalized_First_Parameter_Type (E)))\n               and then\n                 Present\n                   (Matching_Entry_Or_Subprogram\n-                     (Corresponding_Concurrent_Type (Etype (First_Entity (E))),\n+                     (Corresponding_Concurrent_Type\n+                        (Normalized_First_Parameter_Type (E)),\n                       Subp => E))\n             then\n                Report_Conflict (E,\n                  Matching_Entry_Or_Subprogram\n-                   (Corresponding_Concurrent_Type (Etype (First_Entity (E))),\n+                   (Corresponding_Concurrent_Type\n+                      (Normalized_First_Parameter_Type (E)),\n                     Subp => E));\n                return True;\n             end if;"}]}