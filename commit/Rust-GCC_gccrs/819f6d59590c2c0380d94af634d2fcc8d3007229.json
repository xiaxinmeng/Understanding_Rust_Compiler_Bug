{"sha": "819f6d59590c2c0380d94af634d2fcc8d3007229", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5ZjZkNTk1OTBjMmMwMzgwZDk0YWY2MzRkMmZjYzhkMzAwNzIyOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-24T22:50:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-24T22:50:34Z"}, "message": "(REAL_ARITHMETIC): Define.\n\n(LEGITIMATE_CONSTANT_P): Pass argument mode not VOIDmode to fp_literal.\n\nFrom-SVN: r9066", "tree": {"sha": "7758dfe968c108acfff957f64376926ef3690ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7758dfe968c108acfff957f64376926ef3690ae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819f6d59590c2c0380d94af634d2fcc8d3007229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f6d59590c2c0380d94af634d2fcc8d3007229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819f6d59590c2c0380d94af634d2fcc8d3007229", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f6d59590c2c0380d94af634d2fcc8d3007229/comments", "author": null, "committer": null, "parents": [{"sha": "0e089454b8dc1ddcf0f1d98023b27250c9d7b7d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e089454b8dc1ddcf0f1d98023b27250c9d7b7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e089454b8dc1ddcf0f1d98023b27250c9d7b7d9"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "4f81a2fcc6db292cacd8eea2acf935fd82867e58", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819f6d59590c2c0380d94af634d2fcc8d3007229/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819f6d59590c2c0380d94af634d2fcc8d3007229/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=819f6d59590c2c0380d94af634d2fcc8d3007229", "patch": "@@ -303,6 +303,10 @@ extern int target_flags;\n \f\n /* Target machine storage layout.  */\n \n+/* Define for cross-compilation from a host with a different float format\n+   or endianess (e.g. VAX, x86).  */\n+#define REAL_ARITHMETIC\n+\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields.  */\n #define BITS_BIG_ENDIAN 0\n@@ -940,10 +944,12 @@ extern struct rtx_def *i960_function_arg ();\n    is a legitimate general operand.\n    It is given that X satisfies CONSTANT_P.\n \n-   Anything but a CONST_DOUBLE can be made to work, excepting 0.0 and 1.0.  */\n+   Anything but a CONST_DOUBLE can be made to work, excepting 0.0 and 1.0.\n+\n+   ??? This probably should be defined to 1.  */\n \n #define LEGITIMATE_CONSTANT_P(X) \\\n-  ((GET_CODE (X) != CONST_DOUBLE) || fp_literal ((X), VOIDmode))\n+  ((GET_CODE (X) != CONST_DOUBLE) || fp_literal ((X), GET_MODE (X)))\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class."}]}