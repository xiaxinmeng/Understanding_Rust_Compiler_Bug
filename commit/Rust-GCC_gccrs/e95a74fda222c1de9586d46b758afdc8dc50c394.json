{"sha": "e95a74fda222c1de9586d46b758afdc8dc50c394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk1YTc0ZmRhMjIyYzFkZTk1ODZkNDZiNzU4YWZkYzhkYzUwYzM5NA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-08T20:00:52Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-08T20:00:52Z"}, "message": "debug.cc [...]: Include execinfo.h.\n\n2018-05-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* src/c++11/debug.cc [_GLIBCXX_HAVE_EXECINFO_H]: Include execinfo.h.\n\t[_GLIBCXX_HAVE_EXECINFO_H](_Error_formatter::_M_error): Render\n\tbacktrace.\n\nFrom-SVN: r260054", "tree": {"sha": "07c76ba2eaaa14bf1de6f1b70323e9d5f49d4900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c76ba2eaaa14bf1de6f1b70323e9d5f49d4900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e95a74fda222c1de9586d46b758afdc8dc50c394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95a74fda222c1de9586d46b758afdc8dc50c394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e95a74fda222c1de9586d46b758afdc8dc50c394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95a74fda222c1de9586d46b758afdc8dc50c394/comments", "author": null, "committer": null, "parents": [{"sha": "90aabc7e9be942324952d8705e753ff02cf631a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aabc7e9be942324952d8705e753ff02cf631a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90aabc7e9be942324952d8705e753ff02cf631a3"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "25430fd9e512ba581f7eef459424c60bbd974634", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e95a74fda222c1de9586d46b758afdc8dc50c394/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e95a74fda222c1de9586d46b758afdc8dc50c394/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e95a74fda222c1de9586d46b758afdc8dc50c394", "patch": "@@ -1,5 +1,9 @@\n 2018-05-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n+\t* src/c++11/debug.cc [_GLIBCXX_HAVE_EXECINFO_H]: Include execinfo.h.\n+\t[_GLIBCXX_HAVE_EXECINFO_H](_Error_formatter::_M_error): Render\n+\tbacktrace.\n+\n \t* include/debug/macros.h (__glibcxx_check_valid_range_at): New.\n \t* include/debug/functions.h (__check_valid_range): Use latter.\n \t* include/debug/macros.h (__glibcxx_check_valid_constructor_range): New,"}, {"sha": "ede6b703aae4bf93821b625fe6ad1281f5a4a4e4", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e95a74fda222c1de9586d46b758afdc8dc50c394/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e95a74fda222c1de9586d46b758afdc8dc50c394/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=e95a74fda222c1de9586d46b758afdc8dc50c394", "patch": "@@ -40,6 +40,10 @@\n \n #include <cxxabi.h> // for __cxa_demangle\n \n+#if defined _GLIBCXX_HAVE_EXECINFO_H\n+# include <execinfo.h> // for backtrace\n+#endif\n+\n #include \"mutex_pool.h\"\n \n using namespace std;\n@@ -1043,6 +1047,29 @@ namespace __gnu_debug\n \tprint_literal(ctx, \"\\n\");\n       }\n \n+#if defined _GLIBCXX_HAVE_EXECINFO_H\n+    {\n+      void* stack[32];\n+      int nb = backtrace(stack, 32);\n+\n+      // Note that we skip current method symbol.\n+      if (nb > 1)\n+\t{\n+\t  print_literal(ctx, \"Backtrace:\\n\");\n+\t  auto symbols = backtrace_symbols(stack, nb);\n+\t  for (int i = 1; i < nb; ++i)\n+\t    {\n+\t      print_word(ctx, symbols[i]);\n+\t      print_literal(ctx, \"\\n\");\n+\t    }\n+\n+\t  free(symbols);\n+\t  ctx._M_first_line = true;\n+\t  print_literal(ctx, \"\\n\");\n+\t}\n+    }\n+#endif\n+\n     print_literal(ctx, \"Error: \");\n \n     // Print the error message"}]}