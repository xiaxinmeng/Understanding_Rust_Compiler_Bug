{"sha": "d527c90aa56dfdcf6798f58ca0199e1a56043981", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUyN2M5MGFhNTZkZmRjZjY3OThmNThjYTAxOTllMWE1NjA0Mzk4MQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-15T23:00:22Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-15T23:00:22Z"}, "message": "In gcc/testsuite/: 2010-10-15 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/testsuite/:\n2010-10-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * objc.dg/gnu-api-2-object.m: New.\n\nFrom-SVN: r165529", "tree": {"sha": "92f69f57b2657e83cb7aefef2920f3c52105285e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92f69f57b2657e83cb7aefef2920f3c52105285e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d527c90aa56dfdcf6798f58ca0199e1a56043981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d527c90aa56dfdcf6798f58ca0199e1a56043981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d527c90aa56dfdcf6798f58ca0199e1a56043981", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d527c90aa56dfdcf6798f58ca0199e1a56043981/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28395a0239de38fd77e6c07d9fd5f7fc939c2f5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28395a0239de38fd77e6c07d9fd5f7fc939c2f5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28395a0239de38fd77e6c07d9fd5f7fc939c2f5b"}], "stats": {"total": 165, "additions": 165, "deletions": 0}, "files": [{"sha": "43f2aa0b45d7c805fd26ea13a9d6ea40030193bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d527c90aa56dfdcf6798f58ca0199e1a56043981/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d527c90aa56dfdcf6798f58ca0199e1a56043981/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d527c90aa56dfdcf6798f58ca0199e1a56043981", "patch": "@@ -1,3 +1,7 @@\n+2010-10-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/gnu-api-2-object.m: New.\n+\n 2010-10-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/gnu-api-2-method.m: New."}, {"sha": "6068411d79b91a73406bfaf2ed176c8c0dd48ef4", "filename": "gcc/testsuite/objc.dg/gnu-api-2-object.m", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d527c90aa56dfdcf6798f58ca0199e1a56043981/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d527c90aa56dfdcf6798f58ca0199e1a56043981/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m?ref=d527c90aa56dfdcf6798f58ca0199e1a56043981", "patch": "@@ -0,0 +1,161 @@\n+/* Test the Modern GNU Objective-C Runtime API.\n+\n+  This is test 'object', covering all functions starting with 'object'.  */\n+\n+/* { dg-do run } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n+\n+/* To get the modern GNU Objective-C Runtime API, you include\n+   objc/runtime.h.  */\n+#include <objc/runtime.h>\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <string.h>\n+\n+@interface MyRootClass\n+{ Class isa; }\n++ alloc;\n+- init;\n+@end\n+\n+@implementation MyRootClass\n++ alloc { return class_createInstance (self, 0); }\n+- init  { return self; }\n+@end\n+\n+@protocol MyProtocol\n+- (id) variable;\n+@end\n+\n+@protocol MySecondProtocol\n+- (id) setVariable: (id)value;\n+@end\n+\n+@interface MySubClass : MyRootClass <MyProtocol>\n+{ id variable_ivar; }\n+- (void) setVariable: (id)value;\n+- (id) variable;\n+@end\n+\n+@implementation MySubClass\n+- (void) setVariable: (id)value { variable_ivar = value; }\n+- (id) variable { return variable_ivar; }\n+@end\n+\n+@interface MySubSubClass : MySubClass\n+- (id) test;\n+@end\n+\n+@implementation MySubSubClass\n+- (id) test { return self; }\n+@end\n+\n+\n+\n+int main(int argc, void **args)\n+{\n+  /* Functions are tested in alphabetical order.  */\n+  \n+  printf (\"Testing object_copy () ...\\n\");\n+  {\n+    MySubClass *object_a = [[MySubClass alloc] init];\n+    MySubClass *object_b = object_copy (object_a, 0);\n+\n+    [object_b setVariable: object_a];\n+    if ([object_b variable] != object_a)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_dispose () ...\\n\");\n+  {\n+    MySubClass *object = [[MySubClass alloc] init];\n+\n+    object_dispose (object);\n+  }\n+\n+  printf (\"Testing object_getClass () ...\\n\");\n+  {\n+    MyRootClass *o = [[MySubClass alloc] init];\n+\n+    if (object_getClass (o) != objc_getClass (\"MySubClass\"))\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_getClassName () ...\\n\");\n+  {\n+    MyRootClass *o = [[MyRootClass alloc] init];\n+\n+    if (strcmp (object_getClassName (o), \"MyRootClass\") != 0)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_getIndexedIvars () ...\\n\");\n+  {\n+    if (object_getIndexedIvars ([[MyRootClass alloc] init]) == NULL)\n+      abort ();\n+  }\n+  \n+  printf (\"Testing object_getInstanceVariable () ...\\n\");\n+  {\n+    MySubClass *o = [[MySubClass alloc] init];\n+    id value;\n+\n+    [o setVariable: o];\n+\n+    if (object_getInstanceVariable (o, \"variable_ivar\", (void **)&value) == NULL)\n+      abort ();\n+\n+    if (value != o)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_getIvar () ...\\n\");\n+  {\n+    MySubClass *o = [[MySubClass alloc] init];\n+    Ivar ivar = class_getInstanceVariable (objc_getClass (\"MySubClass\"), \"variable_ivar\");\n+\n+    [o setVariable: o];\n+\n+    if (object_getIvar (o, ivar) != o)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_setClass () ...\\n\");\n+  {\n+    MySubClass *o = [[MySubClass alloc] init];\n+\n+    object_setClass (o, objc_getClass (\"MySubSubClass\"));\n+\n+    if ([(MySubSubClass *)o test] != o)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_setInstanceVariable () ...\\n\");\n+  {\n+    MySubClass *o = [[MySubClass alloc] init];\n+    \n+    [o setVariable: nil];\n+\n+    if (object_setInstanceVariable (o, \"variable_ivar\", (void *)o) == NULL)\n+      abort ();\n+\n+    if ([o variable] != o)\n+      abort ();\n+  }\n+\n+  printf (\"Testing object_setIvar () ...\\n\");\n+  {\n+    MySubClass *o = [[MySubClass alloc] init];\n+    MySubClass *value = [[MySubClass alloc] init];\n+    Ivar ivar = class_getInstanceVariable (objc_getClass (\"MySubClass\"), \"variable_ivar\");\n+    \n+    [o setVariable: o];\n+\n+    object_setIvar (o, ivar, value);\n+\n+    if ([o variable] != value)\n+      abort ();\n+  }  \n+\n+  return 0;\n+}"}]}