{"sha": "edaf3e0357bbc16c01ff9f341016a1e6969a617d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRhZjNlMDM1N2JiYzE2YzAxZmY5ZjM0MTAxNmExZTY5NjlhNjE3ZA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-09-28T04:37:41Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-09-28T04:37:41Z"}, "message": "c-decl.c (finish_function): Convert definition to ISO C90.\n\n\n\t* c-decl.c (finish_function): Convert definition to ISO C90.\n\t* ifcvt.c (mark_loop_exit_edges): Likewise.\n\t* ra-rewrite.c (emit_colors): Likewise.\n\nFor cp:\n\n\t* decl.c (cxx_builtin_type_decls): Convert to ISO C90 function\n\tdefinition.\n\t* init.c (push_base_cleanups): Likewise.\n\t* decl2.c (finish_file): Likewise.\n\t* mangle.c (init_mangle): Likewise.\n\t(dump_substitution_candidates): Likewise.\n\t* search.c: Likewise.\n\nFrom-SVN: r71872", "tree": {"sha": "2d57274d896402f7f0c0a9338f7d3dfc555c03af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d57274d896402f7f0c0a9338f7d3dfc555c03af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edaf3e0357bbc16c01ff9f341016a1e6969a617d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edaf3e0357bbc16c01ff9f341016a1e6969a617d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edaf3e0357bbc16c01ff9f341016a1e6969a617d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edaf3e0357bbc16c01ff9f341016a1e6969a617d/comments", "author": null, "committer": null, "parents": [{"sha": "6fb708633d529fafe3626c2b1b4d39a9dffe36bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb708633d529fafe3626c2b1b4d39a9dffe36bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb708633d529fafe3626c2b1b4d39a9dffe36bd"}], "stats": {"total": 95, "additions": 55, "deletions": 40}, "files": [{"sha": "4b1a9bf683ee2de5472c570c5641ea1e8c9bfe5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -1,3 +1,9 @@\n+2003-09-28  Andreas Jaeger  <aj@suse.de>\n+\n+\t* c-decl.c (finish_function): Convert definition to ISO C90.\n+\t* ifcvt.c (mark_loop_exit_edges): Likewise.\n+\t* ra-rewrite.c (emit_colors): Likewise.\n+\n 2003-09-27  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc (alpha*-dec-osf[45]*): Disable fixproto.\n@@ -79,7 +85,7 @@\n \tconfig/mips/mips.h, config/mips/mips.md, config/mips/netbsd.h,\n \tconfig/mips/openbsd.h, config/mips/r3900.h, config/mips/rtems.h,\n \tconfig/mips/vr.h, config/mn10300/linux.h,\n-\tconfig/mn10300/mn10300-protos.h, config/mn10300/mn10300.c, \t\n+\tconfig/mn10300/mn10300-protos.h, config/mn10300/mn10300.c,\n \tconfig/mn10300/mn10300.h, config/mn10300/mn10300.md,\n \tconfig/ns32k/__unorddf2.c, config/ns32k/__unordsf2.c,\n \tconfig/ns32k/netbsd.h, config/ns32k/ns32k-protos.h,\n@@ -140,7 +146,7 @@\n \n \t* config/s390/s390.md (\"builtin_setjmp_setup\"): Insn deleted.\n \t(\"builtin_longjmp\"): Insn deleted.\n-\t(\"save_stack_nonlocal\"): Save literal pool base pointer behind \n+\t(\"save_stack_nonlocal\"): Save literal pool base pointer behind\n \tbackchain and stack pointer.\n \t(\"restore_stack_nonlocal\"): Restore literal pool base pointer.\n \t* config/s390/s390.h (STACK_SAVEAREA_MODE): Double size of\n@@ -180,8 +186,8 @@\n \tconfig/i386/xm-cygwin.h, config/i386/xm-djgpp.h,\n \tconfig/i386/xm-mingw32.h, config/i386/xmmintrin.h: Replace\n \t\"GNU CC\", \"GNU compiler\", and \"GNU C-compiler\" with \"GCC\".\n-\t* config/i386/i386-aout.h, config/i386/i386-coff.h, \n-\tconfig/i386/i386-interix.h, config/i386/i386-interix3.h, \n+\t* config/i386/i386-aout.h, config/i386/i386-coff.h,\n+\tconfig/i386/i386-interix.h, config/i386/i386-interix3.h,\n \tconfig/i386/i386-modes.def, config/i386/i386-protos.h,\n \tconfig/i386/i386.c, config/i386/i386.h, config/i386/i386.md,\n \tconfig/i386/i386elf.h, config/i386/k6.md, config/i386/kaos-i386.h,\n@@ -277,7 +283,7 @@\n \t* gcc/cppfiles.c (pch_open_file): Return based on combined\n         result of all files.\n \t(validate_pch): Return validate flag for current file.\n-\t\n+\n 2003-09-24  Roger Sayle  <roger@eyesopen.com>\n \n \tPR bootstrap/12358\n@@ -512,7 +518,7 @@\n \tobjc_catch_type): New ObjC/ObjC++ roots.\n \t* objc/objc-tree.def (MESSAGE_SEND_EXPR, CLASS_REFERENCE_EXPR): New\n \tObjC/ObjC++ tree node codes.\n- \n+\n 2003-09-24  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* cpplib.c (do_pragma): Reintroduce cb_line_change call in the\n@@ -595,7 +601,7 @@\n \n 2003-09-23  Kelley Cook  <kelleycook@wideopenwest.com>\n \n-\t* cgraphunit.c (cgraph_expand_all_functions): Renamed from \n+\t* cgraphunit.c (cgraph_expand_all_functions): Renamed from\n \tcgraph_expand_functions.\n \n 2003-09-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -611,7 +617,7 @@\n \n \t* targhooks.c: Include output.h.\n \t* Makefile.in (targhooks.o): Add output.h to dependency list.\n-\t\n+\n 2003-09-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config.host: Removed superfluous newline.\n@@ -647,7 +653,7 @@\n \t* configure: Regenerate.\n \t* config.in: Likewise.\n \t* dwarf2out.c (DEBUG_STR_SECTION_FLAGS): Test for\n-\tHAVE_GAS_SHF_MERGE value. \n+\tHAVE_GAS_SHF_MERGE value.\n \t* varasm.c (mergeable_string_section): Likewise.\n \t(mergeable_constant_section): Likewise.\n \n@@ -691,26 +697,26 @@\n \txtensa/t-xtensa: Remove setting of STMP_FIXPROTO.\n \t* config/i370/t-oe, config/i386/t-netware, config/pa/t-bsd,\n \tt-interix, t-linux-aout:  Delete files consisting only of\n-\tsetting of STMP_FIXPROTO.\t\n+\tsetting of STMP_FIXPROTO.\n \n \t* config.host: Allow unknown hosts (not targets).  Allow\n \tns32k-*-netbsdelf* as a host (not a target).  Remove redundant\n \tempty clauses.  Remove useless obsolete-configuration clause.\n-\tPrune unsupported configuration list.  Collapse identical \n+\tPrune unsupported configuration list.  Collapse identical\n \tclauses for closely related systems.  Rewrite comment for\n \tunsupported hosts list.  Reorganize a little.\n \n 2003-09-22  Richard Henderson  <rth@redhat.com>\n \n-\t* c-common.c (c_common_signed_or_unsigned_type): Examine mode, \n+\t* c-common.c (c_common_signed_or_unsigned_type): Examine mode,\n \tnot precision.\n \n 2003-09-22  David Edelsohn  <edelsohn@gnu.org>\n \t    Hartmut Penner  <hpenner@de.ibm.com>\n \t    Segher Boessenkool  <boessen@de.ibm.com>\n \n \t* config/rs6000/rs6000.c (altivec_in_gprs_p): Rename to ...\n-\t(gpr_or_gpr_p): Test INT_REGNO_P and convert to boolean.  \n+\t(gpr_or_gpr_p): Test INT_REGNO_P and convert to boolean.\n \t(rs6000_split_altivec_in_gprs): Rename to ...\n \t(rs6000_split_multireg_move): Add support for update addressing.\n \t* config/rs6000/rs6000-protos.h: Same.\n@@ -764,7 +770,7 @@\n \n 2003-09-21  Richard Henderson  <rth@redhat.com>\n \n-\t* tree.h c-aux-info.c, c-decl.c, c-parse.in, coverage.c, dbxout.c, \n+\t* tree.h c-aux-info.c, c-decl.c, c-parse.in, coverage.c, dbxout.c,\n \tdiagnostic.c, dwarf2out.c, dwarfout.c, function.c, integrate.c,\n \tprint-tree.c, stmt.c, toplev.c, tree-dump.c, tree-inline.c,\n \ttree-optimize.c, tree.c, tree.def, xcoffout.c, config/alpha/alpha.c,\n@@ -776,7 +782,7 @@\n \t(TREE_FILENAME, TREE_LINENO): Likewise.\n \t(set_tree_locus, copy_tree_locus, set_tree_file_line): New.\n \t(TREE_LOCUS_SET_P): New.\n-\t* c-aux-info.c, c-decl.c, c-parse.in, coverage.c, dbxout.c, \n+\t* c-aux-info.c, c-decl.c, c-parse.in, coverage.c, dbxout.c,\n \tdiagnostic.c, dwarf2out.c, dwarfout.c, function.c, integrate.c,\n \tprint-tree.c, stmt.c, toplev.c, tree-dump.c, tree-inline.c,\n \ttree-optimize.c, tree.c, tree.def, xcoffout.c, config/alpha/alpha.c,\n@@ -850,7 +856,7 @@\n \t* doc/install.texi (Specific): Add the specific versions of GCC\n \twhere support for FreeBSD 1, HP-UX version 9 and older, and AIX\n \tversion 3 and older was discontinued.\n-\t\n+\n 2003-09-19\tJoel Sherrill <joel@oarcorp.com>\n \n \t* config/m68k/t-m68kbare, config/m68k/t-rtems: Change 68681 to\n@@ -913,7 +919,7 @@\n \tPR target/11184\n \t* builtins.c (expand_builtin_apply): Use convert_memory_address\n \tbefore returning the value.\n-\t\n+\n \t* alias.c (find_base_value): Simplify use of\n \tconvert_memory_address.\n \t(find_base_term): Likewise.\n@@ -1142,7 +1148,7 @@\n \tfunction in a different section than the current one.\n \n 2003-09-16  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n-        \n+\n         * doc/invoke.texi (Warning Options): Add missing hyphen before\n         \"Wimport\".  Change \"-Wno-endif-labels\" to \"-Wendif-labels\".\n         Move \"-Wold-style-definition\" to the C-only section.\n@@ -1215,7 +1221,7 @@\n \t* langhooks-def.h (lhd_do_nothing_iii_return_null_tree): New\n \tfunction.\n \t* langhooks.c (lhd_do_nothing_iii_return_null_tree): Define it.\n-\t\n+\n 2003-09-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* combine.c (simplify_comparison): Convert\n@@ -1300,7 +1306,7 @@\n \t* tree-inline.c (inline_forbidden_p_1): Cast the 3rd arg to tree.\n \n 2003-09-12  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* config/xtensa/elf.h (ASM_SPEC): Remove no-density option.  Reformat.\n \t* config/xtensa/linux.h (ASM_SPEC): Likewise.\n \t* config/xtensa/xtensa.h (TARGET_SWITCHES): Remove -mbig-endian,\n@@ -1313,11 +1319,11 @@\n \txtensa-config.h header.\n \t* doc/invoke.texi (Option Summary, Xtensa Options): Remove documention\n \tfor the options listed above.\n-\t\n+\n 2003-09-12  Dale Johannesen  <dalej@apple.com>\n \n \t* config/rs6000/rs6000-protos.h:  Use C90 prototypes.\n-\t* config/rs6000/rs6000-c.c:  Ditto. \n+\t* config/rs6000/rs6000-c.c:  Ditto.\n \t* config/rs6000/rs6000.c:  Ditto.\n \t* config/rs6000/ sysv4.h:  Ditto.\n \n@@ -1432,7 +1438,7 @@\n \t* cgraphunit.c: Update to match.\n \t(record_call_1): Rearrange.  Call lang hook for language nodes.\n \t(cgraph_analyze_function): Don't call lower_function.\n-\t* langhooks.h (struct lang_hooks_for_callgraph): Replace \n+\t* langhooks.h (struct lang_hooks_for_callgraph): Replace\n \tlower_function with analyze_expr.\n \t* langhooks-def.h: Update to match.\n \t* langhooks.c (lhd_callgraph_analyze_expr): New.\n@@ -1457,7 +1463,7 @@\n \n \t* config/darwin.h (LINK_SPEC): Pass -nofixprebinding to linker.\n \t* doc/invoke.texi: Document new Darwin linker option -nofixprebinding.\n-\t\n+\n 2003-09-09  Eric Christopher  <echristo@redhat.com>\n \n \t* configure.in: Change usage of 'head' to 'sed 1q'."}, {"sha": "31cb22347f912ec32e1524d7211b5f6429dc5d11", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -6018,7 +6018,7 @@ store_parm_decls (void)\n    This is called after parsing the body of the function definition.  */\n \n void\n-finish_function ()\n+finish_function (void)\n {\n   tree fndecl = current_function_decl;\n "}, {"sha": "63dcf9161ca7e8b10953c892e085fb24219f10bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -1,3 +1,13 @@\n+2003-09-28  Andreas Jaeger  <aj@suse.de>\n+\n+\t* decl.c (cxx_builtin_type_decls): Convert to ISO C90 function\n+\tdefinition.\n+\t* init.c (push_base_cleanups): Likewise.\n+\t* decl2.c (finish_file): Likewise.\n+\t* mangle.c (init_mangle): Likewise.\n+\t(dump_substitution_candidates): Likewise.\n+\t* search.c: Likewise.\n+\n 2003-09-27  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* name-lookup.h (get_global_value_if_present): New function."}, {"sha": "d60bcb43fafe98d309e4eff9fb9c1f222a37855b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -5879,7 +5879,7 @@ static GTY(()) tree builtin_type_decls;\n /* Return a chain of TYPE_DECLs for the builtin types.  */\n \n tree\n-cxx_builtin_type_decls ()\n+cxx_builtin_type_decls (void)\n {\n   return builtin_type_decls;\n }"}, {"sha": "c6992a5c4863773e41d95347ab4d1d2e06f1e3c0", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -2596,7 +2596,7 @@ cxx_callgraph_analyze_expr (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n    first, since that way we only need to reverse the decls once.  */\n \n void\n-finish_file ()\n+finish_file (void)\n {\n   tree vars;\n   bool reconsider;"}, {"sha": "fefda4b810d475c414f44cad7e02c6e1a570f550", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -2933,7 +2933,7 @@ build_delete (tree type, tree addr, special_function_kind auto_delete,\n    Called from begin_destructor_body.  */\n \n void\n-push_base_cleanups ()\n+push_base_cleanups (void)\n {\n   tree binfos;\n   int i, n_baseclasses;"}, {"sha": "12d463545df2726aaeaad07daa8dac7431132fe6", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -287,7 +287,7 @@ decl_is_template_id (const tree decl, tree* const template_info)\n /* Produce debugging output of current substitution candidates.  */\n \n static void\n-dump_substitution_candidates ()\n+dump_substitution_candidates (void)\n {\n   unsigned i;\n \n@@ -2324,7 +2324,7 @@ finish_mangling (const bool warn)\n /* Initialize data structures for mangling.  */\n \n void\n-init_mangle ()\n+init_mangle (void)\n {\n   gcc_obstack_init (&G.name_obstack);\n "}, {"sha": "fa1b0f6987cb5852cc84bc0f5e9f348413b2f697", "filename": "gcc/cp/search.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -543,7 +543,7 @@ lookup_field_1 (tree type, tree name, bool want_type)\n    function.  If so, we know to put the decls into the class's scope.  */\n \n tree\n-current_scope ()\n+current_scope (void)\n {\n   if (current_function_decl == NULL_TREE)\n     return current_class_type;\n@@ -565,7 +565,7 @@ current_scope ()\n    not within a member function body of the local class.  */\n \n int\n-at_function_scope_p ()\n+at_function_scope_p (void)\n {\n   tree cs = current_scope ();\n   return cs && TREE_CODE (cs) == FUNCTION_DECL;\n@@ -574,7 +574,7 @@ at_function_scope_p ()\n /* Returns true if the innermost active scope is a class scope.  */\n \n bool\n-at_class_scope_p ()\n+at_class_scope_p (void)\n {\n   tree cs = current_scope ();\n   return cs && TYPE_P (cs);\n@@ -2258,7 +2258,7 @@ unuse_fields (tree type)\n }\n \n void\n-pop_class_decls ()\n+pop_class_decls (void)\n {\n   /* We haven't pushed a search level when dealing with cached classes,\n      so we'd better not try to pop it.  */\n@@ -2267,7 +2267,7 @@ pop_class_decls ()\n }\n \n void\n-print_search_statistics ()\n+print_search_statistics (void)\n {\n #ifdef GATHER_STATISTICS\n   fprintf (stderr, \"%d fields searched in %d[%d] calls to lookup_field[_1]\\n\",\n@@ -2281,13 +2281,13 @@ print_search_statistics ()\n }\n \n void\n-init_search_processing ()\n+init_search_processing (void)\n {\n   gcc_obstack_init (&search_obstack);\n }\n \n void\n-reinit_search_statistics ()\n+reinit_search_statistics (void)\n {\n #ifdef GATHER_STATISTICS\n   n_fields_searched = 0;"}, {"sha": "e2575dcb68cad8448af3a4d1cbb712bd1fd5397b", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -116,7 +116,7 @@ static void mark_loop_exit_edges (void);\n \f\n /* Sets EDGE_LOOP_EXIT flag for all loop exits.  */\n static void\n-mark_loop_exit_edges ()\n+mark_loop_exit_edges (void)\n {\n   struct loops loops;\n   basic_block bb;"}, {"sha": "e958f1794baf9175837a03b32a4ca30d1004b4a3", "filename": "gcc/ra-rewrite.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fra-rewrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edaf3e0357bbc16c01ff9f341016a1e6969a617d/gcc%2Fra-rewrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-rewrite.c?ref=edaf3e0357bbc16c01ff9f341016a1e6969a617d", "patch": "@@ -1653,8 +1653,7 @@ static bitmap regnos_coalesced_to_hardregs;\n    use those pseudos and set up ra_reg_renumber.  */\n \n void\n-emit_colors (df)\n-     struct df *df;\n+emit_colors (struct df *df)\n {\n   unsigned int i;\n   int si;"}]}