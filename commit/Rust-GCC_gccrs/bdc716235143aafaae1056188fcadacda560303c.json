{"sha": "bdc716235143aafaae1056188fcadacda560303c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRjNzE2MjM1MTQzYWFmYWFlMTA1NjE4OGZjYWRhY2RhNTYwMzAzYw==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-12-11T19:47:12Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2021-05-21T21:18:53Z"}, "message": "Test cases for p10 fusion patterns\n\nThis adds some test cases to make sure that the combine patterns for p10\nfusion are working.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/powerpc/fusion-p10-ldcmpi.c: New file.\n\t* gcc.target/powerpc/fusion-p10-2logical.c: New file.", "tree": {"sha": "4472151c1693ce8105579627f5b5fa1aaa0a0398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4472151c1693ce8105579627f5b5fa1aaa0a0398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdc716235143aafaae1056188fcadacda560303c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc716235143aafaae1056188fcadacda560303c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc716235143aafaae1056188fcadacda560303c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc716235143aafaae1056188fcadacda560303c/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c1c7a96bc8d7062d2c35675f48131667498182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c1c7a96bc8d7062d2c35675f48131667498182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c1c7a96bc8d7062d2c35675f48131667498182"}], "stats": {"total": 271, "additions": 271, "deletions": 0}, "files": [{"sha": "9a2053735058065cbfb438fdaeea17c9c740a2f3", "filename": "gcc/testsuite/gcc.target/powerpc/fusion-p10-2logical.c", "status": "added", "additions": 205, "deletions": 0, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdc716235143aafaae1056188fcadacda560303c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-2logical.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdc716235143aafaae1056188fcadacda560303c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-2logical.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-2logical.c?ref=bdc716235143aafaae1056188fcadacda560303c", "patch": "@@ -0,0 +1,205 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n+/* { dg-options \"-mdejagnu-cpu=power10 -O3 -dp\" } */\n+\n+#include <altivec.h>\n+#include <stdint.h>\n+\n+/* and/andc/eqv/nand/nor/or/orc/xor */\n+#define AND(a,b) ((a)&(b))\n+#define ANDC1(a,b) ((a)&((~b)))\n+#define ANDC2(a,b) ((~(a))&(b))\n+#define EQV(a,b) (~((a)^(b)))\n+#define NAND(a,b) (~((a)&(b)))\n+#define NOR(a,b) (~((a)|(b)))\n+#define OR(a,b) ((a)|(b))\n+#define ORC1(a,b) ((a)|((~b)))\n+#define ORC2(a,b) ((~(a))|(b))\n+#define XOR(a,b) ((a)^(b))\n+#define TEST1(type, func)\t\t\t\t\t\t\t\\\n+  type func ## _and_T_     ## type (type a, type b, type c) { return AND(func(a,b),c); } \\\n+  type func ## _andc1_T_   ## type (type a, type b, type c) { return ANDC1(func(a,b),c); } \\\n+  type func ## _andc2_T_   ## type (type a, type b, type c) { return ANDC2(func(a,b),c); } \\\n+  type func ## _eqv_T_     ## type (type a, type b, type c) { return EQV(func(a,b),c); } \\\n+  type func ## _nand_T_    ## type (type a, type b, type c) { return NAND(func(a,b),c); } \\\n+  type func ## _nor_T_     ## type (type a, type b, type c) { return NOR(func(a,b),c); } \\\n+  type func ## _or_T_      ## type (type a, type b, type c) { return OR(func(a,b),c); } \\\n+  type func ## _orc1_T_    ## type (type a, type b, type c) { return ORC1(func(a,b),c); } \\\n+  type func ## _orc2_T_    ## type (type a, type b, type c) { return ORC2(func(a,b),c); } \\\n+  type func ## _xor_T_     ## type (type a, type b, type c) { return XOR(func(a,b),c); } \\\n+  type func ## _rev_and_T_     ## type (type a, type b, type c) { return AND(c,func(a,b)); } \\\n+  type func ## _rev_andc1_T_   ## type (type a, type b, type c) { return ANDC1(c,func(a,b)); } \\\n+  type func ## _rev_andc2_T_   ## type (type a, type b, type c) { return ANDC2(c,func(a,b)); } \\\n+  type func ## _rev_eqv_T_     ## type (type a, type b, type c) { return EQV(c,func(a,b)); } \\\n+  type func ## _rev_nand_T_    ## type (type a, type b, type c) { return NAND(c,func(a,b)); } \\\n+  type func ## _rev_nor_T_     ## type (type a, type b, type c) { return NOR(c,func(a,b)); } \\\n+  type func ## _rev_or_T_      ## type (type a, type b, type c) { return OR(c,func(a,b)); } \\\n+  type func ## _rev_orc1_T_    ## type (type a, type b, type c) { return ORC1(c,func(a,b)); } \\\n+  type func ## _rev_orc2_T_    ## type (type a, type b, type c) { return ORC2(c,func(a,b)); } \\\n+  type func ## _rev_xor_T_     ## type (type a, type b, type c) { return XOR(c,func(a,b)); }\n+#define TEST(type)    \\\n+  TEST1(type,AND)     \\\n+  TEST1(type,ANDC1)   \\\n+  TEST1(type,ANDC2)   \\\n+  TEST1(type,EQV)     \\\n+  TEST1(type,NAND)    \\\n+  TEST1(type,NOR)     \\\n+  TEST1(type,OR)      \\\n+  TEST1(type,ORC1)    \\\n+  TEST1(type,ORC2)    \\\n+  TEST1(type,XOR)\n+\n+typedef vector bool char vboolchar_t;\n+typedef vector unsigned int vuint_t;\n+\n+TEST(uint8_t);\n+TEST(int8_t);\n+TEST(uint16_t);\n+TEST(int16_t);\n+TEST(uint32_t);\n+TEST(int32_t);\n+TEST(uint64_t);\n+TEST(int64_t);\n+TEST(vboolchar_t);\n+TEST(vuint_t);\n+\n+/* Recreate with:\n+   grep ' \\*fuse_' fusion-p10-2logical.s|sed -e 's,^.*\\*,,' |sort -k 7,7 |uniq -c|awk '{l=30-length($2); printf(\"/%s* { %s { scan-assembler-times \\\"%s\\\"%-*s        %4d } } *%s/\\n\",\"\",\"dg-final\",$2,l,\"\",$1,\"\");}'\n+ */\n+  \n+/* { dg-final { scan-assembler-times \"fuse_and_and/1\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_and/2\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_and/0\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_and/1\"                         26 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_and/2\"                         48 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_and/3\"                          6 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_or/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_or/1\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_or/2\"                          32 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_orc/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_orc/1\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_orc/2\"                         48 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_xor/0\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_xor/1\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_andc_xor/2\"                         32 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_eqv/0\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_eqv/2\"                          24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_or/0\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_or/2\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_orc/0\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_orc/2\"                          24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_xor/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_and_xor/2\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_and/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_and/2\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_andc/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_andc/2\"                         24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_or/0\"                            8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_eqv_or/2\"                           24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_and/0\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_and/2\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_andc/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_andc/2\"                        24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_or/0\"                          14 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_or/1\"                           2 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_or/2\"                          72 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_or/3\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_orc/2\"                         24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nand_orc/3\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_and/0\"                          28 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_and/1\"                           4 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_and/2\"                          48 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_and/3\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_andc/2\"                         24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_andc/3\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_or/0\"                            8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_or/2\"                           24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_orc/0\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_nor_orc/2\"                          24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_and/0\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_and/2\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_andc/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_andc/2\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_and/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_and/1\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_and/2\"                          32 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_andc/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_andc/1\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_andc/2\"                         48 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_or/0\"                            8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_or/1\"                           10 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_or/2\"                           72 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_or/3\"                            6 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_xor/0\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_xor/1\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_orc_xor/2\"                          48 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_eqv/0\"                            8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_eqv/2\"                           24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_or/1\"                            16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_or/2\"                            16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_xor/0\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_or_xor/2\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vand/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vand/1\"                       10 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vand/3\"                        6 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vor/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vor/1\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vorc/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vorc/1\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vxor/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vandc_vxor/1\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vand_vand/1\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vand_veqv/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vand_vor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vand_vorc/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vand_vxor/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_veqv_vand/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_veqv_vandc/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_veqv_vor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vand/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vandc/0\"                       8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vor/0\"                        14 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vor/1\"                         2 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vor/3\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnand_vorc/3\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vand/0\"                        14 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vand/1\"                         2 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vand/3\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vandc/3\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vnor_vorc/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vand/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vand/1\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vandc/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vandc/1\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vor/1\"                         10 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vor/3\"                          6 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vxor/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vorc_vxor/1\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vor_vand/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vor_vandc/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vor_veqv/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vor_vor/1\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vor_vxor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vand/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vandc/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_veqv/3\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vnand/0\"                        8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vor/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vorc/0\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_vxor_vxor/1\"                         8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_and/0\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_and/2\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_andc/0\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_andc/2\"                         16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_eqv/2\"                          24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_eqv/3\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_nand/0\"                          8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_nand/2\"                         24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_or/0\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_or/2\"                           16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_orc/0\"                           8 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_orc/2\"                          24 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_xor/1\"                          16 } } */\n+/* { dg-final { scan-assembler-times \"fuse_xor_xor/2\"                          16 } } */"}, {"sha": "99f9e92eeaf22c5d0824ae1d318623c23ca0c422", "filename": "gcc/testsuite/gcc.target/powerpc/fusion-p10-ldcmpi.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdc716235143aafaae1056188fcadacda560303c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-ldcmpi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdc716235143aafaae1056188fcadacda560303c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-ldcmpi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffusion-p10-ldcmpi.c?ref=bdc716235143aafaae1056188fcadacda560303c", "patch": "@@ -0,0 +1,66 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n+/* { dg-options \"-mdejagnu-cpu=power10 -O3 -dp\" } */\n+\n+#include <stdint.h>\n+\n+#define TEST(type) \\\n+  struct t ## type { type x[128],a,b,c; };\t\t\\\n+  struct s ## type { struct t ## type *p; int d,e,f; uint64_t g,h,i; };\t\\\n+int \\\n+t ## type (struct s ## type *p) \\\n+{ \\\n+  struct t ## type *tp = p->p; \\\n+  if(!tp || tp->a > ((type)0)) { return p->d; }\t\\\n+  if(!tp || tp->b > ((type)1)) { return p->e; }\t\\\n+  if(!tp || ( ((type)(-1) < 0) && tp->c < ((type)-1))) { return p->f; }\t\\\n+  return 0; \\\n+} \\\n+type \\\n+t ## type ## _ret (struct s ## type *p) \\\n+{ \\\n+  struct t ## type *tp = p->p; \\\n+  if(!tp || tp->a > ((type)0)) { return tp->a; }\t\\\n+  if(!tp || tp->b > ((type)1)) { return tp->b; }\t\\\n+  if(!tp || ( ((type)(-1) < 0) && tp->c < ((type)-1))) { return tp->c; }\t\\\n+  return 0; \\\n+}\\\n+int \\\n+t ## type ## _x (struct s ## type *p) \\\n+{ \\\n+  struct t ## type *tp = p->p; \\\n+  if(!tp || tp->x[p->g] > ((type)0)) { return p->d; }\t\\\n+  if(!tp || tp->x[p->h] > ((type)1)) { return p->e; }\t\\\n+  if(!tp || ( ((type)(-1) < 0) && tp->x[p->i] < ((type)-1))) { return p->f; }\t\\\n+  return 0; \\\n+} \\\n+type \\\n+t ## type ## _x_ret (struct s ## type *p) \\\n+{ \\\n+  struct t ## type *tp = p->p; \\\n+  if(!tp || tp->x[p->g] > ((type)0)) { return tp->x[p->g]; }\t\\\n+  if(!tp || tp->x[p->h] > ((type)1)) { return tp->x[p->h]; }\t\\\n+  if(!tp || ( ((type)(-1) < 0) && tp->x[p->i] < ((type)-1))) { return tp->x[p->i]; }\t\\\n+  return 0; \\\n+}\n+\n+TEST(uint64_t)\n+TEST(int64_t)\n+TEST(uint32_t)\n+TEST(int32_t)\n+TEST(uint16_t)\n+TEST(int16_t)\n+TEST(uint8_t)\n+TEST(int8_t)\n+\n+/* { dg-final { scan-assembler-times \"lbz_cmpldi_cr0_QI_clobber_CCUNS_zero\"   2 } } */\n+/* { dg-final { scan-assembler-times \"ld_cmpdi_cr0_DI_DI_CC_none\"             4 } } */\n+/* { dg-final { scan-assembler-times \"ld_cmpdi_cr0_DI_clobber_CC_none\"        4 } } */\n+/* { dg-final { scan-assembler-times \"ld_cmpldi_cr0_DI_DI_CCUNS_none\"         1 } } */\n+/* { dg-final { scan-assembler-times \"ld_cmpldi_cr0_DI_clobber_CCUNS_none\"    1 } } */\n+/* { dg-final { scan-assembler-times \"lha_cmpdi_cr0_HI_clobber_CC_sign\"       8 } } */\n+/* { dg-final { scan-assembler-times \"lhz_cmpldi_cr0_HI_clobber_CCUNS_zero\"   2 } } */\n+/* { dg-final { scan-assembler-times \"lwa_cmpdi_cr0_SI_EXTSI_CC_sign\"         3 } } */\n+/* { dg-final { scan-assembler-times \"lwa_cmpdi_cr0_SI_clobber_CC_none\"       4 } } */\n+/* { dg-final { scan-assembler-times \"lwz_cmpldi_cr0_SI_EXTSI_CCUNS_zero\"     2 } } */\n+/* { dg-final { scan-assembler-times \"lwz_cmpldi_cr0_SI_clobber_CCUNS_none\"   2 } } */"}]}