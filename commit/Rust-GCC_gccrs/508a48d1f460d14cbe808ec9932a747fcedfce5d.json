{"sha": "508a48d1f460d14cbe808ec9932a747fcedfce5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA4YTQ4ZDFmNDYwZDE0Y2JlODA4ZWM5OTMyYTc0N2ZjZWRmY2U1ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T00:02:25Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T00:02:25Z"}, "message": "(pic_address_needs_scratch): New function.\n\n(override_options): Set flag_pic when TARGET_ABICALLS.\n\nFrom-SVN: r6848", "tree": {"sha": "0e255f691fa235cd5b1c7f2e1d94cbb5c7a2cd3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e255f691fa235cd5b1c7f2e1d94cbb5c7a2cd3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/508a48d1f460d14cbe808ec9932a747fcedfce5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/508a48d1f460d14cbe808ec9932a747fcedfce5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/508a48d1f460d14cbe808ec9932a747fcedfce5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/508a48d1f460d14cbe808ec9932a747fcedfce5d/comments", "author": null, "committer": null, "parents": [{"sha": "bc0989e960ab0068c50945279225f839421b626b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc0989e960ab0068c50945279225f839421b626b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc0989e960ab0068c50945279225f839421b626b"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "83c31f1abff01da5af33f7ae755cd52ed0d332cc", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/508a48d1f460d14cbe808ec9932a747fcedfce5d/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/508a48d1f460d14cbe808ec9932a747fcedfce5d/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=508a48d1f460d14cbe808ec9932a747fcedfce5d", "patch": "@@ -1655,6 +1655,22 @@ mips_address_cost (addr)\n   return 4;\n }\n \n+/* Return true if X is an address which needs a temporary register when \n+   reloaded while generating PIC code.  */\n+\n+int\n+pic_address_needs_scratch (x)\n+     rtx x;\n+{\n+  /* An address which is a symbolic plus a non SMALL_INT needs a temp reg.  */\n+  if (GET_CODE (x) == CONST && GET_CODE (XEXP (x, 0)) == PLUS\n+      && GET_CODE (XEXP (XEXP (x, 0), 0)) == SYMBOL_REF\n+      && GET_CODE (XEXP (XEXP (x, 0), 1)) == CONST_INT\n+      && ! SMALL_INT (XEXP (XEXP (x, 0), 1)))\n+    return 1;\n+\n+  return 0;\n+}\n \f\n /* Make normal rtx_code into something we can index from an array */\n \n@@ -3245,8 +3261,18 @@ override_options ()\n   if (TARGET_HALF_PIC)\n     HALF_PIC_INIT ();\n \n+  /* -fpic (-KPIC) is the default when TARGET_ABICALLS is defined.  We need\n+     to set flag_pic so that the LEGITIMATE_PIC_OPERAND_P macro will work.  */\n+  /* ??? -non_shared turns off pic code generation, but this is not\n+     implemented.  */\n   if (TARGET_ABICALLS)\n-    mips_abicalls = MIPS_ABICALLS_YES;\n+    {\n+      mips_abicalls = MIPS_ABICALLS_YES;\n+      flag_pic = 1;\n+      /* ??? Is this sufficient?  */\n+      if (mips_section_threshold > 0)\n+\twarning (\"-G is incompatible with PIC code which is the default\");\n+    }\n   else\n     mips_abicalls = MIPS_ABICALLS_NO;\n "}]}