{"sha": "1431a37d18b824f33030779e975f13839e37b61a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzMWEzN2QxOGI4MjRmMzMwMzA3NzllOTc1ZjEzODM5ZTM3YjYxYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2011-02-08T16:46:20Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2011-02-08T16:46:20Z"}, "message": "re PR middle-end/47646 (Revision 169918 caused many testsuite failures)\n\n2011-02-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\tPR middle-end/47646\n\t* gcc.dg/pr39666-2.c (foo2): If the location of the statement\n\tusing the variable is known the warning is emitted there.\n\t* gcc.dg/uninit-pr19430.c (foo): Likewise.\n\t* g++.dg/warn/Wuninitialized-5.C (foo): Likewise.\n\n\t* c-c++-common/pr20000.c (g): Both warnings occur at the return\n\tstatement.\n\t(vg): Likewise.\n\t* gcc.dg/noreturn-1.c (foo5): Likewise.\n\t* objc.dg/attributes/method-noreturn-1.m (method1): Likewise.\n\t(method2): Likewise.\n\n\t* gfortran.dg/pr25923.f90 (baz): The warning will now be issued for\n\tthe return statement using the uninitialized variable.\n\t* gfortran.dg/pr39666-2.f90 (f): Likewise.\n\nFrom-SVN: r169927", "tree": {"sha": "ec98643e2bd17603656260755035f72f22efeb13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec98643e2bd17603656260755035f72f22efeb13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1431a37d18b824f33030779e975f13839e37b61a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1431a37d18b824f33030779e975f13839e37b61a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1431a37d18b824f33030779e975f13839e37b61a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1431a37d18b824f33030779e975f13839e37b61a/comments", "author": null, "committer": null, "parents": [{"sha": "3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "5a39fa6c3303a77fa4c28987d92f642cab5a9bf5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -1,3 +1,22 @@\n+2011-02-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\tPR middle-end/47646\n+\t* gcc.dg/pr39666-2.c (foo2): If the location of the statement\n+\tusing the variable is known the warning is emitted there.\n+\t* gcc.dg/uninit-pr19430.c (foo): Likewise.\n+\t* g++.dg/warn/Wuninitialized-5.C (foo): Likewise.\n+\n+\t* c-c++-common/pr20000.c (g): Both warnings occur at the return\n+\tstatement.\n+\t(vg): Likewise.\n+\t* gcc.dg/noreturn-1.c (foo5): Likewise.\n+\t* objc.dg/attributes/method-noreturn-1.m (method1): Likewise.\n+\t(method2): Likewise.\n+\n+\t* gfortran.dg/pr25923.f90 (baz): The warning will now be issued for\n+\tthe return statement using the uninitialized variable.\n+\t* gfortran.dg/pr39666-2.f90 (f): Likewise.\n+\n 2011-02-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47639"}, {"sha": "3c0fb8841051ad1c5162843e4673964335ef4eac", "filename": "gcc/testsuite/c-c++-common/pr20000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr20000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr20000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr20000.c?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -10,7 +10,7 @@ void h(void) __attribute__((noreturn));\n \n int g(void) {\n   return 1; /* { dg-warning \"function declared 'noreturn' has a 'return' statement\" } */\n-} /* { dg-warning \"'noreturn' function does return\" } */\n+}           /* { dg-warning \"'noreturn' function does return\" \"\" { target *-*-* } 12 } */\n \n int g2(void) {\n   h();\n@@ -25,7 +25,7 @@ int vg2(void); /* { dg-bogus \".noreturn. function returns non-void value\" } */\n \n int vg(void) {\n   return 1; /* { dg-warning \"function declared 'noreturn' has a 'return' statement\" \"\" { target c } 27 } */\n-} /* { dg-warning \"'noreturn' function does return\" \"\" { target c } 28  } */\n+}           /* { dg-warning \"'noreturn' function does return\" \"\" { target c } 27  } */\n \n int vg2(void) {\n   h();"}, {"sha": "787d3c78f638f13d77ca935443647fe159ce1a3a", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-5.C?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -5,7 +5,7 @@\n int\n foo (int i)\n {\n-  int j;\t// { dg-warning \"may be used uninitialized\" }\n+  int j;\n   switch (i)\n     {\n     case -__INT_MAX__ - 1 ... -1:\n@@ -18,5 +18,5 @@ foo (int i)\n       j = 4;\n       break;\n     }\n-  return j;\n+  return j;\t// { dg-warning \"may be used uninitialized\" }\n }"}, {"sha": "a3796783a3e24e2c5e5ab34aa3015b76a1519f1c", "filename": "gcc/testsuite/gcc.dg/noreturn-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -35,7 +35,7 @@ void\n foo5(void)\n {\n   return; /* { dg-warning \"'noreturn' has a 'return' statement\" \"detect invalid return\" } */\n-} /* { dg-warning \"function does return\" \"detect return from noreturn\" } */\n+}         /* { dg-warning \"function does return\" \"detect return from noreturn\" { target c } 37 } */\n \n extern void foo6(void);\n void"}, {"sha": "9ca119b6a07e6979f9157e1499e3cf9e1c579664", "filename": "gcc/testsuite/gcc.dg/pr39666-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39666-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39666-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39666-2.c?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -5,7 +5,7 @@\n int\n foo (int i)\n {\n-  int j;\t/* { dg-warning \"may be used uninitialized\" } */\n+  int j;\n   switch (i)\n     {\n     case -__INT_MAX__ - 1 ... -1:\n@@ -18,5 +18,5 @@ foo (int i)\n       j = 4;\n       break;\n     }\n-  return j;\n+  return j;\t/* { dg-warning \"may be used uninitialized\" } */\n }"}, {"sha": "4d2b4f62cef619be9d37b0b8b9b6ee0b18854677", "filename": "gcc/testsuite/gcc.dg/uninit-pr19430.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430.c?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -18,8 +18,8 @@ foo (int i)\n \n \n int foo2( void ) {\n-  int rc;  /* { dg-warning \"'rc' is used uninitialized in this function\" } */\n-  return rc;\n+  int rc;\n+  return rc;  /* { dg-warning \"'rc' is used uninitialized in this function\" } */\n   *&rc = 0;\n }\n "}, {"sha": "9140d35a7f769c1286a179d3d7663839bdc35a0c", "filename": "gcc/testsuite/gfortran.dg/pr25923.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -10,7 +10,7 @@ module foo\n \n contains\n \n-  function baz(arg) result(res) ! { dg-warning \"res.yr' may be\" \"PR45505\" { xfail ilp32 } }\n+  function baz(arg) result(res) ! { dg-bogus \"res.yr' may be\" \"PR45505\" { xfail ilp32 } }\n     type(bar), intent(in) :: arg\n     type(bar) :: res\n     logical, external:: some_func\n@@ -19,7 +19,7 @@ function baz(arg) result(res) ! { dg-warning \"res.yr' may be\" \"PR45505\" { xfail\n     else\n       res = arg\n     end if\n-  end function baz ! { dg-bogus \"res.yr' may be\" \"PR45505\" { xfail ilp32 } }\n+  end function baz ! { dg-warning \"res.yr' may be\" \"PR45505\" { xfail ilp32 } }\n \n end module foo\n "}, {"sha": "633d0ba79c58af346a50c2b3ab15960582e5b4b0", "filename": "gcc/testsuite/gfortran.dg/pr39666-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr39666-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr39666-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr39666-2.f90?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -2,7 +2,7 @@\n ! { dg-do compile }\n ! { dg-options \"-O2 -Wuninitialized\" }\n \n-FUNCTION f(n)\t! { dg-warning \"may be used uninitialized\" }\n+FUNCTION f(n)\n   INTEGER, INTENT(in) :: n\n   REAL                :: f\n \n@@ -11,4 +11,4 @@ FUNCTION f(n)\t! { dg-warning \"may be used uninitialized\" }\n     CASE (0);   f =  0.0\n     CASE (2:);  f =  1.0\n   END SELECT\n-END FUNCTION\n+END FUNCTION\t! { dg-warning \"may be used uninitialized\" }"}, {"sha": "717d6e65e28ee1665140ca4df03b7450406aac30", "filename": "gcc/testsuite/objc.dg/attributes/method-noreturn-1.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1431a37d18b824f33030779e975f13839e37b61a/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m?ref=1431a37d18b824f33030779e975f13839e37b61a", "patch": "@@ -18,11 +18,11 @@ @implementation MyClass\n + (id) method1\n {\n   return self;  /* { dg-warning \"function declared .noreturn. has a .return. statement\" } */\n-}               /* { dg-warning \".noreturn. function does return\" } */\n+}               /* { dg-warning \".noreturn. function does return\" \"\" { target *-*-* } 20 } */\n - (id) method2\n {\n   return self;  /* { dg-warning \"function declared .noreturn. has a .return. statement\" } */\n-}               /* { dg-warning \".noreturn. function does return\" } */\n+}               /* { dg-warning \".noreturn. function does return\" \"\" { target *-*-* } 24 } */\n + (id) method3\n {\n   abort ();"}]}