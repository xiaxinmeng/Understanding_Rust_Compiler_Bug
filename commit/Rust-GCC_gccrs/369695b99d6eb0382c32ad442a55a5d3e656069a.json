{"sha": "369695b99d6eb0382c32ad442a55a5d3e656069a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY5Njk1Yjk5ZDZlYjAzODJjMzJhZDQ0MmE1NWE1ZDNlNjU2MDY5YQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2014-12-24T14:27:06Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2014-12-24T14:27:06Z"}, "message": "Fix undefined-loop-2.c test case.\n\n2014-12-24  Andrew Stubbs  <ams@codesourcery.com>\n\n\tPR testsuite/64032\n\t* gcc.dg/undefined-loop-2.c: Don't allow GCC to optimize away the\n\tloop exits too early.\n\nFrom-SVN: r219059", "tree": {"sha": "513232d8915399cf8c78a01f112931fa4bd7657e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513232d8915399cf8c78a01f112931fa4bd7657e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/369695b99d6eb0382c32ad442a55a5d3e656069a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/369695b99d6eb0382c32ad442a55a5d3e656069a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/369695b99d6eb0382c32ad442a55a5d3e656069a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/369695b99d6eb0382c32ad442a55a5d3e656069a/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5704db3364d16d19ef2da79b2a6c21da8160b939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5704db3364d16d19ef2da79b2a6c21da8160b939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5704db3364d16d19ef2da79b2a6c21da8160b939"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "ef6a8aa3c2d880d17af3976f748bd00e349b6b7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/369695b99d6eb0382c32ad442a55a5d3e656069a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/369695b99d6eb0382c32ad442a55a5d3e656069a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=369695b99d6eb0382c32ad442a55a5d3e656069a", "patch": "@@ -1,3 +1,9 @@\n+2014-12-24  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR testsuite/64032\n+\t* gcc.dg/undefined-loop-2.c: Don't allow GCC to optimize away the\n+\tloop exits too early.\n+\n 2014-12-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/63985"}, {"sha": "7ab37f4e9e19d8de86b28b402f3fed9b4e6f2fe9", "filename": "gcc/testsuite/gcc.dg/undefined-loop-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/369695b99d6eb0382c32ad442a55a5d3e656069a/gcc%2Ftestsuite%2Fgcc.dg%2Fundefined-loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/369695b99d6eb0382c32ad442a55a5d3e656069a/gcc%2Ftestsuite%2Fgcc.dg%2Fundefined-loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fundefined-loop-2.c?ref=369695b99d6eb0382c32ad442a55a5d3e656069a", "patch": "@@ -15,8 +15,11 @@ foo (int p)\n        (p\n         ? array1[i]  /* { dg-message \"note: possible undefined statement is here\" } */\n         : array2[i]) /* { dg-message \"note: possible undefined statement is here\" } */\n-       && i < 5      /* { dg-warning \"loop exit may only be reached after undefined behavior\" } */\n        && i < 100;   /* { dg-warning \"loop exit may only be reached after undefined behavior\" } */\n        i++)\n-    doSomething(array1[i]);\n+    {\n+      if (i >= 5)    /* { dg-warning \"loop exit may only be reached after undefined behavior\" } */\n+\tbreak;\n+      doSomething(array1[i]);\n+    }\n }"}]}