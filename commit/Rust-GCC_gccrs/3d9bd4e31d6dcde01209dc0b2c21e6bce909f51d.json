{"sha": "3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q5YmQ0ZTMxZDZkY2RlMDEyMDlkYzBiMmMyMWU2YmNlOTA5ZjUxZA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-06-01T12:01:29Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-06-01T12:01:29Z"}, "message": "Much simplified version from Martin.\n\nFrom-SVN: r20172", "tree": {"sha": "f14b31471e084f7dda1acae8d48672683e9c2409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f14b31471e084f7dda1acae8d48672683e9c2409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d/comments", "author": null, "committer": null, "parents": [{"sha": "bbc06b4b09263939b706bfc683afb38c3ca1c132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc06b4b09263939b706bfc683afb38c3ca1c132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbc06b4b09263939b706bfc683afb38c3ca1c132"}], "stats": {"total": 1246, "additions": 4, "deletions": 1242}, "files": [{"sha": "b940f01237f73026eec878d01cb7bcbfab5a0614", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb125.C", "status": "modified", "additions": 4, "deletions": 1242, "changes": 1246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C?ref=3d9bd4e31d6dcde01209dc0b2c21e6bce909f51d", "patch": "@@ -1,1247 +1,9 @@\n-\n-\n-#pragma interface\n-\n-\n-\n-extern \"C\" {\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-typedef          int   _G_int8_t __attribute__((__mode__(__QI__)));\n-typedef unsigned int  _G_uint8_t __attribute__((__mode__(__QI__)));\n-typedef          int  _G_int16_t __attribute__((__mode__(__HI__)));\n-typedef unsigned int _G_uint16_t __attribute__((__mode__(__HI__)));\n-typedef          int  _G_int32_t __attribute__((__mode__(__SI__)));\n-typedef unsigned int _G_uint32_t __attribute__((__mode__(__SI__)));\n-typedef          int  _G_int64_t __attribute__((__mode__(__DI__)));\n-typedef unsigned int _G_uint64_t __attribute__((__mode__(__DI__)));\n-__extension__ typedef long long _G_llong;\n-__extension__ typedef unsigned long long _G_ullong;\n-\n-\n-\n-\n-\n-\n-\n-typedef long _G_clock_t;\n-typedef short _G_dev_t;\n-typedef long _G_fpos_t;\n-typedef unsigned short _G_gid_t;\n-typedef unsigned long _G_ino_t;\n-typedef unsigned short _G_mode_t;\n-typedef short _G_nlink_t;\n-typedef long _G_off_t;\n-typedef short _G_pid_t;\n-\n-\n-\n-typedef int _G_ptrdiff_t;\n-typedef long _G_sigset_t;\n-\n-\n-\n-typedef unsigned int _G_size_t;\n-typedef long _G_time_t;\n-typedef unsigned short _G_uid_t;\n-typedef long int _G_wchar_t;\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-typedef int _G_ssize_t;\n-typedef unsigned int _G_wint_t;\n-typedef char * _G_va_list;\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n- \n-\n-\n-\n- \n-\n- \n-\n-\n-\n-\n- \n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-struct _IO_jump_t;  struct _IO_FILE;\n-\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-    typedef void _IO_lock_t;\n-\n-\n-\n-\n-\n- \n-\n-struct _IO_marker {\n-  struct _IO_marker *_next;\n-  struct _IO_FILE *_sbuf;\n-   \n-\n-   \n-  int _pos;\n-\n-};\n-\n-struct _IO_FILE {\n-  int _flags;\t\t \n-\n-\n-   \n-   \n-  char* _IO_read_ptr;\t \n-  char* _IO_read_end;\t \n-  char* _IO_read_base;\t \n-  char* _IO_write_base;\t \n-  char* _IO_write_ptr;\t \n-  char* _IO_write_end;\t \n-  char* _IO_buf_base;\t \n-  char* _IO_buf_end;\t \n-   \n-  char *_IO_save_base;  \n-  char *_IO_backup_base;   \n-  char *_IO_save_end;  \n-\n-  struct _IO_marker *_markers;\n-\n-  struct _IO_FILE *_chain;\n-\n-  int _fileno;\n-  int _blksize;\n-  _G_off_t  _offset;\n-\n-\n-   \n-  unsigned short _cur_column;\n-  char _unused;\n-  char _shortbuf[1];\n-\n-   \n-\n-\n-\n-\n-};\n-\n-\n-\n-\n-\n-struct _IO_FILE_plus;\n-extern struct _IO_FILE_plus _IO_stdin_, _IO_stdout_, _IO_stderr_;\n-\n-\n-\n-\n-\n- \n-typedef struct\n-{\n-  _G_ssize_t  (*read)  (struct _IO_FILE *, void *, _G_ssize_t )  ;\n-  _G_ssize_t  (*write)  (struct _IO_FILE *, const void *, _G_ssize_t )  ;\n-  _G_fpos_t  (*seek)  (struct _IO_FILE *, _G_off_t , int)  ;\n-  int (*close)  (struct _IO_FILE *)  ;\n-} _IO_cookie_io_functions_t;\n-\n- \n-struct _IO_cookie_file\n-{\n-  struct _IO_FILE file;\n-  const void *vtable;\n-  void *cookie;\n-  _IO_cookie_io_functions_t io_functions;\n-};\n-\n-\n-\n-extern \"C\" {\n-\n-\n-extern int __underflow  (_IO_FILE *)  ;\n-extern int __uflow  (_IO_FILE *)  ;\n-extern int __overflow  (_IO_FILE *, int)  ;\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-extern int _IO_getc  (_IO_FILE *__fp)  ;\n-extern int _IO_putc  (int __c, _IO_FILE *__fp)  ;\n-extern int _IO_feof  (_IO_FILE *__fp)  ;\n-extern int _IO_ferror  (_IO_FILE *__fp)  ;\n-\n-extern int _IO_peekc_locked  (_IO_FILE *__fp)  ;\n-\n- \n-\n-\n-\n-extern void _IO_flockfile  (_IO_FILE *)  ;\n-extern void _IO_funlockfile  (_IO_FILE *)  ;\n-extern int _IO_ftrylockfile  (_IO_FILE *)  ;\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-extern int _IO_vfscanf  (_IO_FILE *, const char *, _G_va_list , int *)  ;\n-extern int _IO_vfprintf  (_IO_FILE *, const char *, _G_va_list )  ;\n-extern _G_ssize_t  _IO_padn  (_IO_FILE *, int, _G_ssize_t )  ;\n-extern _G_size_t  _IO_sgetn  (_IO_FILE *, void *, _G_size_t )  ;\n-\n-extern _G_fpos_t  _IO_seekoff  (_IO_FILE *, _G_off_t , int, int)  ;\n-extern _G_fpos_t  _IO_seekpos  (_IO_FILE *, _G_fpos_t , int)  ;\n-\n-extern void _IO_free_backup_area  (_IO_FILE *)  ;\n-\n-\n-}\n-\n-\n-\n-\n-}\n- \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-extern \"C++\" {\n-class istream;  \n-class ostream; class streambuf;\n-\n- \n-\n-\n-\n-typedef _G_off_t  streamoff;\n-typedef _G_fpos_t  streampos;\n-typedef _G_ssize_t  streamsize;\n-\n-typedef unsigned long __fmtflags;\n-typedef unsigned char __iostate;\n-\n-struct _ios_fields\n-{  \n-    streambuf *_strbuf;\n-    ostream* _tie;\n-    int _width;\n-    __fmtflags _flags;\n-    short  _fill;\n-    __iostate _state;\n-    __iostate _exceptions;\n-    int _precision;\n-\n-    void *_arrays;  \n-};\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-class ios : public _ios_fields {\n-  ios& operator=(ios&);   \n-  ios (const ios&);  \n-  public:\n-    typedef __fmtflags fmtflags;\n-    typedef int iostate;\n-    typedef int openmode;\n-    typedef int streamsize;\n-    enum io_state {\n-\tgoodbit = 0 ,\n-\teofbit = 1 ,\n-\tfailbit = 2 ,\n-\tbadbit = 4  };\n-    enum open_mode {\n-\tin = 1 ,\n-\tout = 2 ,\n-\tate = 4 ,\n-\tapp = 8 ,\n-\ttrunc = 16 ,\n-\tnocreate = 32 ,\n-\tnoreplace = 64 ,\n-\tbin = 128 ,  \n-\tbinary = 128  };\n-    enum seek_dir { beg, cur, end};\n-    typedef enum seek_dir seekdir;\n-     \n-    enum { skipws= 01 ,\n-\t   left= 02 , right= 04 , internal= 010 ,\n-\t   dec= 020 , oct= 040 , hex= 0100 ,\n-\t   showbase= 0200 , showpoint= 0400 ,\n-\t   uppercase= 01000 , showpos= 02000 ,\n-\t   scientific= 04000 , fixed= 010000 ,\n-\t   unitbuf= 020000 , stdio= 040000 \n-\n-\n-\n-\t   };\n-    enum {  \n-\tbasefield=dec+oct+hex,\n-\tfloatfield = scientific+fixed,\n-\tadjustfield = left+right+internal\n-    };\n-\n-\n-\n-    ostream* tie() const { return _tie; }\n-    ostream* tie(ostream* val) { ostream* save=_tie; _tie=val; return save; }\n-\n-     \n-    short  fill() const { return (short )_fill; }\n-    short  fill(short  newf)\n-\t{short  oldf = (short )_fill; _fill = (char)newf; return oldf;}\n-    fmtflags flags() const { return _flags; }\n-    fmtflags flags(fmtflags new_val) {\n-\tfmtflags old_val = _flags; _flags = new_val; return old_val; }\n-    int precision() const { return _precision; }\n-    int precision(int newp) {\n-\tunsigned short oldp = _precision; _precision = (unsigned short)newp;\n-\treturn oldp; }\n-    fmtflags setf(fmtflags val) {\n-\tfmtflags oldbits = _flags;\n-\t_flags |= val; return oldbits; }\n-    fmtflags setf(fmtflags val, fmtflags mask) {\n-\tfmtflags oldbits = _flags;\n-\t_flags = (_flags & ~mask) | (val & mask); return oldbits; }\n-    fmtflags unsetf(fmtflags mask) {\n-\tfmtflags oldbits = _flags;\n-\t_flags &= ~mask; return oldbits; }\n-    int width() const { return _width; }\n-    int width(int val) { int save = _width; _width = val; return save; }\n-\n-\n-\n-\n-    void _throw_failure() const { }\n-\n-    void clear(iostate state = 0) {\n-\t_state = _strbuf ? state : state|badbit;\n-\tif (_state & _exceptions) _throw_failure(); }\n-    void set(iostate flag) { _state |= flag;\n-\tif (_state & _exceptions) _throw_failure(); }\n-    void setstate(iostate flag) { _state |= flag;  \n-\tif (_state & _exceptions) _throw_failure(); }\n-    int good() const { return _state == 0; }\n-    int eof() const { return _state & ios::eofbit; }\n-    int fail() const { return _state & (ios::badbit|ios::failbit); }\n-    int bad() const { return _state & ios::badbit; }\n-    iostate rdstate() const { return _state; }\n-    operator void*() const { return fail() ? (void*)0 : (void*)(-1); }\n-    int operator!() const { return fail(); }\n-    iostate exceptions() const { return _exceptions; }\n-    void exceptions(iostate enable) {\n-\t_exceptions = enable;\n-\tif (_state & _exceptions) _throw_failure(); }\n-\n-    streambuf* rdbuf() const { return _strbuf; }\n-    streambuf* rdbuf(streambuf *_s) {\n-      streambuf *_old = _strbuf; _strbuf = _s; clear (); return _old; }\n-\n-    static int sync_with_stdio(int on);\n-    static void sync_with_stdio() { sync_with_stdio(1); }\n-    static fmtflags bitalloc();\n-    static int xalloc();\n-    void*& pword(int);\n-    void* pword(int) const;\n-    long& iword(int);\n-    long iword(int) const;\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-     \n-    class Init {\n-    public:\n-      Init () { }\n-    };\n-\n-  protected:\n-    inline ios(streambuf* sb = 0, ostream* tie_to = 0);\n-    inline virtual ~ios();\n-    inline void init(streambuf* sb, ostream* tie = 0);\n-};\n-\n-\n-\n-\n-typedef ios::seek_dir _seek_dir;\n-\n-\n- \n- \n- \n- \n- \n-\n- \n- \n-class streammarker : private _IO_marker {\n-    friend class streambuf;\n-    void set_offset(int offset) { _pos = offset; }\n-  public:\n-    streammarker(streambuf *sb);\n-    ~streammarker();\n-    int saving() { return  1; }\n-    int delta(streammarker&);\n-    int delta();\n-};\n-\n-struct streambuf : public _IO_FILE {  \n-    friend class ios;\n-    friend class istream;\n-    friend class ostream;\n-    friend class streammarker;\n-    const void *&_vtable() { return *(const void**)((_IO_FILE*)this + 1); }\n-  protected:\n-    static streambuf* _list_all;  \n-    _IO_FILE*& xchain() { return _chain; }\n-    void _un_link();\n-    void _link_in();\n-    char* gptr() const\n-      { return _flags  & 0x100  ? _IO_save_base : _IO_read_ptr; }\n-    char* pptr() const { return _IO_write_ptr; }\n-    char* egptr() const\n-      { return _flags  & 0x100  ? _IO_save_end : _IO_read_end; }\n-    char* epptr() const { return _IO_write_end; }\n-    char* pbase() const { return _IO_write_base; }\n-    char* eback() const\n-      { return _flags  & 0x100  ? _IO_save_base : _IO_read_base;}\n-    char* base() const { return _IO_buf_base; }\n-    char* ebuf() const { return _IO_buf_end; }\n-    int blen() const { return _IO_buf_end - _IO_buf_base; }\n-    void xput_char(char c) { *_IO_write_ptr++ = c; }\n-    int xflags() { return _flags ; }\n-    int xflags(int f) {int fl = _flags ; _flags  = f; return fl;}\n-    void xsetflags(int f) { _flags  |= f; }\n-    void xsetflags(int f, int mask)\n-      { _flags  = (_flags  & ~mask) | (f & mask); }\n-    void gbump(int n)\n-      { _flags  & 0x100  ? (_IO_save_base+=n):(_IO_read_ptr+=n);}\n-    void pbump(int n) { _IO_write_ptr += n; }\n-    void setb(char* b, char* eb, int a=0);\n-    void setp(char* p, char* ep)\n-      { _IO_write_base=_IO_write_ptr=p; _IO_write_end=ep; }\n-    void setg(char* eb, char* g, char *eg) {\n-      if (_flags  & 0x100 ) _IO_free_backup_area(this); \n-      _IO_read_base = eb; _IO_read_ptr = g; _IO_read_end = eg; }\n-    char *shortbuf() { return _shortbuf; }\n-\n-    int in_backup() { return _flags & 0x100 ; }\n-     \n-    char *Gbase() { return in_backup() ? _IO_save_base : _IO_read_base; }\n-     \n-    char *eGptr() { return in_backup() ? _IO_save_end : _IO_read_end; }\n-     \n-    char *Bbase() { return in_backup() ? _IO_read_base : _IO_save_base; }\n-    char *Bptr() { return _IO_backup_base; }\n-     \n-    char *eBptr() { return in_backup() ? _IO_read_end : _IO_save_end; }\n-    char *Nbase() { return _IO_save_base; }\n-    char *eNptr() { return _IO_save_end; }\n-    int have_backup() { return _IO_save_base != __null ; }\n-    int have_markers() { return _markers != __null ; }\n-    void free_backup_area();\n-    void unsave_markers();  \n-    int put_mode() { return _flags & 0x800 ; }\n-    int switch_to_get_mode();\n-    \n-    streambuf(int flags=0);\n-  public:\n-    static int flush_all();\n-    static void flush_all_linebuffered();  \n-    virtual ~streambuf();\n-    virtual int overflow(int c = (-1) );  \n-    virtual int underflow();  \n-    virtual int uflow();  \n-    virtual int pbackfail(int c);\n- \n-    virtual streamsize xsputn(const char* s, streamsize n);\n-    virtual streamsize xsgetn(char* s, streamsize n);\n-    virtual streampos seekoff(streamoff, _seek_dir, int mode=ios::in|ios::out);\n-    virtual streampos seekpos(streampos pos, int mode = ios::in|ios::out);\n-\n-    streampos pubseekoff(streamoff o, _seek_dir d, int mode=ios::in|ios::out)\n-      { return _IO_seekoff (this, o, d, mode); }\n-    streampos pubseekpos(streampos pos, int mode = ios::in|ios::out)\n-      { return _IO_seekpos (this, pos, mode); }\n-    streampos sseekoff(streamoff, _seek_dir, int mode=ios::in|ios::out);\n-    streampos sseekpos(streampos pos, int mode = ios::in|ios::out);\n-    virtual streambuf* setbuf(char* p, int len);\n-    virtual int sync();\n-    virtual int doallocate();\n-\n-    int seekmark(streammarker& mark, int delta = 0);\n-    int sputbackc(char c);\n-    int sungetc();\n-    int unbuffered() { return _flags & 2  ? 1 : 0; }\n-    int linebuffered() { return _flags & 0x200  ? 1 : 0; }\n-    void unbuffered(int i)\n-\t{ if (i) _flags |= 2 ; else _flags &= ~2 ; }\n-    void linebuffered(int i)\n-\t{ if (i) _flags |= 0x200 ; else _flags &= ~0x200 ; }\n-    int allocate() {  \n-\tif (base() || unbuffered()) return 0;\n-\telse return doallocate(); }\n-     \n-    void allocbuf() { if (base() == __null ) doallocbuf(); }\n-    void doallocbuf();\n-    int in_avail() { return _IO_read_end - _IO_read_ptr; }\n-    int out_waiting() { return _IO_write_ptr - _IO_write_base; }\n-    streamsize sputn(const char* s, streamsize n) { return xsputn(s, n); }\n-    streamsize padn(char pad, streamsize n) { return _IO_padn(this, pad, n); }\n-    streamsize sgetn(char* s, streamsize n) { return _IO_sgetn(this, s, n); }\n-    int ignore(int);\n-    int get_column();\n-    int set_column(int);\n-    long sgetline(char* buf, _G_size_t  n, char delim, int putback_delim);\n-    int sputc(int c) { return _IO_putc(c, this); }\n-    int sbumpc() { return _IO_getc(this); }\n-    int sgetc() { return ((  this  )->_IO_read_ptr >= (  this  )->_IO_read_end && __underflow (  this  ) == (-1)  ? (-1)  : *(unsigned char *) (  this  )->_IO_read_ptr)  ; }\n-    int snextc() {\n-\tif (_IO_read_ptr >= _IO_read_end && __underflow(this) == (-1) )\n-\t  return (-1) ;\n-\telse return _IO_read_ptr++, sgetc(); }\n-    void stossc() { if (_IO_read_ptr < _IO_read_end) _IO_read_ptr++; }\n-    int vscan(char const *fmt0, _G_va_list  ap, ios* stream = __null );\n-    int scan(char const *fmt0 ...);\n-    int vform(char const *fmt0, _G_va_list  ap);\n-    int form(char const *fmt0 ...);\n-\n-\n-\n-\n-    virtual streamsize sys_read(char* buf, streamsize size);\n-    virtual streamsize sys_write(const char*, streamsize);\n-    virtual streampos sys_seek(streamoff, _seek_dir);\n-    virtual int sys_close();\n-    virtual int sys_stat(void*);  \n-};\n-\n- \n- \n-\n-class filebuf : public streambuf {\n-  protected:\n-    void init();\n-  public:\n-    static const int openprot;  \n-    filebuf();\n-    filebuf(int fd);\n-    filebuf(int fd, char* p, int len);\n-\n-\n-\n-    ~filebuf();\n-    filebuf* attach(int fd);\n-    filebuf* open(const char *filename, const char *mode);\n-    filebuf* open(const char *filename, ios::openmode mode, int prot = 0664);\n-    virtual int underflow();\n-    virtual int overflow(int c = (-1) );\n-    int is_open() const { return _fileno >= 0; }\n-    int fd() const { return is_open() ? _fileno : (-1) ; }\n-    filebuf* close();\n-    virtual int doallocate();\n-    virtual streampos seekoff(streamoff, _seek_dir, int mode=ios::in|ios::out);\n-    virtual streambuf* setbuf(char* p, int len);\n-    streamsize xsputn(const char* s, streamsize n);\n-    streamsize xsgetn(char* s, streamsize n);\n-    virtual int sync();\n-  protected:  \n- \n-    int is_reading() { return eback() != egptr(); }\n-    char* cur_ptr() { return is_reading() ?  gptr() : pptr(); }\n-     \n-    char* file_ptr() { return eGptr(); }\n-     \n-    virtual streamsize sys_read(char* buf, streamsize size);\n-    virtual streampos sys_seek(streamoff, _seek_dir);\n-    virtual streamsize sys_write(const char*, streamsize);\n-    virtual int sys_stat(void*);  \n-    virtual int sys_close();\n-\n-\n-\n-\n-};\n-\n-inline void ios::init(streambuf* sb, ostream* tie_to) {\n-\t\t_state = sb ? ios::goodbit : ios::badbit; _exceptions=0;\n-\t\t_strbuf=sb; _tie = tie_to; _width=0; _fill=' ';\n-\n-\t\t_flags=ios::skipws|ios::dec;\n-\n-\n-\n-\t\t_precision=6; _arrays = 0; }\n-\n-inline ios::ios(streambuf* sb, ostream* tie_to) { init(sb, tie_to); }\n-\n-inline ios::~ios() {\n-\n-\n-\n-    if (_arrays) delete [] _arrays;\n-}\n-}  \n-\n-\n-\n-extern \"C++\" {\n-class istream; class ostream;\n-typedef ios& (*__manip)(ios&);\n-typedef istream& (*__imanip)(istream&);\n-typedef ostream& (*__omanip)(ostream&);\n-\n-extern istream& ws(istream& ins);\n-extern ostream& flush(ostream& outs);\n-extern ostream& endl(ostream& outs);\n-extern ostream& ends(ostream& outs);\n-\n-class ostream : virtual public ios\n-{\n-     \n-    void do_osfx();\n-  public:\n-    ostream() { }\n-    ostream(streambuf* sb, ostream* tied= __null );\n-    int opfx() {\n-\tif (!good()) return 0;\n-\telse { if (_tie) _tie->flush();  ; return 1;} }\n-    void osfx() {  ;\n-\t\t  if (flags() & (ios::unitbuf|ios::stdio))\n-\t\t      do_osfx(); }\n-    ostream& flush();\n-    ostream& put(char c) { _strbuf->sputc(c); return *this; }\n-\n-\n-\n-\n-\n-    ostream& write(const char *s, streamsize n);\n-    ostream& write(const unsigned char *s, streamsize n)\n-      { return write((const char*)s, n);}\n-    ostream& write(const signed char *s, streamsize n)\n-      { return write((const char*)s, n);}\n-    ostream& write(const void *s, streamsize n)\n-      { return write((const char*)s, n);}\n-    ostream& seekp(streampos);\n-    ostream& seekp(streamoff, _seek_dir);\n-    streampos tellp();\n-    ostream& form(const char *format ...);\n-    ostream& vform(const char *format, _G_va_list  args);\n-\n-    ostream& operator<<(char c);\n-    ostream& operator<<(unsigned char c) { return (*this) << (char)c; }\n-    ostream& operator<<(signed char c) { return (*this) << (char)c; }\n-    ostream& operator<<(const char *s);\n-    ostream& operator<<(const unsigned char *s)\n-\t{ return (*this) << (const char*)s; }\n-    ostream& operator<<(const signed char *s)\n-\t{ return (*this) << (const char*)s; }\n-    ostream& operator<<(const void *p);\n-    ostream& operator<<(int n);\n-    ostream& operator<<(unsigned int n);\n-    ostream& operator<<(long n);\n-    ostream& operator<<(unsigned long n);\n-\n-    __extension__ ostream& operator<<(long long n);\n-    __extension__ ostream& operator<<(unsigned long long n);\n-\n-    ostream& operator<<(short n) {return operator<<((int)n);}\n-    ostream& operator<<(unsigned short n) {return operator<<((unsigned int)n);}\n-\n-    ostream& operator<<(bool b) { return operator<<((int)b); }\n-\n-    ostream& operator<<(double n);\n-    ostream& operator<<(float n) { return operator<<((double)n); }\n-\n-\n-\n-    ostream& operator<<(long double n) { return operator<<((double)n); }\n-\n-    ostream& operator<<(__omanip func) { return (*func)(*this); }\n-    ostream& operator<<(__manip func) {(*func)(*this); return *this;}\n-    ostream& operator<<(streambuf*);\n-\n-\n-\n-};\n-\n-class istream : virtual public ios\n-{\n-     \n-protected:\n-    _G_size_t  _gcount;\n-\n-    int _skip_ws();\n-  public:\n-    istream(): _gcount (0) { }\n-    istream(streambuf* sb, ostream*tied= __null );\n-    istream& get(char* ptr, int len, char delim = '\\n');\n-    istream& get(unsigned char* ptr, int len, char delim = '\\n')\n-\t{ return get((char*)ptr, len, delim); }\n-    istream& get(char& c);\n-    istream& get(unsigned char& c) { return get((char&)c); }\n-    istream& getline(char* ptr, int len, char delim = '\\n');\n-    istream& getline(unsigned char* ptr, int len, char delim = '\\n')\n-\t{ return getline((char*)ptr, len, delim); }\n-    istream& get(signed char& c)  { return get((char&)c); }\n-    istream& get(signed char* ptr, int len, char delim = '\\n')\n-\t{ return get((char*)ptr, len, delim); }\n-    istream& getline(signed char* ptr, int len, char delim = '\\n')\n-\t{ return getline((char*)ptr, len, delim); }\n-    istream& read(char *ptr, streamsize n);\n-    istream& read(unsigned char *ptr, streamsize n)\n-      { return read((char*)ptr, n); }\n-    istream& read(signed char *ptr, streamsize n)\n-      { return read((char*)ptr, n); }\n-    istream& read(void *ptr, streamsize n)\n-      { return read((char*)ptr, n); }\n-    istream& get(streambuf& sb, char delim = '\\n');\n-    istream& gets(char **s, char delim = '\\n');\n-    int ipfx(int need = 0) {\n-\tif (!good()) { set(ios::failbit); return 0; }\n-\telse {\n-\t   ;\n-\t  if (_tie && (need == 0 || rdbuf()->in_avail() < need)) _tie->flush();\n-\t  if (!need && (flags() & ios::skipws)) return _skip_ws();\n-\t  else return 1;\n-\t}\n-    }\n-    int ipfx0() {  \n-\tif (!good()) { set(ios::failbit); return 0; }\n-\telse {\n-\t   ;\n-\t  if (_tie) _tie->flush();\n-\t  if (flags() & ios::skipws) return _skip_ws();\n-\t  else return 1;\n-\t}\n-    }\n-    int ipfx1() {  \n-\tif (!good()) { set(ios::failbit); return 0; }\n-\telse {\n-\t   ;\n-\t  if (_tie && rdbuf()->in_avail() == 0) _tie->flush();\n-\t  return 1;\n-\t}\n-    }\n-    void isfx() {  ; }\n-    int get() { if (!ipfx1()) return (-1) ;\n-\t\telse { int ch = _strbuf->sbumpc();\n-\t\t       if (ch == (-1) ) set(ios::eofbit);\n-\t\t       return ch;\n-\t\t     } }\n-    int peek();\n-    _G_size_t  gcount() { return _gcount; }\n-    istream& ignore(int n=1, int delim = (-1) );\n-    int sync ();\n-    istream& seekg(streampos);\n-    istream& seekg(streamoff, _seek_dir);\n-    streampos tellg();\n-    istream& putback(char ch) {\n-\tif (good() && _strbuf->sputbackc(ch) == (-1) ) clear(ios::badbit);\n-\treturn *this;}\n-    istream& unget() {\n-\tif (good() && _strbuf->sungetc() == (-1) ) clear(ios::badbit);\n-\treturn *this;}\n-    istream& scan(const char *format ...);\n-    istream& vscan(const char *format, _G_va_list  args);\n-\n-\n-\n-\n-\n-\n-    istream& operator>>(char*);\n-    istream& operator>>(unsigned char* p) { return operator>>((char*)p); }\n-    istream& operator>>(signed char*p) { return operator>>((char*)p); }\n-    istream& operator>>(char& c);\n-    istream& operator>>(unsigned char& c) {return operator>>((char&)c);}\n-    istream& operator>>(signed char& c) {return operator>>((char&)c);}\n-    istream& operator>>(int&);\n-    istream& operator>>(long&);\n-\n-    __extension__ istream& operator>>(long long&);\n-    __extension__ istream& operator>>(unsigned long long&);\n-\n-    istream& operator>>(short&);\n-    istream& operator>>(unsigned int&);\n-    istream& operator>>(unsigned long&);\n-    istream& operator>>(unsigned short&);\n-\n-    istream& operator>>(bool&);\n-\n-    istream& operator>>(float&);\n-    istream& operator>>(double&);\n-    istream& operator>>(long double&);\n-    istream& operator>>( __manip func) {(*func)(*this); return *this;}\n-    istream& operator>>(__imanip func) { return (*func)(*this); }\n-    istream& operator>>(streambuf*);\n-};\n-\n-class iostream : public istream, public ostream\n-{\n-  public:\n-    iostream() { }\n-    iostream(streambuf* sb, ostream*tied= __null );\n-};\n-\n-class _IO_istream_withassign : public istream {\n-public:\n-  _IO_istream_withassign& operator=(istream&);\n-  _IO_istream_withassign& operator=(_IO_istream_withassign& rhs)\n-    { return operator= (static_cast<istream&> (rhs)); }\n-};\n-\n-class _IO_ostream_withassign : public ostream {\n-public:\n-  _IO_ostream_withassign& operator=(ostream&);\n-  _IO_ostream_withassign& operator=(_IO_ostream_withassign& rhs)\n-    { return operator= (static_cast<ostream&> (rhs)); }\n-};\n-\n-extern _IO_istream_withassign cin;\n- \n-extern _IO_ostream_withassign cout, cerr;\n-\n-extern _IO_ostream_withassign clog\n-\n-\n-\n-;\n-\n-extern istream& lock(istream& ins);\n-extern istream& unlock(istream& ins);\n-extern ostream& lock(ostream& outs);\n-extern ostream& unlock(ostream& outs);\n-\n-struct Iostream_init { } ;   \n-\n-inline ios& dec(ios& i)\n-{ i.setf(ios::dec, ios::dec|ios::hex|ios::oct); return i; }\n-inline ios& hex(ios& i)\n-{ i.setf(ios::hex, ios::dec|ios::hex|ios::oct); return i; }\n-inline ios& oct(ios& i)\n-{ i.setf(ios::oct, ios::dec|ios::hex|ios::oct); return i; }\n-}  \n-\n-\n-\n-\n struct test_box\n     {\n-    void print(void) {cout << \"this is a test\" << endl;}\n+     void print(void);\n     };\n \n-void test<class BOX> (test_box *);\n+void test<class BOX> (test_box *);   // ERROR - illegal code\n \n class test_square\n     {\n@@ -1250,10 +12,10 @@ class test_square\n \n \n \n-template <class BOX> void test(BOX *the_box)\n+template <class BOX> void test(BOX *the_box)  // ERROR - semicolon missing\n     {\n     the_box->print();\n     };\n \n-template void test<> (test_box *);\n+template void test<> (test_box *);     // gets bogus error - test is declared XFAIL *-*-*\n "}]}