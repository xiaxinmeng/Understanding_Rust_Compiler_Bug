{"sha": "8d1c7aef72e3770b6efe5270de519e68f906a0b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQxYzdhZWY3MmUzNzcwYjZlZmU1MjcwZGU1MTllNjhmOTA2YTBiNw==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-01-05T19:07:16Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-01-05T19:07:16Z"}, "message": "c-typeck.c (build_c_cast): Always warn when casting from a pointer to an integer of different size...\n\n\ngcc/\n\n2006-01-05  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* c-typeck.c (build_c_cast): Always warn when casting\n\tfrom a pointer to an integer of different size, even if\n\tthe node was constant.\n\ngcc/testsuite\n\n2006-01-05  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* gcc.dg/cast-1.c: Add new warning.\n\t* gcc.dg/cast-2.c: Likewise.\n\t* gcc.dg/cast-3.c: Likewise.\n\t* gcc.dg/format/cast-1.c: Likewise.\n\t* gcc.dg/cast-4.c: New testcase.\n\nFrom-SVN: r109386", "tree": {"sha": "15cf481d09f0cb7055c11c72680efb49ec41df87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15cf481d09f0cb7055c11c72680efb49ec41df87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d1c7aef72e3770b6efe5270de519e68f906a0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1c7aef72e3770b6efe5270de519e68f906a0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1c7aef72e3770b6efe5270de519e68f906a0b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1c7aef72e3770b6efe5270de519e68f906a0b7/comments", "author": null, "committer": null, "parents": [{"sha": "32ce4048fb9f801ace0b534b37d2ffc1a2be3068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ce4048fb9f801ace0b534b37d2ffc1a2be3068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ce4048fb9f801ace0b534b37d2ffc1a2be3068"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "6f86398ba30f348f30b7af676acb2d21c5d1367f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -1,3 +1,9 @@\n+2006-01-05  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* c-typeck.c (build_c_cast): Always warn when casting\n+\tfrom a pointer to an integer of different size, even if\n+\tthe node was constant.\n+\n 2006-01-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/22555"}, {"sha": "176ba7e8eecd36daa4e0d3ba1f00b2028258a167", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -3508,8 +3508,12 @@ build_c_cast (tree type, tree expr)\n \n       if (TREE_CODE (type) == INTEGER_TYPE\n \t  && TREE_CODE (otype) == POINTER_TYPE\n-\t  && TYPE_PRECISION (type) != TYPE_PRECISION (otype)\n-\t  && !TREE_CONSTANT (value))\n+\t  && TYPE_PRECISION (type) != TYPE_PRECISION (otype))\n+      /* Unlike conversion of integers to pointers, where the \n+         warning is disabled for converting constants because \n+         of cases such as SIG_*, warn about converting constant \n+         pointers to integers. In some cases it may cause unwanted \n+         sign extension, and a warning is appropriate.  */\n \twarning (OPT_Wpointer_to_int_cast,\n \t\t \"cast from pointer to integer of different size\");\n "}, {"sha": "eb11257b9b1ae02a8e82dcc34b16da94d8a36737", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -1,3 +1,11 @@\n+2006-01-05  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* gcc.dg/cast-1.c: Add new warning.\n+\t* gcc.dg/cast-2.c: Likewise.\n+\t* gcc.dg/cast-3.c: Likewise.\n+\t* gcc.dg/format/cast-1.c: Likewise.\n+\t* gcc.dg/cast-4.c: New testcase.\n+\n 2006-01-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/22555"}, {"sha": "892426467f1ca9f2b0667fae5f84cddc515f431e", "filename": "gcc/testsuite/gcc.dg/cast-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-1.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -37,5 +37,5 @@ f (void)\n   (void *) c; /* { dg-warning \"warning: cast to pointer from integer of different size\" } */\n   (void *) (char) 1;\n   (char) p; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n-  (char) (void *) 1;\n+  (char) (void *) 1; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n }"}, {"sha": "eff465e7bb489038f0b92eb8b66f1307c86da8d8", "filename": "gcc/testsuite/gcc.dg/cast-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-2.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -37,5 +37,5 @@ f (void)\n   (void *) c; /* { dg-warning \"warning: cast to pointer from integer of different size\" } */\n   (void *) (char) 1;\n   (char) p; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n-  (char) (void *) 1;\n+  (char) (void *) 1; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n }"}, {"sha": "26a38cbbda0c35825f43bb78faffa65cf5c82477", "filename": "gcc/testsuite/gcc.dg/cast-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-3.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -37,5 +37,5 @@ f (void)\n   (void *) c; /* { dg-warning \"warning: cast to pointer from integer of different size\" } */\n   (void *) (char) 1;\n   (char) p; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n-  (char) (void *) 1;\n+  (char) (void *) 1; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n }"}, {"sha": "32b02cb3a88bb1733f14fadfa7dd3803b0c0a77d", "filename": "gcc/testsuite/gcc.dg/cast-4.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-4.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -0,0 +1,13 @@\n+/* Test warnings when casting from a constant integer to pointer.  \n+   Test with -pedantic-errors.  */\n+/* Origin: Carlos O'Donell <carlos@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic-errors\" } */\n+\n+extern int i;\n+char c;\n+void\n+f (void)\n+{\n+  c = (char)&i; /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n+}"}, {"sha": "76e7cc52a01c489d9d37c57f343fddcc6841d1db", "filename": "gcc/testsuite/gcc.dg/format/cast-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1c7aef72e3770b6efe5270de519e68f906a0b7/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fcast-1.c?ref=8d1c7aef72e3770b6efe5270de519e68f906a0b7", "patch": "@@ -12,5 +12,5 @@ f (int x)\n {\n   printf(\"%s\", x); /* { dg-warning \"format\" } */\n   printf((char *)(size_t)\"%s\", x); /* { dg-warning \"format\" } */\n-  printf((char *)(char)\"%s\", x);\n+  printf((char *)(char)\"%s\", x); /* { dg-warning \"warning: cast from pointer to integer of different size\" } */\n }"}]}