{"sha": "beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVhYTc0YWUwMzA1MDUyZjRlOTZhZTAyNzY5YzVmZjBhYzg5Y2JjOQ==", "commit": {"author": {"name": "Dave Love", "email": "d.love@dl.ac.uk", "date": "1998-08-11T10:15:04Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-08-11T10:15:04Z"}, "message": "README: Update from Craig.\n\n1998-08-11  Dave Love  <d.love@dl.ac.uk>\n\t* README: Update from Craig.\n\nFrom-SVN: r21672", "tree": {"sha": "55f70ed0c5211a4ca0912dacb63604a2744d61e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f70ed0c5211a4ca0912dacb63604a2744d61e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9/comments", "author": null, "committer": null, "parents": [{"sha": "d606ce281efee2b91deaf28fd3ed78330297df79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d606ce281efee2b91deaf28fd3ed78330297df79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d606ce281efee2b91deaf28fd3ed78330297df79"}], "stats": {"total": 119, "additions": 92, "deletions": 27}, "files": [{"sha": "34e29d2df5e9711edbc8e2a344bc31f5c78f101a", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "patch": "@@ -1,3 +1,7 @@\n+1998-08-11  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* README: Update from Craig.\n+\n 1998-07-24  Dave Love  <d.love@dl.ac.uk>\n \n \t* Makefile.in (s-libe77, ${srcdir}/configure, g2c.h, Makefile,"}, {"sha": "008654b3c775b857b5afc0c56e5228000e1d1ad2", "filename": "libf2c/README", "status": "modified", "additions": 88, "deletions": 27, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9/libf2c%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beaa74ae0305052f4e96ae02769c5ff0ac89cbc9/libf2c%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FREADME?ref=beaa74ae0305052f4e96ae02769c5ff0ac89cbc9", "patch": "@@ -1,38 +1,41 @@\n-1998-04-20\n+1998-08-11\n \n-This directory contains the f2c library packaged for use with g77 to configure\n-and build automatically (in principle!) as part of the top-level configure and\n-make steps.  This depends on the makefile and configure fragments in ../f.\n-g77 names this library `libg2c' to avoid conflict with existing copies\n-of `libf2c' on a system.\n+This directory contains the libf2c library packaged for use with g77\n+to configure and build automatically (in principle!) as part of the\n+top-level configure and make steps.  g77 names this library `libg2c'\n+to avoid conflicts with existing copies of `libf2c' on a system.\n \n-Some small changes have been made to the f2c distributions of lib[FI]77 which\n-come from <ftp:bell-labs.com/netlib/f2c/> and are maintained (excellently) by\n-David M. Gay <dmg@bell-labs.com>.  See the Notice files for copyright\n-information.  I'll try to get the changes rolled into the f2c distribution.\n+Some small changes have been made vis-a-vis the netlib distribution of\n+libf2c, which comes from <ftp:bell-labs.com/netlib/f2c/> and is maintained\n+(excellently) by David M. Gay <dmg@bell-labs.com>.  See the Notice files\n+for copyright information.  We usually try to get g77-specific changes\n+rolled back into the libf2c distribution.\n \n Files that come directly from netlib are either maintained in the\n-gcc/f/runtime/ directory under their original names or, if they\n-are not pertinent for g77's version of libf2c, under their original\n-names with `.netlib' appended.  For example, gcc/f/runtime/permissions.netlib\n-is a copy of f2c's top-level`permissions' file in the netlib distribution.\n-In this case, it applies only to the relevant portions of the libF77/ and\n-libI77/ directories; it does not apply to the libU77/ directory, which is\n-distributed under different licensing arrangements.  Similarly,\n-the `makefile.netlib' files in libF77/ and libI77/ are copies of\n-the respective `makefile' files in the netlib distribution, but\n-are not used when building g77's version of libf2c.\n-\n-The `README.netlib' files in libF77/ and libI77/ thus might be\n+libf2c directory under their original names or, if they are not pertinent\n+for g77's version of libf2c, under their original names with `.netlib'\n+appended.  For example, permissions.netlib is a copy of f2c's top-level\n+`permissions' file in the netlib distribution.  In this case, it applies\n+only to the relevant portions of the libF77/ and libI77/ directories; it\n+does not apply to the libU77/ directory, which is distributed under\n+different licensing arrangements.  Similarly, the `makefile.netlib' files\n+in the libF77/ and libI77/ subdirectories are copies of the respective\n+`makefile' files in the netlib distribution, but are not used when\n+building g77's version of libf2c.\n+\n+The README.netlib files in libF77/ and libI77/ thus might be\n interesting, but should not be taken as guidelines for how to\n configure and build libf2c in g77's distribution.\n \n-The packaging for auto-configuration was done by Dave Love <d.love@dl.ac.uk>.\n-Minor changes have been made by James Craig Burley <burley@gnu.org>,\n-who probably broke things Dave had working.  :-)\n+* Read permissions.netlib for licensing conditions that apply to\n+  distributing programs containing portions of code in the libF77/ and\n+  libI77/ subdirectories.  Also read disclaimer.netlib.\n+\n+* Read libU77/COPYING.LIB for licensing conditions that apply to\n+  distributing programs containing portions of code in the libU77/\n+  subdirectory.\n \n-Among the user-visible changes (choices) g77 makes in its\n-version of libf2c:\n+Among the user-visible changes (choices) g77 makes in its version of libf2c:\n \n -  f2c.h configured to default to padding unformatted direct reads\n    (#define Pad_UDread), because that's the behavior most users\n@@ -46,3 +49,61 @@ version of libf2c:\n \n -  dtime_() and etime_() are from Dave Love's libU77, not from\n    netlib's libF77.\n+\n+-  Routines that are intended to be called directly via user code\n+   (as in `CALL EXIT', but not the support routines for `OPEN')\n+   have been renamed from `<name>' to `G77_<name>_0'.  This, in\n+   combination with g77 recognizing these names as intrinsics and\n+   calling them directly by those names, reduces the likelihood of\n+   interface mismatches occurring due to use of compiler options\n+   that change code generation, and permits use of these names as\n+   both intrinsics and user-supplied routines in applications (as\n+   required by the Fortran standards).  f2cext.c contains \"jacket\"\n+   routines named `<name>' that call `G77_<name>_0', to support\n+   code that relies on calling the relevant routines as `EXTERNAL'\n+   routines.\n+\n+   Note that the `_0' in the name denotes version 0 of the *interface*,\n+   not the *implementation*, of a routine.  The interface of a\n+   given routine *must not change* -- instead, introduce a new copy\n+   of the code, with an increment (e.g. `_1') suffix, having the\n+   new interface.  Whether the previous interface is maintained is\n+   not as important as ensuring the routine implementing the new\n+   interface is never successfully linked to a call in existing,\n+   e.g. previously compiled, code that expects the old interface.\n+\n+-  Version.c in the subdirectories contains g77-specific version\n+   information and a routine (per subdirectory) to print both the\n+   netlib and g77 version information when called.  The `g77 -v'\n+   command is designed to trigger this, by compiling, linking, and\n+   running a small program that calls the routines in sequence.\n+\n+-  libF77/main.c no longer contains the actual code to copy the\n+   argc and argv values into globals or to set up the signal-handling\n+   environment.  These have been removed to libF77/setarg.c and\n+   libF77/setsig.c, respectively.  libF77/main.c contains procedure\n+   calls to the new code in place of the code itself.  This should\n+   simplify linking executables with a main() function other than\n+   that in libF77/main.c (such as one written by the user in C or\n+   C++).  See the g77 documentation for more information.\n+\n+-  Complex-arithmetic support routines in libF77/ take a different approach\n+   to avoiding problems resulting from aliased input and output arguments,\n+   which should avoid particularly unusual alias problems that netlib\n+   libf2c might suffer from.\n+\n+-  libF77/signal_.c supports systems with 64-bit pointers and 32-bit\n+   integers.\n+\n+-  I/O routines in libI77/ have code to detect attempts to do recursive\n+   I/O more \"directly\", mainly to lead to a clearer diagnostic than\n+   typically occurs under such conditions.\n+\n+-  Formatted-I/O routines in libI77/ have code to pretty-print a FORMAT\n+   string when printing a fatal diagnostic involving formatted I/O.\n+\n+-  libI77/open.c supports a more robust, perhaps more secure, method\n+   of naming temporary files on some systems.\n+\n+-  Some g77-specific handling of building under Microsoft operating\n+   systems exists, mainly in libI77/."}]}