{"sha": "cfad4856fa46abc878934a9433d0bfc2482ccf00", "node_id": "C_kwDOANBUbNoAKGNmYWQ0ODU2ZmE0NmFiYzg3ODkzNGE5NDMzZDBiZmMyNDgyY2NmMDA", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-06-14T03:39:49Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-06-15T23:55:36Z"}, "message": "xtensa: Eliminate unwanted reg-reg moves during DFmode input reloads\n\nWhen spilled DFmode registers are reloaded in, once loaded into a pair of\nSImode regs and then copied from that regs.  Such unwanted reg-reg moves\nseems not to be eliminated at the \"cprop_hardreg\" stage, despite no problem\nin output reloads.\n\nLuckily it is easy to resolve such inefficiencies, with the use of peephole2\npattern.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/predicates.md (reload_operand):\n\tNew predicate.\n\t* config/xtensa/xtensa.md: New peephole2 pattern.", "tree": {"sha": "cb637df127a7f8a5cc60b7618c34921650db7411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb637df127a7f8a5cc60b7618c34921650db7411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfad4856fa46abc878934a9433d0bfc2482ccf00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfad4856fa46abc878934a9433d0bfc2482ccf00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfad4856fa46abc878934a9433d0bfc2482ccf00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfad4856fa46abc878934a9433d0bfc2482ccf00/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c95e307e3a978166cd5d6817ec9d8293825ff3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95e307e3a978166cd5d6817ec9d8293825ff3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95e307e3a978166cd5d6817ec9d8293825ff3fb"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "edd13ae41b96ab3d57abfdfe6bdbbda276250ad2", "filename": "gcc/config/xtensa/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfad4856fa46abc878934a9433d0bfc2482ccf00/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfad4856fa46abc878934a9433d0bfc2482ccf00/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fpredicates.md?ref=cfad4856fa46abc878934a9433d0bfc2482ccf00", "patch": "@@ -165,6 +165,19 @@\n   (and (match_code \"const_int\")\n        (match_test \"xtensa_mem_offset (INTVAL (op), SFmode)\")))\n \n+(define_predicate \"reload_operand\"\n+  (match_code \"mem\")\n+{\n+  const_rtx addr = XEXP (op, 0);\n+  if (REG_P (addr))\n+    return REGNO (addr) == A1_REG;\n+  if (GET_CODE (addr) == PLUS)\n+    return REG_P (XEXP (addr, 0))\n+\t   && REGNO (XEXP (addr, 0)) == A1_REG\n+\t   && CONST_INT_P (XEXP (addr, 1));\n+  return false;\n+})\n+\n (define_predicate \"branch_operator\"\n   (match_code \"eq,ne,lt,ge\"))\n "}, {"sha": "8ed0ff53a707af742b2db2b33e6dd8cf52fb7934", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfad4856fa46abc878934a9433d0bfc2482ccf00/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfad4856fa46abc878934a9433d0bfc2482ccf00/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=cfad4856fa46abc878934a9433d0bfc2482ccf00", "patch": "@@ -2749,3 +2749,34 @@\n \t(if_then_else (match_test \"TARGET_DENSITY\")\n \t\t      (const_int 5)\n \t\t      (const_int 6)))])\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(match_operand:SI 6 \"reload_operand\"))\n+   (set (match_operand:SI 1 \"register_operand\")\n+\t(match_operand:SI 7 \"reload_operand\"))\n+   (set (match_operand:SF 2 \"register_operand\")\n+\t(match_operand:SF 4 \"register_operand\"))\n+   (set (match_operand:SF 3 \"register_operand\")\n+\t(match_operand:SF 5 \"register_operand\"))]\n+  \"REGNO (operands[0]) == REGNO (operands[4])\n+   && REGNO (operands[1]) == REGNO (operands[5])\n+   && peep2_reg_dead_p (4, operands[0])\n+   && peep2_reg_dead_p (4, operands[1])\"\n+  [(set (match_dup 2)\n+\t(match_dup 6))\n+   (set (match_dup 3)\n+\t(match_dup 7))]\n+{\n+  uint32_t check = 0;\n+  int i;\n+  for (i = 0; i <= 3; ++i)\n+    {\n+      uint32_t mask = (uint32_t)1 << REGNO (operands[i]);\n+      if (check & mask)\n+\tFAIL;\n+      check |= mask;\n+    }\n+  operands[6] = gen_rtx_MEM (SFmode, XEXP (operands[6], 0));\n+  operands[7] = gen_rtx_MEM (SFmode, XEXP (operands[7], 0));\n+})"}]}