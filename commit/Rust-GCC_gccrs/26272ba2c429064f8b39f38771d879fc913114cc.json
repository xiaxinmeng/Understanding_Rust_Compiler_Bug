{"sha": "26272ba2c429064f8b39f38771d879fc913114cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyNzJiYTJjNDI5MDY0ZjhiMzlmMzg3NzFkODc5ZmM5MTMxMTRjYw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2008-09-01T23:20:34Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2008-09-01T23:20:34Z"}, "message": "arm.c (arm_override_options): Set arm_abi earlier.\n\n2008-09-01  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.c (arm_override_options): Set arm_abi earlier.\n\tAllow Interworking on ARMv4 EABI based targets.\n\t* config/arm/bpabi.h (TARGET_FIX_V4BX_SPEC): Define.\n\t(SUBTARGET_EXTRA_ASM_SPEC, LINK_SPEC): Add TARGET_FIX_V4BX_SPEC.\n\nFrom-SVN: r139874", "tree": {"sha": "87869f482a0d41cc4b399dd2739ad40f6ee686c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87869f482a0d41cc4b399dd2739ad40f6ee686c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26272ba2c429064f8b39f38771d879fc913114cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26272ba2c429064f8b39f38771d879fc913114cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26272ba2c429064f8b39f38771d879fc913114cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26272ba2c429064f8b39f38771d879fc913114cc/comments", "author": null, "committer": null, "parents": [{"sha": "48c23a6c39fa4f75a9054921ad7ce2f12e99fdb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c23a6c39fa4f75a9054921ad7ce2f12e99fdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c23a6c39fa4f75a9054921ad7ce2f12e99fdb0"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "d92bff67f5540f77635747006c8f1af4b5f0cb58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26272ba2c429064f8b39f38771d879fc913114cc", "patch": "@@ -1,3 +1,10 @@\n+2008-09-01  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_override_options): Set arm_abi earlier.\n+\tAllow Interworking on ARMv4 EABI based targets.\n+\t* config/arm/bpabi.h (TARGET_FIX_V4BX_SPEC): Define.\n+\t(SUBTARGET_EXTRA_ASM_SPEC, LINK_SPEC): Add TARGET_FIX_V4BX_SPEC.\n+\n 2008-09-01  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/thumb2.md (thumb2_negscc): Match the correct operand for"}, {"sha": "c6128acc2e2dc159b4ac2f8d6093452213411a83", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=26272ba2c429064f8b39f38771d879fc913114cc", "patch": "@@ -1186,12 +1186,30 @@ arm_override_options (void)\n \n   tune_flags = all_cores[(int)arm_tune].flags;\n \n+  if (target_abi_name)\n+    {\n+      for (i = 0; i < ARRAY_SIZE (arm_all_abis); i++)\n+\t{\n+\t  if (streq (arm_all_abis[i].name, target_abi_name))\n+\t    {\n+\t      arm_abi = arm_all_abis[i].abi_type;\n+\t      break;\n+\t    }\n+\t}\n+      if (i == ARRAY_SIZE (arm_all_abis))\n+\terror (\"invalid ABI option: -mabi=%s\", target_abi_name);\n+    }\n+  else\n+    arm_abi = ARM_DEFAULT_ABI;\n+\n   /* Make sure that the processor choice does not conflict with any of the\n      other command line choices.  */\n   if (TARGET_ARM && !(insn_flags & FL_NOTM))\n     error (\"target CPU does not support ARM mode\");\n \n-  if (TARGET_INTERWORK && !(insn_flags & FL_THUMB))\n+  /* BPABI targets use linker tricks to allow interworking on cores\n+     without thumb support.  */\n+  if (TARGET_INTERWORK && !((insn_flags & FL_THUMB) || TARGET_BPABI))\n     {\n       warning (0, \"target CPU does not support interworking\" );\n       target_flags &= ~MASK_INTERWORK;\n@@ -1304,22 +1322,6 @@ arm_override_options (void)\n   if (arm_arch5)\n     target_flags &= ~MASK_INTERWORK;\n \n-  if (target_abi_name)\n-    {\n-      for (i = 0; i < ARRAY_SIZE (arm_all_abis); i++)\n-\t{\n-\t  if (streq (arm_all_abis[i].name, target_abi_name))\n-\t    {\n-\t      arm_abi = arm_all_abis[i].abi_type;\n-\t      break;\n-\t    }\n-\t}\n-      if (i == ARRAY_SIZE (arm_all_abis))\n-\terror (\"invalid ABI option: -mabi=%s\", target_abi_name);\n-    }\n-  else\n-    arm_abi = ARM_DEFAULT_ABI;\n-\n   if (TARGET_IWMMXT && !ARM_DOUBLEWORD_ALIGN)\n     error (\"iwmmxt requires an AAPCS compatible ABI for proper operation\");\n "}, {"sha": "38be1da261a2b1ecebf6fc4d2e565782bc6ad920", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26272ba2c429064f8b39f38771d879fc913114cc/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=26272ba2c429064f8b39f38771d879fc913114cc", "patch": "@@ -51,9 +51,11 @@\n /* The BPABI integer comparison routines return { -1, 0, 1 }.  */\n #define TARGET_LIB_INT_CMP_BIASED !TARGET_BPABI\n \n+#define TARGET_FIX_V4BX_SPEC \" %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*|march=armv4:--fix-v4bx}\"\n+\n /* Tell the assembler to build BPABI binaries.  */\n #undef  SUBTARGET_EXTRA_ASM_SPEC\n-#define SUBTARGET_EXTRA_ASM_SPEC \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=4}\"\n+#define SUBTARGET_EXTRA_ASM_SPEC \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=4}\" TARGET_FIX_V4BX_SPEC\n \n #ifndef SUBTARGET_EXTRA_LINK_SPEC\n #define SUBTARGET_EXTRA_LINK_SPEC \"\"\n@@ -63,7 +65,7 @@\n #define BPABI_LINK_SPEC \\\n   \"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n   \"%{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} \"\t\\\n-  \"-X\" SUBTARGET_EXTRA_LINK_SPEC\n+  \"-X\" SUBTARGET_EXTRA_LINK_SPEC TARGET_FIX_V4BX_SPEC\n \n #undef  LINK_SPEC\n #define LINK_SPEC BPABI_LINK_SPEC"}]}