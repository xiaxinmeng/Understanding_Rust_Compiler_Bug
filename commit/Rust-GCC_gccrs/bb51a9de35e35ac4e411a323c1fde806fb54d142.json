{"sha": "bb51a9de35e35ac4e411a323c1fde806fb54d142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI1MWE5ZGUzNWUzNWFjNGU0MTFhMzIzYzFmZGU4MDZmYjU0ZDE0Mg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-05T15:36:54Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-10T20:26:17Z"}, "message": "Add toplevel resolution for type alias\n\nTypeAliases can be contained within ImplBlocks and need their full\ncanonical path to be resolved.", "tree": {"sha": "b2120cdfd5781be08e7aa78a54f256f969b5b387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2120cdfd5781be08e7aa78a54f256f969b5b387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb51a9de35e35ac4e411a323c1fde806fb54d142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb51a9de35e35ac4e411a323c1fde806fb54d142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb51a9de35e35ac4e411a323c1fde806fb54d142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb51a9de35e35ac4e411a323c1fde806fb54d142/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5ce98cbb8db8d33774c50e229daedf99a71bb5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ce98cbb8db8d33774c50e229daedf99a71bb5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5ce98cbb8db8d33774c50e229daedf99a71bb5a"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "9b71dad25e4618614d42aff2c3dff614a55f755f", "filename": "gcc/rust/resolve/rust-ast-resolve-implitem.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb51a9de35e35ac4e411a323c1fde806fb54d142/gcc%2Frust%2Fresolve%2Frust-ast-resolve-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb51a9de35e35ac4e411a323c1fde806fb54d142/gcc%2Frust%2Fresolve%2Frust-ast-resolve-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-implitem.h?ref=bb51a9de35e35ac4e411a323c1fde806fb54d142", "patch": "@@ -43,6 +43,21 @@ class ResolveToplevelImplItem : public ResolverBase\n     item->accept_vis (resolver);\n   }\n \n+  void visit (AST::TypeAlias &type) override\n+  {\n+    auto path = prefix.append (CanonicalPath (type.get_new_type_name ()));\n+    resolver->get_type_scope ().insert (\n+      path, type.get_node_id (), type.get_locus (), false,\n+      [&] (const CanonicalPath &, NodeId, Location locus) -> void {\n+\tRichLocation r (type.get_locus ());\n+\tr.add_range (locus);\n+\trust_error_at (r, \"redefined multiple times\");\n+      });\n+    resolver->insert_new_definition (type.get_node_id (),\n+\t\t\t\t     Definition{type.get_node_id (),\n+\t\t\t\t\t\ttype.get_node_id ()});\n+  }\n+\n   void visit (AST::ConstantItem &constant) override\n   {\n     auto path"}, {"sha": "09d64306bf90de52a80d8292465d76f59e3b36dc", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb51a9de35e35ac4e411a323c1fde806fb54d142/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb51a9de35e35ac4e411a323c1fde806fb54d142/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=bb51a9de35e35ac4e411a323c1fde806fb54d142", "patch": "@@ -433,10 +433,22 @@ class ResolveItem : public ResolverBase\n     resolver->get_label_scope ().pop ();\n   }\n \n-  // TODO\n-  void visit (AST::TraitItemConst &) override { gcc_unreachable (); }\n+  void visit (AST::TraitItemConst &constant) override\n+  {\n+    ResolveType::go (constant.get_type ().get (), constant.get_node_id ());\n+    ResolveExpr::go (constant.get_expr ().get (), constant.get_node_id ());\n+\n+    // the mutability checker needs to verify for immutable decls the number\n+    // of assignments are <1. This marks an implicit assignment\n+    resolver->mark_decl_mutability (constant.get_node_id (), false);\n+    resolver->mark_assignment_to_decl (constant.get_node_id (),\n+\t\t\t\t       constant.get_node_id ());\n+  }\n \n-  void visit (AST::TraitItemType &) override { gcc_unreachable (); }\n+  void visit (AST::TraitItemType &alias) override\n+  {\n+    // nothing to do here until we start supporting Type Bounds\n+  }\n \n private:\n   ResolveItem () : ResolverBase (UNKNOWN_NODEID) {}"}]}