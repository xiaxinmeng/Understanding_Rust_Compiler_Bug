{"sha": "66c8aed2528f2f1c3df140f491c53b4834ca8123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjOGFlZDI1MjhmMmYxYzNkZjE0MGY0OTFjNTNiNDgzNGNhODEyMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-05-31T17:33:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-05-31T17:33:05Z"}, "message": "natFileDescriptorPosix.cc (open): Allocate buffer to correct size.\n\n\t* java/io/natFileDescriptorPosix.cc (open): Allocate buffer to\n\tcorrect size.\n\t(write): Loop until write completes.  From Corey Minyard.\n\nFrom-SVN: r42749", "tree": {"sha": "8b33aeed60e98f119fb0f177c7ed775d58c7194e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b33aeed60e98f119fb0f177c7ed775d58c7194e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c8aed2528f2f1c3df140f491c53b4834ca8123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c8aed2528f2f1c3df140f491c53b4834ca8123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c8aed2528f2f1c3df140f491c53b4834ca8123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c8aed2528f2f1c3df140f491c53b4834ca8123/comments", "author": null, "committer": null, "parents": [{"sha": "c9682caf900e42175e7a2668520e9297570f53b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9682caf900e42175e7a2668520e9297570f53b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9682caf900e42175e7a2668520e9297570f53b0"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "33399886542cd9b24fe7189eee5ed620182c81b5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c8aed2528f2f1c3df140f491c53b4834ca8123/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c8aed2528f2f1c3df140f491c53b4834ca8123/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=66c8aed2528f2f1c3df140f491c53b4834ca8123", "patch": "@@ -1,3 +1,9 @@\n+2001-05-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/io/natFileDescriptorPosix.cc (open): Allocate buffer to\n+\tcorrect size.\n+\t(write): Loop until write completes.  From Corey Minyard.\n+\n 2001-05-29  Laurent Guerby  <guerby@acm.org>\n \n \t* java/awt/geom/Rectangle2D.java: fix doc typo."}, {"sha": "cb7a164d93494f3e2b49b4a2392b8179d4681365", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c8aed2528f2f1c3df140f491c53b4834ca8123/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c8aed2528f2f1c3df140f491c53b4834ca8123/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=66c8aed2528f2f1c3df140f491c53b4834ca8123", "patch": "@@ -68,10 +68,8 @@ java::io::FileDescriptor::sync (void)\n jint\n java::io::FileDescriptor::open (jstring path, jint jflags)\n {\n-  // FIXME: eww.\n-  char buf[MAXPATHLEN];\n+  char *buf = (char *) _Jv_AllocBytes (_Jv_GetStringUTFLength (path) + 1);\n   jsize total = JvGetStringUTFRegion (path, 0, path->length(), buf);\n-  // FIXME?\n   buf[total] = '\\0';\n   int flags = 0;\n #ifdef O_BINARY\n@@ -121,17 +119,20 @@ void\n java::io::FileDescriptor::write (jint b)\n {\n   jbyte d = (jbyte) b;\n-  int r = ::write (fd, &d, 1);\n-  if (java::lang::Thread::interrupted())\n+  int r = 0;\n+  while (r != 1)\n     {\n-      InterruptedIOException *iioe\n-\t= new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n-      iioe->bytesTransferred = r == -1 ? 0 : r;\n-      throw iioe;\n+      r = ::write (fd, &d, 1);\n+      if (java::lang::Thread::interrupted())\n+\t{\n+\t  InterruptedIOException *iioe\n+\t    = new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n+\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t  throw iioe;\n+\t}\n+      else if (r == -1)\n+\tthrow new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n-  else if (r == -1)\n-    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n-  // FIXME: loop if r != 1.\n }\n \n void\n@@ -142,17 +143,26 @@ java::io::FileDescriptor::write (jbyteArray b, jint offset, jint len)\n   if (offset < 0 || len < 0 || offset + len > JvGetArrayLength (b))\n     throw new java::lang::ArrayIndexOutOfBoundsException;\n   jbyte *bytes = elements (b) + offset;\n-  int r = ::write (fd, bytes, len);\n-  if (java::lang::Thread::interrupted())\n+\n+  int written = 0;\n+  while (len > 0)\n     {\n-      InterruptedIOException *iioe\n-\t= new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n-      iioe->bytesTransferred = r == -1 ? 0 : r;\n-      throw iioe;\n+      int r = ::write (fd, bytes, len);\n+      if (r != -1)\n+\twritten += r;\n+      if (java::lang::Thread::interrupted())\n+\t{\n+\t  InterruptedIOException *iioe\n+\t    = new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n+\t  iioe->bytesTransferred = written;\n+\t  throw iioe;\n+\t}\n+      else if (r == -1)\n+\tthrow new IOException (JvNewStringLatin1 (strerror (errno)));\n+\n+      len -= r;\n+      bytes += r;\n     }\n-  else if (r == -1)\n-    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n-  // FIXME: loop if r != len.\n }\n \n void"}]}