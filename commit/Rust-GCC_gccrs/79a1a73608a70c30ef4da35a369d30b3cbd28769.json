{"sha": "79a1a73608a70c30ef4da35a369d30b3cbd28769", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlhMWE3MzYwOGE3MGMzMGVmNGRhMzVhMzY5ZDMwYjNjYmQyODc2OQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-08-07T00:10:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-08-07T00:10:03Z"}, "message": "decl.c (grokparms): Use cp_build_qualified_type instead TYPE_MAIN_VARIANT.\n\n2003-08-06  Aldy Hernandez  <aldyh@redhat.com>\n\n\t* decl.c (grokparms): Use cp_build_qualified_type instead\n\tTYPE_MAIN_VARIANT.\n\n[[Split portion of a mixed commit.]]\n\nFrom-SVN: r70211.2", "tree": {"sha": "61f3b2712febddf7c07680508d2765228bffdc8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61f3b2712febddf7c07680508d2765228bffdc8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79a1a73608a70c30ef4da35a369d30b3cbd28769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a1a73608a70c30ef4da35a369d30b3cbd28769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a1a73608a70c30ef4da35a369d30b3cbd28769", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a1a73608a70c30ef4da35a369d30b3cbd28769/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "372431b6c174c2e865fc0bc70e82cccf7b39d1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/372431b6c174c2e865fc0bc70e82cccf7b39d1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/372431b6c174c2e865fc0bc70e82cccf7b39d1a6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f6545a866dacdbc5bdaf1bf0932b01e91fc0fd2b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79a1a73608a70c30ef4da35a369d30b3cbd28769/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79a1a73608a70c30ef4da35a369d30b3cbd28769/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=79a1a73608a70c30ef4da35a369d30b3cbd28769", "patch": "@@ -1,3 +1,8 @@\n+2003-08-06  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* decl.c (grokparms): Use cp_build_qualified_type instead\n+\tTYPE_MAIN_VARIANT.\n+\n 2003-08-05  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* cxx-pretty-print.h: New file."}, {"sha": "9afa3036109805dab68e12650b32367d261b8d6a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79a1a73608a70c30ef4da35a369d30b3cbd28769/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79a1a73608a70c30ef4da35a369d30b3cbd28769/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=79a1a73608a70c30ef4da35a369d30b3cbd28769", "patch": "@@ -11970,7 +11970,7 @@ grokparms (tree first_parm)\n \t{\n \t  /* Top-level qualifiers on the parameters are\n \t     ignored for function types.  */\n-\t  type = TYPE_MAIN_VARIANT (type);\n+\t  type = cp_build_qualified_type (type, 0);\n \t  if (TREE_CODE (type) == METHOD_TYPE)\n \t    {\n \t      error (\"parameter `%D' invalidly declared method type\", decl);"}]}