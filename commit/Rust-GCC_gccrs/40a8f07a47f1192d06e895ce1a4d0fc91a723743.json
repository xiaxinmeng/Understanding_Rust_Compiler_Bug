{"sha": "40a8f07a47f1192d06e895ce1a4d0fc91a723743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhOGYwN2E0N2YxMTkyZDA2ZTg5NWNlMWE0ZDBmYzkxYTcyMzc0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-05-16T07:12:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-05-16T07:12:02Z"}, "message": "re PR target/39942 (Nonoptimal code - leaveq; xchg   %ax,%ax; retq)\n\n\tPR target/39942\n\t* final.c (label_to_max_skip): New function.\n\t(label_to_alignment): Only use LABEL_TO_ALIGNMENT if\n\tCODE_LABEL_NUMBER <= max_labelno.\n\t* output.h (label_to_max_skip): New prototype.\n\t* config/i386/i386.c (ix86_avoid_jump_misspredicts): Renamed to...\n\t(ix86_avoid_jump_mispredicts): ... this.  Don't define if\n\tASM_OUTPUT_MAX_SKIP_ALIGN isn't defined.  Update comment.\n\tHandle CODE_LABELs with >= 16 byte alignment or with\n\tmax_skip == (1 << align) - 1.\n\t(ix86_reorg): Don't call ix86_avoid_jump_mispredicts if\n\tASM_OUTPUT_MAX_SKIP_ALIGN isn't defined.\n\nFrom-SVN: r147607", "tree": {"sha": "6e8f264af352b2d4f86c2430ec273c272f874f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8f264af352b2d4f86c2430ec273c272f874f45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a8f07a47f1192d06e895ce1a4d0fc91a723743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a8f07a47f1192d06e895ce1a4d0fc91a723743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a8f07a47f1192d06e895ce1a4d0fc91a723743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a8f07a47f1192d06e895ce1a4d0fc91a723743/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a99c6711f83e23596c5fdbf575484e3fa34d6e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99c6711f83e23596c5fdbf575484e3fa34d6e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99c6711f83e23596c5fdbf575484e3fa34d6e45"}], "stats": {"total": 88, "additions": 78, "deletions": 10}, "files": [{"sha": "61c62b60e55bc19030568bfb5776d28dd17850ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40a8f07a47f1192d06e895ce1a4d0fc91a723743", "patch": "@@ -1,5 +1,18 @@\n 2009-05-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/39942\n+\t* final.c (label_to_max_skip): New function.\n+\t(label_to_alignment): Only use LABEL_TO_ALIGNMENT if\n+\tCODE_LABEL_NUMBER <= max_labelno.\n+\t* output.h (label_to_max_skip): New prototype.\n+\t* config/i386/i386.c (ix86_avoid_jump_misspredicts): Renamed to...\n+\t(ix86_avoid_jump_mispredicts): ... this.  Don't define if\n+\tASM_OUTPUT_MAX_SKIP_ALIGN isn't defined.  Update comment.\n+\tHandle CODE_LABELs with >= 16 byte alignment or with\n+\tmax_skip == (1 << align) - 1.\n+\t(ix86_reorg): Don't call ix86_avoid_jump_mispredicts if\n+\tASM_OUTPUT_MAX_SKIP_ALIGN isn't defined.\n+\n \tPR target/39942\n \t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Don't emit second\n \t.p2align 3 if MAX_SKIP is smaller than 7."}, {"sha": "acd3069c7fc8e9f24e6efdd91360e2af54922a30", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 49, "deletions": 8, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=40a8f07a47f1192d06e895ce1a4d0fc91a723743", "patch": "@@ -27191,6 +27191,7 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n     }\n }\n \n+#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n /* We don't have exact information about the insn sizes, but we may assume\n    quite safely that we are informed about all 1 byte insns and memory\n    address sizes.  This is enough to eliminate unnecessary padding in\n@@ -27241,7 +27242,7 @@ min_insn_size (rtx insn)\n    window.  */\n \n static void\n-ix86_avoid_jump_misspredicts (void)\n+ix86_avoid_jump_mispredicts (void)\n {\n   rtx insn, start = get_insns ();\n   int nbytes = 0, njumps = 0;\n@@ -27255,15 +27256,52 @@ ix86_avoid_jump_misspredicts (void)\n \n      The smallest offset in the page INSN can start is the case where START\n      ends on the offset 0.  Offset of INSN is then NBYTES - sizeof (INSN).\n-     We add p2align to 16byte window with maxskip 17 - NBYTES + sizeof (INSN).\n+     We add p2align to 16byte window with maxskip 15 - NBYTES + sizeof (INSN).\n      */\n-  for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+  for (insn = start; insn; insn = NEXT_INSN (insn))\n     {\n+      int min_size;\n \n-      nbytes += min_insn_size (insn);\n+      if (GET_CODE (insn) == CODE_LABEL)\n+\t{\n+\t  int align = label_to_alignment (insn);\n+\t  int max_skip = label_to_max_skip (insn);\n+\n+\t  if (max_skip > 15)\n+\t    max_skip = 15;\n+\t  /* If align > 3, only up to 16 - max_skip - 1 bytes can be\n+\t     already in the current 16 byte page, because otherwise\n+\t     ASM_OUTPUT_MAX_SKIP_ALIGN could skip max_skip or fewer\n+\t     bytes to reach 16 byte boundary.  */\n+\t  if (align <= 0\n+\t      || (align <= 3 && max_skip != (1 << align) - 1))\n+\t    max_skip = 0;\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"Label %i with max_skip %i\\n\",\n+\t\t     INSN_UID (insn), max_skip);\n+\t  if (max_skip)\n+\t    {\n+\t      while (nbytes + max_skip >= 16)\n+\t\t{\n+\t\t  start = NEXT_INSN (start);\n+\t\t  if ((JUMP_P (start)\n+\t\t       && GET_CODE (PATTERN (start)) != ADDR_VEC\n+\t\t       && GET_CODE (PATTERN (start)) != ADDR_DIFF_VEC)\n+\t\t      || CALL_P (start))\n+\t\t    njumps--, isjump = 1;\n+\t\t  else\n+\t\t    isjump = 0;\n+\t\t  nbytes -= min_insn_size (start);\n+\t\t}\n+\t    }\n+\t  continue;\n+\t}\n+\n+      min_size = min_insn_size (insn);\n+      nbytes += min_size;\n       if (dump_file)\n-        fprintf(dump_file, \"Insn %i estimated to %i bytes\\n\",\n-\t\tINSN_UID (insn), min_insn_size (insn));\n+\tfprintf (dump_file, \"Insn %i estimated to %i bytes\\n\",\n+\t\t INSN_UID (insn), min_size);\n       if ((JUMP_P (insn)\n \t   && GET_CODE (PATTERN (insn)) != ADDR_VEC\n \t   && GET_CODE (PATTERN (insn)) != ADDR_DIFF_VEC)\n@@ -27287,7 +27325,7 @@ ix86_avoid_jump_misspredicts (void)\n       gcc_assert (njumps >= 0);\n       if (dump_file)\n         fprintf (dump_file, \"Interval %i to %i has %i bytes\\n\",\n-\t\tINSN_UID (start), INSN_UID (insn), nbytes);\n+\t\t INSN_UID (start), INSN_UID (insn), nbytes);\n \n       if (njumps == 3 && isjump && nbytes < 16)\n \t{\n@@ -27300,6 +27338,7 @@ ix86_avoid_jump_misspredicts (void)\n \t}\n     }\n }\n+#endif\n \n /* AMD Athlon works faster\n    when RET is not destination of conditional jump or directly preceded\n@@ -27363,8 +27402,10 @@ ix86_reorg (void)\n     {\n       if (TARGET_PAD_RETURNS)\n \tix86_pad_returns ();\n+#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n       if (TARGET_FOUR_JUMP_LIMIT)\n-\tix86_avoid_jump_misspredicts ();\n+\tix86_avoid_jump_mispredicts ();\n+#endif\n     }\n }\n "}, {"sha": "3c2e364c3b21d0d54e139e6ce7f081b6aa728dda", "filename": "gcc/final.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=40a8f07a47f1192d06e895ce1a4d0fc91a723743", "patch": "@@ -553,7 +553,17 @@ static int min_labelno, max_labelno;\n int\n label_to_alignment (rtx label)\n {\n-  return LABEL_TO_ALIGNMENT (label);\n+  if (CODE_LABEL_NUMBER (label) <= max_labelno)\n+    return LABEL_TO_ALIGNMENT (label);\n+  return 0;\n+}\n+\n+int\n+label_to_max_skip (rtx label)\n+{\n+  if (CODE_LABEL_NUMBER (label) <= max_labelno)\n+    return LABEL_TO_MAX_SKIP (label);\n+  return 0;\n }\n \n #ifdef HAVE_ATTR_length"}, {"sha": "543164a4c697dc5a68a55f6ddb45875759167bbc", "filename": "gcc/output.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a8f07a47f1192d06e895ce1a4d0fc91a723743/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=40a8f07a47f1192d06e895ce1a4d0fc91a723743", "patch": "@@ -1,7 +1,7 @@\n /* Declarations for insn-output.c.  These functions are defined in recog.c,\n    final.c, and varasm.c.\n    Copyright (C) 1987, 1991, 1994, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -94,6 +94,10 @@ extern int insn_current_reference_address (rtx);\n    Defined in final.c.  */\n extern int label_to_alignment (rtx);\n \n+/* Find the alignment maximum skip associated with a CODE_LABEL.\n+   Defined in final.c.  */\n+extern int label_to_max_skip (rtx);\n+\n /* Output a LABEL_REF, or a bare CODE_LABEL, as an assembler symbol.  */\n extern void output_asm_label (rtx);\n "}]}