{"sha": "3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxZWFmNjdlOWE0YTFhNjNmZjI2YjI0YzRiMWY5ZjFhN2M1OGJjNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-12-06T23:20:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-12-06T23:20:16Z"}, "message": "class.c (check_bitfield_decl): In error message about non-integral type print the type itself too.\n\n/cp\n2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* class.c (check_bitfield_decl): In error message about non-integral\n\ttype print the type itself too.\n\t* decl.c (grokdeclarator): Do not ICE on unnamed bit-fields declared\n\tfriends; when calling build_decl for a FIELD_DECL possibly pass the\n\tdeclarator->id_loc.\n\n/testsuite\n2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/parse/bitfield7.C: New.\n\t* g++.dg/other/bitfield2.C: Check location and type.\n\t* g++.dg/parse/bitfield1.C: Likewise.\n\t* g++.dg/parse/bitfield2.C: Likewise.\n\nFrom-SVN: r266876", "tree": {"sha": "3bd4768e1ce9c05ec207274fe1aa85aee839810a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd4768e1ce9c05ec207274fe1aa85aee839810a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/comments", "author": null, "committer": null, "parents": [{"sha": "d7711adcd5226995063342631e1ce5c2ff055981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7711adcd5226995063342631e1ce5c2ff055981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7711adcd5226995063342631e1ce5c2ff055981"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "707058064e09b728b8ad7c65ae5862dcee836d54", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -1,3 +1,11 @@\n+2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* class.c (check_bitfield_decl): In error message about non-integral\n+\ttype print the type itself too.\n+\t* decl.c (grokdeclarator): Do not ICE on unnamed bit-fields declared\n+\tfriends; when calling build_decl for a FIELD_DECL possibly pass the\n+\tdeclarator->id_loc.\n+\n 2018-12-06  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/86747"}, {"sha": "1bcb146fbb64129661f0c8ca75a940f355e8bc74", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -3218,7 +3218,8 @@ check_bitfield_decl (tree field)\n   /* Detect invalid bit-field type.  */\n   if (!INTEGRAL_OR_ENUMERATION_TYPE_P (type))\n     {\n-      error (\"bit-field %q+#D with non-integral type\", field);\n+      error_at (DECL_SOURCE_LOCATION (field),\n+\t\t\"bit-field %q#D with non-integral type %qT\", field, type);\n       w = error_mark_node;\n     }\n   else"}, {"sha": "832e73a64dc75d5c99cab32b68b8c7362ebaa41e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -12446,9 +12446,13 @@ grokdeclarator (const cp_declarator *declarator,\n \t  {\n \t    if (friendp)\n \t      {\n-\t\terror_at (declarator->id_loc,\n-\t\t\t  \"%qE is neither function nor member function; \"\n-\t\t\t  \"cannot be declared friend\", unqualified_id);\n+\t\tif (unqualified_id && declarator)\n+\t\t  error_at (declarator->id_loc,\n+\t\t\t    \"%qE is neither function nor member function; \"\n+\t\t\t    \"cannot be declared friend\", unqualified_id);\n+\t\telse\n+\t\t  error (\"unnamed field is neither function nor member \"\n+\t\t\t \"function; cannot be declared friend\");\n \t\treturn error_mark_node;\n \t      }\n \t    decl = NULL_TREE;\n@@ -12483,14 +12487,13 @@ grokdeclarator (const cp_declarator *declarator,\n \n \tif (decl == NULL_TREE)\n \t  {\n+\t    location_t loc = declarator ? declarator->id_loc : input_location;\n \t    if (staticp)\n \t      {\n \t\t/* C++ allows static class members.  All other work\n \t\t   for this is done by grokfield.  */\n-\t\tdecl = build_lang_decl_loc (declarator\n-\t\t\t\t\t    ? declarator->id_loc\n-\t\t\t\t\t    : input_location,\n-\t\t\t\t\t    VAR_DECL, unqualified_id, type);\n+\t\tdecl = build_lang_decl_loc (loc, VAR_DECL,\n+\t\t\t\t\t    unqualified_id, type);\n \t\tset_linkage_for_static_data_member (decl);\n \t\tif (concept_p)\n \t\t  error_at (declspecs->locations[ds_concept],\n@@ -12536,8 +12539,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\t      unqualified_id);\n \t\t    constexpr_p = false;\n \t\t  }\n-\t\tdecl = build_decl (input_location,\n-\t\t\t\t   FIELD_DECL, unqualified_id, type);\n+\t\tdecl = build_decl (loc, FIELD_DECL, unqualified_id, type);\n \t\tDECL_NONADDRESSABLE_P (decl) = bitfield;\n \t\tif (bitfield && !unqualified_id)\n \t\t  {"}, {"sha": "9f2b5cf66f849f55089219ade5971b41d7ef7711", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -1,3 +1,10 @@\n+2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/parse/bitfield7.C: New.\n+\t* g++.dg/other/bitfield2.C: Check location and type.\n+\t* g++.dg/parse/bitfield1.C: Likewise.\n+\t* g++.dg/parse/bitfield2.C: Likewise.\n+\n 2018-12-06  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/86747"}, {"sha": "f81f868a2fc28abc392c28af66f6dc6446fb3ce1", "filename": "gcc/testsuite/g++.dg/other/bitfield2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield2.C?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -3,7 +3,7 @@\n \n struct A\n {\n-  double d : 2;  // { dg-error \"non-integral\" }\n+  double d : 2;  // { dg-error \"10:bit-field .d. with non-integral type .double.\" }\n   A() {}\n   ~A() {}\n };"}, {"sha": "16088936cca5a3433750e015a89046b0913463c8", "filename": "gcc/testsuite/g++.dg/parse/bitfield1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -2,7 +2,7 @@\n \n struct A\n {\n-  double i : 8; // { dg-error \"type\" }\n+  double i : 8; // { dg-error \"10:bit-field .i. with non-integral type .double.\" }\n };\n \n void foo(A& a)"}, {"sha": "e0fb84e788fb3eb38dbc0f6191778208bfea528f", "filename": "gcc/testsuite/g++.dg/parse/bitfield2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -4,7 +4,7 @@ struct X {};\n \n struct A\n {\n-    X x : 2;            // { dg-error \"non-integral type\" }\n+    X x : 2;            // { dg-error \"7:bit-field .x. with non-integral type .X.\" }\n };\n struct B : A {};\n \n@@ -19,7 +19,7 @@ C<int> c;\n template <typename T>\n struct D\n {\n-  T t : 3;              // { dg-error \"non-integral type\" }\n+  T t : 3;              // { dg-error \"5:bit-field .double D\\\\<double\\\\>::t. with non-integral type .double.\" }\n };\n \n D<double> d;            // { dg-message \"required\" }\n@@ -28,7 +28,7 @@ template <typename T>\n struct E\n {\n   typedef T* U;\n-  U t : 3;             // { dg-error \"non-integral type\" }\n+  U t : 3;             // { dg-error \"5:bit-field .t. with non-integral type .E\\\\<T\\\\>::U.\" }\n };\n \n E<double> e;"}, {"sha": "ccc7166f1dbcfb45c3fd9179d302b5cc731ea7a6", "filename": "gcc/testsuite/g++.dg/parse/bitfield7.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield7.C?ref=3c1eaf67e9a4a1a63ff26b24c4b1f9f1a7c58bc4", "patch": "@@ -0,0 +1,4 @@\n+struct A\n+{\n+  friend int : 1;  // { dg-error \"unnamed field\" }\n+};"}]}