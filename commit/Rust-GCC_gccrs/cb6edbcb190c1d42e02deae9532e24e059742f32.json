{"sha": "cb6edbcb190c1d42e02deae9532e24e059742f32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2ZWRiY2IxOTBjMWQ0MmUwMmRlYWU5NTMyZTI0ZTA1OTc0MmYzMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-09-15T14:04:47Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-09-15T14:04:47Z"}, "message": "collect2.c (main): Const-ification.\n\n\t* collect2.c (main): Const-ification.\n\t* gcc.c (translate_options, process_command): Use xstrdup in\n\tlieu of xmalloc/strcpy.\n\t(main): Use concat in lieu of xmalloc/strcpy/strcat.\ncp:\n\t* mangle.c (mangle_conv_op_name_for_type): Use concat in lieu of\n\txmalloc/strcpy/strcat.\n\nFrom-SVN: r45631", "tree": {"sha": "45aae5c4dc09289e3c64fd42746ee1cea71aa7be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45aae5c4dc09289e3c64fd42746ee1cea71aa7be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb6edbcb190c1d42e02deae9532e24e059742f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6edbcb190c1d42e02deae9532e24e059742f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb6edbcb190c1d42e02deae9532e24e059742f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6edbcb190c1d42e02deae9532e24e059742f32/comments", "author": null, "committer": null, "parents": [{"sha": "461c166993aa3bb3022e90451bbadcd24a0d1531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/461c166993aa3bb3022e90451bbadcd24a0d1531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/461c166993aa3bb3022e90451bbadcd24a0d1531"}], "stats": {"total": 101, "additions": 49, "deletions": 52}, "files": [{"sha": "70d0494f7e042bd1ddc0d6c8ff7f5934fe66d3f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb6edbcb190c1d42e02deae9532e24e059742f32", "patch": "@@ -1,3 +1,10 @@\n+2001-09-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* collect2.c (main): Const-ification.\n+\t* gcc.c (translate_options, process_command): Use xstrdup in\n+\tlieu of xmalloc/strcpy.\n+\t(main): Use concat in lieu of xmalloc/strcpy/strcat.\n+\n 2001-09-14  Roman Lechtchinsky  <rl@cs.tu-berlin.de>\n \n \t* doc/install.texi (Specific, alphaev5-cray-unicosmk*): Fix"}, {"sha": "dc3b7f8f25880e75da6432e8fc4eef0abb2ea26f", "filename": "gcc/collect2.c", "status": "modified", "additions": 32, "deletions": 31, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=cb6edbcb190c1d42e02deae9532e24e059742f32", "patch": "@@ -797,21 +797,47 @@ main (argc, argv)\n      char *argv[];\n {\n   static const char *const ld_suffix\t= \"ld\";\n-  const char *full_ld_suffix\t= ld_suffix;\n   static const char *const real_ld_suffix = \"real-ld\";\n   static const char *const collect_ld_suffix = \"collect-ld\";\n   static const char *const nm_suffix\t= \"nm\";\n-  const char *full_nm_suffix\t= nm_suffix;\n   static const char *const gnm_suffix\t= \"gnm\";\n-  const char *full_gnm_suffix\t= gnm_suffix;\n #ifdef LDD_SUFFIX\n   static const char *const ldd_suffix\t= LDD_SUFFIX;\n-  const char *full_ldd_suffix\t= ldd_suffix;\n #endif\n   static const char *const strip_suffix = \"strip\";\n-  const char *full_strip_suffix = strip_suffix;\n   static const char *const gstrip_suffix = \"gstrip\";\n-  const char *full_gstrip_suffix = gstrip_suffix;\n+\n+#ifdef CROSS_COMPILE\n+  /* If we look for a program in the compiler directories, we just use\n+     the short name, since these directories are already system-specific.\n+     But it we look for a program in the system directories, we need to\n+     qualify the program name with the target machine.  */\n+\n+  const char *const full_ld_suffix =\n+    concat(target_machine, \"-\", ld_suffix, NULL);\n+  const char *const full_nm_suffix =\n+    concat (target_machine, \"-\", nm_suffix, NULL);\n+  const char *const full_gnm_suffix =\n+    concat (target_machine, \"-\", gnm_suffix, NULL);\n+#ifdef LDD_SUFFIX\n+  const char *const full_ldd_suffix =\n+    concat (target_machine, \"-\", ldd_suffix, NULL);\n+#endif\n+  const char *const full_strip_suffix =\n+    concat (target_machine, \"-\", strip_suffix, NULL);\n+  const char *const full_gstrip_suffix =\n+    concat (target_machine, \"-\", gstrip_suffix, NULL);\n+#else\n+  const char *const full_ld_suffix\t= ld_suffix;\n+  const char *const full_nm_suffix\t= nm_suffix;\n+  const char *const full_gnm_suffix\t= gnm_suffix;\n+#ifdef LDD_SUFFIX\n+  const char *const full_ldd_suffix\t= ldd_suffix;\n+#endif\n+  const char *const full_strip_suffix\t= strip_suffix;\n+  const char *const full_gstrip_suffix\t= gstrip_suffix;\n+#endif /* CROSS_COMPILE */\n+\n   const char *arg;\n   FILE *outf;\n #ifdef COLLECT_EXPORT_LIST\n@@ -936,31 +962,6 @@ main (argc, argv)\n   prefix_from_env (\"COMPILER_PATH\", &cpath);\n   prefix_from_env (\"PATH\", &path);\n \n-#ifdef CROSS_COMPILE\n-  /* If we look for a program in the compiler directories, we just use\n-     the short name, since these directories are already system-specific.\n-     But it we look for a program in the system directories, we need to\n-     qualify the program name with the target machine.  */\n-\n-  full_ld_suffix = concat(target_machine, \"-\", ld_suffix, NULL);\n-\n-#if 0\n-  full_gld_suffix = concat (target_machine, \"-\", gld_suffix, NULL);\n-#endif\n-\n-  full_nm_suffix = concat (target_machine, \"-\", nm_suffix, NULL);\n-\n-  full_gnm_suffix = concat (target_machine, \"-\", gnm_suffix, NULL);\n-  \n-#ifdef LDD_SUFFIX\n-  full_ldd_suffix = concat (target_machine, \"-\", ldd_suffix, NULL);\n-#endif\n-\n-  full_strip_suffix = concat (target_machine, \"-\", strip_suffix, NULL);\n-  \n-  full_gstrip_suffix = concat (target_machine, \"-\", gstrip_suffix, NULL);\n-#endif /* CROSS_COMPILE */\n-\n   /* Try to discover a valid linker/nm/strip to use.  */\n \n   /* Maybe we know the right file to use (if not cross).  */"}, {"sha": "38358428658b1796d6866a69fe704d60a82e6bdb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb6edbcb190c1d42e02deae9532e24e059742f32", "patch": "@@ -1,3 +1,8 @@\n+2001-09-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mangle.c (mangle_conv_op_name_for_type): Use concat in lieu of\n+\txmalloc/strcpy/strcat.\n+\n 2001-09-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* decl.c (warn_extern_redeclared_static, cp_make_fname_decl):"}, {"sha": "6ad9ffa3f2607bb962aa0a763bc0c8efe743de1e", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=cb6edbcb190c1d42e02deae9532e24e059742f32", "patch": "@@ -2392,11 +2392,7 @@ mangle_conv_op_name_for_type (type)\n   /* Build the mangling for TYPE.  */\n   const char *mangled_type = mangle_type_string (type);\n   /* Allocate a temporary buffer for the complete name.  */\n-  char *op_name = (char *) xmalloc (strlen (\"operator \") \n-\t\t\t\t    + strlen (mangled_type) + 1);\n-  /* Assemble the mangling.  */\n-  strcpy (op_name, \"operator \");\n-  strcat (op_name, mangled_type);\n+  char *op_name = concat (\"operator \", mangled_type, NULL);\n   /* Find or create an identifier.  */\n   identifier = get_identifier (op_name);\n   /* Done with the temporary buffer.  */"}, {"sha": "55188cf6359009ce258206c2e34c2375313575ca", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6edbcb190c1d42e02deae9532e24e059742f32/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=cb6edbcb190c1d42e02deae9532e24e059742f32", "patch": "@@ -1011,8 +1011,7 @@ translate_options (argcp, argvp)\n \t      newv = (const char **) xrealloc (newv, newvsize);\n \n \t      sp = target_option_translations[tott_idx].replacements;\n-\t      np = (char *) xmalloc (strlen (sp) + 1);\n-\t      strcpy (np, sp);\n+\t      np = xstrdup (sp);\n \n \t      while (1)\n \t\t{\n@@ -3910,15 +3909,13 @@ process_command (argc, argv)\n \t      /* On some systems, ld cannot handle some options without\n \t\t a space.  So split the option from its argument.  */\n \t      char *part1 = (char *) xmalloc (2);\n-\t      char *tmp;\n \t      part1[0] = c;\n \t      part1[1] = '\\0';\n \n \t      switches[n_switches].part1 = part1;\n \t      switches[n_switches].args\n \t\t= (const char **) xmalloc (2 * sizeof (const char *));\n-\t      switches[n_switches].args[0] = tmp = xmalloc (strlen (p));\n-\t      strcpy (tmp, &p[1]);\n+\t      switches[n_switches].args[0] = xstrdup (p+1);\n \t      switches[n_switches].args[1] = 0;\n \t    }\n \t  else\n@@ -5812,17 +5809,8 @@ main (argc, argv)\n \n   /* If we have a GCC_EXEC_PREFIX envvar, modify it for cpp's sake.  */\n   if (gcc_exec_prefix)\n-    {\n-      char *temp = (char *) xmalloc (strlen (gcc_exec_prefix)\n-\t\t\t\t     + strlen (spec_version)\n-\t\t\t\t     + strlen (spec_machine) + 3);\n-      strcpy (temp, gcc_exec_prefix);\n-      strcat (temp, spec_machine);\n-      strcat (temp, dir_separator_str);\n-      strcat (temp, spec_version);\n-      strcat (temp, dir_separator_str);\n-      gcc_exec_prefix = temp;\n-    }\n+    gcc_exec_prefix = concat (gcc_exec_prefix, spec_machine, dir_separator_str,\n+\t\t\t      spec_version, dir_separator_str, NULL);\n \n   /* Now we have the specs.\n      Set the `valid' bits for switches that match anything in any spec.  */"}]}