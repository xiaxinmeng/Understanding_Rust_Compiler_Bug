{"sha": "a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhZDg4YTJiYzUxYzhjMDFkMzdhZDNhNjljZDM4M2FkNjZiY2RhNQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-01-29T20:29:29Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-01-29T20:29:29Z"}, "message": "re PR target/56121 ([SH] ICE in libgcc/unwind-dw2.c)\n\n\tPR target/56121\n\t* config/sh/sh.md (bclr_m2a, bset_m2a, bst_m2a, bld_m2a, bldsign_m2a,\n\tbld_reg, *bld_regqi, band_m2a, bandreg_m2a, bor_m2a, borreg_m2a,\n\tbxor_m2a, bxorreg_m2a): Add satisfies_constraint_K03 condition.\n\nFrom-SVN: r195558", "tree": {"sha": "dfa546e7350393c7ef4f43e2df1fd8a4a6428faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfa546e7350393c7ef4f43e2df1fd8a4a6428faf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5/comments", "author": null, "committer": null, "parents": [{"sha": "7af79f92ad03b73072cd79a0faa52a918ccf9524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af79f92ad03b73072cd79a0faa52a918ccf9524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af79f92ad03b73072cd79a0faa52a918ccf9524"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "ff4ee0f4a6c2ebe2ad8f5825e0a8c19e4e1b6cc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "patch": "@@ -1,3 +1,10 @@\n+2013-01-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/56121\n+\t* config/sh/sh.md (bclr_m2a, bset_m2a, bst_m2a, bld_m2a, bldsign_m2a,\n+\tbld_reg, *bld_regqi, band_m2a, bandreg_m2a, bor_m2a, borreg_m2a,\n+\tbxor_m2a, bxorreg_m2a): Add satisfies_constraint_K03 condition.\n+\n 2013-01-29  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n         * config/arm/cortex-a7.md (cortex_a7_neon, cortex_a7_all): Remove."}, {"sha": "d52a6b6854b1a91c1f435e4a79bce7332cf4e497", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=a7ad88a2bc51c8c01d37ad3a69cd383ad66bcda5", "patch": "@@ -13140,6 +13140,8 @@ label:\n })\n \n ;; SH2A instructions for bitwise operations.\n+;; FIXME: Convert multiple instruction insns to insn_and_split.\n+;; FIXME: Use iterators to fold at least and,xor,or insn variations.\n \n ;; Clear a bit in a memory location.\n (define_insn \"bclr_m2a\"\n@@ -13148,7 +13150,7 @@ label:\n \t    (not:QI (ashift:QI (const_int 1)\n \t\t\t(match_operand:QI 1 \"const_int_operand\" \"K03,K03\")))\n \t    (match_dup 0)))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbclr.b\t%1,%0\n \tbclr.b\t%1,@(0,%t0)\"\n@@ -13171,7 +13173,7 @@ label:\n \t    (ashift:QI (const_int 1)\n \t\t       (match_operand:QI 1 \"const_int_operand\" \"K03,K03\"))\n \t    (match_dup 0)))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbset.b\t%1,%0\n \tbset.b\t%1,@(0,%t0)\"\n@@ -13198,7 +13200,7 @@ label:\n \t    (ior:QI\n \t\t(ashift:QI (const_int 1) (match_dup 1))\n \t\t(match_dup 0))))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbst.b\t%1,%0\n \tbst.b\t%1,@(0,%t0)\"\n@@ -13211,7 +13213,7 @@ label:\n \t    (match_operand:QI 0 \"bitwise_memory_operand\" \"Sbw,Sbv\")\n \t    (const_int 1)\n \t    (match_operand 1 \"const_int_operand\" \"K03,K03\")))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbld.b\t%1,%0\n \tbld.b\t%1,@(0,%t0)\"\n@@ -13224,7 +13226,7 @@ label:\n \t    (match_operand:QI 0 \"bitwise_memory_operand\" \"Sbw,m\")\n \t    (const_int 1)\n \t    (match_operand 1 \"const_int_operand\" \"K03,K03\")))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbld.b\t%1,%0\n \tbld.b\t%1,@(0,%t0)\"\n@@ -13236,15 +13238,15 @@ label:\n \t(zero_extract:SI (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n \t\t\t (const_int 1)\n \t\t\t (match_operand 1 \"const_int_operand\" \"K03\")))]\n-  \"TARGET_SH2A\"\n+  \"TARGET_SH2A && satisfies_constraint_K03 (operands[1])\"\n   \"bld\t%1,%0\")\n \n (define_insn \"*bld_regqi\"\n   [(set (reg:SI T_REG)\n \t(zero_extract:SI (match_operand:QI 0 \"arith_reg_operand\" \"r\")\n \t\t\t (const_int 1)\n \t\t\t (match_operand 1 \"const_int_operand\" \"K03\")))]\n-  \"TARGET_SH2A\"\n+  \"TARGET_SH2A && satisfies_constraint_K03 (operands[1])\"\n   \"bld\t%1,%0\")\n \n ;; Take logical and of a specified bit of memory with the T bit and\n@@ -13256,7 +13258,7 @@ label:\n \t\t    (match_operand:QI 0 \"bitwise_memory_operand\" \"Sbw,m\")\n \t\t    (const_int 1)\n \t\t    (match_operand 1 \"const_int_operand\" \"K03,K03\"))))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tband.b\t%1,%0\n \tband.b\t%1,@(0,%t0)\"\n@@ -13269,7 +13271,7 @@ label:\n \t\t    (const_int 1)\n \t\t    (match_operand 2 \"const_int_operand\" \"K03,K03\"))\n         \t(match_operand:SI 3 \"register_operand\" \"r,r\")))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[2])\"\n {\n   static const char* alt[] =\n   {\n@@ -13292,7 +13294,7 @@ label:\n \t\t    (match_operand:QI 0 \"bitwise_memory_operand\" \"Sbw,m\")\n \t\t    (const_int 1)\n \t\t    (match_operand 1 \"const_int_operand\" \"K03,K03\"))))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbor.b\t%1,%0\n \tbor.b\t%1,@(0,%t0)\"\n@@ -13305,7 +13307,7 @@ label:\n \t\t    (const_int 1)\n \t\t    (match_operand 2 \"const_int_operand\" \"K03,K03\"))\n \t\t(match_operand:SI 3 \"register_operand\" \"=r,r\")))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[2])\"\n {\n   static const char* alt[] =\n   {\n@@ -13328,7 +13330,7 @@ label:\n \t\t    (match_operand:QI 0 \"bitwise_memory_operand\" \"Sbw,m\")\n \t\t    (const_int 1)\n \t\t    (match_operand 1 \"const_int_operand\" \"K03,K03\"))))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[1])\"\n   \"@\n \tbxor.b\t%1,%0\n \tbxor.b\t%1,@(0,%t0)\"\n@@ -13341,7 +13343,7 @@ label:\n \t\t    (const_int 1)\n \t\t    (match_operand 2 \"const_int_operand\" \"K03,K03\"))\n \t\t(match_operand:SI 3 \"register_operand\" \"=r,r\")))]\n-  \"TARGET_SH2A && TARGET_BITOPS\"\n+  \"TARGET_SH2A && TARGET_BITOPS && satisfies_constraint_K03 (operands[2])\"\n {\n   static const char* alt[] =\n   {"}]}