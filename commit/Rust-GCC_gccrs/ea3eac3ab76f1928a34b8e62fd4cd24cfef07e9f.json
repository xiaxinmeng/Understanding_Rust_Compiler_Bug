{"sha": "ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEzZWFjM2FiNzZmMTkyOGEzNGI4ZTYyZmQ0Y2QyNGNmZWYwN2U5Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-26T13:55:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-26T13:55:40Z"}, "message": "re PR tree-optimization/66142 (Loop is not vectorized because not sufficient support for GOMP_SIMD_LANE)\n\n2015-05-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66142\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Manually compare\n\tMEM_REFs for the same base address.\n\n\t* gcc.dg/tree-ssa/ssa-fre-44.c: New testcase.\n\nFrom-SVN: r223697", "tree": {"sha": "1249fa33aaa275e8ec4bcdbc2d16c6ad99fddaf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1249fa33aaa275e8ec4bcdbc2d16c6ad99fddaf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bff469f75fb4941ff4ff923a7b921e179c8f1390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff469f75fb4941ff4ff923a7b921e179c8f1390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff469f75fb4941ff4ff923a7b921e179c8f1390"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "771aee172f7d26ba92b3d22ac07887433aac510b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "patch": "@@ -1,3 +1,9 @@\n+2015-05-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66142\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Manually compare\n+\tMEM_REFs for the same base address.\n+\n 2015-05-26  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR ipa/66181"}, {"sha": "aa74501e1f513aff2fd724779a4456914bd74e0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "patch": "@@ -1,3 +1,8 @@\n+2015-05-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66142\n+\t* gcc.dg/tree-ssa/ssa-fre-44.c: New testcase.\n+\n 2015-05-26  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/66082"}, {"sha": "74707b27bbd7983a21362fb6eb297bf9d035be08", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-44.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-44.c?ref=ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n+\n+struct A { float x, y; };\n+struct B { struct A u; };\n+void bar (struct A *);\n+\n+float\n+f1 (struct B *x, int y)\n+{\n+  struct A p;\n+  p.x = 1.0f;\n+  p.y = 2.0f;\n+  struct A *q = &x[y].u;\n+  *q = p;\n+  float f = x[y].u.x + x[y].u.y;\n+  bar (&p);\n+  return f;\n+}\n+\n+float\n+f2 (struct B *x, int y)\n+{\n+  struct A p;\n+  p.x = 1.0f;\n+  p.y = 2.0f;\n+  x[y].u = p;\n+  float f = x[y].u.x + x[y].u.y;\n+  bar (&p);\n+  return f;\n+}\n+\n+float\n+f3 (struct B *x, int y)\n+{\n+  struct A p;\n+  p.x = 1.0f;\n+  p.y = 2.0f;\n+  struct A *q = &x[y].u;\n+  __builtin_memcpy (&q->x, &p.x, sizeof (float));\n+  __builtin_memcpy (&q->y, &p.y, sizeof (float));\n+  *q = p;\n+  float f = x[y].u.x + x[y].u.y;\n+  bar (&p);\n+  return f;\n+}\n+\n+float\n+f4 (struct B *x, int y)\n+{\n+  struct A p;\n+  p.x = 1.0f;\n+  p.y = 2.0f;\n+  __builtin_memcpy (&x[y].u.x, &p.x, sizeof (float));\n+  __builtin_memcpy (&x[y].u.y, &p.y, sizeof (float));\n+  float f = x[y].u.x + x[y].u.y;\n+  bar (&p);\n+  return f;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 3.0\" 4 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "03be480b13f503e4b46c4a1fc53b42ed72914ccb", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=ea3eac3ab76f1928a34b8e62fd4cd24cfef07e9f", "patch": "@@ -1894,7 +1894,12 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n       size2 = lhs_ref.size;\n       maxsize2 = lhs_ref.max_size;\n       if (maxsize2 == -1\n-\t  || (base != base2 && !operand_equal_p (base, base2, 0))\n+\t  || (base != base2\n+\t      && (TREE_CODE (base) != MEM_REF\n+\t\t  || TREE_CODE (base2) != MEM_REF\n+\t\t  || TREE_OPERAND (base, 0) != TREE_OPERAND (base2, 0)\n+\t\t  || !tree_int_cst_equal (TREE_OPERAND (base, 1),\n+\t\t\t\t\t  TREE_OPERAND (base2, 1))))\n \t  || offset2 > offset\n \t  || offset2 + size2 < offset + maxsize)\n \treturn (void *)-1;"}]}