{"sha": "9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM4MzQ4Y2Y2YjFmZGQ4NTY2YjVkYzE1YzllMGZhZDBiNGU4YzU5OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T20:27:46Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T20:27:46Z"}, "message": "function.c and shrink-wrap.*: more rtx_insn\n\ngcc/\n\t* function.c (thread_prologue_and_epilogue_insns): Likewise for\n\tlocals \"returnjump\", \"epilogue_end\", \"insn\", \"next\".\n\n\t* shrink-wrap.h (get_unconverted_simple_return): Strengthen param\n\t\"returnjump\" from rtx * to rtx_insn **.\n\t* shrink-wrap.c (get_unconverted_simple_return): Likewise.\n\nFrom-SVN: r214472", "tree": {"sha": "3c5a4aa90c738acd6a310314e1700b29d4261e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c5a4aa90c738acd6a310314e1700b29d4261e46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "8cb016471c341d2c6923854d8c57be98e3e23427", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "patch": "@@ -1,3 +1,12 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* function.c (thread_prologue_and_epilogue_insns): Likewise for\n+\tlocals \"returnjump\", \"epilogue_end\", \"insn\", \"next\".\n+\n+\t* shrink-wrap.h (get_unconverted_simple_return): Strengthen param\n+\t\"returnjump\" from rtx * to rtx_insn **.\n+\t* shrink-wrap.c (get_unconverted_simple_return): Likewise.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* basic-block.h (struct edge_def). Strengthen \"r\" within"}, {"sha": "25f1519a93e4d18147298d2aafae687beb8593fb", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "patch": "@@ -5613,8 +5613,9 @@ thread_prologue_and_epilogue_insns (void)\n   vec<edge> unconverted_simple_returns = vNULL;\n   bitmap_head bb_flags;\n #endif\n-  rtx returnjump;\n-  rtx seq ATTRIBUTE_UNUSED, epilogue_end ATTRIBUTE_UNUSED;\n+  rtx_insn *returnjump;\n+  rtx seq ATTRIBUTE_UNUSED;\n+  rtx_insn *epilogue_end ATTRIBUTE_UNUSED;\n   rtx prologue_seq ATTRIBUTE_UNUSED, split_prologue_seq ATTRIBUTE_UNUSED;\n   edge e, entry_edge, orig_entry_edge, exit_fallthru_edge;\n   edge_iterator ei;\n@@ -5625,8 +5626,8 @@ thread_prologue_and_epilogue_insns (void)\n \n   inserted = false;\n   seq = NULL_RTX;\n-  epilogue_end = NULL_RTX;\n-  returnjump = NULL_RTX;\n+  epilogue_end = NULL;\n+  returnjump = NULL;\n \n   /* Can't deal with multiple successors of the entry block at the\n      moment.  Function should always have at least one entry\n@@ -5916,7 +5917,7 @@ thread_prologue_and_epilogue_insns (void)\n #ifdef HAVE_epilogue\n   if (epilogue_end)\n     {\n-      rtx insn, next;\n+      rtx_insn *insn, *next;\n \n       /* Similarly, move any line notes that appear after the epilogue.\n          There is no need, however, to be quite so anal about the existence"}, {"sha": "2710d98e444a8fb6217719d0e9770a6b07a589ac", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "patch": "@@ -790,7 +790,7 @@ try_shrink_wrapping (edge *entry_edge, edge orig_entry_edge,\n edge\n get_unconverted_simple_return (edge exit_fallthru_edge, bitmap_head bb_flags,\n \t\t\t       vec<edge> *unconverted_simple_returns,\n-\t\t\t       rtx *returnjump)\n+\t\t\t       rtx_insn **returnjump)\n {\n   if (optimize)\n     {"}, {"sha": "66bd26dfdef10de58a50f83b3b9dab3610d47978", "filename": "gcc/shrink-wrap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Fshrink-wrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599/gcc%2Fshrink-wrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.h?ref=9c8348cf6b1fdd8566b5dc15c9e0fad0b4e8c599", "patch": "@@ -42,7 +42,7 @@ extern void dup_block_and_redirect (basic_block bb, basic_block copy_bb,\n extern void try_shrink_wrapping (edge *entry_edge, edge orig_entry_edge,\n \t\t\t\t bitmap_head *bb_flags, rtx prologue_seq);\n extern edge get_unconverted_simple_return (edge, bitmap_head,\n-\t\t\t\t\t   vec<edge> *, rtx *);\n+\t\t\t\t\t   vec<edge> *, rtx_insn **);\n extern void convert_to_simple_return (edge entry_edge, edge orig_entry_edge,\n \t\t\t\t      bitmap_head bb_flags, rtx returnjump,\n \t\t\t\t      vec<edge> unconverted_simple_returns);"}]}