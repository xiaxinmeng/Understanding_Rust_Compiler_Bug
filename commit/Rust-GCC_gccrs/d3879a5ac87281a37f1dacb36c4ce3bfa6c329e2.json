{"sha": "d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM4NzlhNWFjODcyODFhMzdmMWRhY2IzNmM0Y2UzYmZhNmMzMjllMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T18:04:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:04:59Z"}, "message": "repinfo.adb (List_Entities): Don't list entities from renaming declarations.\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\n\t* repinfo.adb (List_Entities): Don't list entities from renaming\n\tdeclarations.\n\nFrom-SVN: r118294", "tree": {"sha": "83fa80dd361b42a3af97a5e989c6d576e24caaff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83fa80dd361b42a3af97a5e989c6d576e24caaff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2/comments", "author": null, "committer": null, "parents": [{"sha": "ddd6e5ae32e20e53172a8597ead37034b381321c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6e5ae32e20e53172a8597ead37034b381321c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd6e5ae32e20e53172a8597ead37034b381321c"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "974dff4cc197b700d5b126fa0ad10064bf0606c7", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=d3879a5ac87281a37f1dacb36c4ce3bfa6c329e2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,7 @@\n -- covered  by the  GNU  General  Public  License.  This exception does not --\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n---                                                                          --\n+--\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n@@ -331,8 +331,13 @@ package body Repinfo is\n    --  Start of processing for List_Entities\n \n    begin\n-      if Present (Ent) then\n+      --  List entity if we have one, and it is not a renaming declaration.\n+      --  For renamings, we don't get proper information, and really it makes\n+      --  sense to restrict the output to the renamed entity.\n \n+      if Present (Ent)\n+        and then Nkind (Declaration_Node (Ent)) not in N_Renaming_Declaration\n+      then\n          --  If entity is a subprogram and we are listing mechanisms,\n          --  then we need to list mechanisms for this entity.\n \n@@ -984,7 +989,8 @@ package body Repinfo is\n                --  List representation information to file\n \n                else\n-                  Creat_Repinfo_File_Access.all (File_Name (Source_Index (U)));\n+                  Create_Repinfo_File_Access.all\n+                    (File_Name (Source_Index (U)));\n                   Set_Special_Output (Write_Info_Line'Access);\n                   List_Entities (Cunit_Entity (U));\n                   Set_Special_Output (null);\n@@ -1121,23 +1127,6 @@ package body Repinfo is\n          end if;\n       end T;\n \n-      -------\n-      -- W --\n-      -------\n-\n-      --  We use an unchecked conversion to map Int values to their Word\n-      --  bitwise equivalent, which we could not achieve with a normal type\n-      --  conversion for negative Ints. We want bitwise equivalents because W\n-      --  is used as a helper for bit operators like Bit_And_Expr, and can be\n-      --  called for negative Ints in the context of aligning expressions like\n-      --  X+Align & -Align.\n-\n-      function W (Val : Uint) return Word is\n-         function To_Word is new Ada.Unchecked_Conversion (Int, Word);\n-      begin\n-         return To_Word (UI_To_Int (Val));\n-      end W;\n-\n       -------\n       -- V --\n       -------\n@@ -1266,6 +1255,23 @@ package body Repinfo is\n          end if;\n       end V;\n \n+      -------\n+      -- W --\n+      -------\n+\n+      --  We use an unchecked conversion to map Int values to their Word\n+      --  bitwise equivalent, which we could not achieve with a normal type\n+      --  conversion for negative Ints. We want bitwise equivalents because W\n+      --  is used as a helper for bit operators like Bit_And_Expr, and can be\n+      --  called for negative Ints in the context of aligning expressions like\n+      --  X+Align & -Align.\n+\n+      function W (Val : Uint) return Word is\n+         function To_Word is new Ada.Unchecked_Conversion (Int, Word);\n+      begin\n+         return To_Word (UI_To_Int (Val));\n+      end W;\n+\n    --  Start of processing for Rep_Value\n \n    begin"}]}