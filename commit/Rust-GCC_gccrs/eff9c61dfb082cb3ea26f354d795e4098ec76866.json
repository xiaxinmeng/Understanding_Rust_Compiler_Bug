{"sha": "eff9c61dfb082cb3ea26f354d795e4098ec76866", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmOWM2MWRmYjA4MmNiM2VhMjZmMzU0ZDc5NWU0MDk4ZWM3Njg2Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-17T13:37:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-17T14:25:01Z"}, "message": "PR c++/92531 - ICE with noexcept(lambda).\n\nThis was failing because uses_template_parms didn't recognize LAMBDA_EXPR as\na kind of expression.  Instead of trying to enumerate all the different\nvarieties of expression and then aborting if what's left isn't\nerror_mark_node, let's handle error_mark_node and then assume anything else\nis an expression.\n\n\t* pt.c (uses_template_parms): Don't try to enumerate all the\n\texpression cases.", "tree": {"sha": "4f3aa4074d5cf5eaee21e6f2877077f5d0f20087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f3aa4074d5cf5eaee21e6f2877077f5d0f20087"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eff9c61dfb082cb3ea26f354d795e4098ec76866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff9c61dfb082cb3ea26f354d795e4098ec76866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff9c61dfb082cb3ea26f354d795e4098ec76866", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff9c61dfb082cb3ea26f354d795e4098ec76866/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c60a18f8056facdcf370ce0e5f51550c9df5b539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60a18f8056facdcf370ce0e5f51550c9df5b539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60a18f8056facdcf370ce0e5f51550c9df5b539"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "62d8acfad5a46d1ce0fcecfb58cc83bf069a3961", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eff9c61dfb082cb3ea26f354d795e4098ec76866", "patch": "@@ -1,3 +1,9 @@\n+2020-01-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92531 - ICE with noexcept(lambda).\n+\t* pt.c (uses_template_parms): Don't try to enumerate all the\n+\texpression cases.\n+\n 2020-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/93228"}, {"sha": "1b3d07b1a5279f1253700080aff08c2852ae4ef9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=eff9c61dfb082cb3ea26f354d795e4098ec76866", "patch": "@@ -10537,22 +10537,11 @@ uses_template_parms (tree t)\n \t\t   || uses_template_parms (TREE_CHAIN (t)));\n   else if (TREE_CODE (t) == TYPE_DECL)\n     dependent_p = dependent_type_p (TREE_TYPE (t));\n-  else if (DECL_P (t)\n-\t   || EXPR_P (t)\n-\t   || TREE_CODE (t) == TEMPLATE_PARM_INDEX\n-\t   || TREE_CODE (t) == OVERLOAD\n-\t   || BASELINK_P (t)\n-\t   || identifier_p (t)\n-\t   || TREE_CODE (t) == TRAIT_EXPR\n-\t   || TREE_CODE (t) == CONSTRUCTOR\n-\t   || CONSTANT_CLASS_P (t))\n+  else if (t == error_mark_node)\n+    dependent_p = false;\n+  else\n     dependent_p = (type_dependent_expression_p (t)\n \t\t   || value_dependent_expression_p (t));\n-  else\n-    {\n-      gcc_assert (t == error_mark_node);\n-      dependent_p = false;\n-    }\n \n   processing_template_decl = saved_processing_template_decl;\n "}, {"sha": "74db03ff569c495e7d4abfadd6fd5965df1354ac", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda25.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff9c61dfb082cb3ea26f354d795e4098ec76866/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda25.C?ref=eff9c61dfb082cb3ea26f354d795e4098ec76866", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/92531\n+// { dg-do compile { target c++17 } }\n+\n+template <typename XK>\n+void ky () noexcept ([]{}); // IFNDR\n+// Optional error: void(*)() to bool conv in converted constant expression\n+// { dg-prune-output \"converted constant expression\" }"}]}