{"sha": "a1293f402a25801d03a58312b06b65c33702c726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyOTNmNDAyYTI1ODAxZDAzYTU4MzEyYjA2YjY1YzMzNzAyYzcyNg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2016-05-31T11:30:56Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2016-05-31T11:30:56Z"}, "message": "builtins.c (java_builtins): Use popcount* and bswap* builtins to implement bitCount() and reverseBytes()...\n\n2016-05-31  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/java:\n\t* builtins.c (java_builtins): Use popcount* and bswap* builtins to\n\timplement bitCount() and reverseBytes() methods in java.lang.Integer\n\tand friends.\n\t(initialize_builtins): Annotate math builtins with ECF_LEAF.  Call\n\tdefine_builtin for the new popcount* and bswap* builtins.\n\nlibjava:\n\t* testsuite/libjava.lang/BuiltinBitCount.java: New test case.\n\t* testsuite/libjava.lang/BuiltinReverseBytes.java: Likewise.\n\nFrom-SVN: r236919", "tree": {"sha": "e4795973441e52b0a0b748fb08728e4962eb277f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4795973441e52b0a0b748fb08728e4962eb277f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1293f402a25801d03a58312b06b65c33702c726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1293f402a25801d03a58312b06b65c33702c726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1293f402a25801d03a58312b06b65c33702c726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1293f402a25801d03a58312b06b65c33702c726/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "051154a1f6be0f597b7da235d6fe13463e7629be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051154a1f6be0f597b7da235d6fe13463e7629be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051154a1f6be0f597b7da235d6fe13463e7629be"}], "stats": {"total": 191, "additions": 175, "deletions": 16}, "files": [{"sha": "58e40a6c1337ab79a080525f22d7c5cc362c8425", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=a1293f402a25801d03a58312b06b65c33702c726", "patch": "@@ -1,3 +1,11 @@\n+2016-05-31  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* builtins.c (java_builtins): Use popcount* and bswap* builtins to\n+\timplement bitCount() and reverseBytes() methods in java.lang.Integer\n+\tand friends.\n+\t(initialize_builtins): Annotate math builtins with ECF_LEAF.  Call\n+\tdefine_builtin for the new popcount* and bswap* builtins.\n+\n 2016-04-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR java/70839"}, {"sha": "f27831d51c24ffa42c8cc6030780afa1489d59cd", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 49, "deletions": 16, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=a1293f402a25801d03a58312b06b65c33702c726", "patch": "@@ -98,6 +98,11 @@ static GTY(()) struct builtin_record java_builtins[] =\n   { { \"java.lang.Math\" }, { \"sin\" }, NULL, BUILT_IN_SIN },\n   { { \"java.lang.Math\" }, { \"sqrt\" }, NULL, BUILT_IN_SQRT },\n   { { \"java.lang.Math\" }, { \"tan\" }, NULL, BUILT_IN_TAN },\n+  { { \"java.lang.Integer\" }, { \"bitCount\" }, NULL, BUILT_IN_POPCOUNT },\n+  { { \"java.lang.Integer\" }, { \"reverseBytes\" }, NULL, BUILT_IN_BSWAP32 },\n+  { { \"java.lang.Long\" }, { \"bitCount\" }, NULL, BUILT_IN_POPCOUNTL },\n+  { { \"java.lang.Long\" }, { \"reverseBytes\" }, NULL, BUILT_IN_BSWAP64 },\n+  { { \"java.lang.Short\" }, { \"reverseBytes\" }, NULL, BUILT_IN_BSWAP16 },\n   { { \"java.lang.Float\" }, { \"intBitsToFloat\" }, convert_real,\n     (enum built_in_function) 0 },\n   { { \"java.lang.Double\" }, { \"longBitsToDouble\" }, convert_real,\n@@ -483,6 +488,7 @@ initialize_builtins (void)\n   tree double_ftype_double, double_ftype_double_double;\n   tree float_ftype_float_float;\n   tree boolean_ftype_boolean_boolean;\n+  tree int_ftype_int;\n   int i;\n \n   for (i = 0; java_builtins[i].builtin_code != END_BUILTINS; ++i)\n@@ -507,50 +513,77 @@ initialize_builtins (void)\n \t\t\t\tdouble_type_node, double_type_node, NULL_TREE);\n \n   define_builtin (BUILT_IN_FMOD, \"__builtin_fmod\",\n-\t\t  double_ftype_double_double, \"fmod\", ECF_CONST);\n+\t\t  double_ftype_double_double, \"fmod\", ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_FMODF, \"__builtin_fmodf\",\n-\t\t  float_ftype_float_float, \"fmodf\", ECF_CONST);\n+\t\t  float_ftype_float_float, \"fmodf\", ECF_CONST | ECF_LEAF);\n \n   define_builtin (BUILT_IN_ACOS, \"__builtin_acos\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math4acosEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_ASIN, \"__builtin_asin\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math4asinEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_ATAN, \"__builtin_atan\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math4atanEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_ATAN2, \"__builtin_atan2\",\n \t\t  double_ftype_double_double, \"_ZN4java4lang4Math5atan2EJddd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_CEIL, \"__builtin_ceil\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math4ceilEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_COS, \"__builtin_cos\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math3cosEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_EXP, \"__builtin_exp\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math3expEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_FLOOR, \"__builtin_floor\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math5floorEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_LOG, \"__builtin_log\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math3logEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_POW, \"__builtin_pow\",\n \t\t  double_ftype_double_double, \"_ZN4java4lang4Math3powEJddd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_SIN, \"__builtin_sin\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math3sinEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_SQRT, \"__builtin_sqrt\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math4sqrtEJdd\",\n-\t\t  ECF_CONST);\n+\t\t  ECF_CONST | ECF_LEAF);\n   define_builtin (BUILT_IN_TAN, \"__builtin_tan\",\n \t\t  double_ftype_double, \"_ZN4java4lang4Math3tanEJdd\",\n-\t\t  ECF_CONST);\n-  \n+\t\t  ECF_CONST | ECF_LEAF);\n+\n+  int_ftype_int = build_function_type_list (int_type_node,\n+                                            int_type_node, NULL_TREE);\n+\n+  define_builtin (BUILT_IN_POPCOUNT, \"__builtin_popcount\", int_ftype_int,\n+                  \"_ZN4java4lang7Integer8bitCountEJii\",\n+                  ECF_CONST | ECF_LEAF | ECF_NOTHROW);\n+  define_builtin (BUILT_IN_BSWAP32, \"__builtin_bswap32\", int_ftype_int,\n+\t\t  \"_ZN4java4lang7Integer12reverseBytesEJii\",\n+                  ECF_CONST | ECF_LEAF | ECF_NOTHROW);\n+\n+  define_builtin (BUILT_IN_POPCOUNTL, \"__builtin_popcountl\",\n+                  build_function_type_list (int_type_node,\n+\t\t\t\t\t    long_type_node, NULL_TREE),\n+\t\t  \"_ZN4java4lang4Long8bitCountEJix\",\n+                  ECF_CONST | ECF_LEAF | ECF_NOTHROW);\n+  define_builtin (BUILT_IN_BSWAP64, \"__builtin_bswap64\",\n+\t\t  build_function_type_list (long_type_node,\n+\t\t\t\t\t    long_type_node, NULL_TREE),\n+\t\t  \"_ZN4java4lang4Long12reverseBytesEJxx\",\n+                  ECF_CONST | ECF_LEAF | ECF_NOTHROW);\n+                  \n+  define_builtin (BUILT_IN_BSWAP16, \"__builtin_bswap16\",\n+\t\t  build_function_type_list (short_type_node,\n+\t\t\t\t\t    short_type_node, NULL_TREE),\n+\t\t  \"_ZN4java4lang5Short12reverseBytesEJss\",\n+                  ECF_CONST | ECF_LEAF | ECF_NOTHROW);\n+\n   boolean_ftype_boolean_boolean\n     = build_function_type_list (boolean_type_node,\n \t\t\t\tboolean_type_node, boolean_type_node,"}, {"sha": "0a2830555d3d8bc8fe21b33e540851e0e4b739da", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1293f402a25801d03a58312b06b65c33702c726", "patch": "@@ -1,3 +1,8 @@\n+2016-05-31  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* testsuite/libjava.lang/BuiltinBitCount.java: New test case.\n+\t* testsuite/libjava.lang/BuiltinReverseBytes.java: Likewise.\n+\n 2016-04-30  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* classpath/config.guess: Revert r235676."}, {"sha": "0f6591c1e27bbf1e37f53cc917ca4de610d1b5f0", "filename": "libjava/testsuite/libjava.lang/BuiltinBitCount.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.jar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.jar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.jar?ref=a1293f402a25801d03a58312b06b65c33702c726"}, {"sha": "bcafd310a2129a00031f2e5ae67766a4a44c4a04", "filename": "libjava/testsuite/libjava.lang/BuiltinBitCount.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.java?ref=a1293f402a25801d03a58312b06b65c33702c726", "patch": "@@ -0,0 +1,51 @@\n+class BuiltinBitCount\n+{\n+  public static int popcount(int x)\n+  {\n+    return Integer.bitCount(x);\n+  }\n+\n+  public static int popcountl(long x)\n+  {\n+    return Long.bitCount(x);\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    if (Integer.bitCount(0) != 0)\n+      throw new Error();\n+    if (Integer.bitCount(8) != 1)\n+      throw new Error();\n+    if (Integer.bitCount(123456) != 6)\n+      throw new Error();\n+    if (Integer.bitCount(-1) != 32)\n+      throw new Error();\n+    \n+    if (Long.bitCount(0) != 0)\n+      throw new Error();\n+    if (Long.bitCount(8) != 1)\n+      throw new Error();\n+    if (Long.bitCount(123456) != 6)\n+      throw new Error();\n+    if (Long.bitCount(-1) != 64)\n+      throw new Error();\n+\n+    if (popcount(0) != 0)\n+      throw new Error();\n+    if (popcount(8) != 1)\n+      throw new Error();\n+    if (popcount(123456) != 6)\n+      throw new Error();\n+    if (popcount(-1) != 32)\n+      throw new Error();\n+\n+    if (popcountl(0) != 0)\n+      throw new Error();\n+    if (popcountl(8) != 1)\n+      throw new Error();\n+    if (popcountl(123456) != 6)\n+      throw new Error();\n+    if (popcountl(-1) != 64)\n+      throw new Error();\n+  }\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libjava/testsuite/libjava.lang/BuiltinBitCount.out", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinBitCount.out?ref=a1293f402a25801d03a58312b06b65c33702c726"}, {"sha": "283a178eedbe65b7cad9419934c39860370dd544", "filename": "libjava/testsuite/libjava.lang/BuiltinReverseBytes.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.jar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.jar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.jar?ref=a1293f402a25801d03a58312b06b65c33702c726"}, {"sha": "0d2e332081d8b059cc8c8aa137a369a831a3ebed", "filename": "libjava/testsuite/libjava.lang/BuiltinReverseBytes.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.java?ref=a1293f402a25801d03a58312b06b65c33702c726", "patch": "@@ -0,0 +1,62 @@\n+class BuiltinReverseBytes\n+{\n+  public static short bswap16(short x)\n+  {\n+    return Short.reverseBytes(x);\n+  }\n+\n+  public static int bswap32(int x)\n+  {\n+    return Integer.reverseBytes(x);\n+  }\n+\n+  public static long bswap64(long x)\n+  {\n+    return Long.reverseBytes(x);\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    if (Short.reverseBytes((short)0) != (short)0)\n+      throw new Error();\n+    if (Short.reverseBytes((short)0x1234) != (short)0x3412)\n+      throw new Error();\n+    if (Short.reverseBytes((short)-1) != (short)-1)\n+      throw new Error();\n+     \n+    if (Integer.reverseBytes(0) != 0)\n+      throw new Error();\n+    if (Integer.reverseBytes(0x12345678) != 0x78563412)\n+      throw new Error();\n+    if (Integer.reverseBytes(-1) != -1)\n+      throw new Error();\n+\n+    if (Long.reverseBytes(0L) != 0L)\n+      throw new Error();\n+    if (Long.reverseBytes(0x123456789abcde0fL) != 0x0fdebc9a78563412L)\n+      throw new Error();\n+    if (Long.reverseBytes(-1L) != -1L)\n+      throw new Error();\n+\n+    if (bswap16((short)0) != (short)0)\n+      throw new Error();\n+    if (bswap16((short)0x1234) != (short)0x3412)\n+      throw new Error();\n+    if (bswap16((short)-1) != (short)-1)\n+      throw new Error();\n+     \n+    if (bswap32(0) != 0)\n+      throw new Error();\n+    if (bswap32(0x12345678) != 0x78563412)\n+      throw new Error();\n+    if (bswap32(-1) != -1)\n+      throw new Error();\n+\n+    if (bswap64(0L) != 0L)\n+      throw new Error();\n+    if (bswap64(0x123456789abcde0fL) != 0x0fdebc9a78563412L)\n+      throw new Error();\n+    if (bswap64(-1L) != -1L)\n+      throw new Error();\n+  }\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libjava/testsuite/libjava.lang/BuiltinReverseBytes.out", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1293f402a25801d03a58312b06b65c33702c726/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FBuiltinReverseBytes.out?ref=a1293f402a25801d03a58312b06b65c33702c726"}]}