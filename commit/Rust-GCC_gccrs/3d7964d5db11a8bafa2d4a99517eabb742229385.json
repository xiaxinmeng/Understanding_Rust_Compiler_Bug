{"sha": "3d7964d5db11a8bafa2d4a99517eabb742229385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3OTY0ZDVkYjExYThiYWZhMmQ0YTk5NTE3ZWFiYjc0MjIyOTM4NQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-16T18:18:00Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-16T18:18:00Z"}, "message": "darwin.c (machopic_select_section): Use decl_readonly_section to do most of the work.\n\n\t* config/darwin.c (machopic_select_section): Use decl_readonly_section\n\tto do most of the work.\n\nFrom-SVN: r69468", "tree": {"sha": "8ebaeaf6f7be53ebd5d47b06df1e606381121834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ebaeaf6f7be53ebd5d47b06df1e606381121834"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7964d5db11a8bafa2d4a99517eabb742229385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7964d5db11a8bafa2d4a99517eabb742229385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7964d5db11a8bafa2d4a99517eabb742229385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7964d5db11a8bafa2d4a99517eabb742229385/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6a8c803751354c48acd705e495e6e9cbe940784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a8c803751354c48acd705e495e6e9cbe940784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6a8c803751354c48acd705e495e6e9cbe940784"}], "stats": {"total": 66, "additions": 25, "deletions": 41}, "files": [{"sha": "95255987ddbc44f14ab5029bd3ec1ddd7edd8146", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7964d5db11a8bafa2d4a99517eabb742229385/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7964d5db11a8bafa2d4a99517eabb742229385/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d7964d5db11a8bafa2d4a99517eabb742229385", "patch": "@@ -1,3 +1,8 @@\n+2003-07-16  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/darwin.c (machopic_select_section): Use decl_readonly_section\n+\tto do most of the work.\n+\n 2003-07-16  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix-protos.h: Convert prototypes to ISO C90."}, {"sha": "d57c293eadab06ac8927fb9e9676278ce62708fb", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 20, "deletions": 41, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7964d5db11a8bafa2d4a99517eabb742229385/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7964d5db11a8bafa2d4a99517eabb742229385/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=3d7964d5db11a8bafa2d4a99517eabb742229385", "patch": "@@ -1157,18 +1157,22 @@ machopic_select_section (exp, reloc, align)\n      int reloc;\n      unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n-  if (TREE_CODE (exp) == STRING_CST)\n-    {\n-      if (flag_writable_strings)\n-\tdata_section ();\n-      else if ((size_t) TREE_STRING_LENGTH (exp) !=\n-\t       strlen (TREE_STRING_POINTER (exp)) + 1)\n-\treadonly_data_section ();\n-      else\n-\tcstring_section ();\n-    }\n-  else if (TREE_CODE (exp) == INTEGER_CST\n-\t   || TREE_CODE (exp) == REAL_CST)\n+  void (*base_function)(void);\n+  \n+  if (decl_readonly_section_1 (exp, reloc, MACHOPIC_INDIRECT))\n+    base_function = readonly_data_section;\n+  else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+    base_function = const_data_section;\n+  else\n+    base_function = data_section;\n+  \n+  if (TREE_CODE (exp) == STRING_CST\n+      && ((size_t) TREE_STRING_LENGTH (exp) \n+\t  == strlen (TREE_STRING_POINTER (exp)) + 1)\n+      && ! flag_writable_strings)\n+    cstring_section ();\n+  else if ((TREE_CODE (exp) == INTEGER_CST || TREE_CODE (exp) == REAL_CST)\n+\t   && flag_merge_constants)\n     {\n       tree size = TYPE_SIZE (TREE_TYPE (exp));\n \n@@ -1181,7 +1185,7 @@ machopic_select_section (exp, reloc, align)\n \t       TREE_INT_CST_HIGH (size) == 0)\n \tliteral8_section ();\n       else\n-\treadonly_data_section ();\n+\tbase_function ();\n     }\n   else if (TREE_CODE (exp) == CONSTRUCTOR\n \t   && TREE_TYPE (exp)\n@@ -1195,16 +1199,8 @@ machopic_select_section (exp, reloc, align)\n \tobjc_constant_string_object_section ();\n       else if (!strcmp (IDENTIFIER_POINTER (name), \"NXConstantString\"))\n \tobjc_string_object_section ();\n-      else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n-\t{\n-\t  \n-\t  if (TREE_SIDE_EFFECTS (exp) || (MACHOPIC_INDIRECT && reloc))\n-\t    const_data_section ();\n-\t  else\n-\t    readonly_data_section ();\n-\t}\n       else\n-\tdata_section ();\n+\tbase_function ();\n     }\n   else if (TREE_CODE (exp) == VAR_DECL &&\n \t   DECL_NAME (exp) &&\n@@ -1258,28 +1254,11 @@ machopic_select_section (exp, reloc, align)\n \tobjc_cat_cls_meth_section ();\n       else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))\n \tobjc_protocol_section ();\n-      else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\n-\t       && !TREE_SIDE_EFFECTS (exp))\n-\t{\n-\t  \n-\t  if (MACHOPIC_INDIRECT && reloc)\n-\t    const_data_section ();\n-\t  else\n-\t    readonly_data_section ();\n-\t}\n-      else\n-\tdata_section ();\n-    }\n-  else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n-    {\n-     \n-      if (TREE_SIDE_EFFECTS (exp) || (MACHOPIC_INDIRECT && reloc))\n-\tconst_data_section ();\n       else\n-\treadonly_data_section ();\n+\tbase_function ();\n     }\n   else\n-    data_section ();\n+    base_function ();\n }\n \n /* This can be called with address expressions as \"rtx\"."}]}