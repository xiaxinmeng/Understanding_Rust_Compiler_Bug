{"sha": "4b67a2744180ace28c32242b2a19d5e460cb85b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2N2EyNzQ0MTgwYWNlMjhjMzIyNDJiMmExOWQ1ZTQ2MGNiODViMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-04T16:24:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-04T16:24:24Z"}, "message": "real.c (ereal_to_decimal): Add digits parameter.\n\n\t* real.c (ereal_to_decimal): Add digits parameter.\n\t* real.h (REAL_VALUE_TO_DECIMAL): Remove format; add digits parameter.\n\t* c-pretty-print.c (pp_c_real_literal): Update call.\n\t* print-rtl.c (print_rtx): Likewise.\n\t* print-tree.c (print_node_brief, print_node): Likewise.\n\t* sched-vis.c (print_value): Likewise.\n\t* config/arc/arc.c (arc_print_operand): Likewise.\n\t* config/c4x/c4x.c (c4x_print_operand): Likewise.\n\t* config/i370/i370.h (PRINT_OPERAND): Likewise.\n\t* config/i386/i386.c (print_operand): Likewise.\n\t* config/i960/i960.c (i960_print_operand): Likewise.\n\t* config/ip2k/ip2k.c (asm_output_float): Likewise.\n\t* config/m32r/m32r.c (m32r_print_operand): Likewise.\n\t* config/m68hc11/m68hc11.c (print_operand): Likewise.\n\t* config/m68k/hp320.h (PRINT_OPERAND, ASM_OUTPUT_FLOAT_OPERAND,\n\tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n\t* config/m68k/m68k.h (ASM_OUTPUT_FLOAT_OPERAND,\n\tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n\t* config/m68k/sun2o4.h (ASM_OUTPUT_FLOAT_OPERAND,\n\tASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n\t* config/m68k/sun3.h (ASM_OUTPUT_FLOAT_OPERAND,\n\tASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n\t* config/mips/mips.c (print_operand): Likewise.\n\t* config/ns32k/ns32k.c (print_operand): Likewise.\n\t* config/pdp11/pdp11.h (PRINT_OPERAND): Likewise.\n\t* config/vax/vax.h (PRINT_OPERAND): Likewise.\n\t* doc/tm.texi (REAL_VALUE_TO_DECIMAL): Update docs.\n\n        * f/target.h (ffetarget_print_real1, ffetarget_print_real2): Update\n        call to REAL_VALUE_TO_DECIMAL.\n\nFrom-SVN: r56798", "tree": {"sha": "b08cf3dd22396dc00c208124fa79e09623e672ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b08cf3dd22396dc00c208124fa79e09623e672ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b67a2744180ace28c32242b2a19d5e460cb85b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b67a2744180ace28c32242b2a19d5e460cb85b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b67a2744180ace28c32242b2a19d5e460cb85b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b67a2744180ace28c32242b2a19d5e460cb85b3/comments", "author": null, "committer": null, "parents": [{"sha": "01abf342f82f9db810b16e139fd15986afc75168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01abf342f82f9db810b16e139fd15986afc75168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01abf342f82f9db810b16e139fd15986afc75168"}], "stats": {"total": 180, "additions": 134, "deletions": 46}, "files": [{"sha": "a289e8aff3214e2b29128b6bcbddb130895af442", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1,3 +1,33 @@\n+2002-09-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (ereal_to_decimal): Add digits parameter.\n+\t* real.h (REAL_VALUE_TO_DECIMAL): Remove format; add digits parameter.\n+\t* c-pretty-print.c (pp_c_real_literal): Update call.\n+\t* print-rtl.c (print_rtx): Likewise.\n+\t* print-tree.c (print_node_brief, print_node): Likewise.\n+\t* sched-vis.c (print_value): Likewise.\n+\t* config/arc/arc.c (arc_print_operand): Likewise.\n+\t* config/c4x/c4x.c (c4x_print_operand): Likewise.\n+\t* config/i370/i370.h (PRINT_OPERAND): Likewise.\n+\t* config/i386/i386.c (print_operand): Likewise.\n+\t* config/i960/i960.c (i960_print_operand): Likewise.\n+\t* config/ip2k/ip2k.c (asm_output_float): Likewise.\n+\t* config/m32r/m32r.c (m32r_print_operand): Likewise.\n+\t* config/m68hc11/m68hc11.c (print_operand): Likewise.\n+\t* config/m68k/hp320.h (PRINT_OPERAND, ASM_OUTPUT_FLOAT_OPERAND,\n+\tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n+\t* config/m68k/m68k.h (ASM_OUTPUT_FLOAT_OPERAND, \n+\tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n+\t* config/m68k/sun2o4.h (ASM_OUTPUT_FLOAT_OPERAND,\n+\tASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n+\t* config/m68k/sun3.h (ASM_OUTPUT_FLOAT_OPERAND,\n+\tASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n+\t* config/mips/mips.c (print_operand): Likewise.\n+\t* config/ns32k/ns32k.c (print_operand): Likewise.\n+\t* config/pdp11/pdp11.h (PRINT_OPERAND): Likewise.\n+\t* config/vax/vax.h (PRINT_OPERAND): Likewise.\n+\t* doc/tm.texi (REAL_VALUE_TO_DECIMAL): Update docs.\n+\n 2002-09-04  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/elf.h (TARGET_SECTION_TYPE_FLAGS): Define to"}, {"sha": "5d9151691cde3f3365af45d43b9a00170f736d14", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -469,8 +469,7 @@ pp_c_real_literal (ppi, r)\n      c_pretty_printer ppi;\n      tree r;\n {\n-  REAL_VALUE_TO_DECIMAL (TREE_REAL_CST (r), \"%.16g\",\n-\t\t\t pp_buffer (ppi)->digit_buffer);\n+  REAL_VALUE_TO_DECIMAL (TREE_REAL_CST (r), pp_buffer (ppi)->digit_buffer, -1);\n   pp_identifier (ppi, pp_buffer(ppi)->digit_buffer);\n }\n "}, {"sha": "a8de317726d3cb760ba20cffa6edd986142a7d2d", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1748,7 +1748,7 @@ arc_print_operand (file, x, code)\n \t    || GET_MODE_CLASS (GET_MODE (x)) != MODE_FLOAT)\n \t  abort ();\n \tREAL_VALUE_FROM_CONST_DOUBLE (d, x);\n-\tREAL_VALUE_TO_DECIMAL (d, \"%.20e\", str);\n+\tREAL_VALUE_TO_DECIMAL (d, str, -1);\n \tfprintf (file, \"%s\", str);\n \treturn;\n       }"}, {"sha": "79096657da49357c5a1b535377126a91043547b4", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1958,7 +1958,7 @@ c4x_print_operand (file, op, letter)\n \tREAL_VALUE_TYPE r;\n \t\n \tREAL_VALUE_FROM_CONST_DOUBLE (r, op);\n-\tREAL_VALUE_TO_DECIMAL (r, \"%20f\", str);\n+\tREAL_VALUE_TO_DECIMAL (r, str, -1);\n \tfprintf (file, \"%s\", str);\n       }\n       break;"}, {"sha": "d4c29399da279ba6d664a2c5787b406ddd2dca72", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1371,7 +1371,7 @@ enum reg_class\n             char buf[50];\t\t\t\t\t\t\\\n             REAL_VALUE_TYPE rval;\t\t\t\t\t\\\n             REAL_VALUE_FROM_CONST_DOUBLE(rval, XV);\t\t\t\\\n-            REAL_VALUE_TO_DECIMAL (rval, HOST_WIDE_INT_PRINT_DEC, buf);\t\\\n+            REAL_VALUE_TO_DECIMAL (rval, buf, -1);\t\t\t\\\n \t    if (GET_MODE (XV) == SFmode)\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\t\\\n \t\tmvs_page_lit += 4;\t\t\t\t\t\\\n@@ -1665,7 +1665,7 @@ enum reg_class\n             char buf[50];\t\t\t\t\t\t\\\n             REAL_VALUE_TYPE rval;\t\t\t\t\t\\\n             REAL_VALUE_FROM_CONST_DOUBLE(rval, XV);\t\t\t\\\n-            REAL_VALUE_TO_DECIMAL (rval, HOST_WIDE_INT_PRINT_DEC, buf);\t\\\n+            REAL_VALUE_TO_DECIMAL (rval, buf, -1);\t\t\t\\\n \t    if (GET_MODE (XV) == SFmode)\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\t\\\n \t\tmvs_page_lit += 4;\t\t\t\t\t\\"}, {"sha": "4e0da606f92e3897a843cdadb10750b5d94f1904", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -6610,7 +6610,7 @@ print_operand (file, x, code)\n       char dstr[30];\n \n       REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n-      REAL_VALUE_TO_DECIMAL (r, \"%.22e\", dstr);\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\n       fprintf (file, \"%s\", dstr);\n     }\n \n@@ -6621,7 +6621,7 @@ print_operand (file, x, code)\n       char dstr[30];\n \n       REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n-      REAL_VALUE_TO_DECIMAL (r, \"%.22e\", dstr);\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\n       fprintf (file, \"%s\", dstr);\n     }\n "}, {"sha": "ae857112801f585ae781304f95e1de93f4f275bf", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1761,7 +1761,7 @@ i960_print_operand (file, x, code)\n \t}\n \n       REAL_VALUE_FROM_CONST_DOUBLE (d, x);\n-      REAL_VALUE_TO_DECIMAL (d, \"%#g\", dstr);\n+      REAL_VALUE_TO_DECIMAL (d, dstr, -1);\n       fprintf (file, \"0f%s\", dstr);\n       return;\n     }"}, {"sha": "f4c9daf5fff08c99c32184dd2c689b53e2fd3dcf", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -3058,7 +3058,7 @@ asm_output_float (file, n)\n   char dstr[100];\n   \n   REAL_VALUE_TO_TARGET_SINGLE (n, val);\n-  REAL_VALUE_TO_DECIMAL (n, \"%g\", dstr);\n+  REAL_VALUE_TO_DECIMAL (n, dstr, -1);\n   fprintf (file, \"\\t.long 0x%08lx\\t/* %s */\\n\",val, dstr);\n }\n "}, {"sha": "09099175093798bc22f153e202476f1bdb0fd4e9", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -2318,7 +2318,7 @@ m32r_print_operand (file, x, code)\n \t    || GET_MODE_CLASS (GET_MODE (x)) != MODE_FLOAT)\n \t  fatal_insn (\"bad insn for 'A'\", x);\n \tREAL_VALUE_FROM_CONST_DOUBLE (d, x);\n-\tREAL_VALUE_TO_DECIMAL (d, \"%.20e\", str);\n+\tREAL_VALUE_TO_DECIMAL (d, str, -1);\n \tfprintf (file, \"%s\", str);\n \treturn;\n       }"}, {"sha": "c17c3f10301972a801bf28a119f45b4c7b52b7e5", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -2264,7 +2264,7 @@ print_operand (file, op, letter)\n       char dstr[30];\n \n       REAL_VALUE_FROM_CONST_DOUBLE (r, op);\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20g\", dstr);\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\n       asm_fprintf (file, \"%I0r%s\", dstr);\n     }\n   else"}, {"sha": "17dcb69afc5a009bf94665aab7ce562d23211046", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -300,7 +300,7 @@ do {\t\t\t\t\t\\\n       if (CODE == 'f')\t\t\t\t\t\t\\\n         {\t\t\t\t\t\t\t\\\n           char dstr[30];\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL (VALUE, \"%.9g\", dstr);\t\t\\\n+          REAL_VALUE_TO_DECIMAL (VALUE, dstr, 9);\t\t\\\n           fprintf ((FILE), \"&0f%s\", dstr);\t\t\t\\\n         }\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n@@ -317,7 +317,7 @@ do {\t\t\t\t\t\\\n #undef ASM_OUTPUT_DOUBLE_OPERAND\n #define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\t\\\n  do { char dstr[30];\t\t\t\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (VALUE, \"%.20g\", dstr);\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (VALUE, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"&0f%s\", dstr);\t\t\t\t\t\\\n     } while (0)\n \n@@ -326,7 +326,7 @@ do {\t\t\t\t\t\\\n #undef ASM_OUTPUT_LONG_DOUBLE_OPERAND\n #define ASM_OUTPUT_LONG_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\\\n  do { char dstr[30];\t\t\t\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (VALUE, \"%.20g\", dstr);\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (VALUE, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"&0f%s\", dstr);\t\t\t\t\t\\\n     } while (0)\n \n@@ -354,12 +354,12 @@ do {\t\t\t\t\t\\\n   else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { REAL_VALUE_TYPE r;  char dstr[30];\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20g\", dstr);\t\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"&0f%s\", dstr); }\t\t\t\t\t\\\n   else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == XFmode)\t\\\n     { REAL_VALUE_TYPE r;  char dstr[30];\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20g\", dstr);\t\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"&0f%s\", dstr); }\t\t\t\t\t\\\n   else { putc ('&', FILE); output_addr_const (FILE, X); }}\n #endif"}, {"sha": "bf70352d5a65ee113581c14085cdacba55b4adeb", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1831,7 +1831,7 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n       if (CODE == 'f')\t\t\t\t\t\t\\\n         {\t\t\t\t\t\t\t\\\n           char dstr[30];\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL (VALUE, \"%.9g\", dstr);\t\t\\\n+          REAL_VALUE_TO_DECIMAL (VALUE, dstr, 9);\t\t\\\n           asm_fprintf ((FILE), \"%I0r%s\", dstr);\t\t\t\\\n         }\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n@@ -1846,15 +1846,15 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n    This macro is a 68k-specific macro.  */\n #define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\t\\\n  do { char dstr[30];\t\t\t\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (VALUE, \"%.20g\", dstr);\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (VALUE, dstr, -1);\t\t\t\t\\\n       asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\t\\\n     } while (0)\n \n /* Note, long double immediate operands are not actually\n    generated by m68k.md.  */\n #define ASM_OUTPUT_LONG_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\\\n  do { char dstr[30];\t\t\t\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (VALUE, \"%.20g\", dstr);\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (VALUE, dstr, -1);\t\t\t\t\\\n       asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\t\\\n     } while (0)\n "}, {"sha": "5b09262513b229093bbd10238a037061072cee60", "filename": "gcc/config/m68k/sun2o4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun2o4.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -121,7 +121,7 @@ Boston, MA 02111-1307, USA.  */\n         }\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n         { char dstr[30];\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), dstr, 9);\t\t\\\n           fprintf (FILE, \"#0r%s\", dstr);\t\t\t\\\n         }\t\t\t\t\t\t\t\\\n     } while (0)\n@@ -141,7 +141,7 @@ Boston, MA 02111-1307, USA.  */\n         }\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n         { char dstr[30];\t\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20g\", dstr);\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), dstr, -1);\t\t\t\\\n           fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n         }\t\t\t\t\t\t\t\t\\\n     } while (0)"}, {"sha": "3dcb85a798e918162d7e938e90fb7b0e2970eb8e", "filename": "gcc/config/m68k/sun3.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fsun3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fm68k%2Fsun3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -208,7 +208,7 @@ Boston, MA 02111-1307, USA.  */\n         }\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n         { char dstr[30];\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), dstr, 9);\t\t\\\n           asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\\\n         }\t\t\t\t\t\t\t\\\n     } while (0)\n@@ -228,7 +228,7 @@ Boston, MA 02111-1307, USA.  */\n         }\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n         { char dstr[30];\t\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.17g\", dstr);\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), dstr, -1);\t\t\t\\\n           asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\t\\\n         }\t\t\t\t\t\t\t\t\\\n     } while (0)"}, {"sha": "2044cbffc54f94e12df55fa6fefb50985a4d327a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -5888,7 +5888,7 @@ print_operand (file, op, letter)\n       char s[30];\n \n       REAL_VALUE_FROM_CONST_DOUBLE (d, op);\n-      REAL_VALUE_TO_DECIMAL (d, \"%.20e\", s);\n+      REAL_VALUE_TO_DECIMAL (d, s, -1);\n       fprintf (file, s);\n     }\n "}, {"sha": "b94e7042c537b7d32a0fcb74f175f781c93bcf90", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1134,7 +1134,7 @@ print_operand (file, x, code)\n \t\t   CONST_DOUBLE_HIGH (x), CONST_DOUBLE_LOW (x));\n #else\n \t  char s[30];\n-\t  REAL_VALUE_TO_DECIMAL (r, \"%.20e\", s);\n+\t  REAL_VALUE_TO_DECIMAL (r, s, -1);\n #ifdef ENCORE_ASM\n \t  fprintf (file, \"0f%s\", s);\n #else\n@@ -1150,7 +1150,7 @@ print_operand (file, x, code)\n \t  fprintf (file, \"0Fx%08lx\", l);\n #else\n \t  char s[30];\n-\t  REAL_VALUE_TO_DECIMAL (r, \"%.20e\", s);\n+\t  REAL_VALUE_TO_DECIMAL (r, s, -1);\n \t  fprintf (file, \"0f%s\", s);\n #endif\n \t}"}, {"sha": "f4e40b37a1763bb5fee0379d24d96f6da6e2130f", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1128,7 +1128,7 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n     { REAL_VALUE_TYPE r;\t\t\t\t\t\t\\\n       char buf[30];\t\t\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20e\", buf);\t\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (r, buf, -1);\t\t\t\t\\\n       fprintf (FILE, \"#%s\", buf); }\t\t\t\t\t\\\n   else { putc ('$', FILE); output_addr_const_pdp11 (FILE, X); }}\n \f"}, {"sha": "3d9767847b37676e623cec5a12306c4bc951945d", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1207,12 +1207,12 @@ VAX operand formatting codes:\n   else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == SFmode)\t\\\n     { REAL_VALUE_TYPE r; char dstr[30];\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20e\", dstr);\t\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"$0f%s\", dstr); }\t\t\t\t\t\\\n   else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { REAL_VALUE_TYPE r; char dstr[30];\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      REAL_VALUE_TO_DECIMAL (r, \"%.20e\", dstr);\t\t\t\t\\\n+      REAL_VALUE_TO_DECIMAL (r, dstr, -1);\t\t\t\t\\\n       fprintf (FILE, \"$0%c%s\", ASM_DOUBLE_CHAR, dstr); }\t\t\\\n   else { putc ('$', FILE); output_addr_const (FILE, X); }}\n "}, {"sha": "766167f85694033c90374044e76eca672ae88fef", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -6313,15 +6313,16 @@ The array element values are designed so that you can print them out\n using @code{fprintf} in the order they should appear in the target\n machine's memory.\n \n-@item REAL_VALUE_TO_DECIMAL (@var{x}, @var{format}, @var{string})\n+@item REAL_VALUE_TO_DECIMAL (@var{x}, @var{string}, @var{digits})\n @findex REAL_VALUE_TO_DECIMAL\n This macro converts @var{x}, of type @code{REAL_VALUE_TYPE}, to a\n decimal number and stores it as a string into @var{string}.\n You must pass, as @var{string}, the address of a long enough block\n of space to hold the result.\n \n-The argument @var{format} is a @code{printf}-specification that serves\n-as a suggestion for how to format the output string.\n+The argument @var{digits} is the number of decimal digits to print,\n+or @minus{}1 to indicate ``enough'', i.e. @code{DECIMAL_DIG} for\n+for the target.\n @end table\n \n @node Uninitialized Data"}, {"sha": "56e33aa67f75b4a8e3e38c2f175e1afe485b1ac3", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1,3 +1,8 @@\n+2002-09-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* target.h (ffetarget_print_real1, ffetarget_print_real2): Update\n+\tcall to REAL_VALUE_TO_DECIMAL.\n+\n 2002-08-31  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* com.c: Don't set flag_finite_math_only by default."}, {"sha": "0601c4a468bb7dc5a4331a4b577a6a2b80507177", "filename": "gcc/f/target.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1493,13 +1493,13 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n #define ffetarget_print_real1(f,l) \\\n   ({ REAL_VALUE_TYPE lr; \\\n      lr = ffetarget_cvt_r1_to_rv_ ((l)); \\\n-     REAL_VALUE_TO_DECIMAL (lr, bad_fmt_val??, ffetarget_string_); \\\n+     REAL_VALUE_TO_DECIMAL (lr, ffetarget_string_, -1); \\\n      fputs (ffetarget_string_, (f)); \\\n    })\n #define ffetarget_print_real2(f,l) \\\n   ({ REAL_VALUE_TYPE lr; \\\n      lr = ffetarget_cvt_r2_to_rv_ (&((l).v[0])); \\\n-     REAL_VALUE_TO_DECIMAL (lr, bad_fmt_val??, ffetarget_string_); \\\n+     REAL_VALUE_TO_DECIMAL (lr, ffetarget_string_, -1); \\\n      fputs (ffetarget_string_, (f)); \\\n    })\n #define ffetarget_real1_one(res) ffetarget_cvt_rv_to_r1_ (dconst1, *(res))"}, {"sha": "eb59587ed69c511879dd71a3471051ee7e30b778", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -524,7 +524,7 @@ print_rtx (in_rtx)\n \t  char s[30];\n \n \t  REAL_VALUE_FROM_CONST_DOUBLE (val, in_rtx);\n-\t  REAL_VALUE_TO_DECIMAL (val, \"%.16g\", s);\n+\t  REAL_VALUE_TO_DECIMAL (val, s, -1);\n \t  fprintf (outfile, \" [%s]\", s);\n \t}\n       break;"}, {"sha": "949b7f51be0929b641360a3246ce52082e290c0f", "filename": "gcc/print-tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -133,7 +133,7 @@ print_node_brief (file, prefix, node, indent)\n \t{\n \t  char string[100];\n \n-\t  REAL_VALUE_TO_DECIMAL (d, \"%e\", string);\n+\t  REAL_VALUE_TO_DECIMAL (d, string, -1);\n \t  fprintf (file, \" %s\", string);\n \t}\n     }\n@@ -683,7 +683,7 @@ print_node (file, prefix, node, indent)\n \t      {\n \t\tchar string[100];\n \n-\t\tREAL_VALUE_TO_DECIMAL (d, \"%e\", string);\n+\t\tREAL_VALUE_TO_DECIMAL (d, string, -1);\n \t\tfprintf (file, \" %s\", string);\n \t      }\n \t  }"}, {"sha": "019821df4085dd8022f951168ef8168696fc6e7b", "filename": "gcc/real.c", "status": "modified", "additions": 58, "deletions": 5, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -1295,7 +1295,7 @@ debug_real (r)\n {\n   char dstr[30];\n \n-  REAL_VALUE_TO_DECIMAL (r, \"%.20g\", dstr);\n+  REAL_VALUE_TO_DECIMAL (r, dstr, -1);\n   fprintf (stderr, \"%s\", dstr);\n }\n \n@@ -1380,17 +1380,70 @@ etarsingle (r)\n /* Convert X to a decimal ASCII string S for output to an assembly\n    language file.  Note, there is no standard way to spell infinity or\n    a NaN, so these values may require special treatment in the tm.h\n-   macros.  */\n+   macros. \n+\n+   The argument DIGITS is the number of decimal digits to print,\n+   or -1 to indicate \"enough\", i.e. DECIMAL_DIG for for the target.  */\n \n void\n-ereal_to_decimal (x, s)\n+ereal_to_decimal (x, s, digits)\n      REAL_VALUE_TYPE x;\n      char *s;\n+     int digits;\n {\n   UEMUSHORT e[NE];\n-\n   GET_REAL (&x, e);\n-  etoasc (e, s, 20);\n+\n+  /* Find DECIMAL_DIG for the target.  */\n+  if (digits < 0)\n+    switch (TARGET_FLOAT_FORMAT)\n+      {\n+      case IEEE_FLOAT_FORMAT:\n+\tswitch (LONG_DOUBLE_TYPE_SIZE)\n+\t  {\n+\t  case 32:\n+\t    digits = 9;\n+\t    break;\n+\t  case 64:\n+\t    digits = 17;\n+\t    break;\n+\t  case 128:\n+\t    if (!INTEL_EXTENDED_IEEE_FORMAT)\n+\t      {\n+\t\tdigits = 36;\n+\t\tbreak;\n+\t      }\n+\t    /* FALLTHRU */\n+\t  case 96:\n+\t    digits = 21;\n+\t    break;\n+\n+\t  default:\n+\t    abort ();\n+\t  }\n+\tbreak;\n+\n+      case VAX_FLOAT_FORMAT:\n+\tdigits = 18; /* D_FLOAT */\n+\tbreak;\n+\n+      case IBM_FLOAT_FORMAT:\n+\tdigits = 18;\n+\tbreak;\n+\n+      case C4X_FLOAT_FORMAT:\n+\tdigits = 11;\n+\tbreak;\n+\n+      default:\n+\tabort ();\n+      }\n+\t      \n+  /* etoasc interprets digits as places after the decimal point.\n+     We interpret digits as total decimal digits, which IMO is\n+     more useful.  Since the output will have one digit before\n+     the point, subtract one.  */\n+  etoasc (e, s, digits - 1);\n }\n \n /* Compare X and Y.  Return 1 if X > Y, 0 if X == Y, -1 if X < Y,"}, {"sha": "cf5fdf21aebeaf5621a8377dc7182653ab992b92", "filename": "gcc/real.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -154,7 +154,7 @@ extern void etartdouble\t\tPARAMS ((REAL_VALUE_TYPE, long *));\n extern void etarldouble\t\tPARAMS ((REAL_VALUE_TYPE, long *));\n extern void etardouble\t\tPARAMS ((REAL_VALUE_TYPE, long *));\n extern long etarsingle\t\tPARAMS ((REAL_VALUE_TYPE));\n-extern void ereal_to_decimal\tPARAMS ((REAL_VALUE_TYPE, char *));\n+extern void ereal_to_decimal\tPARAMS ((REAL_VALUE_TYPE, char *, int));\n extern int ereal_cmp\t\tPARAMS ((REAL_VALUE_TYPE, REAL_VALUE_TYPE));\n extern int ereal_isneg\t\tPARAMS ((REAL_VALUE_TYPE));\n extern REAL_VALUE_TYPE ereal_unto_float PARAMS ((long));\n@@ -253,7 +253,7 @@ extern bool exact_real_truncate PARAMS ((enum machine_mode,\n #define REAL_VALUE_FROM_TARGET_SINGLE(f)  (ereal_from_float (f))\n \n /* Conversions to decimal ASCII string.  */\n-#define REAL_VALUE_TO_DECIMAL(r, fmt, s) (ereal_to_decimal (r, s))\n+#define REAL_VALUE_TO_DECIMAL(r, s, dig) (ereal_to_decimal (r, s, dig))\n \n /* **** End of software floating point emulator interface macros **** */\n \f"}, {"sha": "571c4ce13058843154d7ad0b5e02fdc435ad0b97", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b67a2744180ace28c32242b2a19d5e460cb85b3/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=4b67a2744180ace28c32242b2a19d5e460cb85b3", "patch": "@@ -566,7 +566,7 @@ print_value (buf, x, verbose)\n \t  REAL_VALUE_TYPE r;\n \n \t  REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n-\t  REAL_VALUE_TO_DECIMAL(r, \"%.6e\", t);\n+\t  REAL_VALUE_TO_DECIMAL(r, t, 6);\n \t}\n       else\n \tsprintf (t, \"<0x%lx,0x%lx>\", (long) XWINT (x, 2), (long) XWINT (x, 3));"}]}