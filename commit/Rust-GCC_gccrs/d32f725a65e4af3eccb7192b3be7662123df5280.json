{"sha": "d32f725a65e4af3eccb7192b3be7662123df5280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMyZjcyNWE2NWU0YWYzZWNjYjcxOTJiM2JlNzY2MjEyM2RmNTI4MA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-08-27T10:48:32Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2010-08-27T10:48:32Z"}, "message": "dse.c (group_info.base_mem, [...]): Use BLKmode to cover all the possible offsets from this base.\n\n        * dse.c (group_info.base_mem, get_group_info): Use BLKmode to\n        cover all the possible offsets from this base.\n        (scan_reads_nospill): Pass base_mem's mode to canon_true_dependence.\n\n        testsuite/\n        * gnat.dg/dse_step.ads, dse_step.adb, test_dse_step.adb: New test.\n\n\nCo-Authored-By: Eric Botcazou <ebotcazou@adacore.com>\n\nFrom-SVN: r163582", "tree": {"sha": "19db1f26d8d334badf53e2e36df8a12d40ac9c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19db1f26d8d334badf53e2e36df8a12d40ac9c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d32f725a65e4af3eccb7192b3be7662123df5280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32f725a65e4af3eccb7192b3be7662123df5280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32f725a65e4af3eccb7192b3be7662123df5280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32f725a65e4af3eccb7192b3be7662123df5280/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "401fcd3b8fd7158703263fd4de33a23faa7a2738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401fcd3b8fd7158703263fd4de33a23faa7a2738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401fcd3b8fd7158703263fd4de33a23faa7a2738"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "edd3c4c79a74d21a86122db301c8a625d149284f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -1,3 +1,10 @@\n+2010-08-27  Olivier Hainque  <hainque@adacore.com>\n+            Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* dse.c (group_info.base_mem, get_group_info): Use BLKmode to\n+\tcover all the possible offsets from this base.\n+\t(scan_reads_nospill): Pass base_mem's mode to canon_true_dependence.\n+\n 2010-08-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/44485"}, {"sha": "1debafc385a9047150e26253d84a52e73df04f59", "filename": "gcc/dse.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -473,8 +473,9 @@ struct group_info\n      hard_frame_pointer.  */\n   bool frame_related;\n \n-  /* A mem wrapped around the base pointer for the group in order to\n-     do read dependency.  */\n+  /* A mem wrapped around the base pointer for the group in order to do\n+     read dependency.  It must be given BLKmode in order to encompass all\n+     the possible offsets from the base.  */\n   rtx base_mem;\n \n   /* Canonized version of base_mem's address.  */\n@@ -705,7 +706,7 @@ get_group_info (rtx base)\n       *slot = gi = (group_info_t) pool_alloc (rtx_group_info_pool);\n       gi->rtx_base = base;\n       gi->id = rtx_group_next_id++;\n-      gi->base_mem = gen_rtx_MEM (QImode, base);\n+      gi->base_mem = gen_rtx_MEM (BLKmode, base);\n       gi->canon_base_addr = canon_rtx (base);\n       gi->store1_n = BITMAP_ALLOC (NULL);\n       gi->store1_p = BITMAP_ALLOC (NULL);\n@@ -3118,7 +3119,7 @@ scan_reads_nospill (insn_info_t insn_info, bitmap gen, bitmap kill)\n \t\t     base.  */\n \t\t  if ((read_info->group_id < 0)\n \t\t      && canon_true_dependence (group->base_mem,\n-\t\t\t\t\t\tQImode,\n+\t\t\t\t\t\tGET_MODE (group->base_mem),\n \t\t\t\t\t\tgroup->canon_base_addr,\n \t\t\t\t\t\tread_info->mem, NULL_RTX,\n \t\t\t\t\t\trtx_varies_p))"}, {"sha": "ebf60390f69691492c0d643d09efe0f9c0823443", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -1,3 +1,7 @@\n+2010-08-27  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/dse_step.ads, dse_step.adb, test_dse_step.adb: New test.\n+\n 2010-08-26  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/38936"}, {"sha": "040bcb7d2d5b9280ce0899cf0c6c1c8f305f9095", "filename": "gcc/testsuite/gnat.dg/dse_step.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.adb?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -0,0 +1,18 @@\n+package body Dse_Step is\n+\n+   procedure Do_Step (This : in out Counter) is\n+   begin\n+      This.Value := This.Value + This.Step;\n+   end;\n+\n+   procedure Step_From (Start : in My_Counter) is\n+      Lc : My_Counter := Start;\n+   begin\n+      while Nsteps > 0 loop\n+         Do_Step (Lc);\n+         Nsteps := Nsteps - 1;\n+      end loop;\n+      Mv := Lc.Value;\n+   end;\n+\n+end;"}, {"sha": "8cf0c74ea37ddd019eab39359c78115926d8cb04", "filename": "gcc/testsuite/gnat.dg/dse_step.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdse_step.ads?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -0,0 +1,19 @@\n+package Dse_Step is\n+\n+   type Counter is record\n+      Value : Natural;\n+      Step  : Natural;\n+   end record;\n+   pragma Suppress_Initialization (Counter);\n+\n+   procedure Do_Step (This : in out Counter);\n+   pragma Inline (Do_Step);\n+\n+   type My_Counter is new Counter;\n+   pragma Suppress_Initialization (My_Counter);\n+\n+   procedure Step_From (Start : in My_Counter);\n+\n+   Nsteps : Natural := 12;\n+   Mv : Natural;\n+end;"}, {"sha": "77652b4c34f291323e8a5499acc6f260760b49d6", "filename": "gcc/testsuite/gnat.dg/test_dse_step.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_dse_step.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32f725a65e4af3eccb7192b3be7662123df5280/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_dse_step.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_dse_step.adb?ref=d32f725a65e4af3eccb7192b3be7662123df5280", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O1 -gnatp -gnatn\" }\n+\n+with Dse_Step; use Dse_Step;\n+\n+procedure Test_Dse_Step is\n+   Start : My_Counter := (Value => 0, Step => 1);\n+   Steps : Natural := Nsteps;\n+begin\n+   Step_From (Start);\n+   if Mv /= Steps then\n+      raise Program_Error;\n+   end if;\n+end;"}]}