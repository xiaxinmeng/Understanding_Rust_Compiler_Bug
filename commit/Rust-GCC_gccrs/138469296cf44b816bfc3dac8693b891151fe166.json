{"sha": "138469296cf44b816bfc3dac8693b891151fe166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4NDY5Mjk2Y2Y0NGI4MTZiZmMzZGFjODY5M2I4OTExNTFmZTE2Ng==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-01T15:23:48Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-01T15:23:48Z"}, "message": "re PR fortran/31366 ([4.2 only] Last record truncated for read after short write, direct access file)\n\n2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31366\n\t* io/transfer.c (read_block_direct): Do not generate error when reading\n\tpast EOF on a short record that is less than the RECL= specified.\n\t\n2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31207\n\t* io/unit.c (close_unit_1): If there are bytes previously written from\n\tADVANCE=\"no\", move to the end before closing.\n\nFrom-SVN: r123401", "tree": {"sha": "9a9f870b5335d52676fe3c2e37a924b54d23fe1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9f870b5335d52676fe3c2e37a924b54d23fe1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/138469296cf44b816bfc3dac8693b891151fe166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138469296cf44b816bfc3dac8693b891151fe166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/138469296cf44b816bfc3dac8693b891151fe166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138469296cf44b816bfc3dac8693b891151fe166/comments", "author": null, "committer": null, "parents": [{"sha": "1732457d7f4e10944f15e4fe7c5943818d81a006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1732457d7f4e10944f15e4fe7c5943818d81a006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1732457d7f4e10944f15e4fe7c5943818d81a006"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "761e5b9a4d223e62c218d906eb97bac9cca597ec", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=138469296cf44b816bfc3dac8693b891151fe166", "patch": "@@ -1,3 +1,15 @@\n+2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31366\n+\t* io/transfer.c (read_block_direct): Do not generate error when reading\n+\tpast EOF on a short record that is less than the RECL= specified.\n+\t\n+2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31207\n+\t* io/unit.c (close_unit_1): If there are bytes previously written from\n+\tADVANCE=\"no\", move to the end before closing.\n+\n 2007-03-31  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/31335"}, {"sha": "3c6deb4998ce384cb7221abd1a48794e3e1d49d4", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=138469296cf44b816bfc3dac8693b891151fe166", "patch": "@@ -411,7 +411,6 @@ read_block_direct (st_parameter_dt *dtp, void *buf, size_t *nbytes)\n \t  /* Short read, e.g. if we hit EOF.  Apparently, we read\n \t   more than was written to the last record.  */\n \t  *nbytes = to_read_record;\n-\t  generate_error (&dtp->common, ERROR_SHORT_RECORD, NULL);\n \t  return;\n \t}\n "}, {"sha": "2d2c7426cf61f65afde411ee6b471c852ea2616a", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138469296cf44b816bfc3dac8693b891151fe166/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=138469296cf44b816bfc3dac8693b891151fe166", "patch": "@@ -590,6 +590,30 @@ close_unit_1 (gfc_unit *u, int locked)\n {\n   int i, rc;\n \n+  /* If there are previously written bytes from a write with ADVANCE=\"no\"\n+     Reposition the buffer before closing.  */\n+  if (u->saved_pos > 0)\n+    {\n+      char *p;\n+\n+      p = salloc_w (u->s, &u->saved_pos);\n+\n+      if (!(u->unit_number == options.stdout_unit\n+\t    || u->unit_number == options.stderr_unit))\n+\t{\n+\t  size_t len;\n+\n+\t  const char crlf[] = \"\\r\\n\";\n+#ifdef HAVE_CRLF\n+\t  len = 2;\n+#else\n+\t  len = 1;\n+#endif\n+\t  if (swrite (u->s, &crlf[2-len], &len) != 0)\n+\t    os_error (\"Close after ADVANCE_NO failed\");\n+\t}\n+    }\n+\n   rc = (u->s == NULL) ? 0 : sclose (u->s) == FAILURE;\n \n   u->closed = 1;"}]}