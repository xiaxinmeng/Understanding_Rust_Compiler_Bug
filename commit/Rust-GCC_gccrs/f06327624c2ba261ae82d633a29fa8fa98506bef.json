{"sha": "f06327624c2ba261ae82d633a29fa8fa98506bef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2MzI3NjI0YzJiYTI2MWFlODJkNjMzYTI5ZmE4ZmE5ODUwNmJlZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-10-14T18:43:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-14T18:43:16Z"}, "message": "* tree.c (expr_tree_cons, build_expr_list, expralloc): New fns.\n\nFrom-SVN: r15898", "tree": {"sha": "8445edfe678903489aa1773aae6020e788c4e53f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8445edfe678903489aa1773aae6020e788c4e53f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f06327624c2ba261ae82d633a29fa8fa98506bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06327624c2ba261ae82d633a29fa8fa98506bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06327624c2ba261ae82d633a29fa8fa98506bef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06327624c2ba261ae82d633a29fa8fa98506bef/comments", "author": null, "committer": null, "parents": [{"sha": "378ec56d93c6223b6b2466bd564f1fc53b311ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378ec56d93c6223b6b2466bd564f1fc53b311ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378ec56d93c6223b6b2466bd564f1fc53b311ce9"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "5b9bdbb414bb49f1d1ba8c393827405a6218a87c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06327624c2ba261ae82d633a29fa8fa98506bef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06327624c2ba261ae82d633a29fa8fa98506bef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f06327624c2ba261ae82d633a29fa8fa98506bef", "patch": "@@ -1,3 +1,7 @@\n+Tue Oct 14 11:30:29 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* tree.c (expr_tree_cons, build_expr_list, expralloc): New fns.\n+\n Fri Oct 10 13:46:56 1997  Doug Evans  <dje@canuck.cygnus.com>\n \n \t* configure.in: Handle --with-newlib."}, {"sha": "6812aa4aade4d9a7d248c8aacdb43b4e2c01f678", "filename": "gcc/tree.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06327624c2ba261ae82d633a29fa8fa98506bef/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06327624c2ba261ae82d633a29fa8fa98506bef/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f06327624c2ba261ae82d633a29fa8fa98506bef", "patch": "@@ -704,6 +704,16 @@ savealloc (size)\n {\n   return (char *) obstack_alloc (saveable_obstack, size);\n }\n+\n+/* Allocate SIZE bytes in the expression obstack\n+   and return a pointer to them.  */\n+\n+char *\n+expralloc (size)\n+     int size;\n+{\n+  return (char *) obstack_alloc (expression_obstack, size);\n+}\n \f\n /* Print out which obstack an object is in.  */\n \n@@ -2002,6 +2012,20 @@ build_decl_list (parm, value)\n   return node;\n }\n \n+/* Similar, but build on the expression_obstack.  */\n+\n+tree\n+build_expr_list (parm, value)\n+     tree parm, value;\n+{\n+  register tree node;\n+  register struct obstack *ambient_obstack = current_obstack;\n+  current_obstack = expression_obstack;\n+  node = build_tree_list (parm, value);\n+  current_obstack = ambient_obstack;\n+  return node;\n+}\n+\n /* Return a newly created TREE_LIST node whose\n    purpose and value fields are PARM and VALUE\n    and whose TREE_CHAIN is CHAIN.  */\n@@ -2048,6 +2072,20 @@ decl_tree_cons (purpose, value, chain)\n   return node;\n }\n \n+/* Similar, but build on the expression_obstack.  */\n+\n+tree\n+expr_tree_cons (purpose, value, chain)\n+     tree purpose, value, chain;\n+{\n+  register tree node;\n+  register struct obstack *ambient_obstack = current_obstack;\n+  current_obstack = expression_obstack;\n+  node = tree_cons (purpose, value, chain);\n+  current_obstack = ambient_obstack;\n+  return node;\n+}\n+\n /* Same as `tree_cons' but make a permanent object.  */\n \n tree"}]}