{"sha": "ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5MzVkYjRiNmYxYmY0YzA1NWNjOTk1MjFhNTVlZDFiNGVkNDc2YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-08-01T18:48:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-08-01T18:48:50Z"}, "message": "re PR c++/11697 (Failure to diagnose class template redeclaration via using declaration)\n\n\tPR c++/11697\n\t* decl.c (decls_match): Don't ignore the types of template\n\tclasses.\n\n\tPR c++/11744\n\t* pt.c (tsubst_copy_and_build): Refine Koenig lookup logic.\n\n\tPR c++/11697\n\t* g++.dg/template/using6.C: New test.\n\n\tPR c++/11744\n\t* g++.dg/template/koenig2.C: New test.\n\nFrom-SVN: r70062", "tree": {"sha": "11282088f2347ed5579eceafb21ff924a97c8da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11282088f2347ed5579eceafb21ff924a97c8da1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/comments", "author": null, "committer": null, "parents": [{"sha": "f91f41b2949dac51c1367e1b5e5678cac6f30e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91f41b2949dac51c1367e1b5e5678cac6f30e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91f41b2949dac51c1367e1b5e5678cac6f30e27"}], "stats": {"total": 84, "additions": 77, "deletions": 7}, "files": [{"sha": "9ce5c5e3d698598ad848d61071e33b216b1eb613", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -1,3 +1,12 @@\n+2003-08-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/11697\n+\t* decl.c (decls_match): Don't ignore the types of template\n+\tclasses.\n+\n+\tPR c++/11744\n+\t* pt.c (tsubst_copy_and_build): Refine Koenig lookup logic.\n+\n 2003-08-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/8442, c++/8806"}, {"sha": "593dcede6e6ba4d89cad3444dfd10844d4124bb4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -2758,16 +2758,17 @@ decls_match (tree newdecl, tree olddecl)\n     }\n   else if (TREE_CODE (newdecl) == TEMPLATE_DECL)\n     {\n-      if (!comp_template_parms (DECL_TEMPLATE_PARMS (newdecl),\n-\t\t\t\tDECL_TEMPLATE_PARMS (olddecl)))\n-\treturn 0;\n-\n       if (TREE_CODE (DECL_TEMPLATE_RESULT (newdecl))\n \t  != TREE_CODE (DECL_TEMPLATE_RESULT (olddecl)))\n \treturn 0;\n \n+      if (!comp_template_parms (DECL_TEMPLATE_PARMS (newdecl),\n+\t\t\t\tDECL_TEMPLATE_PARMS (olddecl)))\n+\treturn 0;\n+\n       if (TREE_CODE (DECL_TEMPLATE_RESULT (newdecl)) == TYPE_DECL)\n-\ttypes_match = 1;\n+\ttypes_match = same_type_p (TREE_TYPE (DECL_TEMPLATE_RESULT (olddecl)),\n+\t\t\t\t   TREE_TYPE (DECL_TEMPLATE_RESULT (newdecl)));\n       else\n \ttypes_match = decls_match (DECL_TEMPLATE_RESULT (olddecl),\n \t\t\t\t   DECL_TEMPLATE_RESULT (newdecl));"}, {"sha": "2c9668f94a8f1dc73271b86bdbb849270e90399a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -8116,8 +8116,21 @@ tsubst_copy_and_build (tree t,\n \ttree function;\n \ttree call_args;\n \tbool qualified_p;\n+\tbool koenig_p;\n \n \tfunction = TREE_OPERAND (t, 0);\n+\t/* To determine whether or not we should perform Koenig lookup\n+\t   we must look at the form of the FUNCTION.  */\n+\tkoenig_p = !(/* Koenig lookup does not apply to qualified\n+\t\t\tnames.  */\n+\t\t     TREE_CODE (function) == SCOPE_REF\n+\t\t     /* Or to references to members of classes.  */\n+\t\t     || TREE_CODE (function) == COMPONENT_REF\n+\t\t     /* If it is a FUNCTION_DECL or a baselink, then\n+\t\t\tthe name was already resolved when the\n+\t\t\ttemplate was parsed.  */\n+\t\t     || TREE_CODE (function) == FUNCTION_DECL\n+\t\t     || TREE_CODE (function) == BASELINK);\n \tif (TREE_CODE (function) == SCOPE_REF)\n \t  {\n \t    qualified_p = true;\n@@ -8140,7 +8153,7 @@ tsubst_copy_and_build (tree t,\n \tif (BASELINK_P (function))\n \t  qualified_p = 1;\n \n-\tif (!qualified_p\n+\tif (koenig_p\n \t    && TREE_CODE (function) != TEMPLATE_ID_EXPR\n \t    && (is_overloaded_fn (function)\n \t\t|| DECL_P (function)"}, {"sha": "a5130a5bfbeee0e1f63228dc58d29590a4b241dc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -2354,7 +2354,7 @@ finish_id_expression (tree id_expression,\n      required.  If the template-id was for a template-class, we\n      will sometimes have a TYPE_DECL at this point.  */\n   else if (TREE_CODE (decl) == TEMPLATE_ID_EXPR\n-      || TREE_CODE (decl) == TYPE_DECL)\n+\t   || TREE_CODE (decl) == TYPE_DECL)\n     ;\n   /* Look up the name.  */\n   else "}, {"sha": "fef0f33d22163182317580656840fe0b9a217690", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -1,3 +1,11 @@\n+2003-08-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/11697\n+\t* g++.dg/template/using6.C: New test.\n+\n+\tPR c++/11744\n+\t* g++.dg/template/koenig2.C: New test.\n+\n 2003-08-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/7983"}, {"sha": "be072a4a0ec6c0d9fe245028befb4a61f2ba9697", "filename": "gcc/testsuite/g++.dg/template/koenig2.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig2.C?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -0,0 +1,25 @@\n+namespace nsp_foo {\n+\n+  struct A {};\n+\n+  struct foo {};\n+\n+}\n+\n+namespace nsp_bar {\n+\n+  void foo(nsp_foo::A) {}\n+\n+  template <class T>\n+  void bar(T t)\n+  {\n+    nsp_bar::foo(t); // line 16\n+  }\n+\n+}\n+\n+int main()\n+{\n+  nsp_bar::bar(nsp_foo::A());\n+}\n+"}, {"sha": "ee8d5be96ec3bfa60fe42c45ae32b29b5c5322fd", "filename": "gcc/testsuite/g++.dg/template/using6.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing6.C?ref=ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "patch": "@@ -0,0 +1,14 @@\n+namespace foo {\n+  template<typename T>\n+  struct A {};\n+}\n+\n+namespace bar {\n+  template<typename T>\n+  struct A {};\n+}\n+\n+namespace foo {\n+  using bar::A; // { dg-error \"\" }\n+}\n+"}]}