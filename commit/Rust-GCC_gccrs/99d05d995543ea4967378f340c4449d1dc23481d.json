{"sha": "99d05d995543ea4967378f340c4449d1dc23481d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkMDVkOTk1NTQzZWE0OTY3Mzc4ZjM0MGM0NDQ5ZDFkYzIzNDgxZA==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-14T21:20:33Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-14T21:20:33Z"}, "message": "Add several tests and use the ``c_fix = format'' fixer more\n\nFrom-SVN: r33895", "tree": {"sha": "f989a20da7abc98f06d27b600e09c61b8ba8c619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f989a20da7abc98f06d27b600e09c61b8ba8c619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d05d995543ea4967378f340c4449d1dc23481d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d05d995543ea4967378f340c4449d1dc23481d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d05d995543ea4967378f340c4449d1dc23481d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d05d995543ea4967378f340c4449d1dc23481d/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ba02ca6478e2a90d3b314642be17e0d27d84898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba02ca6478e2a90d3b314642be17e0d27d84898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba02ca6478e2a90d3b314642be17e0d27d84898"}], "stats": {"total": 366, "additions": 240, "deletions": 126}, "files": [{"sha": "ddab6f2b8e6ea8ec3b4bd876331678c586383816", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99d05d995543ea4967378f340c4449d1dc23481d", "patch": "@@ -14,8 +14,11 @@\n \t* fixinc/fixlib.h(must_malloc): + reformatting\n \t* fixinc/inclhack.def: replace the \"1i\" and \"$a\" sed commands\n \twith usages of ``c_fix = wrap;''\n+\tAdd several tests and use the ``c_fix = format'' fixer more.\n \t* fixinc/fixincl.x: regen\n \t* fixinc/check.diff: regen\n+\t* fixinc/check.tpl: emit the associated header with the missing\n+\ttest message\n \n Sun May 14 17:58:59 2000  Hans-Peter Nilsson  <hp@axis.com>\n "}, {"sha": "eed8523f65dfb61dfbf658e6ce8545d9b468626e", "filename": "gcc/fixinc/check.diff", "status": "modified", "additions": 79, "deletions": 3, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Fcheck.diff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Fcheck.diff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.diff?ref=99d05d995543ea4967378f340c4449d1dc23481d", "patch": "@@ -444,14 +444,90 @@\n *** inc/sys/wait.h\n --- res/sys/wait.h\n ***************\n-*** 2,6 ****\n---- 2,7 ----\n+*** 2,7 ****\n+--- 2,8 ----\n   \n   #ifndef AIX_SYSWAIT_CHECK\n   /* bos325, */\n + struct rusage;\n   extern pid_t wait3();\n+  /* pid_t wait3(int *, int, struct rusage *); */\n   #endif  /* AIX_SYSWAIT_CHECK */\n+*** inc/testing.h\n+--- res/testing.h\n+***************\n+*** 1,33 ****\n+  \n+  \n+  #ifndef IO_QUOTES_DEF_CHECK\n+! #define BSD43__IOWR(n, x) (('n'<<8)+x)\n+  #endif  /* IO_QUOTES_DEF_CHECK */\n+  \n+  \n+  #ifndef IO_QUOTES_USE_CHECK\n+! #define TIOCFOO BSD43__IOWR(T, 1)\n+  #endif  /* IO_QUOTES_USE_CHECK */\n+  \n+  \n+  #ifndef CTRL_QUOTES_DEF_CHECK\n+! #define BSD43_CTRL(n, x) (('n'<<8)+x)\n+  #endif  /* CTRL_QUOTES_DEF_CHECK */\n+  \n+  \n+  #ifndef CTRL_QUOTES_USE_CHECK\n+! #define TIOCFOO BSD43_CTRL(T, 1)\n+  #endif  /* CTRL_QUOTES_USE_CHECK */\n+  \n+  \n+  #ifndef MACHINE_NAME_CHECK\n+! #ifdef i386 /* no uniform machine_name test, so\n+                 this only works on i?86 machines */\n+  #endif  /* MACHINE_NAME_CHECK */\n+  \n+  \n+  #ifndef UNDEFINE_NULL_CHECK\n+  #define NULL 0UL\r\n+  #define NULL\t((void*)0)\n+  \n+  #endif  /* UNDEFINE_NULL_CHECK */\n+--- 1,37 ----\n+  \n+  \n+  #ifndef IO_QUOTES_DEF_CHECK\n+! #define BSD43__IOWR(n, x) ((n<<8)+x)\n+  #endif  /* IO_QUOTES_DEF_CHECK */\n+  \n+  \n+  #ifndef IO_QUOTES_USE_CHECK\n+! #define TIOCFOO BSD43__IOWR('T', 1)\n+  #endif  /* IO_QUOTES_USE_CHECK */\n+  \n+  \n+  #ifndef CTRL_QUOTES_DEF_CHECK\n+! #define BSD43_CTRL(n, x) ((n<<8)+x)\n+  #endif  /* CTRL_QUOTES_DEF_CHECK */\n+  \n+  \n+  #ifndef CTRL_QUOTES_USE_CHECK\n+! #define TIOCFOO BSD43_CTRL('T', 1)\n+  #endif  /* CTRL_QUOTES_USE_CHECK */\n+  \n+  \n+  #ifndef MACHINE_NAME_CHECK\n+! #ifdef __i386__ /* no uniform machine_name test, so\n+                 this only works on i?86 machines */\n+  #endif  /* MACHINE_NAME_CHECK */\n+  \n+  \n+  #ifndef UNDEFINE_NULL_CHECK\n++ #ifndef NULL\r\n+  #define NULL 0UL\r\n++ #endif\r\n++ #ifndef NULL\n+  #define NULL\t((void*)0)\n++ #endif\n+  \n+  #endif  /* UNDEFINE_NULL_CHECK */\n *** inc/time.h\n --- res/time.h\n ***************\n@@ -480,5 +556,5 @@\n   \n   \n   #ifndef ALPHA_SBRK_CHECK\n-! extern void* sbrk(ptrdiff_t increment);\n+! extern void *sbrk(ptrdiff_t increment);\n   #endif  /* ALPHA_SBRK_CHECK */"}, {"sha": "d7f7c5ac89c3b531428459a8af34d30f53589422", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=99d05d995543ea4967378f340c4449d1dc23481d", "patch": "@@ -29,7 +29,11 @@ _FOR fix =][=\n \n   _IF test_text _exist ! =][=\n     _IF replace _exist ! =]\n-echo No test for [=hackname=][=\n+echo No test for [=hackname=] in inc/[=\n+      _IF files _exist =][=\n+        files[0] =][=\n+      _ELSE =]testing.h[=\n+      _ENDIF =][=\n     _ENDIF =][=\n   _ELSE =]\n cat >> inc/[="}, {"sha": "a090d7851e4494c1f9db9d5f9a99a12daffa4fe0", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 86, "deletions": 78, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=99d05d995543ea4967378f340c4449d1dc23481d", "patch": "@@ -803,8 +803,9 @@ tTestDesc aAix_VolatileTests[] = {\n /*\n  *  Fix Command Arguments for Aix_Volatile\n  */\n-const char* apzAix_VolatilePatch[] = { \"sed\",\n-    \"-e\", \"s/typedef volatile int sig_atomic_t/typedef int sig_atomic_t/\",\n+const char* apzAix_VolatilePatch[] = {\n+    \"format\",\n+    \"typedef int sig_atomic_t\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -838,8 +839,9 @@ tTestDesc aAlpha_GetoptTests[] = {\n /*\n  *  Fix Command Arguments for Alpha_Getopt\n  */\n-const char* apzAlpha_GetoptPatch[] = { \"sed\",\n-    \"-e\", \"s/getopt(int, char \\\\*\\\\[\\\\],[ ]*char \\\\*)/getopt(int, char *const[], const char *)/\",\n+const char* apzAlpha_GetoptPatch[] = {\n+    \"format\",\n+    \"getopt(int, char *const[], const char *)\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -873,8 +875,9 @@ tTestDesc aAlpha_ParensTests[] = {\n /*\n  *  Fix Command Arguments for Alpha_Parens\n  */\n-const char* apzAlpha_ParensPatch[] = { \"sed\",\n-    \"-e\", \"s/#ifndef(__mips64)/#ifndef __mips64/\",\n+const char* apzAlpha_ParensPatch[] = {\n+    \"format\",\n+    \"#ifndef __mips64\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -908,8 +911,9 @@ tTestDesc aAlpha_SbrkTests[] = {\n /*\n  *  Fix Command Arguments for Alpha_Sbrk\n  */\n-const char* apzAlpha_SbrkPatch[] = { \"sed\",\n-    \"-e\", \"s/char\\\\([ \\t]*\\\\*[\\t ]*sbrk[ \\t]*(\\\\)/void\\\\1/\",\n+const char* apzAlpha_SbrkPatch[] = {\n+    \"format\",\n+    \"void *sbrk(\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1657,46 +1661,11 @@ const char* apzIsc_Omits_With_StdcPatch[] = { \"sed\",\n     \"-e\", \"s/!defined(__STDC__) && !defined(_POSIX_SOURCE)/!defined(_POSIX_SOURCE)/\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Io_Quotes_Use fix\n- */\n-#define IO_QUOTES_USE_FIXIDX             38\n-tSCC zIo_Quotes_UseName[] =\n-     \"io_quotes_use\";\n-\n-/*\n- *  File name selection pattern\n- */\n-#define zIo_Quotes_UseList (char*)NULL\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzIo_Quotes_UseMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zIo_Quotes_UseSelect0[] =\n-       \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n-\n-#define    IO_QUOTES_USE_TEST_CT  1\n-tTestDesc aIo_Quotes_UseTests[] = {\n-  { TT_EGREP,    zIo_Quotes_UseSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Io_Quotes_Use\n- */\n-const char* apzIo_Quotes_UsePatch[] = {\n-    \"char_macro_use\",\n-    \"IO\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Io_Quotes_Def fix\n  */\n-#define IO_QUOTES_DEF_FIXIDX             39\n+#define IO_QUOTES_DEF_FIXIDX             38\n tSCC zIo_Quotes_DefName[] =\n      \"io_quotes_def\";\n \n@@ -1729,44 +1698,44 @@ const char* apzIo_Quotes_DefPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Ctrl_Quotes_Use fix\n+ *  Description of Io_Quotes_Use fix\n  */\n-#define CTRL_QUOTES_USE_FIXIDX           40\n-tSCC zCtrl_Quotes_UseName[] =\n-     \"ctrl_quotes_use\";\n+#define IO_QUOTES_USE_FIXIDX             39\n+tSCC zIo_Quotes_UseName[] =\n+     \"io_quotes_use\";\n \n /*\n  *  File name selection pattern\n  */\n-#define zCtrl_Quotes_UseList (char*)NULL\n+#define zIo_Quotes_UseList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzCtrl_Quotes_UseMachs (const char**)NULL\n+#define apzIo_Quotes_UseMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zCtrl_Quotes_UseSelect0[] =\n-       \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n+tSCC zIo_Quotes_UseSelect0[] =\n+       \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n \n-#define    CTRL_QUOTES_USE_TEST_CT  1\n-tTestDesc aCtrl_Quotes_UseTests[] = {\n-  { TT_EGREP,    zCtrl_Quotes_UseSelect0, (regex_t*)NULL }, };\n+#define    IO_QUOTES_USE_TEST_CT  1\n+tTestDesc aIo_Quotes_UseTests[] = {\n+  { TT_EGREP,    zIo_Quotes_UseSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Ctrl_Quotes_Use\n+ *  Fix Command Arguments for Io_Quotes_Use\n  */\n-const char* apzCtrl_Quotes_UsePatch[] = {\n+const char* apzIo_Quotes_UsePatch[] = {\n     \"char_macro_use\",\n-    \"CTRL\",\n+    \"IO\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ctrl_Quotes_Def fix\n  */\n-#define CTRL_QUOTES_DEF_FIXIDX           41\n+#define CTRL_QUOTES_DEF_FIXIDX           40\n tSCC zCtrl_Quotes_DefName[] =\n      \"ctrl_quotes_def\";\n \n@@ -1797,6 +1766,41 @@ const char* apzCtrl_Quotes_DefPatch[] = {\n     \"CTRL\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ctrl_Quotes_Use fix\n+ */\n+#define CTRL_QUOTES_USE_FIXIDX           41\n+tSCC zCtrl_Quotes_UseName[] =\n+     \"ctrl_quotes_use\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+#define zCtrl_Quotes_UseList (char*)NULL\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzCtrl_Quotes_UseMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zCtrl_Quotes_UseSelect0[] =\n+       \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n+\n+#define    CTRL_QUOTES_USE_TEST_CT  1\n+tTestDesc aCtrl_Quotes_UseTests[] = {\n+  { TT_EGREP,    zCtrl_Quotes_UseSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ctrl_Quotes_Use\n+ */\n+const char* apzCtrl_Quotes_UsePatch[] = {\n+    \"char_macro_use\",\n+    \"CTRL\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ip_Missing_Semi fix\n@@ -4206,13 +4210,13 @@ tSCC zUndefine_NullName[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zUndefine_NullSelect0[] =\n-       \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t\\r]\";\n+       \"^#[ \\t]*define[ \\t]+NULL[ \\t]\";\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zUndefine_NullBypass0[] =\n-       \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t\\r])\";\n+       \"#[ \\t]*(ifn|un)def[ \\t]+NULL($|[ \\t\\r])\";\n \n #define    UNDEFINE_NULL_TEST_CT  2\n tTestDesc aUndefine_NullTests[] = {\n@@ -4222,9 +4226,13 @@ tTestDesc aUndefine_NullTests[] = {\n /*\n  *  Fix Command Arguments for Undefine_Null\n  */\n-const char* apzUndefine_NullPatch[] = { \"sed\",\n-    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t\\r]/i\\\\\\n\\\n-#undef NULL\\n\",\n+const char* apzUndefine_NullPatch[] = {\n+    \"format\",\n+    \"#ifndef NULL%2\\n\\\n+#define NULL%1%2\\n\\\n+#endif%2\\n\",\n+    \"^#[ \\t]*define[ \\t]*[ \\t]NULL([^\\r\\n\\\n+]+)([\\r]*)\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -4763,22 +4771,22 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zAix_VolatileName,    zAix_VolatileList,\n      apzAix_VolatileMachs,\n-     AIX_VOLATILE_TEST_CT, FD_MACH_ONLY,\n+     AIX_VOLATILE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_VolatileTests,   apzAix_VolatilePatch },\n \n   {  zAlpha_GetoptName,    zAlpha_GetoptList,\n      apzAlpha_GetoptMachs,\n-     ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY,\n+     ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_GetoptTests,   apzAlpha_GetoptPatch },\n \n   {  zAlpha_ParensName,    zAlpha_ParensList,\n      apzAlpha_ParensMachs,\n-     ALPHA_PARENS_TEST_CT, FD_MACH_ONLY,\n+     ALPHA_PARENS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_ParensTests,   apzAlpha_ParensPatch },\n \n   {  zAlpha_SbrkName,    zAlpha_SbrkList,\n      apzAlpha_SbrkMachs,\n-     ALPHA_SBRK_TEST_CT, FD_MACH_ONLY,\n+     ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_SbrkTests,   apzAlpha_SbrkPatch },\n \n   {  zArm_Norcroft_HintName,    zArm_Norcroft_HintList,\n@@ -4881,26 +4889,26 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ISC_OMITS_WITH_STDC_TEST_CT, FD_MACH_ONLY,\n      aIsc_Omits_With_StdcTests,   apzIsc_Omits_With_StdcPatch },\n \n-  {  zIo_Quotes_UseName,    zIo_Quotes_UseList,\n-     apzIo_Quotes_UseMachs,\n-     IO_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aIo_Quotes_UseTests,   apzIo_Quotes_UsePatch },\n-\n   {  zIo_Quotes_DefName,    zIo_Quotes_DefList,\n      apzIo_Quotes_DefMachs,\n      IO_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aIo_Quotes_DefTests,   apzIo_Quotes_DefPatch },\n \n-  {  zCtrl_Quotes_UseName,    zCtrl_Quotes_UseList,\n-     apzCtrl_Quotes_UseMachs,\n-     CTRL_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aCtrl_Quotes_UseTests,   apzCtrl_Quotes_UsePatch },\n+  {  zIo_Quotes_UseName,    zIo_Quotes_UseList,\n+     apzIo_Quotes_UseMachs,\n+     IO_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIo_Quotes_UseTests,   apzIo_Quotes_UsePatch },\n \n   {  zCtrl_Quotes_DefName,    zCtrl_Quotes_DefList,\n      apzCtrl_Quotes_DefMachs,\n      CTRL_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aCtrl_Quotes_DefTests,   apzCtrl_Quotes_DefPatch },\n \n+  {  zCtrl_Quotes_UseName,    zCtrl_Quotes_UseList,\n+     apzCtrl_Quotes_UseMachs,\n+     CTRL_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aCtrl_Quotes_UseTests,   apzCtrl_Quotes_UsePatch },\n+\n   {  zIp_Missing_SemiName,    zIp_Missing_SemiList,\n      apzIp_Missing_SemiMachs,\n      IP_MISSING_SEMI_TEST_CT, FD_MACH_ONLY,\n@@ -5223,7 +5231,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zUndefine_NullName,    zUndefine_NullList,\n      apzUndefine_NullMachs,\n-     UNDEFINE_NULL_TEST_CT, FD_MACH_ONLY,\n+     UNDEFINE_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUndefine_NullTests,   apzUndefine_NullPatch },\n \n   {  zUnixware7_Byteorder_FixName,    zUnixware7_Byteorder_FixList,"}, {"sha": "3cf595a7865275f18d7710eb4fe8c17ee503d009", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 67, "deletions": 44, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d05d995543ea4967378f340c4449d1dc23481d/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=99d05d995543ea4967378f340c4449d1dc23481d", "patch": "@@ -517,8 +517,8 @@ fix = {\n \n \n /*\n- *  sys/wait.h on AIX 3.2.5 puts the declaration of wait3 before the definition\n- *  of struct rusage, so the prototype (added by fixproto) causes havoc.\n+ *  sys/wait.h on AIX 3.2.5 puts the declaration of wait3 before the\n+ *  definition of struct rusage, so the prototype added by fixproto fails.\n  */\n fix = {\n     hackname  = aix_syswait;\n@@ -527,7 +527,9 @@ fix = {\n     select    = \"bos325,\";\n     c_fix     = format;\n     c_fix_arg = \"struct rusage;\\n%0\";\n-    test_text = \"/* bos325, */\\nextern pid_t wait3();\";\n+    test_text = \"/* bos325, */\\n\"\n+    \"extern pid_t wait3();\\n\"\n+    \"\\t/* pid_t wait3(int *, int, struct rusage *); */\";\n };\n \n \n@@ -541,8 +543,8 @@ fix = {\n     hackname  = aix_volatile;\n     files     = sys/signal.h;\n     select    = \"typedef volatile int sig_atomic_t\";\n-    sed      = \"s/typedef volatile int sig_atomic_t\"\n-                \"/typedef int sig_atomic_t/\";\n+    c_fix     = format;\n+    c_fix_arg = \"typedef int sig_atomic_t\";\n     test_text = \"typedef volatile int sig_atomic_t;\";\n };\n \n@@ -555,8 +557,8 @@ fix = {\n     files     = \"stdio.h\";\n     files     = \"stdlib.h\";\n     select    = 'getopt\\(int, char \\*\\[\\], *char \\*\\)';\n-    sed    = 's/getopt(int, char \\*\\[\\],[ ]*char \\*)/'\n-               'getopt(int, char *const[], const char *)/';\n+    c_fix     = format;\n+    c_fix_arg = \"getopt(int, char *const[], const char *)\";\n     test_text = 'extern int getopt(int, char *[], char *);';\n };\n \n@@ -568,7 +570,8 @@ fix = {\n     hackname  = alpha_parens;\n     files     = sym.h;\n     select    = '#ifndef\\(__mips64\\)';\n-    sed      = \"s/#ifndef(__mips64)/#ifndef __mips64/\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef __mips64\";\n     test_text = \"#ifndef(__mips64) /* bogus */\\nextern int foo;\\n#endif\";\n };\n \n@@ -580,7 +583,8 @@ fix = {\n     hackname = alpha_sbrk;\n     files    = unistd.h;\n     select   = \"char[ \\t]*\\\\*[\\t ]*sbrk[ \\t]*\\\\(\";\n-    sed  = \"s/char\\\\([ \\t]*\\\\*[\\t ]*sbrk[ \\t]*(\\\\)/void\\\\1/\";\n+    c_fix     = format;\n+    c_fix_arg = \"void *sbrk(\";\n     test_text = \"extern char* sbrk(ptrdiff_t increment);\";\n };\n \n@@ -968,59 +972,71 @@ fix = {\n };\n \n /*\n- *  Fix various macros used to define ioctl numbers.  The traditional\n- *  syntax was\n- *  #define _IO(n, x) (('n'<<8)+x)\n- *  #define TIOCFOO _IO(T, 1)\n+ *  Fix various macros used to define ioctl numbers.\n+ *  The traditional syntax was:\n+ *\n+ *    #define _IO(n, x) (('n'<<8)+x)\n+ *    #define TIOCFOO _IO(T, 1)\n+ *\n  *  but this does not work with the C standard, which disallows macro\n  *  expansion inside strings.  We have to rewrite it thus:\n- *  #define _IO(n, x) ((n<<8)+x)\n- *  #define TIOCFOO  _IO('T', 1)\n+ *\n+ *    #define _IO(n, x) ((n<<8)+x)\n+ *    #define TIOCFOO  _IO('T', 1)\n+ *\n  *  The select expressions match too much, but the c_fix code is cautious.\n  *\n  *  _IO might be: _IO DESIO BSD43__IO with W, R, WR, C, ... suffixes.\n  */\n fix = {\n-    hackname  = io_quotes_use;\n-    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\"\n-                \"\\\\( *[^,']\";\n-    c_fix     = char_macro_use;\n+    hackname  = io_quotes_def;\n+    select    = \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n+    c_fix     = char_macro_def;\n     c_fix_arg = \"IO\";\n+    test_text = \"#define BSD43__IOWR(n, x) (('n'<<8)+x)\";\n };\n \n fix = {\n-    hackname  = io_quotes_def;\n-    select    = \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n-    c_fix     = char_macro_def;\n+    hackname  = io_quotes_use;\n+    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\"\n+                \"\\\\( *[^,']\";\n+    c_fix     = char_macro_use;\n     c_fix_arg = \"IO\";\n+    test_text = \"#define TIOCFOO BSD43__IOWR(T, 1)\";\n };\n  \n  \n /*\n- *  Fix various macros used to define ioctl numbers.  The traditional\n- *  syntax was\n- *  #define _CTRL(n, x) (('n'<<8)+x)\n- *  #define TIOCFOO _CTRL(T, 1)\n+ *  Fix various macros used to define ioctl numbers.\n+ *  The traditional syntax was:\n+ *\n+ *    #define _CTRL(n, x) (('n'<<8)+x)\n+ *    #define TCTRLCFOO _CTRL(T, 1)\n+ *\n  *  but this does not work with the C standard, which disallows macro\n  *  expansion inside strings.  We have to rewrite it thus:\n- *  #define _CTRL(n, x) ((n<<8)+x)\n- *  #define TIOCFOO  _CTRL('T', 1)\n+ *\n+ *    #define _CTRL(n, x) ((n<<8)+x)\n+ *    #define TCTRLCFOO  _CTRL('T', 1)\n+ *\n  *  The select expressions match too much, but the c_fix code is cautious.\n  *\n  *  CTRL might be: CTRL _CTRL ISCTRL BSD43_CTRL ...\n  */\n-fix = {\n-    hackname  = ctrl_quotes_use;\n-    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n-    c_fix     = char_macro_use;\n-    c_fix_arg = \"CTRL\";\n-};\n-  \n fix = {\n     hackname  = ctrl_quotes_def;\n     select    = \"define[ \\t]+[A-Z0-9_]+CTRL\\\\(([a-zA-Z]).*'\\\\1'\";\n     c_fix     = char_macro_def;\n     c_fix_arg = \"CTRL\";\n+    test_text = \"#define BSD43_CTRL(n, x) (('n'<<8)+x)\";\n+};\n+\n+fix = {\n+    hackname  = ctrl_quotes_use;\n+    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n+    c_fix     = char_macro_use;\n+    c_fix_arg = \"CTRL\";\n+    test_text = \"#define TIOCFOO BSD43_CTRL(T, 1)\";\n };\n \n \n@@ -1293,9 +1309,11 @@ fix = {\n  *  Fix non-ansi machine name defines\n  */\n fix = {\n-    hackname = machine_name;\n-    c_test   = machine_name;\n-    c_fix    = machine_name;\n+    hackname  = machine_name;\n+    c_test    = machine_name;\n+    c_fix     = machine_name;\n+    test_text = \"#ifdef i386 /* no uniform machine_name test, so\\n\"\n+                \"               this only works on i?86 machines */\";\n };\n \n \n@@ -2459,14 +2477,19 @@ fix = {\n \n \n /*\n- *  Fix multiple defines for NULL\n+ *  Fix multiple defines for NULL.  Sometimes, we stumble into \\r\\n\n+ *  terminated lines, so accommodate these.  Test both ways.\n  */\n fix = {\n-    hackname = undefine_null;\n-    select = \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t\\r]\";\n-    bypass = \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t\\r])\";\n-    sed    = \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t\\r]/i\\\\\\n\"\n-                \"#undef NULL\\n\";\n+    hackname  = undefine_null;\n+    select    = \"^#[ \\t]*define[ \\t]+NULL[ \\t]\";\n+    bypass    = \"#[ \\t]*(ifn|un)def[ \\t]+NULL($|[ \\t\\r])\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef NULL%2\\n#define NULL%1%2\\n#endif%2\\n\";\n+    c_fix_arg = \"^#[ \\t]*define[ \\t]*[ \\t]NULL([^\\r\\n]+)([\\r]*)\\n\";\n+\n+    test_text = \"#define NULL 0UL\\r\\n#define NULL\\t((void*)0)\\n\";\n };\n \n "}]}