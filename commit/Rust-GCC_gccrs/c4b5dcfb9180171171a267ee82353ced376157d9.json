{"sha": "c4b5dcfb9180171171a267ee82353ced376157d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiNWRjZmI5MTgwMTcxMTcxYTI2N2VlODIzNTNjZWQzNzYxNTdkOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-19T21:46:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-19T21:46:22Z"}, "message": "(strstr): Define ifndef POSIX.\n\nFrom-SVN: r9747", "tree": {"sha": "b207107a5a3e33c6309fda0db299f715409c27e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b207107a5a3e33c6309fda0db299f715409c27e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4b5dcfb9180171171a267ee82353ced376157d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b5dcfb9180171171a267ee82353ced376157d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4b5dcfb9180171171a267ee82353ced376157d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b5dcfb9180171171a267ee82353ced376157d9/comments", "author": null, "committer": null, "parents": [{"sha": "dca0093028438de3c689757b755f64889eba9c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca0093028438de3c689757b755f64889eba9c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca0093028438de3c689757b755f64889eba9c32"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "932b6fdce9880c0f0e04d9c61e45b884ce05125e", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b5dcfb9180171171a267ee82353ced376157d9/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b5dcfb9180171171a267ee82353ced376157d9/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=c4b5dcfb9180171171a267ee82353ced376157d9", "patch": "@@ -37,6 +37,30 @@ extern char *xmalloc PARAMS((unsigned));\n extern char *xrealloc PARAMS((char *, unsigned));\n extern char *strstr ();\n \n+#ifndef POSIX\n+char *\n+strstr (s1, s2)\n+  char *s1, *s2;\n+{\n+  register char *p = s1;\n+  extern char *strchr ();\n+  extern int strncmp ();\n+#if __GNUC__==2\n+  extern __SIZE_TYPE__ strlen ();\n+#endif\n+  register int len = strlen (s2);\n+\n+  for (; (p = strchr (p, *s2)) != 0; p++)\n+    {\n+      if (strncmp (p, s2, len) == 0)\n+\t{\n+\t  return (p);\n+\t}\n+    }\n+  return (0);\n+}\n+#endif\n+\n /* In order to allow a single demangler executable to demangle strings\n    using various common values of CPLUS_MARKER, as well as any specific\n    one set at compile time, we maintain a string containing all the"}]}