{"sha": "52da40ffe2aaf086f622e513cc99a64bc7573a67", "node_id": "C_kwDOANBUbNoAKDUyZGE0MGZmZTJhYWYwODZmNjIyZTUxM2NjOTlhNjRiYzc1NzNhNjc", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:10:25Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:10:25Z"}, "message": "AArch64: Add pattern xtn+xtn2 to uzp1\n\nThis turns truncate operations with a hi/lo pair into a single permute of half\nthe bit size of the input and just ignoring the top bits (which are truncated\nout).\n\ni.e.\n\nvoid d2 (short * restrict a, int *b, int n)\n{\n    for (int i = 0; i < n; i++)\n      a[i] = b[i];\n}\n\nnow generates:\n\n.L4:\n        ldp     q0, q1, [x3]\n        add     x3, x3, 32\n        uzp1    v0.8h, v0.8h, v1.8h\n        str     q0, [x5], 16\n        cmp     x4, x3\n        bne     .L4\n\ninstead of\n\n.L4:\n        ldp     q0, q1, [x3]\n        add     x3, x3, 32\n        xtn     v0.4h, v0.4s\n        xtn2    v0.8h, v1.4s\n        str     q0, [x5], 16\n        cmp     x4, x3\n        bne     .L4\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (*aarch64_narrow_trunc<mode>): New.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/narrow_high_combine.c: Update case.\n\t* gcc.target/aarch64/xtn-combine-1.c: New test.\n\t* gcc.target/aarch64/xtn-combine-2.c: New test.\n\t* gcc.target/aarch64/xtn-combine-3.c: New test.\n\t* gcc.target/aarch64/xtn-combine-4.c: New test.\n\t* gcc.target/aarch64/xtn-combine-5.c: New test.\n\t* gcc.target/aarch64/xtn-combine-6.c: New test.", "tree": {"sha": "5b06f74408ad49af29b724ccb4df9566ff682b91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b06f74408ad49af29b724ccb4df9566ff682b91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52da40ffe2aaf086f622e513cc99a64bc7573a67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52da40ffe2aaf086f622e513cc99a64bc7573a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52da40ffe2aaf086f622e513cc99a64bc7573a67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52da40ffe2aaf086f622e513cc99a64bc7573a67/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea464fd2d4fc093fe723466e3d14524a967cefdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea464fd2d4fc093fe723466e3d14524a967cefdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea464fd2d4fc093fe723466e3d14524a967cefdc"}], "stats": {"total": 116, "additions": 115, "deletions": 1}, "files": [{"sha": "b0dda554466149817a7828dbf4e0ed372a91872b", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -1753,6 +1753,23 @@\n   }\n )\n \n+(define_insn \"*aarch64_narrow_trunc<mode>\"\n+  [(set (match_operand:<VNARROWQ2> 0 \"register_operand\" \"=w\")\n+\t(vec_concat:<VNARROWQ2>\n+          (truncate:<VNARROWQ>\n+            (match_operand:VQN 1 \"register_operand\" \"w\"))\n+\t  (truncate:<VNARROWQ>\n+\t    (match_operand:VQN 2 \"register_operand\" \"w\"))))]\n+  \"TARGET_SIMD\"\n+{\n+  if (!BYTES_BIG_ENDIAN)\n+    return \"uzp1\\\\t%0.<V2ntype>, %1.<V2ntype>, %2.<V2ntype>\";\n+  else\n+    return \"uzp1\\\\t%0.<V2ntype>, %2.<V2ntype>, %1.<V2ntype>\";\n+}\n+  [(set_attr \"type\" \"neon_permute<q>\")]\n+)\n+\n ;; Packing doubles.\n \n (define_expand \"vec_pack_trunc_<mode>\""}, {"sha": "fa61196d3644caa48b12151e12b15dfeab8c7e71", "filename": "gcc/testsuite/gcc.target/aarch64/narrow_high_combine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnarrow_high_combine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnarrow_high_combine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnarrow_high_combine.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -225,7 +225,8 @@ TEST_2_UNARY (vqmovun, uint32x4_t, int64x2_t, s64, u32)\n /* { dg-final { scan-assembler-times \"\\\\tuqshrn2\\\\tv\" 6} }  */\n /* { dg-final { scan-assembler-times \"\\\\tsqrshrn2\\\\tv\" 6} }  */\n /* { dg-final { scan-assembler-times \"\\\\tuqrshrn2\\\\tv\" 6} }  */\n-/* { dg-final { scan-assembler-times \"\\\\txtn2\\\\tv\" 12} }  */\n+/* { dg-final { scan-assembler-times \"\\\\txtn2\\\\tv\" 6} }  */\n+/* { dg-final { scan-assembler-times \"\\\\tuzp1\\\\tv\" 6} }  */\n /* { dg-final { scan-assembler-times \"\\\\tuqxtn2\\\\tv\" 6} }  */\n /* { dg-final { scan-assembler-times \"\\\\tsqxtn2\\\\tv\" 6} }  */\n /* { dg-final { scan-assembler-times \"\\\\tsqxtun2\\\\tv\" 6} }  */"}, {"sha": "14e0414cd1478f1cb7b17766aa8d4451c5659977", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-1.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN signed\n+#define TYPE1 char\n+#define TYPE2 short\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}, {"sha": "c259010442bca4ba008706e47b3ffcc50a910b52", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-2.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN signed\n+#define TYPE1 short\n+#define TYPE2 int\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}, {"sha": "9a2065f65101f82ebe33519840919f9606192c43", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-3.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN signed\n+#define TYPE1 int\n+#define TYPE2 long long\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}, {"sha": "77c3dce12049989d344e4652bd593de2e846ae25", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-4.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN unsigned\n+#define TYPE1 char\n+#define TYPE2 short\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}, {"sha": "ae30e864ed7a239c40522423d7493ddd33830cc8", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-5.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN unsigned\n+#define TYPE1 short\n+#define TYPE2 int\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}, {"sha": "882f3d333e2cc42e964d880de5b58c505ec8b122", "filename": "gcc/testsuite/gcc.target/aarch64/xtn-combine-6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52da40ffe2aaf086f622e513cc99a64bc7573a67/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fxtn-combine-6.c?ref=52da40ffe2aaf086f622e513cc99a64bc7573a67", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define SIGN unsigned\n+#define TYPE1 int\n+#define TYPE2 long long\n+\n+void d2 (SIGN TYPE1 * restrict a, SIGN TYPE2 *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tuzp1\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\txtn\\t} } } */\n+/* { dg-final { scan-assembler-not {\\txtn2\\t} } } */"}]}