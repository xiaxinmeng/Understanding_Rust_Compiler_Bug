{"sha": "cd95a0d559e691d3767b238f1a584d006dcbb53e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5NWEwZDU1OWU2OTFkMzc2N2IyMzhmMWE1ODRkMDA2ZGNiYjUzZQ==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2015-06-20T00:10:00Z"}, "committer": {"name": "Mikhail Maltsev", "email": "miyuki@gcc.gnu.org", "date": "2015-06-20T00:10:00Z"}, "message": "re PR c++/65882 (Internal compiler error: Error reporting routines re-entered)\n\nPR c++/65882\n\ngcc/cp/\n\t* call.c (build_new_op_1): Check tf_warning flag in all cases.\n\ngcc/testsuite/\n\t* g++.dg/diagnostic/inhibit-warn-1.C: New test.\n\t* g++.dg/diagnostic/inhibit-warn-2.C: New test.\n\nFrom-SVN: r224702", "tree": {"sha": "75f21c3e10ed2e8aeffd8082e824e1d3105da9e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75f21c3e10ed2e8aeffd8082e824e1d3105da9e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd95a0d559e691d3767b238f1a584d006dcbb53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd95a0d559e691d3767b238f1a584d006dcbb53e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd95a0d559e691d3767b238f1a584d006dcbb53e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd95a0d559e691d3767b238f1a584d006dcbb53e/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3cad5f64a81355feef936483251875ab9a7900a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cad5f64a81355feef936483251875ab9a7900a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cad5f64a81355feef936483251875ab9a7900a6"}], "stats": {"total": 89, "additions": 85, "deletions": 4}, "files": [{"sha": "66564419fc0b9eb49000e1399faab7a47651e5c1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd95a0d559e691d3767b238f1a584d006dcbb53e", "patch": "@@ -1,3 +1,8 @@\n+2015-06-20  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\tPR c++/65882\n+\t* call.c (build_new_op_1): Check tf_warning flag in all cases.\n+\n 2015-06-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/66585"}, {"sha": "ba5da4c36daebe9dffc8fdb06c7ab9f6460ce613", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=cd95a0d559e691d3767b238f1a584d006dcbb53e", "patch": "@@ -5640,17 +5640,19 @@ build_new_op_1 (location_t loc, enum tree_code code, int flags, tree arg1,\n     case TRUTH_ORIF_EXPR:\n     case TRUTH_AND_EXPR:\n     case TRUTH_OR_EXPR:\n-      warn_logical_operator (loc, code, boolean_type_node,\n-\t\t\t     code_orig_arg1, arg1, code_orig_arg2, arg2);\n+      if (complain & tf_warning)\n+\twarn_logical_operator (loc, code, boolean_type_node,\n+\t\t\t       code_orig_arg1, arg1, code_orig_arg2, arg2);\n       /* Fall through.  */\n     case GT_EXPR:\n     case LT_EXPR:\n     case GE_EXPR:\n     case LE_EXPR:\n     case EQ_EXPR:\n     case NE_EXPR:\n-      if ((code_orig_arg1 == BOOLEAN_TYPE)\n-\t  ^ (code_orig_arg2 == BOOLEAN_TYPE))\n+      if ((complain & tf_warning)\n+\t  && ((code_orig_arg1 == BOOLEAN_TYPE)\n+\t      ^ (code_orig_arg2 == BOOLEAN_TYPE)))\n \tmaybe_warn_bool_compare (loc, code, arg1, arg2);\n       /* Fall through.  */\n     case PLUS_EXPR:"}, {"sha": "89b859f0276322aa73f28e9459f611d88283a3e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd95a0d559e691d3767b238f1a584d006dcbb53e", "patch": "@@ -1,3 +1,9 @@\n+2015-06-20  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\tPR c++/65882\n+\t* g++.dg/diagnostic/inhibit-warn-1.C: New test.\n+\t* g++.dg/diagnostic/inhibit-warn-2.C: New test.\n+\n 2015-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/debug1.ads: Adjust."}, {"sha": "5655eb44fd312913fb38950df664dc3200cb74e0", "filename": "gcc/testsuite/g++.dg/diagnostic/inhibit-warn-1.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-1.C?ref=cd95a0d559e691d3767b238f1a584d006dcbb53e", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/65882\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wbool-compare\" }\n+\n+// Check that we don't ICE because of reentering error reporting routines while\n+// evaluating template parameters\n+\n+template<typename>\n+struct type_function {\n+  static constexpr bool value = false;\n+};\n+\n+template<bool>\n+struct dependent_type {\n+  typedef int type;\n+};\n+\n+template<typename T>\n+typename dependent_type<(5 > type_function<T>::value)>::type\n+bar();\n+\n+template<typename T>\n+typename dependent_type<(5 > type_function<T>::value)>::type\n+foo()\n+{\n+  return bar<int>();\n+}\n+\n+int main()\n+{\n+  foo<int>();\n+}"}, {"sha": "cb16b4cef8d762fed34cc2f5a54ee45ffa15be14", "filename": "gcc/testsuite/g++.dg/diagnostic/inhibit-warn-2.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd95a0d559e691d3767b238f1a584d006dcbb53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Finhibit-warn-2.C?ref=cd95a0d559e691d3767b238f1a584d006dcbb53e", "patch": "@@ -0,0 +1,36 @@\n+// PR c++/65882\n+// PR c++/66467\n+// { dg-do compile }\n+\n+template <bool>\n+struct A\n+{\n+  typedef int type;\n+};\n+\n+struct B\n+{\n+  static const int value = 0;\n+};\n+\n+template <class>\n+struct C\n+{\n+  typedef int type;\n+};\n+\n+template <class>\n+struct F : B {};\n+\n+class D\n+{\n+  template <class Expr>\n+  typename A<F<typename C<Expr>::type>::value || B::value>::type\n+  operator=(Expr); // { dg-message \"declared\" }\n+};\n+\n+void fn1()\n+{\n+  D opt;\n+  opt = 0; // { dg-error \"private\" }\n+}"}]}