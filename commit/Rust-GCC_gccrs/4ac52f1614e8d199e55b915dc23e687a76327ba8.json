{"sha": "4ac52f1614e8d199e55b915dc23e687a76327ba8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjNTJmMTYxNGU4ZDE5OWU1NWI5MTVkYzIzZTY4N2E3NjMyN2JhOA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-11-22T10:44:29Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-11-22T10:44:29Z"}, "message": "re PR target/77904 ([ARM Cortex-M0] Frame pointer thrashes registers if assembly statements with \"sp\" clobber are used)\n\n2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    PR target/77904\n    * config/arm/arm.c (thumb1_compute_save_reg_mask): Mark frame pointer\n    in save register mask if it is needed.\n\n    gcc/testsuite/\n    PR target/77904\n    * gcc.target/arm/pr77904.c: New test.\n\nFrom-SVN: r242693", "tree": {"sha": "f2c54a383ddd5469be1f5ce11f3d99745f6590d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2c54a383ddd5469be1f5ce11f3d99745f6590d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac52f1614e8d199e55b915dc23e687a76327ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac52f1614e8d199e55b915dc23e687a76327ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac52f1614e8d199e55b915dc23e687a76327ba8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac52f1614e8d199e55b915dc23e687a76327ba8/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4fe8c9f6b1d28c37680939c24e6ebfb5706bb9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4fe8c9f6b1d28c37680939c24e6ebfb5706bb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4fe8c9f6b1d28c37680939c24e6ebfb5706bb9e"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "f5e1e5412d22839b88d1b2c61519705f71f84962", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ac52f1614e8d199e55b915dc23e687a76327ba8", "patch": "@@ -1,3 +1,9 @@\n+2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR target/77904\n+\t* config/arm/arm.c (thumb1_compute_save_reg_mask): Mark frame pointer\n+\tin save register mask if it is needed.\n+\n 2016-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/78436"}, {"sha": "abd3276f13125e87fe7a88b60f0bf98cd580e7fb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4ac52f1614e8d199e55b915dc23e687a76327ba8", "patch": "@@ -18275,6 +18275,10 @@ thumb1_compute_save_reg_mask (void)\n     if (df_regs_ever_live_p (reg) && callee_saved_reg_p (reg))\n       mask |= 1 << reg;\n \n+  /* Handle the frame pointer as a special case.  */\n+  if (frame_pointer_needed)\n+    mask |= 1 << HARD_FRAME_POINTER_REGNUM;\n+\n   if (flag_pic\n       && !TARGET_SINGLE_PIC_BASE\n       && arm_pic_register != INVALID_REGNUM"}, {"sha": "edcc79eec2ff36aef828a91f23d03a9f901dfaed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ac52f1614e8d199e55b915dc23e687a76327ba8", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR target/77904\n+\t* gcc.target/arm/pr77904.c: New test.\n+\n 2016-11-22  Toma Tabacu  <toma.tabacu@imgtec.com>\n \n \t* gcc.target/mips/interrupt_handler-bug-1.c (dg-options): Add"}, {"sha": "76728c07e73350ce44160cabff3dd2fa7a6ef021", "filename": "gcc/testsuite/gcc.target/arm/pr77904.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr77904.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac52f1614e8d199e55b915dc23e687a76327ba8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr77904.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr77904.c?ref=4ac52f1614e8d199e55b915dc23e687a76327ba8", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__ ((noinline, noclone)) void\n+clobber_sp (void)\n+{\n+  __asm volatile (\"\" : : : \"sp\");\n+}\n+\n+int\n+main (void)\n+{\n+  int ret;\n+\n+  __asm volatile (\"mov\\tr4, #0xf4\\n\\t\"\n+\t\t  \"mov\\tr5, #0xf5\\n\\t\"\n+\t\t  \"mov\\tr6, #0xf6\\n\\t\"\n+\t\t  \"mov\\tr7, #0xf7\\n\\t\"\n+\t\t  \"mov\\tr0, #0xf8\\n\\t\"\n+\t\t  \"mov\\tr8, r0\\n\\t\"\n+\t\t  \"mov\\tr0, #0xfa\\n\\t\"\n+\t\t  \"mov\\tr10, r0\"\n+\t\t  : : : \"r0\", \"r4\", \"r5\", \"r6\", \"r7\", \"r8\", \"r10\");\n+  clobber_sp ();\n+\n+  __asm volatile (\"cmp\\tr4, #0xf4\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"cmp\\tr5, #0xf5\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"cmp\\tr6, #0xf6\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"cmp\\tr7, #0xf7\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"mov\\tr0, r8\\n\\t\"\n+\t\t  \"cmp\\tr0, #0xf8\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"mov\\tr0, r10\\n\\t\"\n+\t\t  \"cmp\\tr0, #0xfa\\n\\t\"\n+\t\t  \"bne\\tfail\\n\\t\"\n+\t\t  \"mov\\t%0, #1\\n\"\n+\t\t  \"fail:\\n\\t\"\n+\t\t  \"sub\\tr0, #1\"\n+\t\t  : \"=r\" (ret) : :);\n+  return ret;\n+}"}]}