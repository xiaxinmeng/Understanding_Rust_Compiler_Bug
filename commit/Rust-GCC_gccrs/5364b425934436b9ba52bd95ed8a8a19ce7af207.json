{"sha": "5364b425934436b9ba52bd95ed8a8a19ce7af207", "node_id": "C_kwDOANBUbNoAKDUzNjRiNDI1OTM0NDM2YjliYTUyYmQ5NWVkOGE4YTE5Y2U3YWYyMDc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-13T06:08:26Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-13T12:16:05Z"}, "message": "Add op1_op2_relation for float operands.\n\nop1_op2_relation can be called for relops (bool = a < b) as well as\nregular binary operators (z = a + b).  This patch adds the overloaded\nmethod for floating point results.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (range_operator_float::op1_op2_relation): New.\n\t(class foperator_equal): Add using.\n\t(class foperator_not_equal): Same.\n\t(class foperator_lt): Same.\n\t(class foperator_le): Same.\n\t(class foperator_gt): Same.\n\t(class foperator_ge): Same.\n\t* range-op.cc (range_op_handler::op1_op2_relation): New.\n\t* range-op.h (range_operator_float::op1_op2_relation): New.", "tree": {"sha": "d3a5dda87a1a6ab4d63007f29604b7a85a2f6547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a5dda87a1a6ab4d63007f29604b7a85a2f6547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5364b425934436b9ba52bd95ed8a8a19ce7af207", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5364b425934436b9ba52bd95ed8a8a19ce7af207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5364b425934436b9ba52bd95ed8a8a19ce7af207", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5364b425934436b9ba52bd95ed8a8a19ce7af207/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "786e4c024f941671a233f5779d73a5d22f4e9588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786e4c024f941671a233f5779d73a5d22f4e9588", "html_url": "https://github.com/Rust-GCC/gccrs/commit/786e4c024f941671a233f5779d73a5d22f4e9588"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "23e0f5ef4e23724828c303d2ab327e95a3b74abc", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=5364b425934436b9ba52bd95ed8a8a19ce7af207", "patch": "@@ -160,6 +160,12 @@ range_operator_float::op1_op2_relation (const irange &lhs ATTRIBUTE_UNUSED) cons\n   return VREL_VARYING;\n }\n \n+relation_kind\n+range_operator_float::op1_op2_relation (const frange &lhs ATTRIBUTE_UNUSED) const\n+{\n+  return VREL_VARYING;\n+}\n+\n // Return TRUE if OP1 is known to be free of NANs.\n \n static inline bool\n@@ -338,6 +344,7 @@ class foperator_equal : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -444,6 +451,7 @@ class foperator_not_equal : public range_operator_float\n {\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -545,6 +553,7 @@ class foperator_lt : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -660,6 +669,7 @@ class foperator_le : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -767,6 +777,7 @@ class foperator_gt : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -882,6 +893,7 @@ class foperator_ge : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n+  using range_operator_float::op1_op2_relation;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,"}, {"sha": "f8255dd10a190093b7abf8c653dc4056c254663e", "filename": "gcc/range-op.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=5364b425934436b9ba52bd95ed8a8a19ce7af207", "patch": "@@ -4476,7 +4476,9 @@ range_op_handler::op1_op2_relation (const vrange &lhs) const\n   gcc_checking_assert (m_valid);\n   if (m_int)\n     return m_int->op1_op2_relation (as_a <irange> (lhs));\n-  return m_float->op1_op2_relation (as_a <irange> (lhs));\n+  if (is_a <irange> (lhs))\n+    return m_float->op1_op2_relation (as_a <irange> (lhs));\n+  return m_float->op1_op2_relation (as_a <frange> (lhs));\n }\n \n // Cast the range in R to TYPE."}, {"sha": "48adcecc7c68010a16b53866471745aa4c7a3079", "filename": "gcc/range-op.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5364b425934436b9ba52bd95ed8a8a19ce7af207/gcc%2Frange-op.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.h?ref=5364b425934436b9ba52bd95ed8a8a19ce7af207", "patch": "@@ -160,6 +160,7 @@ class range_operator_float\n \t\t\t\t\t  const frange &op2,\n \t\t\t\t\t  relation_kind = VREL_VARYING) const;\n   virtual relation_kind op1_op2_relation (const irange &lhs) const;\n+  virtual relation_kind op1_op2_relation (const frange &lhs) const;\n };\n \n class range_op_handler"}]}