{"sha": "4794afa5e0e4e701892d8049ec96599bb8fb3555", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5NGFmYTVlMGU0ZTcwMTg5MmQ4MDQ5ZWM5NjU5OWJiOGZiMzU1NQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-07-01T23:41:38Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-07-01T23:41:38Z"}, "message": "tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle constants and ohter expected operations explicitly...\n\n2007-07-01  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle constants\n\tand ohter expected operations explicitly, change default to\n\tgcc_unreachable.\n\nFrom-SVN: r126179", "tree": {"sha": "f2794ba721b60c7fbde45614b26bbd672f1841e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2794ba721b60c7fbde45614b26bbd672f1841e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4794afa5e0e4e701892d8049ec96599bb8fb3555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4794afa5e0e4e701892d8049ec96599bb8fb3555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4794afa5e0e4e701892d8049ec96599bb8fb3555", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4794afa5e0e4e701892d8049ec96599bb8fb3555/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10ae7c7b78beed4a5d924ec89371ecb0b0a9a367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ae7c7b78beed4a5d924ec89371ecb0b0a9a367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ae7c7b78beed4a5d924ec89371ecb0b0a9a367"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "a5a83eed8ac4ae8d3ba8c48c563b5f60502d9d9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4794afa5e0e4e701892d8049ec96599bb8fb3555/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4794afa5e0e4e701892d8049ec96599bb8fb3555/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4794afa5e0e4e701892d8049ec96599bb8fb3555", "patch": "@@ -1,3 +1,9 @@\n+2007-07-01  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle constants\n+\tand other expected operations explicitly, change default to\n+\tgcc_unreachable. \n+\n 2007-07-01  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* config/arm/arm.c (arm_cannot_copy_insn_p): Do not expect a"}, {"sha": "45ebe08dfc7260a2959da50bc9f615aeeaab597c", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4794afa5e0e4e701892d8049ec96599bb8fb3555/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4794afa5e0e4e701892d8049ec96599bb8fb3555/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=4794afa5e0e4e701892d8049ec96599bb8fb3555", "patch": "@@ -524,6 +524,10 @@ copy_reference_ops_from_ref (tree ref, VEC(vn_reference_op_s, heap) **result)\n \t  temp.op0 = TREE_OPERAND (ref, 1);\n \t  temp.op1 = TREE_OPERAND (ref, 3);\n \t  break;\n+\tcase STRING_CST:\n+\tcase INTEGER_CST:\n+\tcase COMPLEX_CST:\n+\tcase VECTOR_CST:\n \tcase VALUE_HANDLE:\n \tcase VAR_DECL:\n \tcase PARM_DECL:\n@@ -532,12 +536,23 @@ copy_reference_ops_from_ref (tree ref, VEC(vn_reference_op_s, heap) **result)\n \tcase SSA_NAME:\n \t  temp.op0 = ref;\n \t  break;\n-\tdefault:\n+\t  /* These are only interesting for their operands, their\n+\t     existence, and their type.  They will never be the last\n+\t     ref in the chain of references (IE they require an\n+\t     operand), so we don't have to put anything\n+\t     for op* as it will be handled by the iteration  */\n+\tcase IMAGPART_EXPR:\n+\tcase REALPART_EXPR:\n+\tcase VIEW_CONVERT_EXPR:\n+\tcase ADDR_EXPR:\n \t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t  \n \t}\n       VEC_safe_push (vn_reference_op_s, heap, *result, &temp);\n \n-      if (REFERENCE_CLASS_P (ref))\n+      if (REFERENCE_CLASS_P (ref) || TREE_CODE (ref) == ADDR_EXPR)\n \tref = TREE_OPERAND (ref, 0);\n       else\n \tref = NULL_TREE;"}]}