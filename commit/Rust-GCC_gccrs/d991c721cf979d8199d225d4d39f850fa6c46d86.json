{"sha": "d991c721cf979d8199d225d4d39f850fa6c46d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5MWM3MjFjZjk3OWQ4MTk5ZDIyNWQ0ZDM5Zjg1MGZhNmM0NmQ4Ng==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-03-08T23:33:58Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-03-08T23:33:58Z"}, "message": "back out the 3-0 branch version\n\nFrom-SVN: r40332", "tree": {"sha": "c8b39b658b605181563849cd1a1051a16d0c1cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8b39b658b605181563849cd1a1051a16d0c1cf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d991c721cf979d8199d225d4d39f850fa6c46d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d991c721cf979d8199d225d4d39f850fa6c46d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d991c721cf979d8199d225d4d39f850fa6c46d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d991c721cf979d8199d225d4d39f850fa6c46d86/comments", "author": null, "committer": null, "parents": [{"sha": "4c7bb72eb0afcbde82ea5acd99a1bceaa9ff7db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7bb72eb0afcbde82ea5acd99a1bceaa9ff7db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7bb72eb0afcbde82ea5acd99a1bceaa9ff7db8"}], "stats": {"total": 111, "additions": 75, "deletions": 36}, "files": [{"sha": "8477c00306688042b218e2934ee425cfd885b646", "filename": "gcc/gcc.c", "status": "modified", "additions": 75, "deletions": 36, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d991c721cf979d8199d225d4d39f850fa6c46d86/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d991c721cf979d8199d225d4d39f850fa6c46d86/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d991c721cf979d8199d225d4d39f850fa6c46d86", "patch": "@@ -32,6 +32,44 @@ CC recognizes how to compile each input file by suffixes in the file names.\n Once it knows which kind of compilation to perform, the procedure for\n compilation is specified by a string called a \"spec\".  */\n \n+/* A Short Introduction to Adding a Command-Line Option.\n+\n+   Before adding a command-line option, consider if it is really\n+   necessary.  Each additional command-line option adds complexity and\n+   is difficult to remove in subsequent versions.\n+\n+   In the following, consider adding the command-line argument\n+   `--bar'.\n+\n+   1. Each command-line option is specified in the specs file.  The\n+   notation is described below in the comment entitled \"The Specs\n+   Language\".  Read it.\n+\n+   2. In this file, add an entry to \"option_map\" equating the long\n+   `--' argument version and any shorter, single letter version.  Read\n+   the comments in the declaration of \"struct option_map\" for an\n+   explanation.  Do not omit the first `-'.\n+\n+   3. Look in the \"specs\" file to determine which program or option\n+   list should be given the argument, e.g., \"cc1_options\".  Add the\n+   appropriate syntax for the shorter option version to the\n+   corresponding \"const char *\" entry in this file.  Omit the first\n+   `-' from the option.  For example, use `-bar', rather than `--bar'.\n+\n+   4. If the argument takes an argument, e.g., `--baz argument1',\n+   modify either DEFAULT_SWITCH_TAKES_ARG or\n+   DEFAULT_WORD_SWITCH_TAKES_ARG in this file.  Omit the first `-'\n+   from `--baz'.\n+\n+   5. Document the option in this file's display_help().  If the\n+   option is passed to a subprogram, modify its corresponding\n+   function, e.g., cppinit.c:print_help() or toplev.c:display_help(),\n+   instead.\n+\n+   6. Compile and test.  Make sure that your new specs file is being\n+   read.  For example, use a debugger to investigate the value of\n+   \"specs_file\" in main().  */\n+\n #include \"config.h\"\n #include \"system.h\"\n #include <signal.h>\n@@ -233,7 +271,6 @@ static void add_prefix\t\tPARAMS ((struct path_prefix *, const char *,\n \t\t\t\t\t const char *, int, int, int *));\n static void translate_options\tPARAMS ((int *, const char *const **));\n static char *skip_whitespace\tPARAMS ((char *));\n-static void record_temp_file\tPARAMS ((const char *, int, int));\n static void delete_if_ordinary\tPARAMS ((const char *));\n static void delete_temp_files\tPARAMS ((void));\n static void delete_failure_queue PARAMS ((void));\n@@ -251,12 +288,9 @@ static int used_arg\t\tPARAMS ((const char *, int));\n static int default_arg\t\tPARAMS ((const char *, int));\n static void set_multilib_dir\tPARAMS ((void));\n static void print_multilib_info\tPARAMS ((void));\n-static void pfatal_with_name\tPARAMS ((const char *)) ATTRIBUTE_NORETURN;\n static void perror_with_name\tPARAMS ((const char *));\n static void pfatal_pexecute\tPARAMS ((const char *, const char *))\n   ATTRIBUTE_NORETURN;\n-static void error\t\tPARAMS ((const char *, ...))\n-  ATTRIBUTE_PRINTF_1;\n static void notice\t\tPARAMS ((const char *, ...))\n   ATTRIBUTE_PRINTF_1;\n static void display_help \tPARAMS ((void));\n@@ -272,7 +306,9 @@ static void init_gcc_specs              PARAMS ((struct obstack *,\n \t\t\t\t\t\t const char *,\n \t\t\t\t\t\t const char *));\n \f\n-/* Specs are strings containing lines, each of which (if not blank)\n+/* The Specs Language\n+\n+Specs are strings containing lines, each of which (if not blank)\n is made up of a program name, and arguments separated by spaces.\n The program name must be exact and start from root, since no path\n is searched and it is unreliable to depend on the current working directory.\n@@ -619,7 +655,7 @@ static const char *cc1_options =\n  %{aux-info*} %{Qn:-fno-ident} %{--help:--help}\\\n  %{--target-help:--target-help}\\\n  %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}}\\\n- %{fsyntax-only:-o %j}\";\n+ %{fsyntax-only:-o %j} %{-param*}\";\n \n static const char *asm_options =\n \"%a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\";\n@@ -674,7 +710,8 @@ static struct user_specs *user_specs_head, *user_specs_tail;\n   || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n   || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n   || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"specs\") \\\n+  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"-param\") \\\n+  || !strcmp (STR, \"specs\") \\\n   || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\"))\n \n #ifndef WORD_SWITCH_TAKES_ARG\n@@ -729,19 +766,20 @@ static struct compiler default_compilers[] =\n      were not present when we built the driver, we will hit these copies\n      and be given a more meaningful error than \"file not used since\n      linking is not done\".  */\n-  {\".m\",  \"#Objective-C\"}, {\".mi\",  \"#Objective-C\"},\n-  {\".cc\", \"#C++\"}, {\".cxx\", \"#C++\"}, {\".cpp\", \"#C++\"}, {\".cp\", \"#C++\"},\n-  {\".c++\", \"#C++\"}, {\".C\", \"#C++\"}, {\".ii\", \"#C++\"},\n-  {\".ads\", \"#Ada\"}, {\".adb\", \"#Ada\"}, {\".ada\", \"#Ada\"},\n-  {\".f\", \"#Fortran\"}, {\".for\", \"#Fortran\"}, {\".fpp\", \"#Fortran\"},\n-  {\".F\", \"#Fortran\"}, {\".FOR\", \"#Fortran\"}, {\".FPP\", \"#Fortran\"},\n-  {\".r\", \"#Ratfor\"},\n-  {\".p\", \"#Pascal\"}, {\".pas\", \"#Pascal\"},\n-  {\".ch\", \"#Chill\"}, {\".chi\", \"#Chill\"},\n-  {\".java\", \"#Java\"}, {\".class\", \"#Java\"},\n-  {\".zip\", \"#Java\"}, {\".jar\", \"#Java\"},\n+  {\".m\",  \"#Objective-C\", 0}, {\".mi\",  \"#Objective-C\", 0},\n+  {\".cc\", \"#C++\", 0}, {\".cxx\", \"#C++\", 0}, {\".cpp\", \"#C++\", 0},\n+  {\".cp\", \"#C++\", 0}, {\".c++\", \"#C++\", 0}, {\".C\", \"#C++\", 0},\n+  {\".ii\", \"#C++\", 0},\n+  {\".ads\", \"#Ada\", 0}, {\".adb\", \"#Ada\", 0}, {\".ada\", \"#Ada\", 0},\n+  {\".f\", \"#Fortran\", 0}, {\".for\", \"#Fortran\", 0}, {\".fpp\", \"#Fortran\", 0},\n+  {\".F\", \"#Fortran\", 0}, {\".FOR\", \"#Fortran\", 0}, {\".FPP\", \"#Fortran\", 0},\n+  {\".r\", \"#Ratfor\", 0},\n+  {\".p\", \"#Pascal\", 0}, {\".pas\", \"#Pascal\", 0},\n+  {\".ch\", \"#Chill\", 0}, {\".chi\", \"#Chill\", 0},\n+  {\".java\", \"#Java\", 0}, {\".class\", \"#Java\", 0},\n+  {\".zip\", \"#Java\", 0}, {\".jar\", \"#Java\", 0},\n   /* Next come the entries for C.  */\n-  {\".c\", \"@c\"},\n+  {\".c\", \"@c\", 0},\n   {\"@c\",\n    /* cc1 has an integrated ISO C preprocessor.  We should invoke the\n       external preprocessor if -save-temps or -traditional is given.  */\n@@ -756,27 +794,27 @@ static struct compiler default_compilers[] =\n \t\t    cc1 -fpreprocessed %{!pipe:%g.i} %(cc1_options)}\\\n \t    %{!traditional:%{!ftraditional:%{!traditional-cpp:\\\n \t\tcc1 -lang-c %{ansi:-std=c89} %(cpp_options) %(cc1_options)}}}}\\\n-        %{!fsyntax-only:%(invoke_as)}}}}\"},\n+        %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n   {\"-\",\n    \"%{!E:%e-E required when input is from standard input}\\\n-    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\"},\n-  {\".h\", \"@c-header\"},\n+    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\", 0},\n+  {\".h\", \"@c-header\", 0},\n   {\"@c-header\",\n    \"%{!E:%eCompilation of header file requested} \\\n-    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\"},\n-  {\".i\", \"@cpp-output\"},\n+    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\", 0},\n+  {\".i\", \"@cpp-output\", 0},\n   {\"@cpp-output\",\n-   \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\"},\n-  {\".s\", \"@assembler\"},\n+   \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n+  {\".s\", \"@assembler\", 0},\n   {\"@assembler\",\n-   \"%{!M:%{!MM:%{!E:%{!S:as %(asm_options) %i %A }}}}\"},\n-  {\".S\", \"@assembler-with-cpp\"},\n+   \"%{!M:%{!MM:%{!E:%{!S:as %(asm_options) %i %A }}}}\", 0},\n+  {\".S\", \"@assembler-with-cpp\", 0},\n   {\"@assembler-with-cpp\",\n    \"%(trad_capable_cpp) -lang-asm %(cpp_options)\\\n-\t%{!M:%{!MM:%{!E:%(invoke_as)}}}\"},\n+\t%{!M:%{!MM:%{!E:%(invoke_as)}}}\", 0},\n #include \"specs.h\"\n   /* Mark end of table */\n-  {0, 0}\n+  {0, 0, 0}\n };\n \n /* Number of elements in default_compilers, not counting the terminator.  */\n@@ -863,6 +901,7 @@ struct option_map option_map[] =\n    {\"--optimize\", \"-O\", \"oj\"},\n    {\"--output\", \"-o\", \"a\"},\n    {\"--output-class-directory\", \"-foutput-class-dir=\", \"ja\"},\n+   {\"--param\", \"--param\", \"a\"},\n    {\"--pedantic\", \"-pedantic\", 0},\n    {\"--pedantic-errors\", \"-pedantic-errors\", 0},\n    {\"--pipe\", \"-pipe\", 0},\n@@ -1876,7 +1915,7 @@ static struct temp_file *failure_delete_queue;\n    FAIL_DELETE nonzero means delete it if a compilation step fails;\n    otherwise delete it in any case.  */\n \n-static void\n+void\n record_temp_file (filename, always_delete, fail_delete)\n      const char *filename;\n      int always_delete;\n@@ -2920,9 +2959,9 @@ display_help ()\n \"), stdout);\n \n   printf (_(\"\\\n-\\nOptions starting with -g, -f, -m, -O or -W are automatically passed on to\\n\\\n-the various sub-processes invoked by %s.  In order to pass other options\\n\\\n-on to these processes the -W<letter> options must be used.\\n\\\n+\\nOptions starting with -g, -f, -m, -O, -W, or --param are automatically\\n\\\n+ passed on to the various sub-processes invoked by %s.  In order to pass\\n\\\n+ other options on to these processes the -W<letter> options must be used.\\n\\\n \"), programname);\n \n   /* The rest of the options are displayed by invocations of the various\n@@ -6025,7 +6064,7 @@ save_string (s, len)\n   return result;\n }\n \n-static void\n+void\n pfatal_with_name (name)\n      const char *name;\n {\n@@ -6093,7 +6132,7 @@ fatal VPARAMS ((const char *msgid, ...))\n   exit (1);\n }\n \n-static void\n+void\n error VPARAMS ((const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES"}]}