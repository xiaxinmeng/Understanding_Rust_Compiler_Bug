{"sha": "2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhZjYzM2Q0ZjhkNDI4MWRkNDI4YTFjZmVhYzI4YjkyYmM5YjZmOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-09-01T14:29:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-01T14:29:45Z"}, "message": "re PR target/46829 (ICE: in spill_failure, at reload1.c:2105 with -fschedule-insns -fsched-pressure and variadic function)\n\n\tPR target/46829\n\tPR target/46843\n\t* config/i386/i386.c (ix86_legitimate_combined_insn): New function.\n\t(TARGET_LEGITIMATE_COMBINED_INSN): New macro.\n\ntestsuite/ChangeLog:\n\n\tPR target/46829\n\tPR target/46843\n\t* gcc.target/i386/pr46829.c: New test.\n\t* gcc.target/i386/pr46843.c: Ditto.\n\nFrom-SVN: r190847", "tree": {"sha": "dba1efc348dffe842ca69a7e9dd21dbcd409dafe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dba1efc348dffe842ca69a7e9dd21dbcd409dafe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78e4f1ad4e4842af9897bd6ee6fb19fc33fe7762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e4f1ad4e4842af9897bd6ee6fb19fc33fe7762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e4f1ad4e4842af9897bd6ee6fb19fc33fe7762"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "14b923c1f3a991279ca20f3c96c81ae89f681559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "patch": "@@ -1,3 +1,10 @@\n+2012-09-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46829\n+\tPR target/46843\n+\t* config/i386/i386.c (ix86_legitimate_combined_insn): New function.\n+\t(TARGET_LEGITIMATE_COMBINED_INSN): New macro.\n+\n 2012-09-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* target.def (legitimate_combined_insn): New target hook."}, {"sha": "e2e1d220302b935e668a904507b4e250d3bfd339", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "patch": "@@ -5545,6 +5545,78 @@ ix86_return_pops_args (tree fundecl, tree funtype, int size)\n \n   return 0;\n }\n+\n+/* Implement the TARGET_LEGITIMATE_COMBINED_INSN hook.  */\n+\n+static bool\n+ix86_legitimate_combined_insn (rtx insn)\n+{\n+  /* Check operand constraints in case hard registers were propagated\n+     into insn pattern.  This check prevents combine pass from\n+     generating insn patterns with invalid hard register operands.\n+     These invalid insns can eventually confuse reload to error out\n+     with a spill failure.  See also PRs 46829 and 46843.  */\n+  if ((INSN_CODE (insn) = recog (PATTERN (insn), insn, 0)) >= 0)\n+    {\n+      int i;\n+\n+      extract_insn (insn);\n+      preprocess_constraints ();\n+\n+      for (i = 0; i < recog_data.n_operands; i++)\n+\t{\n+\t  rtx op = recog_data.operand[i];\n+\t  enum machine_mode mode = GET_MODE (op);\n+\t  struct operand_alternative *op_alt;\n+\t  int offset = 0;\n+\t  bool win;\n+\t  int j;\n+\n+\t  /* A unary operator may be accepted by the predicate, but it\n+\t     is irrelevant for matching constraints.  */\n+\t  if (UNARY_P (op))\n+\t    op = XEXP (op, 0);\n+\n+\t  if (GET_CODE (op) == SUBREG)\n+\t    {\n+\t      if (REG_P (SUBREG_REG (op))\n+\t\t  && REGNO (SUBREG_REG (op)) < FIRST_PSEUDO_REGISTER)\n+\t\toffset = subreg_regno_offset (REGNO (SUBREG_REG (op)),\n+\t\t\t\t\t      GET_MODE (SUBREG_REG (op)),\n+\t\t\t\t\t      SUBREG_BYTE (op),\n+\t\t\t\t\t      GET_MODE (op));\n+\t      op = SUBREG_REG (op);\n+\t    }\n+\n+\t  if (!(REG_P (op) && HARD_REGISTER_P (op)))\n+\t    continue;\n+\n+\t  op_alt = recog_op_alt[i];\n+\n+\t  /* Operand has no constraints, anything is OK.  */\n+ \t  win = !recog_data.n_alternatives;\n+\n+\t  for (j = 0; j < recog_data.n_alternatives; j++)\n+\t    {\n+\t      if (op_alt[j].anything_ok\n+\t\t  || (op_alt[j].matches != -1\n+\t\t      && operands_match_p\n+\t\t\t  (recog_data.operand[i],\n+\t\t\t   recog_data.operand[op_alt[j].matches]))\n+\t\t  || reg_fits_class_p (op, op_alt[j].cl, offset, mode))\n+\t\t{\n+\t\t  win = true;\n+\t\t  break;\n+\t\t}\n+\t    }\n+\n+\t  if (!win)\n+\t    return false;\n+\t}\n+    }\n+\n+  return true;\n+}\n \f\n /* Argument support functions.  */\n \n@@ -40707,6 +40779,9 @@ ix86_memmodel_check (unsigned HOST_WIDE_INT val)\n #undef TARGET_RETURN_POPS_ARGS\n #define TARGET_RETURN_POPS_ARGS ix86_return_pops_args\n \n+#undef TARGET_LEGITIMATE_COMBINED_INSN\n+#define TARGET_LEGITIMATE_COMBINED_INSN ix86_legitimate_combined_insn\n+\n #undef TARGET_GIMPLIFY_VA_ARG_EXPR\n #define TARGET_GIMPLIFY_VA_ARG_EXPR ix86_gimplify_va_arg\n "}, {"sha": "c5f88b77415c8ba12db9f89af0d32cd7a4e31660", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "patch": "@@ -1,3 +1,10 @@\n+2012-09-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46829\n+\tPR target/46843\n+\t* gcc.target/i386/pr46829.c: New test.\n+\t* gcc.target/i386/pr46843.c: Ditto.\n+\n 2012-08-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "d4c04d30fc2885515eb45e41fc6ab2716ee228e8", "filename": "gcc/testsuite/gcc.target/i386/pr46829.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46829.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46829.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46829.c?ref=2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fschedule-insns\" } */\n+\n+struct S\n+{\n+  int i, j;\n+};\n+\n+extern struct S s[];\n+\n+extern void bar (int, ...);\n+\n+void\n+foo (int n)\n+{\n+  while (s[n].i)\n+    bar (0, n, s[n].j, s, s[n].i / s[n].j);\n+}"}, {"sha": "3b0d76d134f03f6565ddad455f453ca7c873d9a5", "filename": "gcc/testsuite/gcc.target/i386/pr46843.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46843.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46843.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46843.c?ref=2caf633d4f8d4281dd428a1cfeac28b92bc9b6f8", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fschedule-insns\" } */\n+\n+void foo (double *d1, double *u1, double *u2, double *d2, int s, int j, int i)\n+{\n+  int n = 1 << s;\n+  double x = 0;\n+\n+  for (; j < n; j++)\n+    x += d1[j] * d2[i];\n+  d1[i] = x;\n+}"}]}