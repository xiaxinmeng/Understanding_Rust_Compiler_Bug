{"sha": "961ce1191f290dc2abdd987427a6972622ed85a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYxY2UxMTkxZjI5MGRjMmFiZGQ5ODc0MjdhNjk3MjYyMmVkODVhOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-06-07T11:15:45Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-06-07T11:15:45Z"}, "message": "varasm.c (force_const_mem): Assert mode is not VOID or BLK.\n\n\t* varasm.c (force_const_mem): Assert mode is not VOID or BLK.\n\nFrom-SVN: r199804", "tree": {"sha": "e93f68082ed7a32da064312b5e9fa2fc902a9cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e93f68082ed7a32da064312b5e9fa2fc902a9cbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/961ce1191f290dc2abdd987427a6972622ed85a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961ce1191f290dc2abdd987427a6972622ed85a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/961ce1191f290dc2abdd987427a6972622ed85a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961ce1191f290dc2abdd987427a6972622ed85a8/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb8ac9d0b6e78b3f2af101b63e228216931d42a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8ac9d0b6e78b3f2af101b63e228216931d42a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8ac9d0b6e78b3f2af101b63e228216931d42a7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b27f22a033f1d5fa6d27180f8b95a78f483ce042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/961ce1191f290dc2abdd987427a6972622ed85a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/961ce1191f290dc2abdd987427a6972622ed85a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=961ce1191f290dc2abdd987427a6972622ed85a8", "patch": "@@ -1,3 +1,7 @@\n+2013-06-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* varasm.c (force_const_mem): Assert mode is not VOID or BLK.\n+\n 2013-06-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/constraints.md (Df): New constraint."}, {"sha": "bf3a0768f86ee8678efcdec296ffb1ea02da893f", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/961ce1191f290dc2abdd987427a6972622ed85a8/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/961ce1191f290dc2abdd987427a6972622ed85a8/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=961ce1191f290dc2abdd987427a6972622ed85a8", "patch": "@@ -3567,7 +3567,8 @@ force_const_mem (enum machine_mode mode, rtx x)\n   *slot = desc;\n \n   /* Align the location counter as required by EXP's data type.  */\n-  align = GET_MODE_ALIGNMENT (mode == VOIDmode ? word_mode : mode);\n+  gcc_checking_assert (mode != VOIDmode && mode != BLKmode);\n+  align = GET_MODE_ALIGNMENT (mode);\n #ifdef CONSTANT_ALIGNMENT\n   {\n     tree type = lang_hooks.types.type_for_mode (mode, 0);"}]}