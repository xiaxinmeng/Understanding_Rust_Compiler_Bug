{"sha": "18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThiZGNjYWFiMmU4MjhiN2FhNjhlZTE3ZTllNWZmZWUxODZhYjYxZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2002-08-08T06:30:13Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-08-08T06:30:13Z"}, "message": "c-opts.c (cpp_opts): New.\n\n\t* c-opts.c (cpp_opts): New.\n\t(COMMAND_LINE_OPTIONS): Add switches from cppinit.c.\n\t(c_common_decode_options): Handle cpplib switches.\n\t(c_common_init_options): Set cpp_opts.\n\t* cppinit.c (COMMAND_LINE_OPTIONS): Move some switches to c-opts.c.\n\t(cpp_handle_option): Similarly.\n\nFrom-SVN: r56119", "tree": {"sha": "8b629d54956eb4101b6d0da970b9e94f92d15496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b629d54956eb4101b6d0da970b9e94f92d15496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50ad96428042fa526d001309059a6187dd9e0d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ad96428042fa526d001309059a6187dd9e0d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ad96428042fa526d001309059a6187dd9e0d3c"}], "stats": {"total": 258, "additions": 122, "deletions": 136}, "files": [{"sha": "473d88c4c269a0290a9891150f149d79b0647c51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "patch": "@@ -1,3 +1,12 @@\n+2002-08-08  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-opts.c (cpp_opts): New.\n+\t(COMMAND_LINE_OPTIONS): Add switches from cppinit.c.\n+\t(c_common_decode_options): Handle cpplib switches.\n+\t(c_common_init_options): Set cpp_opts.\n+\t* cppinit.c (COMMAND_LINE_OPTIONS): Move some switches to c-opts.c.\n+\t(cpp_handle_option): Similarly.\n+\n 2002-08-08  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/aix.h (TARGET_ALTIVEC): Define to 0."}, {"sha": "c729211f4679f9cc02cbe74b68dc74403b594f8e", "filename": "gcc/c-opts.c", "status": "modified", "additions": 113, "deletions": 4, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "patch": "@@ -30,6 +30,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree-inline.h\"\n #include \"diagnostic.h\"\n \n+static cpp_options *cpp_opts;\n+\n static void missing_arg PARAMS ((size_t));\n static size_t parse_option PARAMS ((const char *, int));\n static void set_Wimplicit PARAMS ((int));\n@@ -52,24 +54,42 @@ static void write_langs PARAMS ((char *, int));\n /* This is the list of all command line options, with the leading \"-\"\n    removed.  It must be sorted in ASCII collating order.  All options\n    beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-   form; this form should not be listed.  If you don't want a \"no-\"\n-   form, your handler should check and reject it.\n+   form; this form should not be listed.  The variable \"on\" is true if\n+   the positive form is given, otherwise it is false.  If you don't\n+   want to allow a \"no-\" form, your handler should reject \"on\" being\n+   false by returning zero.  See, for example, the handling of\n+   -ftabstop=.\n \n    If the user gives an option to a front end that doesn't support it,\n    an error is output, mentioning which front ends the option is valid\n    for.  If you don't want this, you must accept it for all front\n-   ends, and test for the front end in the option handler.  */\n+   ends, and test for the front end in the option handler.  See, for\n+   example, the handling of -Wno-strict-prototypes for C++.\n+\n+   If you request an argument with CL_JOINED, CL_SEPARATE or their\n+   combination CL_ARG, it is stored in the variable \"arg\", which is\n+   guaranteed non-NULL.  It points to the argument either within the\n+   argv[] vector or within one of its strings, and so the text is not\n+   temporary and copies need not be made.\n+\n+   If you use the CL_SEPARATE flag (which is also in CL_ARG) be sure\n+   to add an error message in missing_arg().  */\n+\n #define COMMAND_LINE_OPTIONS\t\t\t\t\t\t     \\\n   OPT(\"E\",\t\t\tCL_ALL,   OPT_E)\t\t\t     \\\n   OPT(\"Wall\",\t\t\tCL_ALL,   OPT_Wall)\t\t\t     \\\n   OPT(\"Wbad-function-cast\",\tCL_C,     OPT_Wbad_function_cast)\t     \\\n   OPT(\"Wcast-qual\",\t\tCL_ALL,   OPT_Wcast_qual)\t\t     \\\n   OPT(\"Wchar-subscripts\",\tCL_ALL,   OPT_Wchar_subscripts)\t\t     \\\n+  OPT(\"Wcomment\",\t\tCL_ALL,   OPT_Wcomment)\t\t\t     \\\n+  OPT(\"Wcomments\",              CL_ALL,   OPT_Wcomments)\t\t     \\\n   OPT(\"Wconversion\",\t\tCL_ALL,   OPT_Wconversion)\t\t     \\\n   OPT(\"Wctor-dtor-privacy\",\tCL_CXX,   OPT_Wctor_dtor_privacy)\t     \\\n   OPT(\"Wdeprecated\",\t\tCL_CXX,   OPT_Wdeprecated)\t\t     \\\n   OPT(\"Wdiv-by-zero\",\t\tCL_C,     OPT_Wdiv_by_zero)\t\t     \\\n   OPT(\"Weffc++\",\t\tCL_CXX,   OPT_Weffcxx)\t\t\t     \\\n+  OPT(\"Wendif-labels\",\t\tCL_ALL,   OPT_Wendif_labels)\t\t     \\\n+  OPT(\"Werror\",                 CL_ALL,   OPT_Werror)\t\t\t     \\\n   OPT(\"Werror-implicit-function-declaration\",\t\t\t\t     \\\n \t     \t\t\tCL_C,     OPT_Werror_implicit_function_decl) \\\n   OPT(\"Wfloat-equal\",\t\tCL_ALL,   OPT_Wfloat_equal)\t\t     \\\n@@ -83,6 +103,7 @@ static void write_langs PARAMS ((char *, int));\n   OPT(\"Wimplicit\",\t\tCL_CXX,   OPT_Wimplicit)\t\t     \\\n   OPT(\"Wimplicit-function-declaration\",\tCL_C, OPT_Wimplicit_function_decl)   \\\n   OPT(\"Wimplicit-int\",\t\tCL_C,\t  OPT_Wimplicit_int)\t\t     \\\n+  OPT(\"Wimport\",                CL_ALL,   OPT_Wimport)\t\t\t     \\\n   OPT(\"Wlong-long\",\t\tCL_ALL,   OPT_Wlong_long)\t\t     \\\n   OPT(\"Wmain\",\t\t\tCL_C,     OPT_Wmain)\t\t\t     \\\n   OPT(\"Wmissing-braces\",\tCL_ALL,   OPT_Wmissing_braces)\t\t     \\\n@@ -109,8 +130,12 @@ static void write_langs PARAMS ((char *, int));\n   OPT(\"Wsign-promo\",\t\tCL_CXX,   OPT_Wsign_promo)\t\t     \\\n   OPT(\"Wstrict-prototypes\",\tCL_ALL,   OPT_Wstrict_prototypes)\t     \\\n   OPT(\"Wsynth\",\t\t\tCL_CXX,   OPT_Wsynth)\t\t\t     \\\n+  OPT(\"Wsystem-headers\",\tCL_ALL,   OPT_Wsystem_headers)\t\t     \\\n   OPT(\"Wtraditional\",\t\tCL_C,     OPT_Wtraditional)\t\t     \\\n+  OPT(\"Wtrigraphs\",\t\tCL_ALL,   OPT_Wtrigraphs)\t\t     \\\n+  OPT(\"Wundef\",\t\t\tCL_ALL,   OPT_Wundef)\t\t\t     \\\n   OPT(\"Wunknown-pragmas\",\tCL_ALL,   OPT_Wunknown_pragmas)\t\t     \\\n+  OPT(\"Wunused-macros\",\t\tCL_ALL,   OPT_Wunused_macros)\t\t     \\\n   OPT(\"Wwrite-strings\",\t\tCL_ALL,   OPT_Wwrite_strings)\t\t     \\\n   OPT(\"ansi\",\t\t\tCL_ALL,   OPT_ansi)\t\t\t     \\\n   OPT(\"faccess-control\",\tCL_CXX,   OPT_faccess_control)\t\t     \\\n@@ -151,18 +176,22 @@ static void write_langs PARAMS ((char *, int));\n   OPT(\"fnext-runtime\",\t\tCL_OBJC,  OPT_fnext_runtime)\t\t     \\\n   OPT(\"fnonansi-builtins\",\tCL_CXX,   OPT_fnonansi_builtins)\t     \\\n   OPT(\"fnonnull-objects\",\tCL_CXX,   OPT_fnonnull_objects)\t\t     \\\n+  OPT(\"foperator-names\",\tCL_CXX,   OPT_foperator_names)\t\t     \\\n   OPT(\"foptional-diags\",\tCL_CXX,   OPT_foptional_diags)\t\t     \\\n   OPT(\"fpermissive\",\t\tCL_CXX,   OPT_fpermissive)\t\t     \\\n+  OPT(\"fpreprocessed\",\t\tCL_ALL,   OPT_fpreprocessed)\t\t     \\\n   OPT(\"frepo\",\t\t\tCL_CXX,   OPT_frepo)\t\t\t     \\\n   OPT(\"frtti\",\t\t\tCL_CXX,   OPT_frtti)\t\t\t     \\\n   OPT(\"fshort-double\",\t\tCL_ALL,   OPT_fshort_double)\t\t     \\\n   OPT(\"fshort-enums\",\t\tCL_ALL,   OPT_fshort_enums)\t\t     \\\n   OPT(\"fshort-wchar\",\t\tCL_ALL,   OPT_fshort_wchar)\t\t     \\\n+  OPT(\"fshow-column\",\t\tCL_ALL,   OPT_fshow_column)\t\t     \\\n   OPT(\"fsigned-bitfields\",\tCL_ALL,   OPT_fsigned_bitfields)\t     \\\n   OPT(\"fsigned-char\",\t\tCL_ALL,   OPT_fsigned_char)\t\t     \\\n   OPT(\"fsquangle\",\t\tCL_CXX,   OPT_fsquangle)\t\t     \\\n   OPT(\"fstats\",\t\t\tCL_CXX,   OPT_fstats)\t\t\t     \\\n   OPT(\"fstrict-prototype\",\tCL_CXX,   OPT_fstrict_prototype)\t     \\\n+  OPT(\"ftabstop=\",              CL_ALL | CL_JOINED,   OPT_ftabstop)\t     \\\n   OPT(\"ftemplate-depth-\",\tCL_CXX | CL_JOINED, OPT_ftemplate_depth)     \\\n   OPT(\"fthis-is-variable\",\tCL_CXX,   OPT_fthis_is_variable)\t     \\\n   OPT(\"funsigned-bitfields\",\tCL_ALL,   OPT_funsigned_bitfields)\t     \\\n@@ -173,6 +202,8 @@ static void write_langs PARAMS ((char *, int));\n   OPT(\"fweak\",\t\t\tCL_CXX,   OPT_fweak)\t\t\t     \\\n   OPT(\"fxref\",\t\t\tCL_CXX,   OPT_fxref)\t\t\t     \\\n   OPT(\"gen-decls\",\t\tCL_OBJC,  OPT_gen_decls)\t\t     \\\n+  OPT(\"pedantic\",\t\tCL_ALL,   OPT_pedantic)\t\t\t     \\\n+  OPT(\"pedantic-errors\",\tCL_ALL,   OPT_pedantic_errors)\t\t     \\\n   OPT(\"print-objc-runtime-info\", CL_OBJC, OPT_print_objc_runtime_info)\t     \\\n   OPT(\"std=\",\t\t\tCL_ALL | CL_JOINED, OPT_std_bad)\t     \\\n   OPT(\"std=c++98\",\t\tCL_CXX,\t  OPT_std_cplusplus98)\t\t     \\\n@@ -337,8 +368,10 @@ c_common_init_options (lang)\n   c_language = lang;\n   parse_in = cpp_create_reader (lang == clk_c || lang == clk_objective_c\n \t\t\t\t? CLK_GNUC89 : CLK_GNUCXX);\n+  cpp_opts = cpp_get_options (parse_in);\n+\n   if (lang == clk_objective_c)\n-    cpp_get_options (parse_in)->objc = 1;\n+    cpp_opts->objc = 1;\n \n   flag_const_strings = (lang == clk_cplusplus);\n   warn_pointer_arith = (lang == clk_cplusplus);\n@@ -472,6 +505,10 @@ c_common_decode_option (argc, argv)\n \t  warn_reorder = on;\n \t  warn_nontemplate_friend = on;\n \t}\n+\n+      cpp_opts->warn_trigraphs = on;\n+      cpp_opts->warn_comments = on;\n+      cpp_opts->warn_num_sign_change = on;\n       break;\n \n     case OPT_Wbad_function_cast:\n@@ -486,6 +523,11 @@ c_common_decode_option (argc, argv)\n       warn_char_subscripts = on;\n       break;\n \n+    case OPT_Wcomment:\n+    case OPT_Wcomments:\n+      cpp_opts->warn_comments = on;\n+      break;\n+\n     case OPT_Wconversion:\n       warn_conversion = on;\n       break;\n@@ -506,6 +548,14 @@ c_common_decode_option (argc, argv)\n       warn_ecpp = on;\n       break;\n \n+    case OPT_Wendif_labels:\n+      cpp_opts->warn_endif_labels = on;\n+      break;\n+\n+    case OPT_Werror:\n+      cpp_opts->warnings_are_errors = on;\n+      break;\n+\n     case OPT_Werror_implicit_function_decl:\n       if (!on)\n \t{\n@@ -559,6 +609,10 @@ c_common_decode_option (argc, argv)\n       warn_implicit_int = on;\n       break;\n \n+    case OPT_Wimport:\n+      cpp_opts->warn_import = on;\n+      break;\n+\n     case OPT_Wlong_long:\n       warn_long_long = on;\n       break;\n@@ -669,8 +723,21 @@ c_common_decode_option (argc, argv)\n       warn_synth = on;\n       break;\n \n+    case OPT_Wsystem_headers:\n+      cpp_opts->warn_system_headers = on;\n+      break;\n+\n     case OPT_Wtraditional:\n       warn_traditional = on;\n+      cpp_opts->warn_traditional = on;\n+      break;\n+\n+    case OPT_Wtrigraphs:\n+      cpp_opts->warn_trigraphs = on;\n+      break;\n+\n+    case OPT_Wundef:\n+      cpp_opts->warn_undef = on;\n       break;\n \n     case OPT_Wunknown_pragmas:\n@@ -679,6 +746,10 @@ c_common_decode_option (argc, argv)\n       warn_unknown_pragmas = on * 2;\n       break;\n \n+    case OPT_Wunused_macros:\n+      cpp_opts->warn_unused_macros = on;\n+      break;\n+\n     case OPT_Wwrite_strings:\n       if (c_language == clk_c || c_language == clk_objective_c)\n \tflag_const_strings = on;\n@@ -869,6 +940,10 @@ c_common_decode_option (argc, argv)\n       flag_no_nonansi_builtin = !on;\n       break;\n \n+    case OPT_foperator_names:\n+      cpp_opts->operator_names = on;\n+      break;\n+\n     case OPT_foptional_diags:\n       flag_optional_diags = on;\n       break;\n@@ -877,6 +952,10 @@ c_common_decode_option (argc, argv)\n       flag_permissive = on;\n       break;\n \n+    case OPT_fpreprocessed:\n+      cpp_opts->preprocessed = on;\n+      break;\n+\n     case OPT_frepo:\n       flag_use_repository = on;\n       if (on)\n@@ -887,10 +966,29 @@ c_common_decode_option (argc, argv)\n       flag_rtti = on;\n       break;\n \n+    case OPT_fshow_column:\n+      cpp_opts->show_column = on;\n+      break;\n+\n     case OPT_fstats:\n       flag_detailed_statistics = on;\n       break;\n \n+    case OPT_ftabstop:\n+      /* Don't recognise -fno-tabstop=.  */\n+      if (!on)\n+\treturn 0;\n+\n+      /* It is documented that we silently ignore silly values.  */\n+      if (*arg)\n+\t{\n+\t  char *endptr;\n+\t  long tabstop = strtol (arg, &endptr, 10);\n+\t  if (*endptr == '\\0' && tabstop >= 1 && tabstop <= 100)\n+\t    cpp_opts->tabstop = tabstop;\n+\t}\n+      break;\n+\n     case OPT_ftemplate_depth:\n       max_tinst_depth = read_integral_parameter (arg, argv[0], 0);\n       break;\n@@ -911,6 +1009,17 @@ c_common_decode_option (argc, argv)\n       flag_gen_declaration = 1;\n       break;\n \n+      /* We need to handle the -pedantic switches here, rather than in\n+\t c_common_post_options, so that a subsequent -Wno-endif-labels\n+\t is not overridden.  */\n+    case OPT_pedantic_errors:\n+      cpp_opts->pedantic_errors = 1;\n+      /* fall through */\n+    case OPT_pedantic:\n+      cpp_opts->pedantic = 1;\n+      cpp_opts->warn_endif_labels = 1;\n+      break;\n+\n     case OPT_print_objc_runtime_info:\n       print_struct_values = 1;\n       break;"}, {"sha": "32030278a0f98e9a512ea739649b533d2c218fe4", "filename": "gcc/cppinit.c", "status": "modified", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18bdccaab2e828b7aa68ee17e9e5ffee186ab61e/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=18bdccaab2e828b7aa68ee17e9e5ffee186ab61e", "patch": "@@ -1156,34 +1156,7 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"MT\",                       no_tgt, OPT_MT)                         \\\n   DEF_OPT(\"P\",                        0,      OPT_P)                          \\\n   DEF_OPT(\"U\",                        no_mac, OPT_U)                          \\\n-  DEF_OPT(\"Wall\",                     0,      OPT_Wall)                       \\\n-  DEF_OPT(\"Wcomment\",                 0,      OPT_Wcomment)                   \\\n-  DEF_OPT(\"Wcomments\",                0,      OPT_Wcomments)                  \\\n-  DEF_OPT(\"Wendif-labels\",            0,      OPT_Wendif_labels)              \\\n-  DEF_OPT(\"Werror\",                   0,      OPT_Werror)                     \\\n-  DEF_OPT(\"Wimport\",                  0,      OPT_Wimport)                    \\\n-  DEF_OPT(\"Wno-comment\",              0,      OPT_Wno_comment)                \\\n-  DEF_OPT(\"Wno-comments\",             0,      OPT_Wno_comments)               \\\n-  DEF_OPT(\"Wno-endif-labels\",         0,      OPT_Wno_endif_labels)           \\\n-  DEF_OPT(\"Wno-error\",                0,      OPT_Wno_error)                  \\\n-  DEF_OPT(\"Wno-import\",               0,      OPT_Wno_import)                 \\\n-  DEF_OPT(\"Wno-system-headers\",       0,      OPT_Wno_system_headers)         \\\n-  DEF_OPT(\"Wno-traditional\",          0,      OPT_Wno_traditional)            \\\n-  DEF_OPT(\"Wno-trigraphs\",            0,      OPT_Wno_trigraphs)              \\\n-  DEF_OPT(\"Wno-undef\",                0,      OPT_Wno_undef)                  \\\n-  DEF_OPT(\"Wno-unused-macros\",        0,      OPT_Wno_unused_macros)          \\\n-  DEF_OPT(\"Wsystem-headers\",          0,      OPT_Wsystem_headers)            \\\n-  DEF_OPT(\"Wtraditional\",             0,      OPT_Wtraditional)               \\\n-  DEF_OPT(\"Wtrigraphs\",               0,      OPT_Wtrigraphs)                 \\\n-  DEF_OPT(\"Wundef\",                   0,      OPT_Wundef)                     \\\n-  DEF_OPT(\"Wunused-macros\",           0,      OPT_Wunused_macros)             \\\n   DEF_OPT(\"d\",                        no_arg, OPT_d)                          \\\n-  DEF_OPT(\"fno-operator-names\",       0,      OPT_fno_operator_names)         \\\n-  DEF_OPT(\"fno-preprocessed\",         0,      OPT_fno_preprocessed)           \\\n-  DEF_OPT(\"fno-show-column\",          0,      OPT_fno_show_column)            \\\n-  DEF_OPT(\"fpreprocessed\",            0,      OPT_fpreprocessed)              \\\n-  DEF_OPT(\"fshow-column\",             0,      OPT_fshow_column)               \\\n-  DEF_OPT(\"ftabstop=\",                no_num, OPT_ftabstop)                   \\\n   DEF_OPT(\"h\",                        0,      OPT_h)                          \\\n   DEF_OPT(\"idirafter\",                no_dir, OPT_idirafter)                  \\\n   DEF_OPT(\"imacros\",                  no_fil, OPT_imacros)                    \\\n@@ -1200,8 +1173,6 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"nostdinc\",                 0,      OPT_nostdinc)                   \\\n   DEF_OPT(\"nostdinc++\",               0,      OPT_nostdincplusplus)           \\\n   DEF_OPT(\"o\",                        no_fil, OPT_o)                          \\\n-  DEF_OPT(\"pedantic\",                 0,      OPT_pedantic)                   \\\n-  DEF_OPT(\"pedantic-errors\",          0,      OPT_pedantic_errors)            \\\n   DEF_OPT(\"remap\",                    0,      OPT_remap)                      \\\n   DEF_OPT(\"std=c++98\",                0,      OPT_std_cplusplus98)            \\\n   DEF_OPT(\"std=c89\",                  0,      OPT_std_c89)                    \\\n@@ -1363,31 +1334,6 @@ cpp_handle_option (pfile, argc, argv)\n \t{\n \tcase N_OPTS: /* Shut GCC up.  */\n \t  break;\n-\tcase OPT_fno_operator_names:\n-\t  CPP_OPTION (pfile, operator_names) = 0;\n-\t  break;\n-\tcase OPT_fpreprocessed:\n-\t  CPP_OPTION (pfile, preprocessed) = 1;\n-\t  break;\n-\tcase OPT_fno_preprocessed:\n-\t  CPP_OPTION (pfile, preprocessed) = 0;\n-\t  break;\n-\tcase OPT_fshow_column:\n-\t  CPP_OPTION (pfile, show_column) = 1;\n-\t  break;\n-\tcase OPT_fno_show_column:\n-\t  CPP_OPTION (pfile, show_column) = 0;\n-\t  break;\n-\tcase OPT_ftabstop:\n-\t  /* Silently ignore empty string, non-longs and silly values.  */\n-\t  if (arg[0] != '\\0')\n-\t    {\n-\t      char *endptr;\n-\t      long tabstop = strtol (arg, &endptr, 10);\n-\t      if (*endptr == '\\0' && tabstop >= 1 && tabstop <= 100)\n-\t\tCPP_OPTION (pfile, tabstop) = tabstop;\n-\t    }\n-\t  break;\n \tcase OPT_w:\n \t  CPP_OPTION (pfile, inhibit_warnings) = 1;\n \t  break;\n@@ -1421,13 +1367,6 @@ cpp_handle_option (pfile, argc, argv)\n \tcase OPT_D:\n \t  new_pending_directive (pend, arg, cpp_define);\n \t  break;\n-\tcase OPT_pedantic_errors:\n-\t  CPP_OPTION (pfile, pedantic_errors) = 1;\n-\t  /* fall through */\n-\tcase OPT_pedantic:\n-\t  CPP_OPTION (pfile, pedantic) = 1;\n-\t  CPP_OPTION (pfile, warn_endif_labels) = 1;\n-\t  break;\n \tcase OPT_trigraphs:\n \t  CPP_OPTION (pfile, trigraphs) = 1;\n \t  break;\n@@ -1667,77 +1606,6 @@ cpp_handle_option (pfile, argc, argv)\n \t  /* Add directory to end of path for includes.  */\n \t  append_include_chain (pfile, xstrdup (arg), AFTER, 0);\n \t  break;\n-\n-\tcase OPT_Wall:\n-\t  CPP_OPTION (pfile, warn_trigraphs) = 1;\n-\t  CPP_OPTION (pfile, warn_comments) = 1;\n-\t  CPP_OPTION (pfile, warn_num_sign_change) = 1;\n-\t  break;\n-\n-\tcase OPT_Wtraditional:\n-\t  CPP_OPTION (pfile, warn_traditional) = 1;\n-\t  break;\n-\tcase OPT_Wno_traditional:\n-\t  CPP_OPTION (pfile, warn_traditional) = 0;\n-\t  break;\n-\n-\tcase OPT_Wtrigraphs:\n-\t  CPP_OPTION (pfile, warn_trigraphs) = 1;\n-\t  break;\n-\tcase OPT_Wno_trigraphs:\n-\t  CPP_OPTION (pfile, warn_trigraphs) = 0;\n-\t  break;\n-\n-\tcase OPT_Wcomment:\n-\tcase OPT_Wcomments:\n-\t  CPP_OPTION (pfile, warn_comments) = 1;\n-\t  break;\n-\tcase OPT_Wno_comment:\n-\tcase OPT_Wno_comments:\n-\t  CPP_OPTION (pfile, warn_comments) = 0;\n-\t  break;\n-\n-\tcase OPT_Wunused_macros:\n-\t  CPP_OPTION (pfile, warn_unused_macros) = 1;\n-\t  break;\n-\tcase OPT_Wno_unused_macros:\n-\t  CPP_OPTION (pfile, warn_unused_macros) = 0;\n-\t  break;\n-\n-\tcase OPT_Wundef:\n-\t  CPP_OPTION (pfile, warn_undef) = 1;\n-\t  break;\n-\tcase OPT_Wno_undef:\n-\t  CPP_OPTION (pfile, warn_undef) = 0;\n-\t  break;\n-\n-\tcase OPT_Wimport:\n-\t  CPP_OPTION (pfile, warn_import) = 1;\n-\t  break;\n-\tcase OPT_Wno_import:\n-\t  CPP_OPTION (pfile, warn_import) = 0;\n-\t  break;\n-\n-\tcase OPT_Wendif_labels:\n-\t  CPP_OPTION (pfile, warn_endif_labels) = 1;\n-\t  break;\n-\tcase OPT_Wno_endif_labels:\n-\t  CPP_OPTION (pfile, warn_endif_labels) = 0;\n-\t  break;\n-\n-\tcase OPT_Werror:\n-\t  CPP_OPTION (pfile, warnings_are_errors) = 1;\n-\t  break;\n-\tcase OPT_Wno_error:\n-\t  CPP_OPTION (pfile, warnings_are_errors) = 0;\n-\t  break;\n-\n-\tcase OPT_Wsystem_headers:\n-\t  CPP_OPTION (pfile, warn_system_headers) = 1;\n-\t  break;\n-\tcase OPT_Wno_system_headers:\n-\t  CPP_OPTION (pfile, warn_system_headers) = 0;\n-\t  break;\n \t}\n     }\n   return i + 1;"}]}