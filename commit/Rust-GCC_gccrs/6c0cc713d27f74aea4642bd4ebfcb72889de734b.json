{"sha": "6c0cc713d27f74aea4642bd4ebfcb72889de734b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwY2M3MTNkMjdmNzRhZWE0NjQyYmQ0ZWJmY2I3Mjg4OWRlNzM0Yg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-02-06T17:24:31Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-02-06T17:24:31Z"}, "message": "re PR c++/14028 (Parser accepts invalid unbalanced triangular bracketing.)\n\n\tPR c++/14028\n\t* parser.c (cp_parser_enclosed_template_argument_list): Emit straight\n\terror when terminator can not be found.\n\nFrom-SVN: r77402", "tree": {"sha": "168d8f944dc46f86c1fe8adb6ec30253ad7cd7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/168d8f944dc46f86c1fe8adb6ec30253ad7cd7bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0cc713d27f74aea4642bd4ebfcb72889de734b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0cc713d27f74aea4642bd4ebfcb72889de734b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0cc713d27f74aea4642bd4ebfcb72889de734b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0cc713d27f74aea4642bd4ebfcb72889de734b/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3298fd35f7da7f77a0c2b8574f450b2c3ea286bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298fd35f7da7f77a0c2b8574f450b2c3ea286bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3298fd35f7da7f77a0c2b8574f450b2c3ea286bd"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "285fa86c7855e61d5a6d7991877662b3f78da298", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0cc713d27f74aea4642bd4ebfcb72889de734b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0cc713d27f74aea4642bd4ebfcb72889de734b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c0cc713d27f74aea4642bd4ebfcb72889de734b", "patch": "@@ -1,3 +1,9 @@\n+2003-02-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/14028\n+\t* parser.c (cp_parser_enclosed_template_argument_list): Emit straight\n+\terror when terminator can not be found.\n+\n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n \tMake-lang.in (po-generated):  Delete."}, {"sha": "7e259f6bffbc0eae1ac4b9673f9875399293683a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0cc713d27f74aea4642bd4ebfcb72889de734b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0cc713d27f74aea4642bd4ebfcb72889de734b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6c0cc713d27f74aea4642bd4ebfcb72889de734b", "patch": "@@ -1938,8 +1938,8 @@ cp_parser_non_integral_constant_expression (const char *thing)\n \n static void\n cp_parser_diagnose_invalid_type_name (cp_parser *parser, tree scope, tree id)\n-{\r\n-  tree decl, old_scope;\r\n+{\n+  tree decl, old_scope;\n   /* Try to lookup the identifier.  */\n   old_scope = parser->scope;\n   parser->scope = scope;\n@@ -1948,8 +1948,8 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser, tree scope, tree id)\n   /* If the lookup found a template-name, it means that the user forgot\n   to specify an argument list. Emit an useful error message.  */\n   if (TREE_CODE (decl) == TEMPLATE_DECL)\n-    error (\"invalid use of template-name `%E' without an argument list\",\r\n-      decl);\r\n+    error (\"invalid use of template-name `%E' without an argument list\",\n+      decl);\n   else if (!parser->scope)\n     {\n       /* Issue an error message.  */\n@@ -2271,16 +2271,16 @@ cp_parser_skip_to_closing_brace (cp_parser *parser)\n \n static tree\n cp_parser_make_typename_type (cp_parser *parser, tree scope, tree id)\n-{\r\n-  tree result;\r\n-  if (TREE_CODE (id) == IDENTIFIER_NODE)\r\n-    {\r\n-      result = make_typename_type (scope, id, /*complain=*/0);\r\n-      if (result == error_mark_node)\r\n-\tcp_parser_diagnose_invalid_type_name (parser, scope, id);\r\n-      return result;\r\n-    }\r\n-  return make_typename_type (scope, id, tf_error);\r\n+{\n+  tree result;\n+  if (TREE_CODE (id) == IDENTIFIER_NODE)\n+    {\n+      result = make_typename_type (scope, id, /*complain=*/0);\n+      if (result == error_mark_node)\n+\tcp_parser_diagnose_invalid_type_name (parser, scope, id);\n+      return result;\n+    }\n+  return make_typename_type (scope, id, tf_error);\n }\n \n \n@@ -14538,8 +14538,8 @@ cp_parser_enclosed_template_argument_list (cp_parser* parser)\n \t  cp_lexer_consume_token (parser->lexer);\n \t}\n     }\n-  else\n-    cp_parser_require (parser, CPP_GREATER, \"`>'\");\n+  else if (!cp_parser_require (parser, CPP_GREATER, \"`>'\"))\n+    error (\"missing `>' to terminate the template argument list\");\n   /* The `>' token might be a greater-than operator again now.  */\n   parser->greater_than_is_operator_p \n     = saved_greater_than_is_operator_p;"}]}