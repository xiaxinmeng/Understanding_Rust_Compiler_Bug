{"sha": "4615cd512e41a1011a199d0d1f5dabbaff01e796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYxNWNkNTEyZTQxYTEwMTFhMTk5ZDBkMWY1ZGFiYmFmZjAxZTc5Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-04-18T12:05:01Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-04-18T12:05:01Z"}, "message": "va-arg-24.c: New.\n\n\t* gcc.c-torture/execute/va-arg-24.c: New.\n\nCo-Authored-By: Aldy Hernandez <aldyh@redhat.com>\n\nFrom-SVN: r80817", "tree": {"sha": "6d5f31c543218742374d56c3a5fd5de89f74c254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d5f31c543218742374d56c3a5fd5de89f74c254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4615cd512e41a1011a199d0d1f5dabbaff01e796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4615cd512e41a1011a199d0d1f5dabbaff01e796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4615cd512e41a1011a199d0d1f5dabbaff01e796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4615cd512e41a1011a199d0d1f5dabbaff01e796/comments", "author": null, "committer": null, "parents": [{"sha": "76cbf5bf52c4c0301f93b592df0bd29f22ed34ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76cbf5bf52c4c0301f93b592df0bd29f22ed34ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76cbf5bf52c4c0301f93b592df0bd29f22ed34ef"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "62af4dd517981cd8706394b12bdffe0814f27494", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4615cd512e41a1011a199d0d1f5dabbaff01e796/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4615cd512e41a1011a199d0d1f5dabbaff01e796/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4615cd512e41a1011a199d0d1f5dabbaff01e796", "patch": "@@ -1,3 +1,8 @@\n+2004-04-18  Zack Weinberg  <zack@codesourcery.com>\n+\t    Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gcc.c-torture/execute/va-arg-24.c: New.\n+\n 2004-04-17  Zack Weinberg  <zack@codesourcery.com>\n \t    Aldy Hernandez  <aldyh@redhat.com>\n "}, {"sha": "811b11f31b77086a49435ca8e27d35bd4cbc6d21", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-24.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4615cd512e41a1011a199d0d1f5dabbaff01e796/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4615cd512e41a1011a199d0d1f5dabbaff01e796/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-24.c?ref=4615cd512e41a1011a199d0d1f5dabbaff01e796", "patch": "@@ -0,0 +1,96 @@\n+/* The purpose of this code is to test argument passing of a tuple of\n+   11 integers, with the break point between named and unnamed arguments\n+   at every possible position.\t*/\n+\n+#include <stdarg.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+static int errors = 0;\n+\n+static void\n+verify (const char *tcase, int n[11])\n+{\n+  int i;\n+  for (i = 0; i <= 10; i++)\n+    if (n[i] != i)\n+      {\n+\tprintf (\" %s: n[%d] = %d expected %d\\n\", tcase, i, n[i], i);\n+\terrors++;\n+      }\n+}\n+\n+#define STR(x) #x\n+\n+#define p(i) int q##i,\n+#define P(i) n[i] = q##i;\n+\n+#define p0 p(0)\n+#define p1 p(1)\n+#define p2 p(2)\n+#define p3 p(3)\n+#define p4 p(4)\n+#define p5 p(5)\n+#define p6 p(6)\n+#define p7 p(7)\n+#define p8 p(8)\n+#define p9 p(9)\n+\n+#define P0 P(0)\n+#define P1 P(1)\n+#define P2 P(2)\n+#define P3 P(3)\n+#define P4 P(4)\n+#define P5 P(5)\n+#define P6 P(6)\n+#define P7 P(7)\n+#define P8 P(8)\n+#define P9 P(9)\n+\n+#define TCASE(x, params, vecinit)\t\t\\\n+static void\t\t\t\t\t\\\n+varargs##x (params ...)\t\t\t\t\\\n+{\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\\\n+  int n[11];\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+  va_start (ap, q##x);\t\t\t\t\\\n+  vecinit\t\t\t\t\t\\\n+  for (i = x + 1; i <= 10; i++)\t\t\t\\\n+    n[i] = va_arg (ap, int);\t\t\t\\\n+  va_end (ap);\t\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+  verify (STR(varargs##x), n);\t\t\t\\\n+}\n+\n+#define TEST(x) varargs##x (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n+\n+TCASE(0, p0\t\t\t      , P0\t\t\t     )\n+TCASE(1, p0 p1\t\t\t      , P0 P1\t\t\t     )\n+TCASE(2, p0 p1 p2\t\t      , P0 P1 P2\t\t     )\n+TCASE(3, p0 p1 p2 p3\t\t      , P0 P1 P2 P3\t\t     )\n+TCASE(4, p0 p1 p2 p3 p4\t\t      , P0 P1 P2 P3 P4\t\t     )\n+TCASE(5, p0 p1 p2 p3 p4 p5\t      , P0 P1 P2 P3 P4 P5\t     )\n+TCASE(6, p0 p1 p2 p3 p4 p5 p6\t      , P0 P1 P2 P3 P4 P5 P6\t     )\n+TCASE(7, p0 p1 p2 p3 p4 p5 p6 p7      , P0 P1 P2 P3 P4 P5 P6 P7\t     )\n+TCASE(8, p0 p1 p2 p3 p4 p5 p6 p7 p8   , P0 P1 P2 P3 P4 P5 P6 P7 P8   )\n+TCASE(9, p0 p1 p2 p3 p4 p5 p6 p7 p8 p9, P0 P1 P2 P3 P4 P5 P6 P7 P8 P9)\n+\n+int main(void)\n+{\n+  TEST(0);\n+  TEST(1);\n+  TEST(2);\n+  TEST(3);\n+  TEST(4);\n+  TEST(5);\n+  TEST(6);\n+  TEST(7);\n+  TEST(8);\n+  TEST(9);\n+\n+  if (errors)\n+    abort ();\n+  exit (0);\n+}"}]}