{"sha": "d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MmM1YjdiNzNiOWJlZDVkNjNkNjE0ZGMyYWU0ZjE3ZDQ5ZWI3NA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2016-05-17T17:54:28Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2016-05-17T17:54:28Z"}, "message": "~X & Y to X ^ Y in some cases\n\n2016-05-17  Marc Glisse  <marc.glisse@inria.fr>\n\ngcc/\n\t* match.pd (~X & Y): New transformation.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/pr69270.c: Adjust.\n\t* gcc.dg/tree-ssa/andnot-1.c: New testcase.\n\nFrom-SVN: r236337", "tree": {"sha": "1b1b1464fa56a7237a510a32cf422ab593a0209f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b1b1464fa56a7237a510a32cf422ab593a0209f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0139ba9332f80bad92794bcd4bfe360f2cfc42a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0139ba9332f80bad92794bcd4bfe360f2cfc42a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0139ba9332f80bad92794bcd4bfe360f2cfc42a4"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9ec5a9e688af5ec4e460bf3874a73674efbe0a80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "patch": "@@ -1,3 +1,7 @@\n+2016-05-17  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* match.pd (~X & Y): New transformation.\n+\n 2016-05-17  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-vrp.c (simplify_truth_ops_using_ranges): Set range"}, {"sha": "acc41be5a8d96e17dd0176b7bdc49977f54621c0", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "patch": "@@ -503,6 +503,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (bit_ior:c (bit_and @0 INTEGER_CST@2) (bit_and (bit_not @0) INTEGER_CST@1))\n  (if (wi::bit_not (@2) == @1)\n   (bit_xor @0 @1)))\n+/* Simplify (~X & Y) to X ^ Y if we know that (X & ~Y) is 0.  */\n+#if GIMPLE\n+(simplify\n+ (bit_and (bit_not SSA_NAME@0) INTEGER_CST@1)\n+ (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+      && (get_nonzero_bits (@0) & wi::bit_not (@1)) == 0)\n+  (bit_xor @0 @1)))\n+#endif\n \n /* X % Y is smaller than Y.  */\n (for cmp (lt ge)"}, {"sha": "61b6a2290c0d22d72e9235b1866534a4021f6b3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "patch": "@@ -1,3 +1,8 @@\n+2016-05-17  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/pr69270.c: Adjust.\n+\t* gcc.dg/tree-ssa/andnot-1.c: New testcase.\n+\n 2016-05-17  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/pr69270.c: Adjust."}, {"sha": "7f161b672e511cf0baa767aafd7028e41a13b2e2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/andnot-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fandnot-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fandnot-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fandnot-1.c?ref=d982c5b7b73b9bed5d63d614dc2ae4f17d49eb74", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized-raw\" } */\n+\n+unsigned f(unsigned i){\n+  i >>= __SIZEOF_INT__ * __CHAR_BIT__ - 3;\n+  i = ~i;\n+  return i & 7;\n+}\n+\n+/* { dg-final { scan-tree-dump \"bit_xor_expr\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"bit_not_expr\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"bit_and_expr\" \"optimized\" } } */"}]}