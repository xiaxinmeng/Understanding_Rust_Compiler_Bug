{"sha": "f2d186905aff4e0225e37b69a089f334290e806d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkMTg2OTA1YWZmNGUwMjI1ZTM3YjY5YTA4OWYzMzQyOTBlODA2ZA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-11-11T02:12:42Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-11-11T02:12:42Z"}, "message": "re PR target/24445 (\"unable to find a register to spill in class 'R0_REGS\")\n\n\tPR target/24445\n\t* calls.c (expand_call): Copy a return value to a plain register\n\tif needed.\n\n\t* gcc.dg/pr24445.c: New test.\n\nFrom-SVN: r106774", "tree": {"sha": "0b563d56025cd02e2b9c54a6bde629270c77a6e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b563d56025cd02e2b9c54a6bde629270c77a6e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2d186905aff4e0225e37b69a089f334290e806d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d186905aff4e0225e37b69a089f334290e806d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d186905aff4e0225e37b69a089f334290e806d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d186905aff4e0225e37b69a089f334290e806d/comments", "author": null, "committer": null, "parents": [{"sha": "253109d2ee930390bf762172ba7ae25007496704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253109d2ee930390bf762172ba7ae25007496704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253109d2ee930390bf762172ba7ae25007496704"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ec775d21c539d8fe5cf978aeb31f7ec2a933114b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2d186905aff4e0225e37b69a089f334290e806d", "patch": "@@ -1,3 +1,9 @@\n+2005-11-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/24445\n+\t* calls.c (expand_call): Copy a return value to a plain register\n+\tif needed.\n+\n 2005-11-10  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR target/24778"}, {"sha": "920c81575e0a1830cc1d40c43277d4e8bea6e832", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=f2d186905aff4e0225e37b69a089f334290e806d", "patch": "@@ -2857,6 +2857,14 @@ expand_call (tree exp, rtx target, int ignore)\n \t       && GET_MODE (target) == TYPE_MODE (TREE_TYPE (exp))\n \t       && GET_MODE (target) == GET_MODE (valreg))\n \t{\n+\t  /* We have to copy a return value in a CLASS_LIKELY_SPILLED hard\n+\t     reg to a plain register.  */\n+\t  if (REG_P (valreg)\n+\t      && HARD_REGISTER_P (valreg)\n+\t      && CLASS_LIKELY_SPILLED_P (REGNO_REG_CLASS (REGNO (valreg)))\n+\t      && !(REG_P (target) && !HARD_REGISTER_P (target)))\n+\t    valreg = copy_to_reg (valreg);\n+\n \t  /* TARGET and VALREG cannot be equal at this point because the\n \t     latter would not have REG_FUNCTION_VALUE_P true, while the\n \t     former would if it were referring to the same register."}, {"sha": "e2557a7991b545cd26bdf6d8d262c85c96931733", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2d186905aff4e0225e37b69a089f334290e806d", "patch": "@@ -1,3 +1,8 @@\n+2005-11-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/24445\n+\t* gcc.dg/pr24445.c: New test.\n+\n 2005-11-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/24655"}, {"sha": "e001be6b966997ec2e892fab7b29fef2865c18b0", "filename": "gcc/testsuite/gcc.dg/pr24445.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24445.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d186905aff4e0225e37b69a089f334290e806d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24445.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24445.c?ref=f2d186905aff4e0225e37b69a089f334290e806d", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O1 -fpic\" } */\n+extern int bar (void) __attribute__ ((__pure__));\n+extern char *baz;\n+void\n+foo (void)\n+{\n+  baz = (char *) bar ();\n+}"}]}