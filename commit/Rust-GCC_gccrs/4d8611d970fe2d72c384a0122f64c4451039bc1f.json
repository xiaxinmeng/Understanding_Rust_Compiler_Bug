{"sha": "4d8611d970fe2d72c384a0122f64c4451039bc1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4NjExZDk3MGZlMmQ3MmMzODRhMDEyMmY2NGM0NDUxMDM5YmMxZg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-04-04T07:21:00Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-04-04T07:21:00Z"}, "message": "gcc.c (LINK_GCC_C_SEQUENCE_SPEC): No need for a new one-character spec for this, just use %(link_gcc_c_sequence).\n\n2002-04-03  David S. Miller  <davem@redhat.com>\n\n\t* gcc.c (LINK_GCC_C_SEQUENCE_SPEC): No need for a new\n\tone-character spec for this, just use %(link_gcc_c_sequence).\n\nFrom-SVN: r51842", "tree": {"sha": "d086abe3a19a8af7e03134c6652edce0a2d0b69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d086abe3a19a8af7e03134c6652edce0a2d0b69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d8611d970fe2d72c384a0122f64c4451039bc1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8611d970fe2d72c384a0122f64c4451039bc1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8611d970fe2d72c384a0122f64c4451039bc1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8611d970fe2d72c384a0122f64c4451039bc1f/comments", "author": null, "committer": null, "parents": [{"sha": "b03ad99df1e05c819f9186a1ecf653906175eeeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03ad99df1e05c819f9186a1ecf653906175eeeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03ad99df1e05c819f9186a1ecf653906175eeeb"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "f278189e9f2da9ab6c126b5d9c0867c9a1d53569", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8611d970fe2d72c384a0122f64c4451039bc1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8611d970fe2d72c384a0122f64c4451039bc1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d8611d970fe2d72c384a0122f64c4451039bc1f", "patch": "@@ -1,3 +1,8 @@\n+2002-04-03  David S. Miller  <davem@redhat.com>\n+\n+\t* gcc.c (LINK_GCC_C_SEQUENCE_SPEC): No need for a new\n+\tone-character spec for this, just use %(link_gcc_c_sequence).\n+\n 2002-04-03  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/crtfastmath.c (FPRS_NS): Delete bogus little-endian"}, {"sha": "d0d0e3f079a2632cb67d106b4fe2ef12004b82da", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8611d970fe2d72c384a0122f64c4451039bc1f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8611d970fe2d72c384a0122f64c4451039bc1f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4d8611d970fe2d72c384a0122f64c4451039bc1f", "patch": "@@ -448,7 +448,6 @@ or with constant text in a single argument.\n  %C     process CPP_SPEC as a spec.\n  %1\tprocess CC1_SPEC as a spec.\n  %2\tprocess CC1PLUS_SPEC as a spec.\n- %3     process LINK_GCC_C_SEQUENCE_SPEC as a spec.\n  %|\toutput \"-\" if the input for the current command is coming from a pipe.\n  %*\tsubstitute the variable part of a matched option.  (See below.)\n \tNote that each comma in the substituted string is replaced by\n@@ -628,7 +627,7 @@ proper position among the other output files.  */\n %{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %(linker) %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r} %{s} %{t}\\\n     %{u*} %{x} %{z} %{Z} %{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n-    %{static:} %{L*} %(link_libgcc) %o %{!nostdlib:%{!nodefaultlibs:%3}}\\\n+    %{static:} %{L*} %(link_libgcc) %o %{!nostdlib:%{!nodefaultlibs:%(link_gcc_c_sequence)}}\\\n     %{!A:%{!nostdlib:%{!nostartfiles:%E}}} %{T*} }}}}}}\"\n #endif\n \n@@ -4759,12 +4758,6 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t      return value;\n \t    break;\n \n-\t  case '3':\n-\t    value = do_spec_1 (link_gcc_c_sequence_spec, 0, NULL);\n-\t    if (value != 0)\n-\t      return value;\n-\t    break;\n-\n \t  case 'a':\n \t    value = do_spec_1 (asm_spec, 0, NULL);\n \t    if (value != 0)"}]}