{"sha": "a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY1ZmQyZDcxYmMyN2ZlMDMyMTdmYTU4MmY3YTllOTljZTYwOTIwZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-05-07T15:00:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-07T15:00:10Z"}, "message": "call.c (build_conditional_expr): Don't assume that the folded expression has result_type.\n\n        * call.c (build_conditional_expr): Don't assume that the folded\n        expression has result_type.\n\nFrom-SVN: r66561", "tree": {"sha": "8c2e0dd1454e7145521521030d4607ac2b8e68ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2e0dd1454e7145521521030d4607ac2b8e68ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65fd2d71bc27fe03217fa582f7a9e99ce60920d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffea5d1e438e9f07d1a003c026a68513b1664f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffea5d1e438e9f07d1a003c026a68513b1664f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffea5d1e438e9f07d1a003c026a68513b1664f16"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "4955d64a83e21283beac9f185c763daf0ffbec0e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65fd2d71bc27fe03217fa582f7a9e99ce60920d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65fd2d71bc27fe03217fa582f7a9e99ce60920d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "patch": "@@ -1,3 +1,8 @@\n+2003-05-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_conditional_expr): Don't assume that the folded\n+\texpression has result_type.\n+\n 2003-05-06  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* typeck.c (build_unary_op): Deal with const qualifier in"}, {"sha": "5d7e3dfe963829f976d83897a124818b07092088", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65fd2d71bc27fe03217fa582f7a9e99ce60920d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65fd2d71bc27fe03217fa582f7a9e99ce60920d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a65fd2d71bc27fe03217fa582f7a9e99ce60920d", "patch": "@@ -3530,16 +3530,19 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n \n  valid_operands:\n   result = fold (build (COND_EXPR, result_type, arg1, arg2, arg3));\n+  /* We can't use result_type below, as fold might have returned a\n+     throw_expr.  */\n+\n   /* Expand both sides into the same slot, hopefully the target of the\n      ?: expression.  We used to check for TARGET_EXPRs here, but now we\n      sometimes wrap them in NOP_EXPRs so the test would fail.  */\n-  if (!lvalue_p && IS_AGGR_TYPE (result_type))\n-    result = build_target_expr_with_type (result, result_type);\n+  if (!lvalue_p && IS_AGGR_TYPE (TREE_TYPE (result)))\n+    result = get_target_expr (result);\n   \n   /* If this expression is an rvalue, but might be mistaken for an\n      lvalue, we must add a NON_LVALUE_EXPR.  */\n   if (!lvalue_p && real_lvalue_p (result))\n-    result = build1 (NON_LVALUE_EXPR, result_type, result);\n+    result = build1 (NON_LVALUE_EXPR, TREE_TYPE (result), result);\n \n   return result;\n }"}]}