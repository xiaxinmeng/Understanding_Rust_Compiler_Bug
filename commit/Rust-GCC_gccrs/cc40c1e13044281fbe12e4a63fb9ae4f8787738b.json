{"sha": "cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M0MGMxZTEzMDQ0MjgxZmJlMTJlNGE2M2ZiOWFlNGY4Nzg3NzM4Yg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-10-04T08:49:26Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-10-04T08:49:26Z"}, "message": "2002-10-04  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java:\n\t(isMulticastAddress): Added documentation.\n\t(getHostAddress): Added documentation.\n\t(toString): Added documentation.\n\t(getByAddress): Fixed documentation.\n\t(getByName): Added documentation.\n\t(getAllByName): Added documentation.\n\t(getLocalHost): Added documentation.\n\nFrom-SVN: r57814", "tree": {"sha": "582e79ebc0528498f55182b2087f6de2fad0f3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/582e79ebc0528498f55182b2087f6de2fad0f3ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc40c1e13044281fbe12e4a63fb9ae4f8787738b/comments", "author": null, "committer": null, "parents": [{"sha": "9c826022f9acded6ebf851555b7202f74eddb31d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c826022f9acded6ebf851555b7202f74eddb31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c826022f9acded6ebf851555b7202f74eddb31d"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "ff2671d0d9577ecadd1f6d9e72b03b55e91c5f56", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc40c1e13044281fbe12e4a63fb9ae4f8787738b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc40c1e13044281fbe12e4a63fb9ae4f8787738b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "patch": "@@ -1,3 +1,14 @@\n+2002-10-04  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java:\n+\t(isMulticastAddress): Added documentation.\n+\t(getHostAddress): Added documentation.\n+\t(toString): Added documentation.\n+\t(getByAddress): Fixed documentation.\n+\t(getByName): Added documentation.\n+\t(getAllByName): Added documentation.\n+\t(getLocalHost): Added documentation.\n+\n 2002-10-04  Michael Koch  <konqueror@gmx.de>\n \n \t* java/beans/beancontext/BeanContextChildSupport.java:"}, {"sha": "fcdd88cff78b7e552299d4ad26283bd3a449b5fa", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc40c1e13044281fbe12e4a63fb9ae4f8787738b/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc40c1e13044281fbe12e4a63fb9ae4f8787738b/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=cc40c1e13044281fbe12e4a63fb9ae4f8787738b", "patch": "@@ -12,6 +12,7 @@\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.IOException;\n+import java.io.Serializable;\n \n /**\n  * @author Per Bothner\n@@ -27,7 +28,7 @@\n  * @specnote This class is not final since JK 1.4\n  */\n \n-public class InetAddress implements java.io.Serializable\n+public class InetAddress implements Serializable\n {\n   // The Serialized Form specifies that an int 'address' is saved/restored.\n   // This class uses a byte array internally so we'll just do the conversion\n@@ -80,6 +81,11 @@ private void writeObject(ObjectOutputStream oos) throws IOException\n       family = getFamily (address);\n   }\n \n+  /**\n+   * Utility routine to check if the InetAddress is an IP multicast address\n+   *\n+   * @since 1.1\n+   */\n   public boolean isMulticastAddress ()\n   {\n     int len = addr.length;\n@@ -127,6 +133,11 @@ private static SecurityException checkConnect (String hostname)\n       }\n   }\n \n+  /**\n+   * Returns the IP address as string\n+   *\n+   * @since 1.0.2\n+   */\n   public String getHostAddress ()\n   {\n     StringBuffer sbuf = new StringBuffer(40);\n@@ -204,6 +215,9 @@ public boolean equals (Object obj)\n     return true;\n   }\n \n+  /**\n+   * Returns then <code>InetAddress</code> as string\n+   */\n   public String toString()\n   {\n     return getHostName()+'/'+getHostAddress();\n@@ -215,7 +229,7 @@ public String toString()\n    * The argument is in network byte order: the highest order byte of the\n    * address is in getAddress()[0].\n    *\n-   * @exception UnknownHostException If no IP address for the host could\n+   * @exception UnknownHostException If IP address has illegal length\n    * be found\n    *\n    * @since 1.4\n@@ -236,6 +250,14 @@ public static InetAddress getByAddress(byte[] addr)\n   private static native InetAddress[] lookup\n   (String hostname, InetAddress addr, boolean all);\n \n+  /**\n+   * Determines the IP address of a host, given the host's name.\n+   *\n+   * @exception UnknownHostException If no IP address for the host could\n+   * be found\n+   * @exception SecurityException If a security manager exists and its\n+   * checkConnect method doesn't allow the operation\n+   */\n   public static InetAddress getByName (String host)\n     throws UnknownHostException\n   {\n@@ -249,6 +271,15 @@ public static InetAddress getByName (String host)\n     return iaddr;\n   }\n \n+  /**\n+   * Given the name of a host, returns an array of its IP addresses,\n+   * based on the configured name service on the system.\n+   *\n+   * @exception UnknownHostException If no IP address for the host could\n+   * be found\n+   * @exception SecurityException If a security manager exists and its\n+   * checkConnect method doesn't allow the operation\n+   */\n   public static InetAddress[] getAllByName (String host)\n     throws UnknownHostException\n   {\n@@ -272,6 +303,12 @@ public static InetAddress[] getAllByName (String host)\n \n   private static InetAddress localhost = null;\n \n+  /**\n+   * Returns the local host\n+   *\n+   * @exception UnknownHostException If no IP address for the host could\n+   * be found\n+   */\n   public static InetAddress getLocalHost() throws UnknownHostException\n   {\n     SecurityManager s = System.getSecurityManager();"}]}