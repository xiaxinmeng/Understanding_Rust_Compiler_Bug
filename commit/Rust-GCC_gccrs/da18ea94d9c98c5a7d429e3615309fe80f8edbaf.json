{"sha": "da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExOGVhOTRkOWM5OGM1YTdkNDI5ZTM2MTUzMDlmZTgwZjhlZGJhZg==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-10-28T18:40:42Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-10-28T18:40:42Z"}, "message": "common.opt (fuse-linker-plugin): New option.\n\n2009-10-28  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* common.opt (fuse-linker-plugin): New option.\n\t* gcc.c (LINK_COMMAND_SPEC, main): Rename use-linker-plugin to\n\tfuse-linker-plugin.\n\t* opts.c (common_handle_option): Ignore OPT_fuse_linker_plugin.\n\nFrom-SVN: r153683", "tree": {"sha": "f951372bcfc791c5fc6622b3663ecedaa066544c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f951372bcfc791c5fc6622b3663ecedaa066544c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/comments", "author": null, "committer": null, "parents": [{"sha": "160594b061c238a9bb978326577798f2b21e203e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160594b061c238a9bb978326577798f2b21e203e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160594b061c238a9bb978326577798f2b21e203e"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "5e75fff39d242d18491853e8abbd7d96442ee7f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "patch": "@@ -1,3 +1,10 @@\n+2009-10-28  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* common.opt (fuse-linker-plugin): New option.\n+\t* gcc.c (LINK_COMMAND_SPEC, main): Rename use-linker-plugin to\n+\tfuse-linker-plugin.\n+\t* opts.c (common_handle_option): Ignore OPT_fuse_linker_plugin.\n+\n 2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR rtl-optimization/39715"}, {"sha": "77967f89dfdeaf121fe0be0f26694fb79672b213", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "patch": "@@ -1391,6 +1391,9 @@ funwind-tables\n Common Report Var(flag_unwind_tables) Optimization\n Just generate unwind tables for exception handling\n \n+fuse-linker-plugin\n+Common Undocumented\n+\n fvar-tracking\n Common Report Var(flag_var_tracking) VarExists Optimization\n Perform variable tracking"}, {"sha": "b033d62ff13c9b7c91a8ec16f4ee3094a5e66496", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "patch": "@@ -770,7 +770,7 @@ proper position among the other output files.  */\n #define LINK_COMMAND_SPEC \"\\\n %{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %(linker) \\\n-    %{use-linker-plugin: \\\n+    %{fuse-linker-plugin: \\\n     -plugin %(linker_plugin_file) \\\n     -plugin-opt=%(lto_wrapper) \\\n     -plugin-opt=%(lto_gcc) \\\n@@ -7513,7 +7513,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n   if (num_linker_inputs > 0 && error_count == 0 && print_subprocess_help < 2)\n     {\n       int tmp = execution_count;\n-      const char *use_linker_plugin = \"use-linker-plugin\";\n+      const char *fuse_linker_plugin = \"fuse-linker-plugin\";\n \n       /* We'll use ld if we can't find collect2.  */\n       if (! strcmp (linker_name_spec, \"collect2\"))\n@@ -7523,14 +7523,14 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t    linker_name_spec = \"ld\";\n \t}\n \n-      if (switch_matches (use_linker_plugin,\n-\t\t\t  use_linker_plugin + strlen (use_linker_plugin), 0))\n+      if (switch_matches (fuse_linker_plugin,\n+\t\t\t  fuse_linker_plugin + strlen (fuse_linker_plugin), 0))\n \t{\n \t  linker_plugin_file_spec = find_a_file (&exec_prefixes,\n \t\t\t\t\t\t \"liblto_plugin.so\", X_OK,\n \t\t\t\t\t\t false);\n \t  if (!linker_plugin_file_spec)\n-\t    fatal (\"-use-linker-plugin, but liblto_plugin.so not found\");\n+\t    fatal (\"-fuse-linker-plugin, but liblto_plugin.so not found\");\n \n \t  lto_libgcc_spec = find_a_file (&startfile_prefixes, \"libgcc.a\",\n \t\t\t\t\t R_OK, true);"}, {"sha": "72411b662cca6d8ccfc3f9c8a2abbcbcfa1bf13c", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da18ea94d9c98c5a7d429e3615309fe80f8edbaf/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=da18ea94d9c98c5a7d429e3615309fe80f8edbaf", "patch": "@@ -2102,6 +2102,10 @@ common_handle_option (size_t scode, const char *arg, int value,\n       /* These are no-ops, preserved for backward compatibility.  */\n       break;\n \n+    case OPT_fuse_linker_plugin:\n+      /* No-op. Used by the driver and passed to us because it starts with f.*/\n+      break;\n+\n     default:\n       /* If the flag was handled in a standard way, assume the lack of\n \t processing here is intentional.  */"}]}