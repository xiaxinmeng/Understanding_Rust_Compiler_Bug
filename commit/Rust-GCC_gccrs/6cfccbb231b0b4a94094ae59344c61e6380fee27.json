{"sha": "6cfccbb231b0b4a94094ae59344c61e6380fee27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmY2NiYjIzMWIwYjRhOTQwOTRhZTU5MzQ0YzYxZTYzODBmZWUyNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-02-26T16:02:21Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-02-26T16:02:21Z"}, "message": "[AArch64] Set TREE_TARGET_GLOBALS in aarch64_set_current_function when new tree is the default node to recalculate optab availability\n\n\tPR target/69245\n\t* config/aarch64/aarch64.c (aarch64_set_current_function):\n\tSave/restore target globals when switching to\n\ttarget_option_default_node.\n\n\t* gcc.target/aarch64/pr69245_1.c: New test.\n\nFrom-SVN: r233745", "tree": {"sha": "3b03a463c18e96eca2efc620683dadd67c12a917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b03a463c18e96eca2efc620683dadd67c12a917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cfccbb231b0b4a94094ae59344c61e6380fee27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cfccbb231b0b4a94094ae59344c61e6380fee27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cfccbb231b0b4a94094ae59344c61e6380fee27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cfccbb231b0b4a94094ae59344c61e6380fee27/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac59ad4efc2f01ea4aaae648d59195616e3fa894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac59ad4efc2f01ea4aaae648d59195616e3fa894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac59ad4efc2f01ea4aaae648d59195616e3fa894"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "a34883eb2e8988ab35fc9669a4c20b872462d5bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cfccbb231b0b4a94094ae59344c61e6380fee27", "patch": "@@ -1,3 +1,10 @@\n+2016-02-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/69245\n+\t* config/aarch64/aarch64.c (aarch64_set_current_function):\n+\tSave/restore target globals when switching to\n+\ttarget_option_default_node.\n+\n 2016-02-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/69613"}, {"sha": "3519c7bf3abd5c6016f21930b209f067ac6adc09", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6cfccbb231b0b4a94094ae59344c61e6380fee27", "patch": "@@ -8576,7 +8576,7 @@ aarch64_set_current_function (tree fndecl)\n       if (old_tree == new_tree)\n \t;\n \n-      else if (new_tree && new_tree != target_option_default_node)\n+      else if (new_tree)\n \t{\n \t  cl_target_option_restore (&global_options,\n \t\t\t\t    TREE_TARGET_OPTION (new_tree));"}, {"sha": "99e0f2ff1d6344c0d92a100dd4ad84202b7132f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cfccbb231b0b4a94094ae59344c61e6380fee27", "patch": "@@ -1,3 +1,8 @@\n+2016-02-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/69245\n+\t* gcc.target/aarch64/pr69245_1.c: New test.\n+\n 2016-02-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/69613"}, {"sha": "dcc542b2a8686f1b323433624d4df65ca9e96b36", "filename": "gcc/testsuite/gcc.target/aarch64/pr69245_1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr69245_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cfccbb231b0b4a94094ae59344c61e6380fee27/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr69245_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr69245_1.c?ref=6cfccbb231b0b4a94094ae59344c61e6380fee27", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv8-a+fp -fomit-frame-pointer\" } */\n+\n+#pragma GCC target \"arch=armv8-a+nofp\"\n+long a;\n+static void\n+fn1 ()\n+{\n+}\n+\n+#pragma GCC target \"arch=armv8-a+fp\"\n+float\n+fn2 (float a)\n+{\n+  return a + 2.0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"__addsf3\" } } */"}]}