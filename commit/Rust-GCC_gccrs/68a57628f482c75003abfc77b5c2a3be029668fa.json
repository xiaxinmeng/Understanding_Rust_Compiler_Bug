{"sha": "68a57628f482c75003abfc77b5c2a3be029668fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhNTc2MjhmNDgyYzc1MDAzYWJmYzc3YjVjMmEzYmUwMjk2NjhmYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-09-10T16:15:16Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-09-10T16:15:16Z"}, "message": "Rename Deprecated to WarnRemoved in *.opt files.\n\n2019-09-10  Martin Liska  <mliska@suse.cz>\n\n\t* common.opt: Use newly added WarnRemoved.\n\t* config/aarch64/aarch64.opt: Likewise.\n\t* config/arm/arm.opt: Likewise.\n\t* config/i386/i386.opt: Likewise.\n\t* config/ia64/ia64.opt: Likewise.\n\t* config/rs6000/rs6000.opt: Likewise.\n\t* doc/options.texi: Document WarnRemoved properly.\n\t* dwarf2out.c (gen_producer_string): Handle renamed\n\tOPT_SPECIAL_warn_removed.\n\t* lto-opts.c (lto_write_options): Likewise.\n\t* lto-wrapper.c (merge_and_complain): Likewise.\n\t* opts-common.c (decode_cmdline_option): Likewise.\n\t(prune_options): Likewise.\n\t(read_cmdline_option): Likewise.\n\t(control_warning_option): Likewise.\n\t* opts.c (print_filtered_help): Likewise.\n\t* optc-gen.awk: Parse for WarnRemoved and make usage\n\tof Deprecated an error.\n\t* opth-gen.awk: Generate new OPT_SPECIAL_warn_removed.\n2019-09-10  Martin Liska  <mliska@suse.cz>\n\n\t* c.opt: Use newly added WarnRemoved.\n\nFrom-SVN: r275592", "tree": {"sha": "84c59df749dae34dd7bb119424fe9cd116182766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84c59df749dae34dd7bb119424fe9cd116182766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a57628f482c75003abfc77b5c2a3be029668fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a57628f482c75003abfc77b5c2a3be029668fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a57628f482c75003abfc77b5c2a3be029668fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a57628f482c75003abfc77b5c2a3be029668fa/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef8febf85853e289951278ab5cb7ba6f4e3d2cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8febf85853e289951278ab5cb7ba6f4e3d2cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8febf85853e289951278ab5cb7ba6f4e3d2cd1"}], "stats": {"total": 185, "additions": 105, "deletions": 80}, "files": [{"sha": "1bd7fa29f1b4003fd3e1863ea21259f5ac1315c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -1,3 +1,25 @@\n+2019-09-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* common.opt: Use newly added WarnRemoved.\n+\t* config/aarch64/aarch64.opt: Likewise.\n+\t* config/arm/arm.opt: Likewise.\n+\t* config/i386/i386.opt: Likewise.\n+\t* config/ia64/ia64.opt: Likewise.\n+\t* config/rs6000/rs6000.opt: Likewise.\n+\t* doc/options.texi: Document WarnRemoved properly.\n+\t* dwarf2out.c (gen_producer_string): Handle renamed\n+\tOPT_SPECIAL_warn_removed.\n+\t* lto-opts.c (lto_write_options): Likewise.\n+\t* lto-wrapper.c (merge_and_complain): Likewise.\n+\t* opts-common.c (decode_cmdline_option): Likewise.\n+\t(prune_options): Likewise.\n+\t(read_cmdline_option): Likewise.\n+\t(control_warning_option): Likewise.\n+\t* opts.c (print_filtered_help): Likewise.\n+\t* optc-gen.awk: Parse for WarnRemoved and make usage\n+\tof Deprecated an error.\n+\t* opth-gen.awk: Generate new OPT_SPECIAL_warn_removed.\n+\n 2019-09-10  Arnaud Charlet  <charlet@adacore.com>\n \n \t* doc/install.texi: Fix syntax for html generation."}, {"sha": "2b700c2c4bd689a2d457bfbdebb8670d8d60a0a4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -1,3 +1,7 @@\n+2019-09-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* c.opt: Use newly added WarnRemoved.\n+\n 2019-09-09  Martin Liska  <mliska@suse.cz>\n \n \t* c.opt: Update comment of removed"}, {"sha": "88bbe2e20850ef22b7720dbd03cfe0b6e38b101a", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -428,7 +428,7 @@ C ObjC C++ ObjC++ Var(warn_char_subscripts) Warning LangEnabledBy(C ObjC C++ Obj\n Warn about subscripts whose type is \\\"char\\\".\n \n Wchkp\n-C ObjC C++ ObjC++ Warning Deprecated\n+C ObjC C++ ObjC++ Warning WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n Wclobbered\n@@ -864,7 +864,7 @@ C ObjC Var(warn_missing_prototypes) Warning\n Warn about global functions without prototypes.\n \n Wmudflap\n-C ObjC C++ ObjC++ Deprecated\n+C ObjC C++ ObjC++ WarnRemoved\n \n Wmultichar\n C ObjC C++ ObjC++ CPP(warn_multichar) CppReason(CPP_W_MULTICHAR) Var(cpp_warn_multichar) Init(0) Warning\n@@ -1302,14 +1302,14 @@ C++ ObjC++ Joined RejectNegative Var(aligned_new_threshold) UInteger Init(-1)\n -faligned-new=<N> Use C++17 over-aligned type allocation for alignments greater than N.\n \n fall-virtual\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fallow-parameterless-variadic-functions\n C ObjC Var(flag_allow_parameterless_variadic_functions)\n Allow variadic functions without named parameter.\n \n falt-external-templates\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n No longer supported.\n \n fasm\n@@ -1337,86 +1337,86 @@ Enable the char8_t fundamental type and use it as the type for UTF-8 string\n and character literals.\n \n fcheck-pointer-bounds\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-check-incomplete-type\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-zero-input-bounds-for-main\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-first-field-has-own-bounds\n-C ObjC C++ ObjC++ LTO Deprecated RejectNegative\n+C ObjC C++ ObjC++ LTO WarnRemoved RejectNegative\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-narrow-bounds\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-narrow-to-innermost-array\n-C ObjC C++ ObjC++ LTO Deprecated RejectNegative\n+C ObjC C++ ObjC++ LTO WarnRemoved RejectNegative\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-flexible-struct-trailing-arrays\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-optimize\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n \n fchkp-use-fast-string-functions\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-use-nochk-string-functions\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-use-static-bounds\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-use-static-const-bounds\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-treat-zero-dynamic-size-as-infinite\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-check-read\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-check-write\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-store-bounds\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-instrument-calls\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-instrument-marked-only\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fchkp-use-wrappers\n-C ObjC C++ ObjC++ LTO Deprecated\n+C ObjC C++ ObjC++ LTO WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n static-libmpx\n-Driver Deprecated\n+Driver WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n static-libmpxwrappers\n-Driver Deprecated\n+Driver WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n fcilkplus\n@@ -1507,7 +1507,7 @@ C++ ObjC++ Var(flag_enforce_eh_specs) Init(1)\n Generate code to check exception specifications.\n \n fenum-int-equiv\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fexec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n@@ -1526,10 +1526,10 @@ C++ ObjC++ Var(flag_extern_tls_init) Init(-1)\n Support dynamic initialization of thread-local variables in a different translation unit.\n \n fexternal-templates\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n ffor-scope\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n ffreestanding\n C ObjC C++ ObjC++\n@@ -1548,20 +1548,20 @@ C ObjC Var(flag_gnu89_inline) Init(-1)\n Use traditional GNU semantics for inline functions.\n \n fguiding-decls\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fhandle-exceptions\n C++ ObjC++ Optimization Alias(fexceptions) Warn({%<-fhandle-exceptions%> has been renamed %<-fexceptions%> (and is now on by default)})\n \n fhonor-std\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fhosted\n C ObjC\n Assume normal C execution environment.\n \n fhuge-objects\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n No longer supported.\n \n fimplement-inlines\n@@ -1581,14 +1581,14 @@ C++ ObjC++ Var(flag_new_inheriting_ctors) Init(1)\n Implement C++17 inheriting constructor semantics.\n \n ffriend-injection\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fkeep-inline-dllexport\n C C++ ObjC ObjC++ Var(flag_keep_inline_dllexport) Init(1) Report Condition(TARGET_DLLIMPORT_DECL_ATTRIBUTES)\n Don't emit dllexported inline functions unless needed.\n \n flabels-ok\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n flax-vector-conversions\n C ObjC C++ ObjC++ Var(flag_lax_vector_conversions)\n@@ -1603,19 +1603,19 @@ C ObjC C++ ObjC++ Var(flag_ms_extensions)\n Don't warn about uses of Microsoft extensions.\n \n fmudflap\n-C ObjC C++ ObjC++ Deprecated\n+C ObjC C++ ObjC++ WarnRemoved\n \n fmudflapth\n-C ObjC C++ ObjC++ Deprecated\n+C ObjC C++ ObjC++ WarnRemoved\n \n fmudflapir\n-C ObjC C++ ObjC++ Deprecated\n+C ObjC C++ ObjC++ WarnRemoved\n \n fname-mangling-version-\n-C++ ObjC++ Joined Deprecated\n+C++ ObjC++ Joined WarnRemoved\n \n fnew-abi\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fnew-ttp-matching\n C++ ObjC++ Var(flag_new_ttp)\n@@ -1656,7 +1656,7 @@ fnonansi-builtins\n C++ ObjC++ Var(flag_no_nonansi_builtin, 0)\n \n fnonnull-objects\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fnothrow-opt\n C++ ObjC++ Optimization Var(flag_nothrow_opt)\n@@ -1763,7 +1763,7 @@ ObjC ObjC++ LTO Var(flag_replace_objc_classes)\n Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime.\n \n frepo\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n Removed in GCC 10.  This switch has no effect.\n \n frtti\n@@ -1791,7 +1791,7 @@ C++ ObjC++ Var(flag_sized_deallocation) Init(-1)\n Enable C++14 sized deallocation support.\n \n fsquangle\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fsso-struct=\n C ObjC Joined RejectNegative Enum(sso_struct) Var(default_sso) Init(SSO_NATIVE)\n@@ -1818,7 +1818,7 @@ C++ ObjC++ Optimization Var(flag_strict_enums)\n Assume that values of enumeration type are always within the minimum range of that type.\n \n fstrict-prototype\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fstrong-eval-order\n C++ ObjC++ Common Alias(fstrong-eval-order=, all, none)\n@@ -1858,7 +1858,7 @@ C++ ObjC++ Joined RejectNegative UInteger\n -ftemplate-depth=<number>\tSpecify maximum template instantiation depth.\n \n fthis-is-variable\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n \n fthreadsafe-statics\n C++ ObjC++ Optimization Var(flag_threadsafe_statics) Init(1)\n@@ -1889,11 +1889,11 @@ C++ ObjC++ Var(flag_visibility_ms_compat)\n Changes visibility to match Microsoft Visual Studio by default.\n \n fvtable-gc\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n No longer supported.\n \n fvtable-thunks\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved \n No longer supported.\n \n fweak\n@@ -1909,7 +1909,7 @@ C ObjC C++ ObjC++ Var(flag_working_directory) Init(-1)\n Generate a #line directive pointing at the current working directory.\n \n fxref\n-C++ ObjC++ Deprecated\n+C++ ObjC++ WarnRemoved\n No longer supported.\n \n fzero-link"}, {"sha": "1b9e0f3c8025a3b439f766edcd81db462973037b", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -2992,19 +2992,19 @@ Common Driver Var(dwarf2out_as_locview_support) Init(2)\n Assume assembler support for view in (DWARF2+) .loc directives.\n \n gcoff\n-Common Driver Deprecated\n+Common Driver WarnRemoved\n Does nothing.  Preserved for backward compatibility.\n \n gcoff1\n-Common Driver Deprecated\n+Common Driver WarnRemoved\n Does nothing.  Preserved for backward compatibility.\n \n gcoff2\n-Common Driver Deprecated\n+Common Driver WarnRemoved\n Does nothing.  Preserved for backward compatibility.\n \n gcoff3\n-Common Driver Deprecated\n+Common Driver WarnRemoved\n Does nothing.  Preserved for backward compatibility.\n \n gcolumn-info"}, {"sha": "55d466068b8f9afeb9c228fd85f0ee6f81f1d20e", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -157,7 +157,7 @@ Target RejectNegative Joined Var(aarch64_branch_protection_string) Save\n Use branch-protection features.\n \n msign-return-address=\n-Target Deprecated RejectNegative Joined Enum(aarch64_ra_sign_scope_t) Var(aarch64_ra_sign_scope) Init(AARCH64_FUNCTION_NONE) Save\n+Target WarnRemoved RejectNegative Joined Enum(aarch64_ra_sign_scope_t) Var(aarch64_ra_sign_scope) Init(AARCH64_FUNCTION_NONE) Save\n Select return address signing scope.\n \n Enum"}, {"sha": "452f0cf6d67705d00d9935799ab01c54d95f2330", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -276,7 +276,7 @@ Target Report Var(unaligned_access) Init(2) Save\n Enable unaligned word and halfword accesses to packed data.\n \n mneon-for-64bits\n-Target Deprecated\n+Target WarnRemoved\n This option is deprecated and has no effect.\n \n mslow-flash-data"}, {"sha": "0483bb5ef940451efbf7c8faabe7662366c62280", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -377,7 +377,6 @@ Inline memset/memcpy string operations, but perform inline version only for smal\n \n mintel-syntax\n Target Undocumented Alias(masm=, intel, att) Warn(%<-mintel-syntax%> and %<-mno-intel-syntax%> are deprecated; use %<-masm=intel%> and %<-masm=att%> instead)\n-;; Deprecated\n \n mms-bitfields\n Target Report Mask(MS_BITFIELD_LAYOUT) Save\n@@ -850,8 +849,7 @@ Target Report Mask(ISA_CLWB) Var(ix86_isa_flags) Save\n Support CLWB instruction.\n \n mpcommit\n-Target Deprecated\n-;; Deprecated\n+Target WarnRemoved\n \n mfxsr\n Target Report Mask(ISA_FXSR) Var(ix86_isa_flags) Save\n@@ -967,7 +965,7 @@ Target Report Mask(ISA_RTM) Var(ix86_isa_flags) Save\n Support RTM built-in functions and code generation.\n \n mmpx\n-Target Deprecated\n+Target WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n mmwaitx\n@@ -1015,8 +1013,7 @@ Target RejectNegative Joined Integer Var(ix86_stack_protector_guard_symbol_str)\n Use the given symbol for addressing the stack-protector guard.\n \n mmitigate-rop\n-Target Deprecated\n-;; Deprecated\n+Target WarnRemoved\n \n mgeneral-regs-only\n Target Report RejectNegative Mask(GENERAL_REGS_ONLY) Var(ix86_target_flags) Save"}, {"sha": "07da8a220d7fde268449b799e621f9a1a5a813b7", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -164,10 +164,10 @@ Target Report Var(mflag_sched_spec_control_ldc) Init(0)\n Use simple data speculation check for control speculation.\n \n msched-prefer-non-data-spec-insns\n-Target Deprecated\n+Target WarnRemoved\n \n msched-prefer-non-control-spec-insns\n-Target Deprecated\n+Target WarnRemoved\n \n msched-count-spec-in-critical-path\n Target Report Var(mflag_sched_count_spec_in_critical_path) Init(0)"}, {"sha": "1f37a927703cc0b35ef9967c4bcc534772ec161f", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -149,7 +149,7 @@ mno-mfpgpr\n Target RejectNegative Undocumented Ignore\n \n mmfpgpr\n-Target RejectNegative Undocumented Deprecated\n+Target RejectNegative Undocumented WarnRemoved\n \n maltivec\n Target Report Mask(ALTIVEC) Var(rs6000_isa_flags)\n@@ -180,7 +180,7 @@ mno-string\n Target RejectNegative Undocumented Ignore\n \n mstring\n-Target RejectNegative Undocumented Deprecated\n+Target RejectNegative Undocumented WarnRemoved\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT) Var(rs6000_isa_flags)\n@@ -479,7 +479,7 @@ Target Report Mask(CRYPTO) Var(rs6000_isa_flags)\n Use ISA 2.07 Category:Vector.AES and Category:Vector.SHA2 instructions.\n \n mdirect-move\n-Target Undocumented Mask(DIRECT_MOVE) Var(rs6000_isa_flags) Deprecated\n+Target Undocumented Mask(DIRECT_MOVE) Var(rs6000_isa_flags) WarnRemoved\n \n mhtm\n Target Report Mask(HTM) Var(rs6000_isa_flags)"}, {"sha": "b59f4d39aef8a416b8dd799f84a9e03f6524ac25", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -314,9 +314,9 @@ The state of this option should be stored in variable @var{var}\n (actually a macro for @code{global_options.x_@var{var}}).\n The way that the state is stored depends on the type of option:\n \n-@item Deprecated\n-The option is deprecated and every usage of such option will\n-result in a warning.\n+@item WarnRemoved\n+The option is removed and every usage of such option will\n+result in a warning.  We use it option backward compatibility.\n \n @item Var(@var{var}, @var{set})\n The option controls an integer variable @var{var} and is active when"}, {"sha": "279c6b752ad076d3ef3bbeafda75977db68fbc9d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -24432,7 +24432,7 @@ gen_producer_string (void)\n       case OPT_U:\n       case OPT_SPECIAL_unknown:\n       case OPT_SPECIAL_ignore:\n-      case OPT_SPECIAL_deprecated:\n+      case OPT_SPECIAL_warn_removed:\n       case OPT_SPECIAL_program_name:\n       case OPT_SPECIAL_input_file:\n       case OPT_grecord_gcc_switches:"}, {"sha": "494d9c27a8bd757b3136f888fdedfe019417ac97", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -122,7 +122,7 @@ lto_write_options (void)\n \tcase OPT_dumpbase:\n \tcase OPT_SPECIAL_unknown:\n \tcase OPT_SPECIAL_ignore:\n-\tcase OPT_SPECIAL_deprecated:\n+\tcase OPT_SPECIAL_warn_removed:\n \tcase OPT_SPECIAL_program_name:\n \tcase OPT_SPECIAL_input_file:\n \tcase OPT_dumpdir:"}, {"sha": "5423adb1a9a9e310a392d2e4ce6bb64dab4fa99c", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -247,7 +247,7 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t{\n \tcase OPT_SPECIAL_unknown:\n \tcase OPT_SPECIAL_ignore:\n-\tcase OPT_SPECIAL_deprecated:\n+\tcase OPT_SPECIAL_warn_removed:\n \tcase OPT_SPECIAL_program_name:\n \tcase OPT_SPECIAL_input_file:\n \t  break;"}, {"sha": "15195923a37706f28418a41106dcad71b3bc28f5", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -332,12 +332,14 @@ for (i = 0; i < n_opts; i++) {\n         if (flag_set_p(\"Report\", flags[i]))\n \t\t\t\t  print \"#error Ignored option with Report\"\n       }\n-    else if (flag_set_p(\"Deprecated\", flags[i])) {\n-\t\t\t  alias_data = \"NULL, NULL, OPT_SPECIAL_deprecated\"\n+    else if (flag_set_p(\"Deprecated\", flags[i]))\n+        print \"#error Deprecated was replaced with WarnRemoved\"\n+    else if (flag_set_p(\"WarnRemoved\", flags[i])) {\n+\t\t\t  alias_data = \"NULL, NULL, OPT_SPECIAL_warn_removed\"\n         if (warn_message != \"NULL\")\n-\t\t\t\t  print \"#error Deprecated option with Warn\"\n+\t\t\t\t  print \"#error WarnRemoved option with Warn\"\n         if (flag_set_p(\"Report\", flags[i]))\n-\t\t\t\t  print \"#error Deprecated option with Report\"\n+\t\t\t\t  print \"#error WarnRemoved option with Report\"\n       }\n \t\telse\n \t\t\talias_data = \"NULL, NULL, N_OPTS\""}, {"sha": "e19626a02dfd9e0a586aba6273ea1b027f7a02cd", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -494,7 +494,7 @@ for (i = 0; i < n_opts; i++) {\n print \"  N_OPTS,\"\n print \"  OPT_SPECIAL_unknown,\"\n print \"  OPT_SPECIAL_ignore,\"\n-print \"  OPT_SPECIAL_deprecated,\"\n+print \"  OPT_SPECIAL_warn_removed,\"\n print \"  OPT_SPECIAL_program_name,\"\n print \"  OPT_SPECIAL_input_file\"\n print \"};\""}, {"sha": "b4ec1bd25ac3414eac6e3e391283aa92ffe412bc", "filename": "gcc/opts-common.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -667,7 +667,7 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n       size_t new_opt_index = option->alias_target;\n \n       if (new_opt_index == OPT_SPECIAL_ignore\n-\t  || new_opt_index == OPT_SPECIAL_deprecated)\n+\t  || new_opt_index == OPT_SPECIAL_warn_removed)\n \t{\n \t  gcc_assert (option->alias_arg == NULL);\n \t  gcc_assert (option->neg_alias_arg == NULL);\n@@ -840,7 +840,7 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \tdecoded->canonical_option[i] = NULL;\n     }\n   if (opt_index != OPT_SPECIAL_unknown && opt_index != OPT_SPECIAL_ignore\n-      && opt_index != OPT_SPECIAL_deprecated)\n+      && opt_index != OPT_SPECIAL_warn_removed)\n     {\n       generate_canonical_option (opt_index, arg, value, decoded);\n       if (separate_args > 1)\n@@ -1018,7 +1018,7 @@ prune_options (struct cl_decoded_option **decoded_options,\n \t{\n \tcase OPT_SPECIAL_unknown:\n \tcase OPT_SPECIAL_ignore:\n-\tcase OPT_SPECIAL_deprecated:\n+\tcase OPT_SPECIAL_warn_removed:\n \tcase OPT_SPECIAL_program_name:\n \tcase OPT_SPECIAL_input_file:\n \t  goto keep;\n@@ -1348,7 +1348,7 @@ read_cmdline_option (struct gcc_options *opts,\n   if (decoded->opt_index == OPT_SPECIAL_ignore)\n     return;\n \n-  if (decoded->opt_index == OPT_SPECIAL_deprecated)\n+  if (decoded->opt_index == OPT_SPECIAL_warn_removed)\n     {\n       /* Warn only about positive ignored options.  */\n       if (decoded->value)\n@@ -1653,7 +1653,7 @@ control_warning_option (unsigned int opt_index, int kind, const char *arg,\n \targ = cl_options[opt_index].alias_arg;\n       opt_index = cl_options[opt_index].alias_target;\n     }\n-  if (opt_index == OPT_SPECIAL_ignore || opt_index == OPT_SPECIAL_deprecated)\n+  if (opt_index == OPT_SPECIAL_ignore || opt_index == OPT_SPECIAL_warn_removed)\n     return;\n   if (dc)\n     diagnostic_classify_diagnostic (dc, opt_index, (diagnostic_t) kind, loc);"}, {"sha": "efd75aade6c879f330db1aa7b8ef6b9100862c04", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a57628f482c75003abfc77b5c2a3be029668fa/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=68a57628f482c75003abfc77b5c2a3be029668fa", "patch": "@@ -1541,7 +1541,7 @@ print_filtered_help (unsigned int include_flags,\n \t  if (print_state)\n \t    {\n \t      if (option->alias_target < N_OPTS\n-\t\t  && option->alias_target != OPT_SPECIAL_deprecated\n+\t\t  && option->alias_target != OPT_SPECIAL_warn_removed\n \t\t  && option->alias_target != OPT_SPECIAL_ignore\n \t\t  && option->alias_target != OPT_SPECIAL_input_file\n \t\t  && option->alias_target != OPT_SPECIAL_program_name"}]}