{"sha": "77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdjOWQ1YjRlNmU1ZDliMmRhMTEyNDkxNjgyMTFhNDVkMmU3MTZjOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-05-20T12:41:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-05-20T12:41:45Z"}, "message": "prefetch-5.c: xfail.\n\n\n\t* gcc.dg/tree-ssa/prefetch-5.c: xfail.\n\t* tree-ssa-loop-niter.c (idx_infer_loop_bounds): We can not produce\n\trealistic upper bounds here.\n\nFrom-SVN: r236508", "tree": {"sha": "622f8a14e9ac79e665e7c044d11173797cafb6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/622f8a14e9ac79e665e7c044d11173797cafb6ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/comments", "author": null, "committer": null, "parents": [{"sha": "11f8114b514ed877872b5e61e771bdefb4e6bee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f8114b514ed877872b5e61e771bdefb4e6bee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f8114b514ed877872b5e61e771bdefb4e6bee0"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "1d5bca7131b01a156fbc4fb696af25b762fa5234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "patch": "@@ -1,3 +1,8 @@\n+2016-05-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-ssa-loop-niter.c (idx_infer_loop_bounds): We can not produce\n+\trealistic upper bounds here.\n+\n 2016-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71210"}, {"sha": "9ddd4f9e682259197031a8c4b7da9576b9136931", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "patch": "@@ -1,3 +1,7 @@\n+2016-05-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/tree-ssa/prefetch-5.c: xfail.\n+\n 2016-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71210"}, {"sha": "fc2c267b178ef2364992c213762dd03566a09919", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-5.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c?ref=77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "patch": "@@ -54,5 +54,7 @@ int loop5 (int n, struct tail5 *x)\n   return s;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Issued prefetch\" 2 \"aprefetch\" } } */\n-/* { dg-final { scan-tree-dump-times \"Not prefetching\" 1 \"aprefetch\" } } */\n+/* Until we are able to track likely upper bounds, we can't really work out that\n+   small trailing arrays should not be prefetched.  */\n+/* { dg-final { scan-tree-dump-times \"Issued prefetch\" 2 \"aprefetch\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Not prefetching\" 1 \"aprefetch\" { xfail *-*-* } } } */"}, {"sha": "5afc9b3fdf0284fe9bdae3631e05730d51bff201", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c9d5b4e6e5d9b2da11249168211a45d2e716c8/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "patch": "@@ -3115,7 +3115,6 @@ idx_infer_loop_bounds (tree base, tree *idx, void *dta)\n   tree low, high, type, next;\n   bool sign, upper = true, at_end = false;\n   struct loop *loop = data->loop;\n-  bool reliable = true;\n \n   if (TREE_CODE (base) != ARRAY_REF)\n     return true;\n@@ -3187,14 +3186,14 @@ idx_infer_loop_bounds (tree base, tree *idx, void *dta)\n       && tree_int_cst_compare (next, high) <= 0)\n     return true;\n \n-  /* If access is not executed on every iteration, we must ensure that overlow may\n-     not make the access valid later.  */\n+  /* If access is not executed on every iteration, we must ensure that overlow\n+     may not make the access valid later.  */\n   if (!dominated_by_p (CDI_DOMINATORS, loop->latch, gimple_bb (data->stmt))\n       && scev_probably_wraps_p (initial_condition_in_loop_num (ev, loop->num),\n \t\t\t\tstep, data->stmt, loop, true))\n-    reliable = false;\n+    upper = false;\n \n-  record_nonwrapping_iv (loop, init, step, data->stmt, low, high, reliable, upper);\n+  record_nonwrapping_iv (loop, init, step, data->stmt, low, high, false, upper);\n   return true;\n }\n "}]}