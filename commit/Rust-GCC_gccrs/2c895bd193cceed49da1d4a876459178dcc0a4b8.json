{"sha": "2c895bd193cceed49da1d4a876459178dcc0a4b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM4OTViZDE5M2NjZWVkNDlkYTFkNGE4NzY0NTkxNzhkY2MwYTRiOA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-12-04T18:38:26Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-12-04T18:38:26Z"}, "message": "rtl.h (print_insn_with_notes): Remove prototype.\n\n\t* rtl.h (print_insn_with_notes): Remove prototype.\n\t(rtl_dump_bb_for_graph): New prototype.\n\t* sched-vis.c (print_insn_with_notes): Make static again.  Fix\n\tprinting of notes.\n\t(rtl_dump_bb_for_graph): New function.\n\t* cfghooks.h (struct cfg_hooks) <dump_bb_for_graph>: New hook.\n\t(dump_bb_for_graph): New prototype.\n\t* cfghooks.c (dump_bb_for_graph): New function.\n\t* tree-cfg.c (gimple_cfg_hooks): Register gimple_dump_bb_for_graph\n\tas dump_bb_for_graph hook implementation for GIMPLE.\n\t* cfgrtl.c (rtl_cfg_hooks): Likewise for rtl_dump_bb_for_graph.\n\t(cfg_layout_rtl_cfg_hooks): Likewise.\n\t* graph.c (draw_cfg_node): Don't include sbitmap.h, rtl.h, tree.h,\n\tgimple.h, and gimple-pretty-print.h.\n\t(draw_cfg_node, draw_cfg_node_succ_edges): Use the uniqe function\n\tdefinition number instead of the function declaration UID.\n\t(print_graph_cfg): Take a struct function instead of a tree.\n\tUse the dump_bb_for_graph hook to dump the basic block content.\n\t* graph.h (print_graph_cfg): Update prototype.\n\t* passes.c (execute_function_dump): Update print_graph_cfg call.\n\t* Makefile.in (graph.o): Fixup dependencies.\n\nFrom-SVN: r194157", "tree": {"sha": "35aefaa1ad2d2d303da62a7eaf4a4ed7553419cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35aefaa1ad2d2d303da62a7eaf4a4ed7553419cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c895bd193cceed49da1d4a876459178dcc0a4b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c895bd193cceed49da1d4a876459178dcc0a4b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c895bd193cceed49da1d4a876459178dcc0a4b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c895bd193cceed49da1d4a876459178dcc0a4b8/comments", "author": null, "committer": null, "parents": [{"sha": "66686181a48da06bb81bc897376bbc66ecbb6619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66686181a48da06bb81bc897376bbc66ecbb6619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66686181a48da06bb81bc897376bbc66ecbb6619"}], "stats": {"total": 137, "additions": 90, "deletions": 47}, "files": [{"sha": "32f7a86b453e05fece88c0e36cae69cce1072af0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -1,3 +1,27 @@\n+2012-12-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* rtl.h (print_insn_with_notes): Remove prototype.\n+\t(rtl_dump_bb_for_graph): New prototype.\n+\t* sched-vis.c (print_insn_with_notes): Make static again.  Fix\n+\tprinting of notes.\n+\t(rtl_dump_bb_for_graph): New function.\n+\t* cfghooks.h (struct cfg_hooks) <dump_bb_for_graph>: New hook.\n+\t(dump_bb_for_graph): New prototype.\n+\t* cfghooks.c (dump_bb_for_graph): New function.\n+\t* tree-cfg.c (gimple_cfg_hooks): Register gimple_dump_bb_for_graph\n+\tas dump_bb_for_graph hook implementation for GIMPLE.\n+\t* cfgrtl.c (rtl_cfg_hooks): Likewise for rtl_dump_bb_for_graph.\n+\t(cfg_layout_rtl_cfg_hooks): Likewise.\n+\t* graph.c (draw_cfg_node): Don't include sbitmap.h, rtl.h, tree.h,\n+\tgimple.h, and gimple-pretty-print.h.\n+\t(draw_cfg_node, draw_cfg_node_succ_edges): Use the uniqe function\n+\tdefinition number instead of the function declaration UID.\n+\t(print_graph_cfg): Take a struct function instead of a tree.\n+\tUse the dump_bb_for_graph hook to dump the basic block content.\n+\t* graph.h (print_graph_cfg): Update prototype.\n+\t* passes.c (execute_function_dump): Update print_graph_cfg call.\n+\t* Makefile.in (graph.o): Fixup dependencies.\n+\n 2012-12-04  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_build_builtin_va_list): Set"}, {"sha": "9efc2d3598fabaf15f86a2be2127e91b527f6e6f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -1846,7 +1846,7 @@ gcc.srcextra: gengtype-lex.c\n \t-cp -p $^ $(srcdir)\n \n graph.o: graph.c graph.h $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-    $(DIAGNOSTIC_CORE_H) $(TM_H) $(RTL_H) $(BASIC_BLOCK_H) $(PRETTY_PRINT_H)\n+    $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(PRETTY_PRINT_H) dumpfile.h\n \n sbitmap.o: sbitmap.c sbitmap.h $(CONFIG_H) $(SYSTEM_H) coretypes.h\n sparseset.o: sparseset.c $(SYSTEM_H) sparseset.h $(CONFIG_H)"}, {"sha": "f0957316062540306122bc5d0f13c5c30182ea5d", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -280,6 +280,22 @@ dump_bb (FILE *outf, basic_block bb, int indent, int flags)\n   fputc ('\\n', outf);\n }\n \n+/* Dumps basic block BB to pretty-printer PP, for use as a label of\n+   a DOT graph record-node.  The implementation of this hook is\n+   expected to write the label to the stream that is attached to PP.\n+   Field separators between instructions are pipe characters printed\n+   verbatim.  Instructions should be written with some characters\n+   escaped, using pp_write_text_as_dot_label_to_stream().  */\n+\n+void\n+dump_bb_for_graph (pretty_printer *pp, basic_block bb)\n+{\n+  if (!cfg_hooks->dump_bb_for_graph)\n+    internal_error (\"%s does not support dump_bb_for_graph\",\n+\t\t    cfg_hooks->name);\n+  cfg_hooks->dump_bb_for_graph (pp, bb);\n+}\n+\n /* Dump the complete CFG to FILE.  FLAGS are the TDF_* flags in dumpfile.h.  */\n void\n dump_flow_info (FILE *file, int flags)"}, {"sha": "b2cc3449507fecf21b2fe2c059d622559a8e928d", "filename": "gcc/cfghooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.h?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -29,6 +29,7 @@ struct cfg_hooks\n   /* Debugging.  */\n   int (*verify_flow_info) (void);\n   void (*dump_bb) (FILE *, basic_block, int, int);\n+  void (*dump_bb_for_graph) (pretty_printer *, basic_block);\n \n   /* Basic CFG manipulation.  */\n \n@@ -152,6 +153,8 @@ struct cfg_hooks\n \n extern void verify_flow_info (void);\n extern void dump_bb (FILE *, basic_block, int, int);\n+extern void dump_bb_for_graph (pretty_printer *, basic_block);\n+\n extern edge redirect_edge_and_branch (edge, basic_block);\n extern basic_block redirect_edge_and_branch_force (edge, basic_block);\n extern bool can_remove_branch_p (const_edge);"}, {"sha": "3a18acbbe565dcf0f92c114f01626df2dbc8c459", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -4529,6 +4529,7 @@ struct cfg_hooks rtl_cfg_hooks = {\n   \"rtl\",\n   rtl_verify_flow_info,\n   rtl_dump_bb,\n+  rtl_dump_bb_for_graph,\n   rtl_create_basic_block,\n   rtl_redirect_edge_and_branch,\n   rtl_redirect_edge_and_branch_force,\n@@ -4570,6 +4571,7 @@ struct cfg_hooks cfg_layout_rtl_cfg_hooks = {\n   \"cfglayout mode\",\n   rtl_verify_flow_info_1,\n   rtl_dump_bb,\n+  rtl_dump_bb_for_graph,\n   cfg_layout_create_basic_block,\n   cfg_layout_redirect_edge_and_branch,\n   cfg_layout_redirect_edge_and_branch_force,"}, {"sha": "7fdd41ca00c099b11349088a3749336008305efb", "filename": "gcc/graph.c", "status": "modified", "additions": 13, "deletions": 39, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -24,15 +24,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\" /* for fatal_error */\n-#include \"sbitmap.h\"\n #include \"basic-block.h\"\n-#include \"rtl.h\"\n-#include \"tree.h\"\n-#include \"gimple.h\"\n #include \"graph.h\"\n #include \"dumpfile.h\"\n #include \"pretty-print.h\"\n-#include \"gimple-pretty-print.h\"\n \n /* DOT files with the .dot extension are recognized as document templates\n    by a well-known piece of word processing software out of Redmond, WA.\n@@ -80,10 +75,10 @@ init_graph_slim_pretty_print (FILE *fp)\n   return &graph_slim_pp;\n }\n \n-/* Draw a basic block BB belonging to the function with FNDECL_UID\n+/* Draw a basic block BB belonging to the function with FUNCDEF_NO\n    as its unique number.  */\n static void\n-draw_cfg_node (pretty_printer *pp, int fndecl_uid, basic_block bb)\n+draw_cfg_node (pretty_printer *pp, int funcdef_no, basic_block bb)\n {\n   const char *shape;\n   const char *fillcolor;\n@@ -105,7 +100,7 @@ draw_cfg_node (pretty_printer *pp, int fndecl_uid, basic_block bb)\n   pp_printf (pp,\n \t     \"\\tfn_%d_basic_block_%d \"\n \t     \"[shape=%s,style=filled,fillcolor=%s,label=\\\"\",\n-\t     fndecl_uid, bb->index, shape, fillcolor);\n+\t     funcdef_no, bb->index, shape, fillcolor);\n \n   if (bb->index == ENTRY_BLOCK)\n     pp_string (pp, \"ENTRY\");\n@@ -115,28 +110,7 @@ draw_cfg_node (pretty_printer *pp, int fndecl_uid, basic_block bb)\n     {\n       pp_character (pp, '{');\n       pp_write_text_to_stream (pp);\n-\n-      /* This would be easier if there'd be an IR independent iterator...  */\n-      if (current_ir_type () == IR_GIMPLE)\n-\tgimple_dump_bb_for_graph (pp, bb);\n-      else\n-\t{\n-\t  rtx insn;\n-\t  bool first = true;\n-\n-\t  /* TODO: inter-bb stuff.  */\n-\t  FOR_BB_INSNS (bb, insn)\n-\t    {\n-\t      if (! first)\n-\t\t{\n-\t\t  pp_character (pp, '|');\n-\t\t  pp_write_text_to_stream (pp);\n-\t\t}\n-\t      first = false;\n-\t      print_insn_with_notes (pp, insn);\n-\t      pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/true);\n-\t    }\n-\t}\n+      dump_bb_for_graph (pp, bb);\n       pp_character (pp, '}');\n     }\n \n@@ -145,9 +119,9 @@ draw_cfg_node (pretty_printer *pp, int fndecl_uid, basic_block bb)\n }\n \n /* Draw all successor edges of a basic block BB belonging to the function\n-   with FNDECL_UID as its unique number.  */\n+   with FUNCDEF_NO as its unique number.  */\n static void\n-draw_cfg_node_succ_edges (pretty_printer *pp, int fndecl_uid, basic_block bb)\n+draw_cfg_node_succ_edges (pretty_printer *pp, int funcdef_no, basic_block bb)\n {\n   edge e;\n   edge_iterator ei;\n@@ -181,8 +155,8 @@ draw_cfg_node_succ_edges (pretty_printer *pp, int fndecl_uid, basic_block bb)\n       pp_printf (pp,\n \t\t \"\\tfn_%d_basic_block_%d:s -> fn_%d_basic_block_%d:n \"\n \t\t \"[style=%s,color=%s,weight=%d,constraint=%s];\\n\",\n-\t\t fndecl_uid, e->src->index,\n-\t\t fndecl_uid, e->dest->index,\n+\t\t funcdef_no, e->src->index,\n+\t\t funcdef_no, e->dest->index,\n \t\t style, color, weight,\n \t\t (e->flags & (EDGE_FAKE | EDGE_DFS_BACK)) ? \"false\" : \"true\");\n     }\n@@ -192,10 +166,10 @@ draw_cfg_node_succ_edges (pretty_printer *pp, int fndecl_uid, basic_block bb)\n /* Print a graphical representation of the CFG of function FUN.  */\n \n void\n-print_graph_cfg (const char *base, tree fndecl)\n+print_graph_cfg (const char *base, struct function *fun)\n {\n-  const char *funcname = fndecl_name (fndecl);\n-  int fndecl_uid = DECL_UID (fndecl);\n+  const char *funcname = function_name (fun);\n+  int funcdef_no = fun->funcdef_no;\n   FILE *fp = open_graph_file (base, \"a\");\n   int *rpo = XNEWVEC (int, n_basic_blocks);\n   basic_block bb;\n@@ -212,7 +186,7 @@ print_graph_cfg (const char *base, tree fndecl)\n      of the nodes.  */\n   n = pre_and_rev_post_order_compute (NULL, rpo, true);\n   for (i = 0; i < n; i++)\n-    draw_cfg_node (pp, fndecl_uid, BASIC_BLOCK (rpo[i]));\n+    draw_cfg_node (pp, funcdef_no, BASIC_BLOCK (rpo[i]));\n \n   /* Draw all edges at the end to get subgraphs right for GraphViz,\n      which requires nodes to be defined before edges to cluster\n@@ -224,7 +198,7 @@ print_graph_cfg (const char *base, tree fndecl)\n      for ourselves is also not desirable.)  */\n   mark_dfs_back_edges ();\n   FOR_ALL_BB (bb)\n-    draw_cfg_node_succ_edges (pp, fndecl_uid, bb);\n+    draw_cfg_node_succ_edges (pp, funcdef_no, bb);\n \n   pp_printf (pp, \"\\t}\\n\");\n   pp_flush (pp);"}, {"sha": "97bb177dd16c1fa56aaa625e66b5de5ae0b5d9be", "filename": "gcc/graph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.h?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_GRAPH_H\n #define GCC_GRAPH_H\n \n-extern void print_graph_cfg (const char *, tree);\n+extern void print_graph_cfg (const char *, struct function *);\n extern void clean_graph_dump_file (const char *);\n extern void finish_graph_dump_file (const char *);\n "}, {"sha": "b2c4c17b1e25d8927fc5b189f58cf7e05ee22d1d", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -1770,7 +1770,7 @@ execute_function_dump (void *data ATTRIBUTE_UNUSED)\n \n       if ((cfun->curr_properties & PROP_cfg)\n \t  && (dump_flags & TDF_GRAPH))\n-\tprint_graph_cfg (dump_file_name, cfun->decl);\n+\tprint_graph_cfg (dump_file_name, cfun);\n     }\n }\n "}, {"sha": "213e0f55814e01e566bd6041797d671197b0d94f", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -2606,7 +2606,7 @@ extern void dump_rtl_slim (FILE *, const_rtx, const_rtx, int, int);\n extern void print_value (pretty_printer *, const_rtx, int);\n extern void print_pattern (pretty_printer *, const_rtx, int);\n extern void print_insn (pretty_printer *, const_rtx, int);\n-extern void print_insn_with_notes (pretty_printer *, const_rtx);\n+extern void rtl_dump_bb_for_graph (pretty_printer *, basic_block);\n extern const char *str_pattern_slim (const_rtx);\n \n /* In function.c */"}, {"sha": "bdb166e53859696538f7064f60ee62dff38743e9", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -716,10 +716,10 @@ print_insn (pretty_printer *pp, const_rtx x, int verbose)\n     }\n }\t\t\t\t/* print_insn */\n \n-/* Prerry-print a slim dump of X (an insn) to PP, including any register\n+/* Pretty-print a slim dump of X (an insn) to PP, including any register\n    note attached to the instruction.  */\n \n-void\n+static void\n print_insn_with_notes (pretty_printer *pp, const_rtx x)\n {\n   pp_string (pp, print_rtx_head);\n@@ -728,9 +728,9 @@ print_insn_with_notes (pretty_printer *pp, const_rtx x)\n   if (INSN_P (x) && REG_NOTES (x))\n     for (rtx note = REG_NOTES (x); note; note = XEXP (note, 1))\n       {\n-\tpp_printf (pp, \"%s      %s\", print_rtx_head,\n+\tpp_printf (pp, \"%s      %s \", print_rtx_head,\n \t\t   GET_REG_NOTE_NAME (REG_NOTE_KIND (note)));\n-        print_pattern (pp, XEXP (note, 0), 1);\n+\tprint_pattern (pp, XEXP (note, 0), 1);\n \tpp_newline (pp);\n       }\n }\n@@ -800,6 +800,29 @@ dump_rtl_slim (FILE *f, const_rtx first, const_rtx last,\n   pp_flush (pp);\n }\n \n+/* Dumps basic block BB to pretty-printer PP in slim form and without and\n+   no indentation, for use as a label of a DOT graph record-node.  */\n+\n+void\n+rtl_dump_bb_for_graph (pretty_printer *pp, basic_block bb)\n+{\n+  rtx insn;\n+  bool first = true;\n+\n+  /* TODO: inter-bb stuff.  */\n+  FOR_BB_INSNS (bb, insn)\n+    {\n+      if (! first)\n+\t{\n+\t  pp_character (pp, '|');\n+\t  pp_write_text_to_stream (pp);\n+\t}\n+      first = false;\n+      print_insn_with_notes (pp, insn);\n+      pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/true);\n+    }\n+}\n+\n /* Pretty-print pattern X of some insn in non-verbose mode.\n    Return a string pointer to the pretty-printer buffer.\n "}, {"sha": "be89320559f7ba1a09bda42fbd68f8007c4412d6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c895bd193cceed49da1d4a876459178dcc0a4b8/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2c895bd193cceed49da1d4a876459178dcc0a4b8", "patch": "@@ -7620,6 +7620,7 @@ struct cfg_hooks gimple_cfg_hooks = {\n   \"gimple\",\n   gimple_verify_flow_info,\n   gimple_dump_bb,\t\t/* dump_bb  */\n+  gimple_dump_bb_for_graph,\t/* dump_bb_for_graph  */\n   create_bb,\t\t\t/* create_basic_block  */\n   gimple_redirect_edge_and_branch, /* redirect_edge_and_branch  */\n   gimple_redirect_edge_and_branch_force, /* redirect_edge_and_branch_force  */"}]}