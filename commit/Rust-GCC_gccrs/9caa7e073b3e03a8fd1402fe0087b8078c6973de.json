{"sha": "9caa7e073b3e03a8fd1402fe0087b8078c6973de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNhYTdlMDczYjNlMDNhOGZkMTQwMmZlMDA4N2I4MDc4YzY5NzNkZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-05-10T10:48:50Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-05-10T10:48:50Z"}, "message": "re PR fortran/68846 (Pointer function as LValue doesn't work when the assignment regards a dummy argument.)\n\n2018-05-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/68846\n\tPR fortran/70864\n\t* resolve.c (get_temp_from_expr): The temporary must not have\n\tdummy or intent attributes.\n\n2018-05-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/68846\n\t* gfortran.dg/temporary_3.f90 : New test.\n\n\tPR fortran/70864\n\t* gfortran.dg/temporary_2.f90 : New test.\n\nFrom-SVN: r260113", "tree": {"sha": "5462f5826baf175356cf39d9559745de624efac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5462f5826baf175356cf39d9559745de624efac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9caa7e073b3e03a8fd1402fe0087b8078c6973de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9caa7e073b3e03a8fd1402fe0087b8078c6973de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9caa7e073b3e03a8fd1402fe0087b8078c6973de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9caa7e073b3e03a8fd1402fe0087b8078c6973de/comments", "author": null, "committer": null, "parents": [{"sha": "84ec5aea4833897a100ca6a3a257ebab23b44f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ec5aea4833897a100ca6a3a257ebab23b44f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ec5aea4833897a100ca6a3a257ebab23b44f93"}], "stats": {"total": 179, "additions": 178, "deletions": 1}, "files": [{"sha": "34d776b89dd7a9b004c0198c2d2891051cb293c3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9caa7e073b3e03a8fd1402fe0087b8078c6973de", "patch": "@@ -1,3 +1,10 @@\n+2018-05-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/68846\n+\tPR fortran/70864\n+\t* resolve.c (get_temp_from_expr): The temporary must not have\n+\tdummy or intent attributes.\n+\n 2018-05-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/54613"}, {"sha": "913320cc669b579653c96eb72020ed0e6ea50a08", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9caa7e073b3e03a8fd1402fe0087b8078c6973de", "patch": "@@ -10503,6 +10503,8 @@ get_temp_from_expr (gfc_expr *e, gfc_namespace *ns)\n   tmp->n.sym->attr.function = 0;\n   tmp->n.sym->attr.result = 0;\n   tmp->n.sym->attr.flavor = FL_VARIABLE;\n+  tmp->n.sym->attr.dummy = 0;\n+  tmp->n.sym->attr.intent = INTENT_UNKNOWN;\n \n   if (as)\n     {"}, {"sha": "694857b218ce4112d04ec804cb1142a6dc6db00c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9caa7e073b3e03a8fd1402fe0087b8078c6973de", "patch": "@@ -1,3 +1,11 @@\n+2018-05-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/68846\n+\t* gfortran.dg/temporary_3.f90 : New test.\n+\n+\tPR fortran/70864\n+\t* gfortran.dg/temporary_2.f90 : New test.\n+\n 2018-05-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.dg/vmx/extract-be-order.c: Delete testcase.\n@@ -210,7 +218,7 @@\n \n 2018-05-06  Andrew Sadek  <andrew.sadek.se@gmail.com>\n \n-\t* gcc.target/microblaze/others/picdtr.c: Add test for \n+\t* gcc.target/microblaze/others/picdtr.c: Add test for\n \t -fPIE -mpic-data-is-text-relative.\n \n 2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>"}, {"sha": "0598ea54f280a529ec1721b3e3f80adbdb68fc7e", "filename": "gcc/testsuite/gfortran.dg/temporary_2.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_2.f90?ref=9caa7e073b3e03a8fd1402fe0087b8078c6973de", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do compile }\n+!\n+! Tests the fix for PR70864 in which compiler generated temporaries received\n+! the attributes of a dummy argument. This is the original testcase.\n+! The simplified version by Gerhard Steinmetz is gratefully acknowledged.\n+!\n+! Contributed by Weiqun Zhang  <weiqun.zhang@gmail.com>\n+!\n+module boxarray_module\n+  implicit none\n+  type :: BoxArray\n+     integer     :: i = 0\n+   contains\n+     procedure ::                  boxarray_assign\n+     generic   :: assignment(=) => boxarray_assign\n+  end type BoxArray\n+contains\n+  subroutine boxarray_assign (dst, src)\n+    class(BoxArray), intent(inout) :: dst\n+    type (BoxArray), intent(in   ) :: src\n+    dst%i =src%i\n+  end subroutine boxarray_assign\n+end module boxarray_module\n+\n+module multifab_module\n+  use boxarray_module\n+  implicit none\n+  type, public   :: MultiFab\n+     type(BoxArray) :: ba\n+  end type MultiFab\n+contains\n+  subroutine multifab_swap(mf1, mf2)\n+    type(MultiFab), intent(inout) :: mf1, mf2\n+    type(MultiFab) :: tmp\n+    tmp = mf1\n+    mf1 = mf2 ! Generated an ICE in trans-decl.c.\n+    mf2 = tmp\n+  end subroutine multifab_swap\n+end module multifab_module"}, {"sha": "84b300a38d9b0e893c7df3e69e7628681d852b77", "filename": "gcc/testsuite/gfortran.dg/temporary_3.f90", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caa7e073b3e03a8fd1402fe0087b8078c6973de/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftemporary_3.f90?ref=9caa7e073b3e03a8fd1402fe0087b8078c6973de", "patch": "@@ -0,0 +1,121 @@\n+! { dg-do run }\n+!\n+! Tests the fix for PR68846 in which compiler generated temporaries were\n+! receiving the attributes of dummy arguments. This test is the original.\n+! The simplified versions by Gerhard Steinmetz are gratefully acknowledged.\n+!\n+! Contributed by Mirco Valentini  <mirco.valentini@polimi.it>\n+!\n+MODULE grid\n+  IMPLICIT NONE\n+  PRIVATE\n+  REAL(KIND=8), DIMENSION(100,100), TARGET :: WORKSPACE\n+  TYPE, PUBLIC :: grid_t\n+    REAL(KIND=8), DIMENSION(:,:), POINTER :: P => NULL ()\n+  END TYPE\n+  PUBLIC :: INIT\n+CONTAINS\n+  SUBROUTINE INIT (DAT)\n+    IMPLICIT NONE\n+    TYPE(grid_t), INTENT(INOUT) :: DAT\n+    INTEGER :: I, J\n+    DAT%P => WORKSPACE\n+    DO I = 1, 100\n+      DO J = 1, 100\n+        DAT%P(I,J) = REAL ((I-1)*100+J-1)\n+      END DO\n+    ENDDO\n+  END SUBROUTINE INIT\n+END MODULE grid\n+\n+MODULE subgrid\n+  USE :: grid, ONLY: grid_t\n+  IMPLICIT NONE\n+  PRIVATE\n+  TYPE, PUBLIC :: subgrid_t\n+    INTEGER, DIMENSION(4) :: range\n+    CLASS(grid_t), POINTER    :: grd => NULL ()\n+  CONTAINS\n+    PROCEDURE, PASS :: INIT => LVALUE_INIT\n+    PROCEDURE, PASS :: JMP => LVALUE_JMP\n+  END TYPE\n+CONTAINS\n+  SUBROUTINE LVALUE_INIT (HOBJ, P, D)\n+    IMPLICIT NONE\n+    CLASS(subgrid_t),      INTENT(INOUT) :: HOBJ\n+    TYPE(grid_t), POINTER, INTENT(INOUT) :: P\n+    INTEGER, DIMENSION(4), INTENT(IN)    :: D\n+    HOBJ%range = D\n+    HOBJ%grd => P\n+  END SUBROUTINE LVALUE_INIT\n+\n+  FUNCTION LVALUE_JMP(HOBJ, I, J) RESULT(P)\n+    IMPLICIT NONE\n+    CLASS(subgrid_t), INTENT(INOUT) :: HOBJ\n+    INTEGER, INTENT(IN) :: I, J\n+    REAL(KIND=8), POINTER :: P\n+    P => HOBJ%grd%P(HOBJ%range(1)+I-1, HOBJ%range(3)+J-1)\n+  END FUNCTION LVALUE_JMP\n+END MODULE subgrid\n+\n+MODULE geom\n+  IMPLICIT NONE\n+CONTAINS\n+  SUBROUTINE fillgeom_03( subgrid, value  )\n+    USE :: subgrid, ONLY: subgrid_t\n+    IMPLICIT NONE\n+    TYPE(subgrid_T), intent(inout) :: subgrid\n+    REAL(kind=8),    intent(in) :: value\n+    INTEGER :: I, J\n+    DO i = 1, 3\n+      DO J = 1, 4\n+        subgrid%jmp(i,j) = value ! Dummy argument '_F.DA0' with INTENT(IN)\n+                                 ! in pointer association context or ICE\n+                                 ! in trans_decl.c, depending on INTENT of\n+                                 ! 'VALUE'\n+      ENDDO\n+    ENDDO\n+  END SUBROUTINE fillgeom_03\n+END MODULE geom\n+\n+PROGRAM test_lvalue\n+  USE :: grid\n+  USE :: subgrid\n+  USE :: geom\n+  IMPLICIT NONE\n+  TYPE(grid_t), POINTER :: GRD => NULL()\n+  TYPE(subgrid_t) :: STENCIL\n+  REAL(KIND=8), POINTER :: real_tmp_ptr\n+  REAL(KIND=8), DIMENSION(10,10), TARGET :: AA\n+  REAL(KIND=8), DIMENSION(3,4) :: VAL\n+  INTEGER :: I, J, chksum\n+  integer, parameter :: r1 = 50\n+  integer, parameter :: r2 = 52\n+  integer, parameter :: r3 = 50\n+  integer, parameter :: r4 = 53\n+  DO I = 1, 3\n+    DO J = 1, 4\n+      VAL(I,J) = dble(I)*dble(J)\n+    ENDDO\n+  ENDDO\n+\n+  ALLOCATE (GRD)\n+  CALL INIT (GRD)\n+  chksum = sum([([((i-1)*100 + j -1, j=1,100)], i = 1,100)])\n+  if (int(sum(grd%p)) .ne. chksum) stop 1\n+\n+  CALL STENCIL%INIT (GRD, [r1, r2, r3, r4])\n+  if (.not.associated (stencil%grd, grd)) stop 2\n+  if (int(sum(grd%p)) .ne. chksum) stop 3\n+\n+  CALL fillgeom_03(stencil, 42.0_8)\n+  if (any (int (grd%p(r1:r2,r3:r4)) .ne. 42)) stop 4\n+\n+  chksum = chksum - sum([([((i - 1) * 100 + j -1, j=r3,r4)], i = r1,r2)]) &\n+           + (r4 - r3 + 1) * (r2 - r1 +1) * 42\n+  if (int(sum(grd%p)) .ne. chksum) stop 5\n+\n+  deallocate (grd)\n+END PROGRAM test_lvalue\n+\n+"}]}