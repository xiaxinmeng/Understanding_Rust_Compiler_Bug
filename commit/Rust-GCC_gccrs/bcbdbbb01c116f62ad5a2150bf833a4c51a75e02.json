{"sha": "bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiZGJiYjAxYzExNmY2MmFkNWEyMTUwYmY4MzNhNGM1MWE3NWUwMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-07-07T21:12:49Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-07-07T21:12:49Z"}, "message": "arm.c (arm_init_neon_builtins): Register built-in types immediately after creating them.\n\n\t* config/arm/arm.c (arm_init_neon_builtins): Register built-in\n\ttypes immediately after creating them.\n\nFrom-SVN: r137601", "tree": {"sha": "ac29a93b87360bfd52241e6f5b46fb522c2d6114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac29a93b87360bfd52241e6f5b46fb522c2d6114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cef5bf51b5725fec3560dfc0f39011d4009138e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cef5bf51b5725fec3560dfc0f39011d4009138e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cef5bf51b5725fec3560dfc0f39011d4009138e"}], "stats": {"total": 81, "additions": 43, "deletions": 38}, "files": [{"sha": "11e6206541b754cddfcd0c16013034cab91c3ca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "patch": "@@ -1,3 +1,8 @@\n+2008-07-07  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_init_neon_builtins): Register built-in\n+\ttypes immediately after creating them.\n+\n 2008-07-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arm/aout.h (DOLLARS_IN_IDENTIFIERS): Remove."}, {"sha": "0ce531bb80284afbf05350de18e87e30200cc643", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "patch": "@@ -15094,6 +15094,24 @@ arm_init_neon_builtins (void)\n   TYPE_PRECISION (neon_float_type_node) = FLOAT_TYPE_SIZE;\n   layout_type (neon_float_type_node);\n \n+  /* Define typedefs which exactly correspond to the modes we are basing vector\n+     types on.  If you change these names you'll need to change\n+     the table used by arm_mangle_type too.  */\n+  (*lang_hooks.types.register_builtin_type) (neon_intQI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_qi\");\n+  (*lang_hooks.types.register_builtin_type) (neon_intHI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_hi\");\n+  (*lang_hooks.types.register_builtin_type) (neon_intSI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_si\");\n+  (*lang_hooks.types.register_builtin_type) (neon_float_type_node,\n+\t\t\t\t\t     \"__builtin_neon_sf\");\n+  (*lang_hooks.types.register_builtin_type) (neon_intDI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_di\");\n+  (*lang_hooks.types.register_builtin_type) (neon_polyQI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_poly8\");\n+  (*lang_hooks.types.register_builtin_type) (neon_polyHI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_poly16\");\n+\n   intQI_pointer_node = build_pointer_type (neon_intQI_type_node);\n   intHI_pointer_node = build_pointer_type (neon_intHI_type_node);\n   intSI_pointer_node = build_pointer_type (neon_intSI_type_node);\n@@ -15146,12 +15164,32 @@ arm_init_neon_builtins (void)\n   intUSI_type_node = make_unsigned_type (GET_MODE_PRECISION (SImode));\n   intUDI_type_node = make_unsigned_type (GET_MODE_PRECISION (DImode));\n \n+  (*lang_hooks.types.register_builtin_type) (intUQI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_uqi\");\n+  (*lang_hooks.types.register_builtin_type) (intUHI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_uhi\");\n+  (*lang_hooks.types.register_builtin_type) (intUSI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_usi\");\n+  (*lang_hooks.types.register_builtin_type) (intUDI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_udi\");\n+\n   /* Opaque integer types for structures of vectors.  */\n   intEI_type_node = make_signed_type (GET_MODE_PRECISION (EImode));\n   intOI_type_node = make_signed_type (GET_MODE_PRECISION (OImode));\n   intCI_type_node = make_signed_type (GET_MODE_PRECISION (CImode));\n   intXI_type_node = make_signed_type (GET_MODE_PRECISION (XImode));\n \n+  (*lang_hooks.types.register_builtin_type) (intTI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_ti\");\n+  (*lang_hooks.types.register_builtin_type) (intEI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_ei\");\n+  (*lang_hooks.types.register_builtin_type) (intOI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_oi\");\n+  (*lang_hooks.types.register_builtin_type) (intCI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_ci\");\n+  (*lang_hooks.types.register_builtin_type) (intXI_type_node,\n+\t\t\t\t\t     \"__builtin_neon_xi\");\n+\n   /* Pointers to vector types.  */\n   V8QI_pointer_node = build_pointer_type (V8QI_type_node);\n   V4HI_pointer_node = build_pointer_type (V4HI_type_node);\n@@ -15195,44 +15233,6 @@ arm_init_neon_builtins (void)\n     build_function_type_list (void_type_node, V2DI_pointer_node, V2DI_type_node,\n \t\t\t      V2DI_type_node, NULL);\n \n-  /* Define typedefs which exactly correspond to the modes we are basing vector\n-     types on.  If you change these names you'll need to change\n-     the table used by arm_mangle_type too.  */\n-  (*lang_hooks.types.register_builtin_type) (neon_intQI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_qi\");\n-  (*lang_hooks.types.register_builtin_type) (neon_intHI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_hi\");\n-  (*lang_hooks.types.register_builtin_type) (neon_intSI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_si\");\n-  (*lang_hooks.types.register_builtin_type) (neon_float_type_node,\n-\t\t\t\t\t     \"__builtin_neon_sf\");\n-  (*lang_hooks.types.register_builtin_type) (neon_intDI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_di\");\n-\n-  (*lang_hooks.types.register_builtin_type) (neon_polyQI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_poly8\");\n-  (*lang_hooks.types.register_builtin_type) (neon_polyHI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_poly16\");\n-  (*lang_hooks.types.register_builtin_type) (intUQI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_uqi\");\n-  (*lang_hooks.types.register_builtin_type) (intUHI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_uhi\");\n-  (*lang_hooks.types.register_builtin_type) (intUSI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_usi\");\n-  (*lang_hooks.types.register_builtin_type) (intUDI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_udi\");\n-\n-  (*lang_hooks.types.register_builtin_type) (intTI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_ti\");\n-  (*lang_hooks.types.register_builtin_type) (intEI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_ei\");\n-  (*lang_hooks.types.register_builtin_type) (intOI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_oi\");\n-  (*lang_hooks.types.register_builtin_type) (intCI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_ci\");\n-  (*lang_hooks.types.register_builtin_type) (intXI_type_node,\n-\t\t\t\t\t     \"__builtin_neon_xi\");\n-\n   dreg_types[0] = V8QI_type_node;\n   dreg_types[1] = V4HI_type_node;\n   dreg_types[2] = V2SI_type_node;"}]}