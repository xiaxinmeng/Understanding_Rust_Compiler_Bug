{"sha": "49460951b5f73381b138621cbae78f45847ea079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0NjA5NTFiNWY3MzM4MWIxMzg2MjFjYmFlNzhmNDU4NDdlYTA3OQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-12-03T15:16:34Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-12-03T15:16:34Z"}, "message": "arm.c (arm_legitimate_index_p): Split VALID_NEON_QREG_MODE and VALID_NEON_DREG_MODE cases.\n\ngcc/\n\t* config/arm/arm.c (arm_legitimate_index_p): Split\n\tVALID_NEON_QREG_MODE and VALID_NEON_DREG_MODE cases.  Permit\n\tslightly larger constants in the latter case.\n\t(thumb2_legitimate_index_p): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/arm/neon-offset-1.c: New test.\n\nFrom-SVN: r167430", "tree": {"sha": "b0bdb2ffc208914b4bc98640d1cf0b2cdd49d493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0bdb2ffc208914b4bc98640d1cf0b2cdd49d493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49460951b5f73381b138621cbae78f45847ea079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49460951b5f73381b138621cbae78f45847ea079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49460951b5f73381b138621cbae78f45847ea079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49460951b5f73381b138621cbae78f45847ea079/comments", "author": null, "committer": null, "parents": [{"sha": "dd9f93dc90f3ddf7817a2db21795100e8f646db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9f93dc90f3ddf7817a2db21795100e8f646db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9f93dc90f3ddf7817a2db21795100e8f646db7"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "5fb26aedef8c8b482347eb533bc75dd6d593b127", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49460951b5f73381b138621cbae78f45847ea079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49460951b5f73381b138621cbae78f45847ea079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49460951b5f73381b138621cbae78f45847ea079", "patch": "@@ -1,3 +1,10 @@\n+2010-12-03  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_legitimate_index_p): Split\n+\tVALID_NEON_QREG_MODE and VALID_NEON_DREG_MODE cases.  Permit\n+\tslightly larger constants in the latter case.\n+\t(thumb2_legitimate_index_p): Likewise.\n+\n 2010-12-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* common.opt (N, Q, Qn, Qy, Z, n, r, s, t): New options."}, {"sha": "88c43e3c3a9cc59992d4125556a00711d38ae91f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49460951b5f73381b138621cbae78f45847ea079/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49460951b5f73381b138621cbae78f45847ea079/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=49460951b5f73381b138621cbae78f45847ea079", "patch": "@@ -5649,13 +5649,25 @@ arm_legitimate_index_p (enum machine_mode mode, rtx index, RTX_CODE outer,\n \t    && INTVAL (index) > -1024\n \t    && (INTVAL (index) & 3) == 0);\n \n-  if (TARGET_NEON\n-      && (VALID_NEON_DREG_MODE (mode) || VALID_NEON_QREG_MODE (mode)))\n+  /* For quad modes, we restrict the constant offset to be slightly less\n+     than what the instruction format permits.  We do this because for\n+     quad mode moves, we will actually decompose them into two separate\n+     double-mode reads or writes.  INDEX must therefore be a valid\n+     (double-mode) offset and so should INDEX+8.  */\n+  if (TARGET_NEON && VALID_NEON_QREG_MODE (mode))\n     return (code == CONST_INT\n \t    && INTVAL (index) < 1016\n \t    && INTVAL (index) > -1024\n \t    && (INTVAL (index) & 3) == 0);\n \n+  /* We have no such constraint on double mode offsets, so we permit the\n+     full range of the instruction format.  */\n+  if (TARGET_NEON && VALID_NEON_DREG_MODE (mode))\n+    return (code == CONST_INT\n+\t    && INTVAL (index) < 1024\n+\t    && INTVAL (index) > -1024\n+\t    && (INTVAL (index) & 3) == 0);\n+\n   if (TARGET_REALLY_IWMMXT && VALID_IWMMXT_REG_MODE (mode))\n     return (code == CONST_INT\n \t    && INTVAL (index) < 1024\n@@ -5769,13 +5781,25 @@ thumb2_legitimate_index_p (enum machine_mode mode, rtx index, int strict_p)\n \t\t&& (INTVAL (index) & 3) == 0);\n     }\n \n-  if (TARGET_NEON\n-      && (VALID_NEON_DREG_MODE (mode) || VALID_NEON_QREG_MODE (mode)))\n+  /* For quad modes, we restrict the constant offset to be slightly less\n+     than what the instruction format permits.  We do this because for\n+     quad mode moves, we will actually decompose them into two separate\n+     double-mode reads or writes.  INDEX must therefore be a valid\n+     (double-mode) offset and so should INDEX+8.  */\n+  if (TARGET_NEON && VALID_NEON_QREG_MODE (mode))\n     return (code == CONST_INT\n \t    && INTVAL (index) < 1016\n \t    && INTVAL (index) > -1024\n \t    && (INTVAL (index) & 3) == 0);\n \n+  /* We have no such constraint on double mode offsets, so we permit the\n+     full range of the instruction format.  */\n+  if (TARGET_NEON && VALID_NEON_DREG_MODE (mode))\n+    return (code == CONST_INT\n+\t    && INTVAL (index) < 1024\n+\t    && INTVAL (index) > -1024\n+\t    && (INTVAL (index) & 3) == 0);\n+\n   if (arm_address_register_rtx_p (index, strict_p)\n       && (GET_MODE_SIZE (mode) <= 4))\n     return 1;"}, {"sha": "c75ed75e177acaaf2c9db98976f079bc573cccbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49460951b5f73381b138621cbae78f45847ea079/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49460951b5f73381b138621cbae78f45847ea079/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49460951b5f73381b138621cbae78f45847ea079", "patch": "@@ -1,3 +1,7 @@\n+2010-12-03  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gcc.target/arm/neon-offset-1.c: New test.\n+\n 2010-12-03  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/45354"}, {"sha": "91dde6a20d9901ebc0a8edda776c72b702278794", "filename": "gcc/testsuite/gcc.target/arm/neon-offset-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49460951b5f73381b138621cbae78f45847ea079/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-offset-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49460951b5f73381b138621cbae78f45847ea079/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-offset-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-offset-1.c?ref=49460951b5f73381b138621cbae78f45847ea079", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include <arm_neon.h>\n+\n+void neon_internal_error(int32x4_t *dst, char *src)\n+{\n+  *dst = *(int32x4_t *)(src+1008);\n+}"}]}