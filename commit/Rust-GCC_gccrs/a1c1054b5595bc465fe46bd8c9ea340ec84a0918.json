{"sha": "a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjMTA1NGI1NTk1YmM0NjVmZTQ2YmQ4YzllYTM0MGVjODRhMDkxOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-12-24T16:25:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-24T16:25:49Z"}, "message": "big_tuples.cc: New.\n\n2007-12-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/20_util/tuple/cons/big_tuples.cc: New.\n\t* testsuite/20_util/tuple/cons/constructor.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/assignment.cc: Likewise.\n\t* testsuite/20_util/tuple/tuple_element.cc: Likewise.\n\t* testsuite/20_util/tuple/tuple_size.cc: Likewise.\n\t* testsuite/20_util/tuple/comparison_operators/comparisons.cc:\n\tLikewise.\n\t* testsuite/20_util/tuple/element_access/get.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/23978.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/tie.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/make_tuple.cc: Likewise.\n\n\t* testsuite/20_util/tuple/requirements/explicit_instantiation.cc:\n\tFix header file and namespace.\n\n\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Minor tweaks.\n\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/tuple_element.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/tuple_size.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/comparison_operators/\n\tcomparisons.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/element_access/get.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:\n\tLikewise.\n\nFrom-SVN: r131159", "tree": {"sha": "d67b5b32eb556d73b2bac6688fb510969f277c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d67b5b32eb556d73b2bac6688fb510969f277c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/comments", "author": null, "committer": null, "parents": [{"sha": "045fcc24c9ae0b3b2d0dee88f9b07327dae90f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045fcc24c9ae0b3b2d0dee88f9b07327dae90f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/045fcc24c9ae0b3b2d0dee88f9b07327dae90f6c"}], "stats": {"total": 589, "additions": 578, "deletions": 11}, "files": [{"sha": "f88476a4198440f420139da40d26ceb2e5dd0a03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,3 +1,32 @@\n+2007-12-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/20_util/tuple/cons/big_tuples.cc: New.\n+\t* testsuite/20_util/tuple/cons/constructor.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/assignment.cc: Likewise.\n+\t* testsuite/20_util/tuple/tuple_element.cc: Likewise.\n+\t* testsuite/20_util/tuple/tuple_size.cc: Likewise.\n+\t* testsuite/20_util/tuple/comparison_operators/comparisons.cc:\n+\tLikewise.\n+\t* testsuite/20_util/tuple/element_access/get.cc: Likewise.\n+\t* testsuite/20_util/tuple/creation_functions/23978.cc: Likewise.\n+\t* testsuite/20_util/tuple/creation_functions/tie.cc: Likewise.\n+\t* testsuite/20_util/tuple/creation_functions/make_tuple.cc: Likewise.\n+\n+\t* testsuite/20_util/tuple/requirements/explicit_instantiation.cc:\n+\tFix header file and namespace.\n+\n+\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Minor tweaks.\n+\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/tuple_element.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/tuple_size.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/comparison_operators/\n+\tcomparisons.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/element_access/get.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:\n+\tLikewise.\n+\n 2007-12-24  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* testsuite/tr1/2_general_utilities/shared_ptr/thread/"}, {"sha": "847785cb02b84565e08fdf4ff51bf5d1597a83fb", "filename": "libstdc++-v3/testsuite/20_util/tuple/comparison_operators/comparisons.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,50 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+bool test __attribute__((unused)) = true;\n+\n+#define TEST1(x) VERIFY( x == x && !(x != x) && x <= x && !(x < x) )\n+\n+int\n+main()\n+{\n+  int i=0;\n+  int j=0;\n+  int k=2;\n+  tuple<int, int, int> a(0, 0, 0);\n+  tuple<int, int, int> b(0, 0, 1);\n+  tuple<int& , int& , int&> c(i,j,k);\n+  tuple<const int&, const int&, const int&> d(c);\n+  TEST1(a);\n+  TEST1(b);\n+  TEST1(c);\n+  TEST1(d);\n+  VERIFY(!(a > a) && !(b > b));\n+  VERIFY(a >= a && b >= b);\n+  VERIFY(a < b && !(b < a) && a <= b && !(b <= a));\n+  VERIFY(b > a && !(a > b) && b >= a && !(a >= b));  \n+}"}, {"sha": "86defaccf16692979c85106f6d3d7add71a8a417", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/assignment.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  tuple<> ta;\n+  tuple<> tb;\n+  ta = tb;\n+\n+  tuple<int> tc(1);\n+  tuple<int> td(0);\n+  td = tc;\n+  VERIFY(get<0>(td) == 1);\n+\n+  int i=0;\n+  tuple<int&> te(i);\n+  te = tc;\n+  VERIFY(i == 1);\n+\n+  tuple<const int&> tf(tc);\n+\n+  get<0>(tc) = 2;\n+  VERIFY(get<0>(tf) == 2);\n+  tuple<double> tg;\n+  tg = tc;\n+}"}, {"sha": "938e4cb48d4707626fe703ea9c5c576d52b8beab", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/big_tuples.cc", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,105 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+// A simple class without conversions to check some things\n+struct foo\n+{ };\n+\n+void\n+test_constructors()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int x1=0,x2=0;\n+  const int &z1=x1;\n+\n+  // Test empty constructor\n+  tuple<> ta;\n+  tuple<int,int> tb;\n+  // Test construction from values\n+  tuple<int,int> tc(x1,x2);\n+  tuple<int,int&> td(x1,x2);\n+  tuple<const int&> te(z1);\n+  x1=1;\n+  x2=1;\n+  VERIFY(get<0>(td) == 0 && get<1>(td) == 1 && get<0>(te) == 1);\n+\n+  // Test identical tuple copy constructor\n+  tuple<int,int> tf(tc);\n+  tuple<int,int> tg(td);\n+  tuple<const int&> th(te);\n+  // Test different tuple copy constructor\n+  tuple<int,double> ti(tc);\n+  tuple<int,double> tj(td);\n+  // Test constructing from a pair\n+  pair<int,int> pair1(1,1);\n+  const pair<int,int> pair2(pair1);\n+  tuple<int,int> tl(pair1);\n+  tuple<int,const int&> tm(pair1);\n+  tuple<int,int> tn(pair2);\n+  tuple<int,const int&> to(pair2);  \n+}\n+\n+int \n+main(void) \n+{\n+  //test construction\n+  typedef tuple<int,int,int,int,int,int,int,int,int,int> type1;\n+  type1 a(0, 0, 0, 0, 0, 0, 0, 0, 0, 1);\n+  type1 b(0, 0, 0, 0, 0, 0, 0, 0, 0, 2);\n+  type1 c(a);\n+  typedef tuple<int,int,int,int,int,int,int,int,int,char> type2;\n+  type2 d(0, 0, 0, 0, 0, 0, 0, 0, 0, 3);\n+  type1 e(d);\n+  typedef tuple<foo,int,int,int,int,int,int,int,int,foo> type3;\n+  // get\n+  VERIFY(get<9>(a)==1 && get<9>(b)==2);\n+  // comparisons\n+  VERIFY(a==a && !(a!=a) && a<=a && a>=a && !(a<a) && !(a>a));\n+  VERIFY(!(a==b) && a!=b && a<=b && a<b && !(a>=b) && !(a>b));\n+  //tie\n+  {\n+    int i = 0;\n+  tie(ignore, ignore, ignore, ignore, ignore, ignore, ignore, ignore, \n+      ignore, i) = a;\n+  VERIFY(i == 1);\n+  }\n+  //test_assignment\n+  a=d;\n+  a=b;\n+  //make_tuple\n+  make_tuple(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n+  \n+  //tuple_size\n+  VERIFY(tuple_size<type3>::value == 10);\n+  //tuple_element\n+  {  \n+    foo q1;\n+    tuple_element<0,type3>::type q2(q1);\n+    tuple_element<9,type3>::type q3(q1);\n+  }\n+}"}, {"sha": "8440413d930cafc3c6f4d922669a7ec2ec4c14b3", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/constructor.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,65 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int x1=0,x2=0;\n+  const int &z1=x1;\n+\n+  // Test empty constructor\n+  tuple<> ta;\n+  tuple<int,int> tb;\n+  // Test construction from values\n+  tuple<int,int> tc(x1,x2);\n+  tuple<int,int&> td(x1,x2);\n+  tuple<const int&> te(z1);\n+  x1=1;\n+  x2=1;\n+  VERIFY(get<0>(td) == 0 && get<1>(td) == 1 && get<0>(te) == 1);\n+\n+  // Test identical tuple copy constructor\n+  tuple<int,int> tf(tc);\n+  tuple<int,int> tg(td);\n+  tuple<const int&> th(te);\n+  // Test different tuple copy constructor\n+  tuple<int,double> ti(tc);\n+  tuple<int,double> tj(td);\n+  //tuple<int&, int&> tk(tc);\n+  tuple<const int&, const int&> tl(tc);\n+  tuple<const int&, const int&> tm(tl);\n+  // Test constructing from a pair\n+  pair<int,int> pair1(1,1);\n+  const pair<int,int> pair2(pair1);\n+  tuple<int,int> tn(pair1);\n+  tuple<int,const int&> to(pair1);\n+  tuple<int,int> tp(pair2);\n+  tuple<int,const int&> tq(pair2);  \n+  return 0;\n+}"}, {"sha": "edb4aef61b0547465b54555d0f6ee50f791a362c", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/23978.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++0x\" }\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+// libstdc++/23978\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  pair<int, int> p(1, 2);\n+  int x = 0;\n+  int y = 0;\n+  tie(x, y) = p;\n+  VERIFY( x == 1 && y == 2 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a6eba6d4154339d04a7405202788b93b09e57a0c", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/make_tuple.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int i=0;\n+  make_tuple(1,2,4.0);\n+  make_tuple(ref(i)) = tuple<int>(1);\n+  VERIFY(i == 1);\n+}"}, {"sha": "e7f5c056e4ee3cbf923537f59fdeadb61ec25732", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/tie.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true; \n+\n+  int x1 = 0;\n+  int x2 = 0;\n+  int y1 = 0;\n+  int y2 = 0;\n+  tuple<int,int> ta(1,1);\n+  tuple<const int&,const int&> tc(x1,x2);\n+  tie(y1,y2)=ta;\n+  VERIFY(y1 == 1 && y2 == 1);\n+  tie(y1,y2)=tc;\n+  VERIFY(y1 == 0 && y2 == 0);\n+}"}, {"sha": "32015ee7da6c420b1665ac15b89070ae26c0bd72", "filename": "libstdc++-v3/testsuite/20_util/tuple/element_access/get.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,45 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int j=1;\n+  const int k=2;\n+  tuple<int,int &,const int&> a(0,j,k);\n+  const tuple<int,int &,const int&> b(1,j,k); \n+  VERIFY(get<0>(a)==0 && get<1>(a)==1 && get<2>(a)==2);\n+  get<0>(a)=3;\n+  get<1>(a)=4;  \n+  VERIFY(get<0>(a)==3 && get<1>(a)==4);\n+  VERIFY(j==4);\n+  get<1>(b)=5;\n+  VERIFY(get<0>(b)==1 && get<1>(b)==5 && get<2>(b)==2);\n+  VERIFY(j==5);\n+}"}, {"sha": "29b886d1266c052c54eaa23fdaf78ef6d78d393c", "filename": "libstdc++-v3/testsuite/20_util/tuple/requirements/explicit_instantiation.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fexplicit_instantiation.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -28,6 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <tr1/tuple>\n+#include <tuple>\n \n-template class std::tr1::tuple<short, int, double>;\n+template class std::tuple<short, int, double>;"}, {"sha": "1b78a5ca2bbbde6aee24c271ede639af04fd6dc1", "filename": "libstdc++-v3/testsuite/20_util/tuple/tuple_element.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+\n+using namespace std;\n+\n+struct foo\n+{ };\n+\n+int\n+main()\n+{\n+  // As foo isn't constructible from anything else, this\n+  // lets us check if type is returning foo when it should\n+  foo q1;\n+  tuple_element<0,tuple<foo,void,int> >::type q2(q1);\n+  tuple_element<2,tuple<void,int,foo> >::type q3(q1);\n+}"}, {"sha": "f5f398ce0a11a6232b0fde8c0015df8203a66553", "filename": "libstdc++-v3/testsuite/20_util/tuple/tuple_size.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tuple>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+int\n+main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  VERIFY(tuple_size<tuple<> >::value == 0);\n+  VERIFY(tuple_size<tuple<int> >::value == 1);\n+  VERIFY(tuple_size<tuple<void> >::value == 1);\n+  typedef tuple<int,const int&,void> test_tuple1;\n+  VERIFY(tuple_size<test_tuple1>::value == 3);\n+  VERIFY(tuple_size<tuple<tuple<void> > >::value == 1);\n+}"}, {"sha": "7eee7a8d12d777acec6d27550c1f20063fed3e14", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/comparison_operators/comparisons.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,6 +25,8 @@\n \n using namespace std::tr1;\n \n+bool test __attribute__((unused)) = true;\n+\n #define TEST1(x) VERIFY( x == x && !(x != x) && x <= x && !(x < x) )\n \n int"}, {"sha": "973b5f0ce313df17655540c00131a608db6e2e64", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/assignment.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,8 @@ using namespace std::tr1;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   tuple<> ta;\n   tuple<> tb;\n   ta = tb;"}, {"sha": "2af47e5bd170ba62fcb56b5b0d1eb4841e8b49ad", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/big_tuples.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,6 +33,8 @@ struct foo\n void\n test_constructors()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   int x1=0,x2=0;\n   const int &z1=x1;\n "}, {"sha": "de34ba44809f3fff76d04b259a0859c1d52f9d5a", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/constructor.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,6 +29,8 @@ using std::pair;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   int x1=0,x2=0;\n   const int &z1=x1;\n "}, {"sha": "9a0fc6f6dae16f56c63410a5e760ecedab5006e1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -29,6 +29,8 @@ using namespace std::tr1;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   int i=0;\n   make_tuple(1,2,4.0);\n   make_tuple(ref(i)) = tuple<int>(1);"}, {"sha": "d8389be410db4eed331e967108c1c2cdbc7212d6", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/tie.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,8 @@ using namespace std::tr1;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   int x1 = 0;\n   int x2 = 0;\n   int y1 = 0;"}, {"sha": "5cfda1486340242f687e19332c1ee71120d70aac", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/element_access/get.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,8 @@ using namespace std::tr1;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   int j=1;\n   const int k=2;\n   tuple<int,int &,const int&> a(0,j,k);"}, {"sha": "6178e567699dbe1e569493e3fe4a98335d3864ad", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/tuple_element.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +31,7 @@ struct foo\n int\n main()\n {\n-  // As foo isn't constructable from anything else, this\n+  // As foo isn't constructible from anything else, this\n   // lets us check if type is returning foo when it should\n   foo q1;\n   tuple_element<0,tuple<foo,void,int> >::type q2(q1);"}, {"sha": "73389373b262e73ac60a0b6f2d805b6518a2d1cf", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/tuple_size.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1054b5595bc465fe46bd8c9ea340ec84a0918/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc?ref=a1c1054b5595bc465fe46bd8c9ea340ec84a0918", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,8 @@ using namespace std::tr1;\n int\n main()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   VERIFY(tuple_size<tuple<> >::value == 0);\n   VERIFY(tuple_size<tuple<int> >::value == 1);\n   VERIFY(tuple_size<tuple<void> >::value == 1);"}]}