{"sha": "d633dd8428badb7271d0122e5aeab318673d913b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYzM2RkODQyOGJhZGI3MjcxZDAxMjJlNWFlYWIzMTg2NzNkOTEzYg==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2013-04-05T15:43:04Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2013-04-05T15:43:04Z"}, "message": "arm.md (subsi3_carryin): New pattern.\n\n2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n\t* config/arm/arm.md (subsi3_carryin): New pattern.\n\t(subsi3_carryin_const): Likewise.\n\t(subsi3_carryin_compare,subsi3_carryin_compare_const): Likewise.\n\t(subsi3_carryin_shift,rsbsi3_carryin_shift): Likewise.\n\nFrom-SVN: r197520", "tree": {"sha": "6edfa409a8caed6b54596a7d25d45b8754e62b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6edfa409a8caed6b54596a7d25d45b8754e62b0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d633dd8428badb7271d0122e5aeab318673d913b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d633dd8428badb7271d0122e5aeab318673d913b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d633dd8428badb7271d0122e5aeab318673d913b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d633dd8428badb7271d0122e5aeab318673d913b/comments", "author": null, "committer": null, "parents": [{"sha": "f4499066fedee6394a01ad8d545878f1ca6102f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4499066fedee6394a01ad8d545878f1ca6102f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4499066fedee6394a01ad8d545878f1ca6102f0"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "5bc7e5eec8f027615a2354a0127a5767000d4506", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d633dd8428badb7271d0122e5aeab318673d913b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d633dd8428badb7271d0122e5aeab318673d913b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d633dd8428badb7271d0122e5aeab318673d913b", "patch": "@@ -1,11 +1,18 @@\n+2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+\t* config/arm/arm.md (subsi3_carryin): New pattern.\n+\t(subsi3_carryin_const): Likewise.\n+\t(subsi3_carryin_compare,subsi3_carryin_compare_const): Likewise.\n+\t(subsi3_carryin_shift,rsbsi3_carryin_shift): Likewise.\n+\n 2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.md (incscc,arm_incscc,decscc,arm_decscc): Delete.\n \n 2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.md (addsi3_carryin_<optab>): Set attribute predicable.\n- \t(addsi3_carryin_alt2_<optab>,addsi3_carryin_shift_<optab>): Likewise.\n+\t(addsi3_carryin_alt2_<optab>,addsi3_carryin_shift_<optab>): Likewise.\n \n 2013-04-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n "}, {"sha": "3c1deaddddc11cf2deabadaf8a28ebba39902bd9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d633dd8428badb7271d0122e5aeab318673d913b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d633dd8428badb7271d0122e5aeab318673d913b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=d633dd8428badb7271d0122e5aeab318673d913b", "patch": "@@ -1015,6 +1015,90 @@\n    [(set_attr \"conds\" \"set\")]\n )\n \n+(define_insn \"*subsi3_carryin\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n+        (minus:SI (minus:SI (match_operand:SI 1 \"reg_or_int_operand\" \"r,I\")\n+                            (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n+                  (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_32BIT\"\n+  \"@\n+   sbc%?\\\\t%0, %1, %2\n+   rsc%?\\\\t%0, %2, %1\"\n+  [(set_attr \"conds\" \"use\")\n+   (set_attr \"arch\" \"*,a\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*subsi3_carryin_const\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+        (minus:SI (plus:SI (match_operand:SI 1 \"reg_or_int_operand\" \"r\")\n+                           (match_operand:SI 2 \"arm_not_operand\" \"K\"))\n+                  (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_32BIT\"\n+  \"sbc\\\\t%0, %1, #%B2\"\n+  [(set_attr \"conds\" \"use\")]\n+)\n+\n+(define_insn \"*subsi3_carryin_compare\"\n+  [(set (reg:CC CC_REGNUM)\n+        (compare:CC (match_operand:SI 1 \"s_register_operand\" \"r\")\n+                    (match_operand:SI 2 \"s_register_operand\" \"r\")))\n+   (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+        (minus:SI (minus:SI (match_dup 1)\n+                            (match_dup 2))\n+                  (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_32BIT\"\n+  \"sbcs\\\\t%0, %1, %2\"\n+  [(set_attr \"conds\" \"set\")]\n+)\n+\n+(define_insn \"*subsi3_carryin_compare_const\"\n+  [(set (reg:CC CC_REGNUM)\n+        (compare:CC (match_operand:SI 1 \"reg_or_int_operand\" \"r\")\n+                    (match_operand:SI 2 \"arm_not_operand\" \"K\")))\n+   (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+        (minus:SI (plus:SI (match_dup 1)\n+                           (match_dup 2))\n+                  (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_32BIT\"\n+  \"sbcs\\\\t%0, %1, #%B2\"\n+  [(set_attr \"conds\" \"set\")]\n+)\n+\n+(define_insn \"*subsi3_carryin_shift\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(minus:SI (minus:SI\n+\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\")\n+                  (match_operator:SI 2 \"shift_operator\"\n+                   [(match_operand:SI 3 \"s_register_operand\" \"r\")\n+                    (match_operand:SI 4 \"reg_or_int_operand\" \"rM\")]))\n+                 (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_32BIT\"\n+  \"sbc%?\\\\t%0, %1, %3%S2\"\n+  [(set_attr \"conds\" \"use\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set (attr \"type\") (if_then_else (match_operand 4 \"const_int_operand\" \"\")\n+\t\t      (const_string \"alu_shift\")\n+                     (const_string \"alu_shift_reg\")))]\n+)\n+\n+(define_insn \"*rsbsi3_carryin_shift\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(minus:SI (minus:SI\n+                  (match_operator:SI 2 \"shift_operator\"\n+                   [(match_operand:SI 3 \"s_register_operand\" \"r\")\n+                    (match_operand:SI 4 \"reg_or_int_operand\" \"rM\")])\n+\t\t   (match_operand:SI 1 \"s_register_operand\" \"r\"))\n+                 (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  \"TARGET_ARM\"\n+  \"rsc%?\\\\t%0, %1, %3%S2\"\n+  [(set_attr \"conds\" \"use\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set (attr \"type\") (if_then_else (match_operand 4 \"const_int_operand\" \"\")\n+\t\t      (const_string \"alu_shift\")\n+\t\t      (const_string \"alu_shift_reg\")))]\n+)\n+\n ; transform ((x << y) - 1) to ~(~(x-1) << y)  Where X is a constant.\n (define_split\n   [(set (match_operand:SI 0 \"s_register_operand\" \"\")"}]}