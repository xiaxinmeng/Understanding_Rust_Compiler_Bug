{"sha": "12213acba9cff14bb8e37bbafd5918ba3265f829", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyMTNhY2JhOWNmZjE0YmI4ZTM3YmJhZmQ1OTE4YmEzMjY1ZjgyOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-06-27T21:23:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-06-27T21:23:09Z"}, "message": "re PR tree-optimization/91010 (ICE: Segmentation fault (in location_wrapper_p))\n\n\tPR tree-optimization/91010\n\t* tree-vect-stmts.c (scan_operand_equal_p): If offset1 == offset2,\n\treturn true.  Otherwise, don't call operand_equal_p if offset1 or\n\toffset2 is NULL and just return false.\n\n\t* g++.dg/vect/simd-10.cc: New test.\n\nFrom-SVN: r272763", "tree": {"sha": "e87f6bd93529aead07a6aa019c457649c8e193ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e87f6bd93529aead07a6aa019c457649c8e193ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12213acba9cff14bb8e37bbafd5918ba3265f829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12213acba9cff14bb8e37bbafd5918ba3265f829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12213acba9cff14bb8e37bbafd5918ba3265f829", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12213acba9cff14bb8e37bbafd5918ba3265f829/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08b219921f7f4430fe66391ed8e3302b4fd049f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b219921f7f4430fe66391ed8e3302b4fd049f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b219921f7f4430fe66391ed8e3302b4fd049f1"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "0c939090d618d4f6aab5413609bd6de77091018c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12213acba9cff14bb8e37bbafd5918ba3265f829", "patch": "@@ -1,3 +1,10 @@\n+2019-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/91010\n+\t* tree-vect-stmts.c (scan_operand_equal_p): If offset1 == offset2,\n+\treturn true.  Otherwise, don't call operand_equal_p if offset1 or\n+\toffset2 is NULL and just return false.\n+\n 2019-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/rs6000/rs6000.c (darwin_rs6000_override_options): Honour"}, {"sha": "0a3ea3765073024c9caaad8b548636e544eb8066", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12213acba9cff14bb8e37bbafd5918ba3265f829", "patch": "@@ -1,3 +1,8 @@\n+2019-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/91010\n+\t* g++.dg/vect/simd-10.cc: New test.\n+\n 2019-06-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/90987"}, {"sha": "fa4dc4f9cbbccea507cf32f456ffaf11f0a35e72", "filename": "gcc/testsuite/g++.dg/vect/simd-10.cc", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-10.cc?ref=12213acba9cff14bb8e37bbafd5918ba3265f829", "patch": "@@ -0,0 +1,8 @@\n+// PR tree-optimization/91010\n+// { dg-do compile }\n+// { dg-require-effective-target size32plus }\n+// { dg-additional-options \"-fopenmp-simd -fno-tree-forwprop\" }\n+// { dg-additional-options \"-mavx\" { target avx_runtime } }\n+// { dg-final { scan-tree-dump-times \"vectorized \\[1-3] loops\" 2 \"vect\" { target i?86-*-* x86_64-*-* } } }\n+\n+#include \"simd-5.cc\""}, {"sha": "8379a088a9e7e01e48ddc640dd0852a03b044b6f", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12213acba9cff14bb8e37bbafd5918ba3265f829/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=12213acba9cff14bb8e37bbafd5918ba3265f829", "patch": "@@ -6345,7 +6345,10 @@ scan_operand_equal_p (tree ref1, tree ref2)\n     return false;\n   if (maybe_ne (bitsize1, bitsize2))\n     return false;\n-  if (!operand_equal_p (offset1, offset2, 0))\n+  if (offset1 != offset2\n+      && (!offset1\n+\t  || !offset2\n+\t  || !operand_equal_p (offset1, offset2, 0)))\n     return false;\n   return true;\n }"}]}