{"sha": "6c72e55df00195f1c955e7ffdd76386613f69560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3MmU1NWRmMDAxOTVmMWM5NTVlN2ZmZGQ3NjM4NjYxM2Y2OTU2MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-08-31T11:37:09Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-08-31T11:37:09Z"}, "message": "IPA ICF: make type cache a static field sem_item.\n\n2018-08-31  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf.c (sem_item::add_type): Use\n\tsem_item::m_type_hash_cache.\n\t* ipa-icf.h: Move the cache from sem_item_optimizer\n\tto sem_item.\n\nFrom-SVN: r264014", "tree": {"sha": "336c18e36fce422c94a0c239d4c005749839b801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/336c18e36fce422c94a0c239d4c005749839b801"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c72e55df00195f1c955e7ffdd76386613f69560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c72e55df00195f1c955e7ffdd76386613f69560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c72e55df00195f1c955e7ffdd76386613f69560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c72e55df00195f1c955e7ffdd76386613f69560/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5020c88e539e0212beec3568fb088ab95f484022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5020c88e539e0212beec3568fb088ab95f484022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5020c88e539e0212beec3568fb088ab95f484022"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "62918c311ae227f7e18c1386c878ba753c0421b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c72e55df00195f1c955e7ffdd76386613f69560", "patch": "@@ -1,3 +1,10 @@\n+2018-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_item::add_type): Use\n+\tsem_item::m_type_hash_cache.\n+\t* ipa-icf.h: Move the cache from sem_item_optimizer\n+\tto sem_item.\n+\n 2018-08-31  Nathan Sidwell  <nathan@acm.org>\n \n \t* doc/extend.texi (Backwards Compatibility): Remove implicit"}, {"sha": "8a6a7a3f32f8b691c99a5cfc28d59a0d578c185e", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=6c72e55df00195f1c955e7ffdd76386613f69560", "patch": "@@ -227,6 +227,8 @@ void sem_item::set_hash (hashval_t hash)\n   m_hash_set = true;\n }\n \n+hash_map<const_tree, hashval_t> sem_item::m_type_hash_cache;\n+\n /* Semantic function constructor that uses STACK as bitmap memory stack.  */\n \n sem_function::sem_function (bitmap_obstack *stack)\n@@ -1587,7 +1589,7 @@ sem_item::add_type (const_tree type, inchash::hash &hstate)\n \t  return;\n \t}\n \n-      hashval_t *val = optimizer->m_type_hash_cache.get (type);\n+      hashval_t *val = m_type_hash_cache.get (type);\n \n       if (!val)\n \t{\n@@ -1607,7 +1609,7 @@ sem_item::add_type (const_tree type, inchash::hash &hstate)\n \t  hstate2.add_int (nf);\n \t  hash = hstate2.end ();\n \t  hstate.add_hwi (hash);\n-\t  optimizer->m_type_hash_cache.put (type, hash);\n+\t  m_type_hash_cache.put (type, hash);\n \t}\n       else\n         hstate.add_hwi (*val);"}, {"sha": "a64b3852efb63c348e433a32db8eae150343abb9", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c72e55df00195f1c955e7ffdd76386613f69560/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=6c72e55df00195f1c955e7ffdd76386613f69560", "patch": "@@ -281,6 +281,9 @@ class sem_item\n   /* Initialize internal data structures. Bitmap STACK is used for\n      bitmap memory allocation process.  */\n   void setup (bitmap_obstack *stack);\n+\n+  /* Because types can be arbitrarily large, avoid quadratic bottleneck.  */\n+  static hash_map<const_tree, hashval_t> m_type_hash_cache;\n }; // class sem_item\n \n class sem_function: public sem_item\n@@ -524,9 +527,6 @@ class sem_item_optimizer\n   /* Gets a congruence class group based on given HASH value and TYPE.  */\n   congruence_class_group *get_group_by_hash (hashval_t hash,\n       sem_item_type type);\n-\n-  /* Because types can be arbitrarily large, avoid quadratic bottleneck.  */\n-  hash_map<const_tree, hashval_t> m_type_hash_cache;\n private:\n \n   /* For each semantic item, append hash values of references.  */"}]}