{"sha": "6459a31f98f0607e194720c3f9e0e26b21ad3e61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ1OWEzMWY5OGYwNjA3ZTE5NDcyMGMzZjllMGUyNmIyMWFkM2U2MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-25T09:04:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:04:42Z"}, "message": "[Ada] Crash on classwide precondition on subprogram with stub\n\nThis patch allows the compiler to handle properly a classwide precondition\non a primitive operation whose body is a stub and a separate subunit.\n\nExecuting:\n\n   gnatmake -gnata -q check\n   ./check\n\nmust yield:\n\n   precondition violated\n\n----\nwith Text_IO;\nwith Msg_Data_Block_Decoder; use Msg_Data_Block_Decoder;\nprocedure Check is\n   Thing : T_Msg_Data_Block_Decoder;\n   Value : Integer;\nbegin\n   begin\n      Value := Get_Long_Term_Corrections (Thing);\n   exception\n      when others => Text_IO.Put_Line (\"precondition violated\");\n   end;\nend Check;\n----\npackage Msg_Data_Block_Decoder is\n   pragma Preelaborate;\n   type T_Msg_Data_Block_Decoder is Tagged Limited null record;\n\n   type T_Msg_Data_Block_Decoder_Class_Access is\n       access all T_Msg_Data_Block_Decoder'Class;\n\n   function Get_Decoded_Data (This : in T_Msg_Data_Block_Decoder)\n      return Integer;\n\n   function Get_Long_Term_Corrections\n     (This : in T_Msg_Data_Block_Decoder) return Integer  with\n       Pre'\n        Class => Get_Decoded_Data (T_Msg_Data_Block_Decoder'Class (This)) = 2;\n\nend Msg_Data_Block_Decoder;\n----\npackage body Msg_Data_Block_Decoder is\n\n   function Get_Long_Term_Corrections (This : in T_Msg_Data_Block_Decoder)\n   return Integer is separate;\n\n   function Get_Decoded_Data (This : in T_Msg_Data_Block_Decoder)\n     return Integer is\n   begin\n     return 0;\n   end Get_Decoded_Data;\n\nend Msg_Data_Block_Decoder;\n----\nseparate (Msg_Data_Block_Decoder)\nfunction Get_Long_Term_Corrections (This : in T_Msg_Data_Block_Decoder)\n   return Integer is\nbegin\n  return 0;\nend Get_Long_Term_Corrections;\n\n2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Do not create\n\tClass_Wide_Clone_Body when analyzing a subprogram_body_stub: the clone\n\tis created when the proper body of the stub is analyzed.\n\t* sem_util.adb (ZBuild_Class_Wide_Clone_Body): If the subprogram body\n\tis the proper body of a subunit, the cloned body must be inserted in\n\tthe declarative list that contains the stub.\n\nFrom-SVN: r260734", "tree": {"sha": "4630f4ca9bef2da422412b3cd23d54c8d718bba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4630f4ca9bef2da422412b3cd23d54c8d718bba3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6459a31f98f0607e194720c3f9e0e26b21ad3e61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6459a31f98f0607e194720c3f9e0e26b21ad3e61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6459a31f98f0607e194720c3f9e0e26b21ad3e61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6459a31f98f0607e194720c3f9e0e26b21ad3e61/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "320fbd1ebe24af4b2059759e7432e4c294eb9170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320fbd1ebe24af4b2059759e7432e4c294eb9170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320fbd1ebe24af4b2059759e7432e4c294eb9170"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "904194e5ebb6d6592fdce98f05021d587001ee65", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6459a31f98f0607e194720c3f9e0e26b21ad3e61", "patch": "@@ -1,3 +1,12 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Do not create\n+\tClass_Wide_Clone_Body when analyzing a subprogram_body_stub: the clone\n+\tis created when the proper body of the stub is analyzed.\n+\t* sem_util.adb (ZBuild_Class_Wide_Clone_Body): If the subprogram body\n+\tis the proper body of a subunit, the cloned body must be inserted in\n+\tthe declarative list that contains the stub.\n+\n 2018-05-25  Justin Squirek  <squirek@adacore.com>\n \n \t* exp_ch6.adb (Expand_Simple_Function_Return): Add guard in check to"}, {"sha": "3d8849a0491e34c08299df0f91922735890a9cd8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=6459a31f98f0607e194720c3f9e0e26b21ad3e61", "patch": "@@ -3844,10 +3844,13 @@ package body Sem_Ch6 is\n       --  If the subprogram has a class-wide clone, build its body as a copy\n       --  of the original body, and rewrite body of original subprogram as a\n       --  wrapper that calls the clone.\n+      --  If N is a stub, this construction will take place when the proper\n+      --  body is analyzed.\n \n       if Present (Spec_Id)\n         and then Present (Class_Wide_Clone (Spec_Id))\n         and then (Comes_From_Source (N) or else Was_Expression_Function (N))\n+        and then Nkind (N) /= N_Subprogram_Body_Stub\n       then\n          Build_Class_Wide_Clone_Body (Spec_Id, N);\n "}, {"sha": "033903c09eadd0e83f3b08865092f2957628726e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6459a31f98f0607e194720c3f9e0e26b21ad3e61/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6459a31f98f0607e194720c3f9e0e26b21ad3e61", "patch": "@@ -1365,7 +1365,18 @@ package body Sem_Util is\n       --  (the original primitive may have carried one).\n \n       Set_Must_Override (Specification (Clone_Body), False);\n-      Insert_Before (Bod, Clone_Body);\n+\n+      --  If the subprogram body is the proper body of a stub, insert the\n+      --  subprogram after the stub, i.e. the same declarative region as\n+      --  the original sugprogram.\n+\n+      if Nkind (Parent (Bod)) = N_Subunit then\n+         Insert_After (Corresponding_Stub (Parent (Bod)), Clone_Body);\n+\n+      else\n+         Insert_Before (Bod, Clone_Body);\n+      end if;\n+\n       Analyze (Clone_Body);\n    end Build_Class_Wide_Clone_Body;\n "}]}