{"sha": "5d7bb90c0fd14fcacc20de052ba409ed962945d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3YmI5MGMwZmQxNGZjYWNjMjBkZTA1MmJhNDA5ZWQ5NjI5NDVkNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T13:43:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T13:43:10Z"}, "message": "(unused_prefix_warning): Include machine_suffix if require_machine_suffix.\n\n(warn_B, warn_std, warn_std_ptr): New variables.\n(process_commands): Use them and NULL_PTR as WARN arg to add_prefix.\n\nFrom-SVN: r10846", "tree": {"sha": "25bcb5396cc3cda11541ca9a3e20f1f24a1f5a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25bcb5396cc3cda11541ca9a3e20f1f24a1f5a74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7bb90c0fd14fcacc20de052ba409ed962945d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7bb90c0fd14fcacc20de052ba409ed962945d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7bb90c0fd14fcacc20de052ba409ed962945d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7bb90c0fd14fcacc20de052ba409ed962945d6/comments", "author": null, "committer": null, "parents": [{"sha": "f2cf3e1ed979ba530eba3eed6c4e11725ac78a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2cf3e1ed979ba530eba3eed6c4e11725ac78a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2cf3e1ed979ba530eba3eed6c4e11725ac78a54"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "84a8f87ee8f129d0c8a9b69adcc48ed02eee76a8", "filename": "gcc/gcc.c", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7bb90c0fd14fcacc20de052ba409ed962945d6/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7bb90c0fd14fcacc20de052ba409ed962945d6/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5d7bb90c0fd14fcacc20de052ba409ed962945d6", "patch": "@@ -1918,8 +1918,12 @@ unused_prefix_warnings (pprefix)\n     {\n       if (pl->used_flag_ptr != 0 && !*pl->used_flag_ptr)\n \t{\n-\t  error (\"file path prefix `%s' never used\",\n-\t\t pl->prefix);\n+\t  if (pl->require_machine_suffix && machine_suffix)\n+\t    error (\"file path prefix `%s%s' never used\", pl->prefix,\n+\t\t   machine_suffix);\n+\t  else\n+\t    error (\"file path prefix `%s' never used\", pl->prefix);\n+\n \t  /* Prevent duplicate warnings.  */\n \t  *pl->used_flag_ptr = 1;\n \t}\n@@ -2334,6 +2338,15 @@ static int n_infiles;\n \n static char **outfiles;\n \n+/* Used to track if none of the -B paths are used.  */\n+static int warn_B;\n+\n+/* Used to track if standard path isn't used and -b or -V is specified.  */\n+static int warn_std;\n+\n+/* Gives value to pass as \"warn\" to add_prefix for standard prefixes.  */\n+static int *warn_std_ptr = NULL_PTR;\n+\n /* Create the vector `switches' and its contents.\n    Store its length in `n_switches'.  */\n \n@@ -2616,6 +2629,8 @@ process_command (argc, argv)\n \t\tspec_machine = argv[++i];\n \t      else\n \t\tspec_machine = p + 1;\n+\n+\t      warn_std_ptr = &warn_std;\n \t      break;\n \n \t    case 'B':\n@@ -2628,10 +2643,10 @@ process_command (argc, argv)\n \t\t  value = argv[++i];\n \t\telse\n \t\t  value = p + 1;\n-\t\tadd_prefix (&exec_prefixes, value, 1, 0, temp);\n-\t\tadd_prefix (&startfile_prefixes, value, 1, 0, temp);\n+\t\tadd_prefix (&exec_prefixes, value, 1, 0, &warn_B);\n+\t\tadd_prefix (&startfile_prefixes, value, 1, 0, &warn_B);\n \t\tadd_prefix (&include_prefixes, concat (value, \"include\"),\n-\t\t\t    1, 0, 0);\n+\t\t\t    1, 0, NULL_PTR);\n \n \t\t/* As a kludge, if the arg is \"[foo/]stageN/\", just add\n \t\t   \"[foo/]include\" to the include prefix.  */\n@@ -2647,13 +2662,15 @@ process_command (argc, argv)\n \t\t\t  || value[len - 1] == DIR_SEPARATOR))\n \t\t    {\n \t\t      if (len == 7)\n-\t\t\tadd_prefix (&include_prefixes, \"include\", 1, 0, 0);\n+\t\t\tadd_prefix (&include_prefixes, \"include\",\n+\t\t\t\t    1, 0, NULL_PTR);\n \t\t      else\n \t\t\t{\n \t\t\t  char *string = xmalloc (len + 1);\n \t\t\t  strncpy (string, value, len-7);\n \t\t\t  strcat (string, \"include\");\n-\t\t\t  add_prefix (&include_prefixes, string, 1, 0, 0);\n+\t\t\t  add_prefix (&include_prefixes, string,\n+\t\t\t\t      1, 0, NULL_PTR);\n \t\t\t}\n \t\t    }\n \t\t}\n@@ -2677,6 +2694,7 @@ process_command (argc, argv)\n \t      else\n \t\tspec_version = p + 1;\n \t      compiler_version = spec_version;\n+\t      warn_std_ptr = &warn_std;\n \t      break;\n \n \t    case 's':\n@@ -2720,12 +2738,12 @@ process_command (argc, argv)\n   /* Use 2 as fourth arg meaning try just the machine as a suffix,\n      as well as trying the machine and the version.  */\n #ifndef OS2\n-  add_prefix (&exec_prefixes, standard_exec_prefix, 0, 2, NULL_PTR);\n-  add_prefix (&exec_prefixes, standard_exec_prefix_1, 0, 2, NULL_PTR);\n+  add_prefix (&exec_prefixes, standard_exec_prefix, 0, 2, warn_std_ptr);\n+  add_prefix (&exec_prefixes, standard_exec_prefix_1, 0, 2, warn_std_ptr);\n #endif\n \n-  add_prefix (&startfile_prefixes, standard_exec_prefix, 0, 1, NULL_PTR);\n-  add_prefix (&startfile_prefixes, standard_exec_prefix_1, 0, 1, NULL_PTR);\n+  add_prefix (&startfile_prefixes, standard_exec_prefix, 0, 1, warn_std_ptr);\n+  add_prefix (&startfile_prefixes, standard_exec_prefix_1, 0, 1, warn_std_ptr);\n \n   tooldir_prefix = concat3 (tooldir_base_prefix, spec_machine, \n                             dir_separator_str);"}]}