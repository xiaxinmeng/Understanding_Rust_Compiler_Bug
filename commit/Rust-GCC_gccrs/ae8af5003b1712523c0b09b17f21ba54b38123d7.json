{"sha": "ae8af5003b1712523c0b09b17f21ba54b38123d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4YWY1MDAzYjE3MTI1MjNjMGIwOWIxN2YyMWJhNTRiMzgxMjNkNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-05-17T18:36:44Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-05-17T18:36:44Z"}, "message": "re PR c/40172 (Revision 147596 breaks bootstrap)\n\ngcc/\n\n2009-05-17  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c/40172\n\t* c-common.c (warn_logical_operator): Don't warn if one of\n\texpression isn't always true or false.\n\ngcc/testscase/\n\n2009-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c/40172\n\t* gcc.dg/pr40172.c: New.\n\nFrom-SVN: r147639", "tree": {"sha": "3aa01e967c3a6466432e59fd7a374b018575b3e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3aa01e967c3a6466432e59fd7a374b018575b3e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8af5003b1712523c0b09b17f21ba54b38123d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8af5003b1712523c0b09b17f21ba54b38123d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8af5003b1712523c0b09b17f21ba54b38123d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8af5003b1712523c0b09b17f21ba54b38123d7/comments", "author": null, "committer": null, "parents": [{"sha": "7e361ae60a7b275571bba267b2354b72df40c99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e361ae60a7b275571bba267b2354b72df40c99a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e361ae60a7b275571bba267b2354b72df40c99a"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "e855a7152f07c109b8e773a6ccbccb4a42f4f8e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae8af5003b1712523c0b09b17f21ba54b38123d7", "patch": "@@ -1,7 +1,13 @@\n+2009-05-17  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/40172\n+\t* c-common.c (warn_logical_operator): Don't warn if one of\n+\texpression isn't always true or false.\n+\n 2009-05-17  Kai Tietz  <kai.tietz@onevision.com>\n \n-       * config/i386/biarch32.h: New file.\n-       * config.gcc: Add for target i386-w64-* the biarch32.h to tm_file.\n+\t* config/i386/biarch32.h: New file.\n+\t* config.gcc: Add for target i386-w64-* the biarch32.h to tm_file.\n \n 2009-05-17  Adam Nemet  <anemet@caviumnetworks.com>\n "}, {"sha": "fadbdaa7d93bbe0946df470172c2889e5b8b9c38", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=ae8af5003b1712523c0b09b17f21ba54b38123d7", "patch": "@@ -1784,10 +1784,8 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n     in0_p = !in0_p, in1_p = !in1_p;\n   \n   /* If both expressions are the same, if we can merge the ranges, and we\n-     can build the range test, return it or it inverted.  If one of the\n-     ranges is always true or always false, consider it to be the same\n-     expression as the other.  */\n-  if ((lhs == 0 || rhs == 0 || operand_equal_p (lhs, rhs, 0))\n+     can build the range test, return it or it inverted.  */\n+  if (lhs && rhs && operand_equal_p (lhs, rhs, 0)\n       && merge_ranges (&in_p, &low, &high, in0_p, low0, high0,\n \t\t       in1_p, low1, high1)\n       && 0 != (tem = build_range_check (type,"}, {"sha": "883f041b45fad4a586970d09b9e5077d0488fdbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae8af5003b1712523c0b09b17f21ba54b38123d7", "patch": "@@ -1,3 +1,8 @@\n+2009-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c/40172\n+\t* gcc.dg/pr40172.c: New.\n+\n 2009-05-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/40139"}, {"sha": "aff34764341c72b3aa150e646fe65415a80906f5", "filename": "gcc/testsuite/gcc.dg/pr40172.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40172.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8af5003b1712523c0b09b17f21ba54b38123d7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40172.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40172.c?ref=ae8af5003b1712523c0b09b17f21ba54b38123d7", "patch": "@@ -0,0 +1,31 @@\n+/* PR middle-end/40172 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall -W -Werror\" } */\n+\n+struct rtx_def;\n+typedef struct rtx_def *rtx; \n+\n+extern int foo;\n+extern int bar;\n+extern int xxx;\n+\n+int\n+test (void)\n+{\n+  if (((rtx) 0 != (rtx) 0) && xxx ? foo : bar)\n+    return 1;\n+  else if ((foo & 0) && xxx)\n+    return 2;\n+  else if (foo & 0)\n+    return 3;\n+  else if (0 && xxx)\n+    return 4;\n+  else if (0)\n+    return 5;\n+  if (((int) 0 != (int) 0) && bar ? foo : xxx)\n+    return 6;\n+  else if (0 != 0 && foo ? xxx : bar)\n+    return 7;\n+  else\n+    return 0;\n+}"}]}