{"sha": "5df813131d18e4db50fb4f9c940ff782b8496a94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRmODEzMTMxZDE4ZTRkYjUwZmI0ZjljOTQwZmY3ODJiODQ5NmE5NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-08T15:19:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-08T15:19:02Z"}, "message": "re PR rtl-optimization/56195 (Error: incorrect register `%rdi' used with `l' suffix (at -O2))\n\n\tPR rtl-optimization/56195\n\t* lra-constraints.c (get_reload_reg): Don't reuse regs\n\tif they have smaller mode than requested, if they have\n\twider mode than requested, try to return a SUBREG.\n\n\t* gcc.dg/torture/pr56195.c: New test.\n\nFrom-SVN: r195891", "tree": {"sha": "91f45af991fea54d16e73e0b3d43e76d6f062c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91f45af991fea54d16e73e0b3d43e76d6f062c09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5df813131d18e4db50fb4f9c940ff782b8496a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df813131d18e4db50fb4f9c940ff782b8496a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df813131d18e4db50fb4f9c940ff782b8496a94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df813131d18e4db50fb4f9c940ff782b8496a94/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3434c119a309db4ff991d50b6ebe25a017b58cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3434c119a309db4ff991d50b6ebe25a017b58cd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3434c119a309db4ff991d50b6ebe25a017b58cd7"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "420f95d1e10086d225cae106bd232d360149e23c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5df813131d18e4db50fb4f9c940ff782b8496a94", "patch": "@@ -1,5 +1,10 @@\n 2013-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/56195\n+\t* lra-constraints.c (get_reload_reg): Don't reuse regs\n+\tif they have smaller mode than requested, if they have\n+\twider mode than requested, try to return a SUBREG.\n+\n \tPR tree-optimization/56250\n \t* fold-const.c (extract_muldiv_1) <case NEGATE_EXPR>: Don't optimize\n \tif type is unsigned and code isn't MULT_EXPR."}, {"sha": "13420ebfbd84bc7a4eaee97bc5c4b8f0b85dc732", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=5df813131d18e4db50fb4f9c940ff782b8496a94", "patch": "@@ -421,8 +421,20 @@ get_reload_reg (enum op_type type, enum machine_mode mode, rtx original,\n       if (rtx_equal_p (curr_insn_input_reloads[i].input, original)\n \t  && in_class_p (curr_insn_input_reloads[i].reg, rclass, &new_class))\n \t{\n-\t  *result_reg = curr_insn_input_reloads[i].reg;\n-\t  regno = REGNO (*result_reg);\n+\t  rtx reg = curr_insn_input_reloads[i].reg;\n+\t  regno = REGNO (reg);\n+\t  /* If input is equal to original and both are VOIDmode,\n+\t     GET_MODE (reg) might be still different from mode.\n+\t     Ensure we don't return *result_reg with wrong mode.  */\n+\t  if (GET_MODE (reg) != mode)\n+\t    {\n+\t      if (GET_MODE_SIZE (GET_MODE (reg)) < GET_MODE_SIZE (mode))\n+\t\tcontinue;\n+\t      reg = lowpart_subreg (mode, reg, GET_MODE (reg));\n+\t      if (reg == NULL_RTX || GET_CODE (reg) != SUBREG)\n+\t\tcontinue;\n+\t    }\n+\t  *result_reg = reg;\n \t  if (lra_dump_file != NULL)\n \t    {\n \t      fprintf (lra_dump_file, \"\t Reuse r%d for reload \", regno);"}, {"sha": "5872f3685076d4a717446b4391678e4f478c837a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5df813131d18e4db50fb4f9c940ff782b8496a94", "patch": "@@ -1,3 +1,8 @@\n+2013-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/56195\n+\t* gcc.dg/torture/pr56195.c: New test.\n+\n 2013-02-08  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/54107"}, {"sha": "d1949fd0e8c687d1822ccaca5c2e4132dba65460", "filename": "gcc/testsuite/gcc.dg/torture/pr56195.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56195.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df813131d18e4db50fb4f9c940ff782b8496a94/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56195.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56195.c?ref=5df813131d18e4db50fb4f9c940ff782b8496a94", "patch": "@@ -0,0 +1,31 @@\n+/* PR rtl-optimization/56195 */\n+/* { dg-do assemble } */\n+\n+int i, a, t, b, c, d, e, f, j, *h;\n+\n+void\n+fn (void)\n+{\n+  if (b)\n+    {\n+      int *p, *q;\n+      char g;\n+\n+      if (f++)\n+\tfor (;; e++);\n+    lbl:\n+      for (b = 0; b < 2; b++)\n+\tt /= d + 1 ? : i || a < c < (d = f) ? : 1 | (j = 2);\n+\n+      *p = g >= *q ^ c != a ^ *p;\n+\n+      if (!e)\n+\t{\n+\t  q = p;\n+\t  goto lbl;\n+\t}\n+    }\n+\n+  if (h++)\n+    goto lbl;\n+}"}]}