{"sha": "41d733d943d25c83fffe587145271b6669e87984", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFkNzMzZDk0M2QyNWM4M2ZmZmU1ODcxNDUyNzFiNjY2OWU4Nzk4NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-01-26T17:10:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-01-26T17:10:24Z"}, "message": "PR c++/84036 - ICE with variadic capture.\n\n\tPR c++/82249\n\t* pt.c (tsubst_pack_expansion): When optimizing a simple\n\tsubstitution, pull a single pack expansion out of its pack.\n\nFrom-SVN: r257101", "tree": {"sha": "66c963b648f8be5106283b37c8e2ede45d3ec455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c963b648f8be5106283b37c8e2ede45d3ec455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41d733d943d25c83fffe587145271b6669e87984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d733d943d25c83fffe587145271b6669e87984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41d733d943d25c83fffe587145271b6669e87984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d733d943d25c83fffe587145271b6669e87984/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a011292a9e0c4fc64738237f01a0fd03ff07a6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a011292a9e0c4fc64738237f01a0fd03ff07a6ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a011292a9e0c4fc64738237f01a0fd03ff07a6ae"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "70b01346e0247a581e06e0f5070b404b511fe761", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d733d943d25c83fffe587145271b6669e87984/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d733d943d25c83fffe587145271b6669e87984/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=41d733d943d25c83fffe587145271b6669e87984", "patch": "@@ -1,5 +1,10 @@\n 2018-01-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84036 - ICE with variadic capture.\n+\tPR c++/82249\n+\t* pt.c (tsubst_pack_expansion): When optimizing a simple\n+\tsubstitution, pull a single pack expansion out of its pack.\n+\n \tPR c++/82514 - ICE with local class in generic lambda.\n \t* pt.c (regenerated_lambda_fn_p): Remove.\n \t(enclosing_instantiation_of): Don't use it."}, {"sha": "6c5d06b9ebbcdfed7e5a081edea4d2bec307d7ae", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d733d943d25c83fffe587145271b6669e87984/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d733d943d25c83fffe587145271b6669e87984/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=41d733d943d25c83fffe587145271b6669e87984", "patch": "@@ -11575,6 +11575,12 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n       && TREE_PURPOSE (packs) == pattern)\n     {\n       tree args = ARGUMENT_PACK_ARGS (TREE_VALUE (packs));\n+\n+      /* If the argument pack is a single pack expansion, pull it out.  */\n+      if (TREE_VEC_LENGTH (args) == 1\n+\t  && pack_expansion_args_count (args))\n+\treturn TREE_VEC_ELT (args, 0);\n+\n       /* Types need no adjustment, nor does sizeof..., and if we still have\n \t some pack expansion args we won't do anything yet.  */\n       if (TREE_CODE (t) == TYPE_PACK_EXPANSION"}, {"sha": "7740d660de2352bf960c629da89c1508b51080e9", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-variadic8.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d733d943d25c83fffe587145271b6669e87984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d733d943d25c83fffe587145271b6669e87984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic8.C?ref=41d733d943d25c83fffe587145271b6669e87984", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/84036\n+// { dg-do compile { target c++14 } }\n+\n+template < typename T >\n+auto f(T){\n+    [](auto ... i){\n+        [i ...]{};\n+    };\n+}\n+\n+int main(){\n+    f(0);\n+}"}]}