{"sha": "d4f076c9b8f4288d748c871b5849146a518dee7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRmMDc2YzliOGY0Mjg4ZDc0OGM4NzFiNTg0OTE0NmE1MThkZWU3Yg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2016-06-13T18:59:43Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-06-13T18:59:43Z"}, "message": "inclhack.def (aix_stdlib_malloc): New fix.\n\n* inclhack.def (aix_stdlib_malloc): New fix.\n(aix_stdlib_realloc): New fix.\n(aix_stdlib_calloc): New fix.\n(aix_stdlib_valloc): New fix.\n* fixincl.x: Regenerate.\n* test/base/stdlib.h [AIX_STDLIB_MALLOC]: New test.\n[AIX_STDLIB_REALLOC]: New test.\n[AIX_STDLIB_CALLOC]: New test.\n[AIX_STDLIB_VALLOC]: New test.\n\nFrom-SVN: r237394", "tree": {"sha": "5b6e2d235f4cd3fd8e7fc9fd9a59a720172cb3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b6e2d235f4cd3fd8e7fc9fd9a59a720172cb3d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4f076c9b8f4288d748c871b5849146a518dee7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f076c9b8f4288d748c871b5849146a518dee7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f076c9b8f4288d748c871b5849146a518dee7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f076c9b8f4288d748c871b5849146a518dee7b/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ac249bf93d84c213d8bdf40bf3f310d5df0b238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac249bf93d84c213d8bdf40bf3f310d5df0b238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac249bf93d84c213d8bdf40bf3f310d5df0b238"}], "stats": {"total": 256, "additions": 251, "deletions": 5}, "files": [{"sha": "60b46882db8f98572f5667f94a4fb64df5d07b94", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=d4f076c9b8f4288d748c871b5849146a518dee7b", "patch": "@@ -1,3 +1,15 @@\n+2016-06-13  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_stdlib_malloc): New fix.\n+\t(aix_stdlib_realloc): New fix.\n+\t(aix_stdlib_calloc): New fix.\n+\t(aix_stdlib_valloc): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/stdlib.h [AIX_STDLIB_MALLOC]: New test.\n+\t[AIX_STDLIB_REALLOC]: New test.\n+\t[AIX_STDLIB_CALLOC]: New test.\n+\t[AIX_STDLIB_VALLOC]: New test.\n+\n 2016-01-31  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR target/68741"}, {"sha": "c79a6e4fb2ca71f3fdcab439164667e1ae443651", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 177, "deletions": 5, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=d4f076c9b8f4288d748c871b5849146a518dee7b", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Sunday January 31, 2016 at 07:52:05 PM EST\n+ * It has been AutoGen-ed  June 10, 2016 at 12:56:52 PM by AutoGen 5.18.3\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sun 31 Jan 2016 19:52:05 EST\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jun 10 12:56:52 UTC 2016\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 231 fixup descriptions.\n+ * This file contains 235 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1545,6 +1545,154 @@ static const char* apzAix_Stdio_InlinePatch[] = {\n #ifdef ferror\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Stdlib_Malloc fix\n+ */\n+tSCC zAix_Stdlib_MallocName[] =\n+     \"aix_stdlib_malloc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Stdlib_MallocList[] =\n+  \"stdlib.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Stdlib_MallocMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Stdlib_MallocSelect0[] =\n+       \"#define[ \\t]+malloc[ \\t]+__linux_malloc\";\n+\n+#define    AIX_STDLIB_MALLOC_TEST_CT  1\n+static tTestDesc aAix_Stdlib_MallocTests[] = {\n+  { TT_EGREP,    zAix_Stdlib_MallocSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Stdlib_Malloc\n+ */\n+static const char* apzAix_Stdlib_MallocPatch[] = {\n+    \"format\",\n+    \"extern void *malloc(size_t) __asm__(\\\"__linux_malloc\\\");\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Stdlib_Realloc fix\n+ */\n+tSCC zAix_Stdlib_ReallocName[] =\n+     \"aix_stdlib_realloc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Stdlib_ReallocList[] =\n+  \"stdlib.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Stdlib_ReallocMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Stdlib_ReallocSelect0[] =\n+       \"#define[ \\t]+realloc[ \\t]+__linux_realloc\";\n+\n+#define    AIX_STDLIB_REALLOC_TEST_CT  1\n+static tTestDesc aAix_Stdlib_ReallocTests[] = {\n+  { TT_EGREP,    zAix_Stdlib_ReallocSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Stdlib_Realloc\n+ */\n+static const char* apzAix_Stdlib_ReallocPatch[] = {\n+    \"format\",\n+    \"extern void *realloc(void *, size_t) __asm__(\\\"__linux_realloc\\\");\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Stdlib_Calloc fix\n+ */\n+tSCC zAix_Stdlib_CallocName[] =\n+     \"aix_stdlib_calloc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Stdlib_CallocList[] =\n+  \"stdlib.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Stdlib_CallocMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Stdlib_CallocSelect0[] =\n+       \"#define[ \\t]+calloc[ \\t]+__linux_calloc\";\n+\n+#define    AIX_STDLIB_CALLOC_TEST_CT  1\n+static tTestDesc aAix_Stdlib_CallocTests[] = {\n+  { TT_EGREP,    zAix_Stdlib_CallocSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Stdlib_Calloc\n+ */\n+static const char* apzAix_Stdlib_CallocPatch[] = {\n+    \"format\",\n+    \"extern void *calloc(size_t, size_t) __asm__(\\\"__linux_calloc\\\");\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Stdlib_Valloc fix\n+ */\n+tSCC zAix_Stdlib_VallocName[] =\n+     \"aix_stdlib_valloc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Stdlib_VallocList[] =\n+  \"stdlib.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Stdlib_VallocMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Stdlib_VallocSelect0[] =\n+       \"#define[ \\t]+valloc[ \\t]+__linux_valloc\";\n+\n+#define    AIX_STDLIB_VALLOC_TEST_CT  1\n+static tTestDesc aAix_Stdlib_VallocTests[] = {\n+  { TT_EGREP,    zAix_Stdlib_VallocSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Stdlib_Valloc\n+ */\n+static const char* apzAix_Stdlib_VallocPatch[] = {\n+    \"format\",\n+    \"extern void *valloc(size_t) __asm__(\\\"__linux_valloc\\\");\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Strtof_Const fix\n@@ -9485,9 +9633,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          268\n+#define REGEX_COUNT          272\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            231\n+#define FIX_COUNT            235\n \n /*\n  *  Enumerate the fixes\n@@ -9525,6 +9673,10 @@ typedef enum {\n     AIX_STDINT_4_FIXIDX,\n     AIX_STDINT_5_FIXIDX,\n     AIX_STDIO_INLINE_FIXIDX,\n+    AIX_STDLIB_MALLOC_FIXIDX,\n+    AIX_STDLIB_REALLOC_FIXIDX,\n+    AIX_STDLIB_CALLOC_FIXIDX,\n+    AIX_STDLIB_VALLOC_FIXIDX,\n     AIX_STRTOF_CONST_FIXIDX,\n     AIX_SYSMACHINE_FIXIDX,\n     AIX_SYSWAIT_2_FIXIDX,\n@@ -9887,6 +10039,26 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_STDIO_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Stdio_InlineTests,   apzAix_Stdio_InlinePatch, 0 },\n \n+  {  zAix_Stdlib_MallocName,    zAix_Stdlib_MallocList,\n+     apzAix_Stdlib_MallocMachs,\n+     AIX_STDLIB_MALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Stdlib_MallocTests,   apzAix_Stdlib_MallocPatch, 0 },\n+\n+  {  zAix_Stdlib_ReallocName,    zAix_Stdlib_ReallocList,\n+     apzAix_Stdlib_ReallocMachs,\n+     AIX_STDLIB_REALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Stdlib_ReallocTests,   apzAix_Stdlib_ReallocPatch, 0 },\n+\n+  {  zAix_Stdlib_CallocName,    zAix_Stdlib_CallocList,\n+     apzAix_Stdlib_CallocMachs,\n+     AIX_STDLIB_CALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Stdlib_CallocTests,   apzAix_Stdlib_CallocPatch, 0 },\n+\n+  {  zAix_Stdlib_VallocName,    zAix_Stdlib_VallocList,\n+     apzAix_Stdlib_VallocMachs,\n+     AIX_STDLIB_VALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Stdlib_VallocTests,   apzAix_Stdlib_VallocPatch, 0 },\n+\n   {  zAix_Strtof_ConstName,    zAix_Strtof_ConstList,\n      apzAix_Strtof_ConstMachs,\n      AIX_STRTOF_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "8adb07678bc3b896978cec420eced597134034c2", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=d4f076c9b8f4288d748c871b5849146a518dee7b", "patch": "@@ -911,6 +911,48 @@ fix = {\n     test_text = \"#ifdef __cplusplus\\n}\\n\\n#ifdef ferror\";\n };\n \n+/*\n+ * stdlib.h on AIX uses #define on malloc and friends.\n+ */\n+fix = {\n+    hackname  = aix_stdlib_malloc;\n+    mach      = \"*-*-aix*\";\n+    files     = stdlib.h;\n+    select    = \"#define[ \\t]+malloc[ \\t]+__linux_malloc\";\n+    c_fix     = format;\n+    c_fix_arg = \"extern void *malloc(size_t) __asm__(\\\"__linux_malloc\\\");\";\n+    test_text = \"#define malloc __linux_malloc\";\n+};\n+\n+fix = {\n+    hackname  = aix_stdlib_realloc;\n+    mach      = \"*-*-aix*\";\n+    files     = stdlib.h;\n+    select    = \"#define[ \\t]+realloc[ \\t]+__linux_realloc\";\n+    c_fix     = format;\n+    c_fix_arg = \"extern void *realloc(void *, size_t) __asm__(\\\"__linux_realloc\\\");\";\n+    test_text = \"#define realloc __linux_realloc\";\n+};\n+\n+fix = {\n+    hackname  = aix_stdlib_calloc;\n+    mach      = \"*-*-aix*\";\n+    files     = stdlib.h;\n+    select    = \"#define[ \\t]+calloc[ \\t]+__linux_calloc\";\n+    c_fix     = format;\n+    c_fix_arg = \"extern void *calloc(size_t, size_t) __asm__(\\\"__linux_calloc\\\");\";\n+    test_text = \"#define calloc __linux_calloc\";\n+};\n+\n+fix = {\n+    hackname  = aix_stdlib_valloc;\n+    mach      = \"*-*-aix*\";\n+    files     = stdlib.h;\n+    select    = \"#define[ \\t]+valloc[ \\t]+__linux_valloc\";\n+    c_fix     = format;\n+    c_fix_arg = \"extern void *valloc(size_t) __asm__(\\\"__linux_valloc\\\");\";\n+    test_text = \"#define valloc __linux_valloc\";\n+};\n \n /*\n  * stdlib.h on AIX 4.3 declares strtof() with a non-const first argument."}, {"sha": "cee7e5db41316a3483c1e7dd807496a437857eeb", "filename": "fixincludes/tests/base/stdlib.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f076c9b8f4288d748c871b5849146a518dee7b/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdlib.h?ref=d4f076c9b8f4288d748c871b5849146a518dee7b", "patch": "@@ -9,6 +9,26 @@\n \n \n \n+#if defined( AIX_STDLIB_MALLOC_CHECK )\n+extern void *malloc(size_t) __asm__(\"__linux_malloc\");\n+#endif  /* AIX_STDLIB_MALLOC_CHECK */\n+\n+\n+#if defined( AIX_STDLIB_REALLOC_CHECK )\n+extern void *realloc(void *, size_t) __asm__(\"__linux_realloc\");\n+#endif  /* AIX_STDLIB_REALLOC_CHECK */\n+\n+\n+#if defined( AIX_STDLIB_CALLOC_CHECK )\n+extern void *calloc(size_t, size_t) __asm__(\"__linux_calloc\");\n+#endif  /* AIX_STDLIB_CALLOC_CHECK */\n+\n+\n+#if defined( AIX_STDLIB_VALLOC_CHECK )\n+extern void *valloc(size_t) __asm__(\"__linux_valloc\");\n+#endif  /* AIX_STDLIB_VALLOC_CHECK */\n+\n+\n #if defined( AIX_STRTOF_CONST_CHECK )\n extern float    strtof(const char *, char **);\n #endif  /* AIX_STRTOF_CONST_CHECK */"}]}