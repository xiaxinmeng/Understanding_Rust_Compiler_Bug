{"sha": "3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjZjM1ZTc2ZjIxYjY4NGY3ZjgyZmZjYmUxN2FiMThiYzQyMWY2Yw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-18T10:59:46Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-18T10:59:46Z"}, "message": "sse.md (define_mode_iterator VF2_AVX512VL): New.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_iterator VF2_AVX512VL): New.\n\t(define_mode_attr sseintvecmode2): New.\n\t(define_insn \"ufix_truncv2dfv2si2<mask_name>\"): Add masking.\n\t(define_insn \"fix_truncv4dfv4si2<mask_name>\"): New.\n\t(define_insn \"ufix_truncv4dfv4si2<mask_name>\"): Ditto.\n\t(define_insn\n\t\"<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>\"):\n\tDitto.\n\t(define_insn \"fix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"):\n\tDitto.\n\t(define_insn \"ufix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"):\n\tDitto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214090", "tree": {"sha": "81ac03b0777e7ef24afe3087ed6a2c529782c991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81ac03b0777e7ef24afe3087ed6a2c529782c991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c/comments", "author": null, "committer": null, "parents": [{"sha": "6f108bc62077c53c9115b09c0ee1d4c07eacc884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f108bc62077c53c9115b09c0ee1d4c07eacc884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f108bc62077c53c9115b09c0ee1d4c07eacc884"}], "stats": {"total": 94, "additions": 88, "deletions": 6}, "files": [{"sha": "5076b9d240bbb928c414e031af1a4fb58787001c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "patch": "@@ -1,3 +1,26 @@\n+2014-08-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VF2_AVX512VL): New.\n+\t(define_mode_attr sseintvecmode2): New.\n+\t(define_insn \"ufix_truncv2dfv2si2<mask_name>\"): Add masking.\n+\t(define_insn \"fix_truncv4dfv4si2<mask_name>\"): New.\n+\t(define_insn \"ufix_truncv4dfv4si2<mask_name>\"): Ditto.\n+\t(define_insn\n+\t\"<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>\"):\n+\tDitto.\n+\t(define_insn \"fix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"):\n+\tDitto.\n+\t(define_insn \"ufix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"):\n+\tDitto.\n+\n 2014-08-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "141c4319b7d0b9ff58bb4a66570c60e437f70176", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 65, "deletions": 6, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3bcf35e76f21b684f7f82ffcbe17ab18bc421f6c", "patch": "@@ -228,6 +228,9 @@\n (define_mode_iterator VF_512\n   [V16SF V8DF])\n \n+(define_mode_iterator VF2_AVX512VL\n+  [V8DF (V4DF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n+\n ;; All vector integer modes\n (define_mode_iterator VI\n   [(V16SI \"TARGET_AVX512F\") (V8DI \"TARGET_AVX512F\")\n@@ -523,6 +526,10 @@\n    (V32HI \"V32HI\") (V64QI \"V64QI\")\n    (V32QI \"V32QI\") (V16QI \"V16QI\")])\n \n+(define_mode_attr sseintvecmode2\n+  [(V8DF \"XI\") (V4DF \"OI\") (V2DF \"TI\")\n+   (V8SF \"OI\") (V4SF \"TI\")])\n+\n (define_mode_attr sseintvecmodelower\n   [(V16SF \"v16si\") (V8DF \"v8di\")\n    (V8SF \"v8si\") (V4DF \"v4di\")\n@@ -4235,15 +4242,67 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"fix_truncv4dfv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX\"\n-  \"vcvttpd2dq{y}\\t{%1, %0|%0, %1}\"\n+(define_insn \"ufix_truncv2dfv2si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (unsigned_fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttpd2udq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"fix_truncv4dfv4si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX || (TARGET_AVX512VL && TARGET_AVX512F)\"\n+  \"vcvttpd2dq{y}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n+   (set_attr \"mode\" \"OI\")])\n+\n+(define_insn \"ufix_truncv4dfv4si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(unsigned_fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512VL && TARGET_AVX512F\"\n+  \"vcvttpd2udq{y}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n+(define_insn \"<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>\"\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n+\t(any_fix:<sseintvecmode>\n+\t  (match_operand:VF2_AVX512VL 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n+  \"TARGET_AVX512DQ && <round_saeonly_mode512bit_condition>\"\n+  \"vcvttpd2<fixsuffix>qq\\t{<round_saeonly_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_saeonly_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseintvecmode2>\")])\n+\n+(define_insn \"fix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n+\t(unspec:<sseintvecmode>\n+\t  [(match_operand:VF2_AVX512VL 1 \"<round_nimm_predicate>\" \"<round_constraint>\")]\n+\t  UNSPEC_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && <round_mode512bit_condition>\"\n+  \"vcvtpd2qq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseintvecmode2>\")])\n+\n+(define_insn \"ufix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n+\t(unspec:<sseintvecmode>\n+\t  [(match_operand:VF2_AVX512VL 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n+\t  UNSPEC_UNSIGNED_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && <round_mode512bit_condition>\"\n+  \"vcvtpd2uqq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseintvecmode2>\")])\n+\n (define_expand \"avx_cvttpd2dq256_2\"\n   [(set (match_operand:V8SI 0 \"register_operand\")\n \t(vec_concat:V8SI"}]}