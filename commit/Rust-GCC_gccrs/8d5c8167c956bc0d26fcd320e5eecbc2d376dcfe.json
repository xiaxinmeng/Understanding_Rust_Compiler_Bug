{"sha": "8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1YzgxNjdjOTU2YmMwZDI2ZmNkMzIwZTVlZWNiYzJkMzc2ZGNmZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-09-30T17:21:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-09-30T17:21:12Z"}, "message": "regs.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n\n        * regs.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n        * caller-save.c (init_caller_save): Use it.\n        * tm.texi: Document HARD_REGNO_CALLER_SAVE_MODE.\n\nFrom-SVN: r22682", "tree": {"sha": "93f07283cba47ba79d733a55522f62a33876cd47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93f07283cba47ba79d733a55522f62a33876cd47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/comments", "author": null, "committer": null, "parents": [{"sha": "5ae4c799f27dd83933a7c5fe7aa1f154463ddea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae4c799f27dd83933a7c5fe7aa1f154463ddea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae4c799f27dd83933a7c5fe7aa1f154463ddea6"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "5e224d718286f3ab31c3b04979484e832fc61f27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "patch": "@@ -1,4 +1,10 @@\n-Wed Sep 30 12:57:30 1998Zack Weinberg  <zack@rabi.phys.columbia.edu>  \n+Wed Sep 30 18:19:27 1998  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* regs.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n+\t* caller-save.c (init_caller_save): Use it.\n+\t* tm.texi: Document HARD_REGNO_CALLER_SAVE_MODE.\n+\n+Wed Sep 30 12:57:30 1998 Zack Weinberg  <zack@rabi.phys.columbia.edu>  \n \n \t* configure.in: Add --enable-cpplib option which uses cpplib\n \tfor cpp, but doesn't link cpplib into cc1.  Make help text"}, {"sha": "60011f71c820147f258a7f82562ec08628952400", "filename": "gcc/caller-save.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "patch": "@@ -115,7 +115,7 @@ init_caller_save ()\n \t{\n \t  for (j = 1; j <= MOVE_MAX / UNITS_PER_WORD; j++)\n \t    {\n-\t      regno_save_mode[i][j] = choose_hard_reg_mode (i, j);\n+\t      regno_save_mode[i][j] = HARD_REGNO_CALLER_SAVE_MODE (i, j);\n \t      if (regno_save_mode[i][j] == VOIDmode && j == 1)\n \t\t{\n \t\t  call_fixed_regs[i] = 1;"}, {"sha": "02bdf92c1f5071b226f15eb39655e08cfe3f4276", "filename": "gcc/regs.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "patch": "@@ -211,6 +211,12 @@ extern int caller_save_needed;\n #define CLASS_LIKELY_SPILLED_P(CLASS) (reg_class_size[(int) (CLASS)] == 1)\n #endif\n \n+/* Select a register mode required for caller save of hard regno REGNO.  */\n+#ifndef HARD_REGNO_CALLER_SAVE_MODE\n+#define HARD_REGNO_CALLER_SAVE_MODE(REGNO, NREGS) \\\n+  choose_hard_reg_mode (REGNO, NREGS)\n+#endif\n+\n /* Allocated in local_alloc.  */\n \n /* A list of SCRATCH rtl allocated by local-alloc.  */"}, {"sha": "a42eb67a619d1ec6efb637027d0e25af1a273bcc", "filename": "gcc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=8d5c8167c956bc0d26fcd320e5eecbc2d376dcfe", "patch": "@@ -3174,6 +3174,14 @@ this is worth doing, and 0 otherwise.\n \n If you don't define this macro, a default is used which is good on most\n machines: @code{4 * @var{calls} < @var{refs}}.\n+\n+@findex HARD_REGNO_CALLER_SAVE_MODE\n+@item HARD_REGNO_CALLER_SAVE_MODE (@var{regno}, @var{nregs})\n+A C expression specifying which mode is required for saving @var{nregs}\n+of a pseudo-register in call-clobbered hard register @var{regno}.  If\n+@var{regno} is unsuitable for caller save, @code{VOIDmode} should be\n+returned.  For most machines this macro need not be defined since GCC\n+will select the smallest suitable mode.\n @end table\n \n @node Function Entry"}]}