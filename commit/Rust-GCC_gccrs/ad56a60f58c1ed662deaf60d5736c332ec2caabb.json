{"sha": "ad56a60f58c1ed662deaf60d5736c332ec2caabb", "node_id": "C_kwDOANBUbNoAKGFkNTZhNjBmNThjMWVkNjYyZGVhZjYwZDU3MzZjMzMyZWMyY2FhYmI", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-04-26T11:26:09Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-04-26T11:31:31Z"}, "message": "rs6000: Make the has_arch target selectors actually work\n\n2022-04-26  Segher Boessenkoool  <segher@kernel.crashing.org>\n\ngcc/testsuite/\n\tPR target/105349\n\t* lib/target-supports.exp (check_effective_target_has_arch_pwr5): Use\n\tthe specified dg-options.\n\t(check_effective_target_has_arch_pwr6): Ditto.\n\t(check_effective_target_has_arch_pwr7): Ditto.\n\t(check_effective_target_has_arch_pwr8): Ditto.\n\t(check_effective_target_has_arch_pwr9): Ditto.\n\t(check_effective_target_has_arch_pwr10): Ditto.\n\t(check_effective_target_has_arch_ppc64): Ditto.", "tree": {"sha": "168598ad6714ce84b4df0fe2ca78b6536b004089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/168598ad6714ce84b4df0fe2ca78b6536b004089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad56a60f58c1ed662deaf60d5736c332ec2caabb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad56a60f58c1ed662deaf60d5736c332ec2caabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad56a60f58c1ed662deaf60d5736c332ec2caabb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad56a60f58c1ed662deaf60d5736c332ec2caabb/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d31c678d68d7b6820a958584619ca763b0eb9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31c678d68d7b6820a958584619ca763b0eb9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d31c678d68d7b6820a958584619ca763b0eb9c5"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "2d5d0539bb4fd1fed8e22e036e8dd621b0d03514", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad56a60f58c1ed662deaf60d5736c332ec2caabb/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad56a60f58c1ed662deaf60d5736c332ec2caabb/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ad56a60f58c1ed662deaf60d5736c332ec2caabb", "patch": "@@ -6319,73 +6319,73 @@ proc check_effective_target_powerpc_p9modulo_ok { } {\n # return 1 if our compiler returns the ARCH_PWR defines with the options\n # as provided by the test.\n proc check_effective_target_has_arch_pwr5 { } {\n-\treturn [check_no_compiler_messages arch_pwr5 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr5 assembly {\n \t\t#ifndef _ARCH_PWR5\n \t\t#error does not have power5 support.\n \t\t#else\n \t\t/* \"has power5 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_pwr6 { } {\n-\treturn [check_no_compiler_messages arch_pwr6 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr6 assembly {\n \t\t#ifndef _ARCH_PWR6\n \t\t#error does not have power6 support.\n \t\t#else\n \t\t/* \"has power6 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_pwr7 { } {\n-\treturn [check_no_compiler_messages arch_pwr7 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr7 assembly {\n \t\t#ifndef _ARCH_PWR7\n \t\t#error does not have power7 support.\n \t\t#else\n \t\t/* \"has power7 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_pwr8 { } {\n-\treturn [check_no_compiler_messages arch_pwr8 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr8 assembly {\n \t\t#ifndef _ARCH_PWR8\n \t\t#error does not have power8 support.\n \t\t#else\n \t\t/* \"has power8 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_pwr9 { } {\n-\treturn [check_no_compiler_messages arch_pwr9 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr9 assembly {\n \t\t#ifndef _ARCH_PWR9\n \t\t#error does not have power9 support.\n \t\t#else\n \t\t/* \"has power9 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_pwr10 { } {\n-\treturn [check_no_compiler_messages arch_pwr10 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_pwr10 assembly {\n \t\t#ifndef _ARCH_PWR10\n \t\t#error does not have power10 support.\n \t\t#else\n \t\t/* \"has power10 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n proc check_effective_target_has_arch_ppc64 { } {\n-\treturn [check_no_compiler_messages arch_ppc64 assembly {\n+\treturn [check_no_compiler_messages_nocache arch_ppc64 assembly {\n \t\t#ifndef _ARCH_PPC64\n \t\t#error does not have ppc64 support.\n \t\t#else\n \t\t/* \"has ppc64 support\" */\n \t\t#endif\n-\t}]\n+\t} [current_compiler_flags]]\n }\n \n # Return 1 if this is a PowerPC target supporting -mcpu=power10."}]}