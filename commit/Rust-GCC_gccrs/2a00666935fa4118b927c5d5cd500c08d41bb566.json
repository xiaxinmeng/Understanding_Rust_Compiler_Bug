{"sha": "2a00666935fa4118b927c5d5cd500c08d41bb566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEwMDY2NjkzNWZhNDExOGI5MjdjNWQ1Y2Q1MDBjMDhkNDFiYjU2Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-16T11:06:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-16T11:06:49Z"}, "message": "* tree-ssa-loop-manip.c\n\t(scale_dominated_blocks_in_loop): Update to profile counts.\n\t(tree_transform_and_unroll_loop): Likewise.\n\nFrom-SVN: r254811", "tree": {"sha": "84f0a95ccbddc627833f757a4b83e7c9556b5c8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f0a95ccbddc627833f757a4b83e7c9556b5c8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a00666935fa4118b927c5d5cd500c08d41bb566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a00666935fa4118b927c5d5cd500c08d41bb566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a00666935fa4118b927c5d5cd500c08d41bb566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a00666935fa4118b927c5d5cd500c08d41bb566/comments", "author": null, "committer": null, "parents": [{"sha": "00fa28d1b471a3aca9994a21363ce3f58b6bd2f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fa28d1b471a3aca9994a21363ce3f58b6bd2f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00fa28d1b471a3aca9994a21363ce3f58b6bd2f2"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "9211a8b33c5bd15b326df99dca93f49ac7c04a2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a00666935fa4118b927c5d5cd500c08d41bb566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a00666935fa4118b927c5d5cd500c08d41bb566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a00666935fa4118b927c5d5cd500c08d41bb566", "patch": "@@ -1,3 +1,9 @@\n+2017-11-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-ssa-loop-manip.c\n+\t(scale_dominated_blocks_in_loop): Update to profile counts.\n+\t(tree_transform_and_unroll_loop): Likewise.\n+\n 2017-11-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-vect-loop-manip.c (vect_do_peeling): Do not use"}, {"sha": "12c49d7cfd4a98c5869cd84d0e1426b75878e367", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a00666935fa4118b927c5d5cd500c08d41bb566/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a00666935fa4118b927c5d5cd500c08d41bb566/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=2a00666935fa4118b927c5d5cd500c08d41bb566", "patch": "@@ -1091,11 +1091,11 @@ determine_exit_conditions (struct loop *loop, struct tree_niter_desc *desc,\n \n static void\n scale_dominated_blocks_in_loop (struct loop *loop, basic_block bb,\n-\t\t\t\tint num, int den)\n+\t\t\t\tprofile_count num, profile_count den)\n {\n   basic_block son;\n \n-  if (den == 0)\n+  if (!den.nonzero_p () && !(num == profile_count::zero ()))\n     return;\n \n   for (son = first_dom_son (CDI_DOMINATORS, bb);\n@@ -1104,7 +1104,7 @@ scale_dominated_blocks_in_loop (struct loop *loop, basic_block bb,\n     {\n       if (!flow_bb_inside_loop_p (loop, son))\n \tcontinue;\n-      scale_bbs_frequencies_int (&son, 1, num, den);\n+      scale_bbs_frequencies_profile_count (&son, 1, num, den);\n       scale_dominated_blocks_in_loop (loop, son, num, den);\n     }\n }\n@@ -1281,9 +1281,10 @@ tree_transform_and_unroll_loop (struct loop *loop, unsigned factor,\n     scale_dominated_blocks_in_loop (loop, exit->src,\n \t\t\t\t    /* We are scaling up here so probability\n \t\t\t\t       does not fit.  */\n-\t\t\t\t    REG_BR_PROB_BASE,\n-\t\t\t\t    REG_BR_PROB_BASE\n-\t\t\t\t    - exit->probability.to_reg_br_prob_base ());\n+\t\t\t\t    loop->header->count,\n+\t\t\t\t    loop->header->count\n+\t\t\t\t    - loop->header->count.apply_probability\n+\t\t\t\t\t (exit->probability));\n \n   bsi = gsi_last_bb (exit_bb);\n   exit_if = gimple_build_cond (EQ_EXPR, integer_zero_node,\n@@ -1377,8 +1378,7 @@ tree_transform_and_unroll_loop (struct loop *loop, unsigned factor,\n     {\n       /* Avoid dropping loop body profile counter to 0 because of zero count\n \t in loop's preheader.  */\n-      if (freq_e == profile_count::zero ())\n-        freq_e = profile_count::from_gcov_type (1);\n+      freq_e = freq_e.force_nonzero ();\n       scale_loop_frequencies (loop, freq_e.probability_in (freq_h));\n     }\n "}]}