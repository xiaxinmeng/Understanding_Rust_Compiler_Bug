{"sha": "b569be8ca62060f697f5a90a7933d880f334ace6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2OWJlOGNhNjIwNjBmNjk3ZjVhOTBhNzkzM2Q4ODBmMzM0YWNlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-06T04:34:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-06T04:34:45Z"}, "message": "re PR c++/48993 ([C++0x] segmentation fault when compiling this program with constexpr)\n\n\tPR c++/48993\n\t* semantics.c (potential_constant_expression_1) [CALL_EXPR]: Sorry\n\ton 'this' in a constructor.\n\nFrom-SVN: r177499", "tree": {"sha": "9346e0f324e5f8b2b3811a613a1d818c1e5c4514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9346e0f324e5f8b2b3811a613a1d818c1e5c4514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b569be8ca62060f697f5a90a7933d880f334ace6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b569be8ca62060f697f5a90a7933d880f334ace6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b569be8ca62060f697f5a90a7933d880f334ace6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b569be8ca62060f697f5a90a7933d880f334ace6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb0a32e80d75ed27f9714a0dc03d1faca50d94a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0a32e80d75ed27f9714a0dc03d1faca50d94a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb0a32e80d75ed27f9714a0dc03d1faca50d94a6"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "81c1d923e9ba3f7624de17d99b4b1572a7819807", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b569be8ca62060f697f5a90a7933d880f334ace6", "patch": "@@ -1,5 +1,9 @@\n 2011-08-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48993\n+\t* semantics.c (potential_constant_expression_1) [CALL_EXPR]: Sorry\n+\ton 'this' in a constructor.\n+\n \tPR c++/49921\n \t* semantics.c (finish_decltype_type): Call invalid_nonstatic_memfn_p.\n "}, {"sha": "aa62049f8be93b3b70ed26b9cd2b409bc34c3800", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b569be8ca62060f697f5a90a7933d880f334ace6", "patch": "@@ -7733,7 +7733,17 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n \t\t  {\n \t\t    tree x = get_nth_callarg (t, 0);\n \t\t    if (is_this_parameter (x))\n-\t\t      /* OK.  */;\n+\t\t      {\n+\t\t\tif (DECL_CONSTRUCTOR_P (DECL_CONTEXT (x)))\n+\t\t\t  {\n+\t\t\t    if (flags & tf_error)\n+\t\t\t      sorry (\"calling a member function of the \"\n+\t\t\t\t     \"object being constructed in a constant \"\n+\t\t\t\t     \"expression\");\n+\t\t\t    return false;\n+\t\t\t  }\n+\t\t\t/* Otherwise OK.  */;\n+\t\t      }\n \t\t    else if (!potential_constant_expression_1 (x, rval, flags))\n \t\t      return false;\n \t\t    i = 1;"}, {"sha": "bdfacbf796ea147b4f6d251b96beadee07f6834c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b569be8ca62060f697f5a90a7933d880f334ace6", "patch": "@@ -1,5 +1,8 @@\n 2011-08-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48993\n+\t* g++.dg/cpp0x/constexpr-48089.C: Add cases.\n+\n \tPR c++/49921\n \t* g++.dg/cpp0x/decltype31.C: New.\n "}, {"sha": "5124f7c7f4982d0c8996e7555aa1533bab7c9f8b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-48089.C", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b569be8ca62060f697f5a90a7933d880f334ace6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C?ref=b569be8ca62060f697f5a90a7933d880f334ace6", "patch": "@@ -22,3 +22,29 @@ struct R {\n };\n \n constexpr R r;\t\t\t// { dg-bogus \"\" \"\" { xfail *-*-* } }\n+\n+// Ill-formed (no diagnostic required)\n+struct T {\n+  int i;\n+  constexpr int f() { return i; }\n+  constexpr T(): i(0) { }\n+  constexpr T(const T& t) : i(f()) { } // { dg-message \"\" }\n+};\n+\n+constexpr T t1;\n+// Ill-formed (diagnostic required)\n+constexpr T t2(t1);\t\t// { dg-error \"\" }\n+\n+// Well-formed\n+struct U {\n+  int i, j;\n+  constexpr int f(int _i) { return _i; }\n+  constexpr int g() { return i; }\n+  constexpr U(): i(0), j(0) { }\n+  constexpr U(const U& t) : i(f(t.i)),j(0) { } // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+  constexpr U(int _i) : i(_i),j(g()) { } // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+};\n+\n+constexpr U u1;\n+constexpr U u2(u1);\t\t// { dg-bogus \"\" \"\" { xfail *-*-* } }\n+constexpr U u3(1);\t\t// { dg-bogus \"\" \"\" { xfail *-*-* } }"}]}