{"sha": "295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1ZjRlNDJmMWUyYWI4YjVjNzZlMWYwMmE3YzhlMmNiZDU5MjEzYw==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-22T11:53:01Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-22T11:53:01Z"}, "message": "Makefile.tpl: Rearrange by moving recursive_targets rules into their proper sections.\n\n\t* Makefile.tpl: Rearrange by moving recursive_targets rules\n\tinto their proper sections.\n\t* Makefile.tpl (top level bootstrap support): Move disabling\n\tof coverage flags from 'make' to 'configure'; improve comments.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r79818", "tree": {"sha": "f9cec6be8fc58fa4109ecb3cf82f68efef165a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9cec6be8fc58fa4109ecb3cf82f68efef165a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/comments", "author": null, "committer": null, "parents": [{"sha": "6dd297da046efe0b3be545053a676494daba3a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd297da046efe0b3be545053a676494daba3a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd297da046efe0b3be545053a676494daba3a2a"}], "stats": {"total": 31177, "additions": 15693, "deletions": 15484}, "files": [{"sha": "ad2038f0dc0f4343fbcf461b6a77aa1fa2ed2176", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "patch": "@@ -1,5 +1,11 @@\n 2004-03-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* Makefile.tpl: Rearrange by moving recursive_targets rules\n+\tinto their proper sections.\n+\t* Makefile.tpl (top level bootstrap support): Move disabling\n+\tof coverage flags from 'make' to 'configure'; improve comments.\n+\t* Makefile.in: Regenerate.\n+\n \t* Makefile.tpl (experimental top level bootstrap) Move stage1\n \tlanguage setting from all- target to configure- target; disable\n \tintermodule optimization in stage 1; prevent gratuitous rebuilds"}, {"sha": "4fbe1caabe3c162dc3b780821fe009b22c54c396", "filename": "Makefile.def", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "patch": "@@ -139,6 +139,8 @@ recursive_targets = { make_target= distclean; };\n recursive_targets = { make_target= maintainer-clean; };\n \n // Flags which need to be passed down.\n+// special_cases=x,y,z indicates directories which do their own thing with\n+// this flag\n \n // Directories etc.\n flags_to_pass = { flag= DESTDIR ; };\n@@ -170,7 +172,7 @@ flags_to_pass = { flag= target_alias ; };\n \n // Build tools\n flags_to_pass = { flag= BISON ; };\n-flags_to_pass = { flag= CC_FOR_BUILD ; };\n+flags_to_pass = { flag= CC_FOR_BUILD ; special_cases=gcc; };\n flags_to_pass = { flag= CXX_FOR_BUILD ; };\n flags_to_pass = { flag= EXPECT ; };\n flags_to_pass = { flag= INSTALL ; };"}, {"sha": "68f43e6acb0e81d68210dd064aada4c702536791", "filename": "Makefile.in", "status": "modified", "additions": 15589, "deletions": 15394, "changes": 30983, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c"}, {"sha": "91fdae2d285c1e3a995bb8d4cf5363e849514be3", "filename": "Makefile.tpl", "status": "modified", "additions": 95, "deletions": 89, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=295f4e42f1e2ab8b5c76e1f02a7c8e2cbd59213c", "patch": "@@ -515,89 +515,6 @@ do-[+make_target+]: [+make_target+]-host [+make_target+]-target\n   FOR target_modules +] \\\n     maybe-[+make_target+]-target-[+module+][+\n   ENDFOR target_modules +]\n-\n-# GCC, the eternal special case\n-.PHONY: maybe-[+make_target+]-gcc [+make_target+]-gcc\n-maybe-[+make_target+]-gcc:\n-[+make_target+]-gcc: [+\n-  FOR depend +]\\\n-    [+depend+]-gcc [+\n-  ENDFOR depend +]\n-\t@[ -f ./gcc/Makefile ] || exit 0; \\\n-\tr=`${PWD_COMMAND}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n-\tfor flag in $(EXTRA_GCC_FLAGS); do \\\n-\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n-\tdone; \\\n-\techo \"Doing [+make_target+] in gcc\" ; \\\n-\t(cd gcc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n-\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n-\t          \"RANLIB=$${RANLIB}\" \\\n-\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n-\t          [+make_target+]) \\\n-\t  || exit 1\n-\n-# Host modules.\n-[+ FOR host_modules +]\n-.PHONY: maybe-[+make_target+]-[+module+] [+make_target+]-[+module+]\n-maybe-[+make_target+]-[+module+]:\n-[+ IF (match-value? = \"missing\" (get \"make_target\") ) +]\n-# [+module+] doesn't support [+make_target+].\n-[+make_target+]-[+module+]:\n-[+ ELSE +]\n-[+make_target+]-[+module+]: [+\n-  FOR depend +]\\\n-    [+depend+]-[+module+] [+\n-  ENDFOR depend +]\n-\t@[ -f ./[+module+]/Makefile ] || exit 0; \\\n-\tr=`${PWD_COMMAND}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS); do \\\n-\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n-\tdone; \\\n-\techo \"Doing [+make_target+] in [+module+]\" ; \\\n-\t(cd [+module+] && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n-\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n-\t          \"RANLIB=$${RANLIB}\" \\\n-\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n-\t          [+make_target+]) \\\n-\t  || exit 1\n-[+ ENDIF +]\n-[+ ENDFOR host_modules +]\n-\n-# Target modules.\n-[+ FOR target_modules +]\n-.PHONY: maybe-[+make_target+]-target-[+module+] [+make_target+]-target-[+module+]\n-maybe-[+make_target+]-target-[+module+]:\n-[+ IF (match-value? = \"missing\" (get \"make_target\") ) +]\n-# [+module+] doesn't support [+make_target+].\n-[+make_target+]-target-[+module+]:\n-[+ ELSE +]\n-[+make_target+]-target-[+module+]: [+\n-  FOR depend +]\\\n-    [+depend+]-target-[+module+] [+\n-  ENDFOR depend +]\n-\t@[ -f $(TARGET_SUBDIR)/[+module+]/Makefile ] || exit 0 ; \\\n-\tr=`${PWD_COMMAND}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n-\techo \"Doing [+make_target+] in $(TARGET_SUBDIR)/[+module+]\" ; \\\n-\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n-\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n-\tdone; \\\n-\t(cd $(TARGET_SUBDIR)/[+module+] && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n-\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n-\t          \"RANLIB=$${RANLIB}\" \\\n-\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n-\t          [+make_target+]) \\\n-\t  || exit 1\n-[+ ENDIF +]\n-[+ ENDFOR target_modules +]\n [+ ENDFOR recursive_targets +]\n \n # Here are the targets which correspond to the do-X targets.\n@@ -931,6 +848,36 @@ install-[+module+]: installdirs\n \t    +] $(X11_FLAGS_TO_PASS)[+ \n \t  ENDIF with_x +] install)\n [+ ENDIF no_install +]\n+\n+# Other targets (info, dvi, etc.)\n+[+ FOR recursive_targets +]\n+.PHONY: maybe-[+make_target+]-[+module+] [+make_target+]-[+module+]\n+maybe-[+make_target+]-[+module+]:\n+[+ IF (match-value? = \"missing\" (get \"make_target\") ) +]\n+# [+module+] doesn't support [+make_target+].\n+[+make_target+]-[+module+]:\n+[+ ELSE +]\n+[+make_target+]-[+module+]: [+\n+  FOR depend +]\\\n+    [+depend+]-[+module+] [+\n+  ENDFOR depend +]\n+\t@[ -f ./[+module+]/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing [+make_target+] in [+module+]\" ; \\\n+\t(cd [+module+] && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n+\t          [+make_target+]) \\\n+\t  || exit 1\n+[+ ENDIF +]\n+[+ ENDFOR recursive_targets +]\n [+ ENDFOR host_modules +]\n \n # ---------------------------------------\n@@ -1057,6 +1004,36 @@ install-target-[+module+]: installdirs\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) install)\n [+ ENDIF no_install +]\n+\n+# Other targets (info, dvi, etc.)\n+[+ FOR recursive_targets +]\n+.PHONY: maybe-[+make_target+]-target-[+module+] [+make_target+]-target-[+module+]\n+maybe-[+make_target+]-target-[+module+]:\n+[+ IF (match-value? = \"missing\" (get \"make_target\") ) +]\n+# [+module+] doesn't support [+make_target+].\n+[+make_target+]-target-[+module+]:\n+[+ ELSE +]\n+[+make_target+]-target-[+module+]: [+\n+  FOR depend +]\\\n+    [+depend+]-target-[+module+] [+\n+  ENDFOR depend +]\n+\t@[ -f $(TARGET_SUBDIR)/[+module+]/Makefile ] || exit 0 ; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Doing [+make_target+] in $(TARGET_SUBDIR)/[+module+]\" ; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/[+module+] && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n+\t          [+make_target+]) \\\n+\t  || exit 1\n+[+ ENDIF +]\n+[+ ENDFOR recursive_targets +]\n [+ ENDFOR target_modules +]\n \n # ----------\n@@ -1265,6 +1242,32 @@ gcc-no-fixedincludes:\n \t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n \telse true; fi\n \n+# Other targets (dvi, info, etc.)\n+[+ FOR recursive_targets +]\n+.PHONY: maybe-[+make_target+]-gcc [+make_target+]-gcc\n+maybe-[+make_target+]-gcc:\n+[+make_target+]-gcc: [+\n+  FOR depend +]\\\n+    [+depend+]-gcc [+\n+  ENDFOR depend +]\n+\t@[ -f ./gcc/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\tfor flag in $(EXTRA_GCC_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing [+make_target+] in gcc\" ; \\\n+\t(cd gcc && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n+\t          [+make_target+]) \\\n+\t  || exit 1\n+\n+[+ ENDFOR recursive_targets +]\n+\n # ---------------------\n # GCC bootstrap support\n # ---------------------\n@@ -1295,10 +1298,13 @@ STAGE1_CFLAGS=@stage1_cflags@\n STAGE1_LANGUAGES=@stage1_languages@\n \n # For stage 1:\n-# * we force-disable intermodule optimizations, even if\n-#   --enable-intermodule was passed.  Luckily, autoconf always accepts\n-#   the last* argument when conflicting --enable arguments are passed.\n-# * we build only C (and possibly Ada).\n+# * We force-disable intermodule optimizations, even if\n+#   --enable-intermodule was passed, since the installed compiler probably\n+#   can't handle them.  Luckily, autoconf always respects\n+#   the last argument when conflicting --enable arguments are passed.\n+# * Likewise, we force-disable coverage flags, since the installed compiler\n+#   probably has never heard of them.\n+# * We build only C (and possibly Ada).\n configure-stage1-gcc:\n \techo configure-stage1-gcc > stage_last ; \\\n \tif [ -f stage1-gcc/Makefile ] ; then \\\n@@ -1342,7 +1348,7 @@ configure-stage1-gcc:\n \tesac; \\\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n-\t  --disable-intermodule \\\n+\t  --disable-intermodule --disable-coverage \\\n \t  --enable-languages=\"$(STAGE1_LANGUAGES)\"; \\\n \tcd .. ; \\\n \tmv gcc stage1-gcc ; \\\n@@ -1362,7 +1368,7 @@ all-stage1-gcc: configure-stage1-gcc prebootstrap\n \tcd gcc && \\\n \t$(MAKE) $(GCC_FLAGS_TO_PASS) \\\n \t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n-\t\tCOVERAGE_FLAGS= || exit 1 ; \\\n+\t\t|| exit 1 ; \\\n \tcd .. ; \\\n \tmv gcc stage1-gcc ; \\\n \t$(STAMP) all-stage1-gcc"}]}