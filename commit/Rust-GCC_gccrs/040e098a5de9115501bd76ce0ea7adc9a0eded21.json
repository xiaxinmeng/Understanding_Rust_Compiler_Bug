{"sha": "040e098a5de9115501bd76ce0ea7adc9a0eded21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwZTA5OGE1ZGU5MTE1NTAxYmQ3NmNlMGVhN2FkYzlhMGVkZWQyMQ==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-04-12T20:29:49Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-04-12T20:29:49Z"}, "message": "re PR bootstrap/14905 ('make install' fails on grepjar.1, not included in tarball)\n\n2004-04-12  Kelley Cook  <kcook@gcc.gnu.org>\n\n\tPR bootstrap/14905\n\t* configure.ac: Parse --enable-generated-files-in-srcdir.\n\t* Makefile.am: Copy man and info files to srcdir if requested.\n\t* configure: Regenerate.\n\t* Makefile.in Regenerate.\n\nFrom-SVN: r80628", "tree": {"sha": "8ce709af92968f901a527a9109d6d20087c85f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ce709af92968f901a527a9109d6d20087c85f30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040e098a5de9115501bd76ce0ea7adc9a0eded21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040e098a5de9115501bd76ce0ea7adc9a0eded21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040e098a5de9115501bd76ce0ea7adc9a0eded21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040e098a5de9115501bd76ce0ea7adc9a0eded21/comments", "author": null, "committer": null, "parents": [{"sha": "1e9b78b094572631b2abf3759e4752fe1862cc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9b78b094572631b2abf3759e4752fe1862cc12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9b78b094572631b2abf3759e4752fe1862cc12"}], "stats": {"total": 152, "additions": 137, "deletions": 15}, "files": [{"sha": "5032e913ccaacbab18f5c6f26be3ae6db2692dec", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=040e098a5de9115501bd76ce0ea7adc9a0eded21", "patch": "@@ -1,3 +1,11 @@\n+2004-04-12  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\tPR bootstrap/14905\n+\t* configure.ac: Parse --enable-generated-files-in-srcdir.\n+\t* Makefile.am: Copy man and info files to srcdir if requested.\n+\t* configure: Regenerate.\n+\t* Makefile.in Regenerate.\n+\n 2004-03-10  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure.ac: Bump AC_PREREQ to 2.59."}, {"sha": "6c442e22868cf691c661d816d646500a7be7681f", "filename": "fastjar/Makefile.am", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FMakefile.am?ref=040e098a5de9115501bd76ce0ea7adc9a0eded21", "patch": "@@ -82,3 +82,27 @@ jar.pod: $(srcdir)/fastjar.texi\n \n grepjar.pod: $(srcdir)/fastjar.texi\n \t-$(TEXI2POD) -D grepjar $< > $@\n+\n+# GCC LOCAL CHANGE\n+# The following commands allow us to release tarballs with the man pages\n+# and info documentation prebuilt.  This feature is enabled via \n+# --enable-generated-files-in-srcdir in the configure script.\n+\n+if GENINSRC\n+STAMP_GENINSRC = stamp-geninsrc\n+else\n+STAMP_GENINSRC =\n+endif\n+\n+all-local: $(STAMP_GENINSRC) \n+\n+stamp-geninsrc: jar.1 grepjar.1 fastjar.info\n+\t-cp -p $(top_builddir)/jar.1 $(srcdir)/jar.1\n+\t-cp -p $(top_builddir)/grepjar.1 $(srcdir)/grepjar.1\n+\t-cp -p $(top_builddir)/fastjar.info $(srcdir)/fastjar.info\n+\ttouch $@\n+\n+CLEANFILES = stamp-geninsrc\n+MAINTAINERCLEANFILES = $(srcdir)/jar.1 \\\n+                       $(srcdir)/grepjar.1 \\\n+                       $(srcdir)/fastjar.info"}, {"sha": "2260777ed82cae64117f5a5ef8e1c8fcde720e13", "filename": "fastjar/Makefile.in", "status": "modified", "additions": 41, "deletions": 14, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FMakefile.in?ref=040e098a5de9115501bd76ce0ea7adc9a0eded21", "patch": "@@ -60,6 +60,8 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+GENINSRC_FALSE = @GENINSRC_FALSE@\n+GENINSRC_TRUE = @GENINSRC_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n@@ -189,6 +191,20 @@ EXTRA_DIST = $(man_MANS)\n \n TEXI2POD = perl $(srcdir)/../contrib/texi2pod.pl\n POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-@gcc_version@\"\n+@GENINSRC_FALSE@STAMP_GENINSRC = \n+\n+\n+# GCC LOCAL CHANGE\n+# The following commands allow us to release tarballs with the man pages\n+# and info documentation prebuilt.  This feature is enabled via \n+# --enable-generated-files-in-srcdir in the configure script.\n+@GENINSRC_TRUE@STAMP_GENINSRC = stamp-geninsrc\n+\n+CLEANFILES = stamp-geninsrc\n+MAINTAINERCLEANFILES = $(srcdir)/jar.1 \\\n+                       $(srcdir)/grepjar.1 \\\n+                       $(srcdir)/fastjar.info\n+\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -601,7 +617,7 @@ distcleancheck: distclean\n \t       exit 1; } >&2\n check-am: all-am\n check: check-am\n-all-am: Makefile $(INFO_DEPS) $(PROGRAMS) $(MANS) config.h\n+all-am: Makefile $(INFO_DEPS) $(PROGRAMS) $(MANS) config.h all-local\n \n installdirs:\n \t$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(infodir) $(DESTDIR)$(man1dir)\n@@ -622,13 +638,15 @@ install-strip:\n mostlyclean-generic:\n \n clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n \n distclean-generic:\n \t-rm -f $(CONFIG_CLEAN_FILES)\n \n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n+\t-test -z \"$(MAINTAINERCLEANFILES)\" || rm -f $(MAINTAINERCLEANFILES)\n clean: clean-am\n \n clean-am: clean-binPROGRAMS clean-generic mostlyclean-am\n@@ -707,19 +725,20 @@ uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-man\n \n uninstall-man: uninstall-man1\n \n-.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \\\n-\tclean-generic ctags dist dist-all dist-gzip dist-info distcheck \\\n-\tdistclean distclean-compile distclean-generic distclean-hdr \\\n-\tdistclean-tags distcleancheck distdir distuninstallcheck dvi \\\n-\tdvi-am info info-am install install-am install-binPROGRAMS \\\n-\tinstall-data install-data-am install-exec install-exec-am \\\n-\tinstall-info install-info-am install-man install-man1 \\\n-\tinstall-strip installcheck installcheck-am installdirs \\\n-\tmaintainer-clean maintainer-clean-aminfo \\\n-\tmaintainer-clean-generic mostlyclean mostlyclean-aminfo \\\n-\tmostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \\\n-\ttags uninstall uninstall-am uninstall-binPROGRAMS \\\n-\tuninstall-info-am uninstall-man uninstall-man1\n+.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \\\n+\tclean-binPROGRAMS clean-generic ctags dist dist-all dist-gzip \\\n+\tdist-info distcheck distclean distclean-compile \\\n+\tdistclean-generic distclean-hdr distclean-tags distcleancheck \\\n+\tdistdir distuninstallcheck dvi dvi-am info info-am install \\\n+\tinstall-am install-binPROGRAMS install-data install-data-am \\\n+\tinstall-exec install-exec-am install-info install-info-am \\\n+\tinstall-man install-man1 install-strip installcheck \\\n+\tinstallcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-aminfo maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-aminfo mostlyclean-compile mostlyclean-generic pdf \\\n+\tpdf-am ps ps-am tags uninstall uninstall-am \\\n+\tuninstall-binPROGRAMS uninstall-info-am uninstall-man \\\n+\tuninstall-man1\n \n \n %.1: %.pod\n@@ -734,6 +753,14 @@ jar.pod: $(srcdir)/fastjar.texi\n \n grepjar.pod: $(srcdir)/fastjar.texi\n \t-$(TEXI2POD) -D grepjar $< > $@\n+\n+all-local: $(STAMP_GENINSRC) \n+\n+stamp-geninsrc: jar.1 grepjar.1 fastjar.info\n+\t-cp -p $(top_builddir)/jar.1 $(srcdir)/jar.1\n+\t-cp -p $(top_builddir)/grepjar.1 $(srcdir)/grepjar.1\n+\t-cp -p $(top_builddir)/fastjar.info $(srcdir)/fastjar.info\n+\ttouch $@\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "6c17bc46d6815201523a2cd2f82f338fd3d17bfe", "filename": "fastjar/configure", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fconfigure?ref=040e098a5de9115501bd76ce0ea7adc9a0eded21", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE RM CP CHMOD MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT fastjar_warn_cflags CPP EGREP ZLIBS ZDEPS ZINCS gcc_version LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE RM CP CHMOD MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT fastjar_warn_cflags CPP EGREP ZLIBS ZDEPS ZINCS GENINSRC_TRUE GENINSRC_FALSE gcc_version LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -849,6 +849,10 @@ Optional Features:\n   --enable-dependency-tracking  Do not reject slow dependency extractors\n   --enable-maintainer-mode enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n+  --enable-generated-files-in-srcdir\n+                          put copies of generated files in source dir\n+                          intended for creating source tarballs for users\n+                          without texinfo, perl, bison or flex.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -4981,6 +4985,36 @@ fi\n \n \n \n+# GCC LOCAL CHANGE\n+# We would like to our source tree to be readonly.  However when releases or\n+# pre-releases are generated, the man pages need to be included as they are\n+# converted from the texi files via perl which we don't require end users to\n+# have installed.\n+# Therefore we have --enable-generated-files-in-srcdir to do just that.\n+\n+echo \"$as_me:$LINENO: checking whether to place generated files in the source directory\" >&5\n+echo $ECHO_N \"checking whether to place generated files in the source directory... $ECHO_C\" >&6\n+    # Check whether --enable-generated-files-in-srcdir or --disable-generated-files-in-srcdir was given.\n+if test \"${enable_generated_files_in_srcdir+set}\" = set; then\n+  enableval=\"$enable_generated_files_in_srcdir\"\n+  generated_files_in_srcdir=$enableval\n+else\n+  generated_files_in_srcdir=no\n+fi;\n+\n+echo \"$as_me:$LINENO: result: $generated_files_in_srcdir\" >&5\n+echo \"${ECHO_T}$generated_files_in_srcdir\" >&6\n+\n+\n+if test x$generated_files_in_srcdir = xyes; then\n+  GENINSRC_TRUE=\n+  GENINSRC_FALSE='#'\n+else\n+  GENINSRC_TRUE='#'\n+  GENINSRC_FALSE=\n+fi\n+\n+\n # Get the version trigger filename from the toplevel\n if test \"${with_gcc_version_trigger+set}\" = set; then\n    gcc_version_trigger=$with_gcc_version_trigger\n@@ -5104,6 +5138,13 @@ echo \"$as_me: error: conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${GENINSRC_TRUE}\" && test -z \"${GENINSRC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"GENINSRC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"GENINSRC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_clean_files_save=$ac_clean_files\n@@ -5684,6 +5725,8 @@ s,@EGREP@,$EGREP,;t t\n s,@ZLIBS@,$ZLIBS,;t t\n s,@ZDEPS@,$ZDEPS,;t t\n s,@ZINCS@,$ZINCS,;t t\n+s,@GENINSRC_TRUE@,$GENINSRC_TRUE,;t t\n+s,@GENINSRC_FALSE@,$GENINSRC_FALSE,;t t\n s,@gcc_version@,$gcc_version,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@LTLIBOBJS@,$LTLIBOBJS,;t t"}, {"sha": "f80fa54aa3e31505f6e0e3ce875ef62593357162", "filename": "fastjar/configure.ac", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040e098a5de9115501bd76ce0ea7adc9a0eded21/fastjar%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fconfigure.ac?ref=040e098a5de9115501bd76ce0ea7adc9a0eded21", "patch": "@@ -67,6 +67,26 @@ AC_SUBST(ZLIBS)\n AC_SUBST(ZDEPS)\n AC_SUBST(ZINCS)\n \n+# GCC LOCAL CHANGE\n+# We would like to our source tree to be readonly.  However when releases or\n+# pre-releases are generated, the man pages need to be included as they are\n+# converted from the texi files via perl which we don't require end users to\n+# have installed.\n+# Therefore we have --enable-generated-files-in-srcdir to do just that.\n+\n+AC_MSG_CHECKING([whether to place generated files in the source directory])\n+  dnl generated-files-in-srcdir is disabled by default\n+  AC_ARG_ENABLE(generated-files-in-srcdir, \n+[  --enable-generated-files-in-srcdir\n+                          put copies of generated files in source dir\n+                          intended for creating source tarballs for users\n+                          without texinfo, perl, bison or flex.],\n+      generated_files_in_srcdir=$enableval,\n+      generated_files_in_srcdir=no)\n+\n+AC_MSG_RESULT($generated_files_in_srcdir)\n+AM_CONDITIONAL(GENINSRC, test x$generated_files_in_srcdir = xyes)\n+\n # Get the version trigger filename from the toplevel\n if test \"${with_gcc_version_trigger+set}\" = set; then\n    gcc_version_trigger=$with_gcc_version_trigger"}]}