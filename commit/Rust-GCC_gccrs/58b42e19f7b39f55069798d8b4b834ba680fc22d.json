{"sha": "58b42e19f7b39f55069798d8b4b834ba680fc22d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiNDJlMTlmN2IzOWY1NTA2OTc5OGQ4YjRiODM0YmE2ODBmYzIyZA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-12-08T02:15:36Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-12-08T02:15:36Z"}, "message": "re PR middle-end/18293 (Redundant copy operation introduced by expand)\n\n\n\tPR middle-end/18293\n\t* expmed.c (EXACT_POWER_OF_2_OR_ZERO_P): Move definition earlier.\n\t(expand_mult): Special case powers of two to avoid synth_mult.\n\t* loop.c (product_cheap_p): Handle case where expand_mult does\n\trequire/generate any instructions (i.e. multiplication by zero).\n\nFrom-SVN: r91851", "tree": {"sha": "7d6bf1e1b40a2f41f7cb8871232be4ed7ebe2012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d6bf1e1b40a2f41f7cb8871232be4ed7ebe2012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b42e19f7b39f55069798d8b4b834ba680fc22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b42e19f7b39f55069798d8b4b834ba680fc22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b42e19f7b39f55069798d8b4b834ba680fc22d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b42e19f7b39f55069798d8b4b834ba680fc22d/comments", "author": null, "committer": null, "parents": [{"sha": "b16bcb178a4671d33cc6a8f82e93b93518230cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16bcb178a4671d33cc6a8f82e93b93518230cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16bcb178a4671d33cc6a8f82e93b93518230cf3"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "b03f62a05b25a35ce088ead57d880e2dcc7c1e02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58b42e19f7b39f55069798d8b4b834ba680fc22d", "patch": "@@ -1,3 +1,11 @@\n+2004-12-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/18293\n+\t* expmed.c (EXACT_POWER_OF_2_OR_ZERO_P): Move definition earlier.\n+\t(expand_mult): Special case powers of two to avoid synth_mult.\n+\t* loop.c (product_cheap_p): Handle case where expand_mult does\n+\trequire/generate any instructions (i.e. multiplication by zero).\n+\n 2004-12-07  Richard Henderson  <rth@redhat.com>\n \n \t* tree-pretty-print.c (dump_array_domain): Split out from"}, {"sha": "47fc2d2bd4749115a0acfead9e83995a23fd1aae", "filename": "gcc/expmed.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=58b42e19f7b39f55069798d8b4b834ba680fc22d", "patch": "@@ -54,6 +54,9 @@ static void do_cmp_and_jump (rtx, rtx, enum rtx_code, enum machine_mode, rtx);\n static rtx expand_smod_pow2 (enum machine_mode, rtx, HOST_WIDE_INT);\n static rtx expand_sdiv_pow2 (enum machine_mode, rtx, HOST_WIDE_INT);\n \n+/* Test whether a value is zero of a power of two.  */\n+#define EXACT_POWER_OF_2_OR_ZERO_P(x) (((x) & ((x) - 1)) == 0)\n+\n /* Nonzero means divides or modulus operations are relatively cheap for\n    powers of two, so don't use branches; emit the operation instead.\n    Usually, this will mean that the MD file will emit non-branch\n@@ -3024,11 +3027,25 @@ expand_mult (enum machine_mode mode, rtx op0, rtx op1, rtx target,\n   if (const_op1 && GET_CODE (const_op1) == CONST_INT\n       && (unsignedp || !flag_trapv))\n     {\n-      int mult_cost = rtx_cost (gen_rtx_MULT (mode, op0, op1), SET);\n+      HOST_WIDE_INT coeff = INTVAL (const_op1);\n+      int mult_cost;\n+\n+      /* Special case powers of two.  */\n+      if (EXACT_POWER_OF_2_OR_ZERO_P (coeff))\n+\t{\n+\t  if (coeff == 0)\n+\t    return const0_rtx;\n+\t  if (coeff == 1)\n+\t    return op0;\n+\t  return expand_shift (LSHIFT_EXPR, mode, op0,\n+\t\t\t       build_int_cst (NULL_TREE, floor_log2 (coeff)),\n+\t\t\t       target, unsignedp);\n+\t}\n \n-      if (choose_mult_variant (mode, INTVAL (const_op1), &algorithm, &variant,\n+      mult_cost = rtx_cost (gen_rtx_MULT (mode, op0, op1), SET);\n+      if (choose_mult_variant (mode, coeff, &algorithm, &variant,\n \t\t\t       mult_cost))\n-\treturn expand_mult_const (mode, op0, INTVAL (const_op1), target,\n+\treturn expand_mult_const (mode, op0, coeff, target,\n \t\t\t\t  &algorithm, variant);\n     }\n \n@@ -3627,8 +3644,6 @@ expand_sdiv_pow2 (enum machine_mode mode, rtx op0, HOST_WIDE_INT d)\n    (x mod 12) == (((x & 1023) + ((x >> 8) & ~3)) * 0x15555558 >> 2 * 3) >> 28\n    */\n \n-#define EXACT_POWER_OF_2_OR_ZERO_P(x) (((x) & ((x) - 1)) == 0)\n-\n rtx\n expand_divmod (int rem_flag, enum tree_code code, enum machine_mode mode,\n \t       rtx op0, rtx op1, rtx target, int unsignedp)"}, {"sha": "15039e85bfcd72e2a564c629819b97ddd7b3179f", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b42e19f7b39f55069798d8b4b834ba680fc22d/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=58b42e19f7b39f55069798d8b4b834ba680fc22d", "patch": "@@ -9202,7 +9202,9 @@ product_cheap_p (rtx a, rtx b)\n   end_sequence ();\n \n   win = 1;\n-  if (INSN_P (tmp))\n+  if (tmp == NULL_RTX)\n+    ;\n+  else if (INSN_P (tmp))\n     {\n       n_insns = 0;\n       while (tmp != NULL_RTX)"}]}