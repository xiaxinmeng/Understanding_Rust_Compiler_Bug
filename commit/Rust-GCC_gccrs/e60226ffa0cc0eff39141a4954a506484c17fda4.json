{"sha": "e60226ffa0cc0eff39141a4954a506484c17fda4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwMjI2ZmZhMGNjMGVmZjM5MTQxYTQ5NTRhNTA2NDg0YzE3ZmRhNA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2017-07-05T12:58:46Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2017-07-05T12:58:46Z"}, "message": "[Patch ARM] Remove %? string from some Advanced SIMD patterns.\n\nAdvanced SIMD patterns are not predicable, thus they should not have\n%? in their output templates. Found when auditing the code for\nsomething else. This has been in my tree for sometime , bootstrapped\nand regression tested on armhf for armv7ve+simd as the architectural\nbase.\n\nApplied to trunk\n\n<DATE>  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* config/arm/neon.md (fma<VCVTF:mode>4): Remove %?.\n\t(fma<VH:mode>4_intrinsic): Likewise.\n\t(*fmsub<VCVTF:mode>4): Likewise.\n\t(*fmsub<VH:mode>4_intrinsic): Likewise.\n\nregards\nRamana\n\nFrom-SVN: r249999", "tree": {"sha": "786ad1e69105d86754df7e9ea762c40395beb5db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786ad1e69105d86754df7e9ea762c40395beb5db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e60226ffa0cc0eff39141a4954a506484c17fda4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60226ffa0cc0eff39141a4954a506484c17fda4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60226ffa0cc0eff39141a4954a506484c17fda4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60226ffa0cc0eff39141a4954a506484c17fda4/comments", "author": null, "committer": null, "parents": [{"sha": "e483b7b46fd2e0db7d98975b8efcc033bc6ffb7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e483b7b46fd2e0db7d98975b8efcc033bc6ffb7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e483b7b46fd2e0db7d98975b8efcc033bc6ffb7d"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "c566a3a6cf935720535fd7cb6c30fa862e0d57fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60226ffa0cc0eff39141a4954a506484c17fda4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60226ffa0cc0eff39141a4954a506484c17fda4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e60226ffa0cc0eff39141a4954a506484c17fda4", "patch": "@@ -1,3 +1,10 @@\n+2017-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* config/arm/neon.md (fma<VCVTF:mode>4): Remove %?.\n+\t(fma<VH:mode>4_intrinsic): Likewise.\n+\t(*fmsub<VCVTF:mode>4): Likewise.\n+\t(*fmsub<VH:mode>4_intrinsic): Likewise.\n+\n 2017-07-05  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/81305"}, {"sha": "33b25ff3c730544b4376bf318400d703c8813a0a", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60226ffa0cc0eff39141a4954a506484c17fda4/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60226ffa0cc0eff39141a4954a506484c17fda4/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=e60226ffa0cc0eff39141a4954a506484c17fda4", "patch": "@@ -678,7 +678,7 @@\n \t\t (match_operand:VCVTF 2 \"register_operand\" \"w\")\n \t\t (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA && flag_unsafe_math_optimizations\"\n-  \"vfma%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vfma.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n@@ -688,7 +688,7 @@\n \t\t (match_operand:VCVTF 2 \"register_operand\" \"w\")\n \t\t (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA\"\n-  \"vfma%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vfma.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n@@ -720,7 +720,7 @@\n \t\t   (match_operand:VCVTF 2 \"register_operand\" \"w\")\n \t\t   (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA && flag_unsafe_math_optimizations\"\n-  \"vfms%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vfms.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n@@ -731,7 +731,7 @@\n     (match_operand:VCVTF 2 \"register_operand\" \"w\")\n     (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n  \"TARGET_NEON && TARGET_FMA\"\n- \"vfms%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+ \"vfms.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n  [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n@@ -752,7 +752,7 @@\n \t\t         \"s_register_operand\" \"w\")]\n \t\tNEON_VRINT))]\n   \"TARGET_NEON && TARGET_FPU_ARMV8\"\n-  \"vrint<nvrint_variant>%?.f32\\\\t%<V_reg>0, %<V_reg>1\"\n+  \"vrint<nvrint_variant>.f32\\\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"type\" \"neon_fp_round_<V_elem_ch><q>\")]\n )\n "}]}