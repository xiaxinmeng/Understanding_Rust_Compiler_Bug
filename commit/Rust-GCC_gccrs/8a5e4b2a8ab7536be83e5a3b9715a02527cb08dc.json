{"sha": "8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE1ZTRiMmE4YWI3NTM2YmU4M2U1YTNiOTcxNWEwMjUyN2NiMDhkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T07:00:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T07:00:19Z"}, "message": "[multiple changes]\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* s-imguns.ads: Minor reformatting.\n\n2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Build_Finalization_Master): Move all local\n\tvariables to the proper code section. When looking for an existing\n\tfinalization master, inspect the ultimate ancestor type of the\n\tfull view.\n\t* sem_util.ads, sem_util.adb (Root_Type_Of_Full_View): New routine.\n\nFrom-SVN: r212733", "tree": {"sha": "b1ea51c19595d75cd006001f64414a341d309875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1ea51c19595d75cd006001f64414a341d309875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/comments", "author": null, "committer": null, "parents": [{"sha": "52d9ba4d30e98209b2d7f0a04fa2d59ce2e6b3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52d9ba4d30e98209b2d7f0a04fa2d59ce2e6b3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52d9ba4d30e98209b2d7f0a04fa2d59ce2e6b3af"}], "stats": {"total": 60, "additions": 49, "deletions": 11}, "files": [{"sha": "d2381cdfcd05e00a5f467b7b15a0a3f89c134a6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "patch": "@@ -1,3 +1,15 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-imguns.ads: Minor reformatting.\n+\n+2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Finalization_Master): Move all local\n+\tvariables to the proper code section. When looking for an existing\n+\tfinalization master, inspect the ultimate ancestor type of the\n+\tfull view.\n+\t* sem_util.ads, sem_util.adb (Root_Type_Of_Full_View): New routine.\n+\n 2014-07-17  Robert Dewar  <dewar@adacore.com>\n \n \t* aspects.ads, aspects.adb: Add entries for aspect Annotate."}, {"sha": "08b47f6d70b2259f2415cee4a49921e6ae9bc14b", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "patch": "@@ -767,9 +767,6 @@ package body Exp_Ch7 is\n       Ins_Node   : Node_Id := Empty;\n       Encl_Scope : Entity_Id := Empty)\n    is\n-      Desig_Typ : constant Entity_Id := Directly_Designated_Type (Typ);\n-      Ptr_Typ   : Entity_Id := Root_Type (Base_Type (Typ));\n-\n       function In_Deallocation_Instance (E : Entity_Id) return Boolean;\n       --  Determine whether entity E is inside a wrapper package created for\n       --  an instance of Ada.Unchecked_Deallocation.\n@@ -799,13 +796,19 @@ package body Exp_Ch7 is\n          return False;\n       end In_Deallocation_Instance;\n \n+      --  Local variables\n+\n+      Desig_Typ : constant Entity_Id := Directly_Designated_Type (Typ);\n+\n+      Ptr_Typ : constant Entity_Id := Root_Type_Of_Full_View (Base_Type (Typ));\n+      --  A finalization master created for a named access type is associated\n+      --  with the full view (if applicable) as a consequence of freezing. The\n+      --  full view criteria does not apply to anonymous access types because\n+      --  those cannot have a private and a full view.\n+\n    --  Start of processing for Build_Finalization_Master\n \n    begin\n-      if Is_Private_Type (Ptr_Typ) and then Present (Full_View (Ptr_Typ)) then\n-         Ptr_Typ := Full_View (Ptr_Typ);\n-      end if;\n-\n       --  Certain run-time configurations and targets do not provide support\n       --  for controlled types.\n "}, {"sha": "134f916e36842e8f2a1ddf07cf5e4aba933119e6", "filename": "gcc/ada/s-imguns.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fs-imguns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fs-imguns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imguns.ads?ref=8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "patch": "@@ -30,7 +30,7 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the routines for supporting the Image attribute for\n---  modular integer types up to Size Unsigned'Size, and also for conversion\n+--  modular integer types up to size Unsigned'Size, and also for conversion\n --  operations required in Text_IO.Modular_IO for such types.\n \n with System.Unsigned_Types;\n@@ -43,9 +43,9 @@ package System.Img_Uns is\n       S : in out String;\n       P : out Natural);\n    pragma Inline (Image_Unsigned);\n-   --  Computes Unsigned'Image (V) and stores the result in S (1 .. P)\n-   --  setting the resulting value of P. The caller guarantees that S\n-   --  is long enough to hold the result, and that S'First is 1.\n+   --  Computes Unsigned'Image (V) and stores the result in S (1 .. P) setting\n+   --  the resulting value of P. The caller guarantees that S is long enough to\n+   --  hold the result, and that S'First is 1.\n \n    procedure Set_Image_Unsigned\n      (V : System.Unsigned_Types.Unsigned;"}, {"sha": "b57d6f52b6438f32e2971abe31ea6cac29ccec7f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "patch": "@@ -15355,6 +15355,24 @@ package body Sem_Util is\n         and then not Is_Constrained (Etype (Subp));\n    end Returns_Unconstrained_Type;\n \n+   ----------------------------\n+   -- Root_Type_Of_Full_View --\n+   ----------------------------\n+\n+   function Root_Type_Of_Full_View (T : Entity_Id) return Entity_Id is\n+      Rtyp : constant Entity_Id := Root_Type (T);\n+\n+   begin\n+      --  The root type of the full view may itself be a private type. Keep\n+      --  looking for the ultimate derivation parent.\n+\n+      if Is_Private_Type (Rtyp) and then Present (Full_View (Rtyp)) then\n+         return Root_Type_Of_Full_View (Full_View (Rtyp));\n+      else\n+         return Rtyp;\n+      end if;\n+   end Root_Type_Of_Full_View;\n+\n    ---------------------------\n    -- Safe_To_Capture_Value --\n    ---------------------------"}, {"sha": "e90ad18e775a964e2a26d4094bef20364b8e2571", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=8a5e4b2a8ab7536be83e5a3b9715a02527cb08dc", "patch": "@@ -1697,6 +1697,11 @@ package Sem_Util is\n    function Returns_Unconstrained_Type (Subp : Entity_Id) return Boolean;\n    --  Return true if Subp is a function that returns an unconstrained type\n \n+   function Root_Type_Of_Full_View (T : Entity_Id) return Entity_Id;\n+   --  Similar to attribute Root_Type, but this version always follows the\n+   --  Full_View of a private type (if available) while searching for the\n+   --  ultimate derivation ancestor.\n+\n    function Safe_To_Capture_Value\n      (N    : Node_Id;\n       Ent  : Entity_Id;"}]}