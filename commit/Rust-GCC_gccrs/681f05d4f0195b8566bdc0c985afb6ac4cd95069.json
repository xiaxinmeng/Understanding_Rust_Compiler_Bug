{"sha": "681f05d4f0195b8566bdc0c985afb6ac4cd95069", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxZjA1ZDRmMDE5NWI4NTY2YmRjMGM5ODVhZmI2YWM0Y2Q5NTA2OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-02-21T19:55:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-02-21T19:55:17Z"}, "message": "complex (proj): Change return type per DR 1137.\n\n2010-02-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/complex (proj): Change return type per DR 1137.\n\t(conj): Copy from tr1_impl, likewise adjust return type.\n\t* include/tr1_impl/complex (conj): Remove.\n\t* include/tr1/complex (conj): Add both overloads.\n\t* testsuite/26_numerics/complex/dr781.cc: Rename to...\n\t* testsuite/26_numerics/complex/dr781_dr1137.cc: ... this, and extend.\n\n\t* include/tr1_impl/complex (arg): Optimize.\n\nFrom-SVN: r156940", "tree": {"sha": "bad7267e444c4d59597fc04451de59d8097bb362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad7267e444c4d59597fc04451de59d8097bb362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/681f05d4f0195b8566bdc0c985afb6ac4cd95069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681f05d4f0195b8566bdc0c985afb6ac4cd95069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681f05d4f0195b8566bdc0c985afb6ac4cd95069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681f05d4f0195b8566bdc0c985afb6ac4cd95069/comments", "author": null, "committer": null, "parents": [{"sha": "04afbf1c7feeaecd4d0e85bd2566ef3e65e84b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04afbf1c7feeaecd4d0e85bd2566ef3e65e84b21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04afbf1c7feeaecd4d0e85bd2566ef3e65e84b21"}], "stats": {"total": 72, "additions": 51, "deletions": 21}, "files": [{"sha": "4a5f342bbb562d290950a6d945f81efefebdfca7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=681f05d4f0195b8566bdc0c985afb6ac4cd95069", "patch": "@@ -1,3 +1,14 @@\n+2010-02-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/complex (proj): Change return type per DR 1137.\n+\t(conj): Copy from tr1_impl, likewise adjust return type.\n+\t* include/tr1_impl/complex (conj): Remove.\n+\t* include/tr1/complex (conj): Add both overloads.\n+\t* testsuite/26_numerics/complex/dr781.cc: Rename to...\n+\t* testsuite/26_numerics/complex/dr781_dr1137.cc: ... this, and extend.\n+\n+\t* include/tr1_impl/complex (arg): Optimize.\n+\n 2010-02-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/20_util/is_trivial/requirements/typedefs.cc: New."}, {"sha": "6d3097e0a1e340e2dfb4726ad39852f19ce41dc3", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=681f05d4f0195b8566bdc0c985afb6ac4cd95069", "patch": "@@ -1,7 +1,7 @@\n // The template and inlines for the -*- C++ -*- complex number classes.\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -1572,13 +1572,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     { return __complex_proj(__z); }\n #endif\n \n+  // DR 1137.\n   template<typename _Tp>\n-    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n+    inline typename __gnu_cxx::__promote<_Tp>::__type\n     proj(_Tp __x)\n-    {\n-      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;\n-      return std::proj(std::complex<__type>(__x));\n-    }\n+    { return __x; }\n+\n+  template<typename _Tp>\n+    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    conj(_Tp __x)\n+    { return __x; }\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "063112b440b2ec03df4909eada4afdb7fc7b6412", "filename": "libstdc++-v3/include/tr1/complex", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex?ref=681f05d4f0195b8566bdc0c985afb6ac4cd95069", "patch": "@@ -1,6 +1,6 @@\n // TR1 complex -*- C++ -*-\n \n-// Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,7 +56,17 @@ namespace std\n namespace tr1\n {\n   using std::arg;\n-  using std::conj;\n+\n+  template<typename _Tp>\n+    inline std::complex<_Tp>\n+    conj(const std::complex<_Tp>& __z)\n+    { return std::conj(__z); }  \n+\n+  template<typename _Tp>\n+    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n+    conj(_Tp __x)\n+    { return __x; }\n+\n   using std::imag;\n   using std::norm;\n   using std::polar;"}, {"sha": "ac420bf199cb2905ae6ad94edf256e5e2ac0abe6", "filename": "libstdc++-v3/include/tr1_impl/complex", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex?ref=681f05d4f0195b8566bdc0c985afb6ac4cd95069", "patch": "@@ -1,6 +1,6 @@\n // TR1 complex -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -311,14 +311,10 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     arg(_Tp __x)\n     {\n       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;\n-      return std::arg(std::complex<__type>(__x));\n+      return std::signbit(__x) ? __type(3.1415926535897932384626433832795029L)\n+\t                       : __type();\n     }\n \n-  template<typename _Tp>\n-    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n-    conj(_Tp __x)\n-    { return __x; }\n-\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     imag(_Tp)"}, {"sha": "145a4b04499867941df75eb5497e1c9cb9c10573", "filename": "libstdc++-v3/testsuite/26_numerics/complex/dr781_dr1137.cc", "status": "renamed", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681f05d4f0195b8566bdc0c985afb6ac4cd95069/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc?ref=681f05d4f0195b8566bdc0c985afb6ac4cd95069", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // 2008-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,6 +23,7 @@\n #include <testsuite_tr1.h>\n \n // DR 781. std::complex should add missing C99 functions.\n+// DR 1137. Return type of conj and proj.\n void test01()\n {\n   bool test __attribute__((unused)) = true;\n@@ -45,12 +46,21 @@ void test01()\n   check_ret_type<cmplx_d_type>(std::proj(c_d1));\n   check_ret_type<cmplx_ld_type>(std::proj(c_ld1));\n \n-  check_ret_type<cmplx_f_type>(std::proj(f1));\n-  check_ret_type<cmplx_d_type>(std::proj(d1));\n-  check_ret_type<cmplx_d_type>(std::proj(i1));\n+  check_ret_type<float>(std::proj(f1));\n+  check_ret_type<double>(std::proj(d1));\n+  check_ret_type<double>(std::proj(i1));\n   VERIFY( std::proj(i1) == std::proj(double(i1)) );\n-  VERIFY( std::proj(i1) == std::proj(cmplx_d_type(double(i1))) );\n-  check_ret_type<cmplx_ld_type>(std::proj(ld1));\n+  check_ret_type<long double>(std::proj(ld1));\n+\n+  check_ret_type<cmplx_f_type>(std::conj(c_f1));\n+  check_ret_type<cmplx_d_type>(std::conj(c_d1));\n+  check_ret_type<cmplx_ld_type>(std::conj(c_ld1));\n+\n+  check_ret_type<float>(std::conj(f1));\n+  check_ret_type<double>(std::conj(d1));\n+  check_ret_type<double>(std::conj(i1));\n+  VERIFY( std::conj(i1) == std::conj(double(i1)) );\n+  check_ret_type<long double>(std::conj(ld1));\n }\n \n int main()", "previous_filename": "libstdc++-v3/testsuite/26_numerics/complex/dr781.cc"}]}