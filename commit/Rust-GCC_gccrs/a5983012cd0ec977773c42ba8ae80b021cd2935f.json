{"sha": "a5983012cd0ec977773c42ba8ae80b021cd2935f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU5ODMwMTJjZDBlYzk3Nzc3M2M0MmJhOGFlODBiMDIxY2QyOTM1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-01-14T17:17:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-01-14T17:17:32Z"}, "message": "check_type.cc: Minor tweaks.\n\n2011-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/25_algorithms/is_permutation/check_type.cc: Minor\n\ttweaks.\n\t* testsuite/25_algorithms/is_permutation/1.cc: Cosmetic changes.\n\nFrom-SVN: r168796", "tree": {"sha": "0089bb7e81e2d942ef48539496a355b0ee99af78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0089bb7e81e2d942ef48539496a355b0ee99af78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5983012cd0ec977773c42ba8ae80b021cd2935f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5983012cd0ec977773c42ba8ae80b021cd2935f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5983012cd0ec977773c42ba8ae80b021cd2935f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5983012cd0ec977773c42ba8ae80b021cd2935f/comments", "author": null, "committer": null, "parents": [{"sha": "bb127cd84ba16c439cf3d5783f5e112cdfb4693b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb127cd84ba16c439cf3d5783f5e112cdfb4693b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb127cd84ba16c439cf3d5783f5e112cdfb4693b"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "cd122ad4d6a1d40fdd339cd6b1aef5f29e9e8e21", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5983012cd0ec977773c42ba8ae80b021cd2935f", "patch": "@@ -1,3 +1,9 @@\n+2011-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/25_algorithms/is_permutation/check_type.cc: Minor\n+\ttweaks.\n+\t* testsuite/25_algorithms/is_permutation/1.cc: Cosmetic changes.\n+\n 2011-01-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/25_algorithms/is_permutation/check_type.cc: New."}, {"sha": "1ae227f149a270886219d9a65418e9b3fc1ed053", "filename": "libstdc++-v3/testsuite/25_algorithms/is_permutation/1.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2F1.cc?ref=a5983012cd0ec977773c42ba8ae80b021cd2935f", "patch": "@@ -76,25 +76,25 @@ void test01()\n   do_test(arr6, std::equal_to<int>(), false);\n \n   int arr7[] = { 1, 2, 3, 4, 5 };\n-  do_test(arr7,  my_equal_to());\n+  do_test(arr7, my_equal_to());\n \n   int arr8[] = { 1, 3, 3, 4, 5 };\n-  do_test(arr8,  my_equal_to(), false);\n+  do_test(arr8, my_equal_to(), false);\n \n   int arr9[] = { 3, 3, 3, 4, 4 };\n-  do_test(arr9,  my_equal_to(), false);\n+  do_test(arr9, my_equal_to(), false);\n \n   int arr10[] = { 111, 222, 333, 444, 555 };\n-  do_test(arr10,  my_equal_to());\n+  do_test(arr10, my_equal_to());\n \n   int arr11[] = { 1, 222, 33, 4, 55 };\n-  do_test(arr11,  my_equal_to());\n+  do_test(arr11, my_equal_to());\n \n   int arr12[] = { 111, 333, 333, 444, 555 };\n-  do_test(arr12,  my_equal_to(), false);\n+  do_test(arr12, my_equal_to(), false);\n \n   int arr13[] = { 333, 333, 333, 444, 444 };\n-  do_test(arr13,  my_equal_to(), false);\n+  do_test(arr13, my_equal_to(), false);\n }\n \n int main()"}, {"sha": "600c09d6bd39afc3beb61caa8301669af86d8ace", "filename": "libstdc++-v3/testsuite/25_algorithms/is_permutation/check_type.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2Fcheck_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5983012cd0ec977773c42ba8ae80b021cd2935f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2Fcheck_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_permutation%2Fcheck_type.cc?ref=a5983012cd0ec977773c42ba8ae80b021cd2935f", "patch": "@@ -29,20 +29,21 @@\n using __gnu_test::forward_iterator_wrapper;\n \n struct X { };\n-\n bool operator==(const X&, const X) { return true; }\n-bool predicate(const X&, const X&) { return true; }\n+\n+struct Y { };\n+bool predicate(const Y&, const Y&) { return true; }\n \n bool\n-test1(forward_iterator_wrapper<X>& lhs1, \n-      forward_iterator_wrapper<X>& rhs1)\n+test1(forward_iterator_wrapper<X>& x1, \n+      forward_iterator_wrapper<X>& x2)\n {\n-  return std::is_permutation(lhs1, lhs1, rhs1);\n+  return std::is_permutation(x1, x1, x2);\n }\n \n bool\n-test2(forward_iterator_wrapper<X>& x1,\n-      forward_iterator_wrapper<X>& x2)\n+test2(forward_iterator_wrapper<Y>& y1,\n+      forward_iterator_wrapper<Y>& y2)\n {\n-  return std::is_permutation(x1, x1, x2, predicate);\n+  return std::is_permutation(y1, y1, y2, predicate);\n }"}]}