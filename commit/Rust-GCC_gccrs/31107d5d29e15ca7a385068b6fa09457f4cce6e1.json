{"sha": "31107d5d29e15ca7a385068b6fa09457f4cce6e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExMDdkNWQyOWUxNWNhN2EzODUwNjhiNmZhMDk0NTdmNGNjZTZlMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-17T03:55:59Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-06-17T03:55:59Z"}, "message": "Rotate ChangeLog for 2013.\n\nFrom-SVN: r211722", "tree": {"sha": "107b833de4a949c19409ae393185af146a3f7b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/107b833de4a949c19409ae393185af146a3f7b54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31107d5d29e15ca7a385068b6fa09457f4cce6e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31107d5d29e15ca7a385068b6fa09457f4cce6e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31107d5d29e15ca7a385068b6fa09457f4cce6e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31107d5d29e15ca7a385068b6fa09457f4cce6e1/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e6f3a43eccfe3e63879249203ee6d808fcc6b9"}], "stats": {"total": 805, "additions": 405, "deletions": 400}, "files": [{"sha": "34f36a1fa6410d407657c73eba5ba64f76530db7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 1, "deletions": 400, "changes": 401, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31107d5d29e15ca7a385068b6fa09457f4cce6e1/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31107d5d29e15ca7a385068b6fa09457f4cce6e1/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=31107d5d29e15ca7a385068b6fa09457f4cce6e1", "patch": "@@ -386,406 +386,7 @@\n 2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tUpdate copyright years\n-\n-2013-12-18  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\t* io/read.c (read_f): Convert assert to runtime error.\n-\n-2013-12-17  Andreas Tobler  <andreast@gcc.gnu.org>\n-\n-\t* io/unix.c (tempfile_open): Only use the needed flag O_CLOEXEC.\n-\n-2013-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu>\n-\n-\tPR libfortran/59419\n-\t* io/file_pos.c (st_rewind): Do proper return after\n-\tgenerate_error.\n-\t* io/open.c (edit_modes): Move action code inside block that\n-\tchecks for library ok. (new_unit): Do cleanup after error.\n-\t(st_open): Do proper return after error.\n-\t* io/transfer.c (data_transfer_init): Likewise.\n-\n-2013-12-11  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* config/fpu-387.h (sigill_hdlr, get_fpu_rounding_mode): Emit SSE\n-\tinstructions when __SSE_MATH__ is defined.\n-\n-2013-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* intrinsics/erfc_scaled.c (_M_2_SQRTPI): Define if missing.\n-\n-2013-12-01  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\tPR libfortran/59313\n-\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Also provide for\n-\tquadruple precision long double variant.\n-\n-2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Don't define if\n-\t__float128 is not available.\n-\n-2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\tPR libfortran/49024\n-\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): New function.\n-\t* intrinsics/erfc_scaled_inc.c: Do not provide quadruple\n-\tprecision variant.\n-\n-2013-11-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\tPR libfortran/51828\n-\t* intrinsics/unpack_generic.c (unpack_internal): Let the compiler\n-\tknow that dim > 0 to avoid warnings.\n-\n-2013-11-15  Janne Blomqvist  <jb@gcc.gnu.org>\n-\t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR fortran/59108\n-\t* io/unix.c (regular_file): Don't set O_CREAT when opening a file\n-\tread-only with unknown status. Mask out O_CREAT when falling back\n-\tto opening read-only if ACTION= is not set and read-write fails.\n-\n-2013-11-15  Steve Ellcey  <sellcey@mips.com>\n-\n-\t* configure.ac: Do not define HAVE_STRTOLD.\n-\t* configure: Regenerate.\n-\n-2013-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* configure.ac: Check presence of mkostemp.\n-\t* io/unix.c (set_close_on_exec): New function.\n-\t(tempfile_open): Use mkostemp and O_CLOEXEC if available, fallback\n-\tto calling set_close_on_exec.\n-\t(regular_file): Add O_CLOEXEC to flags if defined.\n-\t(open_external): Call set_close_on_exec if O_CLOEXEC is not\n-\tdefined.\n-\t* config.h.in: Regenerated.\n-\t* configure: Regenerated.\n-\t* Makefile.in: Regenerated.\n-\t* aclocal.m4: Regenerated.\n-\n-2013-10-01  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55469\n-\t* io/list_read (parse_repeat, read_integer, read_character,\n-\tparse_real, read_real, check_type, list_formatted_read_scalar,\n-\tfinish_list_read): Call list_free.\n-\n-2013-09-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\n-2013-07-23  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* config/fpu-387.h (get_fpu_rounding_mode): Read rounding mode\n-\tfrom SSE mxcsr register on x86_64.\n-\n-2013-07-21  Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n-\n-\t* io/transfer.c: Fix comment typos.\n-\n-2013-07-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/35862\n-\t* config/fpu-387.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): Add missing _ to fix build.\n-\n-2013-07-21  Tobias Burnus  <burnus@net-b.de>\n-\t    Uros Bizjak  <ubizjak@gmail.com>\n-\n-\tPR fortran/35862\n-\t* libgfortran.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): New prototypes.\n-\t* config/fpu-387.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): New functions.\n-\t* config/fpu-aix.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): Ditto.\n-\t* config/fpu-generic.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): Ditto.\n-\t* config/fpu-glibc.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): Ditto.\n-\t* config/fpu-sysv.h (set_fpu_rounding_mode,\n-\tget_fpu_rounding_mode): Ditto.\n-\t* configure.ac: Check for fp_rnd and fp_rnd_t.\n-\t* io/io.h (enum unit_round): Use GFC_FPE_* for the value.\n-\t* io/read.c (convert_real): Set FP ronding mode.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* config.h.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2013-06-24  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* configure.ac: Check for fp_except and fp_except_t.\n-\t* config/fpu-sysv.h: Conditionally use either type.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\n-2013-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n-\n-\t* config/fpu-sysv.h (get_fpu_except_flags): Fix typo.\n-\n-2013-06-20  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* config/fpu-387.h (_FPU_MASK_ALL): New.\n-\t(_FPU_EX_ALL): Ditto.\n-\t(set_fpu): Use fstcw to store x87 FPU control word. Use fnclex to\n-\tclear stalled exception flags.  Correctly clear stalled SSE\n-\texception flags.  Simplify code.\n-\t(get_fpu_except_flags): Simplify code.\n-\n-2013-06-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/57633\n-\t* io/list_read.c (next_char, eat_separator): Don't set EOL for \\r.\n-\n-2013-06-19  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* config/fpu-387.h: Use __asm__ and __volatile__ consistently.\n-\t(get_fpu_except_flags): Initialize result.\n-\n-2013-06-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* libgfortran.h (compile_options_t) Add fpe_summary.\n-\t(get_fpu_except_flags): New prototype.\n-\t* runtime/compile_options.c (set_options, init_compile_options):\n-\tHandle fpe_summary.\n-\t* runtime/stop.c (report_exception): New function.\n-\t(stop_numeric, stop_numeric_f08, stop_string, error_stop_string,\n-\terror_stop_numeric): Call it.\n-\t* config/fpu-387.h (get_fpu_except_flags): New function.\n-\t* config/fpu-aix.h (get_fpu_except_flags): New function.\n-\t* config/fpu-generic.h (get_fpu_except_flags): New function.\n-\t* config/fpu-glibc.h (get_fpu_except_flags): New function.\n-\t* config/fpu-sysv.h (get_fpu_except_flags): New function.\n-\t* configure.ac: Check for fpxcp.h.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\n-2013-06-01  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/57496\n-\t* io/write_float.def (ISFINITE2Q, ISFINITE2, ISFINITE2L, ISFINITE,\n-\tSIGNBIT2Q, SIGNBIT2, SIGNBIT2L, SIGNBIT, ISNAN2Q, ISNAN2, ISNAN2L,\n-\tISNAN): New macros.\n-\t(output_float_FMT_G_,WRITE_FLOAT): Use them.\n-\n-2013-05-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* acinclude.m4 (libgfor_cv_have_as_needed): Check for -z ignore, too.\n-\t* configure: Regenerate.\n-\n-2013-05-05  David Edelsohn  <dje.gcc@gmail.com>\n-\n-\t* caf/libcaf.h (_gfortran_caf_critical): Add a prototype.\n-\t(_gfortran_caf_end_critical): Same.\n-\n-2013-05-04  David Edelsohn  <dje.gcc@gmail.com>\n-\n-\t* runtime/environ.c: Include unistd.h.\n-\t* runtime/pause.c: Test HAVE_UNISTD_H.\n-\t* runtime/stop.c: Same.\n-\t* io/open.c: Same.\n-\t* io/unix.c: Same.\n-\t* io/read.c (si_max): Protect declaration of value.\n-\n-2013-04-29  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* intrinsics/system_clock (gf_gettime_mono): Use variable\n-\tresolution for fractional seconds argument.\n-\t(system_clock_4): Simplify, update for gf_gettime_mono change.\n-\t(system_clock_8): Likewise.\n-\n-2013-04-29  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/56981\n-\t* io/transfer.c (next_record_w_unf): First fix head marker, then\n-\twrite tail.\n-\t(next_record): Call flush_if_unbuffered.\n-\t* io/unix.c (struct unix_stream): Add field unbuffered.\n-\t(flush_if_unbuffered): New function.\n-\t(fd_to_stream): New argument.\n-\t(open_external): Fix fd_to_stream call.\n-\t(input_stream): Likewise.\n-\t(output_stream): Likewise.\n-\t(error_stream): Likewise.\n-\t* io/unix.h (flush_if_unbuffered): New prototype.\n-\n-2013-04-28  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* intrinsics/system_clock.c (system_clock_4): Fix sign error in\n-\tWindows version.\n-\n-2013-04-15  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* list_read.c (finish_separator): Initialize variable.\n-\n-2013-04-15  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/56919\n-\t* intrinsics/time_1.h: Check __CYGWIN__ in addition to\n-\t__MINGW32__.\n-\t* intrinsics/system_clock.c (GF_CLOCK_MONOTONIC): Check\n-\t_POSIX_MONOTONIC_CLOCK as well.\n-\t(system_clock_4): Use GetTickCount on Windows.\n-\t(system_clock_8): Use QueryPerformanceCounter and\n-\tQueryPerformanceCounterFrequency on Windows.\n-\n-2013-04-04  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56810\n-\t* io/list_read.c (check_type): Fix kind checking for COMPLEX.\n-\n-2013-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/56660\n-\t* io/list_read.c (nml_read_obj): Do not reset the read error flag\n-\tinside nml_read_obj. If the read error flag is found set just exit.\n-\tFix some whitespace on comments.\n-\t(nml_read_obj_data): Reset the read error flag before the first call\n-\tto nml_read_object.\n-\n-2013-03-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/56786\n-\t* io/list_read.c (nml_parse_qualifier): Remove spurious next_char call\n-\twhen checking for EOF. Use error return mechanism when EOF detected.\n-\tDo not return false unless parse_err_msg and parse_err_msg_size have\n-\tbeen set. Use hit_eof.\n-\t(nml_get_obj_data): Likewise use the correct error mechanism.\n-\t* io/transfer.c (hit_eof): Do not set AFTER_ENDFILE if in namelist\n-\tmode.\n-\n-2013-03-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56737\n-\t* io/format.c (parse_format_list): Also cache FMT_STRING.\n-\t(parse_format): Update call.\n-\n-2013-03-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56737\n-\t* io/format.c (parse_format): With caching, copy\n-\tdtp->format string.\n-\t(save_parsed_format): Use dtp->format directy without\n-\tcopying.\n-\n-2013-03-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56735\n-\t* io/list_read.c (nml_query): Only abort when\n-\tan error occured.\n-\t(namelist_read): Add goto instead of falling through.\n-\n-2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n-\n-\tPR libfortran/52512\n-\t* io/list_read.c (nml_parse_qualifier): To check for a derived type\n-\tdon't use the namelist head element type but the current element type.\n-\t(nml_get_obj_data): Add current namelist element type to\n-\tnml_parse_qualifier call.\n-\n-2013-03-24  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56696\n-\t* io/list_read.c (read_real): Fix EOF diagnostic.\n-\n-2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n-\n-\tPR libfortran/51825\n-\t* io/list_read.c (nml_read_obj): Don't end the component loop on a\n-\tnested derived type, but continue with the next loop iteration.\n-\t(nml_get_obj_data): Don't move the first_nl pointer further in the\n-\tlist if a qualifier was found.\n-\n-2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n-\n-\tPR libfortran/48618\n-\t* io/open.c (st_open): Raise error for unit number < 0 only if\n-\tunit number does not exist already.\n-\n-2013-03-19  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* libgfortran.h: Include stdbool.h.\n-\t(enum try): Remove.\n-\t(notify_std): Change return type to bool.\n-\t* intrinsics/chmod.c: Don't include stdbool.h.\n-\t* intrinsics/execute_command_line.c: Likewise.\n-\t* io/format.c: Likewise.\n-\t* io/list_read.c (nml_parse_qualifier): Change return type to bool.\n-\t(nml_read_obj): Likewise.\n-\t(nml_get_obj_data): Likewise.\n-\t* io/transfer.c (read_block_form): Fix comment.\n-\t(write_buf): Change return type to bool.\n-\t* io/write.c: Don't include stdbool.h.\n-\t* io/write_float.def (output_float): Change return type to bool.\n-\t(output_float_FMT_G_ ## x): Change type of result variable.\n-\t* runtime/error.c (notify_std): Change return type to bool.\n-\n-2013-03-11  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* io/transfer.c (read_block_direct): Correct condition.\n-\t* intrinsics/execute_command_line.c (execute_command_line):\n-\tRemove dead code for the HAVE_FORK case.\n-\n-2013-02-21  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR libfortran/30162\n-\t* io/open.c (test_endfile): Call stell only if size != 0.\n-\t* io/unix.c (raw_tell): Revert r194679.\n-\t(raw_size): Return size field only for regular files, otherwise 0.\n-\n-2013-02-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n-\n-\tPR target/56347\n-\t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_POWF): Remove check for\n-\tbroken powf.\n-\t* configure.ac (LIBGFOR_CHECK_FOR_BROKEN_POWF): Likewise.\n-\t* intrinsics/c99_functions.c: Likewise.\n-\t* configure: Rebuilt.\n-\t* config.h.in: Rebuilt.\n-\n-2013-02-06  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55978\n-\t* runtime/in_pack_generic.c (internal_pack): Return if base_addr is\n-\tNULL.\n-\n-2013-01-23  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* io/file_pos.c (unformatted_backspace): Use __builtin_bswapXX\n-\tinstead of reverse_memcpy.\n-\t* io/io.h (reverse_memcpy): Remove prototype.\n-\t* io/transfer.c (reverse_memcpy): Make static, move towards\n-\tbeginning of file.\n-\t(bswap_array): New function.\n-\t(unformatted_read): Use bswap_array to byte swap the data\n-\tin-place.\n-\t(unformatted_write): Use a larger temp buffer and bswap_array.\n-\t(us_read): Use __builtin_bswapXX instead of reverse_memcpy.\n-\t(write_us_marker): Likewise.\n-\n-2013-01-14  Richard Sandiford  <rdsandiford@googlemail.com>\n-\n-\tUpdate copyright years.\n-\n-2013-01-06  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54678\n-\t* intrinsics/env.c (get_environment_variable_i8): Don't use\n-\tuninitialized variable.\n-\n-2013-01-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/55818\n-\t* io/list_read.c (read_real): Do not call hit_eof when EOF can be\n-\ttreated as a value separator.\n-\t(parse_real): Likewise.\n-\t(read_logical): Likewise.\n-\t(read_character): Likewise.\n-\t(read_complex): Likewise.\n-\f\n+^L\n Copyright (C) 2013-2014 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,"}, {"sha": "d0c2c5d78ed0772daf326c4111eadede26b366a9", "filename": "libgfortran/ChangeLog-2013", "status": "added", "additions": 404, "deletions": 0, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31107d5d29e15ca7a385068b6fa09457f4cce6e1/libgfortran%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31107d5d29e15ca7a385068b6fa09457f4cce6e1/libgfortran%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2013?ref=31107d5d29e15ca7a385068b6fa09457f4cce6e1", "patch": "@@ -0,0 +1,404 @@\n+2013-12-18  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* io/read.c (read_f): Convert assert to runtime error.\n+\n+2013-12-17  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* io/unix.c (tempfile_open): Only use the needed flag O_CLOEXEC.\n+\n+2013-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu>\n+\n+\tPR libfortran/59419\n+\t* io/file_pos.c (st_rewind): Do proper return after\n+\tgenerate_error.\n+\t* io/open.c (edit_modes): Move action code inside block that\n+\tchecks for library ok. (new_unit): Do cleanup after error.\n+\t(st_open): Do proper return after error.\n+\t* io/transfer.c (data_transfer_init): Likewise.\n+\n+2013-12-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* config/fpu-387.h (sigill_hdlr, get_fpu_rounding_mode): Emit SSE\n+\tinstructions when __SSE_MATH__ is defined.\n+\n+2013-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* intrinsics/erfc_scaled.c (_M_2_SQRTPI): Define if missing.\n+\n+2013-12-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR libfortran/59313\n+\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Also provide for\n+\tquadruple precision long double variant.\n+\n+2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Don't define if\n+\t__float128 is not available.\n+\n+2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/49024\n+\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): New function.\n+\t* intrinsics/erfc_scaled_inc.c: Do not provide quadruple\n+\tprecision variant.\n+\n+2013-11-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/51828\n+\t* intrinsics/unpack_generic.c (unpack_internal): Let the compiler\n+\tknow that dim > 0 to avoid warnings.\n+\n+2013-11-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/59108\n+\t* io/unix.c (regular_file): Don't set O_CREAT when opening a file\n+\tread-only with unknown status. Mask out O_CREAT when falling back\n+\tto opening read-only if ACTION= is not set and read-write fails.\n+\n+2013-11-15  Steve Ellcey  <sellcey@mips.com>\n+\n+\t* configure.ac: Do not define HAVE_STRTOLD.\n+\t* configure: Regenerate.\n+\n+2013-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac: Check presence of mkostemp.\n+\t* io/unix.c (set_close_on_exec): New function.\n+\t(tempfile_open): Use mkostemp and O_CLOEXEC if available, fallback\n+\tto calling set_close_on_exec.\n+\t(regular_file): Add O_CLOEXEC to flags if defined.\n+\t(open_external): Call set_close_on_exec if O_CLOEXEC is not\n+\tdefined.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\n+2013-10-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55469\n+\t* io/list_read (parse_repeat, read_integer, read_character,\n+\tparse_real, read_real, check_type, list_formatted_read_scalar,\n+\tfinish_list_read): Call list_free.\n+\n+2013-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\n+2013-07-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (get_fpu_rounding_mode): Read rounding mode\n+\tfrom SSE mxcsr register on x86_64.\n+\n+2013-07-21  Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n+\n+\t* io/transfer.c: Fix comment typos.\n+\n+2013-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35862\n+\t* config/fpu-387.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): Add missing _ to fix build.\n+\n+2013-07-21  Tobias Burnus  <burnus@net-b.de>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR fortran/35862\n+\t* libgfortran.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): New prototypes.\n+\t* config/fpu-387.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): New functions.\n+\t* config/fpu-aix.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): Ditto.\n+\t* config/fpu-generic.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): Ditto.\n+\t* config/fpu-glibc.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): Ditto.\n+\t* config/fpu-sysv.h (set_fpu_rounding_mode,\n+\tget_fpu_rounding_mode): Ditto.\n+\t* configure.ac: Check for fp_rnd and fp_rnd_t.\n+\t* io/io.h (enum unit_round): Use GFC_FPE_* for the value.\n+\t* io/read.c (convert_real): Set FP ronding mode.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2013-06-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* configure.ac: Check for fp_except and fp_except_t.\n+\t* config/fpu-sysv.h: Conditionally use either type.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+2013-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/fpu-sysv.h (get_fpu_except_flags): Fix typo.\n+\n+2013-06-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (_FPU_MASK_ALL): New.\n+\t(_FPU_EX_ALL): Ditto.\n+\t(set_fpu): Use fstcw to store x87 FPU control word. Use fnclex to\n+\tclear stalled exception flags.  Correctly clear stalled SSE\n+\texception flags.  Simplify code.\n+\t(get_fpu_except_flags): Simplify code.\n+\n+2013-06-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57633\n+\t* io/list_read.c (next_char, eat_separator): Don't set EOL for \\r.\n+\n+2013-06-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h: Use __asm__ and __volatile__ consistently.\n+\t(get_fpu_except_flags): Initialize result.\n+\n+2013-06-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libgfortran.h (compile_options_t) Add fpe_summary.\n+\t(get_fpu_except_flags): New prototype.\n+\t* runtime/compile_options.c (set_options, init_compile_options):\n+\tHandle fpe_summary.\n+\t* runtime/stop.c (report_exception): New function.\n+\t(stop_numeric, stop_numeric_f08, stop_string, error_stop_string,\n+\terror_stop_numeric): Call it.\n+\t* config/fpu-387.h (get_fpu_except_flags): New function.\n+\t* config/fpu-aix.h (get_fpu_except_flags): New function.\n+\t* config/fpu-generic.h (get_fpu_except_flags): New function.\n+\t* config/fpu-glibc.h (get_fpu_except_flags): New function.\n+\t* config/fpu-sysv.h (get_fpu_except_flags): New function.\n+\t* configure.ac: Check for fpxcp.h.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+2013-06-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57496\n+\t* io/write_float.def (ISFINITE2Q, ISFINITE2, ISFINITE2L, ISFINITE,\n+\tSIGNBIT2Q, SIGNBIT2, SIGNBIT2L, SIGNBIT, ISNAN2Q, ISNAN2, ISNAN2L,\n+\tISNAN): New macros.\n+\t(output_float_FMT_G_,WRITE_FLOAT): Use them.\n+\n+2013-05-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (libgfor_cv_have_as_needed): Check for -z ignore, too.\n+\t* configure: Regenerate.\n+\n+2013-05-05  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* caf/libcaf.h (_gfortran_caf_critical): Add a prototype.\n+\t(_gfortran_caf_end_critical): Same.\n+\n+2013-05-04  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* runtime/environ.c: Include unistd.h.\n+\t* runtime/pause.c: Test HAVE_UNISTD_H.\n+\t* runtime/stop.c: Same.\n+\t* io/open.c: Same.\n+\t* io/unix.c: Same.\n+\t* io/read.c (si_max): Protect declaration of value.\n+\n+2013-04-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/system_clock (gf_gettime_mono): Use variable\n+\tresolution for fractional seconds argument.\n+\t(system_clock_4): Simplify, update for gf_gettime_mono change.\n+\t(system_clock_8): Likewise.\n+\n+2013-04-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/56981\n+\t* io/transfer.c (next_record_w_unf): First fix head marker, then\n+\twrite tail.\n+\t(next_record): Call flush_if_unbuffered.\n+\t* io/unix.c (struct unix_stream): Add field unbuffered.\n+\t(flush_if_unbuffered): New function.\n+\t(fd_to_stream): New argument.\n+\t(open_external): Fix fd_to_stream call.\n+\t(input_stream): Likewise.\n+\t(output_stream): Likewise.\n+\t(error_stream): Likewise.\n+\t* io/unix.h (flush_if_unbuffered): New prototype.\n+\n+2013-04-28  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/system_clock.c (system_clock_4): Fix sign error in\n+\tWindows version.\n+\n+2013-04-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* list_read.c (finish_separator): Initialize variable.\n+\n+2013-04-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/56919\n+\t* intrinsics/time_1.h: Check __CYGWIN__ in addition to\n+\t__MINGW32__.\n+\t* intrinsics/system_clock.c (GF_CLOCK_MONOTONIC): Check\n+\t_POSIX_MONOTONIC_CLOCK as well.\n+\t(system_clock_4): Use GetTickCount on Windows.\n+\t(system_clock_8): Use QueryPerformanceCounter and\n+\tQueryPerformanceCounterFrequency on Windows.\n+\n+2013-04-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56810\n+\t* io/list_read.c (check_type): Fix kind checking for COMPLEX.\n+\n+2013-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/56660\n+\t* io/list_read.c (nml_read_obj): Do not reset the read error flag\n+\tinside nml_read_obj. If the read error flag is found set just exit.\n+\tFix some whitespace on comments.\n+\t(nml_read_obj_data): Reset the read error flag before the first call\n+\tto nml_read_object.\n+\n+2013-03-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/56786\n+\t* io/list_read.c (nml_parse_qualifier): Remove spurious next_char call\n+\twhen checking for EOF. Use error return mechanism when EOF detected.\n+\tDo not return false unless parse_err_msg and parse_err_msg_size have\n+\tbeen set. Use hit_eof.\n+\t(nml_get_obj_data): Likewise use the correct error mechanism.\n+\t* io/transfer.c (hit_eof): Do not set AFTER_ENDFILE if in namelist\n+\tmode.\n+\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56737\n+\t* io/format.c (parse_format_list): Also cache FMT_STRING.\n+\t(parse_format): Update call.\n+\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56737\n+\t* io/format.c (parse_format): With caching, copy\n+\tdtp->format string.\n+\t(save_parsed_format): Use dtp->format directy without\n+\tcopying.\n+\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56735\n+\t* io/list_read.c (nml_query): Only abort when\n+\tan error occured.\n+\t(namelist_read): Add goto instead of falling through.\n+\n+2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/52512\n+\t* io/list_read.c (nml_parse_qualifier): To check for a derived type\n+\tdon't use the namelist head element type but the current element type.\n+\t(nml_get_obj_data): Add current namelist element type to\n+\tnml_parse_qualifier call.\n+\n+2013-03-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56696\n+\t* io/list_read.c (read_real): Fix EOF diagnostic.\n+\n+2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/51825\n+\t* io/list_read.c (nml_read_obj): Don't end the component loop on a\n+\tnested derived type, but continue with the next loop iteration.\n+\t(nml_get_obj_data): Don't move the first_nl pointer further in the\n+\tlist if a qualifier was found.\n+\n+2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/48618\n+\t* io/open.c (st_open): Raise error for unit number < 0 only if\n+\tunit number does not exist already.\n+\n+2013-03-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* libgfortran.h: Include stdbool.h.\n+\t(enum try): Remove.\n+\t(notify_std): Change return type to bool.\n+\t* intrinsics/chmod.c: Don't include stdbool.h.\n+\t* intrinsics/execute_command_line.c: Likewise.\n+\t* io/format.c: Likewise.\n+\t* io/list_read.c (nml_parse_qualifier): Change return type to bool.\n+\t(nml_read_obj): Likewise.\n+\t(nml_get_obj_data): Likewise.\n+\t* io/transfer.c (read_block_form): Fix comment.\n+\t(write_buf): Change return type to bool.\n+\t* io/write.c: Don't include stdbool.h.\n+\t* io/write_float.def (output_float): Change return type to bool.\n+\t(output_float_FMT_G_ ## x): Change type of result variable.\n+\t* runtime/error.c (notify_std): Change return type to bool.\n+\n+2013-03-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io/transfer.c (read_block_direct): Correct condition.\n+\t* intrinsics/execute_command_line.c (execute_command_line):\n+\tRemove dead code for the HAVE_FORK case.\n+\n+2013-02-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/30162\n+\t* io/open.c (test_endfile): Call stell only if size != 0.\n+\t* io/unix.c (raw_tell): Revert r194679.\n+\t(raw_size): Return size field only for regular files, otherwise 0.\n+\n+2013-02-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/56347\n+\t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_POWF): Remove check for\n+\tbroken powf.\n+\t* configure.ac (LIBGFOR_CHECK_FOR_BROKEN_POWF): Likewise.\n+\t* intrinsics/c99_functions.c: Likewise.\n+\t* configure: Rebuilt.\n+\t* config.h.in: Rebuilt.\n+\n+2013-02-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55978\n+\t* runtime/in_pack_generic.c (internal_pack): Return if base_addr is\n+\tNULL.\n+\n+2013-01-23  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/file_pos.c (unformatted_backspace): Use __builtin_bswapXX\n+\tinstead of reverse_memcpy.\n+\t* io/io.h (reverse_memcpy): Remove prototype.\n+\t* io/transfer.c (reverse_memcpy): Make static, move towards\n+\tbeginning of file.\n+\t(bswap_array): New function.\n+\t(unformatted_read): Use bswap_array to byte swap the data\n+\tin-place.\n+\t(unformatted_write): Use a larger temp buffer and bswap_array.\n+\t(us_read): Use __builtin_bswapXX instead of reverse_memcpy.\n+\t(write_us_marker): Likewise.\n+\n+2013-01-14  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tUpdate copyright years.\n+\n+2013-01-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54678\n+\t* intrinsics/env.c (get_environment_variable_i8): Don't use\n+\tuninitialized variable.\n+\n+2013-01-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/55818\n+\t* io/list_read.c (read_real): Do not call hit_eof when EOF can be\n+\ttreated as a value separator.\n+\t(parse_real): Likewise.\n+\t(read_logical): Likewise.\n+\t(read_character): Likewise.\n+\t(read_complex): Likewise.\n+\f\n+Copyright (C) 2013-2014 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}]}