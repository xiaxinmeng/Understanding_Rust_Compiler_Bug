{"sha": "78aaafc3d4dc0ef997b4747349d3836ca2f7e301", "node_id": "C_kwDOANBUbNoAKDc4YWFhZmMzZDRkYzBlZjk5N2I0NzQ3MzQ5ZDM4MzZjYTJmN2UzMDE", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:51Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:51Z"}, "message": "aarch64: Rename AARCH64_FL architecture-level macros\n\nFollowing on from the previous AARCH64_ISA patch, this one adds the\nprofile name directly to the end of architecture-level AARCH64_FL_*\nmacros.\n\ngcc/\n\t* config/aarch64/aarch64.h (AARCH64_FL_V8_1, AARCH64_FL_V8_2)\n\t(AARCH64_FL_V8_3, AARCH64_FL_V8_4, AARCH64_FL_V8_5, AARCH64_FL_V8_6)\n\t(AARCH64_FL_V9, AARCH64_FL_V8_7, AARCH64_FL_V8_8, AARCH64_FL_V9_1)\n\t(AARCH64_FL_V9_2, AARCH64_FL_V9_3): Add \"A\" to the end of the name.\n\t(AARCH64_FL_V8_R): Rename to AARCH64_FL_V8R.\n\t(AARCH64_FL_FOR_ARCH8_1, AARCH64_FL_FOR_ARCH8_2): Update accordingly.\n\t(AARCH64_FL_FOR_ARCH8_3, AARCH64_FL_FOR_ARCH8_4): Likewise.\n\t(AARCH64_FL_FOR_ARCH8_5, AARCH64_FL_FOR_ARCH8_6): Likewise.\n\t(AARCH64_FL_FOR_ARCH8_7, AARCH64_FL_FOR_ARCH8_8): Likewise.\n\t(AARCH64_FL_FOR_ARCH8_R, AARCH64_FL_FOR_ARCH9): Likewise.\n\t(AARCH64_FL_FOR_ARCH9_1, AARCH64_FL_FOR_ARCH9_2): Likewise.\n\t(AARCH64_FL_FOR_ARCH9_3, AARCH64_ISA_V8_2A, AARCH64_ISA_V8_3A)\n\t(AARCH64_ISA_V8_4A, AARCH64_ISA_V8_5A, AARCH64_ISA_V8_6A): Likewise.\n\t(AARCH64_ISA_V8R, AARCH64_ISA_V9A, AARCH64_ISA_V9_1A): Likewise.\n\t(AARCH64_ISA_V9_2A, AARCH64_ISA_V9_3A): Likewise.", "tree": {"sha": "eef931c85d3239328fe8624cc077ec257a126f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eef931c85d3239328fe8624cc077ec257a126f0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78aaafc3d4dc0ef997b4747349d3836ca2f7e301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aaafc3d4dc0ef997b4747349d3836ca2f7e301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78aaafc3d4dc0ef997b4747349d3836ca2f7e301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aaafc3d4dc0ef997b4747349d3836ca2f7e301/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a4788ac3bae1467b0379852d5a6690a8496d0c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4788ac3bae1467b0379852d5a6690a8496d0c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4788ac3bae1467b0379852d5a6690a8496d0c9"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "14440cc893d0060c829ee2215af48b38ba82c7fc", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aaafc3d4dc0ef997b4747349d3836ca2f7e301/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aaafc3d4dc0ef997b4747349d3836ca2f7e301/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=78aaafc3d4dc0ef997b4747349d3836ca2f7e301", "patch": "@@ -154,22 +154,22 @@\n /* ARMv8.1-A architecture extensions.  */\n #define AARCH64_FL_LSE\t      (1 << 4)  /* Has Large System Extensions.  */\n #define AARCH64_FL_RDMA       (1 << 5)  /* Has Round Double Multiply Add.  */\n-#define AARCH64_FL_V8_1       (1 << 6)  /* Has ARMv8.1-A extensions.  */\n+#define AARCH64_FL_V8_1A      (1 << 6)  /* Has ARMv8.1-A extensions.  */\n /* Armv8-R.  */\n-#define AARCH64_FL_V8_R       (1 << 7)  /* Armv8-R AArch64.  */\n+#define AARCH64_FL_V8R        (1 << 7)  /* Armv8-R AArch64.  */\n /* ARMv8.2-A architecture extensions.  */\n-#define AARCH64_FL_V8_2       (1 << 8)  /* Has ARMv8.2-A features.  */\n+#define AARCH64_FL_V8_2A      (1 << 8)  /* Has ARMv8.2-A features.  */\n #define AARCH64_FL_F16\t      (1 << 9)  /* Has ARMv8.2-A FP16 extensions.  */\n #define AARCH64_FL_SVE        (1 << 10) /* Has Scalable Vector Extensions.  */\n /* ARMv8.3-A architecture extensions.  */\n-#define AARCH64_FL_V8_3       (1 << 11)  /* Has ARMv8.3-A features.  */\n+#define AARCH64_FL_V8_3A      (1 << 11)  /* Has ARMv8.3-A features.  */\n #define AARCH64_FL_RCPC       (1 << 12)  /* Has support for RCpc model.  */\n #define AARCH64_FL_DOTPROD    (1 << 13)  /* Has ARMv8.2-A Dot Product ins.  */\n /* New flags to split crypto into aes and sha2.  */\n #define AARCH64_FL_AES\t      (1 << 14)  /* Has Crypto AES.  */\n #define AARCH64_FL_SHA2\t      (1 << 15)  /* Has Crypto SHA2.  */\n /* ARMv8.4-A architecture extensions.  */\n-#define AARCH64_FL_V8_4\t      (1 << 16)  /* Has ARMv8.4-A features.  */\n+#define AARCH64_FL_V8_4A      (1 << 16)  /* Has ARMv8.4-A features.  */\n #define AARCH64_FL_SM4\t      (1 << 17)  /* Has ARMv8.4-A SM3 and SM4.  */\n #define AARCH64_FL_SHA3\t      (1 << 18)  /* Has ARMv8.4-a SHA3 and SHA512.  */\n #define AARCH64_FL_F16FML     (1 << 19)  /* Has ARMv8.4-a FP16 extensions.  */\n@@ -179,7 +179,7 @@\n #define AARCH64_FL_PROFILE    (1 << 21)\n \n /* ARMv8.5-A architecture extensions.  */\n-#define AARCH64_FL_V8_5\t      (1 << 22)  /* Has ARMv8.5-A features.  */\n+#define AARCH64_FL_V8_5A      (1 << 22)  /* Has ARMv8.5-A features.  */\n #define AARCH64_FL_RNG\t      (1 << 23)  /* ARMv8.5-A Random Number Insns.  */\n #define AARCH64_FL_MEMTAG     (1 << 24)  /* ARMv8.5-A Memory Tagging\n \t\t\t\t\t    Extensions.  */\n@@ -204,7 +204,7 @@\n #define AARCH64_FL_TME\t      (1ULL << 33)  /* Has TME instructions.  */\n \n /* Armv8.6-A architecture extensions.  */\n-#define AARCH64_FL_V8_6\t      (1ULL << 34)\n+#define AARCH64_FL_V8_6A      (1ULL << 34)\n \n /* 8-bit Integer Matrix Multiply (I8MM) extensions.  */\n #define AARCH64_FL_I8MM\t      (1ULL << 35)\n@@ -225,28 +225,28 @@\n #define AARCH64_FL_PAUTH      (1ULL << 40)\n \n /* Armv9.0-A.  */\n-#define AARCH64_FL_V9         (1ULL << 41)  /* Armv9.0-A Architecture.  */\n+#define AARCH64_FL_V9A        (1ULL << 41)  /* Armv9.0-A Architecture.  */\n \n /* 64-byte atomic load/store extensions.  */\n #define AARCH64_FL_LS64      (1ULL << 42)\n \n /* Armv8.7-a architecture extensions.  */\n-#define AARCH64_FL_V8_7       (1ULL << 43)\n+#define AARCH64_FL_V8_7A      (1ULL << 43)\n \n /* Hardware memory operation instructions.  */\n #define AARCH64_FL_MOPS       (1ULL << 44)\n \n /* Armv8.8-a architecture extensions.  */\n-#define AARCH64_FL_V8_8       (1ULL << 45)\n+#define AARCH64_FL_V8_8A      (1ULL << 45)\n \n /* Armv9.1-A.  */\n-#define AARCH64_FL_V9_1       (1ULL << 46)\n+#define AARCH64_FL_V9_1A      (1ULL << 46)\n \n /* Armv9.2-A.  */\n-#define AARCH64_FL_V9_2       (1ULL << 47)\n+#define AARCH64_FL_V9_2A      (1ULL << 47)\n \n /* Armv9.3-A.  */\n-#define AARCH64_FL_V9_3       (1ULL << 48)\n+#define AARCH64_FL_V9_3A      (1ULL << 48)\n \n /* Has FP and SIMD.  */\n #define AARCH64_FL_FPSIMD     (AARCH64_FL_FP | AARCH64_FL_SIMD)\n@@ -258,36 +258,36 @@\n #define AARCH64_FL_FOR_ARCH8       (AARCH64_FL_FPSIMD)\n #define AARCH64_FL_FOR_ARCH8_1\t\t\t       \\\n   (AARCH64_FL_FOR_ARCH8 | AARCH64_FL_LSE | AARCH64_FL_CRC \\\n-   | AARCH64_FL_RDMA | AARCH64_FL_V8_1)\n+   | AARCH64_FL_RDMA | AARCH64_FL_V8_1A)\n #define AARCH64_FL_FOR_ARCH8_2\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_1 | AARCH64_FL_V8_2)\n+  (AARCH64_FL_FOR_ARCH8_1 | AARCH64_FL_V8_2A)\n #define AARCH64_FL_FOR_ARCH8_3\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_V8_3 | AARCH64_FL_PAUTH)\n+  (AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_V8_3A | AARCH64_FL_PAUTH)\n #define AARCH64_FL_FOR_ARCH8_4\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_3 | AARCH64_FL_V8_4 | AARCH64_FL_F16FML \\\n+  (AARCH64_FL_FOR_ARCH8_3 | AARCH64_FL_V8_4A | AARCH64_FL_F16FML \\\n    | AARCH64_FL_DOTPROD | AARCH64_FL_RCPC8_4 | AARCH64_FL_FLAGM)\n #define AARCH64_FL_FOR_ARCH8_5\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_V8_5\t\\\n+  (AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_V8_5A\t\\\n    | AARCH64_FL_SB | AARCH64_FL_SSBS | AARCH64_FL_PREDRES)\n #define AARCH64_FL_FOR_ARCH8_6\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_V8_6 | AARCH64_FL_FPSIMD \\\n+  (AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_V8_6A | AARCH64_FL_FPSIMD \\\n    | AARCH64_FL_I8MM | AARCH64_FL_BF16)\n #define AARCH64_FL_FOR_ARCH8_7\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_6 | AARCH64_FL_V8_7 | AARCH64_FL_LS64)\n+  (AARCH64_FL_FOR_ARCH8_6 | AARCH64_FL_V8_7A | AARCH64_FL_LS64)\n #define AARCH64_FL_FOR_ARCH8_8\t\t\t\\\n-  (AARCH64_FL_FOR_ARCH8_7 | AARCH64_FL_V8_8 | AARCH64_FL_MOPS)\n+  (AARCH64_FL_FOR_ARCH8_7 | AARCH64_FL_V8_8A | AARCH64_FL_MOPS)\n \n #define AARCH64_FL_FOR_ARCH8_R     \\\n-  (AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_V8_R)\n+  (AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_V8R)\n #define AARCH64_FL_FOR_ARCH9       \\\n-  (AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_SVE | AARCH64_FL_SVE2 | AARCH64_FL_V9 \\\n+  (AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_SVE | AARCH64_FL_SVE2 | AARCH64_FL_V9A \\\n    | AARCH64_FL_F16)\n #define AARCH64_FL_FOR_ARCH9_1\t\\\n-  (AARCH64_FL_FOR_ARCH9 | AARCH64_FL_FOR_ARCH8_6 | AARCH64_FL_V9_1)\n+  (AARCH64_FL_FOR_ARCH9 | AARCH64_FL_FOR_ARCH8_6 | AARCH64_FL_V9_1A)\n #define AARCH64_FL_FOR_ARCH9_2\t\\\n-  (AARCH64_FL_FOR_ARCH9_1 | AARCH64_FL_FOR_ARCH8_7 | AARCH64_FL_V9_2)\n+  (AARCH64_FL_FOR_ARCH9_1 | AARCH64_FL_FOR_ARCH8_7 | AARCH64_FL_V9_2A)\n #define AARCH64_FL_FOR_ARCH9_3\t\\\n-  (AARCH64_FL_FOR_ARCH9_2 | AARCH64_FL_FOR_ARCH8_8 | AARCH64_FL_V9_3)\n+  (AARCH64_FL_FOR_ARCH9_2 | AARCH64_FL_FOR_ARCH8_8 | AARCH64_FL_V9_3A)\n \n /* Macros to test ISA flags.  */\n \n@@ -297,39 +297,39 @@\n #define AARCH64_ISA_SIMD           (aarch64_isa_flags & AARCH64_FL_SIMD)\n #define AARCH64_ISA_LSE\t\t   (aarch64_isa_flags & AARCH64_FL_LSE)\n #define AARCH64_ISA_RDMA\t   (aarch64_isa_flags & AARCH64_FL_RDMA)\n-#define AARCH64_ISA_V8_2A\t   (aarch64_isa_flags & AARCH64_FL_V8_2)\n+#define AARCH64_ISA_V8_2A\t   (aarch64_isa_flags & AARCH64_FL_V8_2A)\n #define AARCH64_ISA_F16\t\t   (aarch64_isa_flags & AARCH64_FL_F16)\n #define AARCH64_ISA_SVE            (aarch64_isa_flags & AARCH64_FL_SVE)\n #define AARCH64_ISA_SVE2\t   (aarch64_isa_flags & AARCH64_FL_SVE2)\n #define AARCH64_ISA_SVE2_AES\t   (aarch64_isa_flags & AARCH64_FL_SVE2_AES)\n #define AARCH64_ISA_SVE2_BITPERM  (aarch64_isa_flags & AARCH64_FL_SVE2_BITPERM)\n #define AARCH64_ISA_SVE2_SHA3\t   (aarch64_isa_flags & AARCH64_FL_SVE2_SHA3)\n #define AARCH64_ISA_SVE2_SM4\t   (aarch64_isa_flags & AARCH64_FL_SVE2_SM4)\n-#define AARCH64_ISA_V8_3A\t   (aarch64_isa_flags & AARCH64_FL_V8_3)\n+#define AARCH64_ISA_V8_3A\t   (aarch64_isa_flags & AARCH64_FL_V8_3A)\n #define AARCH64_ISA_DOTPROD\t   (aarch64_isa_flags & AARCH64_FL_DOTPROD)\n #define AARCH64_ISA_AES\t           (aarch64_isa_flags & AARCH64_FL_AES)\n #define AARCH64_ISA_SHA2\t   (aarch64_isa_flags & AARCH64_FL_SHA2)\n-#define AARCH64_ISA_V8_4A\t   (aarch64_isa_flags & AARCH64_FL_V8_4)\n+#define AARCH64_ISA_V8_4A\t   (aarch64_isa_flags & AARCH64_FL_V8_4A)\n #define AARCH64_ISA_SM4\t           (aarch64_isa_flags & AARCH64_FL_SM4)\n #define AARCH64_ISA_SHA3\t   (aarch64_isa_flags & AARCH64_FL_SHA3)\n #define AARCH64_ISA_F16FML\t   (aarch64_isa_flags & AARCH64_FL_F16FML)\n #define AARCH64_ISA_RCPC8_4\t   (aarch64_isa_flags & AARCH64_FL_RCPC8_4)\n #define AARCH64_ISA_RNG\t\t   (aarch64_isa_flags & AARCH64_FL_RNG)\n-#define AARCH64_ISA_V8_5A\t   (aarch64_isa_flags & AARCH64_FL_V8_5)\n+#define AARCH64_ISA_V8_5A\t   (aarch64_isa_flags & AARCH64_FL_V8_5A)\n #define AARCH64_ISA_TME\t\t   (aarch64_isa_flags & AARCH64_FL_TME)\n #define AARCH64_ISA_MEMTAG\t   (aarch64_isa_flags & AARCH64_FL_MEMTAG)\n-#define AARCH64_ISA_V8_6A\t   (aarch64_isa_flags & AARCH64_FL_V8_6)\n+#define AARCH64_ISA_V8_6A\t   (aarch64_isa_flags & AARCH64_FL_V8_6A)\n #define AARCH64_ISA_I8MM\t   (aarch64_isa_flags & AARCH64_FL_I8MM)\n #define AARCH64_ISA_F32MM\t   (aarch64_isa_flags & AARCH64_FL_F32MM)\n #define AARCH64_ISA_F64MM\t   (aarch64_isa_flags & AARCH64_FL_F64MM)\n #define AARCH64_ISA_BF16\t   (aarch64_isa_flags & AARCH64_FL_BF16)\n #define AARCH64_ISA_SB\t\t   (aarch64_isa_flags & AARCH64_FL_SB)\n-#define AARCH64_ISA_V8R\t\t   (aarch64_isa_flags & AARCH64_FL_V8_R)\n+#define AARCH64_ISA_V8R\t\t   (aarch64_isa_flags & AARCH64_FL_V8R)\n #define AARCH64_ISA_PAUTH\t   (aarch64_isa_flags & AARCH64_FL_PAUTH)\n-#define AARCH64_ISA_V9A\t\t   (aarch64_isa_flags & AARCH64_FL_V9)\n-#define AARCH64_ISA_V9_1A          (aarch64_isa_flags & AARCH64_FL_V9_1)\n-#define AARCH64_ISA_V9_2A          (aarch64_isa_flags & AARCH64_FL_V9_2)\n-#define AARCH64_ISA_V9_3A          (aarch64_isa_flags & AARCH64_FL_V9_3)\n+#define AARCH64_ISA_V9A\t\t   (aarch64_isa_flags & AARCH64_FL_V9A)\n+#define AARCH64_ISA_V9_1A          (aarch64_isa_flags & AARCH64_FL_V9_1A)\n+#define AARCH64_ISA_V9_2A          (aarch64_isa_flags & AARCH64_FL_V9_2A)\n+#define AARCH64_ISA_V9_3A          (aarch64_isa_flags & AARCH64_FL_V9_3A)\n #define AARCH64_ISA_MOPS\t   (aarch64_isa_flags & AARCH64_FL_MOPS)\n #define AARCH64_ISA_LS64\t   (aarch64_isa_flags & AARCH64_FL_LS64)\n "}]}