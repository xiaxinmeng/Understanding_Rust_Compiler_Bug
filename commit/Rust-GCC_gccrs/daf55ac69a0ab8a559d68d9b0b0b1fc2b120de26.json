{"sha": "daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFmNTVhYzY5YTBhYjhhNTU5ZDY4ZDliMGIwYjFmYzJiMTIwZGUyNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-29T20:01:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-29T20:01:31Z"}, "message": "(global_alloc): Make a more accurate attempt to see if the frame pointer will be used.\n\n(global_alloc): Make a more accurate attempt to see if the frame pointer will\nbe used.\nIf it is, show HARD_FRAME_POINTER_REGNUM used if its not the same as\nFRAME_POINTER_REGNUM.\n\nFrom-SVN: r7604", "tree": {"sha": "ca5947c577a6f8e4a5a65698e32477a2fd63954c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca5947c577a6f8e4a5a65698e32477a2fd63954c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26/comments", "author": null, "committer": null, "parents": [{"sha": "245d26eb97c0a61329f0d3be2b7cc9357ef4bde3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245d26eb97c0a61329f0d3be2b7cc9357ef4bde3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/245d26eb97c0a61329f0d3be2b7cc9357ef4bde3"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "297e9307b77776b2ada90e837a01ba1c7e53fbb5", "filename": "gcc/global.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=daf55ac69a0ab8a559d68d9b0b0b1fc2b120de26", "patch": "@@ -246,7 +246,7 @@ static struct { int allocno1, allocno2;}\n static rtx *regs_set;\n static int n_regs_set;\n \n-/* All register that can be eliminated.  */\n+/* All registers that can be eliminated.  */\n \n static HARD_REG_SET eliminable_regset;\n \n@@ -279,6 +279,13 @@ global_alloc (file)\n #ifdef ELIMINABLE_REGS\n   static struct {int from, to; } eliminables[] = ELIMINABLE_REGS;\n #endif\n+  int need_fp\n+    = (! flag_omit_frame_pointer\n+#ifdef EXIT_IGNORE_STACK\n+       || (current_function_calls_alloca && EXIT_IGNORE_STACK)\n+#endif\n+       || FRAME_POINTER_REQUIRED);\n+\n   register int i;\n   rtx x;\n \n@@ -302,20 +309,18 @@ global_alloc (file)\n       SET_HARD_REG_BIT (eliminable_regset, eliminables[i].from);\n \n       if (! CAN_ELIMINATE (eliminables[i].from, eliminables[i].to)\n-\t  || (eliminables[i].from == HARD_FRAME_POINTER_REGNUM\n-\t      && (! flag_omit_frame_pointer || FRAME_POINTER_REQUIRED)))\n+\t  || (eliminables[i].to == STACK_POINTER_REGNUM && need_fp))\n \tSET_HARD_REG_BIT (no_global_alloc_regs, eliminables[i].from);\n     }\n #if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n-  if (!flag_omit_frame_pointer || FRAME_POINTER_REQUIRED)\n+  SET_HARD_REG_BIT (eliminable_regset, HARD_FRAME_POINTER_REGNUM);\n+  if (need_fp)\n     SET_HARD_REG_BIT (no_global_alloc_regs, HARD_FRAME_POINTER_REGNUM);\n #endif\n+\n #else\n   SET_HARD_REG_BIT (eliminable_regset, FRAME_POINTER_REGNUM);\n-\n-  /* If we know we will definitely not be eliminating the frame pointer,\n-     don't allocate it.  */\n-  if (! flag_omit_frame_pointer || FRAME_POINTER_REQUIRED)\n+  if (need_fp)\n     SET_HARD_REG_BIT (no_global_alloc_regs, FRAME_POINTER_REGNUM);\n #endif\n "}]}