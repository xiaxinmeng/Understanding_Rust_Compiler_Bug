{"sha": "5a8c2b571c68cea56cab84c90bf407363c8a3587", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE4YzJiNTcxYzY4Y2VhNTZjYWI4NGM5MGJmNDA3MzYzYzhhMzU4Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-09-24T11:32:28Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-09-24T11:32:28Z"}, "message": "re PR middle-end/57134 (ICE with -mstrict-align and inline assembly on ppc64)\n\n\tPR middle-end/57134\n\tPR middle-end/57586\n\t* stmt.c (expand_asm_operands): Call expand_expr with\n\tEXPAND_MEMORY for output operands that disallow regs.  Don't\n\tuse EXPAND_WRITE on inout operands.\n\nFrom-SVN: r202866", "tree": {"sha": "f766572dc170a811c372091c20ec61420cd13e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f766572dc170a811c372091c20ec61420cd13e4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a8c2b571c68cea56cab84c90bf407363c8a3587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8c2b571c68cea56cab84c90bf407363c8a3587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a8c2b571c68cea56cab84c90bf407363c8a3587", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8c2b571c68cea56cab84c90bf407363c8a3587/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f40333afeb570012ed42439cb9ce3c7aaa63b916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40333afeb570012ed42439cb9ce3c7aaa63b916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f40333afeb570012ed42439cb9ce3c7aaa63b916"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "cbd30bd625079c3b6e60b32bf400fe1c177e25ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c2b571c68cea56cab84c90bf407363c8a3587/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c2b571c68cea56cab84c90bf407363c8a3587/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a8c2b571c68cea56cab84c90bf407363c8a3587", "patch": "@@ -1,3 +1,11 @@\n+2013-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR middle-end/57134\n+\tPR middle-end/57586\n+\t* stmt.c (expand_asm_operands): Call expand_expr with\n+\tEXPAND_MEMORY for output operands that disallow regs.  Don't\n+\tuse EXPAND_WRITE on inout operands.\n+\n 2013-09-24  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/58513"}, {"sha": "c56e419312bdfe75f0f774f29e0882e55dc325b9", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c2b571c68cea56cab84c90bf407363c8a3587/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c2b571c68cea56cab84c90bf407363c8a3587/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=5a8c2b571c68cea56cab84c90bf407363c8a3587", "patch": "@@ -806,7 +806,10 @@ expand_asm_operands (tree string, tree outputs, tree inputs,\n \t  || ! allows_reg\n \t  || is_inout)\n \t{\n-\t  op = expand_expr (val, NULL_RTX, VOIDmode, EXPAND_WRITE);\n+\t  op = expand_expr (val, NULL_RTX, VOIDmode,\n+\t\t\t    !allows_reg ? EXPAND_MEMORY\n+\t\t\t    : !is_inout ? EXPAND_WRITE\n+\t\t\t    : EXPAND_NORMAL);\n \t  if (MEM_P (op))\n \t    op = validize_mem (op);\n "}]}