{"sha": "e02d979a34621de7e71c821fcf4cfb5cca511e72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyZDk3OWEzNDYyMWRlN2U3MWM4MjFmY2Y0Y2ZiNWNjYTUxMWU3Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-08-12T15:40:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-08-12T15:40:01Z"}, "message": "cmath (fmod(_Tp, _Up)): Add.\n\n2011-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/c_global/cmath (fmod(_Tp, _Up)): Add.\n\t* include/c_std/cmath: Likewise.\n\nFrom-SVN: r177698", "tree": {"sha": "d9379343679f7cc33f97a987c5afb6f6d27d0d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9379343679f7cc33f97a987c5afb6f6d27d0d17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e02d979a34621de7e71c821fcf4cfb5cca511e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02d979a34621de7e71c821fcf4cfb5cca511e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02d979a34621de7e71c821fcf4cfb5cca511e72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02d979a34621de7e71c821fcf4cfb5cca511e72/comments", "author": null, "committer": null, "parents": [{"sha": "6c32ee74491f947dafdce3656c6ec9e48a185fdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c32ee74491f947dafdce3656c6ec9e48a185fdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c32ee74491f947dafdce3656c6ec9e48a185fdb"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "587ddd5c16a571b1a788a892185bdd729029fcac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e02d979a34621de7e71c821fcf4cfb5cca511e72", "patch": "@@ -1,3 +1,8 @@\n+2011-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/c_global/cmath (fmod(_Tp, _Up)): Add.\n+\t* include/c_std/cmath: Likewise.\n+\n 2011-08-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/future: constexpr functions are implicitly inline."}, {"sha": "6711d90caed3a20dda52abd8a3fca1b983cb287b", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=e02d979a34621de7e71c821fcf4cfb5cca511e72", "patch": "@@ -282,6 +282,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   fmod(long double __x, long double __y)\n   { return __builtin_fmodl(__x, __y); }\n \n+  template<typename _Tp, typename _Up>\n+    inline _GLIBCXX_CONSTEXPR\n+    typename __gnu_cxx::__promote_2<\n+    typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value\n+\t\t\t\t    && __is_arithmetic<_Up>::__value,\n+\t\t\t\t    _Tp>::__type, _Up>::__type\n+    fmod(_Tp __x, _Up __y)\n+    {\n+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;\n+      return fmod(__type(__x), __type(__y));\n+    }\n+\n   using ::frexp;\n \n   inline _GLIBCXX_CONSTEXPR float\n@@ -313,8 +325,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline _GLIBCXX_CONSTEXPR\n     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n                                     double>::__type\n-  ldexp(_Tp __x, int __exp)\n-  { return __builtin_ldexp(__x, __exp); }\n+    ldexp(_Tp __x, int __exp)\n+    { return __builtin_ldexp(__x, __exp); }\n \n   using ::log;\n "}, {"sha": "c367fceed6251250d23f765dbbd177db45df9b33", "filename": "libstdc++-v3/include/c_std/cmath", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02d979a34621de7e71c821fcf4cfb5cca511e72/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath?ref=e02d979a34621de7e71c821fcf4cfb5cca511e72", "patch": "@@ -268,6 +268,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   fmod(long double __x, long double __y)\n   { return __builtin_fmodl(__x, __y); }\n \n+  template<typename _Tp, typename _Up>\n+    inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value\n+    \t\t\t\t\t   && __is_integer<_Up>::__value, \n+\t\t\t\t\t   double>::__type\n+    fmod(_Tp __x, _Up __y)\n+    { return __builtin_fmod(__x, __y); }\n+\n   using ::frexp;\n \n   inline float"}]}