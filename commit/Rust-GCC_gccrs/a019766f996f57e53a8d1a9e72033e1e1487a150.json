{"sha": "a019766f996f57e53a8d1a9e72033e1e1487a150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAxOTc2NmY5OTZmNTdlNTNhOGQxYTllNzIwMzNlMWUxNDg3YTE1MA==", "commit": {"author": {"name": "Armin Brauns via Gcc-patches", "email": "gcc-patches@gcc.gnu.org", "date": "2020-11-17T00:14:31Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-17T00:14:31Z"}, "message": "Update documentation for spec files\n\ngcc\n\t* gcc.c: Document %T spec file directive.\n\t* doc/invoke.texi: Remove %p, %P spec file directives.\n\tAdd %M, %R, %V, %nSTR, %>S, %<S*, %{%:function(args):X}, %@{...} spec\n\tfile directives add sanitize, version-compare, include, gt and\n\tdebug-level-gt spec functions.", "tree": {"sha": "761cbaed57495cca67a7e413900b8e7e612052d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/761cbaed57495cca67a7e413900b8e7e612052d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a019766f996f57e53a8d1a9e72033e1e1487a150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a019766f996f57e53a8d1a9e72033e1e1487a150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a019766f996f57e53a8d1a9e72033e1e1487a150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a019766f996f57e53a8d1a9e72033e1e1487a150/comments", "author": null, "committer": null, "parents": [{"sha": "948ef14225368651f2f4fe1fccb6b6704affc9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948ef14225368651f2f4fe1fccb6b6704affc9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948ef14225368651f2f4fe1fccb6b6704affc9fa"}], "stats": {"total": 121, "additions": 111, "deletions": 10}, "files": [{"sha": "3510a54c6c46080c388d056e0cb9c70bfc737ba9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 105, "deletions": 10, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a019766f996f57e53a8d1a9e72033e1e1487a150/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a019766f996f57e53a8d1a9e72033e1e1487a150/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a019766f996f57e53a8d1a9e72033e1e1487a150", "patch": "@@ -31727,6 +31727,9 @@ Marks the argument containing or following the @samp{%w} as the\n designated output file of this compilation.  This puts the argument\n into the sequence of arguments that @samp{%o} substitutes.\n \n+@item %V\n+Indicates that this compilation produces no output file.\n+\n @item %o\n Substitutes the names of all the output files, with spaces\n automatically placed around them.  You should write spaces\n@@ -31745,16 +31748,6 @@ been substituted, except that @samp{%g, %u, and %U} do not currently\n support additional @var{suffix} characters following @samp{%O} as they do\n following, for example, @samp{.o}.\n \n-@item %p\n-Substitutes the standard macro predefinitions for the\n-current target machine.  Use this when running @command{cpp}.\n-\n-@item %P\n-Like @samp{%p}, but puts @samp{__} before and after the name of each\n-predefined macro, except for macros that start with @samp{__} or with\n-@samp{_@var{L}}, where @var{L} is an uppercase letter.  This is for ISO\n-C@.\n-\n @item %I\n Substitute any of @option{-iprefix} (made from @env{GCC_EXEC_PREFIX}),\n @option{-isysroot} (made from @env{TARGET_SYSTEM_ROOT}),\n@@ -31779,6 +31772,9 @@ searched.\n Print @var{str} as an error message.  @var{str} is terminated by a newline.\n Use this when inconsistent options are detected.\n \n+@item %n@var{str}\n+Print @var{str} as a notice.  @var{str} is terminated by a newline.\n+\n @item %(@var{name})\n Substitute the contents of spec string @var{name} at this point.\n \n@@ -31795,6 +31791,12 @@ Output the accumulated assembler options specified by @option{-Wa}.\n @item %Z\n Output the accumulated preprocessor options specified by @option{-Wp}.\n \n+@item %M\n+Output @code{multilib_os_dir}.\n+\n+@item %R\n+Output the concatenation of @code{target_system_root} and @code{target_sysroot_suffix}.\n+\n @item %a\n Process the @code{asm} spec.  This is used to compute the\n switches to be passed to the assembler.\n@@ -31854,6 +31856,12 @@ command is position dependent.  @samp{%} commands in the spec string\n before this one see @code{-S}, @samp{%} commands in the spec string\n after this one do not.\n \n+@item %<S*\n+Similar to @samp{%<S}, but match all switches beginning with @code{-S}.\n+\n+@item %>S\n+Similar to @samp{%<S}, but keep @code{-S} in the GCC command line.\n+\n @item %:@var{function}(@var{args})\n Call the named function @var{function}, passing it @var{args}.\n @var{args} is first processed as a nested spec string, then split\n@@ -31914,6 +31922,14 @@ usage:\n -l%:if-exists-then-else(%:getenv(VSB_DIR rtnet.h) rtnet net)\n @end smallexample\n \n+@item @code{sanitize}\n+The @code{sanitize} spec function takes no arguments.  It returns non-NULL if\n+any address, thread or undefined behaviour sanitizers are active.\n+\n+@smallexample\n+%@{%:sanitize(address):-funwind-tables@}\n+@end smallexample\n+\n @item @code{replace-outfile}\n The @code{replace-outfile} spec function takes two arguments.  It looks for the\n first argument in the outfiles array and replaces it with the second argument.  Here\n@@ -31932,6 +31948,56 @@ its usage:\n %:remove-outfile(-lm)\n @end smallexample\n \n+@item @code{version-compare}\n+The @code{version-compare} spec function takes four or five arguments of the following\n+form:\n+\n+@smallexample\n+<comparison-op> <arg1> [<arg2>] <switch> <result>\n+@end smallexample\n+\n+It returns @code{result} if the comparison evaluates to true, and NULL if it doesn't.\n+The supported @code{comparison-op} values are:\n+\n+@table @code\n+@item >=\n+True if @code{switch} is a later (or same) version than @code{arg1}\n+\n+@item !>\n+Opposite of @code{>=}\n+\n+@item <\n+True if @code{switch} is an earlier version than @code{arg1}\n+\n+@item !<\n+Opposite of @code{<}\n+\n+@item ><\n+True if @code{switch} is @code{arg1} or later, and earlier than @code{arg2}\n+\n+@item <>\n+True if @code{switch} is earlier than @code{arg1}, or is @code{arg2} or later\n+@end table\n+\n+If the @code{switch} is not present at all, the condition is false unless the first character\n+of the @code{comparison-op} is @code{!}.\n+\n+@smallexample\n+%:version-compare(>= 10.3 mmacosx-version-min= -lmx)\n+@end smallexample\n+\n+The above example would add @option{-lmx} if @option{-mmacosx-version-min=10.3.9} was\n+passed.\n+\n+@item @code{include}\n+The @code{include} spec function behaves much like @code{%include}, with the advantage\n+that it can be nested inside a spec and thus be conditionalized.  It takes one argument,\n+the filename, and looks for it in the startfile path.  It always returns NULL.\n+\n+@smallexample\n+%@{static-libasan|static:%:include(libsanitizer.spec)%(link_libasan)@}\n+@end smallexample\n+\n @item @code{pass-through-libs}\n The @code{pass-through-libs} spec function takes any number of arguments.  It\n finds any @option{-l} options and any non-options ending in @file{.a} (which it\n@@ -31957,6 +32023,25 @@ Use \"-Wa,OPTION\" to pass \"OPTION\" to the assembler.\n \n It is used to separate compiler options from assembler options\n in the @option{--target-help} output.\n+\n+@item @code{gt}\n+The @code{gt} spec function takes two or more arguments.  It returns @code{\"\"} (the\n+empty string) if the second-to-last argument is greater than the last argument, and NULL\n+otherwise.  The following example inserts the @code{link_gomp} spec if the last\n+@option{-ftree-parallelize-loops=} option given on the command line is greater than 1:\n+\n+@smallexample\n+%@{%:gt(%@{ftree-parallelize-loops=*:%*@} 1):%:include(libgomp.spec)%(link_gomp)@}\n+@end smallexample\n+\n+@item @code{debug-level-gt}\n+The @code{debug-level-gt} spec function takes one argument and returns @code{\"\"} (the\n+empty string) if @code{debug_info_level} is greater than the specified number, and NULL\n+otherwise.\n+\n+@smallexample\n+%@{%:debug-level-gt(0):%@{gdwarf*:--gdwarf2@}@}\n+@end smallexample\n @end table\n \n @item %@{S@}\n@@ -31971,6 +32056,10 @@ and outputs the command-line option @option{-foo}.\n Like %@{@code{S}@} but mark last argument supplied within as a file to be\n deleted on failure.\n \n+@item %@@@{S@}\n+Like %@{@code{S}@} but puts the result into a @code{FILE} and substitutes\n+@code{@@FILE} if an @code{@@file} argument has been supplied.\n+\n @item %@{S*@}\n Substitutes all the switches specified to GCC whose names start\n with @code{-S}, but which also take an argument.  This is used for\n@@ -32053,6 +32142,12 @@ jim.d         -bar -boggle\n -d jim.d      -bar -baz -boggle\n @end smallexample\n \n+@item %@{%:@var{function}(@var{args}):X@}\n+\n+Call function named @var{function} with args @var{args}.  If the\n+function returns non-NULL, then @code{X} is substituted, if it returns\n+NULL, it isn't substituted.\n+\n @item %@{S:X; T:Y; :D@}\n \n If @code{S} is given to GCC, substitutes @code{X}; else if @code{T} is"}, {"sha": "766bfc1f8a2c45500afee8e5ec6b4b5080699346", "filename": "gcc/gcc.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a019766f996f57e53a8d1a9e72033e1e1487a150/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a019766f996f57e53a8d1a9e72033e1e1487a150/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a019766f996f57e53a8d1a9e72033e1e1487a150", "patch": "@@ -542,6 +542,12 @@ or with constant text in a single argument.\n  %s     current argument is the name of a library or startup file of some sort.\n         Search for that file in a standard list of directories\n \tand substitute the full name found.\n+ %T\tcurrent argument is the name of a linker script.\n+\tSearch for that file in the current list of directories to scan for\n+\tlibraries.  If the file is located, insert a --script option into the\n+\tcommand line followed by the full path name found.  If the file is\n+\tnot found then generate an error message.\n+\tNote: the current working directory is not searched.\n  %eSTR  Print STR as an error message.  STR is terminated by a newline.\n         Use this when inconsistent options are detected.\n  %nSTR  Print STR as a notice.  STR is terminated by a newline."}]}