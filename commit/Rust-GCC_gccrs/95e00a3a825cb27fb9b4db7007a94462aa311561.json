{"sha": "95e00a3a825cb27fb9b4db7007a94462aa311561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVlMDBhM2E4MjVjYjI3ZmI5YjRkYjcwMDdhOTQ0NjJhYTMxMTU2MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-03-02T09:07:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-02T09:07:01Z"}, "message": "sem_ch8.adb (Available_Subtype): Optimization in Find_Selected_Component...\n\n2015-03-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Available_Subtype): Optimization in\n\tFind_Selected_Component: when safe, use existing subtype of\n\tarray component, possibly discriminant-dependent, rather than\n\tcreating new subtype declaration for it. In this fashion different\n\toccurrences of the component have the same subtype, rather than\n\tjust equivalent ones. Simplifies value tracing in GNATProve.\n\nFrom-SVN: r221100", "tree": {"sha": "8fc6422a22f5d6a3f5cba63d37d1c4fb31121b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fc6422a22f5d6a3f5cba63d37d1c4fb31121b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95e00a3a825cb27fb9b4db7007a94462aa311561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e00a3a825cb27fb9b4db7007a94462aa311561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e00a3a825cb27fb9b4db7007a94462aa311561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e00a3a825cb27fb9b4db7007a94462aa311561/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4c0f336bc3bd0761ccac74d297dd45d45e299fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4c0f336bc3bd0761ccac74d297dd45d45e299fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4c0f336bc3bd0761ccac74d297dd45d45e299fe"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "ca420de816e891425f2966151395da4f7c799abd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e00a3a825cb27fb9b4db7007a94462aa311561/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e00a3a825cb27fb9b4db7007a94462aa311561/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95e00a3a825cb27fb9b4db7007a94462aa311561", "patch": "@@ -1,3 +1,12 @@\n+2015-03-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Available_Subtype): Optimization in\n+\tFind_Selected_Component: when safe, use existing subtype of\n+\tarray component, possibly discriminant-dependent, rather than\n+\tcreating new subtype declaration for it. In this fashion different\n+\toccurrences of the component have the same subtype, rather than\n+\tjust equivalent ones. Simplifies value tracing in GNATProve.\n+\n 2015-03-01  Arnaud Charlet  <charlet@adacore.com>\n \n \tPR ada/65259"}, {"sha": "93998be02791b88cb79276489f304d8bb2054b05", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95e00a3a825cb27fb9b4db7007a94462aa311561/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95e00a3a825cb27fb9b4db7007a94462aa311561/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=95e00a3a825cb27fb9b4db7007a94462aa311561", "patch": "@@ -6454,13 +6454,41 @@ package body Sem_Ch8 is\n \n       Nam : Node_Id;\n \n+      function Available_Subtype return Boolean;\n+      --  A small optimization: if the prefix is constrained and the component\n+      --  is an array type we may already have a usable subtype for it, so we\n+      --  can use it rather than generating a new one, because the bounds\n+      --  will be the values of the discriminants and not discriminant refs.\n+      --  This simplifies value tracing in GNATProve.\n+\n       function Is_Reference_In_Subunit return Boolean;\n       --  In a subunit, the scope depth is not a proper measure of hiding,\n       --  because the context of the proper body may itself hide entities in\n       --  parent units. This rare case requires inspecting the tree directly\n       --  because the proper body is inserted in the main unit and its context\n       --  is simply added to that of the parent.\n \n+      -----------------------\n+      -- Available_Subtype --\n+      -----------------------\n+\n+      function Available_Subtype return Boolean is\n+         Comp : Entity_Id;\n+      begin\n+         Comp := First_Entity (Etype (P));\n+         while Present (Comp) loop\n+            if Chars (Comp) = Chars (Selector_Name (N)) then\n+               Set_Etype (N, Etype (Comp));\n+               Set_Etype (Selector_Name (N), Etype (Comp));\n+               return True;\n+            end if;\n+\n+            Next_Component (Comp);\n+         end loop;\n+\n+         return False;\n+      end Available_Subtype;\n+\n       -----------------------------\n       -- Is_Reference_In_Subunit --\n       -----------------------------\n@@ -6563,14 +6591,23 @@ package body Sem_Ch8 is\n                  and then (not Is_Entity_Name (P)\n                             or else Chars (Entity (P)) /= Name_uInit)\n                then\n+                  if Is_Entity_Name (P)\n+                    and then Ekind (Etype (P)) = E_Record_Subtype\n+                    and then Nkind (Parent (Etype (P))) = N_Subtype_Declaration\n+                    and then Is_Array_Type (Etype (Selector))\n+                    and then not Is_Packed (Etype (Selector))\n+                    and then Available_Subtype\n+                  then\n+                     return;\n+\n                   --  Do not build the subtype when referencing components of\n                   --  dispatch table wrappers. Required to avoid generating\n                   --  elaboration code with HI runtimes. JVM and .NET use a\n                   --  modified version of Ada.Tags which does not contain RE_\n                   --  Dispatch_Table_Wrapper and RE_No_Dispatch_Table_Wrapper.\n                   --  Avoid raising RE_Not_Available exception in those cases.\n \n-                  if VM_Target = No_VM\n+                  elsif VM_Target = No_VM\n                     and then RTU_Loaded (Ada_Tags)\n                     and then\n                       ((RTE_Available (RE_Dispatch_Table_Wrapper)"}]}