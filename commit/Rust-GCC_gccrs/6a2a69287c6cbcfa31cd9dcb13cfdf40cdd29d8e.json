{"sha": "6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyYTY5Mjg3YzZjYmNmYTMxY2Q5ZGNiMTNjZmRmNDBjZGQyOWQ4ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-08-27T20:31:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-08-27T20:31:14Z"}, "message": "tree-ssa-dse.c (compute_trims): Handle case where the reference's type does not have a TYPE_SIZE_UNIT.\n\n\t* tree-ssa-dse.c (compute_trims): Handle case where the reference's\n\ttype does not have a TYPE_SIZE_UNIT.\n\n\t* gcc.c-torture/compile/dse.c: New test.\n\nFrom-SVN: r263896", "tree": {"sha": "2af41dc3ee0ba312d0a99440762f15ab9fd150f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2af41dc3ee0ba312d0a99440762f15ab9fd150f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/comments", "author": null, "committer": null, "parents": [{"sha": "d4714a1b5eb458fb233024ef16b0dda6e712d632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4714a1b5eb458fb233024ef16b0dda6e712d632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4714a1b5eb458fb233024ef16b0dda6e712d632"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "a8ab83580b5038c78e2b1a141e54442f9852e842", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "patch": "@@ -1,3 +1,8 @@\n+2018-08-27  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dse.c (compute_trims): Handle case where the reference's\n+\ttype does not have a TYPE_SIZE_UNIT.\n+\n 2018-08-27  Steve Ellcey  <sellcey@cavium.com>\n \n \t* config/aarch64/aarch64-speculation.cc: Replace include of cfg.h"}, {"sha": "6410f4638cc3dc9ef01e416bfcdae3518b88c8ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "patch": "@@ -1,3 +1,7 @@\n+2018-08-27  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/compile/dse.c: New test.\n+\n 2018-08-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86993"}, {"sha": "908e6503eb43c6002b787acedc25e85026f3940e", "filename": "gcc/testsuite/gcc.c-torture/compile/dse.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdse.c?ref=6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "patch": "@@ -0,0 +1,19 @@\n+typedef unsigned long microblaze_reg_t;\n+struct pt_regs\n+{\n+  microblaze_reg_t msr;\n+  int pt_mode;\n+};\n+struct task_struct\n+{\n+  void *stack;\n+};\n+int\n+copy_thread (struct task_struct *p)\n+{\n+  struct pt_regs *childregs =\n+    (((struct pt_regs *) ((1 << 13) + ((void *) (p)->stack))) - 1);\n+  memset (childregs, 0, sizeof (struct pt_regs));\n+  childregs->pt_mode = 1;\n+}\n+"}, {"sha": "bddbbe8377a8fa80ad9929805551cce14eb05f51", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=6a2a69287c6cbcfa31cd9dcb13cfdf40cdd29d8e", "patch": "@@ -252,6 +252,7 @@ compute_trims (ao_ref *ref, sbitmap live, int *trim_head, int *trim_tail,\n       /* But don't trim away out of bounds accesses, as this defeats\n \t proper warnings.  */\n       if (*trim_tail\n+\t  && TYPE_SIZE_UNIT (TREE_TYPE (ref->base))\n \t  && compare_tree_int (TYPE_SIZE_UNIT (TREE_TYPE (ref->base)),\n \t\t\t       last_orig) <= 0)\n \t*trim_tail = 0;"}]}