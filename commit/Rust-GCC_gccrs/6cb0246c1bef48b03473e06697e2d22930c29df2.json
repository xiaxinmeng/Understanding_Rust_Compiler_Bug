{"sha": "6cb0246c1bef48b03473e06697e2d22930c29df2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiMDI0NmMxYmVmNDhiMDM0NzNlMDY2OTdlMmQyMjkzMGMyOWRmMg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-10-07T20:29:27Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-07T20:29:27Z"}, "message": "trans-array.c (gfc_conv_section_startstride): Remove coarray_last argument.\n\n\t* trans-array.c (gfc_conv_section_startstride): Remove coarray_last\n\targument. Remove condition on coarray_last.\n\t(gfc_conv_ss_startstride): Update call to gfc_conv_section_startstride.\n\t(gfc_conv_expr_descriptor): Ditto.\n\nFrom-SVN: r179692", "tree": {"sha": "184682656e11e924885e531166ecb9beea4bec2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/184682656e11e924885e531166ecb9beea4bec2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb0246c1bef48b03473e06697e2d22930c29df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb0246c1bef48b03473e06697e2d22930c29df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb0246c1bef48b03473e06697e2d22930c29df2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb0246c1bef48b03473e06697e2d22930c29df2/comments", "author": null, "committer": null, "parents": [{"sha": "d7baf647899d1919a313fd27ed6271bea77a1cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7baf647899d1919a313fd27ed6271bea77a1cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7baf647899d1919a313fd27ed6271bea77a1cc2"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "b72c0ebb50df1353b7f9eef67418c36a42f4689b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb0246c1bef48b03473e06697e2d22930c29df2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb0246c1bef48b03473e06697e2d22930c29df2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6cb0246c1bef48b03473e06697e2d22930c29df2", "patch": "@@ -1,3 +1,10 @@\n+2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\t* trans-array.c (gfc_conv_section_startstride): Remove coarray_last\n+\targument. Remove condition on coarray_last.\n+\t(gfc_conv_ss_startstride): Update call to gfc_conv_section_startstride.\n+\t(gfc_conv_expr_descriptor): Ditto.\n+\n 2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* trans-array.c (gfc_walk_variable_expr): Remove scalar coarray"}, {"sha": "95ebf6c235976bac6f705dc94c67bc523c839cfc", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb0246c1bef48b03473e06697e2d22930c29df2/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb0246c1bef48b03473e06697e2d22930c29df2/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6cb0246c1bef48b03473e06697e2d22930c29df2", "patch": "@@ -3201,7 +3201,7 @@ evaluate_bound (stmtblock_t *block, tree *bounds, gfc_expr ** values,\n \n static void\n gfc_conv_section_startstride (gfc_loopinfo * loop, gfc_ss * ss, int dim,\n-\t\t\t      bool coarray, bool coarray_last)\n+\t\t\t      bool coarray)\n {\n   gfc_expr *stride = NULL;\n   tree desc;\n@@ -3237,8 +3237,7 @@ gfc_conv_section_startstride (gfc_loopinfo * loop, gfc_ss * ss, int dim,\n   /* Similarly calculate the end.  Although this is not used in the\n      scalarizer, it is needed when checking bounds and where the end\n      is an expression with side-effects.  */\n-  if (!coarray_last)\n-    evaluate_bound (&loop->pre, info->end, ar->end, desc, dim, false);\n+  evaluate_bound (&loop->pre, info->end, ar->end, desc, dim, false);\n \n   /* Calculate the stride.  */\n   if (!coarray && stride == NULL)\n@@ -3321,7 +3320,7 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n \n \t  for (n = 0; n < ss->data.info.dimen; n++)\n \t    gfc_conv_section_startstride (loop, ss, ss->data.info.dim[n],\n-\t\t\t\t\t  false, false);\n+\t\t\t\t\t  false);\n \t  break;\n \n \tcase GFC_SS_INTRINSIC:\n@@ -5976,7 +5975,7 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n \t  for (n = ss->data.info.dimen; n < ss->data.info.dimen + codim - 1;\n \t       n++)\n \t    {\n-\t      gfc_conv_section_startstride (&loop, ss, n, true, false);\n+\t      gfc_conv_section_startstride (&loop, ss, n, true);\n \t      loop.from[n] = info->start[n];\n \t      loop.to[n]   = info->end[n];\n \t    }"}]}