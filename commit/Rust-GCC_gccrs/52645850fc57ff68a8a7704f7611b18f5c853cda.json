{"sha": "52645850fc57ff68a8a7704f7611b18f5c853cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI2NDU4NTBmYzU3ZmY2OGE4YTc3MDRmNzYxMWIxOGY1Yzg1M2NkYQ==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-07-25T23:16:25Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-07-25T23:16:25Z"}, "message": "extend.texi: Update the built-in documentation file for the existing built-in functions...\n\ngcc/ChangeLog:\n\n2017-07-25  Carl Love  <cel@us.ibm.com>\n\n\t* doc/extend.texi: Update the built-in documentation file for the\n\texisting built-in functions\n\tvector signed char vec_cnttz (vector signed char);\n\tvector unsigned char vec_cnttz (vector unsigned char);\n\tvector signed short vec_cnttz (vector signed short);\n\tvector unsigned short vec_cnttz (vector unsigned short);\n\tvector signed int vec_cnttz (vector signed int);\n\tvector unsigned int vec_cnttz (vector unsigned int);\n\tvector signed long long vec_cnttz (vector signed long long);\n\tvector unsigned long long vec_cnttz (vector unsigned long long);\n\ngcc/testsuite/ChangeLog:\n\n2017-07-25  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-4-p9-runnable.c:  Add test file for\n\tvec_cnttz builtins.\n\nFrom-SVN: r250549", "tree": {"sha": "6ded539d4c1d65689b44b317c5ead8c962ec10df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ded539d4c1d65689b44b317c5ead8c962ec10df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52645850fc57ff68a8a7704f7611b18f5c853cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52645850fc57ff68a8a7704f7611b18f5c853cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52645850fc57ff68a8a7704f7611b18f5c853cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52645850fc57ff68a8a7704f7611b18f5c853cda/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08327dfa73c3cc2daf15a0c4405ae1bcfa940ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08327dfa73c3cc2daf15a0c4405ae1bcfa940ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08327dfa73c3cc2daf15a0c4405ae1bcfa940ef3"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "558d318f8925b784e0b14069789c556a579386c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52645850fc57ff68a8a7704f7611b18f5c853cda", "patch": "@@ -1,3 +1,16 @@\n+2017-07-25  Carl Love  <cel@us.ibm.com>\n+\n+\t* doc/extend.texi: Update the built-in documentation file for the\n+\texisting built-in functions\n+\tvector signed char vec_cnttz (vector signed char);\n+\tvector unsigned char vec_cnttz (vector unsigned char);\n+\tvector signed short vec_cnttz (vector signed short);\n+\tvector unsigned short vec_cnttz (vector unsigned short);\n+\tvector signed int vec_cnttz (vector signed int);\n+\tvector unsigned int vec_cnttz (vector unsigned int);\n+\tvector signed long long vec_cnttz (vector signed long long);\n+\tvector unsigned long long vec_cnttz (vector unsigned long long);\n+\n 2017-07-25  Andrew Pinski  <apinski@cavium.com>\n \n \t* tree-ssa-uninit.c (warn_uninitialized_vars): Don't warn about memory"}, {"sha": "156f7f2569ccd31dfeea08527c695b9384a50e52", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=52645850fc57ff68a8a7704f7611b18f5c853cda", "patch": "@@ -15453,6 +15453,15 @@ vector bool short vec_cmpnez (vector unsigned short arg1, vector unsigned short\n vector bool int vec_cmpnez (vector signed int arg1, vector signed int arg2);\n vector bool int vec_cmpnez (vector unsigned int, vector unsigned int);\n \n+vector signed char vec_cnttz (vector signed char);\n+vector unsigned char vec_cnttz (vector unsigned char);\n+vector signed short vec_cnttz (vector signed short);\n+vector unsigned short vec_cnttz (vector unsigned short);\n+vector signed int vec_cnttz (vector signed int);\n+vector unsigned int vec_cnttz (vector unsigned int);\n+vector signed long long vec_cnttz (vector signed long long);\n+vector unsigned long long vec_cnttz (vector unsigned long long);\n+\n signed int vec_cntlz_lsbb (vector signed char);\n signed int vec_cntlz_lsbb (vector unsigned char);\n "}, {"sha": "ba9e571982ba2e78ae89f3037b76c9499e563f71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52645850fc57ff68a8a7704f7611b18f5c853cda", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-4-p9-runnable.c:  Add test file for\n+\tvec_cnttz builtins.\n+\n 2017-07-25 Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt66.adb: New test."}, {"sha": "8e8fcabbe826fd3fe59ebca46bbf913867f01d46", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-4-p9-runnable.c", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4-p9-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52645850fc57ff68a8a7704f7611b18f5c853cda/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4-p9-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4-p9-runnable.c?ref=52645850fc57ff68a8a7704f7611b18f5c853cda", "patch": "@@ -0,0 +1,95 @@\n+/* { dg-do run { target { powerpc*-*-* && { p9vector_hw } } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+/* { dg-options \"-mcpu=power9 -O2 \" } */\n+\n+#include <altivec.h> // vector\n+\n+void abort (void);\n+\n+int main() {\n+  int i;\n+\n+  vector signed char vsca, vscr, vscexpt;\n+  vector unsigned char vuca, vucr, vucexpt;\n+  vector signed short int vssa, vssr, vssexpt;\n+  vector unsigned short int vusa, vusr, vusexpt;\n+  vector signed int vsia, vsir, vsiexpt;\n+  vector unsigned int vuia, vuir, vuiexpt;\n+  vector signed long long vslla, vsllr, vsllexpt;\n+  vector unsigned long long vulla, vullr, vullexpt;\n+\n+  vsca = (vector signed char) {0, 1, 2, 3, 4, 5, 6, 7,\n+\t\t\t       8, 9, 10, 11, 12, 13, 14, 15};\n+\n+  vscexpt = (vector signed char) {8, 0, 1, 0, 2, 0, 1, 0,\n+\t\t\t\t  3, 0, 1, 0, 2, 0, 1, 0};\n+\n+  vuca = (vector unsigned char) {'0', '3', '6', '9', 'A', 'B', 'E', 'F',\n+\t\t\t\t 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N'};\n+\t\t\t\t\t\t\t\t\t\t\t\n+  vucexpt = (vector unsigned char) {4, 0, 1, 0, 0, 1, 0, 1,\n+\t\t\t\t    0, 3, 0, 1, 0, 2, 0, 1};\n+\n+  vssa = (vector short int) {0x1, 0x10, 0x100, 0x1000,\n+\t\t\t     0x2, 0x20, 0x200, 0x2000};\n+\n+  vssexpt = (vector short int) {0, 4, 8, 12, 1, 5, 9, 13};\n+\n+  vusa = (vector unsigned short int) {0x4, 0x40, 0x400, 0x4000,\n+\t\t\t\t      0x8, 0x80, 0x800, 0x8000};\n+  vusexpt = (vector unsigned short int) {2, 6, 10, 14, 3, 7, 11, 15};\n+\n+  vsia = (vector int) {0x10000, 0x100000, 0x1000000, 0x10000000};\n+  vsiexpt = (vector int){16, 20, 24, 28};\n+\n+  vuia = (vector unsigned int) {0x2, 0x20, 0x200, 0x2000};\n+  vuiexpt = (vector unsigned int){1, 5, 9, 13};\n+\n+  vslla = (vector long long) {0x0000000000010000LL, 0x0001000100010000LL};\n+  vsllexpt = (vector long long){16, 16};\n+\n+  vulla = (vector unsigned long long) {0x0000400000000000LL, 0x0080000000000000ULL};\n+\n+  vullexpt = (vector unsigned long long) {46, 55};\n+\n+  vscr = vec_cnttz (vsca);\n+  vucr = vec_cnttz (vuca);\n+  vssr = vec_cnttz (vssa);\n+  vusr = vec_cnttz (vusa);\n+  vsir = vec_cnttz (vsia);\n+  vuir = vec_cnttz (vuia);\n+  vsllr = vec_cnttz (vslla);\n+  vullr = vec_cnttz (vulla);\n+\n+  for (i=0; i<16; i++) {\n+    if (vscr[i] != vscexpt[i])\n+      abort();\n+\n+    if (vucr[i] != vucexpt[i])\n+      abort();\n+  }\n+\n+  for (i=0; i<8; i++) {\n+    if (vssr[i] != vssexpt[i])\n+      abort();\n+\n+    if (vusr[i] != vusexpt[i])\n+      abort();\n+  }\n+\n+  for (i=0; i<4; i++) {\n+    if (vsir[i] != vsiexpt[i])\n+      abort();\n+\n+    if (vuir[i] != vuiexpt[i])\n+      abort();\n+  }\n+\n+  for (i=0; i<2; i++) {\n+    if (vsllr[i] != vsllexpt[i])\n+      abort();\n+\n+    if (vullr[i] != vullexpt[i])\n+      abort();\n+  }\t\n+}"}]}