{"sha": "fb3f38da2a7d45b88c838b3ac55fe40479961790", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzZjM4ZGEyYTdkNDViODhjODM4YjNhYzU1ZmU0MDQ3OTk2MTc5MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-06T18:28:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-06T18:28:21Z"}, "message": "compiler, libgo: Fixes to prepare for 64-bit int.\n\nFrom-SVN: r193254", "tree": {"sha": "89ff7fdde0dc578287fb6c80a46652eaf78f3ddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89ff7fdde0dc578287fb6c80a46652eaf78f3ddf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb3f38da2a7d45b88c838b3ac55fe40479961790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3f38da2a7d45b88c838b3ac55fe40479961790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3f38da2a7d45b88c838b3ac55fe40479961790", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3f38da2a7d45b88c838b3ac55fe40479961790/comments", "author": null, "committer": null, "parents": [{"sha": "855a44ee8f73b4c53a0bad7780baa85d043b890f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855a44ee8f73b4c53a0bad7780baa85d043b890f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855a44ee8f73b4c53a0bad7780baa85d043b890f"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "5e9e828d9d5359f738907745f12ca3fe88f370e8", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -2568,8 +2568,12 @@ Integer_type::create_abstract_integer_type()\n {\n   static Integer_type* abstract_type;\n   if (abstract_type == NULL)\n-    abstract_type = new Integer_type(true, false, INT_TYPE_SIZE,\n-\t\t\t\t     RUNTIME_TYPE_KIND_INT);\n+    {\n+      Type* int_type = Type::lookup_integer_type(\"int\");\n+      abstract_type = new Integer_type(true, false,\n+\t\t\t\t       int_type->integer_type()->bits(),\n+\t\t\t\t       RUNTIME_TYPE_KIND_INT);\n+    }\n   return abstract_type;\n }\n "}, {"sha": "1f4399c446ad905a54a3cb3cd738055647cfa5a0", "filename": "libgo/go/bytes/indexbyte.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Fbytes%2Findexbyte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Fbytes%2Findexbyte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbytes%2Findexbyte.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -13,11 +13,11 @@\n    We deliberately don't split the stack in case it does call the\n    library function, which shouldn't need much stack space.  */\n \n-int IndexByte (struct __go_open_array, char)\n+intgo IndexByte (struct __go_open_array, char)\n   asm (\"bytes.IndexByte\")\n   __attribute__ ((no_split_stack));\n \n-int\n+intgo\n IndexByte (struct __go_open_array s, char b)\n {\n   char *p;"}, {"sha": "d79cba3757b5e48cd908137f94c198b4353aee0f", "filename": "libgo/go/log/syslog/syslog_c.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Flog%2Fsyslog%2Fsyslog_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Flog%2Fsyslog%2Fsyslog_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Flog%2Fsyslog%2Fsyslog_c.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -6,14 +6,16 @@\n \n #include <syslog.h>\n \n+#include \"runtime.h\"\n+\n /* We need to use a C function to call the syslog function, because we\n    can't represent a C varargs function in Go.  */\n \n-void syslog_c(int, const char*)\n+void syslog_c(intgo, const char*)\n   asm (\"log_syslog.syslog_c\");\n \n void\n-syslog_c (int priority, const char *msg)\n+syslog_c (intgo priority, const char *msg)\n {\n   syslog (priority, \"%s\", msg);\n }"}, {"sha": "c2d3b9fac707e9f47ae295d7895ec181cc406b08", "filename": "libgo/go/syscall/signame.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Fsyscall%2Fsigname.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fgo%2Fsyscall%2Fsigname.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsigname.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -10,10 +10,10 @@\n #include \"arch.h\"\n #include \"malloc.h\"\n \n-String Signame (int sig) asm (\"syscall.Signame\");\n+String Signame (intgo sig) asm (\"syscall.Signame\");\n \n String\n-Signame (int sig)\n+Signame (intgo sig)\n {\n   const char* s = NULL;\n   char buf[100];\n@@ -27,7 +27,7 @@ Signame (int sig)\n \n   if (s == NULL)\n     {\n-      snprintf(buf, sizeof buf, \"signal %d\", sig);\n+      snprintf(buf, sizeof buf, \"signal %ld\", (long) sig);\n       s = buf;\n     }\n   len = __builtin_strlen (s);"}, {"sha": "3b7f572d5a50fd002524132a2a2933a81eae9ec8", "filename": "libgo/runtime/cpuprof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fcpuprof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fcpuprof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fcpuprof.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -124,7 +124,7 @@ static uintptr eod[3] = {0, 1, 0};\n static void LostProfileData(void) {\n }\n \n-extern void runtime_SetCPUProfileRate(int32)\n+extern void runtime_SetCPUProfileRate(intgo)\n      __asm__(\"runtime.SetCPUProfileRate\");\n \n // SetCPUProfileRate sets the CPU profiling rate."}, {"sha": "c289bc0bea05f6d891b77cfb292e76fd0e140768", "filename": "libgo/runtime/go-new-map.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-new-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-new-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-new-map.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -106,10 +106,11 @@ __go_map_next_prime (uintptr_t n)\n struct __go_map *\n __go_new_map (const struct __go_map_descriptor *descriptor, uintptr_t entries)\n {\n-  intgo ientries;\n+  int32 ientries;\n   struct __go_map *ret;\n \n-  ientries = (intgo) entries;\n+  /* The master library limits map entries to int32, so we do too.  */\n+  ientries = (int32) entries;\n   if (ientries < 0 || (uintptr_t) ientries != entries)\n     runtime_panicstring (\"map size out of range\");\n "}, {"sha": "4c65e21516757eb0a917e98dca77b743773d4fff", "filename": "libgo/runtime/go-rune.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-rune.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-rune.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-rune.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -14,7 +14,7 @@\n    characters used from STR.  */\n \n int\n-__go_get_rune (const unsigned char *str, size_t len, int *rune)\n+__go_get_rune (const unsigned char *str, size_t len, int32 *rune)\n {\n   int c, c1, c2, c3, l;\n "}, {"sha": "7fee1da03eb8943065732757aa2065bb60210fff", "filename": "libgo/runtime/go-string.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-string.h?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -26,6 +26,6 @@ __go_ptr_strings_equal (const String *ps1, const String *ps2)\n   return __go_strings_equal (*ps1, *ps2);\n }\n \n-extern int __go_get_rune (const unsigned char *, size_t, int *);\n+extern int __go_get_rune (const unsigned char *, size_t, int32 *);\n \n #endif /* !defined(LIBGO_GO_STRING_H) */"}, {"sha": "2927351c8a975b740c69588d5c03580149c8399d", "filename": "libgo/runtime/go-traceback.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-traceback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fgo-traceback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-traceback.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -29,13 +29,13 @@ runtime_printtrace (uintptr *pcbuf, int32 c)\n     {\n       String fn;\n       String file;\n-      int line;\n+      intgo line;\n \n       if (__go_file_line (pcbuf[i], &fn, &file, &line)\n \t  && runtime_showframe (fn.str))\n \t{\n \t  runtime_printf (\"%S\\n\", fn);\n-\t  runtime_printf (\"\\t%S:%d\\n\", file, line);\n+\t  runtime_printf (\"\\t%S:%D\\n\", file, (int64) line);\n \t}\n     }\n }"}, {"sha": "b6254a7e53fa6d27f983773ec8e0cf52a5554f82", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -610,11 +610,11 @@ runtime_goroutinetrailer(G *g)\n \tif(g != nil && g->gopc != 0 && g->goid != 1) {\n \t\tString fn;\n \t\tString file;\n-\t\tint line;\n+\t\tintgo line;\n \n \t\tif(__go_file_line(g->gopc - 1, &fn, &file, &line)) {\n \t\t\truntime_printf(\"created by %S\\n\", fn);\n-\t\t\truntime_printf(\"\\t%S:%d\\n\", file, line);\n+\t\t\truntime_printf(\"\\t%S:%D\\n\", file, (int64) line);\n \t\t}\n \t}\n }"}, {"sha": "72e1eb2f8b95691a8a18a4d482fa97cd97d56718", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -341,7 +341,7 @@ int32\truntime_ncpu;\n /*\n  * common functions and data\n  */\n-int32\truntime_findnull(const byte*);\n+intgo\truntime_findnull(const byte*);\n void\truntime_dump(byte*, int32);\n \n /*\n@@ -614,7 +614,7 @@ extern uintptr runtime_stacks_sys;\n \n struct backtrace_state;\n extern struct backtrace_state *__go_get_backtrace_state(void);\n-extern _Bool __go_file_line(uintptr, String*, String*, int *);\n+extern _Bool __go_file_line(uintptr, String*, String*, intgo *);\n extern byte* runtime_progname();\n \n int32 getproccount(void);"}, {"sha": "240ab0ba5e43da2cefff2bc6074108beb2341792", "filename": "libgo/runtime/string.goc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fstring.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f38da2a7d45b88c838b3ac55fe40479961790/libgo%2Fruntime%2Fstring.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fstring.goc?ref=fb3f38da2a7d45b88c838b3ac55fe40479961790", "patch": "@@ -54,7 +54,7 @@ func stringiter(s String, k int) (retk int) {\n out:\n }\n \n-func stringiter2(s String, k int) (retk int, retv int) {\n+func stringiter2(s String, k int) (retk int, retv int32) {\n \tif(k >= s.len) {\n \t\t// retk=0 is end of iteration\n \t\tretk = 0;"}]}