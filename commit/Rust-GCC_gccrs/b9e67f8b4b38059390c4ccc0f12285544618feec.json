{"sha": "b9e67f8b4b38059390c4ccc0f12285544618feec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjllNjdmOGI0YjM4MDU5MzkwYzRjY2MwZjEyMjg1NTQ0NjE4ZmVlYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-09-22T09:39:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-22T09:39:41Z"}, "message": "re PR tree-optimization/33146 (ICE in build_polynomial_chrec, at tree-chrec.h:136)\n\n2007-09-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/33146\n\t* fold-const.c (fold_binary): Use the original tree\n\tfor negating.\n\t* tree.h (STRIP_SIGN_NOPS): Converting from or to pointer\n\talso changes \"sign\".\n\n\t* gcc.c-torture/compile/pr33146.c: New testcase.\n\nFrom-SVN: r128666", "tree": {"sha": "4d3c04a1ba5c20891e6ff625a7e0c0c52afa9b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d3c04a1ba5c20891e6ff625a7e0c0c52afa9b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9e67f8b4b38059390c4ccc0f12285544618feec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e67f8b4b38059390c4ccc0f12285544618feec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e67f8b4b38059390c4ccc0f12285544618feec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e67f8b4b38059390c4ccc0f12285544618feec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "6f3cc5f8e1297c67fbc900141e45a2c717f6968c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9e67f8b4b38059390c4ccc0f12285544618feec", "patch": "@@ -1,3 +1,11 @@\n+2007-09-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33146\n+\t* fold-const.c (fold_binary): Use the original tree\n+\tfor negating.\n+\t* tree.h (STRIP_SIGN_NOPS): Converting from or to pointer\n+\talso changes \"sign\".\n+\n 2007-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/32325"}, {"sha": "426aad4ced1b2c29e6d640ee43ed98204116e082", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b9e67f8b4b38059390c4ccc0f12285544618feec", "patch": "@@ -10240,9 +10240,11 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t    return omit_one_operand (type, arg1, arg0);\n \t  if (integer_onep (arg1))\n \t    return non_lvalue (fold_convert (type, arg0));\n-\t  /* Transform x * -1 into -x.  */\n+\t  /* Transform x * -1 into -x.  Make sure to do the negation\n+\t     on the original operand with conversions not stripped\n+\t     because we can only strip non-sign-changing conversions.  */\n \t  if (integer_all_onesp (arg1))\n-\t    return fold_convert (type, negate_expr (arg0));\n+\t    return fold_convert (type, negate_expr (op0));\n \t  /* Transform x * -C into -x * C if x is easily negatable.  */\n \t  if (TREE_CODE (arg1) == INTEGER_CST\n \t      && tree_int_cst_sgn (arg1) == -1"}, {"sha": "5b5a36f2f9ee178e249c0dffb04842c81589c60c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9e67f8b4b38059390c4ccc0f12285544618feec", "patch": "@@ -1,3 +1,8 @@\n+2007-09-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33146\n+\t* gcc.c-torture/compile/pr33146.c: New testcase.\n+\n 2007-09-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* lib/target-supports.exp (check_cached_effective_target): New"}, {"sha": "6741fcf5d0fc9906e5eaa0cb988bee0596d62e1b", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33146.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33146.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33146.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33146.c?ref=b9e67f8b4b38059390c4ccc0f12285544618feec", "patch": "@@ -0,0 +1,19 @@\n+typedef struct\n+{\n+  int end;\n+  int term;\n+}\n+jpc_enc_pass_t;\n+void foo(int numpasses, jpc_enc_pass_t *p)\n+{\n+  jpc_enc_pass_t *pass;\n+  jpc_enc_pass_t *termpass;\n+  for (pass = p; pass != termpass; ++pass)\n+    if (!pass->term)\n+    {\n+      termpass = pass;\n+      while (termpass - pass < numpasses && !termpass->term)\n+        ++termpass;\n+      pass->end = termpass->end;\n+    }\n+}"}, {"sha": "d7ca0b2a78da0fe3f40b81e95f69c361292942a7", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e67f8b4b38059390c4ccc0f12285544618feec/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b9e67f8b4b38059390c4ccc0f12285544618feec", "patch": "@@ -1019,7 +1019,9 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n \t && (TYPE_MODE (TREE_TYPE (EXP))\t\t\t\\\n \t     == TYPE_MODE (TREE_TYPE (TREE_OPERAND (EXP, 0))))\t\\\n \t && (TYPE_UNSIGNED (TREE_TYPE (EXP))\t\t\t\\\n-\t     == TYPE_UNSIGNED (TREE_TYPE (TREE_OPERAND (EXP, 0))))) \\\n+\t     == TYPE_UNSIGNED (TREE_TYPE (TREE_OPERAND (EXP, 0)))) \\\n+\t && (POINTER_TYPE_P (TREE_TYPE (EXP))\t\t\t\\\n+\t     == POINTER_TYPE_P (TREE_TYPE (TREE_OPERAND (EXP, 0))))) \\\n     (EXP) = TREE_OPERAND (EXP, 0)\n \n /* Like STRIP_NOPS, but don't alter the TREE_TYPE either.  */"}]}