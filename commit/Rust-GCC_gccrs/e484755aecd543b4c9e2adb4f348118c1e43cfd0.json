{"sha": "e484755aecd543b4c9e2adb4f348118c1e43cfd0", "node_id": "C_kwDOANBUbNoAKGU0ODQ3NTVhZWNkNTQzYjRjOWUyYWRiNGYzNDgxMThjMWU0M2NmZDA", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-26T22:49:15Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-30T00:33:35Z"}, "message": "target: Fix asm generation for AVX builtins when using -masm=intel [PR106095]\n\ngcc/ChangeLog:\n\tPR target/106095\n\t* config/i386/sse.md: Fix asm generation.\n\ngcc/testsuite/ChangeLog:\n\tPR target/106095\n\t* gcc.target/i386/pr106095.c: Add test using those AVX builtins.", "tree": {"sha": "6d1e0772a2cbc99be0e0e5974f41bfd5eaca7dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d1e0772a2cbc99be0e0e5974f41bfd5eaca7dbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e484755aecd543b4c9e2adb4f348118c1e43cfd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e484755aecd543b4c9e2adb4f348118c1e43cfd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e484755aecd543b4c9e2adb4f348118c1e43cfd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e484755aecd543b4c9e2adb4f348118c1e43cfd0/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce600bc4643fd046301bd0b6f959546ae459875b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce600bc4643fd046301bd0b6f959546ae459875b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce600bc4643fd046301bd0b6f959546ae459875b"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "f2f72e8fb05f1a068af8b3ef32ba804ccd17973f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e484755aecd543b4c9e2adb4f348118c1e43cfd0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e484755aecd543b4c9e2adb4f348118c1e43cfd0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e484755aecd543b4c9e2adb4f348118c1e43cfd0", "patch": "@@ -8859,7 +8859,7 @@\n   \"@\n    cvtsd2ss\\t{%2, %0|%0, %2}\n    cvtsd2ss\\t{%2, %0|%0, %q2}\n-   vcvtsd2ss\\t{<round_mask_op3>%2, %1, %0<mask_operand3>|<mask_operand3>%0, %1, %q2<round_mask_op3>}\"\n+   vcvtsd2ss\\t{<round_mask_op3>%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %q2<round_mask_op3>}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx\")\n    (set_attr \"type\" \"ssecvt\")\n    (set_attr \"athlon_decode\" \"vector,double,*\")\n@@ -8903,7 +8903,7 @@\n   \"@\n    cvtss2sd\\t{%2, %0|%0, %2}\n    cvtss2sd\\t{%2, %0|%0, %k2}\n-   vcvtss2sd\\t{<round_saeonly_mask_op3>%2, %1, %0<mask_operand3>|<mask_operand3>%0, %1, %k2<round_saeonly_mask_op3>}\"\n+   vcvtss2sd\\t{<round_saeonly_mask_op3>%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %k2<round_saeonly_mask_op3>}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx\")\n    (set_attr \"type\" \"ssecvt\")\n    (set_attr \"amdfam10_decode\" \"vector,double,*\")\n@@ -14406,8 +14406,8 @@\n   \"TARGET_AVX512VL\"\n {\n   if (GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) == 4)\n-    return \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}|%0%{%2%}, %t1}\";\n-  return \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}|%0%{%2%}, %g1}\";\n+    return \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}|%0%{%2%}, %1}\";\n+  return \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}|%0%{%2%}, %1}\";\n }\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"memory\" \"store\")\n@@ -14506,7 +14506,7 @@\n \t  (match_dup 0)\n \t  (match_operand:QI 2 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VL\"\n-  \"vpmov<trunsuffix>qw\\t{%1, %0%{%2%}|%0%{%2%}, %g1}\"\n+  \"vpmov<trunsuffix>qw\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"memory\" \"store\")\n    (set_attr \"prefix\" \"evex\")"}, {"sha": "dfa6136500fab6e3b333912d9e902ecd65828a27", "filename": "gcc/testsuite/gcc.target/i386/pr106095.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e484755aecd543b4c9e2adb4f348118c1e43cfd0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106095.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e484755aecd543b4c9e2adb4f348118c1e43cfd0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106095.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106095.c?ref=e484755aecd543b4c9e2adb4f348118c1e43cfd0", "patch": "@@ -0,0 +1,47 @@\n+/* PR gcc/106095 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-mavx512vl -masm=intel\" } */\n+/* { dg-require-effective-target masm_intel } */\n+\n+#include <immintrin.h>\n+#include <stdlib.h>\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+typedef long long v2di __attribute__ ((vector_size (16)));\n+typedef long long v4di __attribute__ ((vector_size (32)));\n+typedef double v2df __attribute__ ((vector_size (16)));\n+typedef float v4sf __attribute__ ((vector_size (16)));\n+\n+void bug1(void) {\n+    v4si ints4 = {0, 1, 2, 3};\n+    unsigned long long *addr = malloc(sizeof(*addr));\n+    __builtin_ia32_pmovdw128mem_mask(addr, ints4, 0);\n+}\n+\n+int bug2(void) {\n+    v2df a = {0.0, 0.0};\n+    v4sf b = {0.0, 0.0, 0.0, 0.0};\n+    v2df src = {0.0, 0.0};\n+    v2df res = __builtin_ia32_cvtss2sd_mask_round(a, b, src, 0, _MM_FROUND_NO_EXC);\n+    return (int)res[0];\n+}\n+\n+int bug3(void) {\n+    v4sf a = {0.0, 0.0, 0.0, 0.0};\n+    v2df b = {0.0, 0.0};\n+    v4sf src = {0.0, 0.0, 0.0, 0.0};\n+    v4sf res = __builtin_ia32_cvtsd2ss_mask_round(a, b, src, 0, _MM_FROUND_NO_EXC);\n+    return (int)res[0];\n+}\n+\n+int bug4(void) {\n+    v4di ints4 = {0, 1, 2, 3};\n+    unsigned long long *addr = malloc(sizeof(*addr));\n+    __builtin_ia32_pmovqw256mem_mask(addr, ints4, 0);\n+}\n+\n+int bug5(void) {\n+    v2di ints4 = {0, 1};\n+    unsigned int *addr = malloc(sizeof(*addr));\n+    __builtin_ia32_pmovqw128mem_mask(addr, ints4, 0);\n+}"}]}