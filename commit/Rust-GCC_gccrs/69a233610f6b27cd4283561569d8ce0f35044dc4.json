{"sha": "69a233610f6b27cd4283561569d8ce0f35044dc4", "node_id": "C_kwDOANBUbNoAKDY5YTIzMzYxMGY2YjI3Y2Q0MjgzNTYxNTY5ZDhjZTBmMzUwNDRkYzQ", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-10-19T13:21:22Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-10-19T15:56:45Z"}, "message": "Use Value_Range when applying inferred ranges.\n\nApplying an inferred range is using int_range_ma as the\ntemporary rather than the general purpose Value_Range.  This causes it\nto trap if we have a non-integral inferred range.\n\n\t* gimple-range-cache.cc (ranger_cache::range_from_dom): Use\n\t  Value_Range not int_range_max.", "tree": {"sha": "3ed43fbeb9757a78e807312905406f09463e7750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed43fbeb9757a78e807312905406f09463e7750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a233610f6b27cd4283561569d8ce0f35044dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a233610f6b27cd4283561569d8ce0f35044dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a233610f6b27cd4283561569d8ce0f35044dc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a233610f6b27cd4283561569d8ce0f35044dc4/comments", "author": null, "committer": null, "parents": [{"sha": "47684e58edc92ffdd4c636dbd34359b4c22e863a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47684e58edc92ffdd4c636dbd34359b4c22e863a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47684e58edc92ffdd4c636dbd34359b4c22e863a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f279371948a54a19e126a7aacc13c06ead3136cb", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a233610f6b27cd4283561569d8ce0f35044dc4/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a233610f6b27cd4283561569d8ce0f35044dc4/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=69a233610f6b27cd4283561569d8ce0f35044dc4", "patch": "@@ -1546,7 +1546,6 @@ ranger_cache::range_from_dom (vrange &r, tree name, basic_block start_bb,\n void\n ranger_cache::apply_inferred_ranges (gimple *s)\n {\n-  int_range_max r;\n   bool update = true;\n \n   basic_block bb = gimple_bb (s);\n@@ -1572,6 +1571,7 @@ ranger_cache::apply_inferred_ranges (gimple *s)\n       m_exit.add_range (name, bb, infer.range (x));\n       if (update)\n \t{\n+\t  Value_Range r (TREE_TYPE (name));\n \t  if (!m_on_entry.get_bb_range (r, name, bb))\n \t    exit_range (r, name, bb, RFD_READ_ONLY);\n \t  if (r.intersect (infer.range (x)))"}]}