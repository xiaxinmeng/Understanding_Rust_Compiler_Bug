{"sha": "0b5252ac694ea0393cc9443ef2cebcab60bab40d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1MjUyYWM2OTRlYTAzOTNjYzk0NDNlZjJjZWJjYWI2MGJhYjQwZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-05-24T13:04:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:04:29Z"}, "message": "[Ada] Spurious error on private task derivation\n\nThe compiler reports a spurious error notifying a missing constraint in the\ndeclaration of a private type with discriminants whose full view is a\nderivation of a task type.\n\nAfter this patch the following test compiles without errors.\n\npackage Types1 is\n   type Parent (Discr1 : Boolean) is limited private;\nprivate\n   task type Parent (Discr1 : Boolean);\nend Types1;\n\nwith Types1; use Types1;\npackage Types2 is\n   type Child (Discr2 : Boolean) is limited private;\nprivate\n   type Child (Discr2 : Boolean) is       -- Test\n     new Parent (Discr1 => Discr2);\nend Types2;\n\nCommand: gcc -c types2.ads\n\n2018-05-24  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Abstract_Interface_List): Add missing support for\n\tprivate types whose full view is a synchronized type.\n\t* sem_ch3.adb (Build_Derived_Private_Type): Skip building the full\n\tderivation of a private type parent type is a task type with\n\tdiscriminants as gigi does not use such type directly.\n\nFrom-SVN: r260644", "tree": {"sha": "73988d7a8919b6e1af5fa6729812a6d95573546c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73988d7a8919b6e1af5fa6729812a6d95573546c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b5252ac694ea0393cc9443ef2cebcab60bab40d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5252ac694ea0393cc9443ef2cebcab60bab40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5252ac694ea0393cc9443ef2cebcab60bab40d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5252ac694ea0393cc9443ef2cebcab60bab40d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "ea9a682893ed77af13c4d241fcaa40c4ac5c9900", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0b5252ac694ea0393cc9443ef2cebcab60bab40d", "patch": "@@ -1,3 +1,11 @@\n+2018-05-24  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_util.adb (Abstract_Interface_List): Add missing support for\n+\tprivate types whose full view is a synchronized type.\n+\t* sem_ch3.adb (Build_Derived_Private_Type): Skip building the full\n+\tderivation of a private type parent type is a task type with\n+\tdiscriminants as gigi does not use such type directly.\n+\n 2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_elab.adb (Build_Variable_Reference_Marker): Do not create a"}, {"sha": "4887e866d28fa6f2967b8de63c88e2edbef2c12a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0b5252ac694ea0393cc9443ef2cebcab60bab40d", "patch": "@@ -7856,12 +7856,12 @@ package body Sem_Ch3 is\n          --  Build the full derivation if this is not the anonymous derived\n          --  base type created by Build_Derived_Record_Type in the constrained\n          --  case (see point 5. of its head comment) since we build it for the\n-         --  derived subtype. And skip it for protected types altogether, as\n+         --  derived subtype. And skip it for synchronized types altogether, as\n          --  gigi does not use these types directly.\n \n          if Present (Full_View (Parent_Type))\n            and then not Is_Itype (Derived_Type)\n-           and then not (Ekind (Full_View (Parent_Type)) in Protected_Kind)\n+           and then not (Is_Concurrent_Type (Full_View (Parent_Type)))\n          then\n             declare\n                Der_Base   : constant Entity_Id := Base_Type (Derived_Type);"}, {"sha": "76b4fb08d5cdbc3ff8f3e7fc0d88b77922a559a0", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5252ac694ea0393cc9443ef2cebcab60bab40d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0b5252ac694ea0393cc9443ef2cebcab60bab40d", "patch": "@@ -184,11 +184,11 @@ package body Sem_Util is\n          --  If we are dealing with a synchronized subtype, go to the base\n          --  type, whose declaration has the interface list.\n \n-         --  Shouldn't this be Declaration_Node???\n+         Nod := Declaration_Node (Base_Type (Typ));\n \n-         Nod := Parent (Base_Type (Typ));\n-\n-         if Nkind (Nod) = N_Full_Type_Declaration then\n+         if Nkind_In (Nod, N_Full_Type_Declaration,\n+                           N_Private_Type_Declaration)\n+         then\n             return Empty_List;\n          end if;\n "}]}