{"sha": "fecbd77922c9772bb2823e111991349e0657241a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVjYmQ3NzkyMmM5NzcyYmIyODIzZTExMTk5MTM0OWUwNjU3MjQxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T10:44:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T10:44:14Z"}, "message": "[multiple changes]\n\n2011-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taskin.ads, s-tassta.adb, sem_ch13.adb: Minor reformatting.\n\n2011-09-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* Makefile.rtl: Move s-oscons.o from GNATRTL_TASKING_OBJS to\n\tGNATRTL_NONTASKING_OBJS.\n\n2011-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads (Is_Aliased): Fix existing documentation and add note on\n\tpossibility of this flag being set for formals in Ada 2012 mode.\n\t* par-ch6.adb (P_Formal_Part): Handle aliased for parameters for Ada\n\t2012.\n\t* sem_ch6.adb (Process_Formals): Handle aliased parameters in Ada 2012\n\tmode.\n\t* sinfo.adb (Aliased_Present): Allowed in N_Parameter_Specification for\n\tAda 2012.\n\t* sinfo.ads (Aliased_Present): Allowed in N_Parameter_Specification for\n\tAda 2012.\n\n2011-09-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Find_Insertion_Node): New routine. Determines the proper\n\tinsertion node in a tree of nested Expression_With_Actions nodes.\n\t(Process_Transient_Object): In the case where a complex if statement\n\thas been converted into nested Expression_With_Actions nodes, the\n\t\"hook\" object and the associated access type must be inserted before\n\tthe top most Expression_With_Actions.\n\nFrom-SVN: r178401", "tree": {"sha": "a1771b89906f482d6e4877b37d3a4348e9509916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1771b89906f482d6e4877b37d3a4348e9509916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fecbd77922c9772bb2823e111991349e0657241a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecbd77922c9772bb2823e111991349e0657241a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fecbd77922c9772bb2823e111991349e0657241a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecbd77922c9772bb2823e111991349e0657241a/comments", "author": null, "committer": null, "parents": [{"sha": "516f608f15dcef7a20a2e178c57e3e8078784331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516f608f15dcef7a20a2e178c57e3e8078784331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516f608f15dcef7a20a2e178c57e3e8078784331"}], "stats": {"total": 192, "additions": 141, "deletions": 51}, "files": [{"sha": "57191fa00bb842dad20b53a3f0a6d05f3b36939b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -1,3 +1,34 @@\n+2011-09-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taskin.ads, s-tassta.adb, sem_ch13.adb: Minor reformatting.\n+\n+2011-09-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* Makefile.rtl: Move s-oscons.o from GNATRTL_TASKING_OBJS to\n+\tGNATRTL_NONTASKING_OBJS.\n+\n+2011-09-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads (Is_Aliased): Fix existing documentation and add note on\n+\tpossibility of this flag being set for formals in Ada 2012 mode.\n+\t* par-ch6.adb (P_Formal_Part): Handle aliased for parameters for Ada\n+\t2012.\n+\t* sem_ch6.adb (Process_Formals): Handle aliased parameters in Ada 2012\n+\tmode.\n+\t* sinfo.adb (Aliased_Present): Allowed in N_Parameter_Specification for\n+\tAda 2012.\n+\t* sinfo.ads (Aliased_Present): Allowed in N_Parameter_Specification for\n+\tAda 2012.\n+\n+2011-09-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Find_Insertion_Node): New routine. Determines the proper\n+\tinsertion node in a tree of nested Expression_With_Actions nodes.\n+\t(Process_Transient_Object): In the case where a complex if statement\n+\thas been converted into nested Expression_With_Actions nodes, the\n+\t\"hook\" object and the associated access type must be inserted before\n+\tthe top most Expression_With_Actions.\n+\n 2011-09-01  Robert Dewar  <dewar@adacore.com>\n \n \t* a-cbprqu.adb, a-cbprqu.ads, a-cuprqu.adb, a-cuprqu.ads,"}, {"sha": "30a95065153267a281d3a021804d044d8acce044", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -49,7 +49,6 @@ GNATRTL_TASKING_OBJS= \\\n   s-interr$(objext) \\\n   s-intman$(objext) \\\n   s-mudido$(objext) \\\n-  s-oscons$(objext) \\\n   s-osinte$(objext) \\\n   s-proinf$(objext) \\\n   s-solita$(objext) \\\n@@ -542,6 +541,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-memory$(objext) \\\n   s-multip$(objext) \\\n   s-os_lib$(objext) \\\n+  s-oscons$(objext) \\\n   s-osprim$(objext) \\\n   s-pack03$(objext) \\\n   s-pack05$(objext) \\"}, {"sha": "c0dda86ca66942e9261d203c5d31fddb2bee321f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -1997,8 +1997,9 @@ package Einfo is\n --       of pragma Ada_12 or Ada_2012.\n \n --    Is_Aliased (Flag15)\n---       Present in objects whose declarations carry the keyword aliased,\n---       and on record components that have the keyword.\n+--       Present in all entities. Set for objects and types whose declarations\n+--       carry the keyword aliased, and on record components that have the\n+--       keyword. For Ada 2012, also applies to formal parameters.\n \n --    Is_AST_Entry (Flag132)\n --       Present in entry entities. Set if a valid pragma AST_Entry applies\n@@ -4773,6 +4774,7 @@ package Einfo is\n    --    Is_Ada_2005_Only                    (Flag185)\n    --    Is_Ada_2012_Only                    (Flag199)\n    --    Is_Bit_Packed_Array                 (Flag122)  (base type only)\n+   --    Is_Aliased                          (Flag15)\n    --    Is_Character_Type                   (Flag63)\n    --    Is_Child_Unit                       (Flag73)\n    --    Is_Compilation_Unit                 (Flag149)\n@@ -4994,7 +4996,6 @@ package Einfo is\n    --    Component_Alignment                 (special)  (base type only)\n    --    Has_Component_Size_Clause           (Flag68)   (base type only)\n    --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n-   --    Is_Aliased                          (Flag15)\n    --    Is_Constrained                      (Flag12)\n    --    Next_Index                          (synth)\n    --    Number_Dimensions                   (synth)"}, {"sha": "00ebdbbb100b7a4b85512ac64c3a0840736acb89", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -4415,10 +4415,32 @@ package body Exp_Ch4 is\n       ------------------------------\n \n       procedure Process_Transient_Object (Decl : Node_Id) is\n-         Ins_Nod : constant Node_Id := Parent (N);\n-         --  To avoid the insertion of generated code in the list of Actions,\n-         --  Insert_Action must look at the parent field of the EWA.\n \n+         function Find_Insertion_Node return Node_Id;\n+         --  Complex if statements may be converted into nested EWAs. In this\n+         --  case, any generated code must be inserted before the if statement\n+         --  to ensure proper visibility of the \"hook\" objects. This routine\n+         --  returns the top most short circuit operator or the parent of the\n+         --  EWA if no nesting was detected.\n+\n+         -------------------------\n+         -- Find_Insertion_Node --\n+         -------------------------\n+\n+         function Find_Insertion_Node return Node_Id is\n+            Par : Node_Id := N;\n+\n+         begin\n+            --  Climb up the branches of a complex if statement\n+\n+            while Nkind_In (Parent (Par), N_And_Then, N_Op_Not, N_Or_Else) loop\n+               Par := Parent (Par);\n+            end loop;\n+\n+            return Par;\n+         end Find_Insertion_Node;\n+\n+         Ins_Nod   : constant Node_Id    := Find_Insertion_Node;\n          Loc       : constant Source_Ptr := Sloc (Decl);\n          Obj_Id    : constant Entity_Id  := Defining_Identifier (Decl);\n          Obj_Typ   : constant Entity_Id  := Etype (Obj_Id);"}, {"sha": "167f43e195baa605493282caafaa200ee772f212", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -1186,15 +1186,17 @@ package body Ch6 is\n    --  FORMAL_PART ::= (PARAMETER_SPECIFICATION {; PARAMETER_SPECIFICATION})\n \n    --  PARAMETER_SPECIFICATION ::=\n-   --    DEFINING_IDENTIFIER_LIST : MODE [NULL_EXCLUSION] SUBTYPE_MARK\n-   --      [:= DEFAULT_EXPRESSION]\n+   --    DEFINING_IDENTIFIER_LIST : [ALIASED] MODE [NULL_EXCLUSION]\n+   --      SUBTYPE_MARK [:= DEFAULT_EXPRESSION]\n    --  | DEFINING_IDENTIFIER_LIST : ACCESS_DEFINITION\n    --      [:= DEFAULT_EXPRESSION]\n \n    --  This scans the construct Formal_Part. The caller has already checked\n    --  that the initial token is a left parenthesis, and skipped past it, so\n    --  that on entry Token is the first token following the left parenthesis.\n \n+   --  Note: The ALIASED keyword is allowed only in Ada 2012 mode (AI 142)\n+\n    --  Error recovery: cannot raise Error_Resync\n \n    function P_Formal_Part return List_Id is\n@@ -1235,9 +1237,11 @@ package body Ch6 is\n \n                if Token /= Tok_Comma then\n \n-                  --  Assume colon if IN or OUT keyword found\n+                  --  Assume colon if ALIASED, IN or OUT keyword found\n \n-                  exit Ident_Loop when Token = Tok_In or else Token = Tok_Out;\n+                  exit Ident_Loop when Token = Tok_Aliased or else\n+                                       Token = Tok_In      or else\n+                                       Token = Tok_Out;\n \n                   --  Otherwise scan ahead\n \n@@ -1303,6 +1307,18 @@ package body Ch6 is\n                  New_Node (N_Parameter_Specification, Ident_Sloc);\n                Set_Defining_Identifier (Specification_Node, Idents (Ident));\n \n+               --  Scan possible ALIASED for Ada 2012 (AI-142)\n+\n+               if Token = Tok_Aliased then\n+                  if Ada_Version < Ada_2012 then\n+                     Error_Msg_SC (\"ALIASED parameter is an Ada2012 feature\");\n+                  else\n+                     Set_Aliased_Present (Specification_Node);\n+                  end if;\n+\n+                  Scan; -- past ALIASED\n+               end if;\n+\n                --  Scan possible NOT NULL for Ada 2005 (AI-231, AI-447)\n \n                Not_Null_Sloc := Token_Ptr;"}, {"sha": "8b4e61a89c1c396ec2ee375714e019b9e2623c26", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -415,22 +415,24 @@ package System.Tasking is\n    --  We need to store whether there are tasks allocated to concrete\n    --  processors in the default system dispatching domain because we need to\n    --  check it before creating a new dispatching domain. Two comments about\n-   --  the reason why we use a pointer here and not in package\n-   --  Dispatching_Domains.\n-   --  1) We use an array created dynamically in procedure Initialize which is\n-   --  called at the beginning of the initialization of the run-time library.\n-   --  Declaring a static array here in the spec would not work across\n-   --  different installations because it would get the value of Number_Of_CPUs\n-   --  from the machine where the run-time library is built, and not from the\n-   --  machine where the application is executed. That is the reason why we\n-   --  create the array (CPU'First .. Number_Of_CPUs) at execution time in the\n-   --  procedure body, ensuring that the function Number_Of_CPUs is executed at\n-   --  execution time (the same trick as we use for System_Domain).\n-   --  2) We have moved this declaration from package Dispatching_Domains\n-   --  because when we use a pragma CPU, the affinity is passed through the\n-   --  call to Create_Task. Hence, at this point, we may need to update the\n-   --  number of tasks associated to the processor, but we do not want to force\n-   --  a dependency from this package on Dispatching_Domains.\n+   --  why we use a pointer here and not in package Dispatching_Domains:\n+   --\n+   --    1) We use an array created dynamically in procedure Initialize which\n+   --    is called at the beginning of the initialization of the run-time\n+   --    library. Declaring a static array here in the spec would not work\n+   --    across different installations because it would get the value of\n+   --    Number_Of_CPUs from the machine where the run-time library is built,\n+   --    and not from the machine where the application is executed. That is\n+   --    the reason why we create the array (CPU'First .. Number_Of_CPUs) at\n+   --    execution time in the procedure body, ensuring that the function\n+   --    Number_Of_CPUs is executed at execution time (the same trick as we\n+   --    use for System_Domain).\n+   --\n+   --    2) We have moved this declaration from package Dispatching_Domains\n+   --    because when we use a pragma CPU, the affinity is passed through the\n+   --    call to Create_Task. Hence, at this point, we may need to update the\n+   --    number of tasks associated to the processor, but we do not want to\n+   --    force a dependency from this package on Dispatching_Domains.\n \n    ------------------------------------\n    -- Task related other definitions --"}, {"sha": "224b197eaf8bc03a347dbc82e6e00b7593532452", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -659,21 +659,21 @@ package body System.Tasking.Stages is\n       --  The CPU associated to the task (if any) must belong to the\n       --  dispatching domain.\n \n-      if Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU and then\n-        (Base_CPU not in T.Common.Domain'Range\n-         or else not T.Common.Domain (Base_CPU))\n+      if Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU\n+        and then\n+          (Base_CPU not in T.Common.Domain'Range\n+            or else not T.Common.Domain (Base_CPU))\n       then\n          Initialization.Undefer_Abort_Nestable (Self_ID);\n          raise Tasking_Error with \"CPU not in dispatching domain\";\n       end if;\n \n-      --  In order to handle the interaction between pragma CPU and\n-      --  dispatching domains we need to signal that this task is being\n-      --  allocated to a processor. This is needed only for tasks belonging to\n-      --  the system domain (the creation of new dispatching domains can only\n-      --  take processors from the system domain) and only before the\n-      --  environment task calls the main procedure (dispatching domains cannot\n-      --  be created after this).\n+      --  To handle the interaction between pragma CPU and dispatching domains\n+      --  we need to signal that this task is being allocated to a processor.\n+      --  This is needed only for tasks belonging to the system domain (the\n+      --  creation of new dispatching domains can only take processors from the\n+      --  system domain) and only before the environment task calls the main\n+      --  procedure (dispatching domains cannot be created after this).\n \n       if Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU\n         and then T.Common.Domain = System.Tasking.System_Domain\n@@ -686,9 +686,8 @@ package body System.Tasking.Stages is\n            Dispatching_Domain_Tasks (Base_CPU) + 1;\n       end if;\n \n-      --  Note: we should not call 'new' while holding locks since new\n-      --  may use locks (e.g. RTS_Lock under Windows) itself and cause a\n-      --  deadlock.\n+      --  Note: we should not call 'new' while holding locks since new may use\n+      --  locks (e.g. RTS_Lock under Windows) itself and cause a deadlock.\n \n       if Build_Entry_Names then\n          T.Entry_Names :="}, {"sha": "17f49a8ef3acdb77dde6c000617fbffbe679f671", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -1152,9 +1152,10 @@ package body Sem_Ch13 is\n                when Aspect_Priority           |\n                     Aspect_Interrupt_Priority |\n                     Aspect_Dispatching_Domain |\n-                    Aspect_CPU                  =>\n+                    Aspect_CPU                =>\n                   declare\n                      Pname : Name_Id;\n+\n                   begin\n                      if A_Id = Aspect_Priority then\n                         Pname := Name_Priority;\n@@ -1505,15 +1506,14 @@ package body Sem_Ch13 is\n                      when Aspect_Priority           |\n                           Aspect_Interrupt_Priority |\n                           Aspect_Dispatching_Domain |\n-                          Aspect_CPU                  =>\n+                          Aspect_CPU                =>\n                         declare\n                            T : Node_Id; -- the type declaration\n                            L : List_Id; -- list of decls of task/protected\n \n                         begin\n                            if Nkind (N) = N_Object_Declaration then\n                               T := Parent (Etype (Defining_Identifier (N)));\n-\n                            else\n                               T := N;\n                            end if;"}, {"sha": "e84d8f5c0d546c8669a188648ede9565120bcebf", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -8900,7 +8900,6 @@ package body Sem_Ch6 is\n                elsif not Nkind_In (Parent (T), N_Access_Function_Definition,\n                                                N_Access_Procedure_Definition)\n                then\n-\n                   --  AI05-0151: Tagged incomplete types are allowed in all\n                   --  formal parts. Untagged incomplete types are not allowed\n                   --  in bodies.\n@@ -8935,6 +8934,14 @@ package body Sem_Ch6 is\n                   Parameter_Type (Param_Spec), Formal_Type);\n             end if;\n \n+            --  Ada 2012 (AI-142): Handle aliased parameters\n+\n+            if Ada_Version >= Ada_2012\n+              and then Aliased_Present (Param_Spec)\n+            then\n+               Set_Is_Aliased (Formal);\n+            end if;\n+\n             --  Ada 2005 (AI-231): Create and decorate an internal subtype\n             --  declaration corresponding to the null-excluding type of the\n             --  formal in the enclosing scope. Finally, replace the parameter\n@@ -9005,6 +9012,8 @@ package body Sem_Ch6 is\n \n          Set_Etype (Formal, Formal_Type);\n \n+         --  Deal with default expression if present\n+\n          Default := Expression (Param_Spec);\n \n          if Present (Default) then\n@@ -9118,6 +9127,12 @@ package body Sem_Ch6 is\n             Num_Out_Params := Num_Out_Params + 1;\n          end if;\n \n+         --  Force call by reference if aliased\n+\n+         if Is_Aliased (Formal) then\n+            Set_Mechanism (Formal, By_Reference);\n+         end if;\n+\n          Next (Param_Spec);\n       end loop;\n \n@@ -9579,8 +9594,7 @@ package body Sem_Ch6 is\n          if Ekind (Designator) /= E_Procedure then\n             declare\n                Rent : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => Name_uResult);\n+                        Make_Defining_Identifier (Loc, Name_uResult);\n                Ftyp : constant Entity_Id := Etype (Designator);\n \n             begin"}, {"sha": "67baab977cd180ca0cd8d125aedb887cd7d04888", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -206,7 +206,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Definition\n-        or else NT (N).Nkind = N_Object_Declaration);\n+        or else NT (N).Nkind = N_Object_Declaration\n+        or else NT (N).Nkind = N_Parameter_Specification);\n       return Flag4 (N);\n    end Aliased_Present;\n \n@@ -3265,7 +3266,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Definition\n-        or else NT (N).Nkind = N_Object_Declaration);\n+        or else NT (N).Nkind = N_Object_Declaration\n+        or else NT (N).Nkind = N_Parameter_Specification);\n       Set_Flag4 (N, Val);\n    end Set_Aliased_Present;\n "}, {"sha": "af6fab23362da033d6fc4b6bdc0e5d269e5f7ae1", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fecbd77922c9772bb2823e111991349e0657241a/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=fecbd77922c9772bb2823e111991349e0657241a", "patch": "@@ -2322,7 +2322,7 @@ package Sinfo is\n       --  N_Object_Declaration\n       --  Sloc points to first identifier\n       --  Defining_Identifier (Node1)\n-      --  Aliased_Present (Flag4) set if ALIASED appears\n+      --  Aliased_Present (Flag4)\n       --  Constant_Present (Flag17) set if CONSTANT appears\n       --  Null_Exclusion_Present (Flag11)\n       --  Object_Definition (Node4) subtype indic./array type def./access def.\n@@ -4514,8 +4514,8 @@ package Sinfo is\n       ----------------------------------\n \n       --  PARAMETER_SPECIFICATION ::=\n-      --    DEFINING_IDENTIFIER_LIST : MODE [NULL_EXCLUSION] SUBTYPE_MARK\n-      --      [:= DEFAULT_EXPRESSION]\n+      --    DEFINING_IDENTIFIER_LIST : [ALIASED] MODE [NULL_EXCLUSION]\n+      --      SUBTYPE_MARK [:= DEFAULT_EXPRESSION]\n       --  | DEFINING_IDENTIFIER_LIST : ACCESS_DEFINITION\n       --      [:= DEFAULT_EXPRESSION]\n \n@@ -4527,9 +4527,12 @@ package Sinfo is\n       --  Prev_Ids flags to preserve the original source form as described\n       --  in the section on \"Handling of Defining Identifier Lists\".\n \n+      --  ALIASED can only be present in Ada 2012 mode\n+\n       --  N_Parameter_Specification\n       --  Sloc points to first identifier\n       --  Defining_Identifier (Node1)\n+      --  Aliased_Present (Flag4)\n       --  In_Present (Flag15)\n       --  Out_Present (Flag17)\n       --  Null_Exclusion_Present (Flag11)"}]}