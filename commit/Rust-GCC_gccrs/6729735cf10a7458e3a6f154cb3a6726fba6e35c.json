{"sha": "6729735cf10a7458e3a6f154cb3a6726fba6e35c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyOTczNWNmMTBhNzQ1OGUzYTZmMTU0Y2IzYTY3MjZmYmE2ZTM1Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-15T02:10:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-15T02:10:42Z"}, "message": "regen\n\nFrom-SVN: r19770", "tree": {"sha": "c3218cd1a44682be81ba9ea7bd2468be90bddd6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3218cd1a44682be81ba9ea7bd2468be90bddd6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6729735cf10a7458e3a6f154cb3a6726fba6e35c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6729735cf10a7458e3a6f154cb3a6726fba6e35c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6729735cf10a7458e3a6f154cb3a6726fba6e35c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6729735cf10a7458e3a6f154cb3a6726fba6e35c/comments", "author": null, "committer": null, "parents": [{"sha": "8f9661ddd630a515ca1fa149e52d532608cabd13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9661ddd630a515ca1fa149e52d532608cabd13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9661ddd630a515ca1fa149e52d532608cabd13"}], "stats": {"total": 226, "additions": 115, "deletions": 111}, "files": [{"sha": "517e8276a3988ec0c84281cec0e1a31536794493", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 115, "deletions": 111, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6729735cf10a7458e3a6f154cb3a6726fba6e35c/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6729735cf10a7458e3a6f154cb3a6726fba6e35c/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=6729735cf10a7458e3a6f154cb3a6726fba6e35c", "patch": "@@ -693,18 +693,18 @@ static const short yyrline[] = { 0,\n   3127,  3129,  3135,  3137,  3138,  3140,  3145,  3147,  3149,  3151,\n   3153,  3156,  3157,  3159,  3162,  3163,  3166,  3166,  3169,  3169,\n   3172,  3172,  3174,  3176,  3178,  3180,  3186,  3192,  3195,  3198,\n-  3204,  3206,  3208,  3212,  3214,  3217,  3224,  3227,  3235,  3239,\n-  3241,  3244,  3246,  3249,  3253,  3255,  3258,  3260,  3263,  3280,\n-  3286,  3294,  3296,  3298,  3302,  3305,  3306,  3314,  3318,  3322,\n-  3325,  3326,  3332,  3335,  3338,  3340,  3344,  3349,  3352,  3362,\n-  3367,  3368,  3375,  3378,  3381,  3383,  3386,  3388,  3398,  3412,\n-  3416,  3419,  3421,  3425,  3429,  3432,  3435,  3437,  3441,  3443,\n-  3450,  3457,  3460,  3463,  3467,  3471,  3477,  3481,  3486,  3488,\n-  3491,  3496,  3502,  3513,  3516,  3518,  3522,  3527,  3529,  3536,\n-  3539,  3541,  3543,  3549,  3554,  3557,  3559,  3561,  3563,  3565,\n-  3567,  3569,  3571,  3573,  3575,  3577,  3579,  3581,  3583,  3585,\n-  3587,  3589,  3591,  3593,  3595,  3597,  3599,  3601,  3603,  3605,\n-  3607,  3609,  3611,  3613,  3615,  3617,  3619,  3622,  3624\n+  3204,  3206,  3208,  3212,  3214,  3217,  3224,  3230,  3239,  3243,\n+  3245,  3248,  3250,  3253,  3257,  3259,  3262,  3264,  3267,  3284,\n+  3290,  3298,  3300,  3302,  3306,  3309,  3310,  3318,  3322,  3326,\n+  3329,  3330,  3336,  3339,  3342,  3344,  3348,  3353,  3356,  3366,\n+  3371,  3372,  3379,  3382,  3385,  3387,  3390,  3392,  3402,  3416,\n+  3420,  3423,  3425,  3429,  3433,  3436,  3439,  3441,  3445,  3447,\n+  3454,  3461,  3464,  3467,  3471,  3475,  3481,  3485,  3490,  3492,\n+  3495,  3500,  3506,  3517,  3520,  3522,  3526,  3531,  3533,  3540,\n+  3543,  3545,  3547,  3553,  3558,  3561,  3563,  3565,  3567,  3569,\n+  3571,  3573,  3575,  3577,  3579,  3581,  3583,  3585,  3587,  3589,\n+  3591,  3593,  3595,  3597,  3599,  3601,  3603,  3605,  3607,  3609,\n+  3611,  3613,  3615,  3617,  3619,  3621,  3623,  3626,  3628\n };\n #endif\n \n@@ -7115,53 +7115,57 @@ case 726:\n     break;}\n case 727:\n #line 3225 \"parse.y\"\n-{ expand_start_all_catch (); ;\n+{ \n+                  expand_start_all_catch (); \n+                  expand_start_catch (NULL);\n+                ;\n     break;}\n case 728:\n-#line 3227 \"parse.y\"\n+#line 3230 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n \t\t  expand_end_all_catch ();\n+                  expand_end_catch ();\n \t\t  finish_function (lineno, (int)yyvsp[-3].itype, nested);\n \t\t;\n     break;}\n case 729:\n-#line 3237 \"parse.y\"\n+#line 3241 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 730:\n-#line 3239 \"parse.y\"\n+#line 3243 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 731:\n-#line 3241 \"parse.y\"\n+#line 3245 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 734:\n-#line 3251 \"parse.y\"\n+#line 3255 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 735:\n-#line 3253 \"parse.y\"\n+#line 3257 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 736:\n-#line 3255 \"parse.y\"\n+#line 3259 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 739:\n-#line 3265 \"parse.y\"\n+#line 3269 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 740:\n-#line 3281 \"parse.y\"\n+#line 3285 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 741:\n-#line 3288 \"parse.y\"\n+#line 3292 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7170,98 +7174,98 @@ case 741:\n \t\t;\n     break;}\n case 742:\n-#line 3295 \"parse.y\"\n+#line 3299 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 743:\n-#line 3297 \"parse.y\"\n+#line 3301 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 744:\n-#line 3299 \"parse.y\"\n+#line 3303 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 745:\n-#line 3304 \"parse.y\"\n+#line 3308 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 747:\n-#line 3307 \"parse.y\"\n+#line 3311 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 748:\n-#line 3316 \"parse.y\"\n+#line 3320 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 749:\n-#line 3319 \"parse.y\"\n+#line 3323 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 750:\n-#line 3324 \"parse.y\"\n+#line 3328 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 752:\n-#line 3327 \"parse.y\"\n+#line 3331 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 753:\n-#line 3334 \"parse.y\"\n+#line 3338 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 756:\n-#line 3341 \"parse.y\"\n+#line 3345 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 757:\n-#line 3346 \"parse.y\"\n+#line 3350 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 758:\n-#line 3351 \"parse.y\"\n+#line 3355 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 759:\n-#line 3353 \"parse.y\"\n+#line 3357 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 760:\n-#line 3364 \"parse.y\"\n+#line 3368 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 762:\n-#line 3369 \"parse.y\"\n+#line 3373 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 763:\n-#line 3377 \"parse.y\"\n+#line 3381 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 764:\n-#line 3379 \"parse.y\"\n+#line 3383 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 765:\n-#line 3382 \"parse.y\"\n+#line 3386 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 766:\n-#line 3384 \"parse.y\"\n+#line 3388 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 767:\n-#line 3387 \"parse.y\"\n+#line 3391 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 768:\n-#line 3389 \"parse.y\"\n+#line 3393 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7273,7 +7277,7 @@ case 768:\n \t\t;\n     break;}\n case 769:\n-#line 3399 \"parse.y\"\n+#line 3403 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7286,98 +7290,98 @@ case 769:\n \t\t;\n     break;}\n case 770:\n-#line 3414 \"parse.y\"\n+#line 3418 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 771:\n-#line 3416 \"parse.y\"\n+#line 3420 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 774:\n-#line 3427 \"parse.y\"\n+#line 3431 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 775:\n-#line 3430 \"parse.y\"\n+#line 3434 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 776:\n-#line 3433 \"parse.y\"\n+#line 3437 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 777:\n-#line 3436 \"parse.y\"\n+#line 3440 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 778:\n-#line 3438 \"parse.y\"\n+#line 3442 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 780:\n-#line 3444 \"parse.y\"\n+#line 3448 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 781:\n-#line 3454 \"parse.y\"\n+#line 3458 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 782:\n-#line 3458 \"parse.y\"\n+#line 3462 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 783:\n-#line 3461 \"parse.y\"\n+#line 3465 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 784:\n-#line 3464 \"parse.y\"\n+#line 3468 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 785:\n-#line 3468 \"parse.y\"\n+#line 3472 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 786:\n-#line 3472 \"parse.y\"\n+#line 3476 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 787:\n-#line 3479 \"parse.y\"\n+#line 3483 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 788:\n-#line 3482 \"parse.y\"\n+#line 3486 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 791:\n-#line 3493 \"parse.y\"\n+#line 3497 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 792:\n-#line 3498 \"parse.y\"\n+#line 3502 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 793:\n-#line 3503 \"parse.y\"\n+#line 3507 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7388,188 +7392,188 @@ case 793:\n \t\t;\n     break;}\n case 794:\n-#line 3515 \"parse.y\"\n+#line 3519 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 795:\n-#line 3517 \"parse.y\"\n+#line 3521 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 796:\n-#line 3519 \"parse.y\"\n+#line 3523 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 797:\n-#line 3524 \"parse.y\"\n+#line 3528 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 799:\n-#line 3530 \"parse.y\"\n+#line 3534 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 800:\n-#line 3538 \"parse.y\"\n+#line 3542 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 801:\n-#line 3540 \"parse.y\"\n+#line 3544 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 802:\n-#line 3542 \"parse.y\"\n+#line 3546 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 803:\n-#line 3544 \"parse.y\"\n+#line 3548 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 804:\n-#line 3551 \"parse.y\"\n+#line 3555 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 805:\n-#line 3556 \"parse.y\"\n+#line 3560 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 806:\n-#line 3558 \"parse.y\"\n+#line 3562 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 807:\n-#line 3560 \"parse.y\"\n+#line 3564 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 808:\n-#line 3562 \"parse.y\"\n+#line 3566 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 809:\n-#line 3564 \"parse.y\"\n+#line 3568 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 810:\n-#line 3566 \"parse.y\"\n+#line 3570 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 811:\n-#line 3568 \"parse.y\"\n+#line 3572 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 812:\n-#line 3570 \"parse.y\"\n+#line 3574 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 813:\n-#line 3572 \"parse.y\"\n+#line 3576 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 814:\n-#line 3574 \"parse.y\"\n+#line 3578 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 815:\n-#line 3576 \"parse.y\"\n+#line 3580 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 816:\n-#line 3578 \"parse.y\"\n+#line 3582 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 817:\n-#line 3580 \"parse.y\"\n+#line 3584 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 818:\n-#line 3582 \"parse.y\"\n+#line 3586 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 819:\n-#line 3584 \"parse.y\"\n+#line 3588 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 820:\n-#line 3586 \"parse.y\"\n+#line 3590 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 821:\n-#line 3588 \"parse.y\"\n+#line 3592 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 822:\n-#line 3590 \"parse.y\"\n+#line 3594 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 823:\n-#line 3592 \"parse.y\"\n+#line 3596 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 824:\n-#line 3594 \"parse.y\"\n+#line 3598 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 825:\n-#line 3596 \"parse.y\"\n+#line 3600 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 826:\n-#line 3598 \"parse.y\"\n+#line 3602 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 827:\n-#line 3600 \"parse.y\"\n+#line 3604 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 828:\n-#line 3602 \"parse.y\"\n+#line 3606 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 829:\n-#line 3604 \"parse.y\"\n+#line 3608 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 830:\n-#line 3606 \"parse.y\"\n+#line 3610 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 831:\n-#line 3608 \"parse.y\"\n+#line 3612 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 832:\n-#line 3610 \"parse.y\"\n+#line 3614 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 833:\n-#line 3612 \"parse.y\"\n+#line 3616 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 834:\n-#line 3614 \"parse.y\"\n+#line 3618 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 835:\n-#line 3616 \"parse.y\"\n+#line 3620 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 836:\n-#line 3618 \"parse.y\"\n+#line 3622 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 837:\n-#line 3620 \"parse.y\"\n+#line 3624 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 838:\n-#line 3623 \"parse.y\"\n+#line 3627 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 839:\n-#line 3625 \"parse.y\"\n+#line 3629 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -7770,7 +7774,7 @@ case 839:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3628 \"parse.y\"\n+#line 3632 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}]}