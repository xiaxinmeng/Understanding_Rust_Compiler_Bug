{"sha": "36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkNzEzNmU5OTgzYTBjOGYyZDA3Yjg0YTBiOGNiMTZmOGU5ZTlkYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-27T17:29:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-27T17:29:57Z"}, "message": "final.c (final_scan_insn): Don't enter APP_ON mode for empty asm strings.\n\n        * final.c (final_scan_insn): Don't enter APP_ON mode for\n        empty asm strings.\n\nFrom-SVN: r45199", "tree": {"sha": "f5872d06ef1b26e3dc869d2a342aced1809550c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5872d06ef1b26e3dc869d2a342aced1809550c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db/comments", "author": null, "committer": null, "parents": [{"sha": "225b9cb9f70d310e06ca3fc06f3d2c7a2f667b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225b9cb9f70d310e06ca3fc06f3d2c7a2f667b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225b9cb9f70d310e06ca3fc06f3d2c7a2f667b80"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "6b90b3eb84fd0d622e3e8ccb1e2876bc701f436b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "patch": "@@ -1,5 +1,8 @@\n 2001-08-27  Richard Henderson  <rth@redhat.com>\n \n+\t* final.c (final_scan_insn): Don't enter APP_ON mode for\n+\tempty asm strings.\n+\n \t* dwarf2asm.c (dw2_asm_output_encoded_addr_rtx): Use proper\n \talignment for assemble_integer for DW_EH_PE_aligned.\n \t* except.c (output_function_exception_table): Likewise."}, {"sha": "ec29a45952d77b3dd462d7deb7e68b9a3847f94d", "filename": "gcc/final.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=36d7136e9983a0c8f2d07b84a0b8cb16f8e9e9db", "patch": "@@ -2481,16 +2481,22 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \n \tif (GET_CODE (body) == ASM_INPUT)\n \t  {\n+\t    const char *string = XSTR (body, 0);\n+\n \t    /* There's no telling what that did to the condition codes.  */\n \t    CC_STATUS_INIT;\n \t    if (prescan > 0)\n \t      break;\n-\t    if (! app_on)\n+\n+\t    if (string[0])\n \t      {\n-\t\tfputs (ASM_APP_ON, file);\n-\t\tapp_on = 1;\n+\t\tif (! app_on)\n+\t\t  {\n+\t\t    fputs (ASM_APP_ON, file);\n+\t\t    app_on = 1;\n+\t\t  }\n+\t\tfprintf (asm_out_file, \"\\t%s\\n\", string);\n \t      }\n-\t    fprintf (asm_out_file, \"\\t%s\\n\", XSTR (body, 0));\n \t    break;\n \t  }\n \n@@ -2506,20 +2512,23 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t    if (prescan > 0)\n \t      break;\n \n-\t    if (! app_on)\n-\t      {\n-\t\tfputs (ASM_APP_ON, file);\n-\t\tapp_on = 1;\n-\t      }\n-\n \t    /* Get out the operand values.  */\n \t    string = decode_asm_operands (body, ops, NULL, NULL, NULL);\n \t    /* Inhibit aborts on what would otherwise be compiler bugs.  */\n \t    insn_noperands = noperands;\n \t    this_is_asm_operands = insn;\n \n \t    /* Output the insn using them.  */\n-\t    output_asm_insn (string, ops);\n+\t    if (string[0])\n+\t      {\n+\t\tif (! app_on)\n+\t\t  {\n+\t\t    fputs (ASM_APP_ON, file);\n+\t\t    app_on = 1;\n+\t\t  }\n+\t        output_asm_insn (string, ops);\n+\t      }\n+\n \t    this_is_asm_operands = 0;\n \t    break;\n \t  }"}]}