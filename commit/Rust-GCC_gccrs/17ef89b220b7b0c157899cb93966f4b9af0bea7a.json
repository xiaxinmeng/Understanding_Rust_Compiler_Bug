{"sha": "17ef89b220b7b0c157899cb93966f4b9af0bea7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdlZjg5YjIyMGI3YjBjMTU3ODk5Y2I5Mzk2NmY0YjlhZjBiZWE3YQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-05T21:01:47Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-05T21:01:47Z"}, "message": "gdbhooks.py: add \"break-on-pass\" command\n\ngcc/\n2014-08-05  David Malcolm  <dmalcolm@redhat.com>\n\n        * gdbhooks.py (find_gcc_source_dir): New helper function.\n        (class PassNames): New class, locating and parsing passes.def.\n        (class BreakOnPass): New command \"break-on-pass\".\n\nFrom-SVN: r213646", "tree": {"sha": "c61b33f7b87037cc4ec306e013ce7125191d6d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c61b33f7b87037cc4ec306e013ce7125191d6d58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17ef89b220b7b0c157899cb93966f4b9af0bea7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ef89b220b7b0c157899cb93966f4b9af0bea7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17ef89b220b7b0c157899cb93966f4b9af0bea7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ef89b220b7b0c157899cb93966f4b9af0bea7a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ef6945c9cbb0ab43f3b04e97f0a2285494a9c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef6945c9cbb0ab43f3b04e97f0a2285494a9c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ef6945c9cbb0ab43f3b04e97f0a2285494a9c87"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "dc7d6a3bc7a624e78a2cca2d1c432851897bc33e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17ef89b220b7b0c157899cb93966f4b9af0bea7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17ef89b220b7b0c157899cb93966f4b9af0bea7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17ef89b220b7b0c157899cb93966f4b9af0bea7a", "patch": "@@ -1,3 +1,9 @@\n+2014-08-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+        * gdbhooks.py (find_gcc_source_dir): New helper function.\n+        (class PassNames): New class, locating and parsing passes.def.\n+        (class BreakOnPass): New command \"break-on-pass\".\n+\n 2014-08-05  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* tree-ssa.c (redirect_edge_var_map_dup): insert newe before"}, {"sha": "0af8ecd0056e619563ffd20bc7d7ca1b5df8f16e", "filename": "gcc/gdbhooks.py", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17ef89b220b7b0c157899cb93966f4b9af0bea7a/gcc%2Fgdbhooks.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17ef89b220b7b0c157899cb93966f4b9af0bea7a/gcc%2Fgdbhooks.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbhooks.py?ref=17ef89b220b7b0c157899cb93966f4b9af0bea7a", "patch": "@@ -130,6 +130,7 @@\n   (gdb) p bb->preds->m_vecdata[1]\n   $21 = <edge 0x7ffff044d3b8 (4 -> 5)>\n \"\"\"\n+import os.path\n import re\n \n import gdb\n@@ -476,4 +477,70 @@ def build_pretty_printer():\n     gdb.current_objfile(),\n     build_pretty_printer())\n \n+def find_gcc_source_dir():\n+    # Use location of global \"g\" to locate the source tree\n+    sym_g = gdb.lookup_global_symbol('g')\n+    path = sym_g.symtab.filename # e.g. '../../src/gcc/context.h'\n+    srcdir = os.path.split(path)[0] # e.g. '../../src/gcc'\n+    return srcdir\n+\n+class PassNames:\n+    \"\"\"Parse passes.def, gathering a list of pass class names\"\"\"\n+    def __init__(self):\n+        srcdir = find_gcc_source_dir()\n+        self.names = []\n+        with open(os.path.join(srcdir, 'passes.def')) as f:\n+            for line in f:\n+                m = re.match('\\s*NEXT_PASS \\((.+)\\);', line)\n+                if m:\n+                    self.names.append(m.group(1))\n+\n+class BreakOnPass(gdb.Command):\n+    \"\"\"\n+    A custom command for putting breakpoints on the execute hook of passes.\n+    This is largely a workaround for issues with tab-completion in gdb when\n+    setting breakpoints on methods on classes within anonymous namespaces.\n+\n+    Example of use: putting a breakpoint on \"final\"\n+      (gdb) break-on-pass\n+    Press <TAB>; it autocompletes to \"pass_\":\n+      (gdb) break-on-pass pass_\n+    Press <TAB>:\n+      Display all 219 possibilities? (y or n)\n+    Press \"n\"; then type \"f\":\n+      (gdb) break-on-pass pass_f\n+    Press <TAB> to autocomplete to pass classnames beginning with \"pass_f\":\n+      pass_fast_rtl_dce              pass_fold_builtins\n+      pass_feedback_split_functions  pass_forwprop\n+      pass_final                     pass_fre\n+      pass_fixup_cfg                 pass_free_cfg\n+    Type \"in<TAB>\" to complete to \"pass_final\":\n+      (gdb) break-on-pass pass_final\n+    ...and hit <RETURN>:\n+      Breakpoint 6 at 0x8396ba: file ../../src/gcc/final.c, line 4526.\n+    ...and we have a breakpoint set; continue execution:\n+      (gdb) cont\n+      Continuing.\n+      Breakpoint 6, (anonymous namespace)::pass_final::execute (this=0x17fb990) at ../../src/gcc/final.c:4526\n+      4526\t  virtual unsigned int execute (function *) { return rest_of_handle_final (); }\n+    \"\"\"\n+    def __init__(self):\n+        gdb.Command.__init__(self, 'break-on-pass', gdb.COMMAND_BREAKPOINTS)\n+        self.pass_names = None\n+\n+    def complete(self, text, word):\n+        # Lazily load pass names:\n+        if not self.pass_names:\n+            self.pass_names = PassNames()\n+\n+        return [name\n+                for name in sorted(self.pass_names.names)\n+                if name.startswith(text)]\n+\n+    def invoke(self, arg, from_tty):\n+        sym = '(anonymous namespace)::%s::execute' % arg\n+        breakpoint = gdb.Breakpoint(sym)\n+\n+BreakOnPass()\n+\n print('Successfully loaded GDB hooks for GCC')"}]}