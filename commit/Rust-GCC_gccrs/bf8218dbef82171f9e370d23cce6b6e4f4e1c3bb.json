{"sha": "bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4MjE4ZGJlZjgyMTcxZjllMzcwZDIzY2NlNmI2ZTRmNGUxYzNiYg==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2018-07-11T19:06:41Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2018-07-11T19:06:41Z"}, "message": "Add documentation for \"mode\" attribute for types.\n\n\t* doc/extend.texi (Common Variable Attributes): Move \"mode\" into\n\talphabetical order.\n\t(Common Type Attributes): Add \"mode\" attribute.\n\nFrom-SVN: r262561", "tree": {"sha": "0390ed0c6a67b3faf5824a097b2034f86e8b1b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0390ed0c6a67b3faf5824a097b2034f86e8b1b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb/comments", "author": null, "committer": null, "parents": [{"sha": "69e02b35555e214a8f0c4c026d15b8c67584e208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e02b35555e214a8f0c4c026d15b8c67584e208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e02b35555e214a8f0c4c026d15b8c67584e208"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "cebe2bc6478e60f7eab8c20a887e41e5e3a8b560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "patch": "@@ -1,3 +1,9 @@\n+2018-07-11  Paul Koning  <ni1d@arrl.net>\n+\n+\t* doc/extend.texi (Common Variable Attributes): Move \"mode\" into\n+\talphabetical order.\n+\t(Common Type Attributes): Add \"mode\" attribute.\n+\n 2018-07-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-streamer-out.c (DFS::DFS_write_tree_body): Do not"}, {"sha": "954e8a1dd94a634d2cd54b94aa84f857f23c6951", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=bf8218dbef82171f9e370d23cce6b6e4f4e1c3bb", "patch": "@@ -6123,6 +6123,19 @@ types (@pxref{Common Function Attributes},\n The message attached to the attribute is affected by the setting of\n the @option{-fmessage-length} option.\n \n+@item mode (@var{mode})\n+@cindex @code{mode} variable attribute\n+This attribute specifies the data type for the declaration---whichever\n+type corresponds to the mode @var{mode}.  This in effect lets you\n+request an integer or floating-point type according to its width.\n+\n+@xref{Machine Modes,,, gccint, GNU Compiler Collection (GCC) Internals},\n+for a list of the possible keywords for @var{mode}.\n+You may also specify a mode of @code{byte} or @code{__byte__} to\n+indicate the mode corresponding to a one-byte integer, @code{word} or\n+@code{__word__} for the mode of a one-word integer, and @code{pointer}\n+or @code{__pointer__} for the mode used to represent pointers.\n+\n @item nonstring\n @cindex @code{nonstring} variable attribute\n The @code{nonstring} variable attribute specifies that an object or member\n@@ -6158,19 +6171,6 @@ int f (struct Data *pd, const char *s)\n @}\n @end smallexample\n \n-@item mode (@var{mode})\n-@cindex @code{mode} variable attribute\n-This attribute specifies the data type for the declaration---whichever\n-type corresponds to the mode @var{mode}.  This in effect lets you\n-request an integer or floating-point type according to its width.\n-\n-@xref{Machine Modes,,, gccint, GNU Compiler Collection (GCC) Internals},\n-for a list of the possible keywords for @var{mode}.\n-You may also specify a mode of @code{byte} or @code{__byte__} to\n-indicate the mode corresponding to a one-byte integer, @code{word} or\n-@code{__word__} for the mode of a one-word integer, and @code{pointer}\n-or @code{__pointer__} for the mode used to represent pointers.\n-\n @item packed\n @cindex @code{packed} variable attribute\n The @code{packed} attribute specifies that a variable or structure field\n@@ -7112,6 +7112,19 @@ declaration, the above program would abort when compiled with\n @option{-fstrict-aliasing}, which is on by default at @option{-O2} or\n above.\n \n+@item mode (@var{mode})\n+@cindex @code{mode} type attribute\n+This attribute specifies the data type for the declaration---whichever\n+type corresponds to the mode @var{mode}.  This in effect lets you\n+request an integer or floating-point type according to its width.\n+\n+@xref{Machine Modes,,, gccint, GNU Compiler Collection (GCC) Internals},\n+for a list of the possible keywords for @var{mode}.\n+You may also specify a mode of @code{byte} or @code{__byte__} to\n+indicate the mode corresponding to a one-byte integer, @code{word} or\n+@code{__word__} for the mode of a one-word integer, and @code{pointer}\n+or @code{__pointer__} for the mode used to represent pointers.\n+\n @item packed\n @cindex @code{packed} type attribute\n This attribute, attached to @code{struct} or @code{union} type"}]}