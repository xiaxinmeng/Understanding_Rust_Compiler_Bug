{"sha": "c907e684899b80f605c6f318ac47d825cefd5e04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkwN2U2ODQ4OTliODBmNjA1YzZmMzE4YWM0N2Q4MjVjZWZkNWUwNA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-12-07T07:56:44Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-12-07T07:56:44Z"}, "message": "c-common.c (warn_format_security): New variable.\n\n\t* c-common.c (warn_format_security): New variable.\n\t(check_format_info): Warn about non-literal formats with no format\n\targuments if either -Wformat-nonliteral or -Wformat-security is\n\tspecified.\n\t(set_Wformat): Set warn_format_security for settings other than 1.\n\t* c-common.h (warn_format_security): Declare.\n\t* c-decl.c (c_decode_option): Decode -Wformat-security and\n\t-Wno-format-security.\n\t* invoke.texi: Document -Wformat-security.\n\t* toplev.c (documented_lang_options): Include -Wformat-security\n\tand -Wno-format-security.\n\ncp:\n\t* decl2.c (lang_decode_option): Handle -Wformat-security.\n\ntestsuite:\n\t* format-sec-1.c: New test.\n\nFrom-SVN: r38106", "tree": {"sha": "b5375290ebf0a5a6f82ddbfa46e51e6bde6dbb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5375290ebf0a5a6f82ddbfa46e51e6bde6dbb84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c907e684899b80f605c6f318ac47d825cefd5e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c907e684899b80f605c6f318ac47d825cefd5e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c907e684899b80f605c6f318ac47d825cefd5e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c907e684899b80f605c6f318ac47d825cefd5e04/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c248308f49a5410b9e69330a924f264707625d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c248308f49a5410b9e69330a924f264707625d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c248308f49a5410b9e69330a924f264707625d7"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "cdd755854b671f5cfc0629c2ae39b3be95e3bbe3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -1,3 +1,17 @@\n+2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.c (warn_format_security): New variable.\n+\t(check_format_info): Warn about non-literal formats with no format\n+\targuments if either -Wformat-nonliteral or -Wformat-security is\n+\tspecified.\n+\t(set_Wformat): Set warn_format_security for settings other than 1.\n+\t* c-common.h (warn_format_security): Declare.\n+\t* c-decl.c (c_decode_option): Decode -Wformat-security and\n+\t-Wno-format-security.\n+\t* invoke.texi: Document -Wformat-security.\n+\t* toplev.c (documented_lang_options): Include -Wformat-security\n+\tand -Wno-format-security.\n+\n 2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (check_format_info): Warn for non-constant format"}, {"sha": "2baba027a1f23158f9cb26d68b9ee1665a4a0e5b", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -193,6 +193,10 @@ int warn_format_extra_args;\n \n int warn_format_nonliteral;\n \n+/* Warn about possible security problems with calls to format functions.  */\n+\n+int warn_format_security;\n+\n /* Nonzero means warn about possible violations of sequence point rules.  */\n \n int warn_sequence_point;\n@@ -2363,7 +2367,7 @@ check_format_info (status, info, params)\n \t      params = TREE_CHAIN (params);\n \t      ++arg_num;\n \t    }\n-\t  if (params == 0 && warn_format_nonliteral)\n+\t  if (params == 0 && (warn_format_nonliteral || warn_format_security))\n \t    status_warning (status, \"format not a string literal and no format arguments\");\n \t  else if (warn_format_nonliteral)\n \t    status_warning (status, \"format not a string literal, argument types not checked\");\n@@ -3401,7 +3405,10 @@ set_Wformat (setting)\n   warn_format_y2k = setting;\n   warn_format_extra_args = setting;\n   if (setting != 1)\n-    warn_format_nonliteral = setting;\n+    {\n+      warn_format_nonliteral = setting;\n+      warn_format_security = setting;\n+    }\n }\n \f\n /* Print a warning if a constant expression had overflow in folding."}, {"sha": "437d95dcc3c13e2c79f5ae91eba82bcc2d87a94b", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -361,6 +361,10 @@ extern int warn_format_extra_args;\n \n extern int warn_format_nonliteral;\n \n+/* Warn about possible security problems with calls to format functions.  */\n+\n+extern int warn_format_security;\n+\n /* Warn about possible violations of sequence point rules.  */\n \n extern int warn_sequence_point;"}, {"sha": "4776cd693d0bce8136c6f30e122986181a915b9d", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -719,6 +719,10 @@ c_decode_option (argc, argv)\n     warn_format_nonliteral = 1;\n   else if (!strcmp (p, \"-Wno-format-nonliteral\"))\n     warn_format_nonliteral = 0;\n+  else if (!strcmp (p, \"-Wformat-security\"))\n+    warn_format_security = 1;\n+  else if (!strcmp (p, \"-Wno-format-security\"))\n+    warn_format_security = 0;\n   else if (!strcmp (p, \"-Wchar-subscripts\"))\n     warn_char_subscripts = 1;\n   else if (!strcmp (p, \"-Wno-char-subscripts\"))"}, {"sha": "9bd55899a61dbdb09aff98c5e7b67b006c87b8e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -1,3 +1,7 @@\n+2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* decl2.c (lang_decode_option): Handle -Wformat-security.\n+\n 2000-12-06  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* pt.c (verify_class_unification): New function."}, {"sha": "2d14ab54f0f3173e5293ccee99777a47ed19077c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -726,6 +726,8 @@ lang_decode_option (argc, argv)\n \twarn_format_extra_args = setting;\n       else if (!strcmp (p, \"format-nonliteral\"))\n \twarn_format_nonliteral = setting;\n+      else if (!strcmp (p, \"format-security\"))\n+\twarn_format_security = setting;\n       else if (!strcmp (p, \"missing-format-attribute\"))\n \twarn_missing_format_attribute = setting;\n       else if (!strcmp (p, \"conversion\"))"}, {"sha": "c9dc324ba851e39373664f4371459f8696186a7b", "filename": "gcc/invoke.texi", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -190,7 +190,7 @@ in the following sections.\n -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment\n -Wconversion  -Wdisabled-optimization -Werror\n -Wfloat-equal  -Wformat  -Wformat=2\n--Wformat-nonliteral\n+-Wformat-nonliteral -Wformat-security\n -Wid-clash-@var{len}  -Wimplicit -Wimplicit-int \n -Wimplicit-function-declaration\n -Werror-implicit-function-declaration\n@@ -1610,8 +1610,9 @@ Controlling C Dialect}.\n \n @samp{-Wformat} is included in @samp{-Wall}.  For more control over some\n aspects of format checking, the options @samp{-Wno-format-y2k},\n-@samp{-Wno-format-extra-args}, @samp{-Wformat-nonliteral} and\n-@samp{-Wformat=2} are available, but are not included in @samp{-Wall}.\n+@samp{-Wno-format-extra-args}, @samp{-Wformat-nonliteral},\n+@samp{-Wformat-security} and @samp{-Wformat=2} are available, but are\n+not included in @samp{-Wall}.\n \n @item -Wno-format-y2k\n If @samp{-Wformat} is specified, do not warn about @code{strftime}\n@@ -1627,10 +1628,21 @@ If @samp{-Wformat} is specified, also warn if the format string is not a\n string literal and so cannot be checked, unless the format function\n takes its format arguments as a @code{va_list}.\n \n+@item -Wformat-security\n+If @samp{-Wformat} is specified, also warn about uses of format\n+functions that represent possible security problems.  At present, this\n+warns about calls to @code{printf} and @code{scanf} functions where the\n+format string is not a string literal and there are no format arguments,\n+as in @code{printf (foo);}.  This may be a security hole if the format\n+string came from untrusted input and contains @samp{%n}.  (This is\n+currently a subset of what @samp{-Wformat-nonliteral} warns about, but\n+in future warnings may be added to @samp{-Wformat-security} that are not\n+included in @samp{-Wformat-nonliteral}.)\n+\n @item -Wformat=2\n Enable @samp{-Wformat} plus format checks not included in\n @samp{-Wformat}.  Currently equivalent to @samp{-Wformat\n--Wformat-nonliteral}.\n+-Wformat-nonliteral -Wformat-security}.\n \n @item -Wimplicit-int\n Warn when a declaration does not specify a type."}, {"sha": "0a2417cd7373d0ab4daf7249c7d76de0858071a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -1,3 +1,7 @@\n+2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* format-sec-1.c: New test.\n+\n 2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/format-nonlit-3.c: New test."}, {"sha": "5ca4905d1be477a93252e641788507396082984b", "filename": "gcc/testsuite/gcc.dg/format-sec-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-sec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-sec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-sec-1.c?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -0,0 +1,12 @@\n+/* Test for security warning when non-literal format has no arguments.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -Wformat -Wformat-security\" } */\n+\n+extern int printf (const char *, ...);\n+\n+void\n+foo (char *s)\n+{\n+  printf (s); /* { dg-warning \"no format arguments\" \"security warning\" } */\n+}"}, {"sha": "6407e8a2e94e6be24ffaed540e55e528c1621204", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c907e684899b80f605c6f318ac47d825cefd5e04/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c907e684899b80f605c6f318ac47d825cefd5e04", "patch": "@@ -1236,6 +1236,9 @@ documented_lang_options[] =\n     \"Don't warn about too many arguments to format functions\" },\n   { \"-Wformat-nonliteral\", \"Warn about non-string-literal format strings\" },\n   { \"-Wno-format-nonliteral\", \"\" },\n+  { \"-Wformat-security\",\n+    \"Warn about possible security problems with format functions\" },\n+  { \"-Wno-format-security\", \"\" },\n   { \"-Wimplicit-function-declaration\",\n     \"Warn about implicit function declarations\" },\n   { \"-Wno-implicit-function-declaration\", \"\" },"}]}