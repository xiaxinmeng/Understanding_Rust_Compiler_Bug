{"sha": "58b46683bd70c20c2543d60ca28af4dec4ec0443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiNDY2ODNiZDcwYzIwYzI1NDNkNjBjYTI4YWY0ZGVjNGVjMDQ0Mw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-11-17T14:46:04Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-11-17T14:46:04Z"}, "message": "combine: Don't split insns if half is unused (PR82621)\n\nIf we have a PARALLEL of two SETs, and one half is unused, we currently\nhappily split that into two instructions (although the unused one is\nuseless).  Worse, as PR82621 shows, combine will happily merge this\ninsn into I3 even if some intervening insn sets the same register\nagain, which is wrong.\n\nThis fixes it by not splitting PARALLELs with REG_UNUSED notes.  It\nall is handled fine by combine in that case: just the \"single set\nthat is unused\" case isn't handled properly.\n\nThis also results in better code: combine will now actually throw\naway the unused SET.  (It still won't do that in an I3).\n\n\n\tPR rtl-optimization/82621\n\t* combine.c (try_combine): Do not split PARALLELs of two SETs if the\n\tdest of one of those SETs is unused.\n\nFrom-SVN: r254874", "tree": {"sha": "790f4a75755e3d6b1e7d35f1096306ceaa0a535c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/790f4a75755e3d6b1e7d35f1096306ceaa0a535c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b46683bd70c20c2543d60ca28af4dec4ec0443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b46683bd70c20c2543d60ca28af4dec4ec0443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b46683bd70c20c2543d60ca28af4dec4ec0443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b46683bd70c20c2543d60ca28af4dec4ec0443/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "c0249e81aa5f841547a79feda9547bd5adacf99e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b46683bd70c20c2543d60ca28af4dec4ec0443/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b46683bd70c20c2543d60ca28af4dec4ec0443/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58b46683bd70c20c2543d60ca28af4dec4ec0443", "patch": "@@ -1,3 +1,9 @@\n+2017-11-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/82621\n+\t* combine.c (try_combine): Do not split PARALLELs of two SETs if the\n+\tdest of one of those SETs is unused.\n+\n 2017-11-17  Richard Biener  <rguenther@suse.de>\n \n \tPR fortran/83017"}, {"sha": "404cf33e9d066cc2271fb58be19781052c11ea19", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b46683bd70c20c2543d60ca28af4dec4ec0443/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b46683bd70c20c2543d60ca28af4dec4ec0443/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=58b46683bd70c20c2543d60ca28af4dec4ec0443", "patch": "@@ -3010,7 +3010,8 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n       && is_parallel_of_n_reg_sets (PATTERN (i2), 2)\n       && can_split_parallel_of_n_reg_sets (i2, 2)\n       && !reg_used_between_p (SET_DEST (XVECEXP (PATTERN (i2), 0, 0)), i2, i3)\n-      && !reg_used_between_p (SET_DEST (XVECEXP (PATTERN (i2), 0, 1)), i2, i3))\n+      && !reg_used_between_p (SET_DEST (XVECEXP (PATTERN (i2), 0, 1)), i2, i3)\n+      && !find_reg_note (i2, REG_UNUSED, 0))\n     {\n       /* If there is no I1, there is no I0 either.  */\n       i0 = i1;"}]}