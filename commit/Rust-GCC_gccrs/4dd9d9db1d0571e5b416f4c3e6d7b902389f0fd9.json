{"sha": "4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkOWQ5ZGIxZDA1NzFlNWI0MTZmNGMzZTZkN2I5MDIzODlmMGZkOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-11-13T17:43:57Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-11-13T17:43:57Z"}, "message": "documentation.html: First pass at unified table of contents.\n\n\n2007-11-13  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* docs/html/documentation.html: First pass at unified table of contents.\n\t* docs/html/abi.html: Move...\n\t* docs/html/17_intro/abi.html: ...here.\n\t* docs/html/17_intro/porting-howto.html: Update, edit, put\n\tresulting pieces into...\n\t* docs/html/17_intro/api.html: New.\n\t* docs/html/17_intro/c++0x_status.html: New.\n\t* docs/html/17_intro/CHECKLIST: Move to...\n\t* docs/html/17_intro/c++1998_status.html: ...here.\n\t* docs/html/ext/tr1.html: Move ...\n\t* docs/html/17_intro/tr1_status.html: ...here.\n\t* docs/html/debug_mode.html: Move...\n\t* docs/html/ext/debug_mode.html: ...here.\n\t* docs/html/parallel_mode.html: Move...\n\t* docs/html/ext/parallel_mode.html: ...here\n\t* docs/html/17_intro/BUGS: Remove.\n\t* docs/html/17_intro/concept_check.diff: Remove.\n\t* docs/html/17_intro/HEADER_POLICY: Remove.\n\t* docs/html/17_intro/headers_cc.txt: Remove.\n\t* docs/html/17_intro/PROBLEMS: Remove.\n\t* docs/html/17_intro/RELEASE-NOTES: Remove.\n\t* docs/html/explanations.html: Remove.\n\t* docs/html/makedoc.awk: Remove.\n\t* docs/html/faq/index.txt: Remove. HTML only.\n\t* /docs/html/Makefile: Remove.\n\t\n\t* docs/html/17_intro/configury.html: Editing, updating,\n\tconsistency check with doxygen conventions. Change libstdc++-v3 to\n\tlibstdc++.\t\n\t* docs/html/17_intro/howto.html: Same.\n\t* docs/html/17_intro/license.html: Same.\n\t* docs/html/17_intro/porting.html: Same.\n\t* docs/html/18_support/howto.html: Same.\n\t* docs/html/19_diagnostics/howto.html: Same.\n\t* docs/html/20_util/allocator.html: Same.\n\t* docs/html/20_util/howto.html: Same.\n\t* docs/html/21_strings/howto.html: Same.\n\t* docs/html/22_locale/codecvt.html: Same.\n\t* docs/html/22_locale/ctype.html: Same.\n\t* docs/html/22_locale/howto.html: Same.\n\t* docs/html/22_locale/messages.html: Same.\n\t* docs/html/23_containers/howto.html: Same.\n\t* docs/html/24_iterators/howto.html: Same.\n\t* docs/html/25_algorithms/howto.html: Same.\n\t* docs/html/26_numerics/howto.html: Same.\n\t* docs/html/27_io/howto.html: Same.\n\t* docs/html/configopts.html: Same.\n\t* docs/html/debug.html: Same.\n\t* docs/html/ext/ballocator_doc.html: Same.\n\t* docs/html/ext/howto.html: Same.\n\t* docs/html/ext/mt_allocator.html: Same.\n\t* docs/html/ext/sgiexts.html: Same.\n\t* docs/html/faq/index.html: Same.\n\t* docs/html/install.html: Same.\n\t* docs/html/test.html: Same.\n\t\n\t* include/bits/c++config: Change _GLIBCXX_DEPRECATED to\n\t_GLIBCXX_DEPRECATED_ATTR, _GLIBCXX_VISIBILITY to\n\t_GLIBCXX_VISIBILITY_ATTR.\t\n\t* include/backward/auto_ptr.h: Same.\n\t* include/backward/binders.h: Same.\n\t* include/bits/stl_function.h: Same.\n\t* include/std/memory: Same.\n\t* include/std/streambuf: Same.\n\t* include/tr1_impl/boost_shared_ptr.h: Same.\n\t* src/globals_io.cc: Same.\n\t* src/ios_init.cc: Same.\n\nFrom-SVN: r130150", "tree": {"sha": "925f108409a45af067ae7c38b38400e98b17df9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/925f108409a45af067ae7c38b38400e98b17df9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/comments", "author": null, "committer": null, "parents": [{"sha": "d770555138f40fb929b5456b1548a92ebb60e6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d770555138f40fb929b5456b1548a92ebb60e6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d770555138f40fb929b5456b1548a92ebb60e6aa"}], "stats": {"total": 6815, "additions": 3569, "deletions": 3246}, "files": [{"sha": "d0683a1f120fce9fc54b9173c8a87fb9fed32ba8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -1,3 +1,73 @@\n+2007-11-13  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* docs/html/documentation.html: First pass at unified table of contents.\n+\t* docs/html/abi.html: Move...\n+\t* docs/html/17_intro/abi.html: ...here.\n+\t* docs/html/17_intro/porting-howto.html: Update, edit, put\n+\tresulting pieces into...\n+\t* docs/html/17_intro/api.html: New.\n+\t* docs/html/17_intro/c++0x_status.html: New.\n+\t* docs/html/17_intro/CHECKLIST: Move to...\n+\t* docs/html/17_intro/c++1998_status.html: ...here.\n+\t* docs/html/ext/tr1.html: Move ...\n+\t* docs/html/17_intro/tr1_status.html: ...here.\n+\t* docs/html/debug_mode.html: Move...\n+\t* docs/html/ext/debug_mode.html: ...here.\n+\t* docs/html/parallel_mode.html: Move...\n+\t* docs/html/ext/parallel_mode.html: ...here\n+\t* docs/html/17_intro/BUGS: Remove.\n+\t* docs/html/17_intro/concept_check.diff: Remove.\n+\t* docs/html/17_intro/HEADER_POLICY: Remove.\n+\t* docs/html/17_intro/headers_cc.txt: Remove.\n+\t* docs/html/17_intro/PROBLEMS: Remove.\n+\t* docs/html/17_intro/RELEASE-NOTES: Remove.\n+\t* docs/html/explanations.html: Remove.\n+\t* docs/html/makedoc.awk: Remove.\n+\t* docs/html/faq/index.txt: Remove. HTML only.\n+\t* /docs/html/Makefile: Remove.\n+\t\n+\t* docs/html/17_intro/configury.html: Editing, updating,\n+\tconsistency check with doxygen conventions. Change libstdc++-v3 to\n+\tlibstdc++.\t\n+\t* docs/html/17_intro/howto.html: Same.\n+\t* docs/html/17_intro/license.html: Same.\n+\t* docs/html/17_intro/porting.html: Same.\n+\t* docs/html/18_support/howto.html: Same.\n+\t* docs/html/19_diagnostics/howto.html: Same.\n+\t* docs/html/20_util/allocator.html: Same.\n+\t* docs/html/20_util/howto.html: Same.\n+\t* docs/html/21_strings/howto.html: Same.\n+\t* docs/html/22_locale/codecvt.html: Same.\n+\t* docs/html/22_locale/ctype.html: Same.\n+\t* docs/html/22_locale/howto.html: Same.\n+\t* docs/html/22_locale/messages.html: Same.\n+\t* docs/html/23_containers/howto.html: Same.\n+\t* docs/html/24_iterators/howto.html: Same.\n+\t* docs/html/25_algorithms/howto.html: Same.\n+\t* docs/html/26_numerics/howto.html: Same.\n+\t* docs/html/27_io/howto.html: Same.\n+\t* docs/html/configopts.html: Same.\n+\t* docs/html/debug.html: Same.\n+\t* docs/html/ext/ballocator_doc.html: Same.\n+\t* docs/html/ext/howto.html: Same.\n+\t* docs/html/ext/mt_allocator.html: Same.\n+\t* docs/html/ext/sgiexts.html: Same.\n+\t* docs/html/faq/index.html: Same.\n+\t* docs/html/install.html: Same.\n+\t* docs/html/test.html: Same.\n+\t\n+\t* include/bits/c++config: Change _GLIBCXX_DEPRECATED to\n+\t_GLIBCXX_DEPRECATED_ATTR, _GLIBCXX_VISIBILITY to\n+\t_GLIBCXX_VISIBILITY_ATTR.\t\n+\t* include/backward/auto_ptr.h: Same.\n+\t* include/backward/binders.h: Same.\n+\t* include/bits/stl_function.h: Same.\n+\t* include/std/memory: Same.\n+\t* include/std/streambuf: Same.\n+\t* include/tr1_impl/boost_shared_ptr.h: Same.\n+\t* src/globals_io.cc: Same.\n+\t* src/ios_init.cc: Same.\n+\n 2007-11-13  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/deque.tcc (deque<>::_M_push_back_aux,"}, {"sha": "e71304d0666f60e56b296b4b57caf1572890c868", "filename": "libstdc++-v3/docs/html/17_intro/BUGS", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FBUGS?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,28 +0,0 @@\n-2003-04-26\n-\n-- _GLIBCPP_HAS_BUILTIN_SINF: We should still hold out for a cleaner solution the is currenly the case in bits/std_cmath.h. \n-\n-- there may be one set of remaining string bugs, dependent on final\n-clarification of the string::find technicalities when finding in an\n-empty string or using an empty string for an argument. At the very\n-least, v-3 has interpreted the standard in a way that is in opposition\n-to other libraries on other platforms.\n-\n-- trigraphs and keywords a la the iso646 header are not correctly\n-implemented. It looks like the compiler recognizes them as keywords\n-but then doesn't translate into the correct bit ops. It is a mystery.\n-\n-- wide strings have not been tested, and may therefore be unusable.\n-\n-- Chapter 27 io functionality is not finished. As such, there are\n-known bugs in: filebuf::putbackfail\n-\n-- Many facet implementations are stubs. (22) \n-\n-- Almost no optimizations for small-footprint/low-overhead. (22,27) \n-\n-- There has been some work to wrap the C headers in namespace std::, but \n-   it may not be complete yet, and C macros are not shadowed. Please consult \n-   the mailing list archives for more information. \n-\n-"}, {"sha": "c6fa6d38b54f6c48fc45666d7c76f10a4d41f52c", "filename": "libstdc++-v3/docs/html/17_intro/HEADER_POLICY", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FHEADER_POLICY", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FHEADER_POLICY", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FHEADER_POLICY?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,164 +0,0 @@\n-\n-Header Policy\n--------------\n-\n-The C++ Standard specifies many mutual dependencies among the \n-headers it defines.  It offers no advice on how to arrange headers \n-to avoid problems.  The worst such problem is circular references.  \n-Most simply this is \"A includes B, B includes A\": \n-\n-  // file <A>                     // file <B>\n-  #ifndef A                       #ifndef B\n-  #define A 1                     #define B 1\n-  #include <B>                    #include <A>\n-  typedef int A_type;             typedef int B_type;\n-  extern B_type g(A_type);        extern A_type f(B_type);\n-  #endif /* A */                  #endif /* B */\n-\n-  // file C.cc\n-  #include <A>  \n-\n-The typical effect of such an \"include loop\" may be seen by tracing \n-the preprocessor activity:\n-\n-  C  // file C.cc\n-  C  #include <A>  \n-  A    // file <A>\n-  A    #ifndef A\n-  A    #define A 1\n-  A    #include <B>\n-  B      // file <B>\n-  B      #ifndef B\n-  B      #define B 1\n-  B      #include <A>\n-  A        // file <A>\n-  A \t   #ifndef A           <-- oops, cpp symbol A defined already\n-  A        ...                 <-- skip <A> contents   \n-  A\t   #endif\n-  B      typedef int B_type;\n-  B      extern A_type f(B_type);  <-- error, A_type not defined yet.\n-  B      #endif /* B */\n-  A    typedef int A_type; \n-  A    extern B_type g(A_type);\n-  A    #endif /* A */\n-  \n-The main symptom of #include loops is that definitions from file <A>\n-are not available after the #include <A> for certain include orders.\n-The number of standard headers makes testing all permutations of \n-include order impractical, so a policy is needed to prevent chaos.\n-In any case, for some standard headers (as for the above) no ordering\n-can eliminate the loop.\n-\n-Other factors influence the policy.  Typical implementations of \n-Make (unfortunately including GNU make) have bugs relating to file \n-names with no suffix, that lead to such problems as failure to track \n-dependencies on such files and an inclination to _delete_ them.  \n-Therefore, headers used in building the library are always of the \n-form <bits/yyy.h> generally, or specifically <bits/std_xxx.h> for \n-an equivalent to the standard header <xxx>.\n-\n-Standard headers <xxx> are all placed under directory std/, and \n-are ignored except during installation.  These headers simply \n-#include the corresponding header <bits/std_xxx.h>.  \n-\n-Standard substitute headers <bits/std_xxx.h> that have any complexity \n-may sub-include other headers.  When they sub-include non-standard \n-headers, they first include all the headers required for that \n-non-standard header.\n-\n-Mutual dependencies are handled by splitting up the declarations\n-intended for standard headers among two or more files, and then\n-interleaving them as needed.  For example, we replace <A> and <B> \n-above, as follows:\n-\n-  // file <bits/std_A.h>\n-  #ifndef _CPP_A\n-  #define _CPP_A\n-  # include <bits/A_types.h>\n-  # include <bits/B_types.h>\n-  # include <bits/A_funs.h>\n-  #endif\n-\n-  // file <bits/std_B.h>\n-  #ifndef _CPP_B\n-  #define _CPP_B\n-  # include <bits/A_types.h>\n-  # include <bits/B_types.h>\n-  # include <bits/B_funs.h>\n-  #endif\n-\n-  // file <bits/A_types.h>\n-  #ifndef _CPP_BITS_A_TYPES_H\n-  #define _CPP_BITS_A_TYPES_H\n-  typedef int A_type;\n-  #endif\n-\n-  // file <bits/B_types.h>\n-  #ifndef _CPP_BITS_B_TYPES_H\n-  #define _CPP_BITS_B_TYPES_H\n-  typedef int B_type;\n-  #endif\n-\n-  // file <bits/A_funs.h>\n-  #ifndef _CPP_BITS_A_FUNS_H\n-  #define _CPP_BITS_A_FUNS_H\n-    extern B_type g(A_type);  \n-  #endif\n-\n-  // file <bits/B_funs.h>\n-  #ifndef _CPP_BITS_B_FUNS_H\n-  #define _CPP_BITS_B_FUNS_H\n-    extern A_type f(B_type);  \n-  #endif\n-  \n-Of course we have the standard headers under their mandated names:\n-\n-  // file <std/A>\n-  #ifndef _CPP_A\n-  #define _CPP_A\n-  # include <bits/std_A.h>\n-  #endif\n-\n-  // file <std/B>\n-  #ifndef _CPP_B\n-  #define _CPP_B\n-  # include <bits/std_B.h>\n-  #endif\n-\n-Notice that the include guards are named uniformly except that\n-the guard for standard header <bits/std_A.h> is just _CPP_A,\n-identically as the header <A> in std/.\n-\n-At installation the files std/* can be replaced by symbolic links, \n-or simply copied into place as is.  The result is:\n-\n-  include/\n-  include/A -> bits/std_A.h\n-  include/B -> bits/std_A.h\n-  include/bits/\n-  include/bits/std_A.h\n-  include/bits/std_B.h\n-  include/bits/A_types.h\n-  include/bits/B_types.h\n-  include/bits/A_funs.h\n-  include/bits/B_funs.h\n-\n-\n-Of course splitting up standard headers this way creates \n-complexity, so it is not done routinely, but only in response\n-to discovered needs.\n-\n-Another reason to split up headers is for support of separate \n-compilation of templates.  This interacts with the foregoing \n-because template definitions typically have many more dependencies \n-on other headers than do pure declarations.  Non-inline template \n-definitions are placed in a separate \".tcc\" file that is included \n-by the standard header, and any other standard header that \n-requires definitions from it for its implementation.\n-\n-The key to preventing chaos, given the above structure, is:\n-\n-  Only standard headers <bits/std_xxxx.h> should sub-include\n-  other headers.\n-\n-"}, {"sha": "52223911295e440f3aa84cece7908b4675e95328", "filename": "libstdc++-v3/docs/html/17_intro/PROBLEMS", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FPROBLEMS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FPROBLEMS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FPROBLEMS?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,8 +0,0 @@\n-Irix 6.2:\n-- math.h: defines extern long double hypotl( long double );  i.e., only\n-          one argument.  They've fixed this in 6.3.\n-\n-DES OSF 3.2 & 4.0:\n-- libm define sincos, sincosf, and sincosl but there are no prototypes and\n-  especially the return type is nowhere defined.  The functions are\n-  documented in the man pages, though."}, {"sha": "79920407c2138dc1f00080bc0f96c576df98016f", "filename": "libstdc++-v3/docs/html/17_intro/RELEASE-NOTES", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FRELEASE-NOTES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FRELEASE-NOTES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FRELEASE-NOTES?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,83 +0,0 @@\n-2002-05-02\n-\n-Release Notes   \n--------------\n-The Standard C++ Library, or libstdc++-v3, is an ongoing project\n-to fully implement the ISO 14882 Standard C++ library as described in\n-chapters 17 through 27 and annex D.\n-\n-This is the fifteenth snapshot of the libstdc++ rewrite.  It still\n-has some incomplet and incorrekt parts, but it's a lot less incomplete\n-and incorrect than some of the earlier snapshots, and quite usable.\n-\n-The Standard C++ Library, follows an open development model,\n-attempting to be fully buzzword, bazaar, and GNU compliant. Full\n-details on participating, including contributor guidelines, mailing\n-list subscription, mailing list archives, up-to-date documentation,\n-and various and sundry other details can be found at the following\n-URL:\n-\n-  http://gcc.gnu.org/libstdc++/\n-\n-\n-New: \n---- \n-- more doxygen documentation\n-- more named locale fixups\n-- stdio_filebuf that takes fd, FILE\n-- io performance tuning\n-- allocation tuning, valgrind fixups\n-- __cxa_demangle now supported\n-\n-\n-Bugs fixed:\n------------\n-6533, 6513, 6501, 6511, 5820, 6414, 4150, 6360, 4164, 1072, 6124,\n-5180, 3457, 3139, 5268, 3983, 5542, 3129, 5207, 3719, 5734\n-+ others.\n-\n-\n-What doesn't:\n--------------\n-- see BUGS.\n-\n- \n-Build and Install\n------------------\n-Up to date build and install directions can be found at:\n-http://gcc.gnu.org/libstdc++/install.html\n-\n-\n-Contact:\n---------\n-Places have changed from previous snapshots.  The web page, which has\n-information about joining the mailing list and searching its archives,\n-CVS access, and contribution information is now at:\n-\n-  http://gcc.gnu.org/libstdc++/\n-\n-Please note that the mailing list has moved, and is now hosted on\n-gcc.gnu.org. (The web site above has the most up-to-date info.)\n-   \n-Obtain the library snapshot via ftp (including these release notes) from\n-\n-  ftp://gcc.gnu.org/pub/libstdc++/\n-\n-The library is maintained by Benjamin Kosnik, Gabriel\n-Dos Reis, Phil Edwards, Ulrich Drepper, Loren James Rittle,\n-and Paolo Carlini.  \n-\n-\n-Development tools:\n-------------------\n-\n-You will need a current version of gcc to compile this snapshot of\n-libstdc++. The use of the latest stable gcc-3.0.x release (3.0.4), CVS\n-gcc, or gcc-3_1-branch is strongly recommended, which may also\n-introduce additional dependencies for up-to-date binutils. In\n-particular, current binutils (2.12) is recommended so that symbol\n-versioning for the library is on by default. In addition, you may need\n-up-to-date tools for modifying Makefiles and regenerating configure\n-scripts: automake (version 1.4), autoconf (version 2.13 and higher),\n-and libtool.\n-"}, {"sha": "c27de61515c7eee0d77f54825c8068a6fe17dd6f", "filename": "libstdc++-v3/docs/html/17_intro/abi.html", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fabi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fabi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fabi.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -26,7 +26,7 @@ <h1 class=\"centered\"><a name=\"top\">C++ Standard Library ABI</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n@@ -240,7 +240,7 @@ <h5 class=\"left\">\n \n     <li>Symbol versioning on the libstdc++.so binary.\n \n-    <p>mapfile: libstdc++-v3/config/linker-map.gnu</p>\n+    <p>mapfile: libstdc++/config/linker-map.gnu</p>\n     <p>It is versioned with the following labels and version\n    definitions, where the version definition is the maximum for a\n    particular release. Note, only symbol which are newly introduced\n@@ -340,7 +340,7 @@ <h5 class=\"left\">\n \n     <p>\n     This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory. (Up to gcc-4.1.0, it was\n+    \"libstdc++/include/bits\" directory. (Up to gcc-4.1.0, it was\n     changed every night by an automated script. Since gcc-4.1.0, it is\n     the same value as gcc/DATESTAMP.)\n     </p>\n@@ -393,7 +393,7 @@ <h5 class=\"left\">\n \n     <p>\n     This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory and is generated\n+    \"libstdc++/include/bits\" directory and is generated\n     automatically by autoconf as part of the configure-time generation\n     of config.h.\n     </p>\n@@ -435,7 +435,7 @@ <h5 class=\"left\">\n     All C++ includes are installed in include/c++, then nest in a\n     directory hierarchy corresponding to the C++ compiler's released\n     version. This version corresponds to the variable \"gcc_version\" in\n-    \"libstdc++-v3/acinclude.m4,\" and more details can be found in that\n+    \"libstdc++/acinclude.m4,\" and more details can be found in that\n     file's macro GLIBCXX_CONFIGURE (GLIBCPP_CONFIGURE before gcc-3.4.0).\n     </p>\n     <p>\n@@ -493,7 +493,7 @@ <h5 class=\"left\">\n   Minimum environment that supports a versioned ABI: A supported\n   dynamic linker, a GNU linker of sufficient vintage to understand\n   demangled C++ name globbing (ld), a shared executable compiled with\n-  g++, and shared libraries (libgcc_s, libstdc++-v3) compiled by a\n+  g++, and shared libraries (libgcc_s, libstdc++) compiled by a\n   compiler (g++) with a compatible ABI. Phew.\n </p>\n \n@@ -529,7 +529,7 @@ <h5 class=\"left\">\n </p>\n \n <p>\n-  In particular, libstdc++-v3/acinclude.m4 has a macro called\n+  In particular, libstdc++/acinclude.m4 has a macro called\n   GLIBCXX_ENABLE_SYMVERS that defaults to yes (or the argument passed\n   in via --enable-symvers=foo). At that point, the macro attempts to\n   make sure that all the requirement for symbol versioning are in\n@@ -542,7 +542,7 @@ <h5 class=\"left\">\n </h5>\n <p>\n   When the GNU C++ library is being built with symbol versioning on,\n-  you should see the following at configure time for libstdc++-v3:\n+  you should see the following at configure time for libstdc++:\n </p>\n \n \n@@ -776,7 +776,7 @@ <h3 class=\"left\">\n \n <p>\n Two.  \n-Use the 'make check-abi' rule in the libstdc++-v3 Makefile. \n+Use the 'make check-abi' rule in the libstdc++ Makefile. \n </p>\n \n <p>", "previous_filename": "libstdc++-v3/docs/html/abi.html"}, {"sha": "50c8604405aec0a8ad47d686f0bbb6ffea932ca1", "filename": "libstdc++-v3/docs/html/17_intro/api.html", "status": "added", "additions": 596, "deletions": 0, "changes": 596, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fapi.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -0,0 +1,596 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+<!DOCTYPE html\n+          PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n+<head>\n+   <meta name=\"AUTHOR\" content=\"bkoz@gcc.gnu.org (Benjamin Kosnik), Felix Natter\" />\n+   <meta name=\"KEYWORDS\" content=\"C++, libstdc++, API, deprecate backward\" />\n+   <meta name=\"DESCRIPTION\" content=\"API evolution and deprecation history\" />\n+   <meta name=\"GENERATOR\" content=\"emacs and ten fingers\" />\n+   <title>API Evolution and Deprecation History</title>\n+<link rel=\"StyleSheet\" href=\"lib3styles.css\" type=\"text/css\" />\n+<link rel=\"Start\" href=\"documentation.html\" type=\"text/html\"\n+  title=\"GNU C++ Standard Library\" />\n+<link rel=\"Copyright\" href=\"17_intro/license.html\" type=\"text/html\" />\n+</head>\n+<body>\n+\n+<h1 class=\"centered\"><a name=\"top\">API Evolution and Deprecation History</a></h1>\n+\n+<p class=\"fineprint\"><em>\n+   The latest version of this document is always available at\n+   <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/17_intro/api.html\">\n+   http://gcc.gnu.org/onlinedocs/libstdc++/17_intro/abi.html</a>.\n+</em></p>\n+\n+<p><em>\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n+</em></p>\n+\n+<!-- ####################################################### -->\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"C++ API v1\">First.</a>\n+</h3>\n+\n+<p>2.72</p>\n+<p> The first generation GNU C++ library was called libg++. It had a\n+working relationship with at least two kinds of dinosaur. Sadly, the\n+details were not pried away from the estate.\n+</p>\n+\n+<p>\n+\n+</p>\n+\n+<p>Known Issues include many of the limitations of its immediate ancestor.</p> \n+\n+<h5>No <code>ios_base</code></h5>\n+\n+<p> At least some older implementations don't have <code>std::ios_base</code>, so you should use <code>std::ios::badbit</code>, <code>std::ios::failbit</code> and <code>std::ios::eofbit</code> and <code>std::ios::goodbit</code>.\n+</p>\n+\n+<h5>No <code>cout</code> in <code>ostream.h</code>, no <code>cin</code> in <code>istream.h</code</h5>\n+\n+<p>\n+\tIn earlier versions of the standard,\n+\t<tt>&lt;fstream.h&gt;</tt>,\n+\t<tt>&lt;ostream.h&gt;</tt>\n+\tand <tt>&lt;istream.h&gt;</tt>\n+\tused to define\n+\t<code>cout</code>, <code>cin</code> and so on. ISO C++ specifies that one needs to include\n+\t<tt>&lt;iostream&gt;</tt>\n+\texplicitly to get the required definitions.\n+ </p>\n+<p> Some include adjustment may be required.</p>\n+\n+\n+<p>This project is no longer maintained or supported, and the sources\n+archived.  The code is considered replaced and rewritten.\n+</p>\n+\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"C++ API v1\">Second.</a>\n+</h3>\n+<p> The second generation GNU C++ library was called libstdc++, or\n+libstdc++-v2. It was a separate GNU project, although reliably paired\n+with GCC. It spans the time between libg++ and pre-ISO C++.\n+</p>\n+\n+<p>egcs 1.x</p>\n+<p>2.95</p>\n+<p>2.96</p>\n+\n+<p>Portability Notes</p>\n+<p>Implementation Limitations</p>\n+\n+<h5>Namespace <code>std::</code> not supported.</h5>\n+\n+<p>\n+      Some care is required to support C++ compiler and or library\n+      implementation that do not have the standard library in\n+      <code>namespace std</code>.\n+    </p>\n+<p>\n+   The following sections list some possible solutions to support compilers\n+   that cannot ignore <code>std::</code>-qualified names.\n+ </p>\n+\n+<p> First, see if the compiler has a flag for this. Namespace\n+      back-portability-issues are generally not a problem for g++\n+      compilers that do not have libstdc++ in <code>std::</code>, as\n+      the compilers use <code>-fno-honor-std</code> (ignore\n+      <code>std::</code>, <code>:: = std::</code>) by default. That\n+      is, the responsibility for enabling or disabling\n+      <code>std::</code> is on the user; the maintainer does not have\n+      to care about it. This probably applies to some other compilers\n+      as well.\n+    </p>\n+\n+<p>Second, experiment with a variety of pre-processor tricks.</p>\n+\n+<p> By defining <code>std</code> as a macro, fully-qualified namespace calls become global. Volia. \n+\t      \n+<pre class=\"programlisting\">\n+#ifdef WICKEDLY_OLD_COMPILER\n+# define std\n+#endif\n+</pre>\n+(thanks to Juergen Heinzl who posted this solution on gnu.gcc.help)\n+\n+<p>Define a macro <code>NAMESPACE_STD</code>, which is defined to\n+either &quot;&quot; or &quot;std&quot; based on a compile-type\n+test. On GNU systems, this can be done with autotools by means of an\n+autoconf test (see below) for <code>HAVE_NAMESPACE_STD</code>, then\n+using that to set a value for the <code>NAMESPACE_STD</code> macro.\n+At that point, one is able to use <code>NAMESPACE_STD::string</code>,\n+which will evaluate to <code>std::string</code> or\n+<code>::string</code> (ie, in the global namespace on systems that do\n+not put <code>string</code> in <code>std::</code>). </p>\n+\n+<p> \t\n+<pre>\n+dnl @synopsis AC_CXX_HAVE_STD_NAMESPACE\n+dnl\n+dnl If the compiler supports the std namespace, define\n+dnl HAVE_STD_NAMESPACE.\n+dnl\n+dnl @category Cxx\n+dnl @author Todd Veldhuizen\n+dnl @author Luc Maisonobe <luc@spaceroots.org>\n+dnl @version 2004-02-04\n+dnl @license AllPermissive\n+\n+AC_DEFUN([AC_CXX_HAVE_STD_NAMESPACE],\n+[AC_CACHE_CHECK(whether the compiler supports the std namespace,\n+ac_cv_cxx_have_std_namespace,\n+[AC_LANG_SAVE\n+ AC_LANG_CPLUSPLUS\n+ AC_TRY_COMPILE([#include <iostream>\n+\tstd::istream& is = std::cin;\n+\t],[return 0;],\n+ ac_cv_cxx_have_std_namespace=yes, ac_cv_cxx_have_std_namespace=no)\n+ AC_LANG_RESTORE\n+])\n+if test \"$ac_cv_cxx_have_std_namespace\" = yes; then\n+  AC_DEFINE(HAVE_STD_NAMESPACE,,[define if the compiler supports the std namespace])\n+fi\n+])\n+</pre>\n+\n+<h5>Illegal iterator usage.</h5>\n+<p>\n+      The following illustrate implementation-allowed illegal iterator\n+      use, and then correct use.  <div class=\"itemizedlist\"><ul\n+      type=\"disc\"> <li><p>you cannot do\n+      <code>ostream::operator&lt;&lt;(iterator)</code> to print the\n+      address of the iterator =&gt; use <code>operator&lt;&lt;\n+      &amp;*iterator</code> instead ?\n+\t  </p></li>\n+<li><p>you cannot clear an iterator's reference\n+\t    (<code>iterator = 0</code>) =&gt; use\n+\t    <code>iterator = iterator_type();</code> ?\n+\t  </p></li>\n+<li><p>\n+<code>if (iterator)</code> won't work any\n+\t    more =&gt; use <code>if (iterator != iterator_type())</code>\n+\t    ?</p></li>\n+</ul>\n+\n+<h5><code>isspace</code> from <tt>&lt;cctype&gt;</tt> is a macro\n+</h5>\n+\n+<p> Glibc 2.0.x and 2.1.x define <tt>&lt;ctype.h&gt;</tt>\n+functionality as macros (isspace, isalpha etc.).    \n+</p>\n+\n+<p>\n+This implementations of libstdc++, however, keep these functions as\n+macros, and so it is not back-portable to use fully qualified\n+names. For example:\n+</p>\n+\n+<pre> \n+#include &lt;cctype&gt; \n+int main() { std::isspace('X'); } \n+</pre> \n+\n+<p>Results in something like this:\n+</p>\n+\n+<pre> \n+std:: (__ctype_b[(int) ( ( 'X' ) )] &amp; (unsigned short int) _ISspace ) ; \n+</pre>\n+\n+\n+<p> A solution is to modify a header-file so that the compiler tells\n+<tt>&lt;ctype.h&gt;</tt> to define functions instead of macros:\n+</p>\n+\n+<pre>\n+// This keeps isalnum, et al from being propagated as macros. \n+#if __linux__\n+# define __NO_CTYPE 1\n+#endif\n+</pre>\n+\n+<p>Then, include &lt;ctype.h&gt;\n+</p>\n+\n+<p>\n+Another problem arises if you put a <code>using namespace std;</code>\n+declaration at the top, and include <tt>&lt;ctype.h&gt;</tt>. This\n+will result in ambiguities between the definitions in the global\n+namespace (<tt>&lt;ctype.h&gt;</tt>) and the definitions in namespace\n+<code>std::</code> (<code>&lt;cctype&gt;</code>).    \n+</p>\n+\n+<h5>No <code>vector::at</code>, <code>deque::at</code>, <code>string::at</code></h5>\n+\n+<p>\n+      One solution is to add an autoconf-test for this:\n+</p>\n+<pre>\n+AC_MSG_CHECKING(for container::at)\n+AC_TRY_COMPILE(\n+[\n+#include &lt;vector&gt;\n+#include &lt;deque&gt;\n+#include &lt;string&gt;\n+\t\n+using namespace std;\n+],\n+[\n+deque&lt;int&gt; test_deque(3);\n+test_deque.at(2);\n+vector&lt;int&gt; test_vector(2);\n+test_vector.at(1);\n+string test_string(&quot;test_string&quot;);\n+test_string.at(3);\n+],\n+[AC_MSG_RESULT(yes)\n+AC_DEFINE(HAVE_CONTAINER_AT)],\n+[AC_MSG_RESULT(no)])\n+</pre>\n+\n+<p>\n+If you are using other (non-GNU) compilers it might be a good idea\n+to check for <code>string::at</code> separately.\n+</p>\n+\n+<h5>No <code>std::char_traits&lt;char&gt;::eof</code></h5>\n+\n+<p>\n+Use some kind of autoconf test, plus this:\n+</p>      \n+<pre> \n+#ifdef HAVE_CHAR_TRAITS\n+#define CPP_EOF std::char_traits&lt;char&gt;::eof()\n+#else\n+#define CPP_EOF EOF\n+#endif\n+</pre>\n+\n+<h5>No <code>string::clear</code></h5>\n+\n+<p>\n+      There are two functions for deleting the contents of a string:\n+      <code>clear</code> and <code>erase</code> (the latter\n+      returns the string).\n+      <pre class=\"programlisting\">\n+\tvoid \n+\tclear() { _M_mutate(0, this-&gt;size(), 0); }\n+      </pre>\n+      <pre class=\"programlisting\">\n+\tbasic_string&amp; \n+\terase(size_type __pos = 0, size_type __n = npos)\n+\t{ \n+\treturn this-&gt;replace(_M_check(__pos), _M_fold(__pos, __n),\n+\t_M_data(), _M_data()); \n+\t}\n+      </pre>\n+      Unfortunately, ut <code>clear</code> is not\n+      implemented in this version, so you should use\n+      <code>erase</code> (which is probably faster than\n+      <code>operator=(charT*)</code>).\n+</p>\n+\n+<h5>Removal of <code>ostream::form</code> and\n+<code>istream::scan</code> extensions.</h5>\n+\n+<p> These are no longer supported. Please use\n+   <a href=\"#sec-stringstream\" title=\"Using stringstreams\">\n+    stringstreams</a> instead.\t\n+</p>\n+\n+<h5>No <code>basic_stringbuf</code>, <code>basic_stringstream<code></h5>\n+\n+<p>\n+      Libstdc++ provides the new\n+      <code>i/ostringstream</code>-classes, (<tt>&lt;sstream&gt;</tt>), but for compatibility\n+      with older implementations you still have to use\n+      <code>i/ostrstream</code> (<tt>&lt;strstream&gt;</tt>):\n+      <pre >\n+\t#ifdef HAVE_SSTREAM\n+\t#include &lt;sstream&gt;\n+\t#else\n+\t#include &lt;strstream&gt;\n+\t#endif\n+      </pre>\n+      <div class=\"itemizedlist\"><ul type=\"disc\">\n+<li><p> <code>strstream</code> is considered to be\n+\t    deprecated\n+\t  </p></li>\n+<li><p> <code>strstream</code> is limited to\n+\t    <code>char</code>\n+\t  </p></li>\n+<li><p> with <code>ostringstream</code> you don't\n+\t    have to take care of terminating the string or freeing its\n+\t    memory\n+\t  </p></li>\n+<li><p> <code>istringstream</code> can be re-filled\n+\t    (clear(); str(input);)\n+\t  </p></li>\n+</ul></div>\n+<p>\n+      You can then use output-stringstreams like this:\n+      <pre >\n+\t#ifdef HAVE_SSTREAM\n+\tstd::ostringstream oss;\n+\t#else\n+\tstd::ostrstream oss;\n+\t#endif\n+\toss &lt;&lt; &quot;Name=&quot; &lt;&lt; m_name &lt;&lt; &quot;, number=&quot; &lt;&lt; m_number &lt;&lt; std::endl;\n+\t...\n+\t#ifndef HAVE_SSTREAM\n+\toss &lt;&lt; std::ends; // terminate the char*-string\n+\t#endif\n+\t// str() returns char* for ostrstream and a string for ostringstream\n+\t// this also causes ostrstream to think that the buffer's memory\n+\t// is yours\n+\tm_label.set_text(oss.str());\n+\t#ifndef HAVE_SSTREAM\n+\t// let the ostrstream take care of freeing the memory\n+\toss.freeze(false);\n+\t#endif\n+      </pre>\n+<p>\n+      Input-stringstreams can be used similarly:\n+</p>\n+      \n+<pre> \n+std::string input;\n+...\n+#ifdef HAVE_SSTREAM\n+std::istringstream iss(input);\n+#else\n+std::istrstream iss(input.c_str());\n+#endif\n+\n+int i;\n+iss &gt;&gt; i; \n+</pre>\n+\n+<p> One (the only?) restriction is that an istrstream cannot be re-filled:\n+</p>\n+      \n+<pre >\n+std::istringstream iss(numerator);\n+iss &gt;&gt; m_num;\n+// this is not possible with istrstream\n+iss.clear();\n+iss.str(denominator);\n+iss &gt;&gt; m_den;\n+ </pre>\n+ \n+<p>\n+If you don't care about speed, you can put these conversions in\n+      a template-function:\n+</p>      \n+<pre >\n+template &lt;class X&gt;\n+void fromString(const string&amp; input, X&amp; any)\n+{\n+#ifdef HAVE_SSTREAM\n+std::istringstream iss(input);\n+#else\n+std::istrstream iss(input.c_str());\n+#endif\n+X temp;\n+iss &gt;&gt; temp;\n+if (iss.fail())\n+throw runtime_error(..)\n+any = temp;\n+}\n+</pre>\n+\n+<p> Another example of using stringstreams is in <a href=\"../21_strings/howto.html\" target=\"_top\">this howto</a>.\n+</p>\n+\n+<p> There is additional information in the libstdc++-v2 info files, in\n+particular &quot;info iostream&quot;.\n+</p>\n+\n+<h5>Little or no wide character support</h5>\n+\n+<h5>No templatized iostreams</h5>\n+\n+<h5>Thread safety issues.</h5>\n+\n+<p>This project is no longer maintained or supported, and the sources\n+archived.  The code is considered replaced and rewritten.\n+</p>\n+\n+\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"C++ API v1\">Third.</a>\n+</h3>\n+<p> The third generation GNU C++ library is called libstdc++, or\n+libstdc++-v3.\n+</p>\n+\n+      <p>The subset commonly known as the Standard Template Library\n+         (chapters 23 through 25, mostly) is adapted from the final release\n+         of the SGI STL, with extensive changes.\n+      </p>\n+\n+      <p>A more formal description of the V3 goals can be found in the\n+         official <a href=\"../17_intro/DESIGN\">design document</a>.\n+      </p>\n+\n+\n+<p>Portability Notes</p>\n+\n+<h5>Pre-ISO headers moved to backwards</h5>\n+<p> The pre-ISO C++ headers (iostream.h etc.) are available, but inclusion\n+      generates a warning that you are using deprecated headers.    \n+</p>\n+\n+    <p>This compatibility layer is constructed by including the\n+    standard C++ headers, and injecting any items in\n+    <code>std::</code> into the global namespace.\n+   </p>\n+   <p>For those of you new to ISO C++ (welcome, time travelers!), no,\n+      that isn't a typo. Yes, the headers really have new names.\n+      Marshall Cline's C++ FAQ Lite has a good explanation in <a\n+      href=\"http://www.parashift.com/c++-faq-lite/coding-standards.html#faq-27.4\">item\n+      [27.4]</a>.\n+   </p>\n+\n+<p> Some include adjustment may be required.</p>\n+\n+<h5>Extension headers hash_map, hash_set moved to ext</h5>\n+\n+<p> Header files <code>hash_map</code> and <code>hash_set</code>\n+moved to <code>ext/hash_map</code> and <code>ext/hash_set</code>,\n+respectively. At the same time, all types in these files are enclosed\n+in <code>namespace __gnu_cxx</code>.\n+</p>\n+\n+\n+<h5>\n+No <code>ios::nocreate/ios::noreplace</code>.\n+</h5>\n+\n+<p> The existence of <code>ios::nocreate</code> being used for\n+input-streams has been confirmed, most probably because the author\n+thought it would be more correct to specify nocreate explicitly.  So\n+it can be left out for input-streams.\n+</p>\n+\n+<p>For output streams, &quot;nocreate&quot; is probably the default,\n+unless you specify <code>std::ios::trunc</code> ? To be safe, you can\n+open the file for reading, check if it has been opened, and then\n+decide whether you want to create/replace or not. To my knowledge,\n+even older implementations support <code>app</code>, <code>ate</code>\n+and <code>trunc</code> (except for <code>app</code> ?).\n+</p>\n+\n+\n+<h5>\n+No <code>stream::attach(int fd)</code>.\n+</h5>\n+\n+<p>\n+      Phil Edwards writes: It was considered and rejected for the ISO\n+      standard.  Not all environments use file descriptors.  Of those\n+      that do, not all of them use integers to represent them.\n+    </p>  \n+\n+<p>\n+      For a portable solution (among systems which use\n+      filedescriptors), you need to implement a subclass of\n+      <code>std::streambuf</code> (or\n+      <code>std::basic_streambuf&lt;..&gt;</code>) which opens a file\n+      given a descriptor, and then pass an instance of this to the\n+      stream-constructor. \n+    </p>\n+\n+<p>\n+      An extension is available that implements this.\n+      <code>&lt;ext/stdio_filebuf.h&gt;</code> contains a derived class called\n+      <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/class____gnu__cxx_1_1stdio__filebuf.html\"><code>__gnu_cxx::stdio_filebuf</code></a>.\n+      This class can be constructed from a C <code>FILE*</code> or a file\n+      descriptor, and provides the <code>fd()</code> function.\n+    </p>\n+\n+<p>\n+ For another example of this, refer to\n+      <a href=\"http://www.josuttis.com/cppcode/fdstream.html\" target=\"_top\">fdstream example</a> \n+      by Nicolai Josuttis.\n+</p>\n+\n+<p><a href=\"http://gcc.gnu.org/bugzilla/buglist.cgi?cmdtype=runnamed&namedcmd=libstdc%2B%2B\">Known Issues</a></p>\n+\n+<h5>\n+container iterator types are not necessarily container value_type*\n+</h5>\n+\n+<p>API History, User Visible Changes</p>\n+\n+<p>3.0.0</p>\n+\n+\n+<p>3.1.0</p>\n+<p>3.2.0</p>\n+<p>3.3.0</p>\n+\n+\n+<p>3.4.0</p>\n+\n+Macro guard for libstdc++ changed, from _GLIBCPP_ to _GLIBCXX_, to\n+accomodate a request from the C Pre Processor maintainer.\n+\n+<p>4.0.0</p>\n+<p>4.1.0</p>\n+\n+<cassert> how has to be explicitly included for <code>std::assert</code> calls.\n+\n+<p>4.2.0</p>\n+\n+<p>4.3.0</p>\n+\n+Header streamlining.\n+\n+Backward include edit.\n+\n+PCH files built but not installed. \n+\n+Namespace pb_ds moved to __gnu_pb_ds.\n+\n+C++OX features appear.\n+\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"C++ API v1\">Fourth, and future</a>\n+</h3>\n+\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"Deprecation\">Deprecation and Backwards Compatibility</a>\n+</h3>\n+\n+<hr />\n+<h3 class=\"left\">\n+  <a name=\"Links\">Links</a>\n+</h3>\n+\n+<p>\n+<a href=\"http://www.kegel.com/gcc/gcc4.html\">Migrating to gcc-4.1</a>, by Dan Kegel.\n+</p>\n+\n+<p>\n+<a href=\"http://lists.debian.org/debian-gcc/2006/03/msg00405.html\">Building the whole Debian archive with GCC 4.1: a summary</a>, by Martin Michlmayr\n+</p>\n+\n+<p>\n+<a href=\"http://annwm.lbl.gov/~leggett/Atlas/gcc-3.2.html\">Migration guide for GCC-3.2</a>\n+</p>\n+\n+</body>\n+</html>\n+"}, {"sha": "5627d6fe17806b39733791d34b1c336f6918cf0e", "filename": "libstdc++-v3/docs/html/17_intro/c++0x_status.html", "status": "added", "additions": 2280, "deletions": 0, "changes": 2280, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B0x_status.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B0x_status.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B0x_status.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -0,0 +1,2280 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+<!DOCTYPE html \n+          PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+          \"DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n+\n+<head>\n+\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n+  <link rev=\"made\" href=\"mailto:gcc@gcc.gnu.org\" />\n+  <link rel=\"shortcut icon\" href=\"http://gcc.gnu.org/favicon.ico\" />\n+\n+  <title>\n+    Status of C++0x features in GCC\n+    - GNU Project - Free Software Foundation (FSF)\n+  </title>\n+\n+</head>\n+\n+<body>\n+\n+<h1 align=\"center\">\n+ Status of C++0x features in GCC\n+</h1>\n+\n+<p>\n+This table is based on the table of contents of ISO/IEC \n+Doc No: N2461=07-0331 Date: 2007-10-22\n+Working Draft, Standard for Programming Language C++\n+</p>\n+\n+<p>\n+In this implementation <code>-std=gnu++0x</code> or\n+<code>-std=c++0x</code> flags must be used to enable language and\n+library features. The pre-defined symbol\n+<code>__GXX_EXPERIMENTAL_CXX0X__</code> is used to check for the\n+presence of the required flag.\n+</p>\n+\n+<p>\n+This page describes the C++0x support in mainline GCC SVN, not in any\n+particular release.\n+</p>\n+\n+<table border=\"1\">\n+  <thead>\n+    <tr>\n+      <td><span style=\"font-weight: bold;\">Section</span></td>\n+      <td><span style=\"font-weight: bold;\">Description</span></td>\n+      <td><span style=\"font-weight: bold;\">Done</span></td>\n+      <td><span style=\"font-weight: bold;\">Broken</span></td>\n+      <td><span style=\"font-weight: bold;\">Missing</span></td>\n+      <td><span style=\"font-weight: bold;\">Comments</span></td>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <td><b>20</b></td>\n+      <td colspan=\"5\"><b>General Utilities</b></td>\n+    </tr>\n+    <tr>\n+      <td>20.2</td>\n+      <td>Utility Components</td>\n+      <td></td>\n+      <td></td>\n+      <td>incomplete</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.2.1</td>\n+      <td>Operators</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.2.2</td>\n+      <td>forward/move helpers</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.2.3</td>\n+      <td>Pairs</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>20.3</td>\n+      <td>Header <code>&lt;tuple&gt;</code> synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1</td>\n+      <td>Class template <code>tuple</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1.1</td>\n+      <td>Construction</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1.2</td>\n+      <td>Tuple creation functions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1.3</td>\n+      <td>Tuple helper classes</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1.4</td>\n+      <td>Element access</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.3.1.5</td>\n+      <td>Relational operators</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>20.4</td>\n+      <td colspan=\"5\">Metaprogramming and type traits</td>\n+    </tr>\n+    <tr>\n+      <td>20.4.1</td>\n+      <td>Requirements</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.2</td>\n+      <td>Header <code>&lt;type_traits&gt;</code> synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.3</td>\n+      <td>Helper classes</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.4</td>\n+      <td>General Requirements</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.5</td>\n+      <td>Unary Type Traits</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.5.1</td>\n+      <td>Primary Type Categories</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.5.2</td>\n+      <td>Composite type traits</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.5.3</td>\n+      <td>Type properties</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.6</td>\n+      <td>Relationships between types</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.7</td>\n+      <td>Transformations between types</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.7.1</td>\n+      <td>Const-volatile modifications</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.7.2</td>\n+      <td>Reference modifications</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.7.3</td>\n+      <td>Array modifications</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.7.4</td>\n+      <td>Pointer modifications</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.8</td>\n+      <td>Other transformations</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.4.9</td>\n+      <td>Implementation requirements</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5 </td>\n+      <td>Function Objects</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5</td>\n+      <td>Additions to header <code>&lt;functional&gt;</code> synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.1</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.2</td>\n+      <td>Requirements</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.3</td>\n+      <td>Base</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.4</td>\n+      <td>Function return types</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5</td>\n+      <td>Class template <code>reference_wrapper</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5.1</td>\n+      <td><code>reference_wrapper</code> construct/copy/destroy</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5.2</td>\n+      <td><code>reference_wrapper</code> assignment</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5.3</td>\n+      <td><code>reference_wrapper</code> access</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5.4</td>\n+      <td><code>reference_wrapper</code> invocation</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.5.5</td>\n+      <td><code>reference_wrapper</code> helper functions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.14</td>\n+      <td>Function template <code>mem_fn</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.11</td>\n+      <td>Template function bind</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>20.5.11.1</td>\n+      <td>Function object binders</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.11.1.1</td>\n+      <td>Class template <code>is_bind_expression</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.11.1.2</td>\n+      <td>Class template <code>is_placeholder</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.11.1.3</td>\n+      <td>Function template <code>bind</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.11.1.4</td>\n+      <td>Placeholders</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15</td>\n+      <td>Polymorphic function wrappers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.1</td>\n+      <td>Class <code>bad_function_call<code></code></code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.1.1</td>\n+      <td><code>bad_function_call</code> constructor</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2</td>\n+      <td>Class template <code>function</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.1</td>\n+      <td><code>function</code> construct/copy/destroy</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.2</td>\n+      <td><code>function</code> modifiers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.3</td>\n+      <td><code>function</code> capacity</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.4</td>\n+      <td><code>function</code> invocation</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.5</td>\n+      <td><code>function</code> target access</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.7</td>\n+      <td>null pointer comparison operators</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.15.2.8</td>\n+      <td>specialized algorithms</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.5.16</td>\n+      <td>Class template <code>hash</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6</td>\n+      <td>Additions to header <code>&lt;memory&gt;</code> synopsis</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td>missing <code>unique_ptr</code></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.5</td>\n+      <td>Class template <code>unique_ptr</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6</td>\n+      <td>Smart pointers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.1</td>\n+      <td>Class <code>bad_weak_ptr</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2</td>\n+      <td>Class template <code>shared_ptr</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td><a href=\"tr1.html#1\">1</a></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.1</td>\n+      <td><code>shared_ptr</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.2</td>\n+      <td><code>shared_ptr</code> destructor</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.3</td>\n+      <td><code>shared_ptr</code> assignment</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.4</td>\n+      <td><code>shared_ptr</code> modifiers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.5</td>\n+      <td><code>shared_ptr</code> observers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.6</td>\n+      <td><code>shared_ptr</code> comparison</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.7</td>\n+      <td><code>shared_ptr</code> I/O</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.8</td>\n+      <td><code>shared_ptr</code> specialized algorithms</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.9</td>\n+      <td><code>shared_ptr</code> casts</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.2.10</td>\n+      <td><code>get_deleter</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3</td>\n+      <td>Class template <code>weak_ptr</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.1</td>\n+      <td><code>weak_ptr</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.2</td>\n+      <td><code>weak_ptr</code> destructor</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.3</td>\n+      <td><code>weak_ptr</code> assignment</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.4</td>\n+      <td><code>weak_ptr</code> modifiers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.5</td>\n+      <td><code>weak_ptr</code> observers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.6</td>\n+      <td><code>weak_ptr</code> comparison</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.3.7</td>\n+      <td><code>weak_ptr</code> specialized algorithms</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>20.6.6.4</td>\n+      <td>Class template <code>enable_shared_from_this</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+\n+\n+    <tr>\n+      <td><b>23</b></td>\n+      <td colspan=\"5\"><b>Containers</b></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1</td>\n+      <td>Header <code>&lt;array&gt;</code> synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1</td>\n+      <td>Class template array</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.1</td>\n+      <td><code>array</code> constructors, copy, and assignment</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.2</td>\n+      <td><code>array</code> specialized algorithms</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.3</td>\n+      <td><code>array </code>size</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.4</td>\n+      <td><code>array </code>data</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.5</td>\n+      <td>Zero sized <code>array</code>s</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.2.1.6</td>\n+      <td>Tuple interface to class template <code>array</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>23.4</td>\n+      <td>Unordered associative containers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.1</td>\n+      <td>Class template <code>unordered_map</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.1.1</td>\n+      <td><code>unordered_map</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.1.2</td>\n+      <td><code>unordered_map</code> element access</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.1.3</td>\n+      <td><code>unordered_map</code> swap</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.2</td>\n+      <td>Class template <code>unordered_multimap</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.2.1</td>\n+      <td><code>unordered_multimap</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.2.2</td>\n+      <td><code>unordered_multimap</code> swap</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.3</td>\n+      <td>Class template <code>unordered_set</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.3.1</td>\n+      <td><code>unordered_set</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.3.2</td>\n+      <td><code>unordered_set</code> swap</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.4</td>\n+      <td>Class template <code>unordered_multiset<code></code></code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.4.1</td>\n+      <td><code>unordered_multiset</code> constructors</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>23.4.4.2</td>\n+      <td><code>unordered_multiset</code> swap</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td><b>26</b></td>\n+      <td colspan=\"5\"><b>Numerics</b></td>\n+    </tr>\n+    <tr>\n+      <td>26.4</td>\n+      <td>Random number generation</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.1</td>\n+      <td>Requirements</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.2</td>\n+      <td>Header <code>&lt;random&gt;</code> synopsis</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.3</td>\n+      <td>Random number engine class templates</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.3.1</td>\n+      <td>Class template <code>linear_congruential_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.3.2</td>\n+      <td>Class template <code>mersenne_twister_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.3.3</td>\n+      <td>Class template <code>subtract_with_carry_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.4</td>\n+      <td>Random number engine adaptor class templates</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>26.4.4.1</td>\n+      <td>Class template <code>discard_block_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.4.2</td>\n+      <td>Class template <code>independent_bits_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.4.3</td>\n+      <td>Class template <code>shuffle_order_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.4.4</td>\n+      <td>Class template <code>xor_combine_engine</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>operator()() per N2079</td>\n+    </tr>\n+    <tr>\n+      <td>26.4.5</td>\n+      <td>Engines and engine adaptors with predefined parameters</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.6</td>\n+      <td>Class <code>random_device</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.7</td>\n+      <td>Utilities</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.7.1</td>\n+      <td>Class <code>seed_seq</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.7.2</td>\n+      <td>Function template <code>generate_cannonical</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8</td>\n+      <td>Random number generation class templates</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.1</td>\n+      <td>Uniform distributions</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.1</td>\n+      <td>Class template <code>uniform_int_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.1</td>\n+      <td>Class template <code>uniform_real_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+   <tr>\n+      <td>26.4.8.2</td>\n+      <td>Bernoulli distributions</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>26.4.8.2.1</td>\n+      <td>Class <code>bernoulli_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.2.2</td>\n+      <td>Class template <code>binomial_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.2.3</td>\n+      <td>Class template <code>geometric_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.2.4</td>\n+      <td>Class template <code>negative_binomial_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3</td>\n+      <td>Poisson distributions</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3.1</td>\n+      <td>Class template <code>poisson_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3.2</td>\n+      <td>Class template <code>exponential_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3.3</td>\n+      <td>Class template <code>gamma_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3.4</td>\n+      <td>Class template <code>weibull_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.3.5</td>\n+      <td>Class template <code>extreme_value_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4</td>\n+      <td>Normal distributions</td>\n+      <td></td>\n+      <td></td>\n+      <td>partial</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.1</td>\n+      <td>Class template <code>normal_distribution</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.2</td>\n+      <td>Class template <code>lognormal_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.3</td>\n+      <td>Class template <code>chi_squared_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.4</td>\n+      <td>Class template <code>cauchy_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.5</td>\n+      <td>Class template <code>fisher_f_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.4.6</td>\n+      <td>Class template <code>student_t_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.5</td>\n+      <td>Sampling distributions</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.5.1</td>\n+      <td>Class template <code>discrete_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.5.1</td>\n+      <td>Class template <code>piecewise_constant_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>26.4.8.5.1</td>\n+      <td>Class template <code>general_pdf_distribution</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+\n+   <tr>\n+      <td><b>28</b></td>\n+      <td colspan=\"5\"><b>Regular expressions</b></td>\n+    </tr>\n+    <tr>\n+      <td>28.1</td>\n+      <td>Definitions</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.2</td>\n+      <td>Requirements</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.3</td>\n+      <td>Regular expressions summary</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.4</td>\n+      <td>Header <code>&lt;regex&gt;</code> synopsis</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.5</td>\n+      <td>Namespace <code>tr1::regex_constants</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.5.1</td>\n+      <td>Bitmask Type <code>syntax_option_type</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.5.2</td>\n+      <td>Bitmask Type <code>regex_constants::match_flag_type</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.5.3</td>\n+      <td>Implementation defined <code>error_type</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.6</td>\n+      <td>Class <code>regex_error</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.7</td>\n+      <td>Class template <code>regex_traits</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8</td>\n+      <td>Class template <code>basic_regex</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.1</td>\n+      <td><code>basic_regex</code> constants</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.2</td>\n+      <td><code>basic_regex</code> constructors</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.3</td>\n+      <td><code>basic_regex</code> assign</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.4</td>\n+      <td><code>basic_regex</code> constant operations</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.5</td>\n+      <td><code>basic_regex</code> locale</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.6</td>\n+      <td><code>basic_regex</code> swap</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.7</td>\n+      <td><code>basic_regex</code> non-member functions</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.8.7.1</td>\n+      <td><code>basic_regex</code> non-member swap</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.9</td>\n+      <td>Class template <code>sub_match</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.9.1</td>\n+      <td><code>sub_match</code> members</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.9.2</td>\n+      <td><code>sub_match</code> non-member operators</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10</td>\n+      <td>Class template <code>match_results</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.1</td>\n+      <td><code>match_results</code> constructors</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.2</td>\n+      <td><code>match_results</code> size</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.3</td>\n+      <td><code>match_results</code> element access</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.4</td>\n+      <td><code>match_results</code> formatting</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.5</td>\n+      <td><code>match_results</code> allocator</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.10.6</td>\n+      <td><code>match_results</code> swap</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.11</td>\n+      <td>Regular expression algorithms</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.11.1</td>\n+      <td>exceptions</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.11.2</td>\n+      <td><code>regex_match</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.11.3</td>\n+      <td><code>regex_search</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.11.4</td>\n+      <td><code>regex_replace</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12</td>\n+      <td>Regular expression Iterators</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.1</td>\n+      <td>Class template <code>regex_iterator</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.1.1</td>\n+      <td><code>regex_iterator</code> constructors</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.1.2</td>\n+      <td><code>regex_iterator</code> comparisons</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.1.3</td>\n+      <td><code>regex_iterator</code> dereference</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.1.4</td>\n+      <td><code>regex_iterator</code> increment</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.2</td>\n+      <td>Class template <code>regex_token_iterator</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.2.1</td>\n+      <td><code>regex_token_iterator</code> constructors</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.2.2</td>\n+      <td><code>regex_token_iterator</code> comparisons</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.2.3</td>\n+      <td><code>regex_token_iterator</code> dereference</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.12.2.4</td>\n+      <td><code>regex_token_iterator</code> increment</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>28.13</td>\n+      <td>Modified ECMAScript regular expression grammar</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td><b>C</b></td>\n+      <td colspan=\"5\"><b>C compatibility</b></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1</td>\n+      <td>Additions to header <code>&lt;complex&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.2</td>\n+      <td>Function <code>acos</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.3</td>\n+      <td>Function <code>asin</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.4</td>\n+      <td>Function <code>atan</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.5</td>\n+      <td>Function <code>acosh</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.6</td>\n+      <td>Function <code>asinh</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.7</td>\n+      <td>Function <code>atanh</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.8</td>\n+      <td>Function <code>fabs</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.1.9</td>\n+      <td>Additional Overloads</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.2</td>\n+      <td>Header <code>&lt;ccomplex&gt;</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td>DR 551</td>\n+    </tr>\n+    <tr>\n+      <td>C2.3</td>\n+      <td>Header <code>&lt;complex.h&gt;</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td>DR 551</td>\n+    </tr>\n+    <tr>\n+      <td>C2.4</td>\n+      <td>Additions to header <code>&lt;cctype&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.4.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.4.2</td>\n+      <td>Function <code>isblank</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.5</td>\n+      <td>Additions to header <code>&lt;ctype.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.6</td>\n+      <td>Header <code>&lt;cfenv&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.6.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.6.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.7</td>\n+      <td>Header <code>&lt;fenv.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.8</td>\n+      <td>Additions to header <code>&lt;cfloat&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.9</td>\n+      <td>Additions to header <code>&lt;float.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.10</td>\n+      <td>Additions to header <code>&lt;ios&gt;</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.10.1</td>\n+      <td>Synopsis</td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.10.2</td>\n+      <td>Function <code>hexfloat</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.11</td>\n+      <td>Header <code>&lt;cinttypes&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.11.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>DR 557</td>\n+    </tr>\n+    <tr>\n+      <td>C2.11.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.12</td>\n+      <td>Header <code>&lt;inttypes.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.13</td>\n+      <td>Additions to header <code>&lt;climits&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.14</td>\n+      <td>Additions to header <code>&lt;limits.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.15</td>\n+      <td>Additions to header <code>&lt;locale&gt;</code></td>\n+      <td></td>\n+      <td></td>\n+      <td>missing</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.16</td>\n+      <td>Additions to header <code>&lt;cmath&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.16.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.16.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.16.3</td>\n+      <td>Function template definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.16.4</td>\n+      <td>Additional overloads</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>DR 568; DR 550</td>\n+    </tr>\n+    <tr>\n+      <td>C2.17</td>\n+      <td>Additions to header <code>&lt;math.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.18</td>\n+      <td>Additions to header <code>&lt;cstdarg&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.19</td>\n+      <td>Additions to header <code>&lt;stdarg.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.20</td>\n+      <td>The header <code>&lt;cstdbool&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.21</td>\n+      <td>The header <code>&lt;stdbool.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.22</td>\n+      <td>The header <code>&lt;cstdint&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.22.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.22.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.23</td>\n+      <td>The header <code>&lt;stdint.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.24</td>\n+      <td>Additions to header <code>&lt;cstdio&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.24.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.24.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.24.3</td>\n+      <td>Additional format specifiers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>C library responsibility</td>\n+    </tr>\n+    <tr>\n+      <td>C2.24.4</td>\n+      <td>Additions to header <code>&lt;stdio.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.25</td>\n+      <td>Additions to header <code>&lt;cstdlib&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.25.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.25.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.25.3</td>\n+      <td>Function <code>abs</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.25.4</td>\n+      <td>Function <code>div</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.26</td>\n+      <td>Additions to header <code>&lt;stdlib.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.27</td>\n+      <td>Header <code>&lt;ctgmath&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>DR 551</td>\n+    </tr>\n+    <tr>\n+      <td>C2.28</td>\n+      <td>Header <code>&lt;tgmath.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>DR 551</td>\n+    </tr>\n+    <tr>\n+      <td>C2.29</td>\n+      <td>Additions to header <code>&lt;ctime&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>C library responsibility</td>\n+    </tr>\n+    <tr>\n+      <td>C2.30</td>\n+      <td>Additions to header <code>&lt;cwchar&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.30.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.30.2</td>\n+      <td>Definitions</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.30.3</td>\n+      <td>Additional wide format specifiers</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td>C library responsibility</td>\n+    </tr>\n+    <tr>\n+      <td>C2.31</td>\n+      <td>Additions to header <code>&lt;wchar.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.32</td>\n+      <td>Additions to header <code>&lt;cwctype&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.32.1</td>\n+      <td>Synopsis</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.32.2</td>\n+      <td>Function <code>iswblank</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>C2.33</td>\n+      <td>Additions to header <code>&lt;wctype.h&gt;</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td><b>D</b></td>\n+      <td colspan=\"5\"><b>Compatibility Features</b></td>\n+    </tr>\n+    <tr>\n+      <td>D.6</td>\n+      <td>Old iostream members</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>D.8</td>\n+      <td>Binders</td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td><a href=\"http://gcc.gnu.org/PR33911\">33911</a></td>\n+    </tr>\n+    <tr>\n+      <td>D.9</td>\n+      <td>Class template <code>auto_ptr</code></td>\n+      <td>done</td>\n+      <td></td>\n+      <td></td>\n+      <td><a href=\"http://gcc.gnu.org/PR33911\">33911</a></td>\n+    </tr>\n+\n+  </tbody>\n+</table>\n+\n+<h3>Footnotes</h3>\n+\n+<ol>\n+\n+  <li>\n+    <a name=\"1\"/>\n+    The shared_ptr implementation uses some code from the\n+    <a href=\"http://www.boost.org/libs/smart_ptr/shared_ptr.htm\">Boost \n+    shared_ptr</a> library.\n+  </li>\n+\n+</ol>\n+\n+<p>\n+Please send FSF &amp; GNU inquiries &amp; questions to\n+<a href=\"mailto:gnu@gnu.org\">gnu@gnu.org</a>.\n+There are also <a href=\"http://www.gnu.org/home.html#ContactInfo\">other ways\n+to contact</a> the FSF.\n+</p>\n+\n+<p>\n+These pages are maintained by\n+<a href=\"http://gcc.gnu.org/about.html\">the GCC team</a>.\n+</p>\n+\n+<address>\n+For questions related to the use of GCC, please consult these web\n+pages and the <a href=\"http://gcc.gnu.org/onlinedocs/\">GCC manuals</a>. If\n+that fails, the <a href=\"mailto:gcc-help@gcc.gnu.org\">gcc-help@gcc.gnu.org</a>\n+mailing list might help.<br />\n+Please send comments on these web pages and the development of GCC to our\n+developer mailing list at <a href=\"mailto:gcc@gnu.org\">gcc@gnu.org</a>\n+or <a href=\"mailto:gcc@gcc.gnu.org\">gcc@gcc.gnu.org</a>.  All of our lists\n+have <a href=\"http://gcc.gnu.org/lists.html\">public archives</a>.\n+</address>\n+\n+<p>\n+Copyright (C) Free Software Foundation, Inc.,\n+51 Franklin St, Fifth Floor, Boston, MA 02110, USA.\n+</p>\n+<p>\n+Verbatim copying and distribution of this entire article is\n+permitted in any medium, provided this notice is preserved.\n+</p>\n+\n+<table width=\"100%\" border=\"0\">\n+<tr>\n+  <td>\n+    <!-- IGNORE DIFF -->Last modified 2007-10-30\n+  </td>\n+  <td align=\"right\" valign=\"bottom\">\n+    <a href=\"http://validator.w3.org/check/referer\">\n+        <img src=\"http://www.w3.org/Icons/valid-xhtml10\"\n+       alt=\"Valid XHTML 1.0\" border=\"0\" width=\"88\" height=\"31\" />\n+    </a>\n+  </td>\n+</tr>\n+</table>\n+\n+</body>\n+</html>"}, {"sha": "7865e6499822cc5ac2a485b462b775fea26522a7", "filename": "libstdc++-v3/docs/html/17_intro/c++1998_status.html", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B1998_status.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B1998_status.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fc%2B%2B1998_status.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -1,3 +1,4 @@\n+<pre>\n \n    Completion Checklist for the Standard C++ Library\n    Updated: 2003-04-25\n@@ -6000,3 +6001,4 @@\n M     char* str();\n     };\n \n+</pre>\n\\ No newline at end of file", "previous_filename": "libstdc++-v3/docs/html/17_intro/CHECKLIST"}, {"sha": "afb17f5efd6432ecdec01b63dd728d0dd9bc8f82", "filename": "libstdc++-v3/docs/html/17_intro/concept_check.diff", "status": "removed", "additions": 0, "deletions": 382, "changes": 382, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconcept_check.diff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconcept_check.diff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconcept_check.diff?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,382 +0,0 @@\n-\n-Changes made while bringing boost/concept_check.hpp to v3's concept_check.h:\n-\n-1)  File format changed from DOS to Unix.\n-2)  Boost config.hpp and other workaround files dropped (unneeded in g++ v3).\n-3)  Conditionally-compiled code depending on those \"breakage\" macros was\n-    removed, or not, depending on the macro, so that the macros themselves\n-    are gone.  Since the same code would always be compiled, let's make it\n-    easier on the reader and a few milliseconds faster for cpplib.\n-4)  Tests for NDEBUG were removed; if NDEBUG is defined, none of the checking\n-    code will even be included.\n-5)  BOOST_CLASS_REQUIRES* changed to accept a namespace parameter.\n-6)  SameTypeConcept added (simple wrapper around existing code).\n-7)  An unused variable in OutputIteratorConcept was removed.\n-\n-At checkin, this was the exact diff, modulo the end-of-line character changes:\n-\n-\n---- concept_check.hpp.orig\tSun Apr  1 08:59:46 2001\n-+++ boost_concept_check.h\tMon Apr  2 18:56:41 2001\n-@@ -5,20 +5,15 @@\n- // \"as is\" without express or implied warranty, and with no claim as\n- // to its suitability for any purpose.\n- //\n-+\n-+// GCC Note:  based on version 1.12.0 of the Boost library.\n- #ifndef BOOST_CONCEPT_CHECKS_HPP\n- #define BOOST_CONCEPT_CHECKS_HPP\n- \n--#include <boost/config.hpp>\n--#include <boost/iterator.hpp>\n--#include <boost/iterator.hpp>\n--#include <utility>\n--#include <boost/pending/limits.hpp>\n--\n--#if (__GNUC__) || defined(__KCC) || defined(__ghs) || defined(__MWERKS__)\n--#define BOOST_FPTR &\n--#else\n--#define BOOST_FPTR\n--#endif\n-+#pragma GCC system_header\n-+#include <bits/stl_iterator_base_types.h>    // for traits and tags\n-+#include <utility>                           // for pair<>\n-+\n- \n- namespace boost {\n- \n-@@ -27,80 +22,64 @@\n- template <class Concept>\n- void function_requires()\n- {\n--#if !defined(NDEBUG)\n--  void (Concept::*x)() = BOOST_FPTR Concept::constraints;\n-+  void (Concept::*x)() = &Concept::constraints;\n-   ignore_unused_variable_warning(x);\n--#endif\n- }\n- \n--// The BOOST_CLASS_REQUIRES macros use function pointers as\n--// template parameters, which VC++ does not support.\n--\n--#if defined(BOOST_NO_FUNCTION_PTR_TEMPLATE_PARAMETERS)\n--\n--#define BOOST_CLASS_REQUIRES(type_var, concept)\n--#define BOOST_CLASS_REQUIRES2(type_var1, type_var2, concept)\n--#define BOOST_CLASS_REQUIRES3(type_var1, type_var2, type_var3, concept)\n--#define BOOST_CLASS_REQUIRES4(type_var1, type_var2, type_var3, type_var4, concept)\n- \n--#else\n--\n--#define BOOST_CLASS_REQUIRES(type_var, concept) \\\n--  typedef void (concept <type_var>::* func##type_var##concept)(); \\\n-+#define BOOST_CLASS_REQUIRES(type_var, ns, concept) \\\n-+  typedef void (ns::concept <type_var>::* func##type_var##concept)(); \\\n-   template <func##type_var##concept _Tp1> \\\n-   struct concept_checking_##type_var##concept { }; \\\n-   typedef concept_checking_##type_var##concept< \\\n--    BOOST_FPTR concept <type_var>::constraints> \\\n-+    &ns::concept <type_var>::constraints> \\\n-     concept_checking_typedef_##type_var##concept\n- \n--#define BOOST_CLASS_REQUIRES2(type_var1, type_var2, concept) \\\n--  typedef void (concept <type_var1,type_var2>::* func##type_var1##type_var2##concept)(); \\\n-+#define BOOST_CLASS_REQUIRES2(type_var1, type_var2, ns, concept) \\\n-+  typedef void (ns::concept <type_var1,type_var2>::* func##type_var1##type_var2##concept)(); \\\n-   template <func##type_var1##type_var2##concept _Tp1> \\\n-   struct concept_checking_##type_var1##type_var2##concept { }; \\\n-   typedef concept_checking_##type_var1##type_var2##concept< \\\n--    BOOST_FPTR concept <type_var1,type_var2>::constraints> \\\n-+    &ns::concept <type_var1,type_var2>::constraints> \\\n-     concept_checking_typedef_##type_var1##type_var2##concept\n- \n--#define BOOST_CLASS_REQUIRES3(type_var1, type_var2, type_var3, concept) \\\n--  typedef void (concept <type_var1,type_var2,type_var3>::* func##type_var1##type_var2##type_var3##concept)(); \\\n-+#define BOOST_CLASS_REQUIRES3(type_var1, type_var2, type_var3, ns, concept) \\\n-+  typedef void (ns::concept <type_var1,type_var2,type_var3>::* func##type_var1##type_var2##type_var3##concept)(); \\\n-   template <func##type_var1##type_var2##type_var3##concept _Tp1> \\\n-   struct concept_checking_##type_var1##type_var2##type_var3##concept { }; \\\n-   typedef concept_checking_##type_var1##type_var2##type_var3##concept< \\\n--    BOOST_FPTR concept <type_var1,type_var2,type_var3>::constraints>  \\\n-+    &ns::concept <type_var1,type_var2,type_var3>::constraints>  \\\n-   concept_checking_typedef_##type_var1##type_var2##type_var3##concept\n- \n--#define BOOST_CLASS_REQUIRES4(type_var1, type_var2, type_var3, type_var4, concept) \\\n--  typedef void (concept <type_var1,type_var2,type_var3,type_var4>::* func##type_var1##type_var2##type_var3##type_var4##concept)(); \\\n-+#define BOOST_CLASS_REQUIRES4(type_var1, type_var2, type_var3, type_var4, ns, concept) \\\n-+  typedef void (ns::concept <type_var1,type_var2,type_var3,type_var4>::* func##type_var1##type_var2##type_var3##type_var4##concept)(); \\\n-   template <func##type_var1##type_var2##type_var3##type_var4##concept _Tp1> \\\n-   struct concept_checking_##type_var1##type_var2##type_var3##type_var4##concept { }; \\\n-   typedef concept_checking_##type_var1##type_var2##type_var3##type_var4##concept< \\\n--    BOOST_FPTR concept <type_var1,type_var2,type_var3,type_var4>::constraints>  \\\n-+    &ns::concept <type_var1,type_var2,type_var3,type_var4>::constraints>  \\\n-     concept_checking_typedef_##type_var1##type_var2##type_var3##type_var4##concept\n- \n- \n--#endif\n--\n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n- template <class T, class U>\n- struct require_same { };\n- \n- template <class T>\n- struct require_same<T,T> { typedef T type; };\n--#else\n--// This version does not perform checking, but will not do any harm.\n--template <class T, class U>\n--struct require_same { typedef T type; };\n--#endif\n-+\n-+  template <class T, class U>\n-+  struct SameTypeConcept\n-+  {\n-+    void constraints() {\n-+      typedef typename require_same<T, U>::type req;\n-+    }\n-+  };\n- \n-   template <class T>\n-   struct IntegerConcept {\n-     void constraints() { \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-       errortype_must_be_an_integer_type();\n--#endif      \n-     }\n-   };\n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <> struct IntegerConcept<short> { void constraints() {} };\n-   template <> struct IntegerConcept<unsigned short> { void constraints() {} };\n-   template <> struct IntegerConcept<int> { void constraints() {} };\n-@@ -108,32 +87,24 @@\n-   template <> struct IntegerConcept<long> { void constraints() {} };\n-   template <> struct IntegerConcept<unsigned long> { void constraints() {} };\n-   // etc.\n--#endif      \n- \n-   template <class T>\n-   struct SignedIntegerConcept {\n-     void constraints() { \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-       errortype_must_be_a_signed_integer_type();\n--#endif      \n-     }\n-   };\n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <> struct SignedIntegerConcept<short> { void constraints() {} };\n-   template <> struct SignedIntegerConcept<int> { void constraints() {} };\n-   template <> struct SignedIntegerConcept<long> { void constraints() {} };\n-   // etc.\n--#endif      \n- \n-   template <class T>\n-   struct UnsignedIntegerConcept {\n-     void constraints() { \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-       errortype_must_be_an_unsigned_integer_type();\n--#endif      \n-     }\n-   };\n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <> struct UnsignedIntegerConcept<unsigned short>\n-     { void constraints() {} };\n-   template <> struct UnsignedIntegerConcept<unsigned int>\n-@@ -141,7 +112,6 @@\n-   template <> struct UnsignedIntegerConcept<unsigned long>\n-     { void constraints() {} };\n-   // etc.\n--#endif      \n- \n-   //===========================================================================\n-   // Basic Concepts\n-@@ -159,15 +129,11 @@\n-   struct AssignableConcept\n-   {\n-     void constraints() {\n--#if !defined(_ITERATOR_) // back_insert_iterator broken for VC++ STL\n-       a = a;              // require assignment operator\n--#endif\n-       const_constraints(a);\n-     }\n-     void const_constraints(const TT& b) {\n--#if !defined(_ITERATOR_) // back_insert_iterator broken for VC++ STL\n-       a = b;              // const required for argument to assignment\n--#endif\n-     }\n-     TT a;\n-   };\n-@@ -196,17 +162,13 @@\n-   {\n-     void constraints() {\n-       TT b(a);\n--#if !defined(_ITERATOR_) // back_insert_iterator broken for VC++ STL\n-       a = a;              // require assignment operator\n--#endif\n-       const_constraints(a);\n-       ignore_unused_variable_warning(b);\n-     }\n-     void const_constraints(const TT& b) {\n-       TT c(b);\n--#if !defined(_ITERATOR_) // back_insert_iterator broken for VC++ STL\n-       a = b;              // const required for argument to assignment\n--#endif\n-       ignore_unused_variable_warning(c);\n-     }\n-     TT a;\n-@@ -304,6 +266,9 @@\n-   BOOST_DEFINE_BINARY_OPERATOR_CONSTRAINT(-, SubtractOpConcept);\n-   BOOST_DEFINE_BINARY_OPERATOR_CONSTRAINT(%, ModOpConcept);\n- \n-+#undef BOOST_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT\n-+#undef BOOST_DEFINE_BINARY_OPERATOR_CONSTRAINT\n-+\n-   //===========================================================================\n-   // Function Object Concepts\n- \n-@@ -318,7 +283,6 @@\n-   };\n- \n- \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <class Func>\n-   struct GeneratorConcept<Func,void>\n-   {\n-@@ -327,7 +291,6 @@\n-     }\n-     Func f;\n-   };\n--#endif\n- \n-   template <class Func, class Return, class Arg>\n-   struct UnaryFunctionConcept\n-@@ -340,7 +303,6 @@\n-     Return r;\n-   };\n- \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <class Func, class Arg>\n-   struct UnaryFunctionConcept<Func, void, Arg> {\n-     void constraints() { \n-@@ -348,7 +310,6 @@\n-     }\n-     Func f;\n-   };\n--#endif\n- \n-   template <class Func, class Return, class First, class Second>\n-   struct BinaryFunctionConcept\n-@@ -362,7 +323,6 @@\n-     Return r;\n-   };\n- \n--#if !defined BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION\n-   template <class Func, class First, class Second>\n-   struct BinaryFunctionConcept<Func, void, First, Second>\n-   {\n-@@ -373,7 +333,6 @@\n-     First first;\n-     Second second;\n-   };\n--#endif\n- \n-   template <class Func, class Arg>\n-   struct UnaryPredicateConcept\n-@@ -422,9 +381,7 @@\n-       function_requires< AssignableConcept<TT> >();\n-       function_requires< DefaultConstructibleConcept<TT> >();\n-       function_requires< EqualityComparableConcept<TT> >();\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-       typedef typename std::iterator_traits<TT>::value_type V;\n--#endif\n-       (void)*i;           // require dereference operator\n-     }\n-     TT i;\n-@@ -446,7 +403,6 @@\n-     void constraints() {\n-       function_requires< TrivialIteratorConcept<TT> >();\n-       // require iterator_traits typedef's\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-       typedef typename std::iterator_traits<TT>::difference_type D;\n-       function_requires< SignedIntegerConcept<D> >();\n-       typedef typename std::iterator_traits<TT>::reference R;\n-@@ -455,7 +411,6 @@\n-       function_requires< ConvertibleConcept<\n-         typename std::iterator_traits<TT>::iterator_category,\n-         std::input_iterator_tag> >();\n--#endif\n-       ++i;                // require preincrement operator\n-       i++;                // require postincrement operator\n-     }\n-@@ -471,7 +426,7 @@\n-       i++;                // require postincrement operator\n-       *i++ = t;           // require postincrement and assignment\n-     }\n--    TT i, j;\n-+    TT i;\n-     ValueT t;\n-   };\n- \n-@@ -480,14 +435,12 @@\n-   {\n-     void constraints() {\n-       function_requires< InputIteratorConcept<TT> >();\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-       function_requires< ConvertibleConcept<\n-         typename std::iterator_traits<TT>::iterator_category,\n-         std::forward_iterator_tag> >();\n-       typedef typename std::iterator_traits<TT>::reference reference;\n-       reference r = *i;\n-       ignore_unused_variable_warning(r);\n--#endif\n-     }\n-     TT i;\n-   };\n-@@ -507,11 +460,9 @@\n-   {\n-     void constraints() {\n-       function_requires< ForwardIteratorConcept<TT> >();\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-       function_requires< ConvertibleConcept<\n-         typename std::iterator_traits<TT>::iterator_category,\n-         std::bidirectional_iterator_tag> >();\n--#endif\n-       --i;                // require predecrement operator\n-       i--;                // require postdecrement operator\n-     }\n-@@ -536,12 +487,10 @@\n-     void constraints() {\n-       function_requires< BidirectionalIteratorConcept<TT> >();\n-       function_requires< ComparableConcept<TT> >();\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-       function_requires< ConvertibleConcept<\n-         typename std::iterator_traits<TT>::iterator_category,\n-         std::random_access_iterator_tag> >();\n-       typedef typename std::iterator_traits<TT>::reference R;\n--#endif\n- \n-       i += n;             // require assignment addition operator\n-       i = i + n; i = n + i; // require addition with difference type\n-@@ -552,11 +501,7 @@\n-     }\n-     TT a, b;\n-     TT i, j;\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-     typename std::iterator_traits<TT>::difference_type n;\n--#else\n--    std::ptrdiff_t n;\n--#endif\n-   };\n- \n-   template <class TT>\n-@@ -568,11 +513,7 @@\n-       i[n] = *i;                  // require element access and assignment\n-     }\n-     TT i;\n--#ifndef BOOST_NO_STD_ITERATOR_TRAITS\n-     typename std::iterator_traits<TT>::difference_type n;\n--#else\n--    std::ptrdiff_t n;\n--#endif\n-   };\n- \n-   //===========================================================================\n-"}, {"sha": "1c9acf2e1376113aa998372f06e6390ecf04f371", "filename": "libstdc++-v3/docs/html/17_intro/configury.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -9,7 +9,7 @@\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n    <meta name=\"DESCRIPTION\" content=\"configury for libstdc++\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 configury</title>\n+   <title>libstdc++ configury</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type='text/css' />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n  title=\"GNU C++ Standard Library\" />\n@@ -26,7 +26,7 @@ <h1><code>&gt; look</code></h1>\n \n \n <hr />\n-<h2>Notes on libstdc++-v3 configury</h2>\n+<h2>Notes on libstdc++ configury</h2>\n <blockquote>\n No problem is insoluble in all conceivable circumstances.<br />\n -- The Cosmic AC,"}, {"sha": "a0d926d71c59166f03107c4a20cf7cdb3912ab73", "filename": "libstdc++-v3/docs/html/17_intro/headers_cc.txt", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,83 +0,0 @@\n-// 1999-05-12 bkoz\n-\n-// Copyright (C) 1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// 17.4.1.2 Headers\n-\n-\n-// \"C++\" headers\n-#include <algorithm>\n-#include <bitset>\n-#include <complex>\n-#include <deque>\n-#include <exception>\n-#include <fstream>\n-#include <functional>\n-#include <iomanip>\n-#include <ios>\n-#include <iosfwd>\n-#include <iostream>\n-#include <istream>\n-#include <iterator>\n-#include <limits>\n-#include <list>\n-#include <locale>\n-#include <map>\n-#include <memory>\n-#include <new>\n-#include <numeric>\n-#include <ostream>\n-#include <queue>\n-#include <set>\n-#include <sstream>\n-#include <stack>\n-#include <stdexcept>\n-#include <streambuf>\n-#include <string>\n-#include <typeinfo>\n-#include <utility>\n-#include <valarray>\n-#include <vector>\n-\n-// \"C\" headers\n-#include <cassert>\n-#include <cctype>\n-#include <cerrno>\n-#include <cfloat>\n-#include <ciso646>\n-#include <climits>\n-#include <clocale>\n-#include <cmath>\n-#include <csetjmp>\n-#include <csignal>\n-#include <cstdarg>\n-#include <cstddef>\n-#include <cstdio>\n-#include <cstdlib>\n-#include <cstring>\n-#include <ctime>\n-\n-// \"C\" headers that might not work if wchar_t support is disabled.\n-#include <bits/c++config.h>\n-#if _GLIBCXX_USE_WCHAR_T\n-  #include <cwchar>\n-  #include <cwctype>\n-#endif\n-\n-int main() { return 0; }"}, {"sha": "828959c841c9566b86e0fd1ab6720d66d209a948", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 244, "deletions": 90, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,11 +6,11 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n-   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards), Benjamin Kosnik, Felix Natter\" />\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, gcc, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for libstdc++ chapter 17.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 17: Library Introduction</title>\n+   <title>libstdc++ HOWTO:  Chapter 17: Library Introduction</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n  title=\"GNU C++ Standard Library\" />\n@@ -34,33 +34,175 @@ <h1 class=\"centered\"><a name=\"top\">Chapter 17:  Library Introduction</a></h1>\n <hr />\n <h1>Contents</h1>\n <ul>\n-   <li><a href=\"#2\">The Standard C++ header files</a></li>\n-   <li><a href=\"#3\">The Standard C++ library and multithreading</a></li>\n-   <li><a href=\"#4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a></li>\n-   <li><a href=\"porting-howto.html\">Porting HOWTO</a></li>\n-   <li><a href=\"#5\">Behavior specific to libstdc++-v3</a></li>\n-   <li><a href=\"#6\">Preprocessor macros controlling the library</a></li>\n+   <li><a href=\"#2.1\">Header Files</a></li>\n+   <li><a href=\"#5\">Implementation specific behavior</a></li>\n+   <li><a href=\"#6\">Macros</a></li>\n+   <li><a href=\"#3\">Multithreading</a></li>\n </ul>\n \n <hr />\n \n <!-- ####################################################### -->\n \n-<h2><a name=\"2\">The Standard C++ header files</a></h2>\n-   <p>The Standard C++ Library specifies 50 header files that must be\n+<h2><a name=\"2.1\">Header Files</a></h2>\n+   <p>The C++ standard specifies 50 header files that must be\n       available to all hosted implementations.  Actually, the word\n       &quot;files&quot; is a misnomer, since the contents of the headers\n       don't necessarily have to be in any kind of external file.  The\n-      only rule is that when you <code>#include</code> a certain header, the\n+      only rule is that when one <code>#include</code>'s a certain header, the\n       contents of that header, as defined by the Standard, become\n-      available to you, no matter how.\n-   </p>\n-   <p>The names of the headers can be easily seen in\n-      <a href=\"headers_cc.txt\"><code>testsuite/17_intro/headers.cc</code></a>,\n-      which is a small testbed we use to make certain that the headers\n-      all compile and run.\n+      available, no matter how.\n    </p>\n \n+<p>C++98/03 include files:\n+</p>\n+<pre>\n+C++ Library Headers\n+algorithm\tios      \tnew     \tstack\n+bitset\t\tiosfwd   \tnumeric \tstdexcept\n+complex     \tiostream \tostream \tstreambuf\n+    \t\tistream  \tqueue      \tstring\n+deque      \titerator \t\t\t\n+exception  \tlimits   \t\t\ttypeinfo\n+fstream    \tlist     \tset\n+functional \tlocale   \tmap\n+iomanip    \tmemory   \tsstream \t\n+\n+C++ Headers for C Library Facilities\n+cassert   \tcfloat        \tcmath         \tcstddef     \n+ccomplex  \t\t     \tcsetjmp       \tcstdio      \tctime\n+cctype    \tciso646       \tcsignal\t\t\t    \t\n+cerrno    \tclimits       \tcstdarg       \tcstdlib     \tcwchar\n+\t    \tclocale       \t\t      \tcstring     \tcwctype\n+</pre>\n+\n+<p>C++0x include files:\n+</p>\n+<pre>\n+C++ Library Headers\n+algorithm\tios      \tnew     \tstack\n+array      \tiosfwd   \tnumeric \tstdexcept\n+bitset     \tiostream \tostream \tstreambuf\n+complex    \tistream  \tqueue      \tstring\n+deque      \titerator \trandom\t\tsystem_error\n+exception  \tlimits   \tregex      \ttuple\n+fstream    \tlist     \tset        \ttype_traits\n+functional \tlocale   \tmap        \ttypeinfo\n+iomanip    \tmemory   \tsstream \t\n+\n+C++ Headers for C Library Facilities\n+cassert   \tcfloat        \tcmath         \tcstddef     \tctgmath\n+ccomplex  \tcinttypes     \tcsetjmp       \tcstdio      \tctime\n+cctype    \tciso646       \tcsignal       \tcstdint     \tcuchar\n+cerrno    \tclimits       \tcstdarg       \tcstdlib     \tcwchar\n+cfenv     \tclocale       \tcstdbool      \tcstring     \tcwctype\n+</pre>\n+\n+<p>In addition, TR1 includes as:\n+</p>\n+<pre>\n+C++ Library Headers\n+tr1/array, tr1/complex, tr1/functional, tr1/memory, tr1/random,\n+tr1/regex, tr1/tuple, tr1/type_traits, tr1/unordered_map,\n+tr1/unordered_set, tr1/utility\n+\n+C++ Headers for C Library Facilities\n+tr1/cmath, tr1/ccomplex, tr1/cfenv, tr1/cfloat, tr1/cinttypes,\n+tr1/climits, tr1/cstdarg, tr1/cstdbool, tr1/cstdint, tr1/cstdio,\n+tr1/cstdlib, tr1/ctgmath, tr1/ctime, tr1/cwchar, tr1/cwctype\n+\n+C++ Compatibility Headers for C Library Facilities\n+tr1/complex.h, tr1/ctype.h, tr1/float.h, tr1/limits.h, tr1/math.h,\n+tr1/stdarg.h, tr1/stdbool.h, tr1/stdint.h, tr1/stdio.h, tr1/stdlib.h,\n+tr1/tgmath.h, tr1/wchar.h, tr1/wctype.h\n+</pre>\n+\n+<hr />\n+<h2><a name=\"2.2\">Headers and <code>namespace std::</code></a></h2>\n+<p>\n+\tYou should not use the C-headers (except for system-level\n+\theaders) from C++ programs. Instead, you should use a set of\n+\theaders that are named by prepending 'c' and, as usual,\n+\tomitting the extension (.h). For example, instead of using\n+\t<tt>&lt;math.h&gt;</tt>, you\n+\tshould use <tt>&lt;cmath&gt;</tt>. In some cases this has\n+\tthe advantage that the C++-header is more standardized than\n+\tthe C-header (i.e. <tt>&lt;ctime&gt;</tt> (almost)\n+\tcorresponds to either <tt>&lt;time.h&gt;</tt> or <tt>&lt;sys/time.h&gt;</tt>).\n+\n+\tThe standard specifies that if you include the C-style header\n+\t(<tt>&lt;math.h&gt;</tt> in\n+\tthis case), the symbols will be available both in the global\n+\tnamespace and in namespace <code>std::</code> (but\n+\tlibstdc++ does not yet have fully compliant headers) On the\n+\tother hand, if you include only the new header (i.e. <tt>&lt;cmath&gt;</tt>), the symbols\n+\twill only be defined in namespace <code>std::</code>\n+\t(and macros will be converted to inline-functions).\n+      </p>\n+\n+<p>FIXME: this is no longer accurate.</p>\n+\n+<p>\n+\tFor more information on this, and for information on how the\n+\tGNU C++ implementation might reuse (&quot;shadow&quot;) the C\n+\tlibrary-functions, have a look at <a href=\"http://www.cantrip.org/cheaders.html\" target=\"_top\">\n+\t  www.cantrip.org</a>.\n+      </p>\n+\n+<hr />\n+<h2><a name=\"2.5\">Namespace <code>std::</code></a></h2>\n+\n+<p>\n+      One standard requirement is that the library components are defined\n+      in <code>namespace std::</code>. Thus, in order to use these types or\n+      functions, one must do one of two things:\n+</p>\n+\n+      <div class=\"itemizedlist\"><ul type=\"disc\"> <li><p>put a kind of\n+<span class=\"emphasis\"><i>using-declaration</i></span> in your source\n+(either <code>using namespace std;</code> or i.e. <code>using\n+std::string;</code>) This approach works well for individual source files, but\n+should not be used in a global context, like header files.\n+\t  </p></li> <li><p>use a <span class=\"emphasis\"><i>fully\n+qualified name</i></span> for each library symbol\n+(i.e. <code>std::string</code>, <code>std::cout</code>) Always can be\n+used, and usually enhanced, by strategic use of typedefs. (In the\n+cases where the qualified verbage becomes unweidly.)\n+\t  </p></li>\n+</ul>\n+\n+<hr />\n+<h2><a name=\"2.6\">Using namespace composition</code></a></h2>\n+\n+<p>\n+\t<a href=\"http://gtkmm.sourceforge.net\" target=\"_top\">Gtk--</a> defines\n+\tmost of its classes in namespace Gtk::. Thus, it was possible to\n+\tadapt Gtk-- to namespace std:: by using a C++-feature called\n+\t<span class=\"emphasis\"><i>namespace composition</i></span>. This is what happens if\n+\tyou put a <span class=\"emphasis\"><i>using</i></span>-declaration into a\n+\tnamespace-definition: the imported symbol(s) gets imported into the\n+\tcurrently active namespace(s). For example:\n+\t<pre class=\"programlisting\">\n+\t  namespace Gtk {\n+\t  using std::string;\n+\t  class Window { ... }\n+\t  }\n+\t</pre>\n+\tIn this example, <code>std::string</code> gets imported into\n+\tnamespace Gtk::.  The result is that you don't have to use\n+\t<code>std::string</code> in this header, but still\n+\t<code>std::string</code> does not get imported into\n+\tthe global namespace (::) unless the user does\n+\t<code>using namespace Gtk;</code> (which is not recommended\n+\tpractice for Gtk--, so it is not a problem).  Additionally, the\n+\t<code>using</code>-declarations are wrapped in macros that\n+\tare set based on autoconf-tests to either &quot;&quot; or i.e. <code>using\n+\t  std::string;</code> (depending on whether the system has\n+\tlibstdc++ in <code>std::</code> or not).  (ideas from\n+\t<tt>&lt;<a href=\"mailto:llewelly@dbritsch.dsl.xmission.com\">llewelly@dbritsch.dsl.xmission.com</a>&gt;</tt>, Karl Nelson\n+\t<tt>&lt;<a href=\"mailto:kenelson@ece.ucdavis.edu\">kenelson@ece.ucdavis.edu</a>&gt;</tt>)\n+</p>\n+\n <hr />\n <h2><a name=\"3\">The Standard C++ library and multithreading</a></h2>\n    <p>This section discusses issues surrounding the proper compilation\n@@ -119,7 +261,7 @@ <h2><a name=\"3\">The Standard C++ library and multithreading</a></h2>\n       href=\"../23_containers/howto.html#3\">23</a> (containers), and <a\n       href=\"../27_io/howto.html#9\">27</a> (I/O) for more information.\n    </p>\n-   <p>The libstdc++-v3 library (unlike libstdc++-v2, all of it, not\n+   <p>The libstdc++ library (unlike libstdc++-v2, all of it, not\n       just the STL) has been designed so that multithreaded\n       applications using it may be written.  The first problem is\n       finding a <em>fast</em> method of implementation portable to all\n@@ -162,21 +304,7 @@ <h2><a name=\"3\">The Standard C++ library and multithreading</a></h2>\n    </p>\n \n <hr />\n-<h2><a name=\"4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a></h2>\n-   <p>The new-style headers are fully supported in libstdc++-v3.  The compiler\n-      itself fully supports namespaces, including <code>std::</code>.\n-   </p>\n-   <p>For those of you new to ISO C++98, no, that isn't a typo, the headers\n-      really have new names.  Marshall Cline's C++ FAQ Lite has a good\n-      explanation in\n-<a href=\"http://www.parashift.com/c++-faq-lite/coding-standards.html#faq-27.4\">item [27.4]</a>.\n-   </p>\n-   <p>Return <a href=\"#top\">to top of page</a> or\n-      <a href=\"../faq/index.html\">to the FAQ</a>.\n-   </p>\n-\n-<hr />\n-<h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n+<h2><a name=\"5\">Behavior specific to libstdc++</a></h2>\n    <p>The ISO standard defines the following phrase:\n    </p>\n      <blockquote><dl>\n@@ -209,7 +337,7 @@ <h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n       <a href=\"../18_support/howto.html#1\">here</a>.\n    </p>\n    <p><strong>[18.3]/8</strong> Even though it's listed in the library\n-      sections, libstdc++-v3 has zero control over what the cleanup code hands\n+      sections, libstdc++ has zero control over what the cleanup code hands\n       back to the runtime loader.  Talk to the compiler people.  :-)\n    </p>\n    <p><strong>[18.4.2.1]/5</strong> (bad_alloc),<br />\n@@ -289,74 +417,100 @@ <h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n    </p>\n \n <hr />\n-<h2><a name=\"6\">Preprocessor macros controlling the library</a></h2>\n-   <p>Some of the semantics of the libstdc++-v3 implementation are\n-      controlled by preprocessor macros, both during build/installation and\n-      during compilation of user code.  Many of these choices are made when\n-      the library is built and installed (actually, during\n-      <a href=\"../configopts.html\">the configuration step</a>, with the\n-      various --enable/--disable choices being translated to #define/#undef).\n-   </p>\n-   <p>All library macros begin with <code>_GLIBCPP_</code> in earlier\n-      versions, and <code>_GLIBCXX_</code> in later versions.  The fact that\n-      these symbols start with a leading underscore should give you a clue\n-      that (by default) they aren't meant to be changed by the user.  :-)\n-   </p>\n-   <p>These macros are all gathered in the file <code>c++config.h</code>,\n-      which is generated during installation.  <strong>You must assume that\n-      these macros cannot be redefined by your own code</strong>, unless we\n-      document otherwise here.  Some of the choices control code which has\n-      already been compiled (i.e., libstdc++.a/.so).  If you explicitly\n-      #define or #undef these macros, the <em>headers</em> may see different\n-      code paths, but the <em>libraries</em> which you link against will not.\n-      If you want to experiment with different values, you must change the\n-      config headers before building/installing the library.\n-   </p>\n-   <p>Below are macros which, for 3.1 and later, you may change yourself,\n-      in your own code with #define/#undef or with -D/-U compiler flags.\n-      The default state of the symbol is listed.  &quot;Configurable&quot;\n-      (or &quot;Not configurable&quot;) means that the symbol is initially\n-      chosen (or not) based on --enable/--disable options at configure time.\n-      For 3.1 through 3.3, the prefixes are <code>_GLIBCPP_</code>.\n+<h2><a name=\"6\">Macros for libstdc++</a></h2>\n+\n+   <p>All pre-processor switches and configurations are all gathered\n+      in the file <code>c++config.h</code>, which is generated during\n+      the libstdc++ configuration and build process, and included by\n+      files part of the public libstdc++ API. Most of these macros\n+      should not be used by consumers of libstdc++, and are reserved\n+      for internal implementation use. <strong>These macros cannot be\n+      redefined</strong>. However, a select handful of these macro\n+      control libstdc++ extensions and extra features, or provide\n+      versioning information for the API, and are able to be used.\n    </p>\n+\n+   <p>All library macros begin with <code>_GLIBCXX_</code> (except for\n+   versions 3.1.x to 3.3.x, which use <code>_GLIBCPP_</code>).\n+   </p>\n+\n+   <p>Below is the macro which users may check for library version\n+      information. </p>\n+\n+    <dl>\n+    <dt><code>__GLIBCXX__</code></dt> <dd>The current version of\n+    libstdc++ in compressed ISO date format, form of an unsigned\n+    long. For details on the value of this particular macro for a\n+    particular release, please consult this <a href=\"abi.html\">\n+    document</a>.</dd> </dl>\n+\n+   <p>Below are the macros which users may change with #define/#undef or\n+      with -D/-U compiler flags.  The default state of the symbol is\n+      listed.</p>\n+\n+   <p>&quot;Configurable&quot; (or &quot;Not configurable&quot;) means\n+      that the symbol is initially chosen (or not) based on\n+      --enable/--disable options at library build and configure time\n+      (documented <a href=\"../configopts.html\">here</a>), with the\n+      various --enable/--disable choices being translated to\n+      #define/#undef).\n+   </p> \n+\n+   <p> &quot;ABI&quot; means that changing from the default value may\n+  mean changing the ABI of compiled code. In other words, these\n+  choices control code which has already been compiled (i.e., in a\n+  binary such as libstdc++.a/.so).  If you explicitly #define or\n+  #undef these macros, the <em>headers</em> may see different code\n+  paths, but the <em>libraries</em> which you link against will not.\n+  Experimenting with different values with the expectation of\n+  consistent linkage requires changing the config headers before\n+  building/installing the library.\n+   </p>   \n+\n     <dl>\n     <dt><code>_GLIBCXX_DEPRECATED</code></dt>\n-    <dd>Undefined by default.  Not configurable.  Turning this on enables\n-        older ARM-style iostreams code, and other anachronisms.  This may be\n-        useful in updating old C++ programs which no longer meet the\n-        requirements of the language.\n-    </dd>\n-    <!--\n-     Can this actually be turned off and still produce a working lib?  Must\n-     check.  -pme\n-     No, it can't.  Hmmm.  -pme\n-    <dt><code>_GLIBCPP_RESOLVE_LIB_DEFECTS</code></dt>\n-    <dd>Defined by default.  Not configurable.  The library follows\n-        corrections and updates from the ISO committee, see\n-        <a href=\"../faq/index.html#5_2\">here</a> and\n-        <a href=\"../ext/howto.html#5\">here</a> for more on this feature.\n-        If you have code which depends on the first version of the standard,\n-        you might try undefining this macro.\n-    </dd>\n-    -->\n-    <dt><code>_GLIBCXX_CONCEPT_CHECKS</code></dt>\n-    <dd>Undefined by default.  Configurable.  When defined, performs\n-        compile-time checking on certain template instantiations to detect\n-        violations of the requirements of the standard.  This is described\n-        in more detail <a href=\"../19_diagnostics/howto.html#3\">here</a>.\n+    <dd>Defined by default. Not configurable. ABI-changing. Turning this off\n+        removes older ARM-style iostreams code, and other anachronisms\n+        from the API.  This macro is dependent on the version of the\n+        standard being tracked, and as a result may give different results for\n+        <code>-std=c++98</code> and <code>-std=c++0x</code>. This may\n+        be useful in updating old C++ code which no longer meet the\n+        requirements of the language, or for checking current code\n+        against new language standards.  </dd>\n+\n+    <dt><code>_GLIBCXX_FORCE_NEW</code></dt> <dd>Undefined by\n+    default. When defined, memory allocation and allocators controlled\n+    by libstdc++ call operator new/delete without caching and\n+    pooling. Configurable via\n+    <code>--enable-libstdcxx-allocator</code>. ABI-changing.</a>\n     </dd>\n+\n+\n+    <dt><code>_GLIBCXX_CONCEPT_CHECKS</code></dt> <dd>Undefined by\n+    default.  Configurable via <code>--enable-concept-checks</code>.\n+    When defined, performs compile-time checking on certain template\n+    instantiations to detect violations of the requirements of the\n+    standard.  This is described in more detail <a\n+    href=\"../19_diagnostics/howto.html#3\">here</a>.</dd>\n+\n     <dt><code>_GLIBCXX_DEBUG</code></dt>\n-    <dd>Undefined by default. Configurable. When defined, compiles\n-    user code using the <a href=\"../debug.html#safe\">libstdc++ debug\n+    <dd>Undefined by default. When defined, compiles\n+    user code using the <a href=\"../ext/debug.html#safe\">libstdc++ debug\n     mode</a>.\n     </dd>\n     <dt><code>_GLIBCXX_DEBUG_PEDANTIC</code></dt>\n-    <dd>Undefined by default. Configurable. When defined while\n-    compiling with the <a href=\"../debug.html#safe\">libstdc++ debug\n+    <dd>Undefined by default. When defined while\n+    compiling with the <a href=\"../ext/debug.html#safe\">libstdc++ debug\n     mode</a>, makes the debug mode extremely picky by making the use\n     of libstdc++ extensions and libstdc++-specific behavior into\n     errors.\n     </dd>\n+    <dt><code>_GLIBCXX_PARALLEL</code></dt>\n+    <dd>Undefined by default. When defined, compiles\n+    user code using the <a href=\"../ext/parallel_mode.html\">libstdc++ parallel\n+    mode</a>.\n+    </dd>\n+\n     <!--\n     <dt><code></code></dt>\n     <dd>"}, {"sha": "294a00892d32f404ad75e798d624d6bb8969cc03", "filename": "libstdc++-v3/docs/html/17_intro/license.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -32,7 +32,7 @@ <h1 class=\"centered\"><a name=\"top\">Licenses for the Library</a></h1>\n <h2>The Code:  Runtime GPL</h2>\n \n <p>The source code of libstdc++ is distributed under version 2 of the\n-   <a href=\"COPYING\">GNU General Public License</a>, with the so-called\n+   <a href=\"COPYING\" type=\"text/plain\">GNU General Public License</a>, with the so-called\n    &quot;runtime exception,&quot; as follows (or see any header or\n    implementation file):\n </p>\n@@ -85,7 +85,7 @@ <h2>The Docs:  GPL, FDL</h2>\n <p>The documentation shipped with the library and made available over the\n    web, excluding the pages generated from source comments, are copyrighted\n    by the Free Software Foundation, and placed under\n-   the <a href=\"COPYING.DOC\">GNU Free Documentation License version 1.1</a>.\n+   the <a href=\"COPYING.DOC\" type=\"text/plain\">GNU Free Documentation License version 1.1</a>.\n    There are no Front-Cover Texts, no Back-Cover Texts, and\n    <!-- as far as I know -->\n    no Invariant Sections."}, {"sha": "d6bedb271ed6e97f195b89bb437687572919cd33", "filename": "libstdc++-v3/docs/html/17_intro/porting-howto.html", "status": "removed", "additions": 0, "deletions": 744, "changes": 744, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,744 +0,0 @@\n-<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n-<html>\n-<head>\n-<meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"Content-Type\">\n-<title>Libstdc++-porting-howto</title>\n-<meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.48\">\n-</head>\n-<body bgcolor=\"white\" text=\"black\" link=\"#0000FF\" vlink=\"#840084\" alink=\"#0000FF\"><div class=\"article\">\n-<div class=\"titlepage\">\n-<div><h1 class=\"title\">\n-<a name=\"libstdc++-porting-howto\"></a>Libstdc++-porting-howto</h1></div>\n-<div><h3 class=\"author\">Felix Natter</h3></div>\n-<div><div class=\"legalnotice\">\n-<p class=\"legalnotice-title\"><b>Legal Notice</b></p>\n-<p>\n-\tThis document can be distributed under the FDL\n-\t(<a href=\"http://www.gnu.org\" target=\"_top\">www.gnu.org</a>)\n-      </p>\n-</div></div>\n-<div><p class=\"pubdate\">Tue Jun  5 20:07:49 2001</p></div>\n-<div><div class=\"revhistory\"><table border=\"1\" width=\"100%\" summary=\"Revision history\">\n-<tr><th align=\"left\" valign=\"top\" colspan=\"3\"><b>Revision History</b></th></tr>\n-<tr>\n-<td align=\"left\">Revision 0.5</td>\n-<td align=\"left\">Thu Jun  1 13:06:50 2000</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">First docbook-version.</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.8</td>\n-<td align=\"left\">Sun Jul 30 20:28:40 2000</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">First released version using docbook-xml\n-\t  + second upload to libstdc++-page.\n-\t</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.9</td>\n-<td align=\"left\">Wed Sep  6 02:59:32 2000</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">5 new sections.</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.9.1</td>\n-<td align=\"left\">Sat Sep 23 14:20:15 2000</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">added information about why file-descriptors are not in the\n-\t  standard</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.9.2</td>\n-<td align=\"left\">Tue Jun  5 20:07:49 2001</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">\n-\t  a fix, added hint on increased portability of C-shadow-headers,\n-\t  added autoconf-test HAVE_CONTAINER_AT\n-\t</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.9.3</td>\n-<td align=\"left\">Fri Jun 29 16:15:56 2001</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">\n-\t  changed signature of nonstandard filebuf-constructor and\n-\t  update the section on filebuf::attach to point to ../ext/howto.html,\n-\t  added link to ../21/strings/howto.html\n-\t  in sec-stringstream, changed &lt;link&gt;-tags to have content\n-\t  (so that these links work),\n-\t  replace &quot;user-space&quot; by &quot;global namespace&quot;\n-\t  add note about gcc 3.0 and shadow-headers\t\t\t\n-\t  add section about ostream::form and istream::scan\n-\t  sec-vector-at: remove hint to modify headers\n-\t  fix spelling error in sec-stringstream\n-\t</td></tr>\n-<tr>\n-<td align=\"left\">Revision 0.9.4</td>\n-<td align=\"left\">Mon Nov  5 17:01:04 2001</td>\n-<td align=\"left\">fnatter</td>\n-</tr>\n-<tr><td align=\"left\" colspan=\"3\">\n-\t  rewrite section 1.1.3 because of gnu.gcc.help-post by\n-\t  Juergen Heinzl\n-\t</td></tr>\n-</table></div></div>\n-<div><div class=\"abstract\">\n-<p><b>Abstract</b></p>\n-<p>\n-\tSome notes on porting applications from libstdc++-2.90 (or earlier\n-\tversions) to libstdc++-v3. Not speaking in terms of the GNU libstdc++\n-\timplementations, this means porting from earlier versions of the\n-\tC++-Standard to ISO 14882.\n-      </p>\n-</div></div>\n-<hr>\n-</div>\n-<div class=\"toc\">\n-<p><b>Table of Contents</b></p>\n-<dl>\n-<dt>1. <a href=\"#sec-nsstd\">Namespace std::</a>\n-</dt>\n-<dd><dl>\n-<dt>1.1.1. <a href=\"#sec-gtkmm-hack\">Using namespace\n-\t  composition if the project uses a separate\n-\tnamespace</a>\n-</dt>\n-<dt>1.1.2. <a href=\"#sec-emptyns\">Defining an empty namespace std</a>\n-</dt>\n-<dt>1.1.3. <a href=\"#sec-avoidfqn\">Avoid to use fully qualified names\n-\t(i.e. std::string)</a>\n-</dt>\n-<dt>1.1.4. <a href=\"#sec-osprojects\">How some open-source-projects deal\n-\twith this</a>\n-</dt>\n-</dl></dd>\n-<dt>2. <a href=\"#sec-nocreate\">There is no ios::nocreate/ios::noreplace\n-      in ISO 14882</a>\n-</dt>\n-<dt>3. <a href=\"#sec-stream::attach\">stream::attach(int\n-\tfd) is not in the standard any more</a>\n-</dt>\n-<dt>4. <a href=\"#sec-headers\">The new headers</a>\n-</dt>\n-<dd><dl>\n-<dt>4.4.1. <a href=\"#sec-cheaders\">New headers replacing C-headers</a>\n-</dt>\n-<dt>4.4.2. <a href=\"#sec-fstream-header\">\n-\t&lt;fstream&gt; does\n-\tnot define std::cout,\n-\tstd::cin etc.</a>\n-</dt>\n-</dl></dd>\n-<dt>5. <a href=\"#sec-iterators\">Iterators</a>\n-</dt>\n-<dt>6. <a href=\"#sec-macros\">\n-      Libc-macros (i.e. isspace from\n-      &lt;cctype&gt;)</a>\n-</dt>\n-<dt>7. <a href=\"#sec-stream-state\">State of streams</a>\n-</dt>\n-<dt>8. <a href=\"#sec-vector-at\">vector::at is missing (i.e. gcc 2.95.x)</a>\n-</dt>\n-<dt>9. <a href=\"#sec-eof\">Using std::char_traits&lt;char&gt;::eof()</a>\n-</dt>\n-<dt>10. <a href=\"#sec-string-clear\">Using string::clear()/string::erase()</a>\n-</dt>\n-<dt>11. <a href=\"#sec-scan-form\">GNU Extensions ostream::form and istream::scan</a>\n-</dt>\n-<dt>12. <a href=\"#sec-stringstream\">Using stringstreams</a>\n-</dt>\n-<dt>13. <a href=\"#sec-about\">About...</a>\n-</dt>\n-</dl>\n-</div>\n-<p>\n-    In the following, when I say portable, I will refer to &quot;portable among ISO\n-    14882-implementations&quot;. On the other hand, if I say &quot;backportable&quot; or\n-    &quot;conservative&quot;, I am talking about &quot;compiles with older\n-    libstdc++-implementations&quot;.\n-  </p>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-nsstd\"></a>Namespace std::</h2></div></div>\n-<p>\n-      The latest C++-standard (ISO-14882) requires that the standard\n-      C++-library is defined in namespace std::. Thus, in order to use\n-      classes from the standard C++-library, you can do one of three\n-      things:\n-      <div class=\"itemizedlist\"><ul type=\"disc\">\n-<li><p>wrap your code in <b>namespace std {\n-\t      ... }</b> =&gt; This is not an option because only symbols\n-\t    from the standard c++-library are defined in namespace std::.\n-\t  </p></li>\n-<li><p>put a kind of\n-\t    <span class=\"emphasis\"><i>using-declaration</i></span> in your source (either\n-\t    <b>using namespace std;</b> or i.e. <b>using\n-\t      std::string;</b>) =&gt; works well for source-files, but\n-\t    cannot be used in header-files.\n-\t  </p></li>\n-<li><p>use a <span class=\"emphasis\"><i>fully qualified name</i></span> for\n-\t    each libstdc++-symbol (i.e. <b>std::string</b>,\n-\t    <b>std::cout</b>) =&gt; can always be used\n-\t  </p></li>\n-</ul></div>\n-<p>\n-      Because there are many compilers which still use an implementation\n-      that does not have the standard C++-library in namespace\n-      <b>std::</b>, some care is required to support these as\n-      well.\n-    </p>\n-<p>\n-      Namespace back-portability-issues are generally not a problem with\n-      g++, because versions of g++ that do not have libstdc++ in\n-      <b>std::</b> use <b>-fno-honor-std</b>\n-      (ignore <b>std::</b>, <b>:: = std::</b>) by\n-      default. That is, the responsibility for enabling or disabling\n-      <b>std::</b> is on the user; the maintainer does not have\n-      to care about it. This probably applies to some other compilers as\n-      well.\n-    </p>\n-<p>\n-      The following sections list some possible solutions to support compilers\n-      that cannot ignore std::.\n-    </p>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-gtkmm-hack\"></a>Using <span class=\"emphasis\"><i>namespace\n-\t  composition</i></span> if the project uses a separate\n-\tnamespace</h3></div></div>\n-<p>\n-\t<a href=\"http://gtkmm.sourceforge.net\" target=\"_top\">Gtk--</a> defines\n-\tmost of its classes in namespace Gtk::. Thus, it was possible to\n-\tadapt Gtk-- to namespace std:: by using a C++-feature called\n-\t<span class=\"emphasis\"><i>namespace composition</i></span>. This is what happens if\n-\tyou put a <span class=\"emphasis\"><i>using</i></span>-declaration into a\n-\tnamespace-definition: the imported symbol(s) gets imported into the\n-\tcurrently active namespace(s). For example:\n-\t<pre class=\"programlisting\">\n-\t  namespace Gtk {\n-\t  using std::string;\n-\t  class Window { ... }\n-\t  }\n-\t</pre>\n-\tIn this example, <b>std::string</b> gets imported into\n-\tnamespace Gtk::.  The result is that you don't have to use\n-\t<b>std::string</b> in this header, but still\n-\t<b>std::string</b> does not get imported into\n-\tthe global namespace (::) unless the user does\n-\t<b>using namespace Gtk;</b> (which is not recommended\n-\tpractice for Gtk--, so it is not a problem).  Additionally, the\n-\t<b>using</b>-declarations are wrapped in macros that\n-\tare set based on autoconf-tests to either &quot;&quot; or i.e. <b>using\n-\t  std::string;</b> (depending on whether the system has\n-\tlibstdc++ in <b>std::</b> or not).  (ideas from\n-\t<tt>&lt;<a href=\"mailto:llewelly@dbritsch.dsl.xmission.com\">llewelly@dbritsch.dsl.xmission.com</a>&gt;</tt>, Karl Nelson\n-\t<tt>&lt;<a href=\"mailto:kenelson@ece.ucdavis.edu\">kenelson@ece.ucdavis.edu</a>&gt;</tt>)\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-emptyns\"></a>Defining an empty namespace std</h3></div></div>\n-<p>\n-\tBy defining an (empty) namespace <b>std::</b> before\n-\tusing it, you avoid getting errors on systems where no part of the\n-\tlibrary is in namespace std:\n-\t<pre class=\"programlisting\">\n-\t  namespace std { }\n-\t  using namespace std;\n-\t</pre>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-avoidfqn\"></a>Avoid to use fully qualified names\n-\t(i.e. std::string)</h3></div></div>\n-<p>\n-\tIf some compilers complain about <b>using\n-\t  std::string;</b>, and if the &quot;hack&quot; for gtk-- mentioned above\n-\tdoes not work, then I see two solutions:\n-\t\n-\t<div class=\"itemizedlist\"><ul type=\"disc\">\n-<li><p>\n-\t      Define <b>std::</b> as a macro if the compiler\n-\t      doesn't know about <b>std::</b>.\n-\t      <pre class=\"programlisting\">\n-\t\t#ifdef OLD_COMPILER\n-\t\t#define std\n-\t\t#endif\n-\t      </pre>\n-\t      (thanks to Juergen Heinzl who posted this solution on\n-\t      gnu.gcc.help)\n-\t    </li>\n-<li><p>\n-\t      Define a macro NS_STD, which is defined to\n-\t      either &quot;&quot; or &quot;std&quot;\n-\t      based on an autoconf-test. Then you should be able to use\n-\t      <b>NS_STD::string</b>, which will evaluate to\n-\t      <b>::string</b> (&quot;string in the global namespace&quot;) on\n-\t      systems that do not put string in std::.  (This is untested)\n-\t    </p></li>\n-</ul></div>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-osprojects\"></a>How some open-source-projects deal\n-\twith this</h3></div></div>\n-<p>\n-\tThis information was gathered around May 2000. It may not be correct\n-\tby the time you read this.\n-      </p>\n-<div class=\"table\">\n-<p><b>Table 1. Namespace std:: in Open-Source programs</b></p>\n-<table summary=\"Namespace std:: in Open-Source programs\" border=\"1\">\n-<colgroup>\n-<col>\n-<col>\n-</colgroup>\n-<tbody>\n-<tr>\n-<td><a href=\"http://www.clanlib.org\" target=\"_top\">clanlib</a></td>\n-<td>usual</td>\n-</tr>\n-<tr>\n-<td><a href=\"http://pingus.seul.org\" target=\"_top\">pingus</a></td>\n-<td>usual</td>\n-</tr>\n-<tr>\n-<td><a href=\"http://www.mozilla.org\" target=\"_top\">mozilla</a></td>\n-<td>usual</td>\n-</tr>\n-<tr>\n-<td><a href=\"http://libsigc.sourceforge.net\" target=\"_top\">\n-\t\t  libsigc++</a></td>\n-<td>conservative-impl</td>\n-</tr>\n-</tbody>\n-</table>\n-</div>\n-<div class=\"table\">\n-<p><b>Table 2. Notations for categories</b></p>\n-<table summary=\"Notations for categories\" border=\"1\">\n-<colgroup>\n-<col>\n-<col>\n-</colgroup>\n-<tbody>\n-<tr>\n-<td>usual</td>\n-<td>mostly fully qualified names and some\n-\t\tusing-declarations (but not in headers)</td>\n-</tr>\n-<tr>\n-<td>none</td>\n-<td>no namespace std at all</td>\n-</tr>\n-<tr>\n-<td>conservative-impl</td>\n-<td>wrap all\n-\t\tnamespace-handling in macros to support compilers without\n-\t\tnamespace-support (no libstdc++ used in headers)</td>\n-</tr>\n-</tbody>\n-</table>\n-</div>\n-<p>\n-\tAs you can see, this currently lacks an example of a project\n-\twhich uses libstdc++-symbols in headers in a back-portable way\n-\t(except for Gtk--: see the <a href=\"#sec-gtkmm-hack\" title=\"Using namespace\n-\t  composition if the project uses a separate\n-\tnamespace\">section on the gtkmm-hack</a>).\n-      </p>\n-</div>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-nocreate\"></a>There is no ios::nocreate/ios::noreplace\n-      in ISO 14882</h2></div></div>\n-<p>\n-      I have seen <b>ios::nocreate</b> being used for\n-      input-streams, most probably because the author thought it would be\n-      more correct to specify nocreate &quot;explicitly&quot;.  So you can simply\n-      leave it out for input-streams.\n-    </p>\n-<p>\n-      For output streams, &quot;nocreate&quot; is probably the default, unless you\n-      specify <b>std::ios::trunc</b> ? To be safe, you can open\n-      the file for reading, check if it has been opened, and then decide\n-      whether you want to create/replace or not. To my knowledge, even\n-      older implementations support <b>app</b>,\n-      <b>ate</b> and <b>trunc</b> (except for\n-      <b>app</b> ?).\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-stream::attach\"></a><b>stream::attach(int\n-\tfd)</b> is not in the standard any more</h2></div></div>\n-<p>\n-      Phil Edwards <tt>&lt;<a href=\"mailto:pedwards@disaster.jaj.com\">pedwards@disaster.jaj.com</a>&gt;</tt> writes:\n-      It was considered and rejected.  Not all environments use file\n-      descriptors.  Of those that do, not all of them use integers to represent\n-      them.\n-    </p>  \n-\n-<p>\n-      For a portable solution (among systems which use\n-      filedescriptors), you need to implement a subclass of\n-      <b>std::streambuf</b> (or\n-      <b>std::basic_streambuf&lt;..&gt;</b>) which opens a file\n-      given a descriptor, and then pass an instance of this to the\n-      stream-constructor.  For an example of this, refer to\n-      <a href=\"http://www.josuttis.com/cppcode/fdstream.html\" target=\"_top\">fdstream example</a> \n-      by Nicolai Josuttis.\n-    </p>\n-\n-<p>\n-      An extension is also available:\n-      <code>&lt;ext/stdio_filebuf.h&gt;</code> contains a derived class called\n-      <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/class____gnu__cxx_1_1stdio__filebuf.html\"><code>__gnu_cxx::stdio_filebuf</code></a>.\n-      This class can be constructed from a C <code>FILE*</code> or a file\n-      descriptor, and provides the <code>fd()</code> function.\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-headers\"></a>The new headers</h2></div></div>\n-<p>\n-      All new headers can be seen in this <a href=\"headers_cc.txt\" target=\"_top\">\n-\tsource-code</a>.\n-    </p>\n-<p>\n-      The old C++-headers (iostream.h etc.) are available, but gcc generates\n-      a warning that you are using deprecated headers.\n-    </p>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-cheaders\"></a>New headers replacing C-headers</h3></div></div>\n-<p>\n-\tYou should not use the C-headers (except for system-level\n-\theaders) from C++ programs. Instead, you should use a set of\n-\theaders that are named by prepending 'c' and, as usual,\n-\tomitting the extension (.h). For example, instead of using\n-\t<tt>&lt;math.h&gt;</tt>, you\n-\tshould use <tt>&lt;cmath&gt;</tt>. In some cases this has\n-\tthe advantage that the C++-header is more standardized than\n-\tthe C-header (i.e. <tt>&lt;ctime&gt;</tt> (almost)\n-\tcorresponds to either <tt>&lt;time.h&gt;</tt> or <tt>&lt;sys/time.h&gt;</tt>).\n-\n-\tThe standard specifies that if you include the C-style header\n-\t(<tt>&lt;math.h&gt;</tt> in\n-\tthis case), the symbols will be available both in the global\n-\tnamespace and in namespace <b>std::</b> (but\n-\tlibstdc++ does not yet have fully compliant headers) On the\n-\tother hand, if you include only the new header (i.e. <tt>&lt;cmath&gt;</tt>), the symbols\n-\twill only be defined in namespace <b>std::</b>\n-\t(and macros will be converted to inline-functions).\n-      </p>\n-<p>\n-\tFor more information on this, and for information on how the\n-\tGNU C++ implementation might reuse (&quot;shadow&quot;) the C\n-\tlibrary-functions, have a look at <a href=\"http://www.cantrip.org/cheaders.html\" target=\"_top\">\n-\t  www.cantrip.org</a>.\n-      </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h3 class=\"title\">\n-<a name=\"sec-fstream-header\"></a>\n-\t<tt>&lt;fstream&gt;</tt> does\n-\tnot define <b>std::cout</b>,\n-\t<b>std::cin</b> etc.</h3></div></div>\n-<p>\n-\tIn earlier versions of the standard,\n-\t<tt>&lt;fstream.h&gt;</tt>,\n-\t<tt>&lt;ostream.h&gt;</tt>\n-\tand <tt>&lt;istream.h&gt;</tt>\n-\tused to define\n-\t<b>cout</b>, <b>cin</b> and so on. Because\n-\tof the templatized iostreams in libstdc++-v3, you need to include\n-\t<tt>&lt;iostream&gt;</tt>\n-\texplicitly to define these.\n-      </p>\n-</div>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-iterators\"></a>Iterators</h2></div></div>\n-<p>\n-      The following are not proper uses of iterators, but may be working\n-      fixes for existing uses of iterators.\n-      <div class=\"itemizedlist\"><ul type=\"disc\">\n-<li><p>you cannot do\n-\t    <b>ostream::operator&lt;&lt;(iterator)</b> to\n-\t    print the address of the iterator =&gt; use\n-\t    <b>operator&lt;&lt; &amp;*iterator</b> instead ?\n-\t  </p></li>\n-<li><p>you cannot clear an iterator's reference\n-\t    (<b>iterator = 0</b>) =&gt; use\n-\t    <b>iterator = iterator_type();</b> ?\n-\t  </p></li>\n-<li><p>\n-<b>if (iterator)</b> won't work any\n-\t    more =&gt; use <b>if (iterator != iterator_type())</b>\n-\t    ?</p></li>\n-</ul></div>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-macros\"></a>\n-      Libc-macros (i.e. <b>isspace</b> from\n-      <tt>&lt;cctype&gt;</tt>)</h2></div></div>\n-<p>\n-      Glibc 2.0.x and 2.1.x define the\n-      <tt>&lt;ctype.h&gt;</tt>\n-      -functionality as macros (isspace, isalpha etc.). Libstdc++-v3\n-      &quot;shadows&quot; these macros as described in the <a href=\"#sec-cheaders\" title=\"New headers replacing C-headers\">section about\n-\tc-headers</a>.\n-    </p>\n-<p>\n-      Older implementations of libstdc++ (g++-2 for egcs 1.x and g++-3\n-      for gcc 2.95.x), however, keep these functions as macros, and so it\n-      is not back-portable to use fully qualified names. For example:\n-      <pre class=\"programlisting\">\n-\t#include &lt;cctype&gt;\n-\tint main() { std::isspace('X'); }\n-      </pre>\n-      will result in something like this (unless using g++-v3):\n-      <pre class=\"programlisting\">\n-\tstd:: (__ctype_b[(int) ( ( 'X' ) )] &amp; (unsigned short int)\n-\t_ISspace )  ;\n-      </pre>\n-<p>\n-      One solution I can think of is to test for -v3 using\n-      autoconf-macros, and define macros for each of the C-functions\n-      (maybe that is possible with one &quot;wrapper&quot; macro as well ?).\n-    </p>\n-<p>\n-      Another solution which would fix g++ is to tell the user to modify a\n-      header-file so that g++-2 (egcs 1.x) and g++-3 (gcc 2.95.x) define a\n-      macro which tells <tt>&lt;ctype.h&gt;</tt> to define functions\n-      instead of macros:\n-      <pre class=\"programlisting\">\n-\t// This keeps isalnum, et al from being propagated as macros.\n-\t#if __linux__\n-\t#define __NO_CTYPE 1\n-\t#endif\n-\n-\t[ now include &lt;ctype.h&gt; ]\n-      </pre>\n-<p>\n-      Another problem arises if you put a <b>using namespace\n-\tstd;</b> declaration at the top, and include <tt>&lt;ctype.h&gt;</tt>. This will result in\n-      ambiguities between the definitions in the global namespace\n-      (<tt>&lt;ctype.h&gt;</tt>) and the\n-      definitions in namespace <b>std::</b>\n-      (<b>&lt;cctype&gt;</b>).\n-    </p>\n-<p>\n-      The solution to this problem was posted to the libstdc++-v3\n-      mailing-list:\n-      Benjamin Kosnik <tt>&lt;<a href=\"mailto:bkoz@redhat.com\">bkoz@redhat.com</a>&gt;</tt> writes:\n-      &#x2018;\n-\t--enable-cshadow-headers is currently broken. As a result, shadow\n-\theaders are not being searched....\n-      &#x2019;\n-      This is now outdated, but gcc 3.0 still does not have fully\n-      compliant &quot;shadow headers&quot;.\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-stream-state\"></a>State of streams</h2></div></div>\n-<p>\n-      At least some older implementations don't have\n-      <b>std::ios_base</b>, so you should use\n-      <b>std::ios::badbit</b>, <b>std::ios::failbit</b>\n-      and <b>std::ios::eofbit</b> and\n-      <b>std::ios::goodbit</b>.\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-vector-at\"></a>vector::at is missing (i.e. gcc 2.95.x)</h2></div></div>\n-<p>\n-      One solution is to add an autoconf-test for this:\n-      <pre class=\"programlisting\">\n-\tAC_MSG_CHECKING(for container::at)\n-\tAC_TRY_COMPILE(\n-\t[\n-\t#include &lt;vector&gt;\n-\t#include &lt;deque&gt;\n-\t#include &lt;string&gt;\n-\t\n-\tusing namespace std;\n-\t],\n-\t[\n-\tdeque&lt;int&gt; test_deque(3);\n-\ttest_deque.at(2);\n-\tvector&lt;int&gt; test_vector(2);\n-\ttest_vector.at(1);\n-\tstring test_string(&quot;test_string&quot;);\n-\ttest_string.at(3);\n-\t],\n-\t[AC_MSG_RESULT(yes)\n-\tAC_DEFINE(HAVE_CONTAINER_AT)],\n-\t[AC_MSG_RESULT(no)])\n-      </pre>\n-      If you are using other (non-GNU) compilers it might be a good idea\n-      to check for <b>string::at</b> separately.\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-eof\"></a>Using std::char_traits&lt;char&gt;::eof()</h2></div></div>\n-<p>\n-      <pre class=\"programlisting\">\n-\t#ifdef HAVE_CHAR_TRAITS\n-\t#define CPP_EOF std::char_traits&lt;char&gt;::eof()\n-\t#else\n-\t#define CPP_EOF EOF\n-\t#endif\n-      </pre>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-string-clear\"></a>Using string::clear()/string::erase()</h2></div></div>\n-<p>\n-      There are two functions for deleting the contents of a string:\n-      <b>clear</b> and <b>erase</b> (the latter\n-      returns the string).\n-      <pre class=\"programlisting\">\n-\tvoid \n-\tclear() { _M_mutate(0, this-&gt;size(), 0); }\n-      </pre>\n-      <pre class=\"programlisting\">\n-\tbasic_string&amp; \n-\terase(size_type __pos = 0, size_type __n = npos)\n-\t{ \n-\treturn this-&gt;replace(_M_check(__pos), _M_fold(__pos, __n),\n-\t_M_data(), _M_data()); \n-\t}\n-      </pre>\n-      The implementation of <b>erase</b> seems to be more\n-      complicated (from libstdc++-v3), but <b>clear</b> is not\n-      implemented in gcc 2.95.x's libstdc++, so you should use\n-      <b>erase</b> (which is probably faster than\n-      <b>operator=(charT*)</b>).\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-scan-form\"></a>GNU Extensions ostream::form and istream::scan</h2></div></div>\n-<p>\n-      These\tare not supported any more - use\n-      <a href=\"#sec-stringstream\" title=\"Using stringstreams\">\n-\tstringstreams</a> instead.\t\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-stringstream\"></a>Using stringstreams</h2></div></div>\n-<p>\n-      Libstdc++-v3 provides the new\n-      <b>i/ostringstream</b>-classes, (<tt>&lt;sstream&gt;</tt>), but for compatibility\n-      with older implementations you still have to use\n-      <b>i/ostrstream</b> (<tt>&lt;strstream&gt;</tt>):\n-      <pre class=\"programlisting\">\n-\t#ifdef HAVE_SSTREAM\n-\t#include &lt;sstream&gt;\n-\t#else\n-\t#include &lt;strstream&gt;\n-\t#endif\n-      </pre>\n-      <div class=\"itemizedlist\"><ul type=\"disc\">\n-<li><p> <b>strstream</b> is considered to be\n-\t    deprecated\n-\t  </p></li>\n-<li><p> <b>strstream</b> is limited to\n-\t    <b>char</b>\n-\t  </p></li>\n-<li><p> with <b>ostringstream</b> you don't\n-\t    have to take care of terminating the string or freeing its\n-\t    memory\n-\t  </p></li>\n-<li><p> <b>istringstream</b> can be re-filled\n-\t    (clear(); str(input);)\n-\t  </p></li>\n-</ul></div>\n-<p>\n-      You can then use output-stringstreams like this:\n-      <pre class=\"programlisting\">\n-\t#ifdef HAVE_SSTREAM\n-\tstd::ostringstream oss;\n-\t#else\n-\tstd::ostrstream oss;\n-\t#endif\n-\toss &lt;&lt; &quot;Name=&quot; &lt;&lt; m_name &lt;&lt; &quot;, number=&quot; &lt;&lt; m_number &lt;&lt; std::endl;\n-\t...\n-\t#ifndef HAVE_SSTREAM\n-\toss &lt;&lt; std::ends; // terminate the char*-string\n-\t#endif\n-\t// str() returns char* for ostrstream and a string for ostringstream\n-\t// this also causes ostrstream to think that the buffer's memory\n-\t// is yours\n-\tm_label.set_text(oss.str());\n-\t#ifndef HAVE_SSTREAM\n-\t// let the ostrstream take care of freeing the memory\n-\toss.freeze(false);\n-\t#endif\n-      </pre>\n-<p>\n-      Input-stringstreams can be used similarly:\n-      <pre class=\"programlisting\">\n-\tstd::string input;\n-\t...\n-\t#ifdef HAVE_SSTREAM\n-\tstd::istringstream iss(input);\n-\t#else\n-\tstd::istrstream iss(input.c_str());\n-\t#endif\n-\tint i;\n-\tiss &gt;&gt; i; \n-      </pre>\n-      One (the only?) restriction is that an istrstream cannot be re-filled:\n-      <pre class=\"programlisting\">\n-\tstd::istringstream iss(numerator);\n-\tiss &gt;&gt; m_num;\n-\t// this is not possible with istrstream\n-\tiss.clear();\n-\tiss.str(denominator);\n-\tiss &gt;&gt; m_den;\n-      </pre>\n-      If you don't care about speed, you can put these conversions in\n-      a template-function:\n-      <pre class=\"programlisting\">\n-\ttemplate &lt;class X&gt;\n-\tvoid fromString(const string&amp; input, X&amp; any)\n-\t{\n-\t#ifdef HAVE_SSTREAM\n-\tstd::istringstream iss(input);\n-\t#else\n-\tstd::istrstream iss(input.c_str());\n-\t#endif\n-\tX temp;\n-\tiss &gt;&gt; temp;\n-\tif (iss.fail())\n-\tthrow runtime_error(..)\n-\tany = temp;\n-\t}\n-      </pre>\n-      Another example of using stringstreams is in <a href=\"../21_strings/howto.html\" target=\"_top\">this howto</a>.\n-<p>\n-      I have read the Josuttis book on Standard C++, so some information\n-      comes from there. Additionally, there is information in\n-      &quot;info iostream&quot;, which covers the old implementation that gcc 2.95.x\n-      uses.\n-    </p>\n-</div>\n-<div class=\"section\">\n-<div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: both\">\n-<a name=\"sec-about\"></a>About...</h2></div></div>\n-<p>\n-      Please send any experience, additions, corrections or questions to\n-      <a href=\"mailto:fnatter@gmx.net\" target=\"_top\">fnatter@gmx.net</a> or for\n-      discussion to the libstdc++-v3-mailing-list.\n-    </p>\n-</div>\n-</div></body>\n-</html>"}, {"sha": "2a561a9abc305b059bd2cc437026c459605f00c0", "filename": "libstdc++-v3/docs/html/17_intro/porting.html", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -1,8 +1,8 @@\n <html lang=\"en\">\n <head>\n-<title>Porting libstdc++-v3</title>\n+<title>Porting libstdc++</title>\n <meta http-equiv=\"Content-Type\" content=\"text/html\">\n-<meta name=\"description\" content=\"Porting libstdc++-v3\">\n+<meta name=\"description\" content=\"Porting libstdc++\">\n <meta name=\"generator\" content=\"makeinfo 4.6\">\n <!--\n Copyright &copy; 2000, 2001, 2002, 2003, 2005 Free Software Foundation, Inc.\n@@ -35,7 +35,7 @@\n --></style>\n </head>\n <body>\n-<h1 class=\"settitle\">Porting libstdc++-v3</h1>\n+<h1 class=\"settitle\">Porting libstdc++</h1>\n <div class=\"node\">\n <p><hr>\n Node:&nbsp;<a name=\"Top\">Top</a>,\n@@ -44,14 +44,14 @@ <h1 class=\"settitle\">Porting libstdc++-v3</h1>\n <br>\n </div>\n \n-<h2 class=\"unnumbered\">Porting libstdc++-v3</h2>\n+<h2 class=\"unnumbered\">Porting libstdc++</h2>\n \n-<p>This document explains how to port libstdc++-v3 (the GNU C++ library) to\n+<p>This document explains how to port libstdc++ (the GNU C++ library) to\n a new target.\n \n-   <p>In order to make the GNU C++ library (libstdc++-v3) work with a new\n+   <p>In order to make the GNU C++ library (libstdc++) work with a new\n target, you must edit some configuration files and provide some new\n-header files.  Unless this is done, libstdc++-v3 will use generic\n+header files.  Unless this is done, libstdc++ will use generic\n settings which may not be correct for your target; even if they are\n correct, they will likely be inefficient.\n \n@@ -115,7 +115,7 @@ <h2 class=\"chapter\">Operating system</h2>\n <code>os_defines.h</code>.  This file contains basic macro definitions\n that are required to allow the C++ library to work with your C library. \n \n-   <p>Several libstdc++-v3 source files unconditionally define the macro\n+   <p>Several libstdc++ source files unconditionally define the macro\n <code>_POSIX_SOURCE</code>.  On many systems, defining this macro causes\n large portions of the C library header files to be eliminated\n at preprocessing time.  Therefore, you may have to <code>#undef</code> this\n@@ -130,7 +130,7 @@ <h2 class=\"chapter\">Operating system</h2>\n target.  It will not work to simply define these macros in\n <code>os_defines.h</code>.\n \n-   <p>At this time, there are a few libstdc++-v3-specific macros which may be\n+   <p>At this time, there are a few libstdc++-specific macros which may be\n defined:\n \n    <p><code>_GLIBCXX_USE_C99_CHECK</code> may be defined to 1 to check C99\n@@ -233,7 +233,7 @@ <h2 class=\"chapter\">Character types</h2>\n certainly need some modification.\n \n    <p>The first file to write is <code>ctype_base.h</code>.  This file provides\n-some very basic information about character classification.  The libstdc++-v3\n+some very basic information about character classification.  The libstdc++\n library assumes that your C library implements <code>&lt;ctype.h&gt;</code> by using\n a table (indexed by character code) containing integers, where each of\n these integers is a bit-mask indicating whether the character is\n@@ -530,7 +530,7 @@ <h2 class=\"chapter\">Libtool</h2>\n document, but there are a few, particular bits that are necessary for\n porting.\n \n-   <p>Some parts of the libstdc++-v3 library are compiled with the libtool\n+   <p>Some parts of the libstdc++ library are compiled with the libtool\n <code>--tags CXX</code> option (the C++ definitions for libtool).  Therefore,\n <code>ltcf-cxx.sh</code> in the top-level directory needs to have the correct\n logic to compile and archive objects equivalent to the C version of libtool,\n@@ -542,7 +542,7 @@ <h2 class=\"chapter\">Libtool</h2>\n object files when the C++ library is built as a shared library, or\n taking other system-specific actions.\n \n-   <p>The libstdc++-v3 library is linked with the C version of libtool, even\n+   <p>The libstdc++ library is linked with the C version of libtool, even\n though it is a C++ library.  Therefore, the C version of libtool needs to\n ensure that the run-time library initializers are run.  The usual way to\n do this is to build the library using <code>gcc -shared</code>.\n@@ -974,7 +974,7 @@ <h3 class=\"unnumberedsec\">ADDENDUM: How to use this License for your documents</\n <div class=\"contents\">\n <h2>Table of Contents</h2>\n <ul>\n-<li><a name=\"toc_Top\" href=\"#Top\">Porting libstdc++-v3</a>\n+<li><a name=\"toc_Top\" href=\"#Top\">Porting libstdc++</a>\n <li><a name=\"toc_Operating%20system\" href=\"#Operating%20system\">Operating system</a>\n <li><a name=\"toc_CPU\" href=\"#CPU\">CPU</a>\n <li><a name=\"toc_Character%20types\" href=\"#Character%20types\">Character types</a>"}, {"sha": "3d3d673cf89c8939539b4fe5ea4e03e21dcf0162", "filename": "libstdc++-v3/docs/html/17_intro/tr1_status.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Ftr1_status.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Ftr1_status.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Ftr1_status.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -2102,7 +2102,7 @@ <h1 align=\"center\">\n       <td>done</td>\n       <td></td>\n       <td></td>\n-      <td>C library responsability</td>\n+      <td>C library responsibility</td>\n     </tr>\n     <tr>\n       <td>8.24.4</td>\n@@ -2182,7 +2182,7 @@ <h1 align=\"center\">\n       <td>done</td>\n       <td></td>\n       <td></td>\n-      <td>C library responsability</td>\n+      <td>C library responsibility</td>\n     </tr>\n     <tr>\n       <td>8.30</td>\n@@ -2214,7 +2214,7 @@ <h1 align=\"center\">\n       <td>done</td>\n       <td></td>\n       <td></td>\n-      <td>C library responsability</td>\n+      <td>C library responsibility</td>\n     </tr>\n     <tr>\n       <td>8.31</td>", "previous_filename": "libstdc++-v3/docs/html/ext/tr1.html"}, {"sha": "87dd8a5342e9fc92ccfde9438b754583b5520d03", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 18.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 18: Library Support</title>\n+   <title>libstdc++ HOWTO:  Chapter 18: Library Support</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />"}, {"sha": "90a60b3bca5fe2f31375c103b6188e787298f60f", "filename": "libstdc++-v3/docs/html/19_diagnostics/howto.html", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 19.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 19: Diagnostics</title>\n+   <title>libstdc++ HOWTO:  Chapter 19: Diagnostics</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -36,7 +36,6 @@ <h1 class=\"centered\"><a name=\"top\">Chapter 19:  Diagnostics</a></h1>\n <h1>Contents</h1>\n <ul>\n    <li><a href=\"#1\">Adding data to exceptions</a></li>\n-   <li><a href=\"#2\">Exception class hierarchy diagram</a></li>\n    <li><a href=\"#3\">Concept checkers -- <strong>new and improved!</strong></a></li>\n </ul>\n \n@@ -67,22 +66,6 @@ <h2><a name=\"1\">Adding data to exceptions</a></h2>\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>\n \n-<hr />\n-<h2><a name=\"2\">Exception class hierarchy diagram</a></h2>\n-   <p>At one point we were going to make up a PDF of the exceptions\n-      hierarchy, akin to the one done for the I/O class hierarchy.\n-      Time was our enemy.  Since then we've moved to Doxygen, which has\n-      the useful property of not sucking.  Specifically, when the source\n-      code is changed, the diagrams are automatically brought up to date.\n-      For the old way, we had to update the diagrams separately.\n-   </p>\n-   <p>There are several links to the Doxygen-generated pages from\n-      <a href=\"../documentation.html\">here</a>.\n-   </p>\n-   <p>Return <a href=\"#top\">to top of page</a> or\n-      <a href=\"../faq/index.html\">to the FAQ</a>.\n-   </p>\n-\n <hr />\n <h2><a name=\"3\">Concept checkers -- <strong>new and improved!</strong></a></h2>\n    <p>Better taste!  Less fat!  Literally!</p>\n@@ -119,6 +102,13 @@ <h2><a name=\"3\">Concept checkers -- <strong>new and improved!</strong></a></h2>\n       (or with <code>#define _GLIBCPP_CONCEPT_CHECKS</code> for versions\n       3.1, 3.2 and 3.3).\n    </p>\n+\n+   <p>Please note that the upcoming C++ standard has first-class\n+   support for template parameter constraints based on concepts in the core\n+   language. This will obviate the need for the library-simulated concept\n+   checking described above.\n+   </p>\n+\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>"}, {"sha": "409c08b870c2f8f451fc8c378c15da7a596e872e", "filename": "libstdc++-v3/docs/html/20_util/allocator.html", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -28,14 +28,16 @@ <h1 class=\"centered\"><a name=\"top\">Allocators and allocation</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n <hr />\n <p> The C++ Standard encapsulates memory management characteristics\n    for strings, container classes, and parts of iostreams in a\n-   template class called <code>std::allocator</code>.\n+   template class called <code>std::allocator</code>. This class, and\n+   base classes of it, are the superset of available free store\n+   (&quot;heap&quot;) management classes.\n </p>\n \n <h3 class=\"left\">\n@@ -100,7 +102,7 @@ <h3 class=\"left\">\n    <p>What about threads?  No problem:  in a threadsafe environment, the\n       memory pool is manipulated atomically, so you can grow a container in\n       one thread and shrink it in another, etc.  <strong>BUT</strong> what\n-      if threads in libstdc++-v3 aren't set up properly?\n+      if threads in libstdc++ aren't set up properly?\n       <a href=\"../faq/index.html#5_6\">That's been answered already</a>.\n    </p>\n    <p><strong>BUT</strong> what if you want to use your own allocator?  What"}, {"sha": "fb02aa169fb1192d9e1e2b008f0555295ae59e4e", "filename": "libstdc++-v3/docs/html/20_util/howto.html", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 20.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 20: General Utilities</title>\n+   <title>libstdc++ HOWTO:  Chapter 20: General Utilities</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -214,15 +214,7 @@ <h2><a name=\"4\">Pairs</a></h2>\n    <pre>\n     pair&lt;int,MyClass&gt; p = make_pair(4,myobject);\n    </pre>\n-   <p>Return <a href=\"#top\">to top of page</a> or\n-      <a href=\"../faq/index.html\">to the FAQ</a>.\n-   </p>\n \n-<hr />\n-<h2><a name=\"5\">Memory allocators</a></h2>\n-   <p>The available free store (&quot;heap&quot;) management classes are\n-      described <a href=\"allocator.html\">here</a>.\n-   </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>"}, {"sha": "1c32672a236fbb80f22258a555b24b5f191cafe2", "filename": "libstdc++-v3/docs/html/21_strings/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 21.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 21: Strings</title>\n+   <title>libstdc++ HOWTO:  Chapter 21: Strings</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -141,10 +141,10 @@ <h2><a name=\"1\">MFC's CString</a></h2>\n              <em>if the implementors do it correctly</em>.  The libstdc++\n              implementors did it correctly.  Other vendors might not.\n          </li>\n-         <li>While parts of the SGI STL are used in libstdc++-v3, their\n+         <li>While parts of the SGI STL are used in libstdc++, their\n              string class is not.  The SGI <code>string</code> is essentially\n              <code>vector&lt;char&gt;</code> and does not do any reference\n-             counting like libstdc++-v3's does.  (It is O(n), though.)\n+             counting like libstdc++'s does.  (It is O(n), though.)\n              So if you're thinking about SGI's string or rope classes,\n              you're now looking at four possibilities:  CString, the\n              libstdc++ string, the SGI string, and the SGI rope, and this"}, {"sha": "24b412b61ed41b77d51094293ff01272fb9a1d31", "filename": "libstdc++-v3/docs/html/22_locale/codecvt.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -37,7 +37,7 @@ <h2>\n characters (hereafter referred to as wchar_t) and the standard type\n char that is so beloved in classic &quot;C&quot; (which can now be referred to\n as narrow characters.)  This document attempts to describe how the GNU\n-libstdc++-v3 implementation deals with the conversion between wide and\n+libstdc++ implementation deals with the conversion between wide and\n narrow characters, and also presents a framework for dealing with the\n huge number of other encodings that iconv can convert, including\n Unicode and UTF8. Design issues and requirements are addressed, and\n@@ -274,7 +274,7 @@ <h2>\n into this limitation. However, as a quality of implementation issue,\n the GNU C++ library would like to offer a solution that allows\n multiple locales and or simultaneous usage with computationally\n-correct results. In short, libstdc++-v3 is trying to offer, as an\n+correct results. In short, libstdc++ is trying to offer, as an\n option, a high-quality implementation, damn the additional complexity!\n </p>\n \n@@ -314,7 +314,7 @@ <h2>\n \n <p>\n Neither of these two required specializations deals with Unicode\n-characters. As such, libstdc++-v3 implements a partial specialization\n+characters. As such, libstdc++ implements a partial specialization\n of the codecvt class with and iconv wrapper class, encoding_state as the\n third template parameter.\n </p>"}, {"sha": "e52f8353bd9d2ae58755ddbbeb2fc53f40de49bd", "filename": "libstdc++-v3/docs/html/22_locale/ctype.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -76,7 +76,7 @@ <h2>\n \n <p>\n Neither of these two required specializations deals with Unicode\n-characters. As such, libstdc++-v3 implements \n+characters. As such, libstdc++ implements \n </p>\n \n <h2>"}, {"sha": "3709a6fac972841bf54b7e98e40e99b93cf71ef9", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 22.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 22: Localization</title>\n+   <title>libstdc++ HOWTO:  Chapter 22: Localization</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -75,7 +75,7 @@ <h2><a name=\"2\">class codecvt</a></h2>\n    wide characters (hereafter referred to as wchar_t) and the standard\n    type char that is so beloved in classic &quot;C&quot; (which can\n    now be referred to as narrow characters.)  This document attempts\n-   to describe how the GNU libstdc++-v3 implementation deals with the\n+   to describe how the GNU libstdc++ implementation deals with the\n    conversion between wide and narrow characters, and also presents a\n    framework for dealing with the huge number of other encodings that\n    iconv can convert, including Unicode and UTF8. Design issues and"}, {"sha": "bb096c09e7f27281942e6f7a9bb2f32dab8120db", "filename": "libstdc++-v3/docs/html/22_locale/messages.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -267,10 +267,10 @@ <h2>\n \n    <li> Copy the binary files into the correct directory structure.\n    <p>\n-   <code>cp fr_FR.mo (dir)/fr_FR/LC_MESSAGES/libstdc++-v3.mo</code>\n+   <code>cp fr_FR.mo (dir)/fr_FR/LC_MESSAGES/libstdc++.mo</code>\n    </p>\n    <p>\n-   <code>cp de_DE.mo (dir)/de_DE/LC_MESSAGES/libstdc++-v3.mo</code>\n+   <code>cp de_DE.mo (dir)/de_DE/LC_MESSAGES/libstdc++.mo</code>\n    </p>\n    </li>\n \n@@ -302,7 +302,7 @@ <h2>\n {\n   typedef messages&lt;char&gt;::catalog catalog;\n   const char* dir =\n-  \"/mnt/egcs/build/i686-pc-linux-gnu/libstdc++-v3/po/share/locale\";  \n+  \"/mnt/egcs/build/i686-pc-linux-gnu/libstdc++/po/share/locale\";  \n   const locale loc_de(\"de_DE\");\n   const messages&lt;char&gt;&amp; mssg_de = use_facet&lt;messages&lt;char&gt; &gt;(loc_de); \n "}, {"sha": "eab90e8ea659d347eff4ee0c79939a37f54068e1", "filename": "libstdc++-v3/docs/html/23_containers/howto.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 23.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 23: Containers</title>\n+   <title>libstdc++ HOWTO:  Chapter 23: Containers</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -200,7 +200,7 @@ <h2><a name=\"2\">Variable-sized bitmasks</a></h2>\n       along the lines of the third category, the author would love to hear\n       from you...\n    </p>\n-   <p>Also note that the implementation of bitset used in libstdc++-v3 has\n+   <p>Also note that the implementation of bitset used in libstdc++ has\n       <a href=\"../ext/sgiexts.html#ch23\">some extensions</a>.\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n@@ -230,7 +230,7 @@ <h2><a name=\"3\">Containers and multithreading</a></h2>\n    <p><em>However, please ignore all discussions about the user-level\n       configuration of the lock implementation inside the STL\n       container-memory allocator on those pages.  For the sake of this\n-      discussion, libstdc++-v3 configures the SGI STL implementation,\n+      discussion, libstdc++ configures the SGI STL implementation,\n       not you.  This is quite different from how gcc pre-3.0 worked.\n       In particular, past advice was for people using g++ to\n       explicitly define _PTHREADS or other macros or port-specific\n@@ -239,7 +239,7 @@ <h2><a name=\"3\">Containers and multithreading</a></h2>\n       longer be done unless you really know what you are doing and\n       assume all responsibility.</em>\n    </p>\n-   <p>Since the container implementation of libstdc++-v3 uses the SGI\n+   <p>Since the container implementation of libstdc++ uses the SGI\n       code, we use the same definition of thread safety as SGI when\n       discussing design.  A key point that beginners may miss is the\n       fourth major paragraph of the first page mentioned above\n@@ -248,7 +248,7 @@ <h2><a name=\"3\">Containers and multithreading</a></h2>\n       client code (that'd be you, not us).  There is a notable\n       exceptions to this rule.  Allocators called while a container or\n       element is constructed uses an internal lock obtained and\n-      released solely within libstdc++-v3 code (in fact, this is the\n+      released solely within libstdc++ code (in fact, this is the\n       reason STL requires any knowledge of the thread configuration).\n    </p>\n    <p>For implementing a container which does its own locking, it is\n@@ -290,7 +290,7 @@ <h2><a name=\"4\">&quot;Hinting&quot; during insertion</a></h2>\n       addresses this topic, but I will ignore it here because it is not yet\n       finalized.)\n    </p>\n-   <p>Here we'll describe how the hinting works in the libstdc++-v3\n+   <p>Here we'll describe how the hinting works in the libstdc++\n       implementation, and what you need to do in order to take advantage of\n       it.  (Insertions can change from logarithmic complexity to amortized\n       constant time, if the hint is properly used.)  Also, since the current"}, {"sha": "7c2f106ac31de153d687efd00c376d1676a89079", "filename": "libstdc++-v3/docs/html/24_iterators/howto.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 24.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 24: Iterators</title>\n+   <title>libstdc++ HOWTO:  Chapter 24: Iterators</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -45,7 +45,7 @@ <h1>Contents</h1>\n <h2><a name=\"1\">They ain't pointers!</a></h2>\n    <p><a href=\"../faq/index.html#5_1\">FAQ 5.1</a> points out that iterators\n       are not implemented as pointers.  They are a generalization of\n-      pointers, but they are implemented in libstdc++-v3 as separate classes.\n+      pointers, but they are implemented in libstdc++ as separate classes.\n    </p>\n    <p>Keeping that simple fact in mind as you design your code will\n       prevent a whole lot of difficult-to-understand bugs."}, {"sha": "bb5caee354ab4f21b7868c66ae3a2e87378d075f", "filename": "libstdc++-v3/docs/html/25_algorithms/howto.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 25.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 25: Algorithms</title>\n+   <title>libstdc++ HOWTO:  Chapter 25: Algorithms</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />"}, {"sha": "e56659b3804364ff3c1405d772e727f9db11fabe", "filename": "libstdc++-v3/docs/html/26_numerics/howto.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 26.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 26: Numerics</title>\n+   <title>libstdc++ HOWTO:  Chapter 26: Numerics</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -144,7 +144,7 @@ <h2><a name=\"3\">Numerical Functions</a></h2>\n <hr />\n <h2><a name=\"4\">C99</a></h2>\n    <p>In addition to the other topics on this page, we'll note here some\n-      of the C99 features that appear in libstdc++-v3.\n+      of the C99 features that appear in libstdc++.\n    </p>\n    <p>The C99 features depend on the <code>--enable-c99</code> configure flag.\n       This flag is already on by default, but it can be disabled by the"}, {"sha": "067be3afbf16065a781da77ae16d3e0706dc26a8", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 27.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Chapter 27: Input/Output</title>\n+   <title>libstdc++ HOWTO:  Chapter 27: Input/Output</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -458,7 +458,7 @@ <h2><a name=\"8\">Pathetic performance?  Ditch C.</a></h2>\n    <p>The special steps taken by libstdc++, at least for version 3.0,\n       involve doing very little buffering for the standard streams, leaving\n       most of the buffering to the underlying C library.  (This kind of\n-      thing is <a href=\"../explanations.html#cstdio\">tricky to get right</a>.)\n+      thing is tricky to get right.)\n       The upside is that correctness is ensured.  The downside is that\n       writing through <code>cout</code> can quite easily lead to awful\n       performance when the C++ I/O library is layered on top of the C I/O\n@@ -501,7 +501,7 @@ <h2><a name=\"9\">Threads and I/O</a></h2>\n    <p>This gets a bit tricky.  Please read carefully, and bear with me.\n    </p>\n    <h3>Structure</h3>\n-   <p>As described <a href=\"../explanations.html#cstdio\">here</a>, a wrapper\n+   <p>A wrapper\n       type called <code>__basic_file</code> provides our abstraction layer\n       for the <code>std::filebuf</code> classes.  Nearly all decisions dealing\n       with actual input and output must be made in <code>__basic_file</code>.\n@@ -539,8 +539,8 @@ <h3>The defaults for 3.0.x</h3>\n       like any other critical shared resource.\n    </p>\n    <h3>The future</h3>\n-   <p>As already mentioned <a href=\"../explanations.html#cstdio\">here</a>, a\n-      second choice is available for I/O implementations:  libio.  This is\n+   <p> A\n+      second choice may be available for I/O implementations:  libio.  This is\n       disabled by default, and in fact will not currently work due to other\n       issues.  It will be revisited, however.\n    </p>\n@@ -713,7 +713,7 @@ <h2><a name=\"11\">Using FILE*s and file descriptors with IOStreams</a></h2>\n    <p>The v2 library included non-standard extensions to construct\n       <code>std::filebuf</code>s from C stdio types such as\n       <code>FILE*</code>s and POSIX file descriptors.\n-      Today the recommended way to use stdio types with libstdc++-v3\n+      Today the recommended way to use stdio types with libstdc++\n       IOStreams is via the <code>stdio_filebuf</code> class (see below),\n       but earlier releases provided slightly different mechanisms.\n    </p>"}, {"sha": "f75752ee20cbef03fb2eb0d4424d10e7ae8874a2", "filename": "libstdc++-v3/docs/html/Makefile", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,37 +0,0 @@\n-\n-PWD_COMMAND=$${PWDCMD-pwd}\n-MAKEINFO=makeinfo\n-INC=../../../gcc/doc/include\n-\n-all: documentation.html                  \\\n-     faq/index.txt                       \\\n-     17_intro/confdeps.png               \\\n-     17_intro/porting.html               \\\n-     17_intro/porting-howto.html\n-\n-# chock full of GNUism, probably\n-documentation.html: $(wildcard */howto.html)\n-\tsed -n '1,/beginlist/p' $@ > tmp.top\n-\tsed -n '/endlist/,$$p' $@ > tmp.bottom\n-\techo '  <ul>' > tmp.middle\n-\tfor i in [0-9]*/howto.html; do \\\n-\t  title=`grep 'h1 ' $$i |\\\n-\t  sed 's=.*\\(Chapter [[:digit:]]*\\):[[:space:]]*\\(.*\\)</a>.*=\\2 (\\1)='` ;\\\n-\t  awk -v file=$$i -v \"title=$$title\" -f makedoc.awk $$i >> tmp.middle ;\\\n-\tdone\n-\tawk -v file=ext/howto.html -v \"title=Extensions to the Standard Library\"\\\n-\t  -f makedoc.awk ext/howto.html >> tmp.middle ;\\\n-\techo '  </ul>' >> tmp.middle\n-\tcat tmp.top tmp.middle tmp.bottom > $@\n-\trm tmp.top tmp.middle tmp.bottom\n-\n-faq/index.txt: faq/index.html\n-\tlynx -dump $< | sed \"s%file://localhost`${PWD_COMMAND}`%..%\" > $@\n-\n-17_intro/porting.html: 17_intro/porting.texi\n-\t${MAKEINFO} -I ${INC} --html --no-split $< -o $@\n-\n-17_intro/confdeps.png: 17_intro/confdeps.dot\n-\tdot -Tpng -o $@ $<\n-\n-# vim:noet ts=4"}, {"sha": "c830a9967ba75f7d76d25e0ea7df1fc180c9631a", "filename": "libstdc++-v3/docs/html/configopts.html", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,10 +6,10 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n-   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\" />\n-   <meta name=\"DESCRIPTION\" content=\"Configuration options for libstdc++-v3.\" />\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++, GCC, g++\" />\n+   <meta name=\"DESCRIPTION\" content=\"Configuration options for libstdc++.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 configure options</title>\n+   <title>libstdc++ configure options</title>\n <link rel=\"StyleSheet\" href=\"lib3styles.css\" type=\"text/css\" />\n <link rel=\"Copyright\" href=\"17_intro/license.html\" type=\"text/html\" />\n </head>\n@@ -25,7 +25,7 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n@@ -94,8 +94,7 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n  <dt><code>--enable-cstdio=OPTION  </code></dt>\n  <dd><p>Select a target-specific I/O package. At the moment, the only\n         choice is to use 'stdio', a generic &quot;C&quot; abstraction.\n-        The default is 'stdio'.  A longer explanation is <a\n-        href=\"explanations.html#cstdio\">here</a>.\n+        The default is 'stdio'. \n      </p>\n  </dd>\n "}, {"sha": "6e0369b349a688e6315f8ca8886ad0234342354a", "filename": "libstdc++-v3/docs/html/debug.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -24,7 +24,7 @@ <h1 class=\"centered\"><a name=\"top\">Debugging schemes and strategies</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->"}, {"sha": "f14d1b65477a72d18fde8958a3d8fa580f5244f1", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 199, "deletions": 135, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,100 +6,33 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n  <meta name=\"KEYWORDS\" \n-  content=\"libstdc++, homepage, home, C++, library, c++, std, g++, ABI, STL\" />\n- <title>GNU C++ Standard Library</title>\n+  content=\"libstdc++, homepage, home, C++, library, c++, std, g++, STL\" />\n+ <title>The GNU C++ Library</title>\n <link rel=\"StyleSheet\" href=\"lib3styles.css\" type=\"text/css\" />\n <link rel=\"Copyright\" href=\"17_intro/license.html\" type=\"text/html\" />\n <link rel=\"Help\" href=\"faq/index.html\" type=\"text/html\" title=\"F.A.Q.\" />\n </head>\n <body>\n \n+<h1>The GNU C++ Library</h1>\n \n-<p><strong>All of these documents</strong> (in fact, this entire homepage set)\n-   are bundled with the library source, under the <code>docs</code>\n-   subdirectory, for releases and snapshots.  The sole exception is the\n-   automatically-generated source documentation, available separately.\n-</p>\n \n-<hr />\n-<br />\n-<h2><a name=\"1\">Introduction</a></h2>\n-   <p>This is a short list of text files pertaining to this implementation of\n-      ISO 14882.  A brief description may follow the name of the file.\n-   </p>\n-      <ul>\n-         <li><a href=\"17_intro/COPYING\">License</a>\n-         - GPL v2 license terms</li>\n-         <li><a href=\"abi.html\">ABI Policy and Guidelines</a></li>\n-         <li><a href=\"17_intro/BUGS\">BUGS</a></li>\n-         <li><a href=\"17_intro/PROBLEMS\">PROBLEMS</a>\n-         - target-specific known issues</li>\n-         <!-- Linking to \"../README\" doesn't work; we are at the top level\n-              of the web pages.  Punt.  -->\n-         <li>README - directory structure</li>\n-         <li><a href=\"17_intro/RELEASE-NOTES\">RELEASE-NOTES</a>\n-         - latest version info, recent changes and news</li>\n-         <li><a href=\"17_intro/TODO\">TODO</a>\n-         - tasks yet undone</li>\n-         <li><a href=\"faq/index.html\">FAQ (HTML)</a>, \n-             <a href=\"faq/index.txt\">FAQ (text)</a></li>\n-      </ul>\n+<h2><a name=\"3\">Table of Contents</a></h2>\n \n-<hr />\n-<br />\n-<h2><a name=\"2\">Configuring, Building, Testing, Installing</a></h2>\n-<ul>\n-   <li><a href=\"configopts.html\">Configure options</a></li>\n-   <li><a href=\"install.html\">Getting started: configure, build, install</a>\n-   </li>\n-   <li><a href=\"test.html\">Testing details</a></li>\n-   <li><a href=\"debug.html\">Debugging schemes and strategies</a>\n-   </li>\n-</ul>\n-\n-\n-<hr />\n-<br />\n-<h2><a name=\"4\">Source-Level Documentation</a></h2>\n-<p>The library sources have been specially formatted so that with the\n-   proper invocation of another tool (Doxygen), a set of HTML pages\n-   are generated from the sources files themselves.  The resultant\n-   documentation is referred to as Source-Level Documentation, and is\n-   useful for examining the signatures of public member functions for\n-   the library classes, finding out what is in a particular include\n-   file, looking at inheritance diagrams, etc.\n-</p>\n-<p>The source-level documentation for the most recent releases can\n-   be viewed online:\n-</p>\n-<ul>\n- <li><a href=\"libstdc++-html-USERS-3.4/index.html\">for the 3.4 release</a></li>\n- <li><a href=\"latest-doxygen/index.html\">&quot;the latest collection&quot;</a>\n-   (for the main development tree; see the date on the first page)\n- </li>\n-</ul>\n-<p>This generated HTML collection, as above, is also available for download in\n-   the libstdc++ snapshots directory at\n-   <code>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>.\n-   You will almost certainly need to use one of the\n-   <a href=\"http://gcc.gnu.org/mirrors.html\">mirror sites</a> to download\n-   the tarball.  After unpacking, simply load libstdc++-html-*/index.html\n-   into a browser.\n+<p>\n+The GNU Standard C++ Library is an ongoing <a\n+href=\"http://gcc.gnu.org/libstdc++\">project</a> to implement the ISO\n+14882 Standard C++ library as described in chapters 17 through 27 and\n+annex D, extensions as described by TR1, and future C++ library\n+standards still in progress. For those who want to see exactly how far\n+the project has come, or just want the latest bleeding-edge code, the\n+up-to-date source is always publically available over anonymous SVN,\n+and can be browsed over the <a\n+href=\"http://gcc.gnu.org/svn.html\">web</a>.\n </p>\n-<p>Documentation for older releases is available for download only, not\n-   online viewing.\n-</p>\n-<p>In addition, an initial set of man pages are also available in the\n-   same place as the HTML collections.  Start with C++Intro(3).\n-</p>\n-\n \n-<hr />\n-<br />\n-<h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n-<p>Information, extensions, notes and advice on specific implementation \n-   capabilites and/or liabilities broken down into chapter names based on the \n-   C++ standard.\n+<p>Stable versions of libstdc++ are included with releases of\n+   <a href=\"http://gcc.gnu.org/releases.html\">the GCC compilers</a>.\n </p>\n <!--\n   The list below is automatically generated.  To make changes in the text,\n@@ -109,96 +42,153 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n -->\n <!-- beginlist -->\n   <ul>\n-   <li>Library Introduction (Chapter 17)\n+   <li>Introduction\n    <ul>\n-     <li><a href=\"17_intro/howto.html#2\">The Standard C++ header files</a></li>\n-     <li><a href=\"17_intro/howto.html#3\">The Standard C++ library and multithreading</a></li>\n-     <li><a href=\"17_intro/howto.html#4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a></li>\n-     <li><a href=\"17_intro/porting-howto.html\">Porting HOWTO</a></li>\n-     <li><a href=\"17_intro/howto.html#5\">Behavior specific to libstdc++-v3</a></li>\n-     <li><a href=\"17_intro/howto.html#6\">Preprocessor macros controlling the library</a></li>\n+\n+    <li> Status\n+<ul>\n+\t<li>Implementation Status\n+   \t\t<ul>\n+   \t\t<li><a href=\"17_intro/c++1998_status.html\">C++1998</a>, \n+\t\tincluding <a href=\"17_intro/howto.html#5\">implementation-defined behavior</a> and  <a href=\"ext/howto.html#5\">LWG issues</a> </li>\n+   \t\t<li><a href=\"17_intro/tr1_status.html\">C++TR1</a></li>\n+   \t\t<li><a href=\"17_intro/c++0x_status.html\">C++0x</a></li>\n+   \t\t<li>Extensions</li>\n+   \t\t</ul>\n+   \t</li>\n+         <li><a href=\"17_intro/license.html\">License</a></li>\n+         <li><a href=\"http://gcc.gnu.org/bugzilla/buglist.cgi?cmdtype=runnamed&namedcmd=libstdc%2B%2B\">Known Bugs</a></li>\n+\n+</ul>\n+    </li>\n+\n+\n+\n+    <li> Configuring, Building, Testing, Installing\n+<ul>\n+   <li><a href=\"install.html\">Getting started: configure, build, install</a>\n+   </li>\n+   <li><a href=\"configopts.html\">Configure options</a></li>\n+   <li><a href=\"test.html\">Testing details</a></li>\n+   </li>\n+</ul>\n+    </li>\n+\n+    <li> Using the Library\n+      <ul>\n+         <li>Header Files</li>\n+         <ul>\n+         <li><a href=\"17_intro/howto.html#2.1\">Available headers</a></li>\n+         <li><a href=\"17_intro/howto.html#2.2\">Headers and <code>namespace std</code></a></li>\n+         <li>Pre-compiled headers</li>\n+         </ul>\n+\n+         <li>Namespaces</li>\n+         <ul>\n+         <li><a href=\"17_intro/howto.html#2.5\">Namespace <code>std::</code></a></li>\n+         <li><a href=\"17_intro/howto.html#2.6\">Using namespace composition</a></li>\n+         </ul>\n+         <li><a href=\"17_intro/howto.html#6\">Macros</a></li>\n+\n+ \t<li>Concurrency</li>\n+         <ul>\n+         <li>Atomic Operations</li>\n+         <li><a href=\"17_intro/howto.html#3\">Thread safety overview</a></li>\n+\n+\t  <li><a href=\"faq/index.html#5_6\">Is it thread safe?</li>\n+\t  <li><a href=\"23_containers/howto.html#3\">Containers</a></li>\n+\t  <li><a href=\"27_io/howto.html#9\">IO</a></li>\n+         </ul>\n+         <li>Exception safety</li>\n+\n+         <li><a href=\"debug.html\">Debugging support</a>\n+      </ul>\n+    </li>\n+\n    </ul>\n    </li>\n \n-   <li>Library Support (Chapter 18)\n+   <li>Support\n    <ul>\n      <li><a href=\"18_support/howto.html#1\">Types</a></li>\n-     <li><a href=\"18_support/howto.html#2\">Implementation properties</a></li>\n+     <li><a href=\"18_support/howto.html#2\">Implementation properties of builtin types</a></li>\n      <li><a href=\"18_support/howto.html#3\">Start and Termination</a></li>\n      <li><a href=\"18_support/howto.html#4\">Verbose <code>terminate</code></a></li>\n      <li><a href=\"18_support/howto.html#5\">Dynamic memory management</a></li>\n-     <li><a href=\"18_support/howto.html#6\">RTTI, the ABI, and demangling</a></li>\n    </ul>\n    </li>\n \n-   <li>Diagnostics (Chapter 19)\n+   <li>Diagnostics\n    <ul>\n+     <li>Exception class hierarchy</li>\n      <li><a href=\"19_diagnostics/howto.html#1\">Adding data to exceptions</a></li>\n-     <li><a href=\"19_diagnostics/howto.html#2\">Exception class hierarchy diagram</a></li>\n-     <li><a href=\"19_diagnostics/howto.html#3\">Concept checkers -- <strong>new and improved!</strong></a></li>\n+     <li><a href=\"19_diagnostics/howto.html#3\">Concept checking</a></li>\n    </ul>\n    </li>\n \n-   <li>General Utilities (Chapter 20)\n+   <li>General Utilities\n    <ul>\n-     <li><a href=\"20_util/howto.html#1\"><code>auto_ptr</code> is not omnipotent</a></li>\n-     <li><a href=\"20_util/howto.html#2\"><code>auto_ptr</code> inside container classes</a></li>\n      <li><a href=\"20_util/howto.html#3\">Functors</a></li>\n      <li><a href=\"20_util/howto.html#4\">Pairs</a></li>\n-     <li><a href=\"20_util/howto.html#5\">Memory allocators</a></li>\n+     <li>Memory</li>\n+    <ul>\n+    <li><a href=\"20_util/allocator.html\">allocator</a></li>\n+    <li>auto_ptr</li>\n+    <ul>\n+     <li><a href=\"20_util/howto.html#1\"><code>auto_ptr</code> is not omnipotent</a></li>\n+     <li><a href=\"20_util/howto.html#2\"><code>auto_ptr</code> inside container classes</a></li>\n+    </ul>\n+   </ul>\n    </ul>\n    </li>\n \n-   <li>Strings (Chapter 21)\n+   <li>Strings\n    <ul>\n-     <li><a href=\"21_strings/howto.html#1\">MFC's CString</a></li>\n      <li><a href=\"21_strings/howto.html#2\">A case-insensitive string class</a></li>\n      <li><a href=\"21_strings/howto.html#3\">Breaking a C++ string into tokens</a></li>\n      <li><a href=\"21_strings/howto.html#4\">Simple transformations</a></li>\n      <li><a href=\"21_strings/howto.html#5\">Making strings of arbitrary character types</a></li>\n      <li><a href=\"21_strings/howto.html#6\">Shrink-to-fit strings</a></li>\n+     <li><a href=\"21_strings/howto.html#1\">MFC's CString</a></li>\n    </ul>\n    </li>\n \n-   <li>Localization (Chapter 22)\n+   <li>Localization\n    <ul>\n      <li><a href=\"22_locale/howto.html#1\">class locale</a></li>\n      <li><a href=\"22_locale/howto.html#2\">class codecvt</a></li>\n      <li><a href=\"22_locale/howto.html#3\">class ctype</a></li>\n-     <li><a href=\"22_locale/howto.html#4\">class messages</a></li>\n-     <li><a href=\"22_locale/howto.html#5\">Bjarne Stroustrup on Locales</a></li>\n-     <li><a href=\"22_locale/howto.html#6\">Nathan Myers on Locales</a></li>\n      <li><a href=\"22_locale/howto.html#7\">Correct Transformations</a></li>\n+     <li><a href=\"22_locale/howto.html#4\">class messages</a></li>\n    </ul>\n    </li>\n \n-   <li>Containers (Chapter 23)\n+   <li>Containers\n    <ul>\n      <li><a href=\"23_containers/howto.html#1\">Making code unaware of the container/array difference</a></li>\n-     <li><a href=\"23_containers/howto.html#2\">Variable-sized bitmasks</a></li>\n-     <li><a href=\"23_containers/howto.html#3\">Containers and multithreading</a></li>\n      <li><a href=\"23_containers/howto.html#4\">&quot;Hinting&quot; during insertion</a></li>\n-     <li><a href=\"23_containers/howto.html#5\">Bitmasks and string arguments</a></li>\n      <li><a href=\"23_containers/howto.html#6\"><code>std::list::size()</code> is O(n)!</a></li>\n      <li><a href=\"23_containers/howto.html#7\">Space overhead management for vectors</a></li>\n+     <li><a href=\"23_containers/howto.html#2\">Variable-sized bitmasks</a></li>\n+     <li><a href=\"23_containers/howto.html#5\">Bitmasks and string arguments</a></li>\n    </ul>\n    </li>\n \n-   <li>Iterators (Chapter 24)\n+   <li>Iterators\n    <ul>\n      <li><a href=\"24_iterators/howto.html#1\">They ain't pointers!</a></li>\n      <li><a href=\"24_iterators/howto.html#2\">It ends <em>where?</em></a></li>\n    </ul>\n    </li>\n \n-   <li>Algorithms (Chapter 25)\n+   <li>Algorithms\n    <ul>\n      <li><a href=\"25_algorithms/howto.html#1\">Prerequisites</a></li>\n-     <li><a href=\"25_algorithms/howto.html#2\">Special <code>swap</code>s</a></li>\n+     <li><a href=\"25_algorithms/howto.html#2\">Specializations for <code>swap</code></a></li>\n    </ul>\n    </li>\n \n-   <li>Numerics (Chapter 26)\n+   <li>Numerics\n    <ul>\n      <li><a href=\"26_numerics/howto.html#1\">Complex Number Processing</a></li>\n      <li><a href=\"26_numerics/howto.html#2\">Array Processing</a></li>\n@@ -207,7 +197,7 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n    </ul>\n    </li>\n \n-   <li>Input/Output (Chapter 27)\n+   <li>Input/Output\n    <ul>\n      <li><a href=\"27_io/howto.html#1\">Copying a file</a></li>\n      <li><a href=\"27_io/howto.html#2\">The buffering is screwing up my program!</a></li>\n@@ -227,43 +217,117 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n      <li><a href=\"ext/howto.html#4\">Compile-time checks</a></li>\n      <li><a href=\"debug_mode.html\">Debug mode</a></li>\n      <li><a href=\"parallel_mode.html\">Parallel mode</a></li>\n-     <li><a href=\"ext/pb_ds/index.html\">Policy Based Data Structures</a></li>\n-     <li><a href=\"ext/howto.html#1\">Ropes and trees and hashes, oh my!</a></li>\n-     <li><a href=\"ext/howto.html#2\">Added members and types</a></li>\n+     <li> Allocators</li>\n+     <ul>\n      <li><a href=\"ext/mt_allocator.html\"><code>__mt_alloc</code> </a></li>\n-     <li><a href=\"ext/howto.html#5\">LWG Issues</a></li>\n+     <li><a href=\"ext/ballocator_doc.html\">Bitmap Allocator</a></li>\n+     </ul>\n+\n+     <li> Containers </li>\n+       <ul> \n+       <li><a href=\"ext/pb_ds/index.html\">Policy Based Data Structures</a></li>\n+       <li><a href=\"ext/howto.html#1\">Ropes and trees and hashes, oh my!</a></li>\n+       </ul>\n+\n+     <li> Algorithms</li>\n+<ul>\n+     <li><a href=\"ext/sgiexts.html\">HP/SGI STL Extensions</a></li>\n+</ul>\n+\n+     <li> Input/Output</li>\n+<ul>\n+     <li><a href=\"27_io/howto.html#11\">Derived filebuf classes</a></li>\n+</ul>\n      <li><a href=\"ext/../18_support/howto.html#6\">Demangling</a></li>\n    </ul>\n    </li>\n \n-  </ul>\n-<!-- endlist -->\n-\n-<hr />\n-<br />\n-<h2><a name=\"5\">Contributor-Specific Information</a></h2>\n+   <li>Appendix\n+   <ul>\n+     <li>A. <a name=\"5\">Contributing and Maintenance</a></li>\n <ul>\n    <li><a href=\"17_intro/contribute.html\">Contributor checklist</a></li>\n-   <li><a href=\"http://gcc.gnu.org/svnwrite.html\">Getting SVN write access\n+   <li><a href=\"http://gcc.gnu.org/svnwrite.html\">Getting write access\n        (look for &quot;Write after approval&quot;)</a></li>\n    <li><a href=\"17_intro/BADNAMES\">BADNAMES</a>\n        - names to avoid because of potential collisions</li>\n-   <li><a href=\"17_intro/C++STYLE\">C++STYLE</a>\n-       - coding style by example</li>\n-   <li> In the libstdc++-v3/docs/doxygen directory, see guide.html, a\n-       doxygen markup style guide</li>\n-   <li><a href=\"17_intro/CHECKLIST\">CHECKLIST</a>\n-       - a list of required features and their status.</li>\n+   <li><a href=\"17_intro/C++STYLE\">Coding style, by example</a></li>\n+   <li> Doxygen markup style guide. In the source docs/doxygen directory, see guide.html. Here's the a link to the current <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/docs/doxygen/guide.html?content-type=text%2Fplain\">page</a>.\n+</li>\n    <li><a href=\"17_intro/DESIGN\">DESIGN</a>\n        - overview of the implementation plan</li>\n-   <li><a href=\"17_intro/HEADER_POLICY\">HEADER_POLICY</a>\n-       - header naming and sub-include structure</li>\n+  <li>Header policy, namespace map, API conventions</li>\n </ul>\n \n-<!-- ####################################################### -->\n+     <li>B. Porting</li>\n+\n+<ul>\n+     <li><a href=\"17_intro/porting.html\">Porting to new hardware or operating systems.</a></li>\n+     <li><a href=\"17_intro/abi.html\">ABI Policy and Guidelines</a></li>\n+     <li><a href=\"17_intro/api.html\">API Evolution and Deprecation History</a></li>\n+</ul>\n+\n+     <li>C. <a href=\"http://www.gnu.org/software/libc/manual/html_node/Free-Manuals.html#Free-Manuals\">Free Software Needs Free Documentation </a>\n+   </ul>\n+   </li>\n+\n+  </ul>\n+<!-- endlist -->\n+\n \n+<hr />\n+<br />\n+<h2><a name=\"4\">Source-Level Documentation</a></h2>\n+<p>The library sources have been specially formatted so that with the\n+   proper invocation of another tool (Doxygen), a set of HTML pages\n+   are generated from the sources files themselves.  The resultant\n+   documentation is referred to as Source-Level Documentation, and is\n+   useful for examining the signatures of public member functions for\n+   the library classes, finding out what is in a particular include\n+   file, looking at inheritance diagrams, etc.\n+</p>\n+<p>The source-level documentation for the most recent releases can\n+   be viewed online:\n+</p>\n+<ul>\n+ <li><a href=\"libstdc++-html-USERS-3.4/index.html\">for the 3.4 release</a></li>\n+ <li><a href=\"libstdc++-html-USERS-4.1/index.html\">for the 4.1 release</a></li>\n+ <li><a href=\"libstdc++-html-USERS-4.2/index.html\">for the 4.2 release</a></li>\n+ <li><a href=\"latest-doxygen/index.html\">&quot;the latest collection&quot;</a>\n+   (for the main development tree; see the date on the first page)\n+ </li>\n+</ul>\n+<p>This generated HTML collection, as above, is also available for download in\n+   the libstdc++ snapshots directory at\n+   <code>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>.\n+   You will almost certainly need to use one of the\n+   <a href=\"http://gcc.gnu.org/mirrors.html\">mirror sites</a> to download\n+   the tarball.  After unpacking, simply load libstdc++-html-*/index.html\n+   into a browser.\n+</p>\n+<p>Documentation for older releases is available for download only, not\n+   online viewing.\n+</p>\n+<p>In addition, an initial set of man pages are also available in the\n+   same place as the HTML collections.  Start with C++Intro(3).\n+</p>\n+\n+<hr />\n+<br />\n+<h2><a name=\"7\"><a href=\"faq/index.html\">Frequently Asked Questions</a></a></h2\n+\n+<hr />\n+<br />\n+<p><strong>All of these documents</strong> (in fact, this entire homepage set)\n+   are bundled with the library source, under the <code>docs</code>\n+   subdirectory, for releases and snapshots.  The sole exception is the\n+   automatically-generated source documentation, available separately.\n+</p>\n+\n+<!-- ####################################################### -->\n <p>Return <a href=\"http://gcc.gnu.org/libstdc++/\">to the libstdc++ homepage</a>.</p>\n \n+\n <hr />\n <p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions."}, {"sha": "938b449d47ae4f6c823f1760d7975e8d921b6907", "filename": "libstdc++-v3/docs/html/explanations.html", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,86 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n-<!DOCTYPE html\n-          PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n-   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\" />\n-   <meta name=\"DESCRIPTION\" content=\"Explanatory notes about libstdc++-v3.\" />\n-   <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>Explanatory notes about libstdc++-v3 design</title>\n-<link rel=\"StyleSheet\" href=\"lib3styles.css\" type=\"text/css\" />\n-<link rel=\"Copyright\" href=\"17_intro/license.html\" type=\"text/html\" />\n-</head>\n-<body>\n-\n-<h1 class=\"centered\"><a name=\"top\">Explanatory notes about libstdc++-v3\n-design</a></h1>\n-\n-<p class=\"fineprint\"><em>\n-   The latest version of this document is always available at\n-   <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/explanations.html\">\n-   http://gcc.gnu.org/onlinedocs/libstdc++/explanations.html</a>.\n-</em></p>\n-\n-<p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n-</em></p>\n-\n-\n-<!-- ####################################################### -->\n-<hr />\n-<h3><a name=\"cstdio\">&quot;I/O packages&quot;, <code>--enable-cstdio</code></a></h3>\n-<p>In addition to all the nifty things which C++ can do for I/O, its library\n-   also includes all of the I/O capabilites of C.  Making them work together\n-   can be a challenge, not only\n-   <a href=\"27_io/howto.html#8\">for the programmer</a> but for the\n-   implementors as well.\n-</p>\n-<p>There are two ways to do a C++ library:  the cool way, and the easy way.\n-   More specifically, the cool-but-easy-to-get-wrong way, and the\n-   easy-to-guarantee-correct-behavior way.  For 3.0, the easy way is used.\n-</p>\n-<p>Choosing 'stdio' is the easy way.  It builds a C++ library which forwards\n-   all operations to the C library.  Many of the C++ I/O functions are\n-   specified in the standard 'as if' they called a certain C function; the\n-   easiest way to get it correct is to actually call that function.  The\n-   disadvantage is that the C++ code will run slower (fortunately, the layer\n-   is thin).\n-</p>\n-<p>Other packages are possible.  For a new package, a header must be\n-   written to provide types like streamsize (usually just a typedef), as\n-   well as some internal types like<code> __c_file_type </code> and\n-   <code> __c_lock </code> (for the stdio case, these are FILE (as in\n-   &quot;FILE*&quot;) and a simple POSIX mutex, respectively).  An\n-   interface class called <code> __basic_file </code> must also be filled in;\n-   as an example, for the stdio case, these member functions are all\n-   inline calles to fread, fwrite, etc.\n-</p>\n-<p>Return <a href=\"#top\">to the top of the page</a> or\n-   <a href=\"http://gcc.gnu.org/libstdc++/\">to the homepage</a>.\n-</p>\n-\n-\n-<hr />\n-<h3><a name=\"alloc\">Internal Allocators</a></h3>\n-<p>\n-</p>\n-<p>Return <a href=\"#top\">to the top of the page</a> or\n-   <a href=\"http://gcc.gnu.org/libstdc++/\">to the homepage</a>.\n-</p>\n-\n-\n-<!-- ####################################################### -->\n-\n-<hr />\n-<p class=\"fineprint\"><em>\n-See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n-Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n-</em></p>\n-\n-\n-</body>\n-</html>"}, {"sha": "064f5935e72644f6e23e3a5fe16cd9b3691c52ad", "filename": "libstdc++-v3/docs/html/ext/ballocator_doc.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fballocator_doc.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fballocator_doc.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fballocator_doc.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -15,7 +15,7 @@ <h1 style=\"text-align: center;\">Bitmap Allocator</h1>\n  href=\"http://gcc.gnu.org/onlinedocs/libstdc++/ext/ballocator_doc.html\">\n http://gcc.gnu.org/onlinedocs/libstdc++/ext/ballocator_doc.html</a>.</small></small></em><br>\n <br>\n-<em> To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3\n+<em> To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++\n homepage</a>.</em><br>\n <br>\n <hr style=\"width: 100%; height: 2px;\"><br>\n@@ -415,7 +415,7 @@ <h3 style=\"text-align: center;\">Data Layout for a Super Block:</h3>\n create a function that returns the Max_Wastage_Percentage for us to use.<br>\n <br>\n <hr style=\"width: 100%; height: 2px;\"><small><small><em> See <a\n- href=\"file:///home/dhruv/projects/libstdc++-v3/gcc/libstdc++-v3/docs/html/17_intro/license.html\">license.html</a>\n+ href=\"file:///home/dhruv/projects/libstdc++/gcc/libstdc++/docs/html/17_intro/license.html\">license.html</a>\n for copying conditions. Comments and suggestions are welcome, and may\n be\n sent to <a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing"}, {"sha": "7e9d9bafae92c97dc10d21f5add7d4e2201bb4a2", "filename": "libstdc++-v3/docs/html/ext/debug_mode.html", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fdebug_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fdebug_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fdebug_mode.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -23,7 +23,7 @@ <h1 class=\"centered\"><a name=\"top\">Design of the libstdc++ debug mode</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n ", "previous_filename": "libstdc++-v3/docs/html/debug_mode.html"}, {"sha": "5dea146ae4608568699f66a926d9532be7f44662", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -10,7 +10,7 @@\n    <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"Notes for the libstdc++ extensions.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 HOWTO:  Extensions</title>\n+   <title>libstdc++ HOWTO:  Extensions</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -37,7 +37,7 @@ <h1 class=\"centered\"><a name=\"top\">Extensions</a></h1>\n        existence, of these extensions may change with little or no\n        warning.  (Ideally, the really good ones will appear in the next\n        revision of C++.)  Also, other platforms, other compilers, other\n-       versions of g++ or libstdc++-v3 may not recognize these names, or\n+       versions of g++ or libstdc++ may not recognize these names, or\n        treat them differently, or... </li>\n    <li>You should know how to <a href=\"../faq/index.html#5_4\">access\n        these headers properly</a>. </li>\n@@ -144,7 +144,7 @@ <h2><a name=\"2\">Added members and types</a></h2>\n \n <hr />\n <h2><a name=\"4\">Compile-time checks</a></h2>\n-   <p>Currently libstdc++-v3 uses the concept checkers from the Boost\n+   <p>Currently libstdc++ uses the concept checkers from the Boost\n       library to perform <a href=\"../19_diagnostics/howto.html#3\">optional\n       compile-time checking</a> of template instantiations of the standard\n       containers.  They are described in the linked-to page.\n@@ -161,7 +161,7 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n       for making changes to the library.  They periodically publish an\n       Issues List containing problems and possible solutions.  As they reach\n       a consensus on proposed solutions, we often incorporate the solution\n-      into libstdc++-v3.\n+      into libstdc++.\n    </p>\n    <p>Here are the issues which have resulted in code changes to the library.\n       The links are to the specific defect reports from a <strong>partial"}, {"sha": "b53e7e6200eca2ec5d83d200071eaa5c29b9b599", "filename": "libstdc++-v3/docs/html/ext/mt_allocator.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -27,7 +27,7 @@ <h1 class=\"centered\"><a name=\"top\">A fixed-size, multi-thread optimized allocato\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->"}, {"sha": "2e4f6624f8de2329707dc9092feb6ea7ed0ae209", "filename": "libstdc++-v3/docs/html/ext/parallel_mode.html", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fparallel_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fparallel_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fparallel_mode.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -24,7 +24,7 @@ <h1 class=\"centered\"><a name=\"top\">The libstdc++ parallel mode</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->", "previous_filename": "libstdc++-v3/docs/html/parallel_mode.html"}, {"sha": "7f9b8c0c56d66bc14d7ca0791aa1c35629d9ec23", "filename": "libstdc++-v3/docs/html/ext/sgiexts.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,10 +6,10 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n-   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, STL, SGI\" />\n-   <meta name=\"DESCRIPTION\" content=\"SGI extensions preserved in libstdc++-v3.\" />\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++, GCC, g++, STL, SGI\" />\n+   <meta name=\"DESCRIPTION\" content=\"SGI extensions preserved in libstdc++.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>SGI extensions to the library in libstdc++-v3</title>\n+   <title>SGI extensions to the library in libstdc++</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" type=\"text/css\" />\n <link rel=\"Start\" href=\"../documentation.html\" type=\"text/html\"\n   title=\"GNU C++ Standard Library\" />\n@@ -20,7 +20,7 @@\n <body>\n \n <h1 class=\"centered\"><a name=\"top\">SGI extensions to the library in\n-libstdc++-v3</a></h1>\n+libstdc++</a></h1>\n \n <p>This page describes the extensions that SGI made to their version of the\n    STL subset of the Standard C++ Library.  For a time we\n@@ -44,7 +44,7 @@ <h1 class=\"centered\"><a name=\"top\">SGI extensions to the library in\n    documentation, buy a copy of Matt Austern's book.  *grin*\n </p>\n \n-<p>Back to the <a href=\"howto.html\">libstdc++-v3 extensions</a>.\n+<p>Back to the <a href=\"howto.html\">libstdc++ extensions</a>.\n </p>\n \n "}, {"sha": "de316d1722854917fb10743d22bd0c6b56da6eaa", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 37, "deletions": 57, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,9 +6,9 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n-   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, libg++, STL\" />\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++, GCC, g++, libg++, STL\" />\n    <meta name=\"DESCRIPTION\" content=\"FAQ for the GNU libstdc++ effort.\" />\n-   <title>libstdc++-v3 FAQ</title>\n+   <title>libstdc++ FAQ</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" />\n <link rel=\"Start\" rev=\"Help\" href=\"../documentation.html\" type=\"text/html\"\n  title=\"GNU C++ Standard Library\" />\n@@ -28,7 +28,7 @@ <h1 class=\"centered\">libstdc++ Frequently Asked Questions</h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n@@ -38,21 +38,21 @@ <h1>Questions</h1>\n    <li><a href=\"#1_0\">General Information</a>\n    <!-- I suspect these will mostly be links to/into existing documents. -->\n    <ol>\n-      <li><a href=\"#1_1\">What is libstdc++-v3?</a> </li>\n+      <li><a href=\"#1_1\">What is libstdc++?</a> </li>\n       <li><a href=\"#1_2\">Why should I use libstdc++?</a> </li>\n       <li><a href=\"#1_3\">Who's in charge of it?</a> </li>\n-      <li><a href=\"#1_4\">How do I get libstdc++?</a> </li>\n+      <li><a href=\"#1_4\">[removed]</a> </li>\n       <li><a href=\"#1_5\">When is libstdc++ going to be finished?</a> </li>\n       <li><a href=\"#1_6\">How do I contribute to the effort?</a> </li>\n       <li><a href=\"#1_7\">What happened to libg++?  I need that!</a> </li>\n       <li><a href=\"#1_8\">What if I have more questions?</a> </li>\n-      <li><a href=\"#1_9\">What are the license terms for libstdc++-v3?</a> </li>\n+      <li><a href=\"#1_9\">What are the license terms for libstdc++?</a> </li>\n    </ol>\n    </li>\n \n    <li><a href=\"#2_0\">Installation</a>\n       <ol>\n-         <li><a href=\"#2_1\">How do I install libstdc++-v3?</a> </li>\n+         <li><a href=\"#2_1\">How do I install libstdc++?</a> </li>\n          <li><a href=\"#2_2\">[removed]</a> </li>\n          <li><a href=\"#2_3\">What is this SVN thing that you keep\n                             mentioning?</a> </li>\n@@ -66,7 +66,7 @@ <h1>Questions</h1>\n \n    <li><a href=\"#3_0\">Platform-Specific Issues</a>\n       <ol>\n-         <li><a href=\"#3_1\">Can libstdc++-v3 be used with &lt;my\n+         <li><a href=\"#3_1\">Can libstdc++ be used with &lt;my\n                             favorite compiler&gt;?</a> </li>\n          <li><a href=\"#3_2\">[removed]</a> </li>\n          <li><a href=\"#3_3\">[removed]</a> </li>\n@@ -85,7 +85,7 @@ <h1>Questions</h1>\n    <li><a href=\"#4_0\">Known Bugs and Non-Bugs</a>\n       <ol>\n          <li><a href=\"#4_1\">What works already?</a> </li>\n-         <li><a href=\"#4_2\">Bugs in gcc/g++ (not libstdc++-v3)</a> </li>\n+         <li><a href=\"#4_2\">Bugs in gcc/g++ (not libstdc++)</a> </li>\n          <li><a href=\"#4_3\">Bugs in the C++ language/lib specification</a> </li>\n          <li><a href=\"#4_4\">Things in libstdc++ that only look like bugs</a><ul>\n            <li><a href=\"#4_4_iostreamclear\">reopening a stream fails</a> </li>\n@@ -110,11 +110,11 @@ <h1>Questions</h1>\n       <ol>\n          <li><a href=\"#5_1\">string::iterator is not char*;\n                             vector&lt;T&gt;::iterator is not T*</a> </li>\n-         <li><a href=\"#5_2\">What's next after libstdc++-v3?</a> </li>\n+         <li><a href=\"#5_2\">What's next after libstdc++?</a> </li>\n          <li><a href=\"#5_3\">What about the STL from SGI?</a> </li>\n          <li><a href=\"#5_4\">Extensions and Backward Compatibility</a> </li>\n          <li><a href=\"#5_5\">Does libstdc++ support TR1?</a> </li>\n-         <li><a href=\"#5_6\">Is libstdc++-v3 thread-safe?</a> </li>\n+         <li><a href=\"#5_6\">Is libstdc++ thread-safe?</a> </li>\n          <li><a href=\"#5_7\">How do I get a copy of the ISO C++ Standard?</a> </li>\n          <li><a href=\"#5_8\">What's an ABI and why is it so messy?</a> </li>\n          <li><a href=\"#5_9\">How do I make std::vector&lt;T&gt;::capacity() \n@@ -130,23 +130,15 @@ <h1>Questions</h1>\n \n <h1><a name=\"1_0\">1.0 General Information</a></h1>\n <!-- I suspect these will mostly be links to/into existing documents. -->\n-   <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n+   <h2><a name=\"1_1\">1.1 What is libstdc++?</a></h2>\n       <p>The GNU Standard C++ Library v3 is an\n          ongoing project to implement the ISO 14882 Standard C++ library\n          as described in chapters 17 through 27 and annex D.\n          For those who want to see exactly how\n          far the project has come, or just want the latest\n          bleeding-edge code, the up-to-date source is available over\n-         anonymous SVN, and can even be browsed over the Web (see\n-         <a href=\"#1_4\">1.4</a> below).\n-      </p>\n-      <p>The older libstdc++-v2 project is no longer maintained; the code\n-         has been completely replaced and rewritten.\n-         <a href=\"#4_4_interface\">If you are using V2</a>, then you need to\n-         report bugs to your system vendor, not to the V3 list.\n-      </p>\n-      <p>A more formal description of the V3 goals can be found in the\n-         official <a href=\"../17_intro/DESIGN\">design document</a>.\n+         anonymous SVN, and can even be browsed over the \n+         <a href=\"http://gcc.gnu.org/svn.html\">web</a>.\n       </p>\n \n <hr />\n@@ -164,7 +156,7 @@ <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n          is overseen by the\n          <a href=\"http://gcc.gnu.org/\">GCC team</a>.  All of\n          the rapid development and near-legendary\n-         <a href=\"http://gcc.gnu.org/gcc-3.3/buildstat.html\">portability</a>\n+         <a href=\"http://gcc.gnu.org/buildstat.html\">portability</a>\n          that are the hallmarks of an open-source project are being\n          applied to libstdc++.\n       </p>\n@@ -192,17 +184,10 @@ <h2><a name=\"1_3\">1.3 Who's in charge of it?</a></h2>\n \n <hr />\n    <h2><a name=\"1_4\">1.4 How do I get libstdc++?</a></h2>\n-      <p>The <a href=\"http://gcc.gnu.org/libstdc++/\">homepage</a>\n-         has instructions for retrieving the latest SVN sources, and for\n-         browsing the SVN sources over the web.\n-      </p>\n+\n       <p>Stable versions of libstdc++-v3 are included with releases of\n          <a href=\"http://gcc.gnu.org/releases.html\">the GCC compilers</a>.\n       </p>\n-      <p>The subset commonly known as the Standard Template Library\n-         (chapters 23 through 25, mostly) is adapted from the final release\n-         of the SGI STL, with extensive changes.\n-      </p>\n \n <hr />\n    <h2><a name=\"1_5\">1.5 When is libstdc++ going to be finished?</a></h2>\n@@ -266,7 +251,7 @@ <h2><a name=\"1_7\">1.7 What happened to libg++?  I need that!</a></h2>\n \n <hr />\n    <h2><a name=\"1_8\">1.8 What if I have more questions?</a></h2>\n-      <p>If you have read the README and RELEASE-NOTES files, and your\n+      <p>If you have read the README file, and your\n          question remains unanswered, then just ask the mailing list.\n          At present, you do not need to be subscribed to the list to\n          send a message to it.  More information is available on the\n@@ -281,14 +266,14 @@ <h2><a name=\"1_8\">1.8 What if I have more questions?</a></h2>\n       </p>\n \n <hr />\n-   <h2><a name=\"1_9\">1.9 What are the license terms for libstdc++-v3?</a></h2>\n+   <h2><a name=\"1_9\">1.9 What are the license terms for libstdc++?</a></h2>\n       <p>See <a href=\"../17_intro/license.html\">our license description</a>\n          for these and related questions.\n       </p>\n \n <hr />\n <h1><a name=\"2_0\">2.0 Installation</a></h1>\n-   <h2><a name=\"2_1\">2.1 How do I install libstdc++-v3?</a></h2>\n+   <h2><a name=\"2_1\">2.1 How do I install libstdc++?</a></h2>\n       <p>Complete instructions are not given here (this is a FAQ, not\n          an installation document), but the tools required are few:\n       </p>\n@@ -310,12 +295,10 @@ <h2><a name=\"2_1\">2.1 How do I install libstdc++-v3?</a></h2>\n          with new flags such as --enable-threads are there also, as well as\n          patches and instructions for working with GCC 2.95.\n       </p>\n-      <p>The top-level install.html and\n-         <a href=\"../17_intro/RELEASE-NOTES\">RELEASE-NOTES</a> files contain\n+      <p>The top-level install.html file contains\n          the exact build and installation instructions.  You may wish to\n          browse those files over ViewVC ahead of time to get a feel for\n-         what's required.  RELEASE-NOTES is located in the\n-         &quot;.../docs/17_intro/&quot; directory of the distribution.\n+         what's required. \n       </p>\n \n <hr />\n@@ -343,7 +326,7 @@ <h2><a name=\"2_3\">2.3 What is this SVN thing that you\n \n <hr />\n    <h2><a name=\"2_4\">2.4 How do I know if it works?</a></h2>\n-      <p>libstdc++-v3 comes with its own testsuite.  You do not need\n+      <p>libstdc++ comes with its own testsuite.  You do not need\n          to actually install the library (&quot;<code>make\n          install</code>&quot;) to run the testsuite, but you do need\n          DejaGNU, as described\n@@ -367,7 +350,7 @@ <h2><a name=\"2_5\">2.5 This library is HUGE!  And what's libsupc++?</a></h2>\n          into your executable, not the entire library.  Unfortunately, even\n          if you only need a single function or variable from an object file,\n          the entire object file is extracted.  (There's nothing unique to C++\n-         or libstdc++-v3 about this; it's just common behavior, given here\n+         or libstdc++ about this; it's just common behavior, given here\n          for background reasons.)\n       </p>\n       <p>Some of the object files which make up libstdc++.a are rather large.\n@@ -376,7 +359,7 @@ <h2><a name=\"2_5\">2.5 This library is HUGE!  And what's libsupc++?</a></h2>\n          of your executable.  Historically the best way around this was to\n          only place a very few functions (often only a single one) in each\n          source/object file; then extracting a single function is the same\n-         as extracting a single .o file.  For libstdc++-v3 this is only\n+         as extracting a single .o file.  For libstdc++ this is only\n          possible to a certain extent; the object files in question contain\n          template classes and template functions, pre-instantiated, and\n          splitting those up causes severe maintenance headaches.\n@@ -449,7 +432,7 @@ <h2><a name=\"2_6\">2.6 Why do I get an error saying\n \n <hr />\n <h1><a name=\"3_0\">3.0 Platform-Specific Issues</a></h1>\n-   <h2><a name=\"3_1\">3.1 Can libstdc++-v3 be used with &lt;my\n+   <h2><a name=\"3_1\">3.1 Can libstdc++ be used with &lt;my\n                          favorite compiler&gt;?</a></h2>\n       <p>Probably not.  Yet.</p>\n       <p>Because GCC advances so rapidly, development and testing of\n@@ -594,8 +577,7 @@ <h2><a name=\"3_10\">3.10 MIPS atomic operations</a></h2>\n <h1><a name=\"4_0\">4.0 Known Bugs and Non-Bugs</a></h1>\n    <em>Note that this section can get rapidly outdated -- such is the\n        nature of an open-source project.  For the latest information, join\n-       the mailing list or look through recent archives.   The RELEASE-\n-       NOTES and BUGS files are generally kept up-to-date.</em>\n+       the mailing list or look through GCC bugzilla.</em>\n \n    <p>For 3.0.1, the most common &quot;bug&quot; is an apparently missing\n       &quot;<code>../</code>&quot; in include/Makefile, resulting in files\n@@ -631,13 +613,12 @@ <h2><a name=\"4_1\">4.1 What works already?</a></h2>\n          corner cases.  Also, localization is incomplete.  For whether it works\n          well, or as you expect it to work, see 5.2.\n       </p>\n-      <p>Long answer:  See the docs/html/17_intro/CHECKLIST file, which is\n-         badly outdated...  Also see the RELEASE-NOTES file, which is kept\n-         more up to date.\n+      <p>Long answer: See the implementation status pages for C++98,\n+         TR1, and C++0x.\n       </p>\n \n <hr />\n-   <h2><a name=\"4_2\">4.2 Bugs in gcc/g++ (not libstdc++-v3)</a></h2>\n+   <h2><a name=\"4_2\">4.2 Bugs in gcc/g++ (not libstdc++)</a></h2>\n       <p>This is by no means meant to be complete nor exhaustive, but\n          mentions some problems that users may encounter when building\n          or using libstdc++.  If you are experiencing one of these\n@@ -646,8 +627,7 @@ <h2><a name=\"4_2\">4.2 Bugs in gcc/g++ (not libstdc++-v3)</a></h2>\n       </p>\n       <p>Before reporting a bug, examine the\n          <a href=\"http://gcc.gnu.org/bugs.html\">bugs database</a> with the\n-         category set to &quot;libstdc++&quot;.  The BUGS file in the source\n-         tree also tracks known serious problems.\n+         category set to &quot;libstdc++&quot;. \n       </p>\n       <ul>\n          <li>Debugging is problematic, due to bugs in line-number generation\n@@ -746,7 +726,7 @@ <h3><a name=\"4_4_interface\">The g++-3 headers are <em>not ours</em></a></h3>\n          libstdc++-v2 library, which is nonstandard and unmaintained.  Do not\n          report problems with -v2 to the -v3 mailing list.\n       </p>\n-      <p>For GCC versions 3.0 and 3.1 the libstdc++-v3 header files are\n+      <p>For GCC versions 3.0 and 3.1 the libstdc++ header files are\n          installed in <code>${prefix}/include/g++-v3</code> (see the 'v'?).\n          Starting with version 3.2 the headers are installed in\n          <code>${prefix}/include/c++/${version}</code> as this prevents\n@@ -768,7 +748,7 @@ <h3><a name=\"4_4_interface\">The g++-3 headers are <em>not ours</em></a></h3>\n       <p>Note that 2.95.x shipped with the\n          <a href=\"#4_4_interface\">old v2 library</a> which is no longer\n          maintained.  Also note that gcc 2.95.3 fixes this problem, but\n-         requires a separate patch for libstdc++-v3.\n+         requires a separate patch for libstdc++.\n       </p>\n       <p><a name=\"4_4_checks\"><strong>concept checks</strong></a>\n          If you see compilation errors containing messages about\n@@ -855,8 +835,8 @@ <h2><a name=\"5_1\">5.1 string::iterator is not char*;\n       </p>\n \n <hr />\n-   <h2><a name=\"5_2\">5.2 What's next after libstdc++-v3?</a></h2>\n-      <p>Hopefully, not much.  The goal of libstdc++-v3 is to produce\n+   <h2><a name=\"5_2\">5.2 What's next after libstdc++?</a></h2>\n+      <p>Hopefully, not much.  The goal of libstdc++ is to produce\n          a fully-compliant, fully-portable Standard Library.  After that,\n          we're mostly done:  there won't <em>be</em> any more compliance\n          work to do.  However:\n@@ -883,7 +863,7 @@ <h2><a name=\"5_2\">5.2 What's next after libstdc++-v3?</a></h2>\n       <li><p>The current libstdc++ contains extensions to the Library which\n          must be explicitly requested by client code (for example, the\n          hash tables from SGI).  Other extensions may be added to\n-         libstdc++-v3 if they seem to be &quot;standard&quot; enough.\n+         libstdc++ if they seem to be &quot;standard&quot; enough.\n          (For example, the &quot;long long&quot; type from C99.)\n          Bugfixes and rewrites (to improve or fix thread safety, for\n          instance) will of course be a continuing task.\n@@ -1061,8 +1041,8 @@ <h2><a name=\"5_5\">5.5 Does libstdc++ support TR1?</a></h2>\n       </p>\n \n <hr />\n-   <h2><a name=\"5_6\">5.6 Is libstdc++-v3 thread-safe?</a></h2>\n-      <p>libstdc++-v3 strives to be thread-safe when all of the following\n+   <h2><a name=\"5_6\">5.6 Is libstdc++ thread-safe?</a></h2>\n+      <p>libstdc++ strives to be thread-safe when all of the following\n          conditions are met:\n       </p>\n       <ul>"}, {"sha": "907de9fd1d00e99efb0d6d4e57163e81bb069cc8", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "removed", "additions": 0, "deletions": 1118, "changes": 1118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,1118 +0,0 @@\n-\n-   #[1]GNU C++ Standard Library [2]Copyright\n-\n-                     libstdc++ Frequently Asked Questions\n-\n-   The latest version of this document is always available at\n-   [3]http://gcc.gnu.org/onlinedocs/libstdc++/faq/. The main\n-   documentation page is at\n-   [4]http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html. \n-\n-   To the [5]libstdc++-v3 homepage. \n-     _________________________________________________________________\n-\n-                                   Questions\n-\n-    1. [6]General Information\n-         1. [7]What is libstdc++-v3?\n-         2. [8]Why should I use libstdc++?\n-         3. [9]Who's in charge of it?\n-         4. [10]How do I get libstdc++?\n-         5. [11]When is libstdc++ going to be finished?\n-         6. [12]How do I contribute to the effort?\n-         7. [13]What happened to libg++? I need that!\n-         8. [14]What if I have more questions?\n-         9. [15]What are the license terms for libstdc++-v3?\n-    2. [16]Installation\n-         1. [17]How do I install libstdc++-v3?\n-         2. [18][removed]\n-         3. [19]What is this SVN thing that you keep mentioning?\n-         4. [20]How do I know if it works?\n-         5. [21]This library is HUGE! And what's libsupc++?\n-         6. [22]Why do I get an error saying libstdc++.so.X is missing\n-            when I run my program?\n-    3. [23]Platform-Specific Issues\n-         1. [24]Can libstdc++-v3 be used with <my favorite compiler>?\n-         2. [25][removed]\n-         3. [26][removed]\n-         4. [27]I can't use 'long long' on Solaris\n-         5. [28]_XOPEN_SOURCE / _GNU_SOURCE / etc is always defined\n-         6. [29]OS X ctype.h is broken! How can I hack it?\n-         7. [30]Threading is broken on i386\n-         8. [31]Recent GNU/Linux glibc required?\n-         9. [32]Can't use wchar_t/wstring on FreeBSD\n-        10. [33]MIPS atomic operations\n-    4. [34]Known Bugs and Non-Bugs\n-         1. [35]What works already?\n-         2. [36]Bugs in gcc/g++ (not libstdc++-v3)\n-         3. [37]Bugs in the C++ language/lib specification\n-         4. [38]Things in libstdc++ that only look like bugs\n-               o [39]reopening a stream fails\n-               o [40]-Weffc++ complains too much\n-               o [41]\"ambiguous overloads\" after including an old-style\n-                 header\n-               o [42]The g++-3 headers are not ours\n-               o [43]compilation errors from streambuf.h\n-               o [44]errors about *Concept and constraints in the STL...\n-               o [45]program crashes when using library code in a\n-                 dynamically-loaded library\n-               o [46]\"memory leaks\" in containers\n-         5. [47]Aw, that's easy to fix!\n-    5. [48]Miscellaneous\n-         1. [49]string::iterator is not char*; vector<T>::iterator is not\n-            T*\n-         2. [50]What's next after libstdc++-v3?\n-         3. [51]What about the STL from SGI?\n-         4. [52]Extensions and Backward Compatibility\n-         5. [53]Does libstdc++ support TR1?\n-         6. [54]Is libstdc++-v3 thread-safe?\n-         7. [55]How do I get a copy of the ISO C++ Standard?\n-         8. [56]What's an ABI and why is it so messy?\n-         9. [57]How do I make std::vector<T>::capacity() ==\n-            std::vector<T>::size?\n-     _________________________________________________________________\n-\n-                            1.0 General Information\n-\n-1.1 What is libstdc++-v3?\n-\n-   The GNU Standard C++ Library v3 is an ongoing project to implement the\n-   ISO 14882 Standard C++ library as described in chapters 17 through 27\n-   and annex D. For those who want to see exactly how far the project has\n-   come, or just want the latest bleeding-edge code, the up-to-date\n-   source is available over anonymous SVN, and can even be browsed over\n-   the Web (see [58]1.4 below).\n-\n-   The older libstdc++-v2 project is no longer maintained; the code has\n-   been completely replaced and rewritten. [59]If you are using V2, then\n-   you need to report bugs to your system vendor, not to the V3 list.\n-\n-   A more formal description of the V3 goals can be found in the official\n-   [60]design document.\n-     _________________________________________________________________\n-\n-1.2 Why should I use libstdc++?\n-\n-   The completion of the ISO C++ standardization gave the C++ community a\n-   powerful set of reuseable tools in the form of the C++ Standard\n-   Library. However, all existing C++ implementations are (as the Draft\n-   Standard used to say) \"incomplet and incorrekt,\" and many suffer from\n-   limitations of the compilers that use them.\n-\n-   The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n-   widely considered to be one of the leading compilers in the world. Its\n-   development is overseen by the [61]GCC team. All of the rapid\n-   development and near-legendary [62]portability that are the hallmarks\n-   of an open-source project are being applied to libstdc++.\n-\n-   That means that all of the Standard classes and functions (such as\n-   string, vector<>, iostreams, and algorithms) will be freely available\n-   and fully compliant. Programmers will no longer need to \"roll their\n-   own\" nor be worried about platform-specific incompatibilities.\n-     _________________________________________________________________\n-\n-1.3 Who's in charge of it?\n-\n-   The libstdc++ project is contributed to by several developers all over\n-   the world, in the same way as GCC or Linux. Benjamin Kosnik, Gabriel\n-   Dos Reis, Phil Edwards, Ulrich Drepper, Loren James Rittle, and Paolo\n-   Carlini are the lead maintainers of the SVN archive.\n-\n-   Development and discussion is held on the libstdc++ mailing list.\n-   Subscribing to the list, or searching the list archives, is open to\n-   everyone. You can read instructions for doing so on the [63]homepage.\n-   If you have questions, ideas, code, or are just curious, sign up!\n-     _________________________________________________________________\n-\n-1.4 How do I get libstdc++?\n-\n-   The [64]homepage has instructions for retrieving the latest SVN\n-   sources, and for browsing the SVN sources over the web.\n-\n-   Stable versions of libstdc++-v3 are included with releases of [65]the\n-   GCC compilers.\n-\n-   The subset commonly known as the Standard Template Library (chapters\n-   23 through 25, mostly) is adapted from the final release of the SGI\n-   STL, with extensive changes.\n-     _________________________________________________________________\n-\n-1.5 When is libstdc++ going to be finished?\n-\n-   Nathan Myers gave the best of all possible answers, responding to a\n-   Usenet article asking this question: Sooner, if you help.\n-     _________________________________________________________________\n-\n-1.6 How do I contribute to the effort?\n-\n-   Here is [66]a page devoted to this topic. Subscribing to the mailing\n-   list (see above, or the homepage) is a very good idea if you have\n-   something to contribute, or if you have spare time and want to help.\n-   Contributions don't have to be in the form of source code; anybody who\n-   is willing to help write documentation, for example, or has found a\n-   bug in code that we all thought was working, is more than welcome!\n-     _________________________________________________________________\n-\n-1.7 What happened to libg++? I need that!\n-\n-   The most recent libg++ README states that libg++ is no longer being\n-   actively maintained. It should not be used for new projects, and is\n-   only being kicked along to support older code.\n-\n-   The libg++ was designed and created when there was no Standard to\n-   provide guidance. Classes like linked lists are now provided for by\n-   list<T> and do not need to be created by genclass. (For that matter,\n-   templates exist now and are well-supported, whereas genclass (mostly)\n-   predates them.)\n-\n-   There are other classes in libg++ that are not specified in the ISO\n-   Standard (e.g., statistical analysis). While there are a lot of really\n-   useful things that are used by a lot of people (e.g., statistics :-),\n-   the Standards Committee couldn't include everything, and so a lot of\n-   those \"obvious\" classes didn't get included.\n-\n-   Since libstdc++ is an implementation of the Standard Library, we have\n-   no plans at this time to include non-Standard utilities in the\n-   implementation, however handy they are. (The extensions provided in\n-   the SGI STL aren't maintained by us and don't get a lot of our\n-   attention, because they don't require a lot of our time.) It is\n-   entirely plausable that the \"useful stuff\" from libg++ might be\n-   extracted into an updated utilities library, but nobody has started\n-   such a project yet.\n-\n-   (The [67]Boost site houses free C++ libraries that do varying things,\n-   and happened to be started by members of the Standards Committee.\n-   Certain \"useful stuff\" classes will probably migrate there.)\n-\n-   For the bold and/or desperate, the [68]GCC extensions page describes\n-   where to find the last libg++ source.\n-     _________________________________________________________________\n-\n-1.8 What if I have more questions?\n-\n-   If you have read the README and RELEASE-NOTES files, and your question\n-   remains unanswered, then just ask the mailing list. At present, you do\n-   not need to be subscribed to the list to send a message to it. More\n-   information is available on the homepage (including how to browse the\n-   list archives); to send to the list, use [69]libstdc++@gcc.gnu.org.\n-\n-   If you have a question that you think should be included here, or if\n-   you have a question about a question/answer here, contact [70]Phil\n-   Edwards or [71]Gabriel Dos Reis.\n-     _________________________________________________________________\n-\n-1.9 What are the license terms for libstdc++-v3?\n-\n-   See [72]our license description for these and related questions.\n-     _________________________________________________________________\n-\n-                               2.0 Installation\n-\n-2.1 How do I install libstdc++-v3?\n-\n-   Complete instructions are not given here (this is a FAQ, not an\n-   installation document), but the tools required are few:\n-     * A 3.x release of GCC. Note that building GCC is much easier and\n-       more automated than building the GCC 2.[78] series was. If you are\n-       using GCC 2.95, you can still build earlier snapshots of\n-       libstdc++.\n-     * GNU Make is required for GCC 3.4 and later.\n-     * The GNU Autotools are needed if you are messing with the configury\n-       or makefiles.\n-\n-   The file [73]documentation.html provides a good overview of the steps\n-   necessary to build, install, and use the library. Instructions for\n-   configuring the library with new flags such as --enable-threads are\n-   there also, as well as patches and instructions for working with GCC\n-   2.95.\n-\n-   The top-level install.html and [74]RELEASE-NOTES files contain the\n-   exact build and installation instructions. You may wish to browse\n-   those files over ViewVC ahead of time to get a feel for what's\n-   required. RELEASE-NOTES is located in the \".../docs/17_intro/\"\n-   directory of the distribution.\n-     _________________________________________________________________\n-\n-2.2 [removed]\n-\n-   This question has become moot and has been removed. The stub is here\n-   to preserve numbering (and hence links/bookmarks).\n-     _________________________________________________________________\n-\n-2.3 What is this SVN thing that you keep mentioning?\n-\n-   Subversion is one of several revision control packages. It was\n-   selected for GNU projects because it's free (speech), free (beer), and\n-   very high quality. The [75]Subversion home page has a better\n-   description.\n-\n-   The \"anonymous client checkout\" feature of SVN is similar to anonymous\n-   FTP in that it allows anyone to retrieve the latest libstdc++ sources.\n-\n-   After the first of April, American users will have a \"/pharmacy\"\n-   command-line option...\n-     _________________________________________________________________\n-\n-2.4 How do I know if it works?\n-\n-   libstdc++-v3 comes with its own testsuite. You do not need to actually\n-   install the library (\"make install\") to run the testsuite, but you do\n-   need DejaGNU, as described [76]here.\n-\n-   To run the testsuite on the library after building it, use \"make\n-   check\" while in your build directory. To run the testsuite on the\n-   library after building and installing it, use \"make check-install\"\n-   instead.\n-\n-   If you find bugs in the testsuite programs themselves, or if you think\n-   of a new test program that should be added to the suite, please write\n-   up your idea and send it to the list!\n-     _________________________________________________________________\n-\n-2.5 This library is HUGE! And what's libsupc++?\n-\n-   Usually the size of libraries on disk isn't noticeable. When a link\n-   editor (or simply \"linker\") pulls things from a static archive\n-   library, only the necessary object files are copied into your\n-   executable, not the entire library. Unfortunately, even if you only\n-   need a single function or variable from an object file, the entire\n-   object file is extracted. (There's nothing unique to C++ or\n-   libstdc++-v3 about this; it's just common behavior, given here for\n-   background reasons.)\n-\n-   Some of the object files which make up libstdc++.a are rather large.\n-   If you create a statically-linked executable with -static, those large\n-   object files are suddenly part of your executable. Historically the\n-   best way around this was to only place a very few functions (often\n-   only a single one) in each source/object file; then extracting a\n-   single function is the same as extracting a single .o file. For\n-   libstdc++-v3 this is only possible to a certain extent; the object\n-   files in question contain template classes and template functions,\n-   pre-instantiated, and splitting those up causes severe maintenance\n-   headaches.\n-\n-   It's not a bug, and it's not really a problem. Nevertheless, some\n-   people don't like it, so here are two pseudo-solutions:\n-\n-   If the only functions from libstdc++.a which you need are language\n-   support functions (those listed in [77]clause 18 of the standard,\n-   e.g., new and delete), then try linking against libsupc++.a (Using gcc\n-   instead of g++ and explicitly linking in -lsupc++ for the final link\n-   step will do it). This library contains only those support routines,\n-   one per object file. But if you are using anything from the rest of\n-   the library, such as IOStreams or vectors, then you'll still need\n-   pieces from libstdc++.a.\n-\n-   The second method is one we hope to incorporate into the library build\n-   process. Some platforms can place each function and variable into its\n-   own section in a .o file. The GNU linker can then perform garbage\n-   collection on unused sections; this reduces the situation to only\n-   copying needed functions into the executable, as before, but all\n-   happens automatically.\n-\n-   Unfortunately the garbage collection in GNU ld is buggy; sections\n-   (corresponding to functions and variables) which are used are\n-   mistakenly removed, leading to horrible crashes when your executable\n-   starts up. For the time being, this feature is not used when building\n-   the library.\n-     _________________________________________________________________\n-\n-2.6 Why do I get an error saying libstdc++.so.X is missing when I run my\n-program?\n-\n-   Depending on your platform and library version, the message might be\n-   similar to one of the following:\n-    ./a.out: error while loading shared libraries: libstdc++.so.6: cannot open\n-shared object file: No such file or directory\n-\n-    /usr/libexec/ld-elf.so.1: Shared object \"libstdc++.so.6\" not found\n-\n-   This doesn't mean that the shared library isn't installed, only that\n-   the dynamic linker can't find it. When a dynamically-linked executable\n-   is run the linker finds and loads the required shared libraries by\n-   searching a pre-configured list of directories. If the directory where\n-   you've installed libstdc++ is not in this list then the libraries\n-   won't be found. The simplest way to fix this is to use the\n-   LD_LIBRARY_PATH environment variable, which is a colon-separated list\n-   of directories in which the linker will search for shared libraries:\n-    LD_LIBRARY_PATH=${prefix}/lib:$LD_LIBRARY_PATH\n-    export LD_LIBRARY_PATH\n-\n-   The exact environment variable to use will depend on your platform,\n-   e.g. DYLD_LIBRARY_PATH for Darwin,\n-   LD_LIBRARY_PATH_32/LD_LIBRARY_PATH_64 for Solaris 32-/64-bit,\n-   LD_LIBRARYN32_PATH/LD_LIBRARY64_PATH for Irix N32/64-bit ABIs and\n-   SHLIB_PATH for HP-UX.\n-\n-   See the man pages for ld(1), ldd(1) and ldconfig(8) for more\n-   information. The dynamic linker has different names on different\n-   platforms but the man page is usually called something such as ld.so /\n-   rtld / dld.so.\n-     _________________________________________________________________\n-\n-                         3.0 Platform-Specific Issues\n-\n-3.1 Can libstdc++-v3 be used with <my favorite compiler>?\n-\n-   Probably not. Yet.\n-\n-   Because GCC advances so rapidly, development and testing of libstdc++\n-   is being done almost entirely under that compiler. If you are curious\n-   about whether other, lesser compilers (*grin*) support libstdc++, you\n-   are more than welcome to try. Configuring and building the library\n-   (see above) will still require certain tools, however. Also keep in\n-   mind that building libstdc++ does not imply that your compiler will be\n-   able to use all of the features found in the C++ Standard Library.\n-\n-   Since the goal of ISO Standardization is for all C++ implementations\n-   to be able to share code, the final libstdc++ should, in theory, be\n-   usable under any ISO-compliant compiler. It will still be targeted and\n-   optimized for GCC/g++, however.\n-     _________________________________________________________________\n-\n-3.2 [removed]\n-\n-   This question has become moot and has been removed. The stub is here\n-   to preserve numbering (and hence links/bookmarks).\n-     _________________________________________________________________\n-\n-3.3 [removed]\n-\n-   This question has become moot and has been removed. The stub is here\n-   to preserve numbering (and hence links/bookmarks).\n-     _________________________________________________________________\n-\n-3.4 I can't use 'long long' on Solaris\n-\n-   By default we try to support the C99 long long type. This requires\n-   that certain functions from your C library be present.\n-\n-   Up through release 3.0.2 the tests performed were too general, and\n-   this feature was disabled when it did not need to be. The most\n-   commonly reported platform affected was Solaris.\n-\n-   This has been fixed for 3.0.3 and onwards.\n-     _________________________________________________________________\n-\n-3.5 _XOPEN_SOURCE / _GNU_SOURCE / etc is always defined\n-\n-   On Solaris, g++ (but not gcc) always defines the preprocessor macro\n-   _XOPEN_SOURCE. On GNU/Linux, the same happens with _GNU_SOURCE. (This\n-   is not an exhaustive list; other macros and other platforms are also\n-   affected.)\n-\n-   These macros are typically used in C library headers, guarding new\n-   versions of functions from their older versions. The C++ standard\n-   library includes the C standard library, but it requires the C90\n-   version, which for backwards-compatability reasons is often not the\n-   default for many vendors.\n-\n-   More to the point, the C++ standard requires behavior which is only\n-   available on certain platforms after certain symbols are defined.\n-   Usually the issue involves I/O-related typedefs. In order to ensure\n-   correctness, the compiler simply predefines those symbols.\n-\n-   Note that it's not enough to #define them only when the library is\n-   being built (during installation). Since we don't have an 'export'\n-   keyword, much of the library exists as headers, which means that the\n-   symbols must also be defined as your programs are parsed and compiled.\n-\n-   To see which symbols are defined, look for CPLUSPLUS_CPP_SPEC in the\n-   gcc config headers for your target (and try changing them to see what\n-   happens when building complicated code). You can also run \"g++ -E -dM\n-   - < /dev/null\" to display a list of predefined macros for any\n-   particular installation.\n-\n-   This has been discussed on the mailing lists [78]quite a bit.\n-\n-   This method is something of a wart. We'd like to find a cleaner\n-   solution, but nobody yet has contributed the time.\n-     _________________________________________________________________\n-\n-3.6 OS X ctype.h is broken! How can I hack it?\n-\n-   This is a long-standing bug in the OS X support. Fortunately, the\n-   patch is quite simple, and well-known. [79]Here's a link to the\n-   solution.\n-     _________________________________________________________________\n-\n-3.7 Threading is broken on i386\n-\n-   Support for atomic integer operations is/was broken on i386 platforms.\n-   The assembly code accidentally used opcodes that are only available on\n-   the i486 and later. So if you configured GCC to target, for example,\n-   i386-linux, but actually used the programs on an i686, then you would\n-   encounter no problems. Only when actually running the code on a i386\n-   will the problem appear.\n-\n-   This is fixed in 3.2.2.\n-     _________________________________________________________________\n-\n-3.8 Recent GNU/Linux glibc required?\n-\n-   When running on GNU/Linux, libstdc++ 3.2.1 (shared library version\n-   5.0.1) and later uses localization and formatting code from the system\n-   C library (glibc) version 2.2.5. That version of glibc is over a year\n-   old and contains necessary bugfixes. Many GNU/Linux distros make glibc\n-   version 2.3.x available now.\n-\n-   The guideline is simple: the more recent the C++ library, the more\n-   recent the C library. (This is also documented in the main GCC\n-   installation instructions.)\n-     _________________________________________________________________\n-\n-3.9 Can't use wchar_t/wstring on FreeBSD\n-\n-   At the moment there are a few problems in FreeBSD's support for wide\n-   character functions, and as a result the libstdc++ configury decides\n-   that wchar_t support should be disabled. Once the underlying problems\n-   are fixed in FreeBSD (soon), the library support will automatically\n-   enable itself.\n-\n-   You can fix the problems yourself, and learn more about the situation,\n-   by reading [80]this short thread (\"_GLIBCPP_USE_WCHAR_T undefined in\n-   FreeBSD's c++config.h?\").\n-     _________________________________________________________________\n-\n-3.10 MIPS atomic operations\n-\n-   The atomic locking routines for MIPS targets requires MIPS II and\n-   later. A patch went in just after the 3.3 release to make mips* use\n-   the generic implementation instead. You can also configure for\n-   mipsel-elf as a workaround.\n-\n-   mips*-*-linux* continues to use the MIPS II routines, and more work in\n-   this area is expected.\n-     _________________________________________________________________\n-\n-                          4.0 Known Bugs and Non-Bugs\n-\n-   Note that this section can get rapdily outdated -- such is the nature\n-   of an open-source project. For the latest information, join the\n-   mailing list or look through recent archives. The RELEASE- NOTES and\n-   BUGS files are generally kept up-to-date.\n-\n-   For 3.0.1, the most common \"bug\" is an apparently missing \"../\" in\n-   include/Makefile, resulting in files like gthr.h and gthr-single.h not\n-   being found. Please read [81]the configuration instructions for GCC,\n-   specifically the part about configuring in a separate build directory,\n-   and how strongly recommended it is. Building in the source directory\n-   is fragile, is rarely tested, and tends to break, as in this case.\n-   This was fixed for 3.0.2.\n-\n-   For 3.1, the most common \"bug\" is a parse error when using <fstream>,\n-   ending with a message, \"bits/basic_file.h:52: parse error before `{'\n-   token.\" Please read [82]the installation instructions for GCC,\n-   specifically the part about not installing newer versions on top of\n-   older versions. If you install 3.1 over a 3.0.x release, then the\n-   wrong basic_file.h header will be found (its location changed between\n-   releases).\n-\n-   Please do not report these as bugs. We know about them. Reporting this\n-   -- or any other problem that's already been fixed -- hinders the\n-   development of GCC, because we have to take time to respond to your\n-   report. Thank you.\n-     _________________________________________________________________\n-\n-4.1 What works already?\n-\n-   Short answer: Pretty much everything works except for some corner\n-   cases. Also, localization is incomplete. For whether it works well, or\n-   as you expect it to work, see 5.2.\n-\n-   Long answer: See the docs/html/17_intro/CHECKLIST file, which is badly\n-   outdated... Also see the RELEASE-NOTES file, which is kept more up to\n-   date.\n-     _________________________________________________________________\n-\n-4.2 Bugs in gcc/g++ (not libstdc++-v3)\n-\n-   This is by no means meant to be complete nor exhaustive, but mentions\n-   some problems that users may encounter when building or using\n-   libstdc++. If you are experiencing one of these problems, you can find\n-   more information on the libstdc++ and the GCC mailing lists.\n-\n-   Before reporting a bug, examine the [83]bugs database with the\n-   category set to \"libstdc++\". The BUGS file in the source tree also\n-   tracks known serious problems.\n-     * Debugging is problematic, due to bugs in line-number generation\n-       (mostly fixed in the compiler) and gdb lagging behind the compiler\n-       (lack of personnel). We recommend configuring the compiler using\n-       --with-dwarf2 if the DWARF2 debugging format is not already the\n-       default on your platform. Also, [84]changing your GDB settings can\n-       have a profound effect on your C++ debugging experiences. :-)\n-     _________________________________________________________________\n-\n-4.3 Bugs in the C++ language/lib specification\n-\n-   Yes, unfortunately, there are some. In a [85]message to the list,\n-   Nathan Myers announced that he has started a list of problems in the\n-   ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [86]posted on his website.\n-   Developers who are having problems interpreting the Standard may wish\n-   to consult his notes.\n-\n-   For those people who are not part of the ISO Library Group (i.e.,\n-   nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [87]here.\n-   Some of these have resulted in [88]code changes.\n-     _________________________________________________________________\n-\n-4.4 Things in libstdc++ that only look like bugs\n-\n-   There are things which are not bugs in the compiler (4.2) nor the\n-   language specification (4.3), but aren't really bugs in libstdc++,\n-   either. Really! Please do not report these as bugs.\n-\n-   -Weffc++ The biggest of these is the quadzillions of warnings about\n-   the library headers emitted when -Weffc++ is used. Making libstdc++\n-   \"-Weffc++-clean\" is not a goal of the project, for a few reasons.\n-   Mainly, that option tries to enforce object-oriented programming,\n-   while the Standard Library isn't necessarily trying to be OO.\n-\n-   reopening a stream fails Did I just say that -Weffc++ was our biggest\n-   false-bug report? I lied. (It used to be.) Today it seems to be\n-   reports that after executing a sequence like\n-    #include <fstream>\n-    ...\n-    std::fstream  fs(\"a_file\");\n-    // .\n-    // . do things with fs...\n-    // .\n-    fs.close();\n-    fs.open(\"a_new_file\");\n-\n-   all operations on the re-opened fs will fail, or at least act very\n-   strangely. Yes, they often will, especially if fs reached the EOF\n-   state on the previous file. The reason is that the state flags are not\n-   cleared on a successful call to open(). The standard unfortunately did\n-   not specify behavior in this case, and to everybody's great sorrow,\n-   the [89]proposed LWG resolution in DR #22 is to leave the flags\n-   unchanged. You must insert a call to fs.clear() between the calls to\n-   close() and open(), and then everything will work like we all expect\n-   it to work. Update: for GCC 4.0 we implemented the resolution of\n-   [90]DR #409 and open() now calls clear() on success!\n-\n-   rel_ops Another is the rel_ops namespace and the template comparison\n-   operator functions contained therein. If they become visible in the\n-   same namespace as other comparison functions (e.g., 'using' them and\n-   the <iterator> header), then you will suddenly be faced with huge\n-   numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [91]sums things up here. The collisions with\n-   vector/string iterator types have been fixed for 3.1.\n-\n-  The g++-3 headers are not ours\n-\n-   If you have found an extremely broken header file which is causing\n-   problems for you, look carefully before submitting a \"high\" priority\n-   bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [92]the GCC bug database).\n-\n-   If the headers are in ${prefix}/include/g++-3, or if the installed\n-   library's name looks like libstdc++-2.10.a or libstdc++-libc6-2.10.so,\n-   then you are using the old libstdc++-v2 library, which is nonstandard\n-   and unmaintained. Do not report problems with -v2 to the -v3 mailing\n-   list.\n-\n-   For GCC versions 3.0 and 3.1 the libstdc++-v3 header files are\n-   installed in ${prefix}/include/g++-v3 (see the 'v'?). Starting with\n-   version 3.2 the headers are installed in\n-   ${prefix}/include/c++/${version} as this prevents headers from\n-   previous versions being found by mistake.\n-\n-   glibc If you're on a GNU/Linux system and have just upgraded to glibc\n-   2.2, but are still using gcc 2.95.2, then you should have read the\n-   glibc FAQ, specifically 2.34:\n-2.34.   When compiling C++ programs, I get a compilation error in streambuf.h.\n-\n-{BH} You are using g++ 2.95.2? After upgrading to glibc 2.2, you need to\n-apply a patch to the include files in /usr/include/g++, because the fpos_t\n-type has changed in glibc 2.2.  The patch is at\n-http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n-\n-\n-   Note that 2.95.x shipped with the [93]old v2 library which is no\n-   longer maintained. Also note that gcc 2.95.3 fixes this problem, but\n-   requires a separate patch for libstdc++-v3.\n-\n-   concept checks If you see compilation errors containing messages about\n-   fooConcept and a constraints member function, then most likely you\n-   have violated one of the requirements for types used during\n-   instantiation of template containers and functions. For example,\n-   EqualityComparableConcept appears if your types must be comparable\n-   with == and you have not provided this capability (a typo, or wrong\n-   visibility, or you just plain forgot, etc).\n-\n-   More information, including how to optionally enable/disable the\n-   checks, is available [94]here.\n-\n-   dlopen/dlsym If you are using the C++ library across\n-   dynamically-loaded objects, make certain that you are passing the\n-   correct options when compiling and linking:\n-    // compile your library components\n-    g++ -fPIC -c a.cc\n-    g++ -fPIC -c b.cc\n-    ...\n-    g++ -fPIC -c z.cc\n-\n-    // create your library\n-    g++ -fPIC -shared -rdynamic -o libfoo.so a.o b.o ... z.o\n-\n-    // link the executable\n-    g++ -fPIC -rdynamic -o foo ... -L. -lfoo -ldl\n-\n-   \"memory leaks\" in containers A few people have reported that the\n-   standard containers appear to leak memory when tested with memory\n-   checkers such as [95]valgrind. The library's default allocators keep\n-   free memory in a pool for later reuse, rather than returning it to the\n-   OS. Although this memory is always reachable by the library and is\n-   never lost, memory debugging tools can report it as a leak. If you\n-   want to test the library for memory leaks please read [96]Tips for\n-   memory leak hunting first.\n-     _________________________________________________________________\n-\n-4.5 Aw, that's easy to fix!\n-\n-   If you have found a bug in the library and you think you have a\n-   working fix, then send it in! The main GCC site has a page on\n-   [97]submitting patches that covers the procedure, but for libstdc++\n-   you should also send the patch to our mailing list in addition to the\n-   GCC patches mailing list. The libstdc++ [98]contributors' page also\n-   talks about how to submit patches.\n-\n-   In addition to the description, the patch, and the ChangeLog entry, it\n-   is a Good Thing if you can additionally create a small test program to\n-   test for the presence of the bug that your patch fixes. Bugs have a\n-   way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [99]testsuite -- but only if such a test\n-   exists.\n-     _________________________________________________________________\n-\n-                               5.0 Miscellaneous\n-\n-5.1 string::iterator is not char*; vector<T>::iterator is not T*\n-\n-   If you have code that depends on container<T> iterators being\n-   implemented as pointer-to-T, your code is broken.\n-\n-   While there are arguments for iterators to be implemented in that\n-   manner, A) they aren't very good ones in the long term, and B) they\n-   were never guaranteed by the Standard anyway. The type-safety achieved\n-   by making iterators a real class rather than a typedef for T*\n-   outweighs nearly all opposing arguments.\n-\n-   Code which does assume that a vector iterator i is a pointer can often\n-   be fixed by changing i in certain expressions to &*i . Future\n-   revisions of the Standard are expected to bless this usage for\n-   vector<> (but not for basic_string<>).\n-     _________________________________________________________________\n-\n-5.2 What's next after libstdc++-v3?\n-\n-   Hopefully, not much. The goal of libstdc++-v3 is to produce a\n-   fully-compliant, fully-portable Standard Library. After that, we're\n-   mostly done: there won't be any more compliance work to do. However:\n-    1. The ISO Committee will meet periodically to review Defect Reports\n-       in the C++ Standard. Undoubtedly some of these will result in\n-       changes to the Standard, which will be reflected in patches to\n-       libstdc++. Some of that is already happening, see [100]4.3. Some\n-       of those changes are being predicted by the library maintainers,\n-       and we add code to the library based on what the current proposed\n-       resolution specifies. Those additions are listed in [101]the\n-       extensions page.\n-    2. Performance tuning. Lots of performance tuning. This too is\n-       already underway for post-3.0 releases, starting with memory\n-       expansion in container classes and buffer usage in synchronized\n-       stream objects.\n-    3. An ABI for libstdc++ is being developed, so that multiple\n-       binary-incompatible copies of the library can be replaced with a\n-       single backwards-compatible library, like libgcc_s.so is.\n-    4. The current libstdc++ contains extensions to the Library which\n-       must be explicitly requested by client code (for example, the hash\n-       tables from SGI). Other extensions may be added to libstdc++-v3 if\n-       they seem to be \"standard\" enough. (For example, the \"long long\"\n-       type from C99.) Bugfixes and rewrites (to improve or fix thread\n-       safety, for instance) will of course be a continuing task.\n-    5. There is an effort underway to add significant extensions to the\n-       standard library specification. The latest version of this effort\n-       is described in [102]The C++ Library Technical Report 1. See\n-       [103]5.5.\n-\n-   [104]This question about the next libstdc++ prompted some brief but\n-   interesting [105]speculation.\n-     _________________________________________________________________\n-\n-5.3 What about the STL from SGI?\n-\n-   The [106]STL from SGI, version 3.3, was the final merge of the STL\n-   codebase. The code in libstdc++ contains many fixes and changes, and\n-   the SGI code is no longer under active development. We expect that no\n-   future merges will take place.\n-\n-   In particular, string is not from SGI and makes no use of their \"rope\"\n-   class (which is included as an optional extension), nor is valarray\n-   and some others. Classes like vector<> are, however we have made\n-   significant changes to them since then.\n-\n-   The FAQ for SGI's STL (one jump off of their main page) is recommended\n-   reading.\n-     _________________________________________________________________\n-\n-5.4 Extensions and Backward Compatibility\n-\n-   Headers in the ext and backward subdirectories should be referred to\n-   by their relative paths:\n-      #include <ext/hash_map>\n-\n-   rather than using -I or other options. This is more portable and\n-   forward-compatible. (The situation is the same as that of other\n-   headers whose directories are not searched directly, e.g.,\n-   <sys/stat.h>, <X11/Xlib.h>.\n-\n-   At this time most of the features of the SGI STL extension have been\n-   replaced by standardized libraries. In particular, the unordered_map\n-   and unordered_set containers of TR1 are suitable replacement for the\n-   non-standard hash_map and hash_set containers in the SGI STL. See\n-   [107]5.5 for more details.\n-\n-   The extensions are no longer in the global or std namespaces, instead\n-   they are declared in the __gnu_cxx namespace. For maximum portability,\n-   consider defining a namespace alias to use to talk about extensions,\n-   e.g.:\n-      #ifdef __GNUC__\n-      #if __GNUC__ < 3\n-        #include <hash_map.h>\n-        namespace Sgi { using ::hash_map; }; // inherit globals\n-      #else\n-        #include <ext/hash_map>\n-        #if __GNUC_MINOR__ == 0\n-          namespace Sgi = std;               // GCC 3.0\n-        #else\n-          namespace Sgi = ::__gnu_cxx;       // GCC 3.1 and later\n-        #endif\n-      #endif\n-      #else      // ...  there are other compilers, right?\n-        namespace Sgi = std;\n-      #endif\n-\n-      Sgi::hash_map<int,int> my_map;\n-\n-   This is a bit cleaner than defining typedefs for all the\n-   instantiations you might need.\n-\n-   Note: explicit template specializations must be declared in the same\n-   namespace as the original template. This means you cannot use a\n-   namespace alias when declaring an explicit specialization.\n-\n-   Extensions to the library have [108]their own page.\n-     _________________________________________________________________\n-\n-5.5 Does libstdc++ support TR1?\n-\n-   The C++ Standard Library Technical Report adds many new features to\n-   the library. The latest version of this effort is described in\n-   [109]Technical Report 1.\n-\n-   libstdc++ strives to implement all of TR1. An [110]overview of the\n-   implementation status is available.\n-\n-   Briefly, the features of TR1 and the current status are:\n-\n-   Reference_wrapper - Complete - Useful to pass references to functions\n-   that take their parameters by value.\n-\n-   Reference-counted smart pointers - Complete - The shared_ptr and\n-   weak_ptr allow several object to know about a pointer and whether it\n-   is valid. When the last reference to the pointer is destroyed the\n-   pointer is freed.\n-\n-   Function objects - Complete - Function return types (i.e, result_of),\n-   the functions template mem_fn (a generalization of mem_fun and\n-   mem_fun_red), function object binders (e.g, bind, a generalization of\n-   bind1st and bind2nd), and polymorhpic function wrappers (e.g, class\n-   template function).\n-\n-   Type traits - Complete - The type_traits class gives templates the\n-   ability to probe information about the input type and enable\n-   type-dependent logic to be performed without the need of template\n-   specializations.\n-\n-   A random number engine - Complete - This library contains randow\n-   number generators with several different choices of distribution.\n-\n-   Tuples - Complete - The tuple class implements small heterogeneous\n-   arrays. This is an enhanced pair. In fact, the standard pair is\n-   enhanced with a tuple interface.\n-\n-   Fixed-size arrays - Complete - The array class implements small\n-   fixed-sized arrays with container semantics.\n-\n-   Unordered containers - Complete - The unordered_set, unordered_map,\n-   unordered_multiset, and unordered_multimap containers are hashed\n-   versions of the map, set, multimap, and multiset containers\n-   respectively. These classes are suitable replacements for the SGI STL\n-   hash_map and hash_set extensions.\n-\n-   C99 compatibility - Under construction - There are many features\n-   designed to minimize the divergence of the C and the C++ languages.\n-\n-   Special functions - Under construction - Twenty-three mathematical\n-   functions familiar to physicists and engineers are included:\n-   cylindrical and spherical Bessel and Neumann functions, hypergeometric\n-   functions, Laguerre polynomials, Legendre functions, elliptic\n-   integrals, exponential integrals and the Riemann zeta function all for\n-   your computing pleasure.\n-\n-   A regular expression engine This library provides for regular\n-   expression objects with traversal of text with return of\n-   subexpressions.\n-     _________________________________________________________________\n-\n-5.6 Is libstdc++-v3 thread-safe?\n-\n-   libstdc++-v3 strives to be thread-safe when all of the following\n-   conditions are met:\n-     * The system's libc is itself thread-safe,\n-     * gcc -v reports a thread model other than 'single',\n-     * [pre-3.3 only] a non-generic implementation of atomicity.h exists\n-       for the architecture in question.\n-\n-   The user-code must guard against concurrent method calls which may\n-   access any particular library object's state. Typically, the\n-   application programmer may infer what object locks must be held based\n-   on the objects referenced in a method call. Without getting into great\n-   detail, here is an example which requires user-level locks:\n-     library_class_a shared_object_a;\n-\n-     thread_main () {\n-       library_class_b *object_b = new library_class_b;\n-       shared_object_a.add_b (object_b);   // must hold lock for shared_object_\n-a\n-       shared_object_a.mutate ();          // must hold lock for shared_object_\n-a\n-     }\n-\n-     // Multiple copies of thread_main() are started in independent threads.\n-\n-   Under the assumption that object_a and object_b are never exposed to\n-   another thread, here is an example that should not require any\n-   user-level locks:\n-     thread_main () {\n-       library_class_a object_a;\n-       library_class_b *object_b = new library_class_b;\n-       object_a.add_b (object_b);\n-       object_a.mutate ();\n-     }\n-\n-   All library objects are safe to use in a multithreaded program as long\n-   as each thread carefully locks out access by any other thread while it\n-   uses any object visible to another thread, i.e., treat library objects\n-   like any other shared resource. In general, this requirement includes\n-   both read and write access to objects; unless otherwise documented as\n-   safe, do not assume that two threads may access a shared standard\n-   library object at the same time.\n-\n-   See chapters [111]17 (library introduction), [112]23 (containers), and\n-   [113]27 (I/O) for more information.\n-     _________________________________________________________________\n-\n-5.7 How do I get a copy of the ISO C++ Standard?\n-\n-   Copies of the full ISO 14882 standard are available on line via the\n-   ISO mirror site for committee members. Non-members, or those who have\n-   not paid for the privilege of sitting on the committee and sustained\n-   their two-meeting commitment for voting rights, may get a copy of the\n-   standard from their respective national standards organization. In the\n-   USA, this national standards organization is ANSI and their website is\n-   right [114]here. (And if you've already registered with them, clicking\n-   this link will take you to directly to the place where you can\n-   [115]buy the standard on-line.\n-\n-   Who is your country's member body? Visit the [116]ISO homepage and\n-   find out!\n-     _________________________________________________________________\n-\n-5.8 What's an ABI and why is it so messy?\n-\n-   \"ABI\" stands for \"Application Binary Interface.\" Conventionally, it\n-   refers to a great mass of details about how arguments are arranged on\n-   the call stack and/or in registers, and how various types are arranged\n-   and padded in structs. A single CPU design may suffer multiple ABIs\n-   designed by different development tool vendors who made different\n-   choices, or even by the same vendor for different target applications\n-   or compiler versions. In ideal circumstances the CPU designer presents\n-   one ABI and all the OSes and compilers use it. In practice every ABI\n-   omits details that compiler implementers (consciously or accidentally)\n-   must choose for themselves.\n-\n-   That ABI definition suffices for compilers to generate code so a\n-   program can interact safely with an OS and its lowest-level libraries.\n-   Users usually want an ABI to encompass more detail, allowing libraries\n-   built with different compilers (or different releases of the same\n-   compiler!) to be linked together. For C++, this includes many more\n-   details than for C, and CPU designers (for good reasons elaborated\n-   below) have not stepped up to publish C++ ABIs. The details include\n-   virtual function implementation, struct inheritance layout, name\n-   mangling, and exception handling. Such an ABI has been defined for GNU\n-   C++, and is immediately useful for embedded work relying only on a\n-   \"free-standing implementation\" that doesn't include (much of) the\n-   standard library. It is a good basis for the work to come.\n-\n-   A useful C++ ABI must also incorporate many details of the standard\n-   library implementation. For a C ABI, the layouts of a few structs\n-   (such as FILE, stat, jmpbuf, and the like) and a few macros suffice.\n-   For C++, the details include the complete set of names of functions\n-   and types used, the offsets of class members and virtual functions,\n-   and the actual definitions of all inlines. C++ exposes many more\n-   library details to the caller than C does. It makes defining a\n-   complete ABI a much bigger undertaking, and requires not just\n-   documenting library implementation details, but carefully designing\n-   those details so that future bug fixes and optimizations don't force\n-   breaking the ABI.\n-\n-   There are ways to help isolate library implementation details from the\n-   ABI, but they trade off against speed. Library details used in inner\n-   loops (e.g., getchar) must be exposed and frozen for all time, but\n-   many others may reasonably be kept hidden from user code, so they may\n-   later be changed. Deciding which, and implementing the decisions, must\n-   happen before you can reasonably document a candidate C++ ABI that\n-   encompasses the standard library.\n-     _________________________________________________________________\n-\n-5.9 How do I make std::vector<T>::capacity() == std::vector<T>::size()?\n-\n-   The standard idiom for deallocating a std::vector<T>'s unused memory\n-   is to create a temporary copy of the vector and swap their contents,\n-   e.g. for std::vector<T> v\n-     std::vector<T>(v).swap(v);\n-\n-\n-   The copy will take O(n) time and the swap is constant time.\n-\n-   See [117]Shrink-to-fit strings for a similar solution for strings.\n-     _________________________________________________________________\n-\n-   See [118]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [119]the libstdc++ mailing list. \n-\n-References\n-\n-   1. ../documentation.html\n-   2. ../17_intro/license.html\n-   3. http://gcc.gnu.org/onlinedocs/libstdc++/faq/\n-   4. http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html\n-   5. http://gcc.gnu.org/libstdc++/\n-   6. ../faq/index.html#1_0\n-   7. ../faq/index.html#1_1\n-   8. ../faq/index.html#1_2\n-   9. ../faq/index.html#1_3\n-  10. ../faq/index.html#1_4\n-  11. ../faq/index.html#1_5\n-  12. ../faq/index.html#1_6\n-  13. ../faq/index.html#1_7\n-  14. ../faq/index.html#1_8\n-  15. ../faq/index.html#1_9\n-  16. ../faq/index.html#2_0\n-  17. ../faq/index.html#2_1\n-  18. ../faq/index.html#2_2\n-  19. ../faq/index.html#2_3\n-  20. ../faq/index.html#2_4\n-  21. ../faq/index.html#2_5\n-  22. ../faq/index.html#2_6\n-  23. ../faq/index.html#3_0\n-  24. ../faq/index.html#3_1\n-  25. ../faq/index.html#3_2\n-  26. ../faq/index.html#3_3\n-  27. ../faq/index.html#3_4\n-  28. ../faq/index.html#3_5\n-  29. ../faq/index.html#3_6\n-  30. ../faq/index.html#3_7\n-  31. ../faq/index.html#3_8\n-  32. ../faq/index.html#3_9\n-  33. ../faq/index.html#3_10\n-  34. ../faq/index.html#4_0\n-  35. ../faq/index.html#4_1\n-  36. ../faq/index.html#4_2\n-  37. ../faq/index.html#4_3\n-  38. ../faq/index.html#4_4\n-  39. ../faq/index.html#4_4_iostreamclear\n-  40. ../faq/index.html#4_4_Weff\n-  41. ../faq/index.html#4_4_rel_ops\n-  42. ../faq/index.html#4_4_interface\n-  43. ../faq/index.html#4_4_glibc\n-  44. ../faq/index.html#4_4_checks\n-  45. ../faq/index.html#4_4_dlsym\n-  46. ../faq/index.html#4_4_leak\n-  47. ../faq/index.html#4_5\n-  48. ../faq/index.html#5_0\n-  49. ../faq/index.html#5_1\n-  50. ../faq/index.html#5_2\n-  51. ../faq/index.html#5_3\n-  52. ../faq/index.html#5_4\n-  53. ../faq/index.html#5_5\n-  54. ../faq/index.html#5_6\n-  55. ../faq/index.html#5_7\n-  56. ../faq/index.html#5_8\n-  57. ../faq/index.html#5_9\n-  58. ../faq/index.html#1_4\n-  59. ../faq/index.html#4_4_interface\n-  60. ../17_intro/DESIGN\n-  61. http://gcc.gnu.org/\n-  62. http://gcc.gnu.org/gcc-3.3/buildstat.html\n-  63. http://gcc.gnu.org/libstdc++/\n-  64. http://gcc.gnu.org/libstdc++/\n-  65. http://gcc.gnu.org/releases.html\n-  66. ../17_intro/contribute.html\n-  67. http://www.boost.org/\n-  68. http://gcc.gnu.org/extensions.html\n-  69. mailto:libstdc++@gcc.gnu.org\n-  70. mailto:pme@gcc.gnu.org\n-  71. mailto:gdr@gcc.gnu.org\n-  72. ../17_intro/license.html\n-  73. ../documentation.html\n-  74. ../17_intro/RELEASE-NOTES\n-  75. http://subversion.tigris.org/\n-  76. http://gcc.gnu.org/install/test.html\n-  77. ../18_support/howto.html\n-  78. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n-  79. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n-  80. http://gcc.gnu.org/ml/libstdc++/2003-02/subjects.html#00286\n-  81. http://gcc.gnu.org/install/configure.html\n-  82. http://gcc.gnu.org/install/\n-  83. http://gcc.gnu.org/bugs.html\n-  84. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n-  85. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  86. http://www.cantrip.org/draft-bugs.txt\n-  87. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  88. ../faq/index.html#5_2\n-  89. ../ext/howto.html#5\n-  90. ../ext/howto.html#5\n-  91. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n-  92. http://gcc.gnu.org/bugs.html\n-  93. ../faq/index.html#4_4_interface\n-  94. ../19_diagnostics/howto.html#3\n-  95. http://developer.kde.org/~sewardj/\n-  96. ../debug.html#mem\n-  97. http://gcc.gnu.org/contribute.html\n-  98. ../17_intro/contribute.html\n-  99. ../faq/index.html#2_4\n- 100. ../faq/index.html#4_3\n- 101. ../ext/howto.html#5\n- 102. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1836.pdf\n- 103. ../faq/index.html#5_5\n- 104. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n- 105. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n- 106. http://www.sgi.com/tech/stl/\n- 107. ../faq/index.html#5_5\n- 108. ../ext/howto.html\n- 109. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1836.pdf\n- 110. ../ext/tr1.html\n- 111. ../17_intro/howto.html#3\n- 112. ../23_containers/howto.html#3\n- 113. ../27_io/howto.html#9\n- 114. http://www.ansi.org/\n- 115. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%3A2003\n- 116. http://www.iso.ch/\n- 117. ../21_strings/howto.html#6\n- 118. ../17_intro/license.html\n- 119. mailto:libstdc++@gcc.gnu.org"}, {"sha": "120f0c8e0693a982bc11c0e9456c51a98028fa7d", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -6,10 +6,10 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n-   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\" />\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++, GCC, g++\" />\n    <meta name=\"DESCRIPTION\" content=\"README for the GNU libstdc++ effort.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 Installation Instructions</title>\n+   <title>libstdc++ Installation Instructions</title>\n <link rel=\"StyleSheet\" href=\"lib3styles.css\" type=\"text/css\" />\n <link rel=\"Copyright\" href=\"17_intro/license.html\" type=\"text/html\" />\n </head>\n@@ -24,18 +24,18 @@ <h1 class=\"centered\"><a name=\"top\">Getting started: configure, build, install</a\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n \n <!-- ####################################################### -->\n <hr />\n <h2>Contents</h2>\n \n-<p>Because libstdc++-v3 is part of GCC, the primary source for\n+<p>Because libstdc++ is part of GCC, the primary source for\n    installation instructions is\n    <a href=\"http://gcc.gnu.org/install/\">the GCC install page</a>.\n-   Additional data is given here only where it applies to libstdc++-v3.\n+   Additional data is given here only where it applies to libstdc++.\n </p>\n \n <ul>\n@@ -61,7 +61,7 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n       <code>-ffunction-sections -fdata-sections -Wl,--gc-sections</code>.\n       To obtain maximum benefit from this, binutils after this date should\n       also be used (bugs were fixed with C++ exception handling related\n-      to this change in libstdc++-v3).  The version of these tools should\n+      to this change in libstdc++).  The version of these tools should\n       be <code>2.10.90</code>, or later, and you can get snapshots (as\n       well as releases) of binutils\n       <a href=\"ftp://sources.redhat.com/pub/binutils\">here</a>. The\n@@ -163,8 +163,8 @@ <h2><a name=\"config\">Configuring</a></h2>\n       Instructions</a> first.  Read <em>all of them</em>.\n       <strong>Twice.</strong>\n    </p>\n-   <p>When building libstdc++-v3 you'll have to configure\n-      the entire <em>gccsrcdir</em> directory.  The full list of libstdc++-v3\n+   <p>When building libstdc++ you'll have to configure\n+      the entire <em>gccsrcdir</em> directory.  The full list of libstdc++\n       specific configuration options, not dependent on the specific compiler\n       release being used, can be found <a href=\"configopts.html\">here</a>.\n    </p>"}, {"sha": "9da77d9c1a1f33e1501f8511a584e63630e1b430", "filename": "libstdc++-v3/docs/html/makedoc.awk", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fmakedoc.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d770555138f40fb929b5456b1548a92ebb60e6aa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fmakedoc.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fmakedoc.awk?ref=d770555138f40fb929b5456b1548a92ebb60e6aa", "patch": "@@ -1,69 +0,0 @@\n-# Take apart bits of HTML and puts them back together again in new and\n-# fascinating ways.  Copyright (C) 2002 Free Software Foundation, Inc.\n-# Contributed by Phil Edwards <pme@gcc.gnu.org>.  Simple two-state automaton\n-# inspired by Richard Henderson's gcc/mkmap-symver.awk.\n-\n-# 'file' is the name of the file on stdin\n-# 'title' is the text to print at the start of the list\n-\n-BEGIN {\n-  state = \"looking\";\n-  entries = 0;\n-  printf (\"   <li>%s\\n\", title);\n-  printf (\"   <ul>\\n\");\n-}\n-\n-# Searching for the little table of contents at the top.\n-state == \"looking\" && /^<h1>Contents/ {\n-  state = \"entries\";\n-  next;\n-}\n-\n-# Ignore everything else up to that point.\n-state == \"looking\" {\n-  next;\n-}\n-\n-# An entry in the table of contents.  Pull that line apart.\n-state == \"entries\" && /<li>/ {\n-  extract_info($0);\n-  next;\n-}\n-\n-# End of the list.  Don't bother reading the rest of the file.  (It could\n-# also contain more <li>'s, so that would be incorrect as well as wasteful.)\n-state == \"entries\" && /^<\\/ul>/ {\n-  exit;\n-}\n-\n-END {\n-  for (i = 0; i < entries; i++)\n-    printf (\"     %s\\n\", entry[i]);\n-  printf (\"   </ul>\\n   </li>\\n\\n\");\n-}\n-\n-function extract_info(line) {\n-  # thistarget will be things like \"#5\" or \"elsewhere.html\"\n-  match(line,\"href=\\\".*\\\"\");\n-  thistarget = substr(line,RSTART+6,RLENGTH-7);\n-\n-  # take apart the filename\n-  split(file,X,\"/\");\n-  if (thistarget ~ /^#/) {\n-    # local name, use directory and filename\n-    target = file thistarget\n-  } else {\n-    # different file, only use directory\n-    target = X[1] \"/\" thistarget\n-  }\n-\n-  # visible text\n-  gsub(\"</a></li>\",\"\",line);\n-  start = index(line,\"\\\">\") + 2;\n-  thistext = substr(line,start);\n-\n-  # Assemble and store the HTML for later output.\n-  entry[entries++] = \"<li><a href=\\\"\" target \"\\\">\" thistext \"</a></li>\"\n-}\n-\n-# vim:sw=2"}, {"sha": "67a666130b69e30df883a99fe2fa61d8328c0e89", "filename": "libstdc++-v3/docs/html/test.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -9,7 +9,7 @@\n    <meta name=\"KEYWORDS\" content=\"c++, libstdc++, test, regression, g++\" />\n    <meta name=\"DESCRIPTION\" content=\"README for the GNU libstdc++ effort.\" />\n    <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n-   <title>libstdc++-v3 Testing Instructions</title>\n+   <title>libstdc++ Testing Instructions</title>\n <link rel=\"StyleSheet\" href=\"lib3styles.css\" />\n </head>\n <body>\n@@ -23,7 +23,7 @@ <h1 class=\"centered\"><a name=\"top\">Testing Details</a></h1>\n </em></p>\n \n <p><em>\n-   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++ homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n@@ -434,7 +434,7 @@ <h2><a name=\"new\">How to write a new test case</a></h2>\n </pre>\n \n    <p>\n-    More examples can be found in the libstdc++-v3/testsuite/*/*.cc files.\n+    More examples can be found in the libstdc++/testsuite/*/*.cc files.\n    </p>\n \n <hr />\n@@ -452,7 +452,7 @@ <h2><a name=\"check\">Options for running the tests</a></h2>\n    <pre> make check</pre>\n    <p>in the <em>libbuilddir</em> directory.</p>\n    <p>or</p>\n-   <pre> make check-target-libstdc++-v3</pre>\n+   <pre> make check-target-libstdc++</pre>\n    <p>in the <em>gccbuilddir</em> directory.</p>\n \n    <p>\n@@ -472,11 +472,11 @@ <h2><a name=\"check\">Options for running the tests</a></h2>\n </p>\n \n <pre>\n-make check-target-libstdc++-v3 RUNTESTFLAGS=\"-v\"\n+make check-target-libstdc++ RUNTESTFLAGS=\"-v\"\n </pre>\n or\n <pre>\n-make check-target-libstdc++-v3 RUNTESTFLAGS=\"-v -v\"\n+make check-target-libstdc++ RUNTESTFLAGS=\"-v -v\"\n </pre>\n \n <p> To run a subset of the library tests, try using a command like the\n@@ -494,20 +494,20 @@ <h2><a name=\"check\">Options for running the tests</a></h2>\n Example flags to pass down for various embedded builds are as follows:\n <pre>\n --target=powerpc-eabism (libgloss/sim)\n-make check-target-libstdc++-v3 RUNTESTFLAGS=\"--target_board=powerpc-sim\"\n+make check-target-libstdc++ RUNTESTFLAGS=\"--target_board=powerpc-sim\"\n \n --target=calmrisc32 (libgloss/sid)\n-make check-target-libstdc++-v3 RUNTESTFLAGS=\"--target_board=calmrisc32-sid\"\n+make check-target-libstdc++ RUNTESTFLAGS=\"--target_board=calmrisc32-sid\"\n \n --target=xscale-elf (newlib/sim)\n-make check-target-libstdc++-v3 RUNTESTFLAGS=\"--target_board=arm-sim\"\n+make check-target-libstdc++ RUNTESTFLAGS=\"--target_board=arm-sim\"\n </pre>\n \n <p> Also, here is an example of how to run the libstdc++ testsuite for a\n multilibed build directory with different ABI settings:\n </p>\n <pre>\n-make check-target-libstdc++-v3 RUNTESTFLAGS='--target_board \\\"unix{-mabi=32,,-mabi=64}\\\"'\n+make check-target-libstdc++ RUNTESTFLAGS='--target_board \\\"unix{-mabi=32,,-mabi=64}\\\"'\n </pre>\n  \n <p>\n@@ -519,7 +519,7 @@ <h2><a name=\"check\">Options for running the tests</a></h2>\n If your GCC source tree is at <code>/path/to/gcc</code>, then you can\n run the tests as follows:\n <pre>\n-runtest --tool libstdc++ --srcdir=/path/to/gcc/libstdc++-v3/testsuite\n+runtest --tool libstdc++ --srcdir=/path/to/gcc/libstdc++/testsuite\n </pre>\n The testsuite will create a number of files in the directory in which you\n run this command,.  Some of those files might use the same name as"}, {"sha": "895807450902c297ef9fe5417008e49175007476", "filename": "libstdc++-v3/include/backward/auto_ptr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -54,7 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       \n       explicit\n       auto_ptr_ref(_Tp1* __p): _M_ptr(__p) { }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX_DEPRECATED_ATTR;\n \n \n   /**\n@@ -285,7 +285,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       template<typename _Tp1>\n         operator auto_ptr<_Tp1>() throw()\n         { return auto_ptr<_Tp1>(this->release()); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX_DEPRECATED_ATTR;\n \n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 541. shared_ptr template assignment and void\n@@ -294,7 +294,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     {\n     public:\n       typedef void element_type;\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX_DEPRECATED_ATTR;\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "bf16a8af36760e38e7d411bef1d80006ddb68a16", "filename": "libstdc++-v3/include/backward/binders.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -119,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typename _Operation::result_type\n       operator()(typename _Operation::second_argument_type& __x) const\n       { return op(value, __x); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX_DEPRECATED_ATTR;\n \n   /// One of the @link s20_3_6_binder binder functors@endlink.\n   template<typename _Operation, typename _Tp>\n@@ -154,7 +154,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typename _Operation::result_type\n       operator()(typename _Operation::first_argument_type& __x) const\n       { return op(__x, value); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX_DEPRECATED_ATTR;\n \n   /// One of the @link s20_3_6_binder binder functors@endlink.\n   template<typename _Operation, typename _Tp>"}, {"sha": "0fb7d8247b462a033de7804d65aa7d49dbc1453d", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -47,26 +47,26 @@\n \n // Macros for visibility.\n // _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY\n-// _GLIBCXX_VISIBILITY\n+// _GLIBCXX_VISIBILITY_ATTR\n #define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY\n \n #if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY\n-# define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))\n+# define _GLIBCXX_VISIBILITY_ATTR(V) __attribute__ ((__visibility__ (#V)))\n #else\n-# define _GLIBCXX_VISIBILITY(V) \n+# define _GLIBCXX_VISIBILITY_ATTR(V) \n #endif\n \n // Macros for deprecated.\n-// _GLIBCXX_USE_DEPRECATED\n // _GLIBCXX_DEPRECATED\n-#ifndef _GLIBCXX_USE_DEPRECATED\n-# define _GLIBCXX_USE_DEPRECATED 1\n+// _GLIBCXX_DEPRECATED_ATTR\n+#ifndef _GLIBCXX_DEPRECATED\n+# define _GLIBCXX_DEPRECATED 1\n #endif\n \n #if defined(__DEPRECATED) && defined(__GXX_EXPERIMENTAL_CXX0X__)\n-# define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))\n+# define _GLIBCXX_DEPRECATED_ATTR __attribute__ ((__deprecated__))\n #else\n-# define _GLIBCXX_DEPRECATED\n+# define _GLIBCXX_DEPRECATED_ATTR\n #endif\n \n // Macros for activating various namespace association modes.\n@@ -124,7 +124,7 @@\n # define _GLIBCXX_STD std\n # define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y) _GLIBCXX_BEGIN_NAMESPACE(X)\n # define _GLIBCXX_END_NESTED_NAMESPACE _GLIBCXX_END_NAMESPACE\n-# define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY(default) {\n+# define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY_ATTR(default) {\n # define _GLIBCXX_END_NAMESPACE }\n #else\n \n@@ -141,7 +141,7 @@\n #  define _GLIBCXX_STD_D __norm\n #  define _GLIBCXX_STD_P _GLIBCXX_STD\n #  define _GLIBCXX_STD __cxx1998\n-#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY(default) { \n+#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY_ATTR(default) { \n #  define _GLIBCXX_END_NAMESPACE }\n #  define _GLIBCXX_EXTERN_TEMPLATE 0\n # endif\n@@ -151,7 +151,7 @@\n #  define _GLIBCXX_STD_D _GLIBCXX_STD\n #  define _GLIBCXX_STD_P __norm\n #  define _GLIBCXX_STD __cxx1998\n-#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY(default) { \n+#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY_ATTR(default) { \n #  define _GLIBCXX_END_NAMESPACE }\n #  define _GLIBCXX_EXTERN_TEMPLATE 0\n # endif\n@@ -161,7 +161,7 @@\n #  define _GLIBCXX_STD_D __norm\n #  define _GLIBCXX_STD_P __norm\n #  define _GLIBCXX_STD __cxx1998\n-#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY(default) { \n+#  define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY_ATTR(default) { \n #  define _GLIBCXX_END_NAMESPACE }\n #  define _GLIBCXX_EXTERN_TEMPLATE 0\n # endif\n@@ -171,7 +171,7 @@\n    without inlining due to lack of weak symbols\n # endif\n \n-# define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y)  namespace X { namespace Y _GLIBCXX_VISIBILITY(default) {\n+# define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y)  namespace X { namespace Y _GLIBCXX_VISIBILITY_ATTR(default) {\n # define _GLIBCXX_END_NESTED_NAMESPACE } }\n #endif\n "}, {"sha": "462b1f47e0af8650fa69775fc570496e7b9c4138", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -700,7 +700,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n # include <backward/binders.h>\n #endif\n "}, {"sha": "89f680d7088144654451cededf4e8c3fc2714227", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -71,7 +71,7 @@\n #  include <bits/stl_function.h>  // std::less\n #  include <debug/debug.h>\n #  include <type_traits>\n-#  if _GLIBCXX_USE_DEPRECATED\n+#  if _GLIBCXX_DEPRECATED\n #    include <backward/auto_ptr.h>\n #  endif\n #  if defined(_GLIBCXX_INCLUDE_AS_CXX0X)"}, {"sha": "72e3fe425013bcd1d3acb80291a006d2d486f7b8", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -763,7 +763,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       overflow(int_type /* __c */ = traits_type::eof())\n       { return traits_type::eof(); }\n \n-#if _GLIBCXX_USE_DEPRECATED\n+#if _GLIBCXX_DEPRECATED\n     // Annex D.6\n     public:\n       /**\n@@ -773,11 +773,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  been read.\n        *\n        *  See http://gcc.gnu.org/ml/libstdc++/2002-05/msg00168.html\n-       *\n-       *  @note  This function has been deprecated by the standard.  You\n-       *         must define @c _GLIBCXX_DEPRECATED to make this visible; see\n-       *         c++config.h.\n-      */\n+       */\n       void \n       stossc() \n       {"}, {"sha": "c2ee1ca5b5d7cf01c8ac505262e30afffa65732a", "filename": "libstdc++-v3/include/tr1_impl/boost_shared_ptr.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -299,7 +299,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t    }\n \t}\n \n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n       // Special case for auto_ptr<_Tp> to provide the strong guarantee.\n       template<typename _Tp>\n         explicit\n@@ -601,7 +601,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       /**\n        * @post use_count() == 1 and __r.get() == 0\n        */\n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n       template<typename _Tp1>\n         explicit\n         __shared_ptr(std::auto_ptr<_Tp1>& __r)\n@@ -645,7 +645,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t  return *this;\n \t}\n \n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n       template<typename _Tp1>\n         __shared_ptr&\n         operator=(std::auto_ptr<_Tp1>& __r)\n@@ -1020,7 +1020,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n         shared_ptr(const weak_ptr<_Tp1>& __r)\n \t: __shared_ptr<_Tp>(__r) { }\n \n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n       template<typename _Tp1>\n         explicit\n         shared_ptr(std::auto_ptr<_Tp1>& __r)\n@@ -1047,7 +1047,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t  return *this;\n \t}\n \n-#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_USE_DEPRECATED\n+#if !defined(__GXX_EXPERIMENTAL_CXX0X__) || _GLIBCXX_DEPRECATED\n       template<typename _Tp1>\n         shared_ptr&\n         operator=(std::auto_ptr<_Tp1>& __r)"}, {"sha": "7b34f174defb922c10a72cbb535b35d921a18954", "filename": "libstdc++-v3/src/globals_io.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -75,7 +75,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n+namespace __gnu_internal _GLIBCXX_VISIBILITY_ATTR(hidden)\n {\n   using namespace std;\n   using namespace __gnu_cxx;"}, {"sha": "50621aaeb5a68b62849b263be7792476870747e5", "filename": "libstdc++-v3/src/ios_init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc?ref=4dd9d9db1d0571e5b416f4c3e6d7b902389f0fd9", "patch": "@@ -39,7 +39,7 @@\n #include <ext/stdio_filebuf.h>\n #include <ext/stdio_sync_filebuf.h>\n \n-namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n+namespace __gnu_internal _GLIBCXX_VISIBILITY_ATTR(hidden)\n {\n   using namespace __gnu_cxx;\n "}]}