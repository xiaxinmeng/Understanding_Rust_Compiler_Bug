{"sha": "9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYyZTlhYzQzYjA5NzEzNzExZDNmMzU4YTJhYjRkYmI4NmE5MjViYg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2007-07-17T03:56:40Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2007-07-17T03:56:40Z"}, "message": "re PR rtl-optimization/32773 (SH: ICE in create_pre_exit, at mode-switching.c:223)\n\n\tPR rtl-optimization/32773\n\t* cfglayout.c (force_one_exit_fallthru): New function.\n\t(cfg_layout_finalize): Use it.\n\n\t* gcc.dg/pr32773.c: New test.\n\nFrom-SVN: r126700", "tree": {"sha": "4a7695fc9b2d11cc77b1801a9f85ca70199d8db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a7695fc9b2d11cc77b1801a9f85ca70199d8db4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/comments", "author": null, "committer": null, "parents": [{"sha": "02634bb2873d57f5beda6c0f1633b8bfdbc08ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02634bb2873d57f5beda6c0f1633b8bfdbc08ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02634bb2873d57f5beda6c0f1633b8bfdbc08ffa"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "7b7dee07815fb9481c9b68c990f4457da35dffe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "patch": "@@ -1,3 +1,9 @@\n+2007-07-17  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/32773\n+\t* cfglayout.c (force_one_exit_fallthru): New function.\n+\t(cfg_layout_finalize): Use it.\n+\n 2007-07-16  Richard Guenther  <rguenther@suse.de>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "e989344cd801195096e7254878ff7012eb9d9f98", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "patch": "@@ -963,6 +963,56 @@ fixup_fallthru_exit_predecessor (void)\n       bb->aux = NULL;\n     }\n }\n+\n+/* In case there are more than one fallthru predecessors of exit, force that\n+   there is only one.  */\n+\n+static void\n+force_one_exit_fallthru (void)\n+{\n+  edge e, predecessor = NULL;\n+  bool more = false;\n+  edge_iterator ei;\n+  basic_block forwarder, bb;\n+\n+  FOR_EACH_EDGE (e, ei, EXIT_BLOCK_PTR->preds)\n+    if (e->flags & EDGE_FALLTHRU)\n+      {\n+\tif (predecessor == NULL)\n+\t  predecessor = e;\n+\telse\n+\t  {\n+\t    more = true;\n+\t    break;\n+\t  }\n+      }\n+\n+  if (!more)\n+    return;\n+\n+  /* Exit has several fallthru predecessors.  Create a forwarder block for\n+     them.  */\n+  forwarder = split_edge (predecessor);\n+  for (ei = ei_start (EXIT_BLOCK_PTR->preds); (e = ei_safe_edge (ei)); )\n+    {\n+      if (e->src == forwarder\n+\t  || !(e->flags & EDGE_FALLTHRU))\n+\tei_next (&ei);\n+      else\n+\tredirect_edge_and_branch_force (e, forwarder);\n+    }\n+\n+  /* Fix up the chain of blocks -- make FORWARDER immediately preceed the\n+     exit block.  */\n+  FOR_EACH_BB (bb)\n+    {\n+      if (bb->aux == NULL && bb != forwarder)\n+\t{\n+\t  bb->aux = forwarder;\n+\t  break;\n+\t}\n+    }\n+}\n \f\n /* Return true in case it is possible to duplicate the basic block BB.  */\n \n@@ -1178,6 +1228,7 @@ cfg_layout_finalize (void)\n #ifdef ENABLE_CHECKING\n   verify_flow_info ();\n #endif\n+  force_one_exit_fallthru ();\n   rtl_register_cfg_hooks ();\n   if (reload_completed\n #ifdef HAVE_epilogue"}, {"sha": "cb178678f89e5abf882468fa2d7625532f2c966f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "patch": "@@ -1,3 +1,8 @@\n+2007-07-17  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/32773\n+\t* gcc.dg/pr32773.c: New test.\n+\n 2007-07-16  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* gcc.target/spu/intrinsics-1.c: Use dg-message to"}, {"sha": "ca5dd53fdf417a44722e0f010df39a7a0a8c9dcd", "filename": "gcc/testsuite/gcc.dg/pr32773.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32773.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2e9ac43b09713711d3f358a2ab4dbb86a925bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32773.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32773.c?ref=9f2e9ac43b09713711d3f358a2ab4dbb86a925bb", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fprofile-use\" } */\n+/* { dg-options \"-O -m4 -fprofile-use\" { target sh-*-* } } */\n+\n+void foo (int *p)\n+{\n+  if (p)\n+    *p = 0;\n+} /* { dg-message \"note: \\[^\\n\\]*execution counts estimated\" } */\n+\n+/* { dg-final { cleanup-coverage-files } } */"}]}