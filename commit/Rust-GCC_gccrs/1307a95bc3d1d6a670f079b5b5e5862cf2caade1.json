{"sha": "1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwN2E5NWJjM2QxZDZhNjcwZjA3OWI1YjVlNTg2MmNmMmNhYWRlMQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-10-24T11:54:06Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-10-24T11:54:06Z"}, "message": "vmul.c: New file.\n\n2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmul.c: New file.\n\nFrom-SVN: r216660", "tree": {"sha": "beb28973e04f72a7af771d4eb6b418c051042368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beb28973e04f72a7af771d4eb6b418c051042368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1307a95bc3d1d6a670f079b5b5e5862cf2caade1/comments", "author": null, "committer": null, "parents": [{"sha": "1933a62797769a99098c15ce6cb8dda3894c7c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1933a62797769a99098c15ce6cb8dda3894c7c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1933a62797769a99098c15ce6cb8dda3894c7c9f"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "bc521e2591b73e516fbba659cf4714be593a1afa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1307a95bc3d1d6a670f079b5b5e5862cf2caade1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1307a95bc3d1d6a670f079b5b5e5862cf2caade1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "patch": "@@ -1,3 +1,7 @@\n+2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmul.c: New file.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vldX_lane.c: New file."}, {"sha": "7527861ffbf10fb86ef23db67510dd2cb0df88b9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmul.c", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1307a95bc3d1d6a670f079b5b5e5862cf2caade1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1307a95bc3d1d6a670f079b5b5e5862cf2caade1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul.c?ref=1307a95bc3d1d6a670f079b5b5e5862cf2caade1", "patch": "@@ -0,0 +1,156 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xf0, 0x1, 0x12, 0x23,\n+\t\t\t\t       0x34, 0x45, 0x56, 0x67 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfde0, 0xfe02, 0xfe24, 0xfe46 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffcd0, 0xfffffd03 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xc0, 0x4, 0x48, 0x8c,\n+\t\t\t\t\t0xd0, 0x14, 0x58, 0x9c };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xfab0, 0xfb05, 0xfb5a, 0xfbaf };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffff9a0, 0xfffffa06 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0xc0, 0x84, 0x48, 0xc,\n+\t\t\t\t\t0xd0, 0x94, 0x58, 0x1c };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc4053333, 0xc3f9c000 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x90, 0x7, 0x7e, 0xf5,\n+\t\t\t\t\t0x6c, 0xe3, 0x5a, 0xd1,\n+\t\t\t\t\t0x48, 0xbf, 0x36, 0xad,\n+\t\t\t\t\t0x24, 0x9b, 0x12, 0x89 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xf780, 0xf808, 0xf890, 0xf918,\n+\t\t\t\t\t0xf9a0, 0xfa28, 0xfab0, 0xfb38 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffff670, 0xfffff709,\n+\t\t\t\t\t0xfffff7a2, 0xfffff83b };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x60, 0xa, 0xb4, 0x5e,\n+\t\t\t\t\t 0x8, 0xb2, 0x5c, 0x6,\n+\t\t\t\t\t 0xb0, 0x5a, 0x4, 0xae,\n+\t\t\t\t\t 0x58, 0x2, 0xac, 0x56 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xf450, 0xf50b, 0xf5c6, 0xf681,\n+\t\t\t\t\t 0xf73c, 0xf7f7, 0xf8b2, 0xf96d };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfffff340, 0xfffff40c,\n+\t\t\t\t\t 0xfffff4d8, 0xfffff5a4 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x60, 0xca, 0x34, 0x9e,\n+\t\t\t\t\t 0xc8, 0x62, 0x9c, 0x36,\n+\t\t\t\t\t 0x30, 0x9a, 0x64, 0xce,\n+\t\t\t\t\t 0x98, 0x32, 0xcc, 0x66 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc4c73333, 0xc4bac000,\n+\t\t\t\t\t   0xc4ae4ccd, 0xc4a1d999 };\n+\n+#ifndef INSN_NAME\n+#define INSN_NAME vmul\n+#define TEST_MSG \"VMUL\"\n+#endif\n+\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+#define DECL_VMUL(T, W, N)\t\t\t\\\n+  DECL_VARIABLE(vector1, T, W, N);\t\t\\\n+  DECL_VARIABLE(vector2, T, W, N);\t\t\\\n+  DECL_VARIABLE(vector_res, T, W, N)\n+\n+  /* vector_res = OP(vector1, vector2), then store the result.  */\n+#define TEST_VMUL1(INSN, Q, T1, T2, W, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    INSN##Q##_##T2##W(VECT_VAR(vector1, T1, W, N),\t\t\t\\\n+\t\t      VECT_VAR(vector2, T1, W, N));\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N),\t\t\t\t\\\n+\t\t    VECT_VAR(vector_res, T1, W, N))\n+\n+#define TEST_VMUL(INSN, Q, T1, T2, W, N)\t\\\n+  TEST_VMUL1(INSN, Q, T1, T2, W, N)\n+\n+  DECL_VMUL(int, 8, 8);\n+  DECL_VMUL(int, 16, 4);\n+  DECL_VMUL(int, 32, 2);\n+  DECL_VMUL(uint, 8, 8);\n+  DECL_VMUL(uint, 16, 4);\n+  DECL_VMUL(uint, 32, 2);\n+  DECL_VMUL(poly, 8, 8);\n+  DECL_VMUL(float, 32, 2);\n+  DECL_VMUL(int, 8, 16);\n+  DECL_VMUL(int, 16, 8);\n+  DECL_VMUL(int, 32, 4);\n+  DECL_VMUL(uint, 8, 16);\n+  DECL_VMUL(uint, 16, 8);\n+  DECL_VMUL(uint, 32, 4);\n+  DECL_VMUL(poly, 8, 16);\n+  DECL_VMUL(float, 32, 4);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector1\" from \"buffer\".  */\n+  VLOAD(vector1, buffer, , int, s, 8, 8);\n+  VLOAD(vector1, buffer, , int, s, 16, 4);\n+  VLOAD(vector1, buffer, , int, s, 32, 2);\n+  VLOAD(vector1, buffer, , uint, u, 8, 8);\n+  VLOAD(vector1, buffer, , uint, u, 16, 4);\n+  VLOAD(vector1, buffer, , uint, u, 32, 2);\n+  VLOAD(vector1, buffer, , poly, p, 8, 8);\n+  VLOAD(vector1, buffer, , float, f, 32, 2);\n+  VLOAD(vector1, buffer, q, int, s, 8, 16);\n+  VLOAD(vector1, buffer, q, int, s, 16, 8);\n+  VLOAD(vector1, buffer, q, int, s, 32, 4);\n+  VLOAD(vector1, buffer, q, uint, u, 8, 16);\n+  VLOAD(vector1, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector1, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector1, buffer, q, poly, p, 8, 16);\n+  VLOAD(vector1, buffer, q, float, f, 32, 4);\n+\n+  /* Choose init value arbitrarily.  */\n+  VDUP(vector2, , int, s, 8, 8, 0x11);\n+  VDUP(vector2, , int, s, 16, 4, 0x22);\n+  VDUP(vector2, , int, s, 32, 2, 0x33);\n+  VDUP(vector2, , uint, u, 8, 8, 0x44);\n+  VDUP(vector2, , uint, u, 16, 4, 0x55);\n+  VDUP(vector2, , uint, u, 32, 2, 0x66);\n+  VDUP(vector2, , poly, p, 8, 8, 0x44);\n+  VDUP(vector2, , float, f, 32, 2, 33.3f);\n+  VDUP(vector2, q, int, s, 8, 16, 0x77);\n+  VDUP(vector2, q, int, s, 16, 8, 0x88);\n+  VDUP(vector2, q, int, s, 32, 4, 0x99);\n+  VDUP(vector2, q, uint, u, 8, 16, 0xAA);\n+  VDUP(vector2, q, uint, u, 16, 8, 0xBB);\n+  VDUP(vector2, q, uint, u, 32, 4, 0xCC);\n+  VDUP(vector2, q, poly, p, 8, 16, 0xAA);\n+  VDUP(vector2, q, float, f, 32, 4, 99.6f);\n+\n+  /* Execute the tests.  */\n+  TEST_VMUL(INSN_NAME, , int, s, 8, 8);\n+  TEST_VMUL(INSN_NAME, , int, s, 16, 4);\n+  TEST_VMUL(INSN_NAME, , int, s, 32, 2);\n+  TEST_VMUL(INSN_NAME, , uint, u, 8, 8);\n+  TEST_VMUL(INSN_NAME, , uint, u, 16, 4);\n+  TEST_VMUL(INSN_NAME, , uint, u, 32, 2);\n+  TEST_VMUL(INSN_NAME, , poly, p, 8, 8);\n+  TEST_VMUL(INSN_NAME, , float, f, 32, 2);\n+  TEST_VMUL(INSN_NAME, q, int, s, 8, 16);\n+  TEST_VMUL(INSN_NAME, q, int, s, 16, 8);\n+  TEST_VMUL(INSN_NAME, q, int, s, 32, 4);\n+  TEST_VMUL(INSN_NAME, q, uint, u, 8, 16);\n+  TEST_VMUL(INSN_NAME, q, uint, u, 16, 8);\n+  TEST_VMUL(INSN_NAME, q, uint, u, 32, 4);\n+  TEST_VMUL(INSN_NAME, q, poly, p, 8, 16);\n+  TEST_VMUL(INSN_NAME, q, float, f, 32, 4);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+\n+  return 0;\n+}"}]}