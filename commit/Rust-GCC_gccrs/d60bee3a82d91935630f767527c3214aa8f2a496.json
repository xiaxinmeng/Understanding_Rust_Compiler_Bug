{"sha": "d60bee3a82d91935630f767527c3214aa8f2a496", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwYmVlM2E4MmQ5MTkzNTYzMGY3Njc1MjdjMzIxNGFhOGYyYTQ5Ng==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-10-10T22:33:24Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-10-10T22:33:24Z"}, "message": "(INCOMING_RETURN_ADDR_RTX,INCOMING_FRAME_SP_OFFSET): Move definitions\nto a more sane place.\n\nFrom-SVN: r15891", "tree": {"sha": "84317fdbe10ad1012277bf1793d929c14cb0a1a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84317fdbe10ad1012277bf1793d929c14cb0a1a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60bee3a82d91935630f767527c3214aa8f2a496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60bee3a82d91935630f767527c3214aa8f2a496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60bee3a82d91935630f767527c3214aa8f2a496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60bee3a82d91935630f767527c3214aa8f2a496/comments", "author": null, "committer": null, "parents": [{"sha": "992b2778ced88ffc32ad652c20cce54dd2c61ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992b2778ced88ffc32ad652c20cce54dd2c61ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992b2778ced88ffc32ad652c20cce54dd2c61ff2"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "46e83b1c0fd8de14073ea4739b5b2db592b9434b", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60bee3a82d91935630f767527c3214aa8f2a496/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60bee3a82d91935630f767527c3214aa8f2a496/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=d60bee3a82d91935630f767527c3214aa8f2a496", "patch": "@@ -2213,6 +2213,18 @@ extern struct rtx_def *sparc_builtin_saveregs ();\n    : gen_rtx (MEM, Pmode,\t\t\t\\\n \t      memory_address (Pmode, plus_constant (frame, 15 * UNITS_PER_WORD))))\n \n+/* Before the prologue, the return address is %o7 + 8.  OK, sometimes it's\n+   +12, but always using +8 is close enough for frame unwind purposes.\n+   Actually, just using %o7 is close enough for unwinding, but %o7+8\n+   is something you can return to.  */\n+#define INCOMING_RETURN_ADDR_RTX \\\n+  gen_rtx (PLUS, word_mode, gen_rtx (REG, word_mode, 15), GEN_INT (8))\n+\n+/* The offset from the incoming value of %sp to the top of the stack frame\n+   for the current function.  On sparc64, we have to account for the stack\n+   bias if present.  */\n+#define INCOMING_FRAME_SP_OFFSET SPARC_STACK_BIAS\n+\n #define DOESNT_NEED_UNWINDER (! TARGET_FLAT)\n \f\n /* Addressing modes, and classification of registers for them.  */\n@@ -3187,16 +3199,3 @@ extern char *output_return ();\n /* Defined in flags.h, but insn-emit.c does not include flags.h.  */\n \n extern int flag_pic;\n-\n-/* Before the prologue, the return address is %o7 + 8.  OK, sometimes it's\n-   +12, but always using +8 is close enough for frame unwind purposes.\n-   Actually, just using %o7 is close enough for unwinding, but %o7+8\n-   is something you can return to.  */\n-#define INCOMING_RETURN_ADDR_RTX \\\n-  gen_rtx (PLUS, word_mode, gen_rtx (REG, word_mode, 15), GEN_INT (8))\n-\n-/* The offset from the incoming value of %sp to the top of the stack frame\n-   for the current function.  On sparc64, we have to account for the stack\n-   bias if present.  */\n-\n-#define INCOMING_FRAME_SP_OFFSET SPARC_STACK_BIAS"}]}