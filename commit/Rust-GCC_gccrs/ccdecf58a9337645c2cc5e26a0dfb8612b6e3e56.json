{"sha": "ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkZWNmNThhOTMzNzY0NWMyY2M1ZTI2YTBkZmI4NjEyYjZlM2U1Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T22:31:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T22:31:43Z"}, "message": "(assign_parms, expand_function_start): Properly set MEM_IN_STRUCT_P\nfor DECL_RTL of function result.\n\nFrom-SVN: r6791", "tree": {"sha": "75a7ab5df60ef4aa221318a0c1c77db56f61082e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75a7ab5df60ef4aa221318a0c1c77db56f61082e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56/comments", "author": null, "committer": null, "parents": [{"sha": "d4c60bd6d656c0f1fcf18ade58607e9b170eb0ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c60bd6d656c0f1fcf18ade58607e9b170eb0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c60bd6d656c0f1fcf18ade58607e9b170eb0ef"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "a266ead2c25efa370cf3d036ee6db6737e840cad", "filename": "gcc/function.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ccdecf58a9337645c2cc5e26a0dfb8612b6e3e56", "patch": "@@ -3707,8 +3707,19 @@ assign_parms (fndecl, second_time)\n       /* If this \"parameter\" was the place where we are receiving the\n \t function's incoming structure pointer, set up the result.  */\n       if (parm == function_result_decl)\n-\tDECL_RTL (DECL_RESULT (fndecl))\n-\t  = gen_rtx (MEM, DECL_MODE (DECL_RESULT (fndecl)), DECL_RTL (parm));\n+\t{\n+\t  tree result = DECL_RESULT (fndecl);\n+\t  tree restype = TREE_TYPE (result);\n+\n+\t  DECL_RTL (result)\n+\t    = gen_rtx (MEM, DECL_MODE (result), DECL_RTL (parm));\n+\n+\t  MEM_IN_STRUCT_P (DECL_RTL (result))\n+\t    = (TREE_CODE (restype) == RECORD_TYPE\n+\t       || TREE_CODE (restype) == UNION_TYPE\n+\t       || TREE_CODE (restype) == QUAL_UNION_TYPE\n+\t       || TREE_CODE (restype) == ARRAY_TYPE);\n+\t}\n \n       if (TREE_THIS_VOLATILE (parm))\n \tMEM_VOLATILE_P (DECL_RTL (parm)) = 1;\n@@ -4889,9 +4900,15 @@ expand_function_start (subr, parms_have_cleanups)\n \t    }\n \t}\n       if (value_address)\n-\tDECL_RTL (DECL_RESULT (subr))\n-\t  = gen_rtx (MEM, DECL_MODE (DECL_RESULT (subr)),\n-\t\t     value_address);\n+\t{\n+\t  DECL_RTL (DECL_RESULT (subr))\n+\t    = gen_rtx (MEM, DECL_MODE (DECL_RESULT (subr)), value_address);\n+\t  MEM_IN_STRUCT_P (DECL_RTL (DECL_RESULT (subr)))\n+\t    = (TREE_CODE (TREE_TYPE (DECL_RESULT (subr))) == RECORD_TYPE\n+\t       || TREE_CODE (TREE_TYPE (DECL_RESULT (subr))) == UNION_TYPE\n+\t       || TREE_CODE (TREE_TYPE (DECL_RESULT (subr))) == QUAL_UNION_TYPE\n+\t       || TREE_CODE (TREE_TYPE (DECL_RESULT (subr))) == ARRAY_TYPE);\n+\t}\n     }\n   else if (DECL_MODE (DECL_RESULT (subr)) == VOIDmode)\n     /* If return mode is void, this decl rtl should not be used.  */"}]}