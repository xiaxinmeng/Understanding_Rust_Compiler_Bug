{"sha": "274d2584e534a5e63be48999c794e90a73d420cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0ZDI1ODRlNTM0YTVlNjNiZTQ4OTk5Yzc5NGU5MGE3M2Q0MjBjYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2014-07-30T13:46:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T13:46:35Z"}, "message": "sem_ch5.adb: Improve error recovery.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb: Improve error recovery.\n\t* inline.adb (Build_Body_To_Inline): Set Full_Analysis to false\n\tbefore analyzing the body, so that in GNATprove mode there is\n\tno light expansion. Whatever expansion is required by SPARK will\n\tbe performed when analysing the inlined code.\n\nFrom-SVN: r213267", "tree": {"sha": "b9dd594866f029f8cb02de684dc83e809212b720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9dd594866f029f8cb02de684dc83e809212b720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/274d2584e534a5e63be48999c794e90a73d420cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274d2584e534a5e63be48999c794e90a73d420cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/274d2584e534a5e63be48999c794e90a73d420cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274d2584e534a5e63be48999c794e90a73d420cb/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2afa8fdd1b6c2757b6d73660c10801647b7c0a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afa8fdd1b6c2757b6d73660c10801647b7c0a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afa8fdd1b6c2757b6d73660c10801647b7c0a18"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c7e1696b86e8515e938a968130f63a530c061db8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=274d2584e534a5e63be48999c794e90a73d420cb", "patch": "@@ -1,3 +1,11 @@\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb: Improve error recovery.\n+\t* inline.adb (Build_Body_To_Inline): Set Full_Analysis to false\n+\tbefore analyzing the body, so that in GNATprove mode there is\n+\tno light expansion. Whatever expansion is required by SPARK will\n+\tbe performed when analysing the inlined code.\n+\n 2014-07-30  Bob Duff  <duff@adacore.com>\n \n \t* s-tataat.adb, s-tataat.ads, a-tasatt.adb: Minor comment fixes."}, {"sha": "b2ff243e38f205e3992660d3d0ae7f7b6fec406f", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=274d2584e534a5e63be48999c794e90a73d420cb", "patch": "@@ -833,6 +833,7 @@ package body Inline is\n \n    procedure Build_Body_To_Inline (N : Node_Id; Subp : Entity_Id) is\n       Decl            : constant Node_Id := Unit_Declaration_Node (Subp);\n+      Analysis_Status : constant Boolean := Full_Analysis;\n       Original_Body   : Node_Id;\n       Body_To_Analyze : Node_Id;\n       Max_Size        : constant := 10;\n@@ -1388,7 +1389,12 @@ package body Inline is\n          Append (Body_To_Analyze, Declarations (N));\n       end if;\n \n+      --  The body to inline is pre-analyzed.  In GNATprove mode we must\n+      --  disable full analysis as well so that light expansion does not\n+      --  take place either, and name resolution is unaffected.\n+\n       Expander_Mode_Save_And_Set (False);\n+      Full_Analysis := False;\n       Remove_Pragmas;\n \n       Analyze (Body_To_Analyze);\n@@ -1398,6 +1404,7 @@ package body Inline is\n       Remove (Body_To_Analyze);\n \n       Expander_Mode_Restore;\n+      Full_Analysis := Analysis_Status;\n \n       --  Restore environment if previously saved\n "}, {"sha": "a961bb710ef4cc460d63f7af3630c46c80193660", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274d2584e534a5e63be48999c794e90a73d420cb/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=274d2584e534a5e63be48999c794e90a73d420cb", "patch": "@@ -2841,6 +2841,13 @@ package body Sem_Ch5 is\n             Error_Msg_Sloc := Sloc (Ent);\n             Error_Msg_N (\"implicit label declaration for & is hidden#\", Id);\n \n+            if Present (Homonym (Ent))\n+              and then Ekind (Homonym (Ent)) = E_Label\n+            then\n+               Set_Entity (Id, Ent);\n+               Set_Ekind (Ent, E_Loop);\n+            end if;\n+\n          else\n             Generate_Reference (Ent, N, ' ');\n             Generate_Definition (Ent);"}]}