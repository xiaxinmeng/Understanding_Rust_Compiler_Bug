{"sha": "4dabf73695a37ef07074248a631edd06732bf8f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRhYmY3MzY5NWEzN2VmMDcwNzQyNDhhNjMxZWRkMDY3MzJiZjhmOQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2008-03-01T10:46:31Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2008-03-01T10:46:31Z"}, "message": "re PR libfortran/35063 (Clean up use of destroy_unit_mutex())\n\ngcc:\n\n2008-03-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR gcc/35063\n\t* gthr.h: Add __gthread_mutex_destroy as a function that must be\n\timplemented.\n\t* gthr-vxworks.h (__gthread_mutex_destroy): Null implementation.\n\t* gthr-single.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-rtems.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-mipssde.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-nks.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-solaris.h (__gthread_mutex_destroy): Call mutex_destroy.\n\t* gthr-win32.h (__GTHREAD_MUTEX_DESTROY_FUNCTION): Remove.\n\t(__gthread_mutex_destroy_function): Rename to\n\t__gthread_mutex_destroy.\n\t* gthr-dce.h (__gthread_mutex_destroy): Call\n\tpthread_mutex_destroy.\n\t* gthr-tpf.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-posix.h (__gthread_mutex_destroy): Likewise.\n\t* gthr-posix95.h (__gthread_mutex_destroy): Likewise.\n\n\nlibgfortran:\n\n2008-03-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR libfortran/35063\n\t* io/unit.c (destroy_unit_mutex): Call __gthread_mutex_destroy\n\tinstead of macro kludge.\n\nFrom-SVN: r132800", "tree": {"sha": "0a496ad8673e22a94b319a53eee147bd5fcac42a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a496ad8673e22a94b319a53eee147bd5fcac42a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dabf73695a37ef07074248a631edd06732bf8f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dabf73695a37ef07074248a631edd06732bf8f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dabf73695a37ef07074248a631edd06732bf8f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dabf73695a37ef07074248a631edd06732bf8f9/comments", "author": null, "committer": null, "parents": [{"sha": "63642d5a8dae511ccd320c89580c359a09b713dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63642d5a8dae511ccd320c89580c359a09b713dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63642d5a8dae511ccd320c89580c359a09b713dc"}], "stats": {"total": 123, "additions": 111, "deletions": 12}, "files": [{"sha": "2455b177e15e28126ac5072d7d8476d4798a2489", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -1,3 +1,23 @@\n+2008-03-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR gcc/35063\n+\t* gthr.h: Add __gthread_mutex_destroy as a function that must be\n+\timplemented.\n+\t* gthr-vxworks.h (__gthread_mutex_destroy): Null implementation.\n+\t* gthr-single.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-rtems.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-mipssde.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-nks.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-solaris.h (__gthread_mutex_destroy): Call mutex_destroy.\n+\t* gthr-win32.h (__GTHREAD_MUTEX_DESTROY_FUNCTION): Remove.\n+\t(__gthread_mutex_destroy_function): Rename to\n+\t__gthread_mutex_destroy.\n+\t* gthr-dce.h (__gthread_mutex_destroy): Call\n+\tpthread_mutex_destroy.\n+\t* gthr-tpf.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-posix.h (__gthread_mutex_destroy): Likewise.\n+\t* gthr-posix95.h (__gthread_mutex_destroy): Likewise.\n+\n 2008-03-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* df-scan.c (df_ref_chain_change_bb): Simplify."}, {"sha": "e95a4e5c87d3161a5cc8d521e5a8aa2ff922cbdc", "filename": "gcc/gthr-dce.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-dce.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-dce.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-dce.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -71,6 +71,7 @@ __gthrw(pthread_getspecific)\n __gthrw(pthread_setspecific)\n __gthrw(pthread_create)\n __gthrw(pthread_mutex_init)\n+__gthrw(pthread_mutex_destroy)\n __gthrw(pthread_mutex_lock)\n __gthrw(pthread_mutex_trylock)\n __gthrw(pthread_mutex_unlock)\n@@ -474,6 +475,15 @@ __gthread_mutex_init_function (__gthread_mutex_t *mutex)\n     __gthrw_(pthread_mutex_init) (mutex, pthread_mutexattr_default);\n }\n \n+static inline int\n+__gthread_mutx_destroy (__gthread_mutex_t *mutex)\n+{\n+  if (__gthread_active_p ())\n+    return __gthrw_(pthread_mutex_destroy) (mutex);\n+  else\n+    return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "b8cf24ebc750c5ab244a3f36a12ce56eb8d7f03b", "filename": "gcc/gthr-mipssde.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-mipssde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-mipssde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-mipssde.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -134,6 +134,12 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n   return __gthrw_(__sdethread_setspecific) (key, ptr);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "14027e0871bfb583414873c77521848cddfb2d2b", "filename": "gcc/gthr-nks.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-nks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-nks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-nks.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -341,6 +341,12 @@ __gthread_mutex_init_function (__gthread_mutex_t *mutex)\n   *mutex = NXMutexAlloc (0, 0, &info);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "b0c9ebbc370e2eac756f70b02b368f071810eca4", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -94,6 +94,7 @@ __gthrw3(pthread_mutex_lock)\n __gthrw3(pthread_mutex_trylock)\n __gthrw3(pthread_mutex_unlock)\n __gthrw3(pthread_mutex_init)\n+__gthrw3(pthread_mutex_destroy)\n __gthrw3(pthread_cond_broadcast)\n __gthrw3(pthread_cond_wait)\n #else\n@@ -106,6 +107,7 @@ __gthrw(pthread_mutex_lock)\n __gthrw(pthread_mutex_trylock)\n __gthrw(pthread_mutex_unlock)\n __gthrw(pthread_mutex_init)\n+__gthrw(pthread_mutex_destroy)\n __gthrw(pthread_cond_broadcast)\n __gthrw(pthread_cond_wait)\n #endif\n@@ -676,6 +678,15 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n   return __gthrw_(pthread_setspecific) (key, ptr);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t *mutex)\n+{\n+  if (__gthread_active_p ())\n+    return __gthrw_(pthread_mutex_destroy) (mutex);\n+  else\n+    return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "d993c1309afaefb7c71932f72bb93f778a3efc72", "filename": "gcc/gthr-posix95.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-posix95.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-posix95.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix95.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -80,13 +80,14 @@ __gthrw(pthread_create)\n __gthrw(pthread_cancel)\n __gthrw(pthread_self)\n \n+__gthrw(pthread_mutex_init)\n+__gthrw(pthread_mutex_destroy)\n __gthrw(pthread_mutex_lock)\n __gthrw(pthread_mutex_trylock)\n __gthrw(pthread_mutex_unlock)\n __gthrw(pthread_mutexattr_init)\n __gthrw(pthread_mutexattr_destroy)\n \n-__gthrw(pthread_mutex_init)\n __gthrw(pthread_cond_broadcast)\n __gthrw(pthread_cond_wait)\n \n@@ -639,6 +640,15 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n   return __gthrw_(pthread_setspecific) (key, ptr);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t *mutex)\n+{\n+  if (__gthread_active_p ())\n+    return __gthrw_(pthread_mutex_destroy) (mutex);\n+  else\n+    return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "425d7dee0e929427b36be71c8771ff00395252ef", "filename": "gcc/gthr-rtems.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-rtems.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -110,6 +110,12 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n   return rtems_gxx_setspecific (key, ptr);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "7dd1f5471cf1d3c7fea9ad3cf22040d3530656ef", "filename": "gcc/gthr-single.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-single.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-single.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-single.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -215,6 +215,12 @@ __gthread_active_p (void)\n   return 0;\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t * UNUSED(mutex))\n {"}, {"sha": "a726bfa1fd9344ada92126fc26080823fc4b612e", "filename": "gcc/gthr-solaris.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-solaris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-solaris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-solaris.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -461,6 +461,15 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n   return __gthrw_(thr_setspecific) (key, (void *) ptr);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  if (__gthread_active_p ())\n+    return __gthrw_(mutex_destroy) (mutex);\n+  else\n+    return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "fd80bd49df374077445c07cf1813dfbcc3c44689", "filename": "gcc/gthr-tpf.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-tpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-tpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-tpf.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -92,6 +92,7 @@ __gthrw(pthread_mutexattr_init)\n __gthrw(pthread_mutexattr_settype)\n __gthrw(pthread_mutexattr_destroy)\n __gthrw(pthread_mutex_init)\n+__gthrw(pthread_mutex_destroy)\n \n static inline int\n __gthread_active_p (void)\n@@ -144,6 +145,15 @@ __gthread_setspecific (__gthread_key_t key, const void *ptr)\n     return -1;\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t *mutex)\n+{\n+  if (__tpf_pthread_active ())\n+    return __gthrw_(pthread_mutex_destroy) (mutex);\n+  else\n+    return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "ba813140d76f43cabdb06427358b28dd6e2b3a24", "filename": "gcc/gthr-vxworks.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-vxworks.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -60,6 +60,12 @@ __gthread_mutex_init_function (__gthread_mutex_t *mutex)\n   *mutex = semMCreate (SEM_Q_PRIORITY | SEM_INVERSION_SAFE | SEM_DELETE_SAFE);\n }\n \n+static inline int\n+__gthread_mutex_destroy (__gthread_mutex_t * UNUSED(mutex))\n+{\n+  return 0;\n+}\n+\n static inline int\n __gthread_mutex_lock (__gthread_mutex_t *mutex)\n {"}, {"sha": "b75c8654a08d0bdeedb0f149fca862f3de9cfade", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -359,9 +359,6 @@ typedef struct {\n   __gthread_recursive_mutex_init_function\n #define __GTHREAD_RECURSIVE_MUTEX_INIT_DEFAULT {-1, 0, 0, 0}\n \n-#define __GTHREAD_MUTEX_DESTROY_FUNCTION \\\n-  __gthread_mutex_destroy_function\n-\n #if __MINGW32_MAJOR_VERSION >= 1 || \\\n   (__MINGW32_MAJOR_VERSION == 0 && __MINGW32_MINOR_VERSION > 2)\n #define MINGW32_SUPPORTS_MT_EH 1\n@@ -619,7 +616,7 @@ __gthread_mutex_init_function (__gthread_mutex_t *mutex)\n }\n \n static inline void\n-__gthread_mutex_destroy_function (__gthread_mutex_t *mutex)\n+__gthread_mutex_destroy (__gthread_mutex_t *mutex)\n {\n   CloseHandle ((HANDLE) mutex->sema);\n }"}, {"sha": "a145ef1a9deb9cf51d32badcb827210435518501", "filename": "gcc/gthr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/gcc%2Fgthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr.h?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -73,6 +73,8 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n      void *__gthread_getspecific (__gthread_key_t key)\n      int __gthread_setspecific (__gthread_key_t key, const void *ptr)\n \n+     int __gthread_mutex_destroy (__gthread_mutex_t *mutex);\n+\n      int __gthread_mutex_lock (__gthread_mutex_t *mutex);\n      int __gthread_mutex_trylock (__gthread_mutex_t *mutex);\n      int __gthread_mutex_unlock (__gthread_mutex_t *mutex);"}, {"sha": "8ed3624e01d64fb1ab9698c5c35ff1490df65226", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -1,3 +1,9 @@\n+2008-03-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/35063\n+\t* io/unit.c (destroy_unit_mutex): Call __gthread_mutex_destroy\n+\tinstead of macro kludge.\n+\t\n 2008-02-25  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/29549"}, {"sha": "a54061d2f84cb070671689060a68d3d508ae943f", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dabf73695a37ef07074248a631edd06732bf8f9/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dabf73695a37ef07074248a631edd06732bf8f9/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=4dabf73695a37ef07074248a631edd06732bf8f9", "patch": "@@ -209,13 +209,7 @@ insert_unit (int n)\n static void\n destroy_unit_mutex (gfc_unit * u)\n {\n-#ifdef __GTHREAD_MUTEX_DESTROY_FUNCTION\n-  __GTHREAD_MUTEX_DESTROY_FUNCTION (&u->lock);\n-#else\n-#ifdef __CYGWIN__\n-  pthread_mutex_destroy (&u->lock);\n-#endif\n-#endif\n+  __gthread_mutex_destroy (&u->lock);\n   free_mem (u);\n }\n "}]}