{"sha": "6b8b0c8e243bdc122a9ddd42030275494b1148ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI4YjBjOGUyNDNiZGMxMjJhOWRkZDQyMDMwMjc1NDk0YjExNDhmZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:38Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:38Z"}, "message": "aarch64: Add costs for LD[34] and ST[34] postincrements\n\nMost postincrements are cheap on Neoverse V1, but it's\ngenerally better to avoid them on LD[34] and ST[34] instructions.\nThis patch adds separate address costs fields for these cases.\nOther CPUs continue to use the same costs for all postincrements.\n\ngcc/\n\t* config/aarch64/aarch64-protos.h\n\t(cpu_addrcost_table::post_modify_ld3_st3): New member variable.\n\t(cpu_addrcost_table::post_modify_ld4_st4): Likewise.\n\t* config/aarch64/aarch64.c (generic_addrcost_table): Update\n\taccordingly, using the same costs as for post_modify.\n\t(exynosm1_addrcost_table, xgene1_addrcost_table): Likewise.\n\t(thunderx2t99_addrcost_table, thunderx3t110_addrcost_table):\n\t(tsv110_addrcost_table, qdf24xx_addrcost_table): Likewise.\n\t(a64fx_addrcost_table): Likewise.\n\t(neoversev1_addrcost_table): New.\n\t(neoversev1_tunings): Use neoversev1_addrcost_table.\n\t(aarch64_address_cost): Use the new post_modify costs for CImode\n\tand XImode.", "tree": {"sha": "8fd8df66a926282c55eac251c7ddd91c22391052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd8df66a926282c55eac251c7ddd91c22391052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b8b0c8e243bdc122a9ddd42030275494b1148ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8b0c8e243bdc122a9ddd42030275494b1148ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8b0c8e243bdc122a9ddd42030275494b1148ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8b0c8e243bdc122a9ddd42030275494b1148ff/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1205a8cadb6bd41cdf5b13d7aca8fb44332002e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1205a8cadb6bd41cdf5b13d7aca8fb44332002e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1205a8cadb6bd41cdf5b13d7aca8fb44332002e5"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "d5d5417370e6195c34ab9cbbbe59eb890bc9a924", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8b0c8e243bdc122a9ddd42030275494b1148ff/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8b0c8e243bdc122a9ddd42030275494b1148ff/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=6b8b0c8e243bdc122a9ddd42030275494b1148ff", "patch": "@@ -177,6 +177,8 @@ struct cpu_addrcost_table\n   const struct scale_addr_mode_cost addr_scale_costs;\n   const int pre_modify;\n   const int post_modify;\n+  const int post_modify_ld3_st3;\n+  const int post_modify_ld4_st4;\n   const int register_offset;\n   const int register_sextend;\n   const int register_zextend;"}, {"sha": "a573850b3fd600a0067da7a218e4e52b78c2e1bb", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8b0c8e243bdc122a9ddd42030275494b1148ff/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8b0c8e243bdc122a9ddd42030275494b1148ff/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6b8b0c8e243bdc122a9ddd42030275494b1148ff", "patch": "@@ -364,6 +364,8 @@ static const struct cpu_addrcost_table generic_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   0, /* register_offset  */\n   0, /* register_sextend  */\n   0, /* register_zextend  */\n@@ -380,6 +382,8 @@ static const struct cpu_addrcost_table exynosm1_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   1, /* register_offset  */\n   1, /* register_sextend  */\n   2, /* register_zextend  */\n@@ -396,6 +400,8 @@ static const struct cpu_addrcost_table xgene1_addrcost_table =\n     },\n   1, /* pre_modify  */\n   1, /* post_modify  */\n+  1, /* post_modify_ld3_st3  */\n+  1, /* post_modify_ld4_st4  */\n   0, /* register_offset  */\n   1, /* register_sextend  */\n   1, /* register_zextend  */\n@@ -412,6 +418,8 @@ static const struct cpu_addrcost_table thunderx2t99_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   2, /* register_offset  */\n   3, /* register_sextend  */\n   3, /* register_zextend  */\n@@ -428,6 +436,8 @@ static const struct cpu_addrcost_table thunderx3t110_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   2, /* register_offset  */\n   3, /* register_sextend  */\n   3, /* register_zextend  */\n@@ -444,6 +454,8 @@ static const struct cpu_addrcost_table tsv110_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   0, /* register_offset  */\n   1, /* register_sextend  */\n   1, /* register_zextend  */\n@@ -460,6 +472,8 @@ static const struct cpu_addrcost_table qdf24xx_addrcost_table =\n     },\n   1, /* pre_modify  */\n   1, /* post_modify  */\n+  1, /* post_modify_ld3_st3  */\n+  1, /* post_modify_ld4_st4  */\n   3, /* register_offset  */\n   3, /* register_sextend  */\n   3, /* register_zextend  */\n@@ -476,12 +490,32 @@ static const struct cpu_addrcost_table a64fx_addrcost_table =\n     },\n   0, /* pre_modify  */\n   0, /* post_modify  */\n+  0, /* post_modify_ld3_st3  */\n+  0, /* post_modify_ld4_st4  */\n   2, /* register_offset  */\n   3, /* register_sextend  */\n   3, /* register_zextend  */\n   0, /* imm_offset  */\n };\n \n+static const struct cpu_addrcost_table neoversev1_addrcost_table =\n+{\n+    {\n+      1, /* hi  */\n+      0, /* si  */\n+      0, /* di  */\n+      1, /* ti  */\n+    },\n+  0, /* pre_modify  */\n+  0, /* post_modify  */\n+  3, /* post_modify_ld3_st3  */\n+  3, /* post_modify_ld4_st4  */\n+  0, /* register_offset  */\n+  0, /* register_sextend  */\n+  0, /* register_zextend  */\n+  0 /* imm_offset  */\n+};\n+\n static const struct cpu_regmove_cost generic_regmove_cost =\n {\n   1, /* GP2GP  */\n@@ -1777,7 +1811,7 @@ static const struct cpu_vector_cost neoversev1_vector_cost =\n static const struct tune_params neoversev1_tunings =\n {\n   &cortexa76_extra_costs,\n-  &generic_addrcost_table,\n+  &neoversev1_addrcost_table,\n   &generic_regmove_cost,\n   &neoversev1_vector_cost,\n   &generic_branch_cost,\n@@ -12077,7 +12111,14 @@ aarch64_address_cost (rtx x,\n \tif (c == PRE_INC || c == PRE_DEC || c == PRE_MODIFY)\n \t  cost += addr_cost->pre_modify;\n \telse if (c == POST_INC || c == POST_DEC || c == POST_MODIFY)\n-\t  cost += addr_cost->post_modify;\n+\t  {\n+\t    if (mode == CImode)\n+\t      cost += addr_cost->post_modify_ld3_st3;\n+\t    else if (mode == XImode)\n+\t      cost += addr_cost->post_modify_ld4_st4;\n+\t    else\n+\t      cost += addr_cost->post_modify;\n+\t  }\n \telse\n \t  gcc_unreachable ();\n "}]}