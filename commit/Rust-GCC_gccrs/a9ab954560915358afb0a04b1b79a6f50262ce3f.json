{"sha": "a9ab954560915358afb0a04b1b79a6f50262ce3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlhYjk1NDU2MDkxNTM1OGFmYjBhMDRiMWI3OWE2ZjUwMjYyY2UzZg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-05-17T16:21:25Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-05-17T16:21:25Z"}, "message": "* rs6000/rs6000.c (output_option, m_options, output_options): Delete.\n\nFrom-SVN: r11998", "tree": {"sha": "47b158ad7792410d18675c9229d61058e57a7620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b158ad7792410d18675c9229d61058e57a7620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9ab954560915358afb0a04b1b79a6f50262ce3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ab954560915358afb0a04b1b79a6f50262ce3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ab954560915358afb0a04b1b79a6f50262ce3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ab954560915358afb0a04b1b79a6f50262ce3f/comments", "author": null, "committer": null, "parents": [{"sha": "4baed42f6d33e74c69063135c2be2e43642d91f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4baed42f6d33e74c69063135c2be2e43642d91f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4baed42f6d33e74c69063135c2be2e43642d91f4"}], "stats": {"total": 107, "additions": 0, "deletions": 107}, "files": [{"sha": "9fcb1017b5271257d163183414e26b21eab4dcc6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ab954560915358afb0a04b1b79a6f50262ce3f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ab954560915358afb0a04b1b79a6f50262ce3f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a9ab954560915358afb0a04b1b79a6f50262ce3f", "patch": "@@ -130,113 +130,6 @@ static char alt_reg_names[][8] =\n   \"%cr0\", \"%cr1\", \"%cr2\", \"%cr3\", \"%cr4\", \"%cr5\", \"%cr6\", \"%cr7\"\n };\n #endif\n-\n-\n-\f\n-/* Print the options used in the assembly file.  */\n-\n-extern char *version_string, *language_string;\n-\n-struct asm_option\n-{\n-  char *string;\n-  int *variable;\n-  int on_value;\n-};\n-\n-#define MAX_LINE 79\n-\n-static int\n-output_option (file, type, name, pos)\n-     FILE *file;\n-     char *type;\n-     char *name;\n-     int pos;\n-{\n-  int type_len = strlen (type);\n-  int name_len = strlen (name);\n-\n-  if (1 + type_len + name_len + pos > MAX_LINE)\n-    {\n-      fprintf (file, \"\\n # %s%s\", type, name);\n-      return 3 + type_len + name_len;\n-    }\n-  fprintf (file, \" %s%s\", type, name);\n-  return pos + 1 + type_len + name_len;\n-}\n-\n-static struct { char *name; int value; } m_options[] = TARGET_SWITCHES;\n-\n-void\n-output_options (file, f_options, f_len, W_options, W_len)\n-     FILE *file;\n-     struct asm_option *f_options;\n-     int f_len;\n-     struct asm_option *W_options;\n-     int W_len;\n-{\n-  int j;\n-  int flags = target_flags;\n-  int pos = 32767;\n-\n-  fprintf (file, \" # %s %s\", language_string, version_string);\n-\n-  if (optimize)\n-    {\n-      char opt_string[20];\n-      sprintf (opt_string, \"%d\", optimize);\n-      pos = output_option (file, \"-O\", opt_string, pos);\n-    }\n-\n-  if (profile_flag)\n-    pos = output_option (file, \"-p\", \"\", pos);\n-\n-  if (profile_block_flag)\n-    pos = output_option (file, \"-a\", \"\", pos);\n-\n-  if (inhibit_warnings)\n-    pos = output_option (file, \"-w\", \"\", pos);\n-\n-  for (j = 0; j < f_len; j++)\n-    {\n-      if (*f_options[j].variable == f_options[j].on_value)\n-\tpos = output_option (file, \"-f\", f_options[j].string, pos);\n-    }\n-\n-  for (j = 0; j < W_len; j++)\n-    {\n-      if (*W_options[j].variable == W_options[j].on_value)\n-\tpos = output_option (file, \"-W\", W_options[j].string, pos);\n-    }\n-\n-  for (j = 0; j < sizeof m_options / sizeof m_options[0]; j++)\n-    {\n-      if (m_options[j].name[0] != '\\0'\n-\t  && m_options[j].value > 0\n-\t  && ((m_options[j].value & flags) == m_options[j].value))\n-\t{\n-\t  pos = output_option (file, \"-m\", m_options[j].name, pos);\n-\t  flags &= ~ m_options[j].value;\n-\t}\n-    }\n-\n-  for (j = 0; j < sizeof (rs6000_select) / sizeof(rs6000_select[0]); j++)\n-    if (rs6000_select[j].string != (char *)0)\n-      pos = output_option (file, rs6000_select[j].name, rs6000_select[j].string, pos);\n-\n-#ifdef USING_SVR4_H\n-  switch (rs6000_sdata)\n-    {\n-    case SDATA_NONE: pos = output_option (file, \"-msdata=\", \"none\", pos); break;\n-    case SDATA_DATA: pos = output_option (file, \"-msdata=\", \"data\", pos); break;\n-    case SDATA_SYSV: pos = output_option (file, \"-msdata=\", \"sysv\", pos); break;\n-    case SDATA_EABI: pos = output_option (file, \"-msdata=\", \"eabi\", pos); break;\n-    }\n-#endif\n-\n-  fputs (\"\\n\\n\", file);\n-}\n-\n \f\n /* Override command line options.  Mostly we process the processor\n    type and sometimes adjust other TARGET_ options.  */"}]}