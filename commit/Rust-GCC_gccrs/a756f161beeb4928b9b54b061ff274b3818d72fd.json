{"sha": "a756f161beeb4928b9b54b061ff274b3818d72fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc1NmYxNjFiZWViNDkyOGI5YjU0YjA2MWZmMjc0YjM4MThkNzJmZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-08T12:37:49Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-08T12:37:49Z"}, "message": "Make ipa-pure-const more strict about summary constrains.\n\n2018-06-08  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-pure-const.c (propagate_pure_const): Use ::get at places\n        where we expect an existing summary.\n\nFrom-SVN: r261322", "tree": {"sha": "252f08bf0111d07cc8b6e5ccbbd7349dc57c046d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/252f08bf0111d07cc8b6e5ccbbd7349dc57c046d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a756f161beeb4928b9b54b061ff274b3818d72fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a756f161beeb4928b9b54b061ff274b3818d72fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a756f161beeb4928b9b54b061ff274b3818d72fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a756f161beeb4928b9b54b061ff274b3818d72fd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f86434f0a5be26766c093742b1239f281bc0e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f86434f0a5be26766c093742b1239f281bc0e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f86434f0a5be26766c093742b1239f281bc0e9a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "1023131422807911845aaea3265754b0c1b0b9bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a756f161beeb4928b9b54b061ff274b3818d72fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a756f161beeb4928b9b54b061ff274b3818d72fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a756f161beeb4928b9b54b061ff274b3818d72fd", "patch": "@@ -1,3 +1,8 @@\n+2018-06-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-pure-const.c (propagate_pure_const): Use ::get at places\n+        where we expect an existing summary.\n+\n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-inline-analysis.c (simple_edge_hints): Use ::get method."}, {"sha": "9441d2508ab7a8116bb7ded9e4887cd61894466e", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a756f161beeb4928b9b54b061ff274b3818d72fd/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a756f161beeb4928b9b54b061ff274b3818d72fd/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=a756f161beeb4928b9b54b061ff274b3818d72fd", "patch": "@@ -1477,7 +1477,7 @@ propagate_pure_const (void)\n \t\t}\n \t      if (avail > AVAIL_INTERPOSABLE)\n \t\t{\n-\t\t  funct_state y_l = funct_state_summaries->get_create (y);\n+\t\t  funct_state y_l = funct_state_summaries->get (y);\n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t    {\n \t\t      fprintf (dump_file,\n@@ -1591,7 +1591,7 @@ propagate_pure_const (void)\n       while (w && !can_free)\n \t{\n \t  struct cgraph_edge *e;\n-\t  funct_state w_l = funct_state_summaries->get_create (w);\n+\t  funct_state w_l = funct_state_summaries->get (w);\n \n \t  if (w_l->can_free\n \t      || w->get_availability () == AVAIL_INTERPOSABLE\n@@ -1606,7 +1606,7 @@ propagate_pure_const (void)\n \t\t\t\t\t\t\t\t  e->caller);\n \n \t      if (avail > AVAIL_INTERPOSABLE)\n-\t\tcan_free = funct_state_summaries->get_create (y)->can_free;\n+\t\tcan_free = funct_state_summaries->get (y)->can_free;\n \t      else\n \t\tcan_free = true;\n \t    }\n@@ -1619,7 +1619,7 @@ propagate_pure_const (void)\n       w = node;\n       while (w)\n \t{\n-\t  funct_state w_l = funct_state_summaries->get_create (w);\n+\t  funct_state w_l = funct_state_summaries->get (w);\n \t  enum pure_const_state_e this_state = pure_const_state;\n \t  bool this_looping = looping;\n "}]}