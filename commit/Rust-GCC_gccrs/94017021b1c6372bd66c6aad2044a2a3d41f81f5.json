{"sha": "94017021b1c6372bd66c6aad2044a2a3d41f81f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQwMTcwMjFiMWM2MzcyYmQ2NmM2YWFkMjA0NGEyYTNkNDFmODFmNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-22T08:53:01Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-22T08:53:01Z"}, "message": "init.c [sgi] (__gnat_error_handler): Update sigaction(2) citation.\n\n\t* init.c [sgi] (__gnat_error_handler): Update sigaction(2) citation.\n\tCorrect argument types.\n\tExtract code from reason.\n\t(__gnat_install_handler): Assign to act.sa_sigaction.\n\nFrom-SVN: r176619", "tree": {"sha": "b854f6cbb1172b38e2b25d9fb4be6d805135cecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b854f6cbb1172b38e2b25d9fb4be6d805135cecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94017021b1c6372bd66c6aad2044a2a3d41f81f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94017021b1c6372bd66c6aad2044a2a3d41f81f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94017021b1c6372bd66c6aad2044a2a3d41f81f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94017021b1c6372bd66c6aad2044a2a3d41f81f5/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e2fe4887e4a8c2947a1990b2fa3ba1fc70607a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2fe4887e4a8c2947a1990b2fa3ba1fc70607a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e2fe4887e4a8c2947a1990b2fa3ba1fc70607a3"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "27f416985720f80c48fc6181442253312cbd9e70", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94017021b1c6372bd66c6aad2044a2a3d41f81f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94017021b1c6372bd66c6aad2044a2a3d41f81f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=94017021b1c6372bd66c6aad2044a2a3d41f81f5", "patch": "@@ -1,3 +1,10 @@\n+2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* init.c [sgi] (__gnat_error_handler): Update sigaction(2) citation.\n+\tCorrect argument types.\n+\tExtract code from reason.\n+\t(__gnat_install_handler): Assign to act.sa_sigaction.\n+\n 2011-07-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Make-lang.in (GNAT1_ADA_OBJS): Move ada/b_gnat1.o to..."}, {"sha": "2dc4aa5f8ae10130af3d25b24ab9f8e1772b2206", "filename": "gcc/ada/init.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94017021b1c6372bd66c6aad2044a2a3d41f81f5/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94017021b1c6372bd66c6aad2044a2a3d41f81f5/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=94017021b1c6372bd66c6aad2044a2a3d41f81f5", "patch": "@@ -763,16 +763,31 @@ extern struct Exception_Data _abort_signal;\n    connecting that handler, with the effects described in the sigaction\n    man page:\n \n-          SA_SIGINFO [...]\n-          If cleared and the signal is caught, the first argument is\n-          also the signal number but the second argument is the signal\n-          code identifying the cause of the signal. The third argument\n-          points to a sigcontext_t structure containing the receiving\n-          process's context when the signal was delivered.  */\n+          SA_SIGINFO   If set and the signal is caught, sig is passed as the\n+                       first argument to the signal-catching function.  If the\n+                       second argument is not equal to NULL, it points to a\n+                       siginfo_t structure containing the reason why the\n+                       signal was generated [see siginfo(5)]; the third\n+                       argument points to a ucontext_t structure containing\n+                       the receiving process's context when the signal was\n+                       delivered [see ucontext(5)].  If cleared and the signal\n+                       is caught, the first argument is also the signal number\n+                       but the second argument is the signal code identifying\n+                       the cause of the signal. The third argument points to a\n+                       sigcontext_t structure containing the receiving\n+                       process's context when the signal was delivered. This\n+                       is the default behavior (see signal(5) for more\n+                       details).  Additionally, when SA_SIGINFO is set for a\n+                       signal, multiple occurrences of that signal will be\n+                       queued for delivery in FIFO order (see sigqueue(3) for\n+                       a more detailed explanation of this concept), if those\n+                       occurrences of that signal were generated using\n+                       sigqueue(3).  */\n \n static void\n-__gnat_error_handler (int sig, int code, sigcontext_t *sc ATTRIBUTE_UNUSED)\n+__gnat_error_handler (int sig, siginfo_t *reason, void *uc ATTRIBUTE_UNUSED)\n {\n+  int code = reason == NULL ? 0 : reason->si_code;\n   struct Exception_Data *exception;\n   const char *msg;\n \n@@ -859,7 +874,7 @@ __gnat_install_handler (void)\n      exceptions.  Make sure that the handler isn't interrupted by another\n      signal that might cause a scheduling event!  */\n \n-  act.sa_handler = __gnat_error_handler;\n+  act.sa_sigaction = __gnat_error_handler;\n   act.sa_flags = SA_NODEFER + SA_RESTART;\n   sigfillset (&act.sa_mask);\n   sigemptyset (&act.sa_mask);"}]}