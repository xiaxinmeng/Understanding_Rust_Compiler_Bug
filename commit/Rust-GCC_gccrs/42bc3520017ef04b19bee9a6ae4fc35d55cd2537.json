{"sha": "42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiYzM1MjAwMTdlZjA0YjE5YmVlOWE2YWU0ZmMzNWQ1NWNkMjUzNw==", "commit": {"author": {"name": "Mark Wielaard", "email": "mjw@redhat.com", "date": "2014-11-26T10:10:27Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2014-11-26T10:10:27Z"}, "message": "DWARF add DW_AT_noreturn on noreturn function subprogram.\n\nThis implements the DWARFv5 noreturn proposal:\nhttp://dwarfstd.org/ShowIssue.php?issue=140331.1\n\nTREE_THIS_VOLATILE on a FUNCTION_DECL node means the function does not\nreturn normally. This catches the traditional noreturn GNU attribute,\nthe C11 _Noreturn keyword and the C++11 [[noreturn]] attribute.\n\nThis relies on the DW_AT_noreturn constant defined in the DWARFv5 DRAFT:\nhttp://www.dwarfstd.org/doc/dwarf5.20141029.pdf\n\ngcc/ChangeLog\n\n\t* dwarf2out.c (gen_subprogram_die): Add DW_AT_noreturn when the\n\tfunction decl has TREE_THIS_VOLATILE.\n\ngcc/testsuite/ChangeLog\n\n\t* g++.dg/debug/dwarf2/noreturn-function.C: New test.\n\t* gcc.dg/debug/dwarf2/noreturn-function-attribute.c: Likewise.\n\t* gcc.dg/debug/dwarf2/noreturn-function-keyword.c: Likewise.\n\ninclude/ChangeLog\n\n\t* dwarf2.def (DW_AT_noreturn): New DWARF5 attribute.\n\nFrom-SVN: r218075", "tree": {"sha": "0da2d62552111f8cf417b00f86b89e8a9353c9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0da2d62552111f8cf417b00f86b89e8a9353c9cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/comments", "author": null, "committer": null, "parents": [{"sha": "7ec44c3d10c41dabcb64efc4b3225d5a1bb4d7f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec44c3d10c41dabcb64efc4b3225d5a1bb4d7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec44c3d10c41dabcb64efc4b3225d5a1bb4d7f9"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "e7845c7b51a1f88f911958f0d0b12062394228b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -1,3 +1,8 @@\n+2014-11-25  Mark Wielaard  <mjw@redhat.com>\n+\n+\t* dwarf2out.c (gen_subprogram_die): Add DW_AT_noreturn when the\n+\tfunction decl has TREE_THIS_VOLATILE.\n+\n 2014-11-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62238"}, {"sha": "25307d22d7b017a7f8ece71ac3bcb71a11f6bebb", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -18336,6 +18336,9 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n       if (DECL_ARTIFICIAL (decl))\n \tadd_AT_flag (subr_die, DW_AT_artificial, 1);\n \n+      if (TREE_THIS_VOLATILE (decl) && (dwarf_version >= 5 || !dwarf_strict))\n+\tadd_AT_flag (subr_die, DW_AT_noreturn, 1);\n+\n       add_accessibility_attribute (subr_die, decl);\n     }\n "}, {"sha": "429885c21bf2edb325474aacf159e5dbe3885c63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -1,3 +1,9 @@\n+2014-11-24  Mark Wielaard  <mjw@redhat.com>\n+\n+\t* g++.dg/debug/dwarf2/noreturn-function.C: New test.\n+\t* gcc.dg/debug/dwarf2/noreturn-function-attribute.c: Likewise.\n+\t* gcc.dg/debug/dwarf2/noreturn-function-keyword.c: Likewise.\n+\n 2014-11-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62238"}, {"sha": "73a0af49ca4d8d25c229c1b6cd1644a804096e2b", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/noreturn-function.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function.C?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+// { dg-options \"-O -std=c++11 -g -dA -gno-strict-dwarf\" }\n+// Expect DW_AT_noreturn once in .debug_info and once in .debug_abbrev\n+// { dg-final { scan-assembler-times \"DW_AT_noreturn\" 2 } }\n+\n+class Foo\n+{\n+  int i;\n+  void bar [[noreturn]] (int j);\n+};\n+\n+void\n+Foo::bar (int j)\n+{\n+  while (1) { ; }\n+}"}, {"sha": "7c8924a6ca5219bddff302063abe576dac53c3f0", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/noreturn-function-attribute.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-attribute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-attribute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-attribute.c?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile }\n+// { dg-options \"-O -std=c99 -g -dA -gno-strict-dwarf\" }\n+// Expect DW_AT_noreturn once in .debug_info and once in .debug_abbrev\n+// { dg-final { scan-assembler-times \"DW_AT_noreturn\" 2 } }\n+\n+void __attribute__ ((noreturn))\n+baz (void)\n+{\n+  while (1) { ; }\n+}\n+"}, {"sha": "ced96d19799430dd1c00dc85ab6acfa925440e1d", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/noreturn-function-keyword.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-keyword.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-keyword.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fnoreturn-function-keyword.c?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O -std=c11 -g -dA -gno-strict-dwarf\" }\n+// Expect DW_AT_noreturn once in .debug_info and once in .debug_abbrev\n+// { dg-final { scan-assembler-times \"DW_AT_noreturn\" 2 } }\n+\n+_Noreturn void exit (int);\n+\n+void exit (int i)\n+{\n+  while (i < 0 || i == 0 || i > 0)\n+    ;\n+}\n+"}, {"sha": "e73a9a89df6498c61ed0c99bfc3f9310c7cd3471", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -1,3 +1,7 @@\n+2014-11-25  Mark Wielaard  <mjw@redhat.com>\n+\n+\t* dwarf2.def (DW_AT_noreturn): New DWARF5 attribute.\n+\n 2014-11-14  Shinichiro Hamaji  <shinichiro.hamaji@gmail.com>\n \n \t* dwarf2.def (DW_AT_APPLE_optimized, DW_AT_APPLE_flags)"}, {"sha": "8533a3edbd588f2d7f9ef36c028c25b5f2133bb0", "filename": "include/dwarf2.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc3520017ef04b19bee9a6ae4fc35d55cd2537/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=42bc3520017ef04b19bee9a6ae4fc35d55cd2537", "patch": "@@ -308,6 +308,8 @@ DW_AT (DW_AT_data_bit_offset, 0x6b)\n DW_AT (DW_AT_const_expr, 0x6c)\n DW_AT (DW_AT_enum_class, 0x6d)\n DW_AT (DW_AT_linkage_name, 0x6e)\n+/* DWARF 5.  */\n+DW_AT (DW_AT_noreturn, 0x87)\n \n DW_AT_DUP (DW_AT_lo_user, 0x2000) /* Implementation-defined range start.  */\n DW_AT_DUP (DW_AT_hi_user, 0x3fff) /* Implementation-defined range end.  */"}]}