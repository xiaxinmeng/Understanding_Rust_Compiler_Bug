{"sha": "415f9ee404dc9e8ae1cade160a33400b10abb18a", "node_id": "C_kwDOANBUbNoAKDQxNWY5ZWU0MDRkYzllOGFlMWNhZGUxNjBhMzM0MDBiMTBhYmIxOGE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-25T16:30:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-25T16:34:31Z"}, "message": "path solver: Revert computation of ranges in gimple order.\n\nRevert the patch below, as it may slow down compilation with large CFGs.\n\n\tcommit 8acbd7bef6edbf537e3037174907029b530212f6\n\tAuthor: Aldy Hernandez <aldyh@redhat.com>\n\tDate:   Wed Nov 24 09:43:36 2021 +0100\n\n\t    path solver: Compute ranges in path in gimple order.\n\ngcc/ChangeLog:\n\n\t* gimple-range-path.cc (path_range_query::compute_ranges_defined): Remove.\n\t(path_range_query::compute_ranges_in_block): Revert to bitmap order.\n\t* gimple-range-path.h: Remove compute_ranges_defined.", "tree": {"sha": "b8fb9fa2e7d9408758281ae5770bbb951902fa08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8fb9fa2e7d9408758281ae5770bbb951902fa08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/415f9ee404dc9e8ae1cade160a33400b10abb18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415f9ee404dc9e8ae1cade160a33400b10abb18a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415f9ee404dc9e8ae1cade160a33400b10abb18a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415f9ee404dc9e8ae1cade160a33400b10abb18a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d50a5dd6344179eebaeb6fd2f895e59463cf74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d50a5dd6344179eebaeb6fd2f895e59463cf74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d50a5dd6344179eebaeb6fd2f895e59463cf74"}], "stats": {"total": 34, "additions": 11, "deletions": 23}, "files": [{"sha": "b9c71226c1c7ff2999f73d5bbc5b4edf07ba4fa8", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415f9ee404dc9e8ae1cade160a33400b10abb18a/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415f9ee404dc9e8ae1cade160a33400b10abb18a/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=415f9ee404dc9e8ae1cade160a33400b10abb18a", "patch": "@@ -401,27 +401,6 @@ path_range_query::compute_ranges_in_phis (basic_block bb)\n     }\n }\n \n-// Compute ranges defined in block.\n-\n-void\n-path_range_query::compute_ranges_defined (basic_block bb)\n-{\n-  int_range_max r;\n-\n-  compute_ranges_in_phis (bb);\n-\n-  // Iterate in gimple order to minimize recursion.\n-  for (auto gsi = gsi_start_nondebug_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-    if (gimple_has_lhs (gsi_stmt (gsi)))\n-      {\n-\ttree name = gimple_get_lhs (gsi_stmt (gsi));\n-\tif (TREE_CODE (name) == SSA_NAME\n-\t    && bitmap_bit_p (m_imports, SSA_NAME_VERSION (name))\n-\t    && range_defined_in_block (r, name, bb))\n-\t  set_cache (r, name);\n-      }\n-}\n-\n // Compute ranges defined in the current block, or exported to the\n // next block.\n \n@@ -444,7 +423,17 @@ path_range_query::compute_ranges_in_block (basic_block bb)\n \tclear_cache (name);\n     }\n \n-  compute_ranges_defined (bb);\n+  // Solve imports defined in this block, starting with the PHIs...\n+  compute_ranges_in_phis (bb);\n+  // ...and then the rest of the imports.\n+  EXECUTE_IF_SET_IN_BITMAP (m_imports, 0, i, bi)\n+    {\n+      tree name = ssa_name (i);\n+\n+      if (gimple_code (SSA_NAME_DEF_STMT (name)) != GIMPLE_PHI\n+\t  && range_defined_in_block (r, name, bb))\n+\tset_cache (r, name);\n+    }\n \n   if (at_exit ())\n     return;"}, {"sha": "57a9ae9bdcd86192d180abd3fd74583330cfe1dd", "filename": "gcc/gimple-range-path.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415f9ee404dc9e8ae1cade160a33400b10abb18a/gcc%2Fgimple-range-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415f9ee404dc9e8ae1cade160a33400b10abb18a/gcc%2Fgimple-range-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.h?ref=415f9ee404dc9e8ae1cade160a33400b10abb18a", "patch": "@@ -58,7 +58,6 @@ class path_range_query : public range_query\n   // Methods to compute ranges for the given path.\n   bool range_defined_in_block (irange &, tree name, basic_block bb);\n   void compute_ranges_in_block (basic_block bb);\n-  void compute_ranges_defined (basic_block bb);\n   void compute_ranges_in_phis (basic_block bb);\n   void adjust_for_non_null_uses (basic_block bb);\n   void ssa_range_in_phi (irange &r, gphi *phi);"}]}