{"sha": "be0959d2198f17fbc209f650257024e95b7814f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwOTU5ZDIxOThmMTdmYmMyMDlmNjUwMjU3MDI0ZTk1Yjc4MTRmMw==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2010-05-06T16:20:53Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-05-06T16:20:53Z"}, "message": "re PR target/42811 (java.lang.ExceptionInInitializerError in ecj1)\n\n\tPR target/42811\n\t* tests/staticrootstest.c: New test source file.\n\t* tests/staticrootslib.c: New test library source file.\n\t* Makefile.am (test_ldadd): New variable.\n\t(gctest_LDADD): Use it.\n\t(TESTS): Add leaktest, middletest and staticrootstest.\n\t(check_PROGRAMS): Likewise.\n\t(leaktest_SOURCES): New libtool variable definition.\n\t(leaktest_LDADD): Likewise.\n\t(leaktest_LDFLAGS): Likewise.\n\t(leaktest_LINK): Likewise.\n\t(middletest_SOURCES): Likewise.\n\t(middletest_LDADD): Likewise.\n\t(middletest_LDFLAGS): Likewise.\n\t(middletest_LINK): Likewise.\n\t(staticrootstest_SOURCES): Likewise.\n\t(staticrootstest_LDADD): Likewise.\n\t(staticrootstest_LDFLAGS): Likewise.\n\t(staticrootstest_LINK): Likewise.\n\t(check_LTLIBRARIES): Likewise.\n\t(libstaticrootslib_la_SOURCES): Likewise.\n\t(libstaticrootslib_la_LIBADD): Likewise.\n\t(libstaticrootslib_la_LDFLAGS): Likewise.\n\t(libstaticrootslib_la_DEPENDENCIES): Likewise.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r159115", "tree": {"sha": "91f7bcbe088102bbf76a8dbb8798ec9902aae6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91f7bcbe088102bbf76a8dbb8798ec9902aae6fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be0959d2198f17fbc209f650257024e95b7814f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0959d2198f17fbc209f650257024e95b7814f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0959d2198f17fbc209f650257024e95b7814f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0959d2198f17fbc209f650257024e95b7814f3/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1017e3e654a23d624ca6e4cb23ad98220ee59e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1017e3e654a23d624ca6e4cb23ad98220ee59e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1017e3e654a23d624ca6e4cb23ad98220ee59e71"}], "stats": {"total": 236, "additions": 221, "deletions": 15}, "files": [{"sha": "25266c87088a2ee53434789a53c09febb4a2d38c", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=be0959d2198f17fbc209f650257024e95b7814f3", "patch": "@@ -1,3 +1,31 @@\n+2010-05-06  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\tPR target/42811\n+\t* tests/staticrootstest.c: New test source file.\n+\t* tests/staticrootslib.c: New test library source file.\n+\t* Makefile.am (test_ldadd): New variable.\n+\t(gctest_LDADD): Use it.\n+\t(TESTS): Add leaktest, middletest and staticrootstest.\n+\t(check_PROGRAMS): Likewise.\n+\t(leaktest_SOURCES): New libtool variable definition.\n+\t(leaktest_LDADD): Likewise.\n+\t(leaktest_LDFLAGS): Likewise.\n+\t(leaktest_LINK): Likewise.\n+\t(middletest_SOURCES): Likewise.\n+\t(middletest_LDADD): Likewise.\n+\t(middletest_LDFLAGS): Likewise.\n+\t(middletest_LINK): Likewise.\n+\t(staticrootstest_SOURCES): Likewise.\n+\t(staticrootstest_LDADD): Likewise.\n+\t(staticrootstest_LDFLAGS): Likewise.\n+\t(staticrootstest_LINK): Likewise.\n+\t(check_LTLIBRARIES): Likewise.\n+\t(libstaticrootslib_la_SOURCES): Likewise.\n+\t(libstaticrootslib_la_LIBADD): Likewise.\n+\t(libstaticrootslib_la_LDFLAGS): Likewise.\n+\t(libstaticrootslib_la_DEPENDENCIES): Likewise.\n+\t* Makefile.in: Regenerate.\n+\n 2010-04-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in: Regenerate."}, {"sha": "df8de1e9e521c3edc6a95a18cbb096aca8169136", "filename": "boehm-gc/Makefile.am", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.am?ref=be0959d2198f17fbc209f650257024e95b7814f3", "patch": "@@ -48,14 +48,43 @@ libgcjgc_convenience_la_DEPENDENCIES = @addobjs@\n AM_CXXFLAGS = @GC_CFLAGS@\n AM_CFLAGS = @GC_CFLAGS@\n \n+test_ldadd = libgcjgc.la $(THREADLIBS) $(UNWINDLIBS) $(EXTRA_TEST_LIBS)\n+\n check_PROGRAMS = gctest\n gctest_SOURCES = tests/test.c\n-gctest_LDADD = libgcjgc.la $(THREADLIBS) $(UNWINDLIBS) $(EXTRA_TEST_LIBS)\n+gctest_LDADD = $(test_ldadd)\n gctest_LDFLAGS = -shared-libgcc\n gctest_LINK = $(LINK) $(gctest_LDFLAGS)\n TESTS_ENVIRONMENT = LD_LIBRARY_PATH=../../$(MULTIBUILDTOP)gcc\n TESTS = gctest\n \n+TESTS += leaktest$(EXEEXT)\n+check_PROGRAMS += leaktest\n+leaktest_SOURCES = tests/leak_test.c\n+leaktest_LDADD = $(test_ldadd)\n+leaktest_LDFLAGS = -shared-libgcc\n+leaktest_LINK = $(LINK) $(leaktest_LDFLAGS)\n+\n+TESTS += middletest$(EXEEXT)\n+check_PROGRAMS += middletest\n+middletest_SOURCES = tests/middle.c\n+middletest_LDADD = $(test_ldadd)\n+middletest_LDFLAGS = -shared-libgcc\n+middletest_LINK = $(LINK) $(middletest_LDFLAGS)\n+\n+TESTS += staticrootstest$(EXEEXT)\n+check_PROGRAMS += staticrootstest\n+staticrootstest_SOURCES = tests/staticrootstest.c\n+staticrootstest_LDADD = $(test_ldadd) libstaticrootslib.la\n+staticrootstest_LDFLAGS = -shared-libgcc\n+staticrootstest_LINK = $(LINK) $(staticrootstest_LDFLAGS)\n+check_LTLIBRARIES = libstaticrootslib.la\n+libstaticrootslib_la_SOURCES = tests/staticrootslib.c\n+libstaticrootslib_la_LIBADD = libgcjgc_convenience.la\n+libstaticrootslib_la_LDFLAGS = -version-info 1:2:0 -no-undefined \\\n+\t\t\t\t-rpath /nowhere -shared-libgcc\n+libstaticrootslib_la_DEPENDENCIES = libgcjgc_convenience.la\n+\n ## FIXME: we shouldn't have to do this, but automake forces us to.\n .s.lo:\n ## We use -Wp,-P to strip #line directives.  Irix `as' chokes on"}, {"sha": "051f6ce0cde4dea6736093811d128265bd693d3c", "filename": "boehm-gc/Makefile.in", "status": "modified", "additions": 84, "deletions": 14, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.in?ref=be0959d2198f17fbc209f650257024e95b7814f3", "patch": "@@ -35,8 +35,10 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-check_PROGRAMS = gctest$(EXEEXT)\n-TESTS = gctest$(EXEEXT)\n+check_PROGRAMS = gctest$(EXEEXT) leaktest$(EXEEXT) middletest$(EXEEXT) \\\n+\tstaticrootstest$(EXEEXT)\n+TESTS = gctest$(EXEEXT) leaktest$(EXEEXT) middletest$(EXEEXT) \\\n+\tstaticrootstest$(EXEEXT)\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -81,10 +83,26 @@ am_libgcjgc_convenience_la_OBJECTS = $(am__objects_2)\n libgcjgc_convenience_la_OBJECTS =  \\\n \t$(am_libgcjgc_convenience_la_OBJECTS)\n am__dirstamp = $(am__leading_dot)dirstamp\n+am_libstaticrootslib_la_OBJECTS = tests/staticrootslib.lo\n+libstaticrootslib_la_OBJECTS = $(am_libstaticrootslib_la_OBJECTS)\n+libstaticrootslib_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libstaticrootslib_la_LDFLAGS) $(LDFLAGS) -o $@\n am_gctest_OBJECTS = tests/test.$(OBJEXT)\n gctest_OBJECTS = $(am_gctest_OBJECTS)\n-gctest_DEPENDENCIES = libgcjgc.la $(am__DEPENDENCIES_1) \\\n+am__DEPENDENCIES_2 = libgcjgc.la $(am__DEPENDENCIES_1) \\\n \t$(am__DEPENDENCIES_1)\n+gctest_DEPENDENCIES = $(am__DEPENDENCIES_2)\n+am_leaktest_OBJECTS = tests/leak_test.$(OBJEXT)\n+leaktest_OBJECTS = $(am_leaktest_OBJECTS)\n+leaktest_DEPENDENCIES = $(am__DEPENDENCIES_2)\n+am_middletest_OBJECTS = tests/middle.$(OBJEXT)\n+middletest_OBJECTS = $(am_middletest_OBJECTS)\n+middletest_DEPENDENCIES = $(am__DEPENDENCIES_2)\n+am_staticrootstest_OBJECTS = tests/staticrootstest.$(OBJEXT)\n+staticrootstest_OBJECTS = $(am_staticrootstest_OBJECTS)\n+staticrootstest_DEPENDENCIES = $(am__DEPENDENCIES_2) \\\n+\tlibstaticrootslib.la\n DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include\n depcomp =\n am__depfiles_maybe =\n@@ -95,7 +113,9 @@ CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)\n LTCCASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)\n SOURCES = $(libgcjgc_la_SOURCES) $(libgcjgc_convenience_la_SOURCES) \\\n-\t$(gctest_SOURCES)\n+\t$(libstaticrootslib_la_SOURCES) $(gctest_SOURCES) \\\n+\t$(leaktest_SOURCES) $(middletest_SOURCES) \\\n+\t$(staticrootstest_SOURCES)\n MULTISRCTOP = \n MULTIBUILDTOP = \n MULTIDIRS = \n@@ -289,11 +309,31 @@ libgcjgc_convenience_la_LIBADD = @addobjs@\n libgcjgc_convenience_la_DEPENDENCIES = @addobjs@\n AM_CXXFLAGS = @GC_CFLAGS@\n AM_CFLAGS = @GC_CFLAGS@\n+test_ldadd = libgcjgc.la $(THREADLIBS) $(UNWINDLIBS) $(EXTRA_TEST_LIBS)\n gctest_SOURCES = tests/test.c\n-gctest_LDADD = libgcjgc.la $(THREADLIBS) $(UNWINDLIBS) $(EXTRA_TEST_LIBS)\n+gctest_LDADD = $(test_ldadd)\n gctest_LDFLAGS = -shared-libgcc\n gctest_LINK = $(LINK) $(gctest_LDFLAGS)\n TESTS_ENVIRONMENT = LD_LIBRARY_PATH=../../$(MULTIBUILDTOP)gcc\n+leaktest_SOURCES = tests/leak_test.c\n+leaktest_LDADD = $(test_ldadd)\n+leaktest_LDFLAGS = -shared-libgcc\n+leaktest_LINK = $(LINK) $(leaktest_LDFLAGS)\n+middletest_SOURCES = tests/middle.c\n+middletest_LDADD = $(test_ldadd)\n+middletest_LDFLAGS = -shared-libgcc\n+middletest_LINK = $(LINK) $(middletest_LDFLAGS)\n+staticrootstest_SOURCES = tests/staticrootstest.c\n+staticrootstest_LDADD = $(test_ldadd) libstaticrootslib.la\n+staticrootstest_LDFLAGS = -shared-libgcc\n+staticrootstest_LINK = $(LINK) $(staticrootstest_LDFLAGS)\n+check_LTLIBRARIES = libstaticrootslib.la\n+libstaticrootslib_la_SOURCES = tests/staticrootslib.c\n+libstaticrootslib_la_LIBADD = libgcjgc_convenience.la\n+libstaticrootslib_la_LDFLAGS = -version-info 1:2:0 -no-undefined \\\n+\t\t\t\t-rpath /nowhere -shared-libgcc\n+\n+libstaticrootslib_la_DEPENDENCIES = libgcjgc_convenience.la\n LTCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n \t$(CC) $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CFLAGS) $(MY_CFLAGS) $(GC_CFLAGS) \n@@ -387,6 +427,15 @@ $(am__aclocal_m4_deps):\n threads.mk: $(top_builddir)/config.status $(srcdir)/threads.mk.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n \n+clean-checkLTLIBRARIES:\n+\t-test -z \"$(check_LTLIBRARIES)\" || rm -f $(check_LTLIBRARIES)\n+\t@list='$(check_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+\n clean-noinstLTLIBRARIES:\n \t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n \t@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \\\n@@ -399,6 +448,12 @@ libgcjgc.la: $(libgcjgc_la_OBJECTS) $(libgcjgc_la_DEPENDENCIES)\n \t$(libgcjgc_la_LINK)  $(libgcjgc_la_OBJECTS) $(libgcjgc_la_LIBADD) $(LIBS)\n libgcjgc_convenience.la: $(libgcjgc_convenience_la_OBJECTS) $(libgcjgc_convenience_la_DEPENDENCIES) \n \t$(LINK)  $(libgcjgc_convenience_la_OBJECTS) $(libgcjgc_convenience_la_LIBADD) $(LIBS)\n+tests/$(am__dirstamp):\n+\t@$(MKDIR_P) tests\n+\t@: > tests/$(am__dirstamp)\n+tests/staticrootslib.lo: tests/$(am__dirstamp)\n+libstaticrootslib.la: $(libstaticrootslib_la_OBJECTS) $(libstaticrootslib_la_DEPENDENCIES) \n+\t$(libstaticrootslib_la_LINK)  $(libstaticrootslib_la_OBJECTS) $(libstaticrootslib_la_LIBADD) $(LIBS)\n \n clean-checkPROGRAMS:\n \t@list='$(check_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n@@ -408,16 +463,30 @@ clean-checkPROGRAMS:\n \tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n \techo \" rm -f\" $$list; \\\n \trm -f $$list\n-tests/$(am__dirstamp):\n-\t@$(MKDIR_P) tests\n-\t@: > tests/$(am__dirstamp)\n tests/test.$(OBJEXT): tests/$(am__dirstamp)\n gctest$(EXEEXT): $(gctest_OBJECTS) $(gctest_DEPENDENCIES) \n \t@rm -f gctest$(EXEEXT)\n \t$(gctest_LINK) $(gctest_OBJECTS) $(gctest_LDADD) $(LIBS)\n+tests/leak_test.$(OBJEXT): tests/$(am__dirstamp)\n+leaktest$(EXEEXT): $(leaktest_OBJECTS) $(leaktest_DEPENDENCIES) \n+\t@rm -f leaktest$(EXEEXT)\n+\t$(leaktest_LINK) $(leaktest_OBJECTS) $(leaktest_LDADD) $(LIBS)\n+tests/middle.$(OBJEXT): tests/$(am__dirstamp)\n+middletest$(EXEEXT): $(middletest_OBJECTS) $(middletest_DEPENDENCIES) \n+\t@rm -f middletest$(EXEEXT)\n+\t$(middletest_LINK) $(middletest_OBJECTS) $(middletest_LDADD) $(LIBS)\n+tests/staticrootstest.$(OBJEXT): tests/$(am__dirstamp)\n+staticrootstest$(EXEEXT): $(staticrootstest_OBJECTS) $(staticrootstest_DEPENDENCIES) \n+\t@rm -f staticrootstest$(EXEEXT)\n+\t$(staticrootstest_LINK) $(staticrootstest_OBJECTS) $(staticrootstest_LDADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n+\t-rm -f tests/leak_test.$(OBJEXT)\n+\t-rm -f tests/middle.$(OBJEXT)\n+\t-rm -f tests/staticrootslib.$(OBJEXT)\n+\t-rm -f tests/staticrootslib.lo\n+\t-rm -f tests/staticrootstest.$(OBJEXT)\n \t-rm -f tests/test.$(OBJEXT)\n \n distclean-compile:\n@@ -443,6 +512,7 @@ mostlyclean-libtool:\n \n clean-libtool:\n \t-rm -rf .libs _libs\n+\t-rm -rf tests/.libs tests/_libs\n \n distclean-libtool:\n \t-rm -f libtool config.lt\n@@ -690,7 +760,7 @@ check-TESTS: $(TESTS)\n \t  echo \"$$dashes$$std\"; \\\n \t  test \"$$failed\" -eq 0; \\\n \telse :; fi\n-check-am: $(check_PROGRAMS)\n+check-am: $(check_LTLIBRARIES) $(check_PROGRAMS)\n \t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\n check: check-recursive\n all-am: Makefile $(LTLIBRARIES) all-multi\n@@ -724,8 +794,8 @@ maintainer-clean-generic:\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n clean: clean-multi clean-recursive\n \n-clean-am: clean-checkPROGRAMS clean-generic clean-libtool \\\n-\tclean-noinstLTLIBRARIES mostlyclean-am\n+clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \\\n+\tclean-libtool clean-noinstLTLIBRARIES mostlyclean-am\n \n distclean: distclean-multi distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n@@ -801,9 +871,9 @@ uninstall-am:\n \n .PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \\\n \tall all-am all-multi am--refresh check check-TESTS check-am \\\n-\tclean clean-checkPROGRAMS clean-generic clean-libtool \\\n-\tclean-multi clean-noinstLTLIBRARIES ctags ctags-recursive \\\n-\tdistclean distclean-compile distclean-generic \\\n+\tclean clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \\\n+\tclean-libtool clean-multi clean-noinstLTLIBRARIES ctags \\\n+\tctags-recursive distclean distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-multi distclean-tags dvi dvi-am \\\n \thtml html-am info info-am install install-am install-data \\\n \tinstall-data-am install-dvi install-dvi-am install-exec \\"}, {"sha": "6e13278a6c0858382938ad9d5a54f63e93647b96", "filename": "boehm-gc/tests/staticrootslib.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2Ftests%2Fstaticrootslib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2Ftests%2Fstaticrootslib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Ftests%2Fstaticrootslib.c?ref=be0959d2198f17fbc209f650257024e95b7814f3", "patch": "@@ -0,0 +1,33 @@\n+#include <stdio.h>\n+\n+#ifndef GC_DEBUG\n+# define GC_DEBUG\n+#endif\n+\n+#include \"gc.h\"\n+\n+struct treenode {\n+    struct treenode *x;\n+    struct treenode *y;\n+} * root[10];\n+\n+struct treenode * libsrl_mktree(int i)\n+{\n+  struct treenode * r = GC_MALLOC(sizeof(struct treenode));\n+  if (0 == i) return 0;\n+  if (1 == i) r = GC_MALLOC_ATOMIC(sizeof(struct treenode));\n+  r -> x = libsrl_mktree(i-1);\n+  r -> y = libsrl_mktree(i-1);\n+  return r;\n+}\n+\n+void * libsrl_init(void)\n+{\n+  GC_INIT();\n+  return GC_MALLOC(sizeof(struct treenode));\n+}\n+\n+void * libsrl_collect (void)\n+{\n+  GC_gcollect();\n+}"}, {"sha": "68ff9eaea1e31359075a422a83a4e599879f9436", "filename": "boehm-gc/tests/staticrootstest.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2Ftests%2Fstaticrootstest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0959d2198f17fbc209f650257024e95b7814f3/boehm-gc%2Ftests%2Fstaticrootstest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Ftests%2Fstaticrootstest.c?ref=be0959d2198f17fbc209f650257024e95b7814f3", "patch": "@@ -0,0 +1,46 @@\n+#include <stdio.h>\n+\n+#ifndef GC_DEBUG\n+# define GC_DEBUG\n+#endif\n+\n+#include \"gc.h\"\n+#include \"gc_backptr.h\"\n+\n+struct treenode {\n+    struct treenode *x;\n+    struct treenode *y;\n+} * root[10];\n+\n+static char *staticroot = 0;\n+\n+extern struct treenode * libsrl_mktree(int i);\n+extern void * libsrl_init(void);\n+extern void * libsrl_collect (void);\n+\n+int main(void)\n+{\n+  int i;\n+  staticroot = libsrl_init();\n+  for (i = 0; i < sizeof(struct treenode); ++i) {\n+    staticroot[i] = 0x42;\n+  }\n+  libsrl_collect();\n+  for (i = 0; i < 10; ++i) {\n+    root[i] = libsrl_mktree(12);\n+    libsrl_collect();\n+  }\n+  for (i = 0; i < sizeof(struct treenode); ++i) {\n+    if (staticroot[i] != 0x42)\n+      return -1;\n+  }\n+  for (i = 0; i < 10; ++i) {\n+    root[i] = libsrl_mktree(12);\n+    libsrl_collect();\n+  }\n+  for (i = 0; i < sizeof(struct treenode); ++i) {\n+    if (staticroot[i] != 0x42)\n+      return -1;\n+  }\n+  return 0;\n+}"}]}