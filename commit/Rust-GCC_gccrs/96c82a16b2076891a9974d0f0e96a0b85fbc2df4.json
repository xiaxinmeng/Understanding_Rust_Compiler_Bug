{"sha": "96c82a16b2076891a9974d0f0e96a0b85fbc2df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjODJhMTZiMjA3Njg5MWE5OTc0ZDBmMGU5NmEwYjg1ZmJjMmRmNA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2021-07-24T10:53:39Z"}, "committer": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2021-08-04T14:18:07Z"}, "message": "Fix debug info for ignored decls at start of assembly\n\nIgnored functions decls that are compiled at the start of\nthe assembly have bogus line numbers until the first .file\ndirective, as reported in PR101575.\n\nThe corresponding binutils bug report is\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=28149\n\nThe work around for this issue is to emit a dummy .file\ndirective before the first function is compiled, unless\nanother .file directive was already emitted previously.\n\n2021-08-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\tPR ada/101575\n\t* dwarf2out.c (dwarf2out_assembly_start): Emit a dummy\n\t.file statement when needed.", "tree": {"sha": "a99f13d6210d676eee99b0c461eb1f3c3c424f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99f13d6210d676eee99b0c461eb1f3c3c424f9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96c82a16b2076891a9974d0f0e96a0b85fbc2df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c82a16b2076891a9974d0f0e96a0b85fbc2df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c82a16b2076891a9974d0f0e96a0b85fbc2df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c82a16b2076891a9974d0f0e96a0b85fbc2df4/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fcb8ec60302f5f110f94a885b618993c28d18d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcb8ec60302f5f110f94a885b618993c28d18d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fcb8ec60302f5f110f94a885b618993c28d18d3"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "b91a9b5abaac7bb6fbfea82572c7c0a1cf08f5fd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c82a16b2076891a9974d0f0e96a0b85fbc2df4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c82a16b2076891a9974d0f0e96a0b85fbc2df4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=96c82a16b2076891a9974d0f0e96a0b85fbc2df4", "patch": "@@ -29389,7 +29389,18 @@ dwarf2out_assembly_start (void)\n       output_quoted_string (asm_out_file, remap_debug_filename (filename0));\n       fputc ('\\n', asm_out_file);\n     }\n+  else\n #endif\n+  /* Work around for PR101575: output a dummy .file directive.  */\n+  if (!last_emitted_file && dwarf_debuginfo_p ()\n+      && debug_info_level >= DINFO_LEVEL_TERSE)\n+    {\n+      const char *filename0 = get_AT_string (comp_unit_die (), DW_AT_name);\n+\n+      if (filename0 == NULL)\n+\tfilename0 = \"<dummy>\";\n+      maybe_emit_file (lookup_filename (filename0));\n+    }\n }\n \n /* A helper function for dwarf2out_finish called through"}]}