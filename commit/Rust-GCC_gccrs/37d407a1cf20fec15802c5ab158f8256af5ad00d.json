{"sha": "37d407a1cf20fec15802c5ab158f8256af5ad00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdkNDA3YTFjZjIwZmVjMTU4MDJjNWFiMTU4ZjgyNTZhZjVhZDAwZA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-09-25T12:51:39Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-09-25T12:51:39Z"}, "message": "re PR c++/5655 (Member redeclared within its class definition with a different access specifier is not rejected)\n\n\tPR c++/5655\n\t* parser.c (cp_parser_check_access_in_redeclaration): New function.\n\t(cp_parser_member_declaration): Use it.\n\t(cp_parser_template_declaration_after_export): Likewise.\n\n\t* g++.dg/parse/access7.C: New test.\n\t* g++.old-deja/g++.brendan/crash56.C: Fix redeclaration error.\n\nFrom-SVN: r71771", "tree": {"sha": "eeb88d8904352bcbcb7ee3020991aae5e30f5096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeb88d8904352bcbcb7ee3020991aae5e30f5096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37d407a1cf20fec15802c5ab158f8256af5ad00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d407a1cf20fec15802c5ab158f8256af5ad00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d407a1cf20fec15802c5ab158f8256af5ad00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d407a1cf20fec15802c5ab158f8256af5ad00d/comments", "author": null, "committer": null, "parents": [{"sha": "21e69789dd50e5a8161025a3d15dc79f791f6812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e69789dd50e5a8161025a3d15dc79f791f6812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e69789dd50e5a8161025a3d15dc79f791f6812"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "dcf2f665b63a00f6366ed26097564cea5de05c16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=37d407a1cf20fec15802c5ab158f8256af5ad00d", "patch": "@@ -1,3 +1,10 @@\n+2003-09-25  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/5655\n+\t* parser.c (cp_parser_check_access_in_redeclaration): New function.\n+\t(cp_parser_member_declaration): Use it.\n+\t(cp_parser_template_declaration_after_export): Likewise.\n+\n 2003-09-22  Gabriel Dos Reis  <gcc@integrable-solutions.net>\n \n \t* cp-tree.h (scope_kind): Add new enumerator.\n@@ -706,7 +713,7 @@\n \t(do_friend): Adjust add_friend call.\n \t* decl.c (grokdeclarator): Adjust make_friend_class call.\n \t* parser.c (cp_parser_member_declaration): Likewise.\n-\t(cp_parser_template_declaration_after_exp): Likewise.\n+\t(cp_parser_template_declaration_after_export): Likewise.\n \t* pt.c (instantiate_class_template): Adjust make_friend_class\n \tand add_friend call.\n \t* cp-tree.h (make_friend_class): Adjust declaration."}, {"sha": "776429096a8b476701dbf7c0c6108fdcfa8c850c", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=37d407a1cf20fec15802c5ab158f8256af5ad00d", "patch": "@@ -1651,6 +1651,8 @@ static enum tag_types cp_parser_token_is_class_key\n   (cp_token *);\n static void cp_parser_check_class_key\n   (enum tag_types, tree type);\n+static void cp_parser_check_access_in_redeclaration\n+  (tree type);\n static bool cp_parser_optional_template_keyword\n   (cp_parser *);\n static void cp_parser_pre_parsed_nested_name_specifier \n@@ -11870,6 +11872,8 @@ cp_parser_member_declaration (cp_parser* parser)\n \t      /* Add it to the class.  */\n \t      finish_member_declaration (decl);\n \t    }\n+\t  else\n+\t    cp_parser_check_access_in_redeclaration (TYPE_NAME (type));\n \t}\n     }\n   else\n@@ -13657,7 +13661,12 @@ cp_parser_template_declaration_after_export (cp_parser* parser, bool member_p)\n       /* If this is a member template declaration, let the front\n \t end know.  */\n       if (member_p && !friend_p && decl)\n-\tdecl = finish_member_template_decl (decl);\n+\t{\n+\t  if (TREE_CODE (decl) == TYPE_DECL)\n+\t    cp_parser_check_access_in_redeclaration (decl);\n+\n+\t  decl = finish_member_template_decl (decl);\n+\t}\n       else if (friend_p && decl && TREE_CODE (decl) == TYPE_DECL)\n \tmake_friend_class (current_class_type, TREE_TYPE (decl),\n \t\t\t   /*complain=*/true);\n@@ -14265,6 +14274,23 @@ cp_parser_check_class_key (enum tag_types class_key, tree type)\n \t     type);\n }\n \t\t\t   \n+/* Issue an error message if DECL is redeclared with differnt\n+   access than its original declaration [class.access.spec/3].\n+   This applies to nested classes and nested class templates.\n+   [class.mem/1].  */\n+\n+static void cp_parser_check_access_in_redeclaration (tree decl)\n+{\n+  if (!CLASS_TYPE_P (TREE_TYPE (decl)))\n+    return;\n+\n+  if ((TREE_PRIVATE (decl)\n+       != (current_access_specifier == access_private_node))\n+      || (TREE_PROTECTED (decl)\n+\t  != (current_access_specifier == access_protected_node)))\n+    error (\"%D redeclared with different access\", decl);\n+}\n+\n /* Look for the `template' keyword, as a syntactic disambiguator.\n    Return TRUE iff it is present, in which case it will be \n    consumed.  */"}, {"sha": "d9600501bfaf2ba85250ff4bfbd8a438d85ea700", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37d407a1cf20fec15802c5ab158f8256af5ad00d", "patch": "@@ -1,3 +1,9 @@\n+2003-09-25  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/5655\n+\t* g++.dg/parse/access7.C: New test.\n+\t* g++.old-deja/g++.brendan/crash56.C: Fix redeclaration error.\n+\n 2003-09-24  Ziemowit Laski  <zlaski@apple.com>\n \n \tMERGE OF objc-improvements-branch into MAINLINE:"}, {"sha": "2a7ca3c42acb19415ca665f6b4ec2e4809eb9260", "filename": "gcc/testsuite/g++.dg/parse/access7.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess7.C?ref=37d407a1cf20fec15802c5ab158f8256af5ad00d", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+\n+// Origin: Paolo Carlini <pcarlini@unitus.it>\n+\n+// PR c++/5655: Access of member redeclaration.\n+\n+struct S {\n+ class A;\n+ template <class T> class B;\n+private:\n+ class A {};\t\t\t// { dg-error \"different access\" }\n+ template <class T> class B {};\t// { dg-error \"different access\" }\n+};"}, {"sha": "243a2b620fea3e0937bd75eeb3267a12a27f3738", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash56.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d407a1cf20fec15802c5ab158f8256af5ad00d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C?ref=37d407a1cf20fec15802c5ab158f8256af5ad00d", "patch": "@@ -5,6 +5,8 @@\n const bool FALSE = 0;\n const bool TRUE = 1;\n class ListDProto {\n+protected:\n+    class link;\n public:\n     ListDProto();\n     ListDProto(const ListDProto&);\n@@ -15,7 +17,6 @@ public:\n     void clear();\n     void remove_head();\n     void remove_tail();\n-    class link;\n     class Vix {\n     public:\n \tVix();"}]}