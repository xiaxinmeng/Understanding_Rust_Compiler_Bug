{"sha": "0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg3NmFjMDhhZDI4NGZmM2QyNzk3ZTVkZTNkNDRiMDdiZmFjMzJmZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-18T19:23:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-18T19:23:53Z"}, "message": "stmt.c (mark_case_node): New function.\n\n\t* stmt.c (mark_case_node): New function.\n\t(mark_case_nesting): Call it.\n\nFrom-SVN: r33231", "tree": {"sha": "c6d775da1a4e916270067878e579c20b316426ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6d775da1a4e916270067878e579c20b316426ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0876ac08ad284ff3d2797e5de3d44b07bfac32fd/comments", "author": null, "committer": null, "parents": [{"sha": "6912b84bf1a10c6bc8c9c337153189a44bdce35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6912b84bf1a10c6bc8c9c337153189a44bdce35f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6912b84bf1a10c6bc8c9c337153189a44bdce35f"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "b1f0c335cb7314fe10526b580b035abec46280a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0876ac08ad284ff3d2797e5de3d44b07bfac32fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0876ac08ad284ff3d2797e5de3d44b07bfac32fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "patch": "@@ -1,5 +1,8 @@\n Tue Apr 18 14:16:47 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* stmt.c (mark_case_node): New function.\n+\t(mark_case_nesting): Call it.\n+\n \t* expmed.c (emit_store_flag): If comparing two-word integer\n \twith zero, can optimize NE, EQ, GE, and LT.\n "}, {"sha": "5bad3397eb2234aec5424727823f43741fb68b91", "filename": "gcc/stmt.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0876ac08ad284ff3d2797e5de3d44b07bfac32fd/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0876ac08ad284ff3d2797e5de3d44b07bfac32fd/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=0876ac08ad284ff3d2797e5de3d44b07bfac32fd", "patch": "@@ -430,6 +430,7 @@ static void mark_cond_nesting           PARAMS ((struct nesting *));\n static void mark_loop_nesting           PARAMS ((struct nesting *));\n static void mark_block_nesting          PARAMS ((struct nesting *));\n static void mark_case_nesting           PARAMS ((struct nesting *));\n+static void mark_case_node\t\tPARAMS ((struct case_node *));\n static void mark_goto_fixup             PARAMS ((struct goto_fixup *));\n \n \f\n@@ -509,28 +510,35 @@ mark_case_nesting (n)\n {\n   while (n)\n     {\n-      struct case_node *node;\n-\n       ggc_mark_rtx (n->exit_label);\n       ggc_mark_rtx (n->data.case_stmt.start);\n \n-      node = n->data.case_stmt.case_list;\n-      while (node)\n-\t{\n-\t  ggc_mark_tree (node->low);\n-\t  ggc_mark_tree (node->high);\n-\t  ggc_mark_tree (node->code_label);\n-\t  node = node->right;\n-\t}\n-\n       ggc_mark_tree (n->data.case_stmt.default_label);\n       ggc_mark_tree (n->data.case_stmt.index_expr);\n       ggc_mark_tree (n->data.case_stmt.nominal_type);\n \n+      mark_case_node (n->data.case_stmt.case_list);\n       n = n->next;\n     }\n }\n \n+/* Mark C for GC.  */\n+\n+static void\n+mark_case_node (c)\n+     struct case_node *c;\n+{\n+  if (c != 0)\n+    {\n+      ggc_mark_tree (c->low);\n+      ggc_mark_tree (c->high);\n+      ggc_mark_tree (c->code_label);\n+\n+      mark_case_node (c->right);\n+      mark_case_node (c->left);\n+    }\n+}\n+\n /* Mark G for GC.  */\n \n static void"}]}