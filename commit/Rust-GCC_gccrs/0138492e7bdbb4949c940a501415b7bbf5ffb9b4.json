{"sha": "0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEzODQ5MmU3YmRiYjQ5NDljOTQwYTUwMTQxNWI3YmJmNWZmYjliNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-08-17T09:26:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-08-17T09:26:53Z"}, "message": "re PR tree-optimization/86841 (ICE in gcc/gcc/tree-vrp.c:1325 with graphite)\n\n2018-08-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/86841\n\t* wide-int-range.cc (wide_int_range_lshift): Use to_uhwi.\n\nFrom-SVN: r263615", "tree": {"sha": "dae2f85d2089d402d6d5c365edcf22f6dd408c91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dae2f85d2089d402d6d5c365edcf22f6dd408c91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0138492e7bdbb4949c940a501415b7bbf5ffb9b4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0c1235622280db4a55cd86daa176b08b72f1210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c1235622280db4a55cd86daa176b08b72f1210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c1235622280db4a55cd86daa176b08b72f1210"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "db625ddd4f068dec1bcdaf0634dc1afd387952a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0138492e7bdbb4949c940a501415b7bbf5ffb9b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0138492e7bdbb4949c940a501415b7bbf5ffb9b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "patch": "@@ -1,3 +1,8 @@\n+2018-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86841\n+\t* wide-int-range.cc (wide_int_range_lshift): Use to_uhwi.\n+\n 2018-08-17  Martin Liska  <mliska@suse.cz>\n \n \t* common.opt: Remove Warn, Init and Report for options with"}, {"sha": "726ec63b3a657ba27e4b2986e9aecf1451ba8efe", "filename": "gcc/wide-int-range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0138492e7bdbb4949c940a501415b7bbf5ffb9b4/gcc%2Fwide-int-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0138492e7bdbb4949c940a501415b7bbf5ffb9b4/gcc%2Fwide-int-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int-range.cc?ref=0138492e7bdbb4949c940a501415b7bbf5ffb9b4", "patch": "@@ -323,7 +323,7 @@ wide_int_range_lshift (wide_int &res_lb, wide_int &res_ub,\n   /* Transform left shifts by constants into multiplies.  */\n   if (wi::eq_p (vr1_lb, vr1_ub))\n     {\n-      int shift = wi::extract_uhwi (vr1_ub, 0, vr1_ub.get_precision ());\n+      unsigned shift = vr1_ub.to_uhwi ();\n       wide_int tmp = wi::set_bit_in_zero (shift, prec);\n       return wide_int_range_multiplicative_op (res_lb, res_ub,\n \t\t\t\t\t       MULT_EXPR, sign, prec,"}]}