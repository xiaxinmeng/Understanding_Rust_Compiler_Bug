{"sha": "f497c16c2698e5f2ecd6a33f174982b2f826d48e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ5N2MxNmMyNjk4ZTVmMmVjZDZhMzNmMTc0OTgyYjJmODI2ZDQ4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-06-20T06:37:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-06-20T06:37:17Z"}, "message": "re PR inline-asm/32109 (ICE with inline-asm and class with destructor)\n\n\tPR inline-asm/32109\n\t* gimplify.c (gimplify_asm_expr): Issue error if type is addressable\n\tand !allows_mem.\n\n\t* g++.dg/ext/asm10.C: New test.\n\nFrom-SVN: r125874", "tree": {"sha": "935957c9e37c4fe29aace1e86944da9c80ffeb83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/935957c9e37c4fe29aace1e86944da9c80ffeb83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f497c16c2698e5f2ecd6a33f174982b2f826d48e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f497c16c2698e5f2ecd6a33f174982b2f826d48e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f497c16c2698e5f2ecd6a33f174982b2f826d48e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f497c16c2698e5f2ecd6a33f174982b2f826d48e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a4e56a90e3c299e0eb634611cab3d076acbe818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4e56a90e3c299e0eb634611cab3d076acbe818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4e56a90e3c299e0eb634611cab3d076acbe818"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "b73ef8135d58591a11302ae29b6d55f5b8a3321c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f497c16c2698e5f2ecd6a33f174982b2f826d48e", "patch": "@@ -1,5 +1,9 @@\n 2007-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/32109\n+\t* gimplify.c (gimplify_asm_expr): Issue error if type is addressable\n+\tand !allows_mem.\n+\n \tPR middle-end/32285\n \t* calls.c (precompute_arguments): Also precompute CALL_EXPR arguments\n \tif ACCUMULATE_OUTGOING_ARGS."}, {"sha": "01ccaf02a823a3adf1cd03d96181858caac9c7da", "filename": "gcc/gimplify.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=f497c16c2698e5f2ecd6a33f174982b2f826d48e", "patch": "@@ -4122,6 +4122,19 @@ gimplify_asm_expr (tree *expr_p, tree *pre_p, tree *post_p)\n       parse_input_constraint (&constraint, 0, 0, noutputs, 0,\n \t\t\t      oconstraints, &allows_mem, &allows_reg);\n \n+      /* If we can't make copies, we can only accept memory.  */\n+      if (TREE_ADDRESSABLE (TREE_TYPE (TREE_VALUE (link))))\n+\t{\n+\t  if (allows_mem)\n+\t    allows_reg = 0;\n+\t  else\n+\t    {\n+\t      error (\"impossible constraint in %<asm%>\");\n+\t      error (\"non-memory input %d must stay in memory\", i);\n+\t      return GS_ERROR;\n+\t    }\n+\t}\n+\n       /* If the operand is a memory input, it should be an lvalue.  */\n       if (!allows_reg && allows_mem)\n \t{"}, {"sha": "0cefc19892feb60a44165ed9f0842ace639a5b13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f497c16c2698e5f2ecd6a33f174982b2f826d48e", "patch": "@@ -1,5 +1,8 @@\n 2007-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/32109\n+\t* g++.dg/ext/asm10.C: New test.\n+\n \tPR middle-end/32285\n \t* gcc.c-torture/execute/20070614-1.c: New test.\n "}, {"sha": "b95027c8cac5d60f7009c605660a6edd1e8ab936", "filename": "gcc/testsuite/g++.dg/ext/asm10.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f497c16c2698e5f2ecd6a33f174982b2f826d48e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm10.C?ref=f497c16c2698e5f2ecd6a33f174982b2f826d48e", "patch": "@@ -0,0 +1,14 @@\n+// PR inline-asm/32109\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct A { int i[3]; ~A (); };\n+struct A a;\n+struct B { struct A c; int i; B (); } b;\n+\n+B::B ()\n+{\n+  __asm (\"\" : : \"r\" (a));\t// { dg-error \"impossible constraint|non-memory input\" }\n+  __asm (\"\" : : \"r\" (b.c));\t// { dg-error \"impossible constraint|non-memory input\" }\n+  __asm (\"\" : : \"r\" (c));\t// { dg-error \"impossible constraint|non-memory input\" }\n+}"}]}