{"sha": "46b2baa723df876837763f269717413d04a226e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZiMmJhYTcyM2RmODc2ODM3NzYzZjI2OTcxNzQxM2QwNGEyMjZlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-11-16T22:42:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-11-16T22:42:24Z"}, "message": "PR c++/78373 - ICE with TREE_CONSTANT reference\n\n\t* decl.c (cp_finish_decl): Don't set TREE_CONSTANT on a reference.\n\t* typeck2.c (store_init_value): Likewise.\n\nFrom-SVN: r242523", "tree": {"sha": "f3a4b93a42b0d4a6d52610ed1b0c016684d17afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3a4b93a42b0d4a6d52610ed1b0c016684d17afc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46b2baa723df876837763f269717413d04a226e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b2baa723df876837763f269717413d04a226e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b2baa723df876837763f269717413d04a226e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b2baa723df876837763f269717413d04a226e0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ec15cba58bfe91bf91c536f5360c05a5b12794a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec15cba58bfe91bf91c536f5360c05a5b12794a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec15cba58bfe91bf91c536f5360c05a5b12794a"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "088a63cab8454f41b84f02f23a78cdcb46c9dc8d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46b2baa723df876837763f269717413d04a226e0", "patch": "@@ -1,5 +1,9 @@\n 2016-11-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/78373\n+\t* decl.c (cp_finish_decl): Don't set TREE_CONSTANT on a reference.\n+\t* typeck2.c (store_init_value): Likewise.\n+\n \t* decl.c (store_decomp_type, lookup_decomp_type): New.\n \t(cp_finish_decomp): Call store_decomp_type.\n \t* semantics.c (finish_decltype_type): Call lookup_decomp_type."}, {"sha": "2dc9314bc1e2e1d715edfda15ea4a8521bda5ac1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=46b2baa723df876837763f269717413d04a226e0", "patch": "@@ -6839,7 +6839,9 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  /* Set these flags now for templates.  We'll update the flags in\n \t     store_init_value for instantiations.  */\n \t  DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl) = 1;\n-\t  if (decl_maybe_constant_var_p (decl))\n+\t  if (decl_maybe_constant_var_p (decl)\n+\t      /* FIXME setting TREE_CONSTANT on refs breaks the back end.  */\n+\t      && TREE_CODE (type) != REFERENCE_TYPE)\n \t    TREE_CONSTANT (decl) = 1;\n \t}\n     }"}, {"sha": "2ca4bf241ec285dffa1c6500975c39d180bfad96", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b2baa723df876837763f269717413d04a226e0/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=46b2baa723df876837763f269717413d04a226e0", "patch": "@@ -824,7 +824,9 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n       const_init = (reduced_constant_expression_p (value)\n \t\t    || error_operand_p (value));\n       DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl) = const_init;\n-      TREE_CONSTANT (decl) = const_init && decl_maybe_constant_var_p (decl);\n+      /* FIXME setting TREE_CONSTANT on refs breaks the back end.  */\n+      if (TREE_CODE (type) != REFERENCE_TYPE)\n+\tTREE_CONSTANT (decl) = const_init && decl_maybe_constant_var_p (decl);\n     }\n   value = cp_fully_fold (value);\n "}, {"sha": "9ceef1cc732fc82dc24de209f31c14d02862a371", "filename": "gcc/testsuite/g++.dg/opt/pr78373.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b2baa723df876837763f269717413d04a226e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78373.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b2baa723df876837763f269717413d04a226e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78373.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78373.C?ref=46b2baa723df876837763f269717413d04a226e0", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/78373\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  static A singleton;\n+};\n+struct B {\n+  void m_fn2();\n+  virtual int m_fn1();\n+};\n+struct D : B {\n+  static int m_fn3(int, int, int, A) {\n+    D &self = singleton;\n+    self.m_fn2();\n+  }\n+  static D singleton;\n+};\n+template <typename, typename> struct C { bool m_fn4() const; };\n+template <typename Base, typename Traits> bool C<Base, Traits>::m_fn4() const {\n+  Traits::m_fn3(0, 0, 0, Base::singleton);\n+}\n+template struct C<A, D>;"}]}