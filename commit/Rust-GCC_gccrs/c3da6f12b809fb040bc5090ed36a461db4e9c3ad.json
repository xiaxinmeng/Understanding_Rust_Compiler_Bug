{"sha": "c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNkYTZmMTJiODA5ZmIwNDBiYzUwOTBlZDM2YTQ2MWRiNGU5YzNhZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-27T03:01:20Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-27T03:01:20Z"}, "message": "tree.c (copy_node): Improve documentation.\n\n\t* tree.c (copy_node): Improve documentation.\n\t(cplus_unsave_expr_now): Don't return a value.\n\nFrom-SVN: r28911", "tree": {"sha": "ed62114fd145c4b72761431904346d71a0873936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed62114fd145c4b72761431904346d71a0873936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3da6f12b809fb040bc5090ed36a461db4e9c3ad/comments", "author": null, "committer": null, "parents": [{"sha": "b2244e22a0cee5b617bc0619e5f8c2b11e14b2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2244e22a0cee5b617bc0619e5f8c2b11e14b2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2244e22a0cee5b617bc0619e5f8c2b11e14b2e1"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "4596ac10db1d9a53b7d982262afe9236296b583c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3da6f12b809fb040bc5090ed36a461db4e9c3ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3da6f12b809fb040bc5090ed36a461db4e9c3ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "patch": "@@ -1,3 +1,8 @@\n+Thu Aug 26 18:11:20 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* tree.c (array_type_nelts): Don't create RTL_EXPRs from\n+\tSAVE_EXPRs unless the SAVE_EXPRs have already been expanded.\n+\n Thu Aug 26 19:33:23 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* dwarf2out.c (DWARF2_ASM_LINE_DEBUG_INFO): Add default definition."}, {"sha": "dcc0ac783f1b2b6a5ada48ad24156e0b30f64157", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3da6f12b809fb040bc5090ed36a461db4e9c3ad/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3da6f12b809fb040bc5090ed36a461db4e9c3ad/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c3da6f12b809fb040bc5090ed36a461db4e9c3ad", "patch": "@@ -1127,8 +1127,11 @@ make_node (code)\n   return t;\n }\n \f\n-/* Return a new node with the same contents as NODE\n-   except that its TREE_CHAIN is zero and it has a fresh uid.  */\n+/* Return a new node with the same contents as NODE except that its\n+   TREE_CHAIN is zero and it has a fresh uid.  Unlike make_node, this\n+   function always performs the allocation on the CURRENT_OBSTACK;\n+   it's up to the caller to pick the right obstack before calling this\n+   function.  */\n \n tree\n copy_node (node)\n@@ -2244,7 +2247,7 @@ array_type_nelts (type)\n   if (! TREE_CONSTANT (min))\n     {\n       STRIP_NOPS (min);\n-      if (TREE_CODE (min) == SAVE_EXPR)\n+      if (TREE_CODE (min) == SAVE_EXPR && SAVE_EXPR_RTL (min))\n \tmin = build (RTL_EXPR, TREE_TYPE (TYPE_MIN_VALUE (index_type)), 0,\n \t\t     SAVE_EXPR_RTL (min));\n       else\n@@ -2254,7 +2257,7 @@ array_type_nelts (type)\n   if (! TREE_CONSTANT (max))\n     {\n       STRIP_NOPS (max);\n-      if (TREE_CODE (max) == SAVE_EXPR)\n+      if (TREE_CODE (max) == SAVE_EXPR && SAVE_EXPR_RTL (max))\n \tmax = build (RTL_EXPR, TREE_TYPE (TYPE_MAX_VALUE (index_type)), 0,\n \t\t     SAVE_EXPR_RTL (max));\n       else"}]}