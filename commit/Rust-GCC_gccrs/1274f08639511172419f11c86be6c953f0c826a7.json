{"sha": "1274f08639511172419f11c86be6c953f0c826a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI3NGYwODYzOTUxMTE3MjQxOWYxMWM4NmJlNmM5NTNmMGM4MjZhNw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-16T09:58:31Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-16T09:58:31Z"}, "message": "arm_neon.h (vdot_u32, [...]): New.\n\n2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32, vdotq_s32): New.\n\t(vdot_lane_u32, vdot_laneq_u32, vdotq_lane_u32, vdotq_laneq_u32): New.\n\t(vdot_lane_s32, vdot_laneq_s32, vdotq_lane_s32, vdotq_laneq_s32): New.\n\ngcc/testsuite/\n2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-qi.h: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vdot-compile.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-s8.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-u8.c: New.\n\nFrom-SVN: r253784", "tree": {"sha": "368fc747c75652b98e8319b48612b9cb3d55e12b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/368fc747c75652b98e8319b48612b9cb3d55e12b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1274f08639511172419f11c86be6c953f0c826a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1274f08639511172419f11c86be6c953f0c826a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1274f08639511172419f11c86be6c953f0c826a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1274f08639511172419f11c86be6c953f0c826a7/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a08d81307ef1a69bbdcb061e21881ab5def593a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a08d81307ef1a69bbdcb061e21881ab5def593a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a08d81307ef1a69bbdcb061e21881ab5def593a"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "456617bb66d9fa28fcb42c2eb5c0b1caa2878d06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1274f08639511172419f11c86be6c953f0c826a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1274f08639511172419f11c86be6c953f0c826a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1274f08639511172419f11c86be6c953f0c826a7", "patch": "@@ -1,3 +1,9 @@\n+2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32, vdotq_s32): New.\n+\t(vdot_lane_u32, vdot_laneq_u32, vdotq_lane_u32, vdotq_laneq_u32): New.\n+\t(vdot_lane_s32, vdot_laneq_s32, vdotq_lane_s32, vdotq_laneq_s32): New.\n+\n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c"}, {"sha": "96e740f91a7fb01d201c1badf08199a2a76cb483", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1274f08639511172419f11c86be6c953f0c826a7/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1274f08639511172419f11c86be6c953f0c826a7/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=1274f08639511172419f11c86be6c953f0c826a7", "patch": "@@ -31541,6 +31541,99 @@ vminnmvq_f16 (float16x8_t __a)\n \n #pragma GCC pop_options\n \n+/* AdvSIMD Dot Product intrinsics.  */\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"arch=armv8.2-a+dotprod\")\n+\n+__extension__ extern __inline uint32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_u32 (uint32x2_t __r, uint8x8_t __a, uint8x8_t __b)\n+{\n+  return __builtin_aarch64_udotv8qi_uuuu (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline uint32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_u32 (uint32x4_t __r, uint8x16_t __a, uint8x16_t __b)\n+{\n+  return __builtin_aarch64_udotv16qi_uuuu (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline int32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_s32 (int32x2_t __r, int8x8_t __a, int8x8_t __b)\n+{\n+  return __builtin_aarch64_sdotv8qi (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_s32 (int32x4_t __r, int8x16_t __a, int8x16_t __b)\n+{\n+  return __builtin_aarch64_sdotv16qi (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline uint32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_lane_u32 (uint32x2_t __r, uint8x8_t __a, uint8x8_t __b, const int __index)\n+{\n+  return __builtin_aarch64_udot_lanev8qi_uuuus (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline uint32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_laneq_u32 (uint32x2_t __r, uint8x8_t __a, uint8x16_t __b,\n+\t\tconst int __index)\n+{\n+  return __builtin_aarch64_udot_laneqv8qi_uuuus (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline uint32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_lane_u32 (uint32x4_t __r, uint8x16_t __a, uint8x8_t __b,\n+\t\tconst int __index)\n+{\n+  return __builtin_aarch64_udot_lanev16qi_uuuus (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline uint32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_laneq_u32 (uint32x4_t __r, uint8x16_t __a, uint8x16_t __b,\n+\t\t const int __index)\n+{\n+  return __builtin_aarch64_udot_laneqv16qi_uuuus (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline int32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_lane_s32 (int32x2_t __r, int8x8_t __a, int8x8_t __b, const int __index)\n+{\n+  return __builtin_aarch64_sdot_lanev8qi (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline int32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdot_laneq_s32 (int32x2_t __r, int8x8_t __a, int8x16_t __b, const int __index)\n+{\n+  return __builtin_aarch64_sdot_laneqv8qi (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_lane_s32 (int32x4_t __r, int8x16_t __a, int8x8_t __b, const int __index)\n+{\n+  return __builtin_aarch64_sdot_lanev16qi (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vdotq_laneq_s32 (int32x4_t __r, int8x16_t __a, int8x16_t __b, const int __index)\n+{\n+  return __builtin_aarch64_sdot_laneqv16qi (__r, __a, __b, __index);\n+}\n+#pragma GCC pop_options\n+\n #undef __aarch64_vget_lane_any\n \n #undef __aarch64_vdup_lane_any"}, {"sha": "44dff85495b04882d1f14447f7e550d159d80d1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1274f08639511172419f11c86be6c953f0c826a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1274f08639511172419f11c86be6c953f0c826a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1274f08639511172419f11c86be6c953f0c826a7", "patch": "@@ -1,3 +1,10 @@\n+2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-qi.h: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vdot-compile.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-s8.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vect-dot-u8.c: New.\n+\n 2017-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/53574"}]}