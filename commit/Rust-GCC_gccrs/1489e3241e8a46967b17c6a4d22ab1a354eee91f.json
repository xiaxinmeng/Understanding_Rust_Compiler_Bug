{"sha": "1489e3241e8a46967b17c6a4d22ab1a354eee91f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ4OWUzMjQxZThhNDY5NjdiMTdjNmE0ZDIyYWIxYTM1NGVlZTkxZg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@merlin.codesourcery.com", "date": "2001-08-14T23:34:04Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-08-14T23:34:04Z"}, "message": "numeric_limits.cc: Add more tests.\n\n      * testsuite/18_support/numeric_limits.cc: Add more tests.\n      * include/bits/std_limits.h (numeric_limits<char>::max): Fix\n      typo.\n\nFrom-SVN: r44911", "tree": {"sha": "aceedc53a68ded863fe546fb0c9fc3f1b4eaa73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aceedc53a68ded863fe546fb0c9fc3f1b4eaa73f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1489e3241e8a46967b17c6a4d22ab1a354eee91f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1489e3241e8a46967b17c6a4d22ab1a354eee91f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1489e3241e8a46967b17c6a4d22ab1a354eee91f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1489e3241e8a46967b17c6a4d22ab1a354eee91f/comments", "author": null, "committer": null, "parents": [{"sha": "abb788ba5b872f48e523a1f37fb7837fec4f0c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb788ba5b872f48e523a1f37fb7837fec4f0c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb788ba5b872f48e523a1f37fb7837fec4f0c44"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "43743b8b8eb9424c9608c7b23442afc9d23019aa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1489e3241e8a46967b17c6a4d22ab1a354eee91f", "patch": "@@ -1,3 +1,9 @@\n+2001-08-15  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\t* testsuite/18_support/numeric_limits.cc: Add more tests.\n+\t* include/bits/std_limits.h (numeric_limits<char>::max): Fix\n+\ttypo. \n+\n 2001-08-14  Ulrich Weigand  <uweigand@de.ibm.com>\n  \n \t* configure.target (cpu_include_dir): Set to `config/cpu/s390'"}, {"sha": "2d0804d31f72f11285b0012060f854fdc6a9f001", "filename": "libstdc++-v3/include/bits/std_limits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_limits.h?ref=1489e3241e8a46967b17c6a4d22ab1a354eee91f", "patch": "@@ -1123,7 +1123,7 @@ namespace std\n       static signed char min() throw()\n       { return __glibcpp_signed_char_min; }\n       static signed char max() throw()\n-      { return __glibcpp_signed_char_min; }\n+      { return __glibcpp_signed_char_max; }\n \n       static const int digits = __glibcpp_signed_char_digits;\n       static const int digits10 = __glibcpp_signed_char_digits10;"}, {"sha": "000577917d193bbae5bb5b2fd6534db5fdf27297", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits.cc", "status": "modified", "additions": 79, "deletions": 1, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1489e3241e8a46967b17c6a4d22ab1a354eee91f/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc?ref=1489e3241e8a46967b17c6a4d22ab1a354eee91f", "patch": "@@ -21,8 +21,66 @@\n // 18.2.1.1 template class numeric_limits\n \n #include <limits>\n+#include <limits.h>\n+#include <float.h>\n #include <testsuite_hooks.h>\n \n+template<typename T>\n+struct extrema {\n+  static T min;\n+  static T max;\n+};\n+\n+\n+#define DEFINE_EXTREMA(T, m, M) \\\n+  template<> T extrema<T>::min = m; \\\n+  template<> T extrema<T>::max = M\n+\n+DEFINE_EXTREMA(char, CHAR_MIN, CHAR_MAX);\n+DEFINE_EXTREMA(signed char, SCHAR_MIN, SCHAR_MAX);\n+DEFINE_EXTREMA(unsigned char, 0, UCHAR_MAX);\n+DEFINE_EXTREMA(short, SHRT_MIN, SHRT_MAX);\n+DEFINE_EXTREMA(unsigned short, 0, USHRT_MAX);\n+DEFINE_EXTREMA(int, INT_MIN, INT_MAX);\n+DEFINE_EXTREMA(unsigned, 0U, UINT_MAX);\n+DEFINE_EXTREMA(long, LONG_MIN, LONG_MAX);\n+DEFINE_EXTREMA(unsigned long, 0UL, ULONG_MAX);\n+\n+DEFINE_EXTREMA(float, FLT_MIN, FLT_MAX);\n+DEFINE_EXTREMA(double, DBL_MIN, DBL_MAX);\n+DEFINE_EXTREMA(long double, LDBL_MIN, LDBL_MAX);\n+\n+#undef DEFINE_EXTREMA\n+\n+template<typename T>\n+void test_extrema()\n+{\n+  VERIFY( extrema<T>::min == std::numeric_limits<T>::min() );\n+  VERIFY( extrema<T>::max == std::numeric_limits<T>::max() );\n+}\n+\n+#ifdef __CHAR_UNSIGNED__\n+#define char_is_signed false\n+#else\n+#define char_is_signed true\n+#endif\n+\n+void test_sign()\n+{\n+  VERIFY( std::numeric_limits<char>::is_signed == char_is_signed );\n+  VERIFY( std::numeric_limits<signed char>::is_signed == true );\n+  VERIFY( std::numeric_limits<unsigned char>::is_signed == false );\n+  VERIFY( std::numeric_limits<short>::is_signed == true );\n+  VERIFY( std::numeric_limits<unsigned short>::is_signed == false );\n+  VERIFY( std::numeric_limits<int>::is_signed == true );\n+  VERIFY( std::numeric_limits<unsigned>::is_signed == false );\n+  VERIFY( std::numeric_limits<long>::is_signed == true );\n+  VERIFY( std::numeric_limits<unsigned long>::is_signed == false );\n+  VERIFY( std::numeric_limits<float>::is_signed == true );\n+  VERIFY( std::numeric_limits<double>::is_signed == true );\n+  VERIFY( std::numeric_limits<long double>::is_signed == true );\n+}\n+\n \n template<typename T>\n   struct A \n@@ -96,5 +154,25 @@ int main()\n {\n   test01();\n   test02();\n-  return 0;\n+\n+  test_extrema<char>();\n+  test_extrema<signed char>();\n+  test_extrema<unsigned char>();\n+  \n+  test_extrema<short>();\n+  test_extrema<unsigned short>();\n+\n+  test_extrema<int>();\n+  test_extrema<unsigned>();\n+\n+  test_extrema<long>();\n+  test_extrema<unsigned long>();\n+\n+  test_extrema<float>();\n+  test_extrema<double>();\n+  test_extrema<long double>();\n+\n+  test_sign();\n+\n+    return 0;\n }"}]}