{"sha": "97fa962f63f9b3fadb9356d24edc4e8869e6740a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdmYTk2MmY2M2Y5YjNmYWRiOTM1NmQyNGVkYzRlODg2OWU2NzQwYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-10T23:44:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-10T23:44:22Z"}, "message": "(jump_optimize): Pass outer_code arg to rtx_cost.\n\nFrom-SVN: r10111", "tree": {"sha": "67254ac70d18aad06ca263260382fc03f787f913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67254ac70d18aad06ca263260382fc03f787f913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97fa962f63f9b3fadb9356d24edc4e8869e6740a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fa962f63f9b3fadb9356d24edc4e8869e6740a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97fa962f63f9b3fadb9356d24edc4e8869e6740a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fa962f63f9b3fadb9356d24edc4e8869e6740a/comments", "author": null, "committer": null, "parents": [{"sha": "af1708659199ebbfdc2998ef6c04eb1c6a2f573c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1708659199ebbfdc2998ef6c04eb1c6a2f573c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af1708659199ebbfdc2998ef6c04eb1c6a2f573c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "322474c99e90401f6ee13cfb608dbad01274d776", "filename": "gcc/jump.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fa962f63f9b3fadb9356d24edc4e8869e6740a/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fa962f63f9b3fadb9356d24edc4e8869e6740a/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=97fa962f63f9b3fadb9356d24edc4e8869e6740a", "patch": "@@ -871,7 +871,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && GET_CODE (SET_SRC (temp1)) != CONST_INT\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n-\t      && rtx_cost (SET_SRC (temp1)) < 10)\n+\t      && rtx_cost (SET_SRC (temp1), SET) < 10)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n \n@@ -910,12 +910,12 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n #endif\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n-\t      && rtx_cost (SET_SRC (temp1)) < 10\n+\t      && rtx_cost (SET_SRC (temp1), SET) < 10\n \t      && (temp4 = single_set (temp3)) != 0\n \t      && rtx_equal_p (SET_DEST (temp4), temp2)\n \t      && ! side_effects_p (SET_SRC (temp4))\n \t      && ! may_trap_p (SET_SRC (temp4))\n-\t      && rtx_cost (SET_SRC (temp4)) < 10)\n+\t      && rtx_cost (SET_SRC (temp4), SET) < 10)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n \n@@ -962,7 +962,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && regno_last_uid[REGNO (temp5)] == INSN_UID (temp3)\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n-\t      && rtx_cost (SET_SRC (temp1)) < 10\n+\t      && rtx_cost (SET_SRC (temp1), SET) < 10\n \t      && (temp4 = single_set (temp3)) != 0\n \t      && (temp2 = SET_DEST (temp4), GET_CODE (temp2) == REG)\n \t      && GET_MODE_CLASS (GET_MODE (temp2)) == MODE_INT\n@@ -972,7 +972,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && rtx_equal_p (SET_DEST (temp4), temp2)\n \t      && ! side_effects_p (SET_SRC (temp4))\n \t      && ! may_trap_p (SET_SRC (temp4))\n-\t      && rtx_cost (SET_SRC (temp4)) < 10)\n+\t      && rtx_cost (SET_SRC (temp4), SET) < 10)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n "}]}