{"sha": "befd75753fb9b8c44aecaffe63f8d2cd4026b196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmZDc1NzUzZmI5YjhjNDRhZWNhZmZlNjNmOGQyY2Q0MDI2YjE5Ng==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-09-15T20:17:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-09-15T20:17:05Z"}, "message": "For PR libgcj/23288:\n\n\t* java/net/URLClassLoader.java (definePackage): Correctly order\n\targuments to definePackage.  Look up per-entry Attributes.\n\t(getAttributeValue): New method.\n\nFrom-SVN: r104320", "tree": {"sha": "3964edfc293bc8165e9019333ee187efb0d80dd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3964edfc293bc8165e9019333ee187efb0d80dd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/befd75753fb9b8c44aecaffe63f8d2cd4026b196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befd75753fb9b8c44aecaffe63f8d2cd4026b196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/befd75753fb9b8c44aecaffe63f8d2cd4026b196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befd75753fb9b8c44aecaffe63f8d2cd4026b196/comments", "author": null, "committer": null, "parents": [{"sha": "77923c29383974626f7eb30cb69abb20db3cb2bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77923c29383974626f7eb30cb69abb20db3cb2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77923c29383974626f7eb30cb69abb20db3cb2bc"}], "stats": {"total": 67, "additions": 57, "deletions": 10}, "files": [{"sha": "ad81598dee9dab66824483ff29d136c6e01e5d2d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befd75753fb9b8c44aecaffe63f8d2cd4026b196/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befd75753fb9b8c44aecaffe63f8d2cd4026b196/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=befd75753fb9b8c44aecaffe63f8d2cd4026b196", "patch": "@@ -1,3 +1,10 @@\n+2005-09-15  Tom Tromey  <tromey@redhat.com>\n+\n+\tFor PR libgcj/23288:\n+\t* java/net/URLClassLoader.java (definePackage): Correctly order\n+\targuments to definePackage.  Look up per-entry Attributes.\n+\t(getAttributeValue): New method.\n+\n 2005-09-12  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \tPR libgcj/23762"}, {"sha": "5d48c02b2962d8533f8f27d84b12bf2725f9acd0", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 50, "deletions": 10, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befd75753fb9b8c44aecaffe63f8d2cd4026b196/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befd75753fb9b8c44aecaffe63f8d2cd4026b196/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=befd75753fb9b8c44aecaffe63f8d2cd4026b196", "patch": "@@ -940,10 +940,25 @@ private void addURLs(URL[] newUrls)\n       addURL(newUrls[i]);\n   }\n \n+  /**\n+   * Look in both Attributes for a given value.  The first Attributes\n+   * object, if not null, has precedence.\n+   */\n+  private String getAttributeValue(Attributes.Name name, Attributes first,\n+\t\t\t\t   Attributes second)\n+  {\n+    String result = null;\n+    if (first != null)\n+      result = first.getValue(name);\n+    if (result == null)\n+      result = second.getValue(name);\n+    return result;\n+  }\n+\n   /**\n    * Defines a Package based on the given name and the supplied manifest\n-   * information. The manifest indicates the tile, version and\n-   * vendor information of the specification and implementation and wheter the\n+   * information. The manifest indicates the title, version and\n+   * vendor information of the specification and implementation and whether the\n    * package is sealed. If the Manifest indicates that the package is sealed\n    * then the Package will be sealed with respect to the supplied URL.\n    *\n@@ -958,13 +973,36 @@ private void addURLs(URL[] newUrls)\n   protected Package definePackage(String name, Manifest manifest, URL url)\n     throws IllegalArgumentException\n   {\n+    // Compute the name of the package as it may appear in the\n+    // Manifest.\n+    StringBuffer xform = new StringBuffer(name);\n+    for (int i = xform.length () - 1; i >= 0; --i)\n+      if (xform.charAt(i) == '.')\n+\txform.setCharAt(i, '/');\n+    xform.append('/');\n+    String xformName = xform.toString();\n+\n+    Attributes entryAttr = manifest.getAttributes(xformName);\n     Attributes attr = manifest.getMainAttributes();\n-    String specTitle = attr.getValue(Attributes.Name.SPECIFICATION_TITLE);\n-    String specVersion = attr.getValue(Attributes.Name.SPECIFICATION_VERSION);\n-    String specVendor = attr.getValue(Attributes.Name.SPECIFICATION_VENDOR);\n-    String implTitle = attr.getValue(Attributes.Name.IMPLEMENTATION_TITLE);\n-    String implVersion = attr.getValue(Attributes.Name.IMPLEMENTATION_VERSION);\n-    String implVendor = attr.getValue(Attributes.Name.IMPLEMENTATION_VENDOR);\n+\n+    String specTitle\n+      = getAttributeValue(Attributes.Name.SPECIFICATION_TITLE,\n+\t\t\t  entryAttr, attr);\n+    String specVersion\n+      = getAttributeValue(Attributes.Name.SPECIFICATION_VERSION,\n+\t\t\t  entryAttr, attr);\n+    String specVendor\n+      = getAttributeValue(Attributes.Name.SPECIFICATION_VENDOR,\n+\t\t\t  entryAttr, attr);\n+    String implTitle\n+      = getAttributeValue(Attributes.Name.IMPLEMENTATION_TITLE,\n+\t\t\t  entryAttr, attr);\n+    String implVersion\n+      = getAttributeValue(Attributes.Name.IMPLEMENTATION_VERSION,\n+\t\t\t  entryAttr, attr);\n+    String implVendor\n+      = getAttributeValue(Attributes.Name.IMPLEMENTATION_VENDOR,\n+\t\t\t  entryAttr, attr);\n \n     // Look if the Manifest indicates that this package is sealed\n     // XXX - most likely not completely correct!\n@@ -976,8 +1014,10 @@ protected Package definePackage(String name, Manifest manifest, URL url)\n       // make sure that the URL is null so the package is not sealed\n       url = null;\n \n-    return definePackage(name, specTitle, specVersion, specVendor, implTitle,\n-                         implVersion, implVendor, url);\n+    return definePackage(name,\n+\t\t\t specTitle, specVendor, specVersion,\n+\t\t\t implTitle, implVendor, implVersion,\n+\t\t\t url);\n   }\n \n   /**"}]}