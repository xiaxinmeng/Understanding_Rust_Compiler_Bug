{"sha": "95eb8b69e6289ad1bc196915ba741f035817ce4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVlYjhiNjllNjI4OWFkMWJjMTk2OTE1YmE3NDFmMDM1ODE3Y2U0Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T10:10:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T10:10:40Z"}, "message": "[multiple changes]\n\n2011-08-03  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_util.adb, sem_aux.adb, exp_util.ads, sem_aux.ads:\n\tMove routine Is_VM_By_Copy_Actual from sem_aux to exp_util.\n\n2011-08-03  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch8.adb (Is_Primitive_Operator_In_Use): Always check In_Use on\n\tthe Base_Type.\n\n2011-08-03  Joel Brobecker  <brobecker@adacore.com brobecker>\n\n\t* g-sha256.ads, g-sha512.ads, g-sha1.ads, g-sha224.ads, g-sha384.ads,\n\tg-sehash.ads: Fix typo. Update header.\n\n2011-08-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch6.adb (Expand_Actuals): Remove Ada_2005 guard on build-in-place\n\texpansion.\n\n2011-08-03  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component): Consider\n\tprefixes of private types along with records, since the selector may be\n\ta discriminant.\n\t* sem_res.adb (Resolve_Selected_Component): Consider prefixes of\n\tprivate types along with records, since the selector may be a\n\tdiscriminant.\n\nFrom-SVN: r177259", "tree": {"sha": "26c7af0748202e6e8920fded388bf64f284d3c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c7af0748202e6e8920fded388bf64f284d3c3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95eb8b69e6289ad1bc196915ba741f035817ce4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95eb8b69e6289ad1bc196915ba741f035817ce4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95eb8b69e6289ad1bc196915ba741f035817ce4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95eb8b69e6289ad1bc196915ba741f035817ce4b/comments", "author": null, "committer": null, "parents": [{"sha": "92e770277f735559fae532ddcf7307d50e209b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e770277f735559fae532ddcf7307d50e209b2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e770277f735559fae532ddcf7307d50e209b2f"}], "stats": {"total": 98, "additions": 64, "deletions": 34}, "files": [{"sha": "a28897f750d8ba13d3923eba5f57dfe4ad676ab0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -1,3 +1,32 @@\n+2011-08-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb, sem_aux.adb, exp_util.ads, sem_aux.ads:\n+\tMove routine Is_VM_By_Copy_Actual from sem_aux to exp_util.\n+\n+2011-08-03  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch8.adb (Is_Primitive_Operator_In_Use): Always check In_Use on\n+\tthe Base_Type.\n+\n+2011-08-03  Joel Brobecker  <brobecker@adacore.com brobecker>\n+\n+\t* g-sha256.ads, g-sha512.ads, g-sha1.ads, g-sha224.ads, g-sha384.ads,\n+\tg-sehash.ads: Fix typo. Update header.\n+\n+2011-08-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Actuals): Remove Ada_2005 guard on build-in-place\n+\texpansion.\n+\n+2011-08-03  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component): Consider\n+\tprefixes of private types along with records, since the selector may be\n+\ta discriminant.\n+\t* sem_res.adb (Resolve_Selected_Component): Consider prefixes of\n+\tprivate types along with records, since the selector may be a\n+\tdiscriminant.\n+\n 2011-08-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-pp.adb (Pretty_Print): remove trailing blank line in the file"}, {"sha": "d09261eae8590a50f77fe8991d7bc4526329289a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -1472,9 +1472,7 @@ package body Exp_Ch6 is\n             --  functions that are treated as build-in-place to include other\n             --  composite result types.\n \n-            if Ada_Version >= Ada_2005\n-              and then Is_Build_In_Place_Function_Call (Actual)\n-            then\n+            if Is_Build_In_Place_Function_Call (Actual) then\n                Make_Build_In_Place_Call_In_Anonymous_Context (Actual);\n             end if;\n "}, {"sha": "9220837ed9b8463a0463839ca59b832fb92e62be", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3561,6 +3561,18 @@ package body Exp_Util is\n       end if;\n    end Is_Volatile_Reference;\n \n+   --------------------------\n+   -- Is_VM_By_Copy_Actual --\n+   --------------------------\n+\n+   function Is_VM_By_Copy_Actual (N : Node_Id) return Boolean is\n+   begin\n+      return VM_Target /= No_VM\n+        and then Nkind (N) = N_Identifier\n+        and then Present (Renamed_Object (Entity (N)))\n+        and then Nkind (Renamed_Object (Entity (N))) = N_Slice;\n+   end Is_VM_By_Copy_Actual;\n+\n    --------------------\n    -- Kill_Dead_Code --\n    --------------------"}, {"sha": "4f13fa96f8870204f248b2612e984a7652753f44", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -537,6 +537,10 @@ package Exp_Util is\n    --  or has Volatile_Components set. A slice of a volatile variable is\n    --  also volatile.\n \n+   function Is_VM_By_Copy_Actual (N : Node_Id) return Boolean;\n+   --  Returns True if we are compiling on VM targets and N is a node that\n+   --  requires to be passed by copy in these targets.\n+\n    procedure Kill_Dead_Code (N : Node_Id; Warn : Boolean := False);\n    --  N represents a node for a section of code that is known to be dead. Any\n    --  exception handler references and warning messages relating to this code"}, {"sha": "c3bbce1edb4de24d3cb3c04f2db535f4c01ab4e5", "filename": "gcc/ada/g-sehash.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sehash.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sehash.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sehash.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2002-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 2002-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2a1c0e1dc605bd78c29aa9dd386e3193b3cb6af5", "filename": "gcc/ada/g-sha1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha1.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2009-2010, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2009-2011, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "0520a5efe31daf392b44ac7ba445245810bd5b64", "filename": "gcc/ada/g-sha224.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha224.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha224.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha224.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2009, Free Software Foundation, Inc.             --\n+--         Copyright (C) 2009-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "91088433c0081dd57eadd398b76c25e9944ea952", "filename": "gcc/ada/g-sha256.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha256.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha256.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha256.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2009, Free Software Foundation, Inc.             --\n+--        Copyright (C) 2009-2011, Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "0047da06ca3fa2512a6b2176d0d2c831a1019bed", "filename": "gcc/ada/g-sha384.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha384.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha384.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha384.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2009, Free Software Foundation, Inc.             --\n+--        Copyright (C) 2009-2011, Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e75d9493d4564b6f9740f42f161ae7fcb9e57341", "filename": "gcc/ada/g-sha512.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha512.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fg-sha512.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha512.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2009, Free Software Foundation, Inc.             --\n+--        Copyright (C) 2009-2011, Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "0e5c3db3cf0028e359db523438766a6c5636940a", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -36,7 +36,6 @@ with Namet;  use Namet;\n with Sinfo;  use Sinfo;\n with Snames; use Snames;\n with Stand;  use Stand;\n-with Targparm; use Targparm;\n \n package body Sem_Aux is\n \n@@ -785,18 +784,6 @@ package body Sem_Aux is\n       end if;\n    end Is_Limited_Type;\n \n-   --------------------------\n-   -- Is_VM_By_Copy_Actual --\n-   --------------------------\n-\n-   function Is_VM_By_Copy_Actual (N : Node_Id) return Boolean is\n-   begin\n-      return VM_Target /= No_VM\n-        and then Nkind (N) = N_Identifier\n-        and then Present (Renamed_Object (Entity (N)))\n-        and then Nkind (Renamed_Object (Entity (N))) = N_Slice;\n-   end Is_VM_By_Copy_Actual;\n-\n    ----------------------\n    -- Nearest_Ancestor --\n    ----------------------"}, {"sha": "cf9af2e717851f1ff69916cbb260fa07dcecb63a", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -186,10 +186,6 @@ package Sem_Aux is\n    --  composite containing a limited component, or a subtype of any of\n    --  these types).\n \n-   function Is_VM_By_Copy_Actual (N : Node_Id) return Boolean;\n-   --  Returns True if we are compiling on VM targets and N is a node that\n-   --  requires to be passed by copy in these targets.\n-\n    function Nearest_Ancestor (Typ : Entity_Id) return Entity_Id;\n    --  Given a subtype Typ, this function finds out the nearest ancestor from\n    --  which constraints and predicates are inherited. There is no simple link"}, {"sha": "664a080ee3be32f5e82246b77950b93485324656", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -3127,7 +3127,10 @@ package body Sem_Ch4 is\n             T := It.Typ;\n          end if;\n \n-         if Is_Record_Type (T) then\n+         --  Locate the component. For a private prefix the selector can denote\n+         --  a discriminant.\n+\n+         if Is_Record_Type (T) or else Is_Private_Type (T) then\n \n             --  If the prefix is a class-wide type, the visible components are\n             --  those of the base type."}, {"sha": "d02e9118a97327c7f3b21765296b551691082e58", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -3639,11 +3639,9 @@ package body Sem_Ch8 is\n         (Op : Entity_Id;\n          F  : Entity_Id) return Boolean\n       is\n-         T : constant Entity_Id := Etype (F);\n+         T : constant Entity_Id := Base_Type (Etype (F));\n       begin\n-         return (In_Use (T)\n-                  or else Present (Current_Use_Clause (Base_Type (T))))\n-           and then Scope (T) = Scope (Op);\n+         return In_Use (T) and then Scope (T) = Scope (Op);\n       end Is_Primitive_Operator_In_Use;\n \n    --  Start of processing for End_Use_Package"}, {"sha": "e88e551cb2ec418a3e350dbc7184c903e0fe362a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95eb8b69e6289ad1bc196915ba741f035817ce4b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=95eb8b69e6289ad1bc196915ba741f035817ce4b", "patch": "@@ -8378,7 +8378,10 @@ package body Sem_Res is\n                T := It.Typ;\n             end if;\n \n-            if Is_Record_Type (T) then\n+            --  Locate selected component. For a private prefix the selector\n+            --  can denote a discriminant.\n+\n+            if Is_Record_Type (T) or else Is_Private_Type (T) then\n \n                --  The visible components of a class-wide type are those of\n                --  the root type."}]}