{"sha": "fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNjZDVmOTUxNzI3ODZjNmQ2YWU5OWE4ZDEzYTQ3NmM5OWM2MmQzZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2006-05-24T23:19:36Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2006-05-24T23:19:36Z"}, "message": "scalar-by-value-x.h: New.\n\n\t* gcc.dg/compat/scalar-by-value-x.h: New.\n\t* gcc.dg/compat/scalar-by-value-y.h: New.\n\t* gcc.dg/compat/scalar-by-value-5.c: New.\n\t* gcc.dg/compat/scalar-by-value-5_main.c: New.\n\t* gcc.dg/compat/scalar-by-value-5_x.c: New.\n\t* gcc.dg/compat/scalar-by-value-5_y.c: New.\n\t* gcc.dg/compat/scalar-by-value-6.c: New.\n\t* gcc.dg/compat/scalar-by-value-6_main.c: New.\n\t* gcc.dg/compat/scalar-by-value-6_x.c: New.\n\t* gcc.dg/compat/scalar-by-value-6_y.c: New.\n\nFrom-SVN: r114058", "tree": {"sha": "74f66742660de922150649f479603be340c898e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f66742660de922150649f479603be340c898e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/comments", "author": null, "committer": null, "parents": [{"sha": "d7f5de76fdc534c7eb7bb532b212936665ec2080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f5de76fdc534c7eb7bb532b212936665ec2080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f5de76fdc534c7eb7bb532b212936665ec2080"}], "stats": {"total": 449, "additions": 446, "deletions": 3}, "files": [{"sha": "697545045ea432976d0e0cfa8845121a832930e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -1,3 +1,16 @@\n+2006-05-25  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* gcc.dg/compat/scalar-by-value-x.h: New.\n+\t* gcc.dg/compat/scalar-by-value-y.h: New.\n+\t* gcc.dg/compat/scalar-by-value-5.c: New.\n+\t* gcc.dg/compat/scalar-by-value-5_main.c: New.\n+\t* gcc.dg/compat/scalar-by-value-5_x.c: New.\n+\t* gcc.dg/compat/scalar-by-value-5_y.c: New.\n+\t* gcc.dg/compat/scalar-by-value-6.c: New.\n+\t* gcc.dg/compat/scalar-by-value-6_main.c: New.\n+\t* gcc.dg/compat/scalar-by-value-6_x.c: New.\n+\t* gcc.dg/compat/scalar-by-value-6_y.c: New.\n+\n 2006-05-24  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR tree-optimization/27639\n@@ -120,7 +133,7 @@\n 2006-05-20  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/25776\n-\t* g++.dg/other/error11.C: New test. \n+\t* g++.dg/other/error11.C: New test.\n \n 2006-05-20  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -2266,8 +2279,8 @@\n \tPR c++/26140\n \tRevert\n \t2006-01-30  Richard Guenther  <rguenther@suse.de>\n- \tPR c++/23372\n- \t* gcc.dg/pr23372-1.C: New testcase.\n+\tPR c++/23372\n+\t* gcc.dg/pr23372-1.C: New testcase.\n \n \t* g++.dg/tree-ssa/pr26140.C: New testcase.\n "}, {"sha": "1fa713d2b6417e974d32397c8a83c63ed67ed709", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,16 @@\n+TEST_FUNCS (longlong_i, long long, int,\n+\t    1234LL, -987)\n+TEST_FUNCS (longlong_d, long long, double,\n+\t    1234LL, -987.0)\n+TEST_FUNCS (complexint_i, _Complex int, int,\n+\t    1234 + 567i, -987)\n+TEST_FUNCS (complexint_d, _Complex int, double,\n+\t    1234 + 567i, -987.0)\n+TEST_FUNCS (complexdouble_i, _Complex double, int,\n+\t    1234.0 + 567.0i, -987)\n+TEST_FUNCS (complexdouble_d, _Complex double, double,\n+\t    1234.0 + 567.0i, -987.0)\n+TEST_FUNCS (complexlonglong_i, _Complex long long, int,\n+\t    1234LL + 567LLi, -987)\n+TEST_FUNCS (complexlonglong_d, _Complex long long, double,\n+\t    1234LL + 567LLi, -987.0)"}, {"sha": "c57c6fee42d269c0862c4d29c31205bdb097dc34", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-5_main.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_main.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,30 @@\n+/* Test that function args can be passed in various positions to both fixed\n+   and variable arg functions.  */\n+/* { dg-options \"-O\" } */\n+\n+extern void exit (int);\n+extern void longlong_i_doit (void);\n+extern void longlong_d_doit (void);\n+extern void complexint_i_doit (void);\n+extern void complexint_d_doit (void);\n+extern void complexdouble_i_doit (void);\n+extern void complexdouble_d_doit (void);\n+extern void complexlonglong_i_doit (void);\n+extern void complexlonglong_d_doit (void);\n+\n+int main (void)\n+{\n+  longlong_i_doit ();\n+  longlong_d_doit ();\n+#ifndef SKIP_COMPLEX_INT\n+  complexint_i_doit ();\n+  complexint_d_doit ();\n+#endif\n+  complexdouble_i_doit ();\n+  complexdouble_d_doit ();\n+#ifndef SKIP_COMPLEX_INT\n+  complexlonglong_i_doit ();\n+  complexlonglong_d_doit ();\n+#endif\n+  exit (0);\n+}"}, {"sha": "5266bdf67b66fb7ad71c68ba2ef5733d4386c6c2", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-5_x.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_x.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,2 @@\n+#include \"scalar-by-value-x.h\"\n+#include \"scalar-by-value-5.c\""}, {"sha": "78d985a24dc7a07eb59273c6286593c1974601c0", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-5_y.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-5_y.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,2 @@\n+#include \"scalar-by-value-y.h\"\n+#include \"scalar-by-value-5.c\""}, {"sha": "54c5d9b70020906861285bc1d38f093763c16cb8", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-6.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,4 @@\n+TEST_FUNCS (longdouble_i, long double, int, d, -987)\n+TEST_FUNCS (longdouble_d, long double, double, d, -987.0)\n+TEST_FUNCS (complexlongdouble_i, _Complex long double, int, cd, -987)\n+TEST_FUNCS (complexlongdouble_d, _Complex long double, double, cd, -987.0)"}, {"sha": "9c73a1caca1abbff37fcb10b0fea2f0fd21a3fbe", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-6_main.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_main.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,19 @@\n+/* Test that function args can be passed in various positions to both fixed\n+   and variable arg functions.  */\n+/* { dg-options \"-O\" } */\n+/* { dg-options \"-O -mlong-double-128\" { target powerpc*-*-* } } */\n+\n+extern void exit (int);\n+extern void longdouble_i_doit (void);\n+extern void longdouble_d_doit (void);\n+extern void complexlongdouble_i_doit (void);\n+extern void complexlongdouble_d_doit (void);\n+\n+int main (void)\n+{\n+  longdouble_i_doit ();\n+  longdouble_d_doit ();\n+  complexlongdouble_i_doit ();\n+  complexlongdouble_d_doit ();\n+  exit (0);\n+}"}, {"sha": "a395cb207fa36fc6831c7792d8e4e826f7642d52", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-6_x.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_x.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,6 @@\n+#include \"scalar-by-value-x.h\"\n+\n+extern long double d;\n+extern _Complex long double cd;\n+\n+#include \"scalar-by-value-6.c\""}, {"sha": "87c7b234a8223ea0e11ebb28908e050f1b0c218f", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-6_y.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-6_y.c?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,6 @@\n+#include \"scalar-by-value-y.h\"\n+\n+long double d = 1234.0L + 0x0.abcdp-70L;\n+_Complex long double cd = 234.0L + 0x0.abcp-70L + 567.0Li +0x0defp-70Li;\n+\n+#include \"scalar-by-value-6.c\""}, {"sha": "f0ac216ad549b2d4f0a973920a7bcf526029ac09", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-x.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-x.h?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,77 @@\n+#if DEBUG\n+#include <stdio.h>\n+#define DBG(x) fputs (x, stdout); fflush (stdout);\n+#else\n+#define DBG(x)\n+#endif\n+\n+#define TEST_FUNCS(NAME, TYPE, PADT, VAL, VAL2) \\\n+extern void NAME##_f0 (TYPE a, PADT b);\t\t\t\t\t\\\n+extern void NAME##_f1 (PADT z0, TYPE a, PADT b);\t\t\t\\\n+extern void NAME##_f2 (PADT z0, PADT z1, TYPE a, PADT b);\t\t\\\n+extern void NAME##_f3 (PADT z0, PADT z1, PADT z2, TYPE a, PADT b);\t\\\n+extern void NAME##_f4 (PADT z0, PADT z1, PADT z2, PADT z3, TYPE a,\t\\\n+\t\t       PADT b);\t\t\t\t\t\t\\\n+extern void NAME##_f5 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4,\t\\\n+\t\t       TYPE a, PADT b);\t\t\t\t\t\\\n+extern void NAME##_f6 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4,\t\\\n+\t\t       PADT z5, TYPE a, PADT b);\t\t\t\\\n+extern void NAME##_f7 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4,\t\\\n+\t\t       PADT z5, PADT z6, TYPE a, PADT b);\t\t\\\n+extern void NAME##_f8 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4,\t\\\n+\t\t       PADT z5, PADT z6, PADT z7, TYPE a, PADT b);\t\\\n+extern void NAME##_f9 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4,\t\\\n+\t\t       PADT z5, PADT z6, PADT z7, PADT z8, TYPE a,\t\\\n+\t\t       PADT b);\t\t\t\t\t\t\\\n+extern void NAME##_fv (int n, ...);\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_doit (void)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  NAME##_f0 (VAL, VAL2);\t\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f1 ((PADT) 0, VAL, VAL2);\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f2 ((PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f3 ((PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f4 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f5 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\t\\\n+\t     VAL, VAL2);\t\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f6 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\t\\\n+\t     (PADT) 0, VAL, VAL2);\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f7 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\t\\\n+\t     (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f8 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\t\\\n+\t     (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_f9 ((PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\t\\\n+\t     (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (0, VAL, VAL2);\t\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (1, (PADT) 0, VAL, VAL2);\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (2, (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (3, (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (4, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (5, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\\\n+\t     VAL, VAL2);\t\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (6, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\\\n+\t     (PADT) 0, VAL, VAL2);\t\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (7, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\\\n+\t     (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\t\\\n+  DBG (\".\");\t\t\t\t\t\t\t\t\\\n+  NAME##_fv (8, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0, (PADT) 0,\t\\\n+\t     (PADT) 0, (PADT) 0, (PADT) 0, VAL, VAL2);\t\t\t\\\n+  DBG (\"\\n\");\t\t\t\t\t\t\t\t\\\n+}"}, {"sha": "47a3613350733f4309f890236ac059482839d423", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-y.h", "status": "added", "additions": 268, "deletions": 0, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-y.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd5f95172786c6d6ae99a8d13a476c99c62d3e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-y.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-y.h?ref=fccd5f95172786c6d6ae99a8d13a476c99c62d3e", "patch": "@@ -0,0 +1,268 @@\n+extern void abort (void);\n+\n+#if USE_MEMCMP\n+/* For comparing vectors.  */\n+#define TEST_FUNCS(NAME, TYPE, PADT, VAL, VAL2) \\\n+void NAME##_f0 (TYPE a, PADT b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f1 (PADT z0, TYPE a, PADT b)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f2 (PADT z0, PADT z1, TYPE a, PADT b)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f3 (PADT z0, PADT z1, PADT z2, TYPE a, PADT b)\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f4 (PADT z0, PADT z1, PADT z2, PADT z3, TYPE a, PADT b)\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f5 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, TYPE a,\t\\\n+\t\tPADT b)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f6 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tTYPE a, PADT b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f7 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, TYPE a, PADT b)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f8 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, PADT z7, TYPE a, PADT b)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z7 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f9 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, PADT z7, PADT z8, TYPE a, PADT b)\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z7 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z8 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || memcmp (&a, &VAL, sizeof (a)) != 0 || b != VAL2)\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_fv (int n, ...)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  __builtin_va_list ap;\t\t\t\t\t\t\t\\\n+  TYPE x;\t\t\t\t\t\t\t\t\\\n+  __builtin_va_start (ap, n);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  while (n-- != 0)\t\t\t\t\t\t\t\\\n+    if (__builtin_va_arg (ap, PADT) != (PADT) 0)\t\t\t\\\n+      abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  x = __builtin_va_arg (ap, TYPE);\t\t\t\t\t\\\n+  if (memcmp (&x, &VAL, sizeof (x)) != 0 )\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (__builtin_va_arg (ap, PADT) != VAL2)\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  __builtin_va_end (ap);\t\t\t\t\t\t\\\n+}\n+\n+#else\n+\n+#define TEST_FUNCS(NAME, TYPE, PADT, VAL, VAL2) \\\n+void NAME##_f0 (TYPE a, PADT b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f1 (PADT z0, TYPE a, PADT b)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f2 (PADT z0, PADT z1, TYPE a, PADT b)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f3 (PADT z0, PADT z1, PADT z2, TYPE a, PADT b)\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f4 (PADT z0, PADT z1, PADT z2, PADT z3, TYPE a, PADT b)\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f5 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, TYPE a,\t\\\n+\t\tPADT b)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f6 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tTYPE a, PADT b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f7 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, TYPE a, PADT b)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f8 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, PADT z7, TYPE a, PADT b)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z7 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_f9 (PADT z0, PADT z1, PADT z2, PADT z3, PADT z4, PADT z5,\t\\\n+\t\tPADT z6, PADT z7, PADT z8, TYPE a, PADT b)\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (z0 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z1 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z2 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z3 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z4 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z5 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z6 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z7 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || z8 != (PADT) 0\t\t\t\t\t\t\t\\\n+      || a != VAL || b != VAL2)\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+void NAME##_fv (int n, ...)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  __builtin_va_list ap;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  __builtin_va_start (ap, n);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  while (n-- != 0)\t\t\t\t\t\t\t\\\n+    if (__builtin_va_arg (ap, PADT) != (PADT) 0)\t\t\t\\\n+      abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (__builtin_va_arg (ap, TYPE) != VAL)\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (__builtin_va_arg (ap, PADT) != VAL2)\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  __builtin_va_end (ap);\t\t\t\t\t\t\\\n+}\n+\n+#endif"}]}