{"sha": "7e1584f82dcb1d1a2953381a16542772ab4f5adf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UxNTg0ZjgyZGNiMWQxYTI5NTMzODFhMTY1NDI3NzJhYjRmNWFkZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-04-24T07:58:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-04-24T07:58:53Z"}, "message": "re PR tree-optimization/22525 (tree based value profiling (-fprofile-use) produces mismatch types in conditional)\n\n2006-04-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/22525\n\t* value-prof.c (tree_mod_pow2): Remove unnecessary temporary\n\tvariable, adjust types of generated expressions.\n\nFrom-SVN: r113216", "tree": {"sha": "047d09366bf5c0f83cb9a0899199c15b84de22de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/047d09366bf5c0f83cb9a0899199c15b84de22de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e1584f82dcb1d1a2953381a16542772ab4f5adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1584f82dcb1d1a2953381a16542772ab4f5adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e1584f82dcb1d1a2953381a16542772ab4f5adf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1584f82dcb1d1a2953381a16542772ab4f5adf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2537f2c039f645cff41975b5a6ddcf26b7c4c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2537f2c039f645cff41975b5a6ddcf26b7c4c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2537f2c039f645cff41975b5a6ddcf26b7c4c79"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "5f481d3fdd15e05f3ecde539a686906faf3fac48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e1584f82dcb1d1a2953381a16542772ab4f5adf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e1584f82dcb1d1a2953381a16542772ab4f5adf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e1584f82dcb1d1a2953381a16542772ab4f5adf", "patch": "@@ -1,3 +1,9 @@\n+2006-04-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/22525\n+\t* value-prof.c (tree_mod_pow2): Remove unnecessary temporary\n+\tvariable, adjust types of generated expressions.\n+\n 2006-04-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.in (c-convert.o): Add dependency on $(TARGET_H)"}, {"sha": "59b0f351530bf444c5952c5e97f42c51eda2b9b5", "filename": "gcc/value-prof.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e1584f82dcb1d1a2953381a16542772ab4f5adf/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e1584f82dcb1d1a2953381a16542772ab4f5adf/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=7e1584f82dcb1d1a2953381a16542772ab4f5adf", "patch": "@@ -342,7 +342,7 @@ tree_mod_pow2 (tree stmt, tree operation, tree op1, tree op2, int prob,\n \t       gcov_type count, gcov_type all)\n {\n   tree stmt1, stmt2, stmt3, stmt4;\n-  tree tmp1, tmp2, tmp3;\n+  tree tmp2, tmp3;\n   tree label_decl1 = create_artificial_label ();\n   tree label_decl2 = create_artificial_label ();\n   tree label_decl3 = create_artificial_label ();\n@@ -357,19 +357,17 @@ tree_mod_pow2 (tree stmt, tree operation, tree op1, tree op2, int prob,\n   bb = bb_for_stmt (stmt);\n   bsi = bsi_for_stmt (stmt);\n \n-  tmp1 = create_tmp_var (optype, \"PROF\");\n   tmp2 = create_tmp_var (optype, \"PROF\");\n   tmp3 = create_tmp_var (optype, \"PROF\");\n-  stmt1 = build2 (MODIFY_EXPR, optype, tmp1, fold_convert (optype, op2));\n   stmt2 = build2 (MODIFY_EXPR, optype, tmp2, \n-\t\t    build2 (PLUS_EXPR, optype, op2, integer_minus_one_node));\n+\t\t  build2 (PLUS_EXPR, optype, op2, build_int_cst (optype, -1)));\n   stmt3 = build2 (MODIFY_EXPR, optype, tmp3,\n-\t\t    build2 (BIT_AND_EXPR, optype, tmp2, tmp1));\n+\t\t  build2 (BIT_AND_EXPR, optype, tmp2, op2));\n   stmt4 = build3 (COND_EXPR, void_type_node,\n-\t    build2 (NE_EXPR, boolean_type_node, tmp3, integer_zero_node),\n-\t    build1 (GOTO_EXPR, void_type_node, label_decl2),\n-\t    build1 (GOTO_EXPR, void_type_node, label_decl1));\n-  bsi_insert_before (&bsi, stmt1, BSI_SAME_STMT);\n+\t\t  build2 (NE_EXPR, boolean_type_node,\n+\t\t\t  tmp3, build_int_cst (optype, 0)),\n+\t\t  build1 (GOTO_EXPR, void_type_node, label_decl2),\n+\t \t  build1 (GOTO_EXPR, void_type_node, label_decl1));\n   bsi_insert_before (&bsi, stmt2, BSI_SAME_STMT);\n   bsi_insert_before (&bsi, stmt3, BSI_SAME_STMT);\n   bsi_insert_before (&bsi, stmt4, BSI_SAME_STMT);"}]}