{"sha": "226e989e7e81f44758f112c719f16d93ccf8be19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2ZTk4OWU3ZTgxZjQ0NzU4ZjExMmM3MTlmMTZkOTNjY2Y4YmUxOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T13:45:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T13:45:45Z"}, "message": "[multiple changes]\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* clean.adb (\"-eL\"): Also set Follow_Links_For_Dirs, to match what is\n\tdone in other project-aware tools like gnatmake and gprbuild.\n\n2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Take care of CIL\n\tValueTypes.\n\t* exp_ch7.adb (Needs_Finalization): Do not finalize CIL valuetypes.\n\t* sem_util.adb (Is_Value_Type): Protect against invalid calls to Chars\n\t(Is_Delegate): New method used for CIL.\n\t* sem_util.ads (Is_Delegate): New method for CIL handling.\n\t(Is_Value_Type): Improve documentation.\n\n2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* errout.adb (Unwind_Internal_Type): Improve error reporting if the\n\ttype is an anonymous access to subprogram that is the type of a formal\n\tin a subprogram spec.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Check_Interfaces): In a Stand-Alone Library project, if\n\tattribute Interfaces is not declared, then Library_Interface should\n\tdefine the interfaces.\n\n2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb: New semantics for Annotate.\n\nFrom-SVN: r154800", "tree": {"sha": "d05412194c6d56eeba99f6713d5010351fe927f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05412194c6d56eeba99f6713d5010351fe927f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/226e989e7e81f44758f112c719f16d93ccf8be19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226e989e7e81f44758f112c719f16d93ccf8be19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226e989e7e81f44758f112c719f16d93ccf8be19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226e989e7e81f44758f112c719f16d93ccf8be19/comments", "author": null, "committer": null, "parents": [{"sha": "207b17442a9e3a2f0773373ec0f4ca27bda00e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207b17442a9e3a2f0773373ec0f4ca27bda00e2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207b17442a9e3a2f0773373ec0f4ca27bda00e2d"}], "stats": {"total": 254, "additions": 223, "deletions": 31}, "files": [{"sha": "532d8dc982ef318564df9f2d6c0382bf76e9e270", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -1,3 +1,34 @@\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* clean.adb (\"-eL\"): Also set Follow_Links_For_Dirs, to match what is\n+\tdone in other project-aware tools like gnatmake and gprbuild.\n+\n+2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Take care of CIL\n+\tValueTypes.\n+\t* exp_ch7.adb (Needs_Finalization): Do not finalize CIL valuetypes.\n+\t* sem_util.adb (Is_Value_Type): Protect against invalid calls to Chars\n+\t(Is_Delegate): New method used for CIL.\n+\t* sem_util.ads (Is_Delegate): New method for CIL handling.\n+\t(Is_Value_Type): Improve documentation.\n+\n+2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* errout.adb (Unwind_Internal_Type): Improve error reporting if the\n+\ttype is an anonymous access to subprogram that is the type of a formal\n+\tin a subprogram spec.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Interfaces): In a Stand-Alone Library project, if\n+\tattribute Interfaces is not declared, then Library_Interface should\n+\tdefine the interfaces.\n+\n+2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb: New semantics for Annotate.\n+\n 2009-11-30  Tristan Gingold  <gingold@adacore.com>\n \n         * gcc-interface/Makefile.in: Do not link with -static-libgcc on Darwin."}, {"sha": "978a5e7006f0dde3e4423c512df660cfbb5ad6cd", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -1740,6 +1740,7 @@ package body Clean is\n                      when 'e' =>\n                         if Arg = \"-eL\" then\n                            Follow_Links_For_Files := True;\n+                           Follow_Links_For_Dirs  := True;\n \n                         else\n                            Bad_Argument;"}, {"sha": "3ab53262579422c1b3f106f4a204ccabeedee595", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -2848,7 +2848,30 @@ package body Errout is\n                      Buffer_Remove (\"type \");\n                   end if;\n \n-                  Set_Msg_Str (\"access to subprogram with profile \");\n+                  if Is_Itype (Ent) then\n+                     declare\n+                        Assoc : constant Node_Id :=\n+                          Associated_Node_For_Itype (Ent);\n+\n+                     begin\n+                        if Nkind (Assoc) = N_Procedure_Specification\n+                          or else Nkind (Assoc) = N_Function_Specification\n+                        then\n+\n+                           --  Anonymous access to subprogram in a signature\n+                           --  Indicate the enclosing subprogram.\n+\n+                           Ent :=\n+                             Defining_Unit_Name\n+                               (Associated_Node_For_Itype (Ent));\n+                           Set_Msg_Str\n+                             (\"access to subprogram declared in profile of \");\n+\n+                        else\n+                           Set_Msg_Str (\"access to subprogram with profile \");\n+                        end if;\n+                     end;\n+                  end if;\n \n                elsif Ekind (Ent) = E_Function then\n                   Set_Msg_Str (\"access to function \");"}, {"sha": "f32f0e2884699c1832850a8883fbd378e528cb6e", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -8121,7 +8121,9 @@ package body Exp_Ch3 is\n                   and then not Is_Limited_Interface (Tag_Typ)\n                   and then Is_Limited_Interface (Etype (Tag_Typ)))\n       then\n-         if not Is_Limited_Type (Tag_Typ) then\n+         if not Is_Limited_Type (Tag_Typ)\n+           and then not Is_Value_Type (Tag_Typ)\n+         then\n             Append_To (Res,\n               Predef_Deep_Spec (Loc, Tag_Typ, TSS_Deep_Adjust));\n          end if;"}, {"sha": "980acf697c26b798ace7bdf827e7e7da213893b6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -3294,7 +3294,8 @@ package body Exp_Ch7 is\n \n       return (Is_Class_Wide_Type (T)\n                 and then not In_Finalization_Root (T)\n-                and then not Restriction_Active (No_Finalization))\n+                and then not Restriction_Active (No_Finalization)\n+                and then not Is_Value_Type (Etype (T)))\n         or else Is_Controlled (T)\n         or else Has_Some_Controlled_Component (T)\n         or else (Is_Concurrent_Type (T)"}, {"sha": "9b65dc3a16cde9395d499498e81844093e9f2115", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 84, "deletions": 10, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -2520,6 +2520,12 @@ package body Prj.Nmsc is\n                         Project.Decl.Attributes,\n                         Data.Tree);\n \n+      Library_Interface : constant Prj.Variable_Value :=\n+                     Prj.Util.Value_Of\n+                       (Snames.Name_Library_Interface,\n+                        Project.Decl.Attributes,\n+                        Data.Tree);\n+\n       List      : String_List_Id;\n       Element   : String_Element;\n       Name      : File_Name_Type;\n@@ -2604,22 +2610,90 @@ package body Prj.Nmsc is\n \n          Project.Interfaces_Defined := True;\n \n-      elsif Project.Extends /= No_Project then\n-         Project.Interfaces_Defined := Project.Extends.Interfaces_Defined;\n+      elsif Project.Library and then not Library_Interface.Default then\n \n-         if Project.Interfaces_Defined then\n-            Iter := For_Each_Source (Data.Tree, Project);\n+         --  Set In_Interfaces to False for all sources. It will be set to True\n+         --  later for the sources in the Library_Interface list.\n+\n+         Project_2 := Project;\n+         while Project_2 /= No_Project loop\n+            Iter := For_Each_Source (Data.Tree, Project_2);\n             loop\n                Source := Prj.Element (Iter);\n                exit when Source = No_Source;\n-\n-               if not Source.Declared_In_Interfaces then\n-                  Source.In_Interfaces := False;\n-               end if;\n-\n+               Source.In_Interfaces := False;\n                Next (Iter);\n             end loop;\n-         end if;\n+\n+            Project_2 := Project_2.Extends;\n+         end loop;\n+\n+         List := Library_Interface.Values;\n+         while List /= Nil_String loop\n+            Element := Data.Tree.String_Elements.Table (List);\n+            Get_Name_String (Element.Value);\n+            To_Lower (Name_Buffer (1 .. Name_Len));\n+            Name := Name_Find;\n+\n+            Project_2 := Project;\n+            Big_Loop_2 :\n+            while Project_2 /= No_Project loop\n+               Iter := For_Each_Source (Data.Tree, Project_2);\n+\n+               loop\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source;\n+\n+                  if Source.Unit /= No_Unit_Index and then\n+                     Source.Unit.Name = Name_Id (Name)\n+                  then\n+                     if not Source.Locally_Removed then\n+                        Source.In_Interfaces := True;\n+                        Source.Declared_In_Interfaces := True;\n+\n+                        Other := Other_Part (Source);\n+\n+                        if Other /= No_Source then\n+                           Other.In_Interfaces := True;\n+                           Other.Declared_In_Interfaces := True;\n+                        end if;\n+\n+                        if Current_Verbosity = High then\n+                           Write_Str (\"   interface: \");\n+                           Write_Line (Get_Name_String (Source.Path.Name));\n+                        end if;\n+                     end if;\n+\n+                     exit Big_Loop_2;\n+                  end if;\n+\n+                  Next (Iter);\n+               end loop;\n+\n+               Project_2 := Project_2.Extends;\n+            end loop Big_Loop_2;\n+\n+            List := Element.Next;\n+         end loop;\n+\n+         Project.Interfaces_Defined := True;\n+\n+      elsif Project.Extends /= No_Project and then\n+            Project.Extends.Interfaces_Defined\n+      then\n+         Project.Interfaces_Defined := True;\n+\n+         Iter := For_Each_Source (Data.Tree, Project);\n+         loop\n+            Source := Prj.Element (Iter);\n+            exit when Source = No_Source;\n+\n+            if not Source.Declared_In_Interfaces then\n+               Source.In_Interfaces := False;\n+            end if;\n+\n+            Next (Iter);\n+         end loop;\n       end if;\n    end Check_Interfaces;\n "}, {"sha": "9e9df3006fc34de69024eeeeca721bbf0d36b382", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -5212,8 +5212,11 @@ package body Sem_Prag is\n          -- Annotate --\n          --------------\n \n-         --  pragma Annotate (IDENTIFIER {, ARG});\n+         --  pragma Annotate (IDENTIFIER, [IDENTIFIER], {, ARG});\n          --  ARG ::= NAME | EXPRESSION\n+         --  The first two arguments are by convention intended to refer\n+         --  to an external tool and a tool-specific function. These\n+         --  arguments are not analyzed.\n \n          when Pragma_Annotate => Annotate : begin\n             GNAT_Pragma;\n@@ -5225,26 +5228,33 @@ package body Sem_Prag is\n                Exp : Node_Id;\n \n             begin\n-               Arg := Arg2;\n-               while Present (Arg) loop\n-                  Exp := Expression (Arg);\n-                  Analyze (Exp);\n+               if No (Arg2) then\n+                     Error_Pragma_Arg\n+                       (\"pragma requires at least two arguments\", Arg1);\n \n-                  if Is_Entity_Name (Exp) then\n-                     null;\n+               else\n+                  Arg := Next (Arg2);\n+                  while Present (Arg) loop\n+                     Exp := Expression (Arg);\n+                     Analyze (Exp);\n \n-                  elsif Nkind (Exp) = N_String_Literal then\n-                     Resolve (Exp, Standard_String);\n+                     if Is_Entity_Name (Exp) then\n+                        null;\n \n-                  elsif Is_Overloaded (Exp) then\n-                     Error_Pragma_Arg (\"ambiguous argument for pragma%\", Exp);\n+                     elsif Nkind (Exp) = N_String_Literal then\n+                        Resolve (Exp, Standard_String);\n \n-                  else\n-                     Resolve (Exp);\n-                  end if;\n+                     elsif Is_Overloaded (Exp) then\n+                           Error_Pragma_Arg\n+                             (\"ambiguous argument for pragma%\", Exp);\n \n-                  Next (Arg);\n-               end loop;\n+                     else\n+                        Resolve (Exp);\n+                     end if;\n+\n+                     Next (Arg);\n+                  end loop;\n+               end if;\n             end;\n          end Annotate;\n "}, {"sha": "b01ab0aa55b9338b392e061b0148a3256f088e9f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -7040,10 +7040,54 @@ package body Sem_Util is\n    function Is_Value_Type (T : Entity_Id) return Boolean is\n    begin\n       return VM_Target = CLI_Target\n+        and then Nkind (T) in N_Has_Chars\n         and then Chars (T) /= No_Name\n         and then Get_Name_String (Chars (T)) = \"valuetype\";\n    end Is_Value_Type;\n \n+   -----------------\n+   -- Is_Delegate --\n+   -----------------\n+\n+   function Is_Delegate (T : Entity_Id) return Boolean is\n+      Desig_Type : Entity_Id;\n+   begin\n+      if VM_Target /= CLI_Target then\n+         return False;\n+      end if;\n+\n+      --  Access-to-subprograms are delegates in CIL\n+      if Ekind (T) = E_Access_Subprogram_Type then\n+         return True;\n+      end if;\n+\n+      if Ekind (T) not in Access_Kind then\n+         --  a delegate is a managed pointer. If no designated type is defined\n+         --  it means that it's not a delegate.\n+         return False;\n+      end if;\n+\n+      Desig_Type := Etype (Directly_Designated_Type (T));\n+\n+      if not Is_Tagged_Type (Desig_Type) then\n+         return False;\n+      end if;\n+\n+      --  Test if the type is inherited from [mscorlib]System.Delegate\n+      while Etype (Desig_Type) /= Desig_Type loop\n+         if Chars (Scope (Desig_Type)) /= No_Name\n+           and then Is_Imported (Scope (Desig_Type))\n+           and then Get_Name_String (Chars (Scope (Desig_Type))) = \"delegate\"\n+         then\n+            return True;\n+         end if;\n+\n+         Desig_Type := Etype (Desig_Type);\n+      end loop;\n+\n+      return False;\n+   end Is_Delegate;\n+\n    -----------------\n    -- Is_Variable --\n    -----------------"}, {"sha": "c1d534a3fc83d60b8ce9826ac7edbd93c5233cc7", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226e989e7e81f44758f112c719f16d93ccf8be19/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=226e989e7e81f44758f112c719f16d93ccf8be19", "patch": "@@ -800,8 +800,14 @@ package Sem_Util is\n    function Is_Value_Type (T : Entity_Id) return Boolean;\n    --  Returns true if type T represents a value type. This is only relevant to\n    --  CIL, will always return false for other targets.\n-   --  What is a \"value type\", since this is not an Ada term, it should be\n-   --  defined here ???\n+   --  A value type is a CIL object that is accessed directly, as opposed to\n+   --  the other CIL objects that are accessed through managed pointers.\n+\n+   function Is_Delegate (T : Entity_Id) return Boolean;\n+   --  Returns true if type T represents a delegate. A Delegate is the CIL\n+   --  object used to represent access-to-subprogram types.\n+   --  This is only relevant to CIL, will always return false for other\n+   --  targets.\n \n    function Is_Variable (N : Node_Id) return Boolean;\n    --  Determines if the tree referenced by N represents a variable, i.e."}]}