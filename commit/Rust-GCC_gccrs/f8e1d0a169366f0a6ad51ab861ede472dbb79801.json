{"sha": "f8e1d0a169366f0a6ad51ab861ede472dbb79801", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlMWQwYTE2OTM2NmYwYTZhZDUxYWI4NjFlZGU0NzJkYmI3OTgwMQ==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-03-13T15:14:29Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-13T15:14:29Z"}, "message": "Fix INTEGER*8 conversion bugs\n\nFrom-SVN: r25746", "tree": {"sha": "8944691861d6188019dd3f51adb8a04fad7450e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8944691861d6188019dd3f51adb8a04fad7450e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8e1d0a169366f0a6ad51ab861ede472dbb79801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e1d0a169366f0a6ad51ab861ede472dbb79801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e1d0a169366f0a6ad51ab861ede472dbb79801", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e1d0a169366f0a6ad51ab861ede472dbb79801/comments", "author": null, "committer": null, "parents": [{"sha": "fe3ab6bd3f869c21b4984a1da05e639ea1f764f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3ab6bd3f869c21b4984a1da05e639ea1f764f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3ab6bd3f869c21b4984a1da05e639ea1f764f4"}], "stats": {"total": 117, "additions": 116, "deletions": 1}, "files": [{"sha": "3998bfe2b1eca1a1db5af027b1d6301259946686", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -1,3 +1,15 @@\n+Sat Mar 13 17:51:55 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tFix 19990313-0.f, 19990313-1.f, 19990313-2.f, 19990313-3.f:\n+\t* bad.def (FFEBAD_NOCANDO): New error code for internal use only.\n+\t* expr.c (ffeexpr_collapse_convert): If FFEBAD_NOCANDO returned\n+\tby convertor, just return original expr.\n+\t* target.h: Return FFEBAD_NOCANDO for (usually) 64-bit\n+\tconversions that aren't yet working properly.\n+\t* news.texi: Explain.\n+\n+\t* version.c: Bump version.\n+\n Sat Mar 13 14:26:55 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* RELEASE-PREP: New file, lists things to do for a release."}, {"sha": "4c7bfe475f20085c34aaa9586c23e21f560833ea", "filename": "gcc/f/bad.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fbad.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fbad.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.def?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -702,6 +702,8 @@ FFEBAD_MSGS1 (FFEBAD_SFUNC_UNUSED, WARN,\n \"Statement function `%A' defined at %0 is not used\")\n FFEBAD_MSGS1 (FFEBAD_INTRINSIC_Y2KBAD, WARN,\n \"Intrinsic `%A', invoked at %0, known to be non-Y2K-compliant [info -f g77 M Y2KBAD]\")\n+FFEBAD_MSGS1 (FFEBAD_NOCANDO, DISASTER,\n+\"Internal compiler error -- cannot perform operation\")\n \n #undef INFORM\n #undef TRIVIAL"}, {"sha": "5dd8d71748d9258d7e06f20e4e3d0226444b9e25", "filename": "gcc/f/expr.c", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fexpr.c?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -633,6 +633,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_integer1_val\n \t     (ffebld_cu_val_integer1 (u)), expr);\n@@ -822,6 +826,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_integer2_val\n \t     (ffebld_cu_val_integer2 (u)), expr);\n@@ -1011,6 +1019,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_integer3_val\n \t     (ffebld_cu_val_integer3 (u)), expr);\n@@ -1200,6 +1212,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_integer4_val\n \t     (ffebld_cu_val_integer4 (u)), expr);\n@@ -1317,6 +1333,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_logical1_val\n \t     (ffebld_cu_val_logical1 (u)), expr);\n@@ -1424,6 +1444,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_logical2_val\n \t     (ffebld_cu_val_logical2 (u)), expr);\n@@ -1531,6 +1555,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_logical3_val\n \t     (ffebld_cu_val_logical3 (u)), expr);\n@@ -1638,6 +1666,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_logical4_val\n \t     (ffebld_cu_val_logical4 (u)), expr);\n@@ -1796,6 +1828,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_real1_val\n \t     (ffebld_cu_val_real1 (u)), expr);\n@@ -1944,6 +1980,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_real2_val\n \t     (ffebld_cu_val_real2 (u)), expr);\n@@ -2092,6 +2132,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_real3_val\n \t     (ffebld_cu_val_real3 (u)), expr);\n@@ -2240,6 +2284,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_real4_val\n \t     (ffebld_cu_val_real4 (u)), expr);\n@@ -2398,6 +2446,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_complex1_val\n \t     (ffebld_cu_val_complex1 (u)), expr);\n@@ -2546,6 +2598,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_complex2_val\n \t     (ffebld_cu_val_complex2 (u)), expr);\n@@ -2694,6 +2750,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_complex3_val\n \t     (ffebld_cu_val_complex3 (u)), expr);\n@@ -2842,6 +2902,10 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t      break;\n \t    }\n \n+\t  /* If conversion operation is not implemented, return original expr.  */\n+\t  if (error == FFEBAD_NOCANDO)\n+\t    return expr;\n+\n \t  expr = ffebld_new_conter_with_orig\n \t    (ffebld_constant_new_complex4_val\n \t     (ffebld_cu_val_complex4 (u)), expr);"}, {"sha": "22254ef361454b6760bbf90a135267d70e3dd1ad", "filename": "gcc/f/news.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -153,6 +153,17 @@ The following information was last updated on @value{last-update-news}:\n \n @heading In @code{egcs} 1.2 (versus 1.1.2):\n @itemize @bullet\n+@ifclear USERVISONLY\n+@item\n+@code{g77} no longer generates bad code for assignments,\n+or other conversions,\n+of @code{REAL} or @code{COMPLEX} constant expressions\n+to type @code{INTEGER(KIND=2)}\n+(often referred to as @code{INTEGER*8}).\n+\n+For example, @samp{INTEGER*8 J; J = 4E10} now works as documented.\n+@end ifclear\n+\n @ifclear USERVISONLY\n @item\n Fix @code{g77} so it no longer crashes when compiling"}, {"sha": "110e38f466c510cc201ef040e0d257ed6a08dd6b", "filename": "gcc/f/target.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -989,7 +989,11 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n #define ffetarget_convert_complex1_integer1 ffetarget_convert_complex1_integer\n #define ffetarget_convert_complex1_integer2 ffetarget_convert_complex1_integer\n #define ffetarget_convert_complex1_integer3 ffetarget_convert_complex1_integer\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_complex1_integer4(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_complex1_integer4 ffetarget_convert_complex1_integer\n+#endif\n #ifdef REAL_ARITHMETIC\n #define ffetarget_convert_complex1_real1(res,l) \\\n   ((res)->real = (l), \\\n@@ -1041,7 +1045,11 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n #define ffetarget_convert_complex2_integer1 ffetarget_convert_complex2_integer\n #define ffetarget_convert_complex2_integer2 ffetarget_convert_complex2_integer\n #define ffetarget_convert_complex2_integer3 ffetarget_convert_complex2_integer\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_complex2_integer4(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_complex2_integer4 ffetarget_convert_complex2_integer\n+#endif\n #ifdef REAL_ARITHMETIC\n #define ffetarget_convert_complex2_real1(res,l) \\\n   ({ REAL_VALUE_TYPE lr; \\\n@@ -1111,10 +1119,15 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n         ffetarget_convert_integer1_typeless(res,l)\n #define ffetarget_convert_integer4_character1(res,l) \\\n         ffetarget_convert_integer1_character1(res,l)\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_integer4_complex1(res,l) FFEBAD_NOCANDO\n+#define ffetarget_convert_integer4_complex2(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_integer4_complex1(res,l) \\\n         ffetarget_convert_integer1_complex1(res,l)\n #define ffetarget_convert_integer4_complex2(res,l) \\\n         ffetarget_convert_integer1_complex2(res,l)\n+#endif\n #define ffetarget_convert_integer4_hollerith(res,l) \\\n         ffetarget_convert_integer1_hollerith(res,l)\n #define ffetarget_convert_integer4_integer1(res,l) (*(res) = (l), FFEBAD)\n@@ -1128,10 +1141,15 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n         ffetarget_convert_integer1_logical1(res,l)\n #define ffetarget_convert_integer4_logical4(res,l) \\\n         ffetarget_convert_integer1_logical1(res,l)\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_integer4_real1(res,l) FFEBAD_NOCANDO\n+#define ffetarget_convert_integer4_real2(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_integer4_real1(res,l) \\\n         ffetarget_convert_integer1_real1(res,l)\n #define ffetarget_convert_integer4_real2(res,l) \\\n         ffetarget_convert_integer1_real2(res,l)\n+#endif\n #define ffetarget_convert_integer4_typeless(res,l) \\\n         ffetarget_convert_integer1_typeless(res,l)\n #define ffetarget_convert_logical1_character1(res,l) \\\n@@ -1238,8 +1256,12 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n         ffetarget_convert_real1_integer1(res,l)\n #define ffetarget_convert_real1_integer3(res,l) \\\n         ffetarget_convert_real1_integer1(res,l)\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_real1_integer4(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_real1_integer4(res,l) \\\n         ffetarget_convert_real1_integer1(res,l)\n+#endif\n #define ffetarget_convert_real1_typeless(res,l) \\\n   ffetarget_convert_any_typeless_ ((char *) (res), sizeof(*(res)), l)\n #define ffetarget_convert_real1_complex1(res,l) (*(res) = (l).real, FFEBAD)\n@@ -1272,8 +1294,12 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n         ffetarget_convert_real2_integer1(res,l)\n #define ffetarget_convert_real2_integer3(res,l) \\\n         ffetarget_convert_real2_integer1(res,l)\n+#ifdef REAL_ARITHMETIC\n+#define ffetarget_convert_real2_integer4(res,l) FFEBAD_NOCANDO\n+#else\n #define ffetarget_convert_real2_integer4(res,l) \\\n         ffetarget_convert_real2_integer1(res,l)\n+#endif\n #define ffetarget_convert_real2_typeless(res,l) \\\n   ffetarget_convert_any_typeless_ ((char *) (res), sizeof(*(res)), l)\n #define ffetarget_convert_real2_complex1(res,l) \\"}, {"sha": "7b978f4e8885bc0ee2ec234dd261d454b1b086ab", "filename": "gcc/f/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1d0a169366f0a6ad51ab861ede472dbb79801/gcc%2Ff%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.c?ref=f8e1d0a169366f0a6ad51ab861ede472dbb79801", "patch": "@@ -1 +1 @@\n-char *ffe_version_string = \"0.5.24-19990306\";\n+char *ffe_version_string = \"0.5.24-19990313\";"}]}