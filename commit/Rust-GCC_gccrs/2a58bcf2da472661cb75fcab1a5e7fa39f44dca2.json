{"sha": "2a58bcf2da472661cb75fcab1a5e7fa39f44dca2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1OGJjZjJkYTQ3MjY2MWNiNzVmY2FiMWE1ZTdmYTM5ZjQ0ZGNhMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-05-30T16:43:11Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-05-30T16:43:11Z"}, "message": "passes.c (ipa_write_summaries): Only modify statements if body is in memory.\n\n\n\t* passes.c (ipa_write_summaries): Only modify statements if body\n\tis in memory.\n\t* cgraphunit.c (ipa_passes): Also produce intermeidate code when\n\tincrementally linking.\n\t(ipa_passes): Likewise.\n\t* lto-cgraph.c (lto_output_node): When incrementally linking do not\n\tpass down resolution info.\n\t* common.opt (flag_incremental_link): Update info.\n\t* gcc.c (plugin specs): Turn flinker-output=* to\n\t-plugin-opt=-linker-output-known\n\t* toplev.c (compile_file): Also cut compilation when doing incremental\n\tlink.\n\t* flag-types. (enum lto_partition_model): Add\n\tLTO_LINKER_OUTPUT_NOLTOREL.\n\t(invoke.texi): Add -flinker-output docs.\n\t* ipa.c (symbol_table::remove_unreachable_nodes): Handle LTO incremental\n\tlink same way as WPA; do not stream in dead initializers.\n\nFrom-SVN: r260964", "tree": {"sha": "b0fdc4b08ef33e951e37f254d986476efd591557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0fdc4b08ef33e951e37f254d986476efd591557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2/comments", "author": null, "committer": null, "parents": [{"sha": "5b42d196248425064ca9013f63510834744e169e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b42d196248425064ca9013f63510834744e169e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b42d196248425064ca9013f63510834744e169e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "eb726bfb22e558a99d2f71bb63344b21ec4abb77", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a58bcf2da472661cb75fcab1a5e7fa39f44dca2/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=2a58bcf2da472661cb75fcab1a5e7fa39f44dca2", "patch": "@@ -2406,7 +2406,9 @@ lto_output (void)\n \t\t}\n \t      decl_state = lto_new_out_decl_state ();\n \t      lto_push_out_decl_state (decl_state);\n-\t      if (gimple_has_body_p (node->decl) || !flag_wpa\n+\t      if (gimple_has_body_p (node->decl)\n+\t\t  || (!flag_wpa\n+\t\t      && flag_incremental_link != INCREMENTAL_LINK_LTO)\n \t\t  /* Thunks have no body but they may be synthetized\n \t\t     at WPA time.  */\n \t\t  || DECL_ARGUMENTS (node->decl))\n@@ -2438,7 +2440,8 @@ lto_output (void)\n \t      decl_state = lto_new_out_decl_state ();\n \t      lto_push_out_decl_state (decl_state);\n \t      if (DECL_INITIAL (node->decl) != error_mark_node\n-\t\t  || !flag_wpa)\n+\t\t  || (!flag_wpa\n+\t\t      && flag_incremental_link != INCREMENTAL_LINK_LTO))\n \t\toutput_constructor (node);\n \t      else\n \t\tcopy_function_or_variable (node);"}]}