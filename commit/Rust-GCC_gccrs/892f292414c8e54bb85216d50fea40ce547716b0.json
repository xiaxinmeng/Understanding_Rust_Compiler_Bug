{"sha": "892f292414c8e54bb85216d50fea40ce547716b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyZjI5MjQxNGM4ZTU0YmI4NTIxNmQ1MGZlYTQwY2U1NDc3MTZiMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-10T17:48:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-12-10T17:48:42Z"}, "message": "Put back typedef for gcov_working_set_t/gcov_bucket_type\n\n\t* basic-block.h (gcov_working_set_t): Put back typedef. \n\t* gcov-io.h (gcov_bucket_type): Likewise.\n\t(gcov_working_set_info, gcov_working_set_t): Likewise.\n\nFrom-SVN: r205866", "tree": {"sha": "0a2c4d505ae69dcc8a94768c93666c9982629e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2c4d505ae69dcc8a94768c93666c9982629e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/892f292414c8e54bb85216d50fea40ce547716b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892f292414c8e54bb85216d50fea40ce547716b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892f292414c8e54bb85216d50fea40ce547716b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892f292414c8e54bb85216d50fea40ce547716b0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892ae770f02d38e65904be8fa2aec71b9b50dab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892ae770f02d38e65904be8fa2aec71b9b50dab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892ae770f02d38e65904be8fa2aec71b9b50dab0"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "c59906c026269c1be8aa8f9ad49d16169dbccc39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=892f292414c8e54bb85216d50fea40ce547716b0", "patch": "@@ -1,3 +1,9 @@\n+2013-12-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* basic-block.h (gcov_working_set_t): Put back typedef. \n+\t* gcov-io.h (gcov_bucket_type): Likewise.\n+\t(gcov_working_set_info, gcov_working_set_t): Likewise.\n+\n 2013-12-10  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* cgraph.h (cgraph_node_set_iterator, varpool_node_set_iterator):"}, {"sha": "3fa319b4d4c210d987f59c0999fa6959362cbe0f", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=892f292414c8e54bb85216d50fea40ce547716b0", "patch": "@@ -939,7 +939,7 @@ extern void rtl_profile_for_edge (edge);\n extern void default_rtl_profile (void);\n \n /* In profile.c.  */\n-struct gcov_working_set_t;\n+typedef struct gcov_working_set_info gcov_working_set_t;\n extern gcov_working_set_t *find_working_set (unsigned pct_times_10);\n \n /* Check tha probability is sane.  */"}, {"sha": "fb3857d18080b600e72f0e19ec3d88c0ec9f0878", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892f292414c8e54bb85216d50fea40ce547716b0/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=892f292414c8e54bb85216d50fea40ce547716b0", "patch": "@@ -401,15 +401,15 @@ typedef unsigned HOST_WIDEST_INT gcov_type_unsigned;\n /* Structured records.  */\n \n /* Structure used for each bucket of the log2 histogram of counter values.  */\n-struct gcov_bucket_type\n+typedef struct\n {\n   /* Number of counters whose profile count falls within the bucket.  */\n   gcov_unsigned_t num_counters;\n   /* Smallest profile count included in this bucket.  */\n   gcov_type min_value;\n   /* Cumulative value of the profile counts in this bucket.  */\n   gcov_type cum_value;\n-};\n+} gcov_bucket_type;\n \n /* For a log2 scale histogram with each range split into 4\n    linear sub-ranges, there will be at most 64 (max gcov_type bit size) - 1 log2\n@@ -634,13 +634,13 @@ GCOV_LINKAGE void gcov_write_length (gcov_position_t /*position*/);\n \n /* Working set size statistics for a given percentage of the entire\n    profile (sum_all from the counter summary).  */\n-struct gcov_working_set_t\n+typedef struct gcov_working_set_info\n {\n   /* Number of hot counters included in this working set.  */\n   unsigned num_counters;\n   /* Smallest counter included in this working set.  */\n   gcov_type min_counter;\n-};\n+} gcov_working_set_t;\n \n GCOV_LINKAGE void compute_working_sets (const struct gcov_ctr_summary *summary,\n                                         gcov_working_set_t *gcov_working_sets);"}]}