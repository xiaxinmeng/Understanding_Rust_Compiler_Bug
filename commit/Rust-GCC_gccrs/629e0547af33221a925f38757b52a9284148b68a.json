{"sha": "629e0547af33221a925f38757b52a9284148b68a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI5ZTA1NDdhZjMzMjIxYTkyNWYzODc1N2I1MmE5Mjg0MTQ4YjY4YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-08T11:18:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-08T12:22:28Z"}, "message": "tree-optimization/97330 - fix bad load sinking\n\nThis fixes bad placement of sunk loads.\n\n2020-10-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97330\n\t* tree-ssa-sink.c (statement_sink_location): Avoid skipping\n\tPHIs when they dominate the insert location.\n\n\t* gcc.dg/torture/pr97330-1.c: New testcase.\n\t* gcc.dg/torture/pr97330-2.c: Likewise.", "tree": {"sha": "346ef3990a12adf0022f382cb1d920a47f5af6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346ef3990a12adf0022f382cb1d920a47f5af6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/629e0547af33221a925f38757b52a9284148b68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629e0547af33221a925f38757b52a9284148b68a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/629e0547af33221a925f38757b52a9284148b68a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629e0547af33221a925f38757b52a9284148b68a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bdf324fb33d67f0850139040df0c0390258ab38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bdf324fb33d67f0850139040df0c0390258ab38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bdf324fb33d67f0850139040df0c0390258ab38"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "7dce5bd90d40e5004c9c386adcbae6c77a5766fc", "filename": "gcc/testsuite/gcc.dg/torture/pr97330-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-1.c?ref=629e0547af33221a925f38757b52a9284148b68a", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+\n+typedef int a;\n+typedef char b;\n+int c;\n+void d(e, f, dst, g, avail, h) int e;\n+b *f, *dst;\n+a g, avail;\n+int h;\n+{\n+  b i = *f;\n+  if (e)\n+    goto j;\n+  while (avail) {\n+    *dst = i;\n+  j:\n+    avail -= c;\n+  }\n+}"}, {"sha": "a0644831cfdc1cb6b1bc8bded4b4d22513876f44", "filename": "gcc/testsuite/gcc.dg/torture/pr97330-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97330-2.c?ref=629e0547af33221a925f38757b52a9284148b68a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+int a, b, d;\n+char c, e;\n+void f(void) {\n+  char g = c;\n+  if (b)\n+    goto h;\n+  while (d) {\n+    e = c;\n+  h:\n+    d -= a;\n+  }\n+}"}, {"sha": "207aae2818aec7e67d3b89517eeb67b77e76d93c", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629e0547af33221a925f38757b52a9284148b68a/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=629e0547af33221a925f38757b52a9284148b68a", "patch": "@@ -391,8 +391,10 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n \t      if (gimple_code (use_stmt) == GIMPLE_PHI)\n \t\t{\n \t\t  /* In case the PHI node post-dominates the current insert location\n-\t\t     we can disregard it.  */\n+\t\t     we can disregard it.  But make sure it is not dominating\n+\t\t     it as well as can happen in a CFG cycle.  */\n \t\t  if (commondom != bb\n+\t\t      && !dominated_by_p (CDI_DOMINATORS, commondom, bb)\n \t\t      && dominated_by_p (CDI_POST_DOMINATORS, commondom, bb))\n \t\t    continue;\n \t\t  bb = EDGE_PRED (bb, PHI_ARG_INDEX_FROM_USE (use_p))->src;"}]}