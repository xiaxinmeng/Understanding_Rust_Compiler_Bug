{"sha": "a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwMzQ0Y2JmM2JhNzVmZDNmZjViMDg5YjQ2ZjU4ZTcwNTAyOTBlZQ==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-01-14T17:48:52Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-01-14T17:48:52Z"}, "message": "aarch64-simd.md (*aarch64_simd_ld1r<mode>): New.\n\n2013-01-14  Tejas Belagod  <tejas.belagod@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-simd.md (*aarch64_simd_ld1r<mode>): New.\n\t* config/aarch64/iterators.md (VALLDI): New.\n\ntestsuite/\n\t* gcc.target/aarch64/aarch64/vect-ld1r-compile-fp.c: New.\n\t* gcc.target/aarch64/vect-ld1r-compile.c: New.\n\t* gcc.target/aarch64/vect-ld1r-fp.c: New.\n\t* gcc.target/aarch64/vect-ld1r.c: New.\n\t* gcc.target/aarch64/vect-ld1r.x: New.\n\nFrom-SVN: r195158", "tree": {"sha": "a31593ca724cb447cd76efe385df1feb7021c59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a31593ca724cb447cd76efe385df1feb7021c59e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6f0e05240317c022d19de26508730b9b7d81299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f0e05240317c022d19de26508730b9b7d81299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f0e05240317c022d19de26508730b9b7d81299"}], "stats": {"total": 186, "additions": 186, "deletions": 0}, "files": [{"sha": "d45927c5ce593ac14ac15381928e07e3ccf5b6c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -1,3 +1,8 @@\n+2013-01-14  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (*aarch64_simd_ld1r<mode>): New. \n+\t* config/aarch64/iterators.md (VALLDI): New. \n+\n 2012-01-14  Uros Bizjak  <ubizjak@gmail.com>\n \t    Andi Kleen  <ak@linux.intel.com>\n "}, {"sha": "50297a907eae1f1a89a03351f5846356da59ec53", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -3559,3 +3559,11 @@\n   DONE;\n })\n \n+(define_insn \"*aarch64_simd_ld1r<mode>\"\n+  [(set (match_operand:VALLDI 0 \"register_operand\" \"=w\")\n+\t(vec_duplicate:VALLDI\n+\t  (match_operand:<VEL> 1 \"aarch64_simd_struct_operand\" \"Utv\")))]\n+  \"TARGET_SIMD\"\n+  \"ld1r\\\\t{%0.<Vtype>}, %1\"\n+  [(set_attr \"simd_type\" \"simd_load1r\")\n+   (set_attr \"simd_mode\" \"<MODE>\")])"}, {"sha": "3a5749440efcc398c6b0c4e9e484f646fc72faae", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -89,6 +89,9 @@\n ;; All modes.\n (define_mode_iterator VALL [V8QI V16QI V4HI V8HI V2SI V4SI V2DI V2SF V4SF V2DF])\n \n+;; All vector modes and DI.\n+(define_mode_iterator VALLDI [V8QI V16QI V4HI V8HI V2SI V4SI V2DI V2SF V4SF V2DF DI])\n+\n ;; Vector modes for Integer reduction across lanes.\n (define_mode_iterator VDQV [V8QI V16QI V4HI V8HI V4SI])\n "}, {"sha": "3d3c5cc6b25ac83c5e3d4d554865efc641937ba6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -1,3 +1,11 @@\n+2013-01-14  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/aarch64/vect-ld1r-compile-fp.c: New.\n+\t* gcc.target/aarch64/vect-ld1r-compile.c: New.\n+\t* gcc.target/aarch64/vect-ld1r-fp.c: New.\n+\t* gcc.target/aarch64/vect-ld1r.c: New.\n+\t* gcc.target/aarch64/vect-ld1r.x: New.\n+\n 2012-01-14  Andi Kleen  <ak@linux.intel.com>\n \n \tPR target/55948"}, {"sha": "66e0168557fb2be650e90f143277f3a8f219e5cf", "filename": "gcc/testsuite/gcc.target/aarch64/vect-ld1r-compile-fp.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile-fp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile-fp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile-fp.c?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-vect-cost-model\" } */\n+\n+#include \"stdint.h\"\n+#include \"vect-ld1r.x\"\n+\n+DEF (float)\n+DEF (double)\n+\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.4s\"} } */\n+/* { dg-final { scan-assembler \"ldr\\\\t\\x\\[0-9\\]+\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.2d\"} } */\n+"}, {"sha": "761777f794c5ecb93b0f4f22eba8465396e2d44c", "filename": "gcc/testsuite/gcc.target/aarch64/vect-ld1r-compile.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-compile.c?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-vect-cost-model\" } */\n+\n+#include \"stdint.h\"\n+#include \"vect-ld1r.x\"\n+\n+DEF (int8_t)\n+DEF (int16_t)\n+DEF (int32_t)\n+DEF (int64_t)\n+\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.8b\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.16b\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.4h\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.8h\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.4s\"} } */\n+/* { dg-final { scan-assembler \"ldr\\\\t\\x\\[0-9\\]+\"} } */\n+/* { dg-final { scan-assembler \"ld1r\\\\t\\{v\\[0-9\\]+\\.2d\"} } */"}, {"sha": "5e384e1bb40d0e19d89cf1018793e9b64f774523", "filename": "gcc/testsuite/gcc.target/aarch64/vect-ld1r-fp.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-fp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-fp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r-fp.c?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+extern void abort (void);\n+\n+#include \"stdint.h\"\n+#include \"vect-ld1r.x\"\n+\n+DEF (float)\n+DEF (double)\n+\n+#define FOOD(TYPE) \\\n+  foo_ ## TYPE ## _d (&a_ ## TYPE, output_ ## TYPE)\n+\n+#define FOOQ(TYPE) \\\n+  foo_ ## TYPE ## _q (&a_ ## TYPE, output_ ## TYPE)\n+\n+#define CHECKD(TYPE) \\\n+  for (i = 0; i < 8 / sizeof (TYPE); i++) \\\n+    if (output_ ## TYPE[i] != a_ ## TYPE) \\\n+      abort ()\n+\n+#define CHECKQ(TYPE) \\\n+  for (i = 0; i < 32 / sizeof (TYPE); i++) \\\n+    if (output_ ## TYPE[i] != a_ ## TYPE) \\\n+      abort ()\n+\n+#define DECL(TYPE) \\\n+  TYPE output_ ## TYPE[32]; \\\n+  TYPE a_ ## TYPE = (TYPE)12.2\n+\n+int\n+main (void)\n+{\n+\n+  DECL(float);\n+  DECL(double);\n+  int i;\n+\n+  FOOD (float);\n+  CHECKD (float);\n+  FOOQ (float);\n+  CHECKQ (float);\n+\n+  FOOD (double);\n+  CHECKD (double);\n+  FOOQ (double);\n+  CHECKQ (double);\n+\n+  return 0;\n+}"}, {"sha": "f0571de9f05597d6669368f847be1830223a5036", "filename": "gcc/testsuite/gcc.target/aarch64/vect-ld1r.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.c?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+extern void abort (void);\n+\n+#include \"stdint.h\"\n+#include \"vect-ld1r.x\"\n+\n+DEF (int8_t)\n+DEF (int16_t)\n+DEF (int32_t)\n+DEF (int64_t)\n+\n+#define FOOD(TYPE) \\\n+  foo_ ## TYPE ## _d (&a_ ## TYPE, output_ ## TYPE)\n+\n+#define FOOQ(TYPE) \\\n+  foo_ ## TYPE ## _q (&a_ ## TYPE, output_ ## TYPE)\n+\n+#define CHECKD(TYPE) \\\n+  for (i = 0; i < 8 / sizeof (TYPE); i++) \\\n+    if (output_ ## TYPE[i] != a_ ## TYPE) \\\n+      abort ()\n+\n+#define CHECKQ(TYPE) \\\n+  for (i = 0; i < 32 / sizeof (TYPE); i++) \\\n+    if (output_ ## TYPE[i] != a_ ## TYPE) \\\n+      abort ()\n+\n+#define DECL(TYPE) \\\n+  TYPE output_ ## TYPE[32]; \\\n+  TYPE a_ ## TYPE = (TYPE)12\n+\n+int\n+main (void)\n+{\n+\n+  DECL(int8_t);\n+  DECL(int16_t);\n+  DECL(int32_t);\n+  DECL(int64_t);\n+  int i;\n+\n+  FOOD (int8_t);\n+  CHECKD (int8_t);\n+  FOOQ (int8_t);\n+  CHECKQ (int8_t);\n+\n+  FOOD (int16_t);\n+  CHECKD (int16_t);\n+  FOOQ (int16_t);\n+  CHECKQ (int16_t);\n+\n+  FOOD (int32_t);\n+  CHECKD (int32_t);\n+  FOOQ (int32_t);\n+  CHECKQ (int32_t);\n+\n+  FOOD (int64_t);\n+  CHECKD (int64_t);\n+  FOOQ (int64_t);\n+  CHECKQ (int64_t);\n+\n+  return 0;\n+}"}, {"sha": "680ce434578eda3ddf2e934400a304ddd14c46d1", "filename": "gcc/testsuite/gcc.target/aarch64/vect-ld1r.x", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50344cbf3ba75fd3ff5b089b46f58e7050290ee/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-ld1r.x?ref=a50344cbf3ba75fd3ff5b089b46f58e7050290ee", "patch": "@@ -0,0 +1,15 @@\n+\n+#define DEF(TYPE) \\\n+  void \\\n+  foo_ ## TYPE ## _d (TYPE *a, TYPE *output) \\\n+  { \\\n+    int i; \\\n+    for (i = 0; i < 8 / sizeof (TYPE); i++) \\\n+      output[i] = *a; \\\n+  } \\\n+  foo_ ## TYPE ## _q (TYPE *a, TYPE *output) \\\n+  { \\\n+    int i; \\\n+    for (i = 0; i < 32 / sizeof (TYPE); i++) \\\n+      output[i] = *a; \\\n+  }"}]}