{"sha": "8b7d763c8475f15c9acaeea799a229a338db477e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3ZDc2M2M4NDc1ZjE1YzlhY2FlZWE3OTlhMjI5YTMzOGRiNDc3ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-29T13:51:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-29T13:51:16Z"}, "message": "* function.c: Remove unwanted commit.\n\nFrom-SVN: r176925", "tree": {"sha": "9b306478f863a434d6799befd4b5b13616ed21cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b306478f863a434d6799befd4b5b13616ed21cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b7d763c8475f15c9acaeea799a229a338db477e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7d763c8475f15c9acaeea799a229a338db477e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7d763c8475f15c9acaeea799a229a338db477e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7d763c8475f15c9acaeea799a229a338db477e/comments", "author": null, "committer": null, "parents": [{"sha": "dadecee2036a9656936063460299f413233b13ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadecee2036a9656936063460299f413233b13ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadecee2036a9656936063460299f413233b13ff"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "c94680c76b7233df9a0d142403686f570a2c476f", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7d763c8475f15c9acaeea799a229a338db477e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7d763c8475f15c9acaeea799a229a338db477e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=8b7d763c8475f15c9acaeea799a229a338db477e", "patch": "@@ -4570,14 +4570,9 @@ stack_protect_prologue (void)\n   tree guard_decl = targetm.stack_protect_guard ();\n   rtx x, y;\n \n-  printf (\"TESTx\\n\");\n-\n   x = expand_normal (crtl->stack_protect_guard);\n   y = expand_normal (guard_decl);\n \n-  debug_rtx (x);\n-  debug_rtx (y);\n-\n   /* Allow the target to copy from Y to X without leaking Y into a\n      register.  */\n   if (HAVE_stack_protect_set)\n@@ -4609,14 +4604,9 @@ stack_protect_epilogue (void)\n   rtx label = gen_label_rtx ();\n   rtx x, y, tmp;\n \n-  printf (\"TESTz\\n\");\n-\n   x = expand_normal (crtl->stack_protect_guard);\n   y = expand_normal (guard_decl);\n \n-  debug_rtx (x);\n-  debug_rtx (y);\n-\n   /* Allow the target to compare Y with X without leaking either into\n      a register.  */\n   switch (HAVE_stack_protect_test != 0)"}]}