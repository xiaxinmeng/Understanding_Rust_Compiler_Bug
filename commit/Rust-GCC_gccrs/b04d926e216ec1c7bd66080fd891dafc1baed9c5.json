{"sha": "b04d926e216ec1c7bd66080fd891dafc1baed9c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA0ZDkyNmUyMTZlYzFjN2JkNjYwODBmZDg5MWRhZmMxYmFlZDljNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:19:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:19:58Z"}, "message": "[multiple changes]\n\n2014-10-23  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma/Pragma_Inline & Pragma_Inline_Always):\n\tDisable analysis in GNATprove mode.\n\n2014-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* mlib-prj.adb: Remove obsolete references to libdecgnat (VMS only).\n\n2014-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Ignore style check\n\tpragmas in codepeer mode.\n\n2014-10-23  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat_rm.texi: Minor syntax fix for pragma Annotate (missing ',').\n\n2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch12.adb (Inline_Instance_Body): Alphabetize\n\tlocal variables and constants. Add constants Save_SM and Save_SMP\n\tto capture SPARK_Mode-related attributes.  Compile the inlined\n\tbody with the SPARK_Mode of the enclosing context.\n\n2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sinfo.adb (Elaboration_Boolean): Removed.\n\t(Set_Elaboration_Boolean): Removed.\n\t* sinfo.ads Remove attribute Elaboration_Boolean along with its\n\toccurrence in nodes.\n\t(Elaboration_Boolean): Removed along with pragma Inline.\n\t(Set_Elaboration_Boolean): Removed along with pragma Inline.\n\n2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Constant_Redeclaration): Make error message more\n\texplicit on a deferred constant whose object_definition is an\n\tanonymous array.\n\n2014-10-23  Vincent Celier  <celier@adacore.com>\n\n\t* gnatls.adb: Never call Targparm.Get_Target_Parameters.\n\n2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): In a generic\n\tcontext do not create a body, and only pre-analyze the expression,\n\twhich may include incomplete views.\n\nFrom-SVN: r216584", "tree": {"sha": "e96f199d4c266ea9f9630787a37a515e6d00e222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96f199d4c266ea9f9630787a37a515e6d00e222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b04d926e216ec1c7bd66080fd891dafc1baed9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04d926e216ec1c7bd66080fd891dafc1baed9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b04d926e216ec1c7bd66080fd891dafc1baed9c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04d926e216ec1c7bd66080fd891dafc1baed9c5/comments", "author": null, "committer": null, "parents": [{"sha": "3ad33e339551b0a57ffad95cd03b964f9494fc60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad33e339551b0a57ffad95cd03b964f9494fc60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad33e339551b0a57ffad95cd03b964f9494fc60"}], "stats": {"total": 230, "additions": 148, "deletions": 82}, "files": [{"sha": "43024e259aa1054b3072bae6085004710e10055b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -1,3 +1,53 @@\n+2014-10-23  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma/Pragma_Inline & Pragma_Inline_Always):\n+\tDisable analysis in GNATprove mode.\n+\n+2014-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* mlib-prj.adb: Remove obsolete references to libdecgnat (VMS only).\n+\n+2014-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Ignore style check\n+\tpragmas in codepeer mode.\n+\n+2014-10-23  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat_rm.texi: Minor syntax fix for pragma Annotate (missing ',').\n+\n+2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch12.adb (Inline_Instance_Body): Alphabetize\n+\tlocal variables and constants. Add constants Save_SM and Save_SMP\n+\tto capture SPARK_Mode-related attributes.  Compile the inlined\n+\tbody with the SPARK_Mode of the enclosing context.\n+\n+2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sinfo.adb (Elaboration_Boolean): Removed.\n+\t(Set_Elaboration_Boolean): Removed.\n+\t* sinfo.ads Remove attribute Elaboration_Boolean along with its\n+\toccurrence in nodes.\n+\t(Elaboration_Boolean): Removed along with pragma Inline.\n+\t(Set_Elaboration_Boolean): Removed along with pragma Inline.\n+\n+2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Constant_Redeclaration): Make error message more\n+\texplicit on a deferred constant whose object_definition is an\n+\tanonymous array.\n+\n+2014-10-23  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatls.adb: Never call Targparm.Get_Target_Parameters.\n+\n+2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): In a generic\n+\tcontext do not create a body, and only pre-analyze the expression,\n+\twhich may include incomplete views.\n+\n 2014-10-23  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_type.adb: Minor code reorganization (use Nkind_In, Ekind_In)."}, {"sha": "7b8b5db2a706c5a8e256475f5add0149eadbc273", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -288,10 +288,12 @@ procedure Gnat1drv is\n          Validity_Check_In_Out_Params := True;\n          Validity_Check_In_Params     := True;\n \n-         --  Turn off style check options since we are not interested in any\n-         --  front-end warnings when we are getting CodePeer output.\n+         --  Turn off style check options and ignore any style check pragmas\n+         --  since we are not interested in any front-end warnings when we are\n+         --  getting CodePeer output.\n \n          Reset_Style_Check_Options;\n+         Ignore_Style_Checks_Pragmas := True;\n \n          --  Always perform semantics and generate ali files in CodePeer mode,\n          --  so that a gnatmake -c -k will proceed further when possible."}, {"sha": "fa2d9421aaf774d942a119af9df391a2db5fba40", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -1378,7 +1378,7 @@ in the two situations.\n @noindent\n Syntax:\n @smallexample @c ada\n-pragma Annotate (IDENTIFIER [,IDENTIFIER @{, ARG@}] [entity => local_NAME]);\n+pragma Annotate (IDENTIFIER [, IDENTIFIER @{, ARG@}] [, entity => local_NAME]);\n \n ARG ::= NAME | EXPRESSION\n @end smallexample"}, {"sha": "79d9595ca50997471337a0a278f17841d07e307c", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -42,7 +42,6 @@ with Sdefault;\n with Snames;\n with Stringt;\n with Switch;      use Switch;\n-with Targparm;    use Targparm;\n with Types;       use Types;\n \n with Ada.Command_Line; use Ada.Command_Line;\n@@ -1632,13 +1631,6 @@ begin\n \n    Osint.Add_Default_Search_Dirs;\n \n-   --  Get the target parameters, but only if switch -nostdinc was not\n-   --  specified. May not be needed any more, but is harmless.\n-\n-   if not Opt.No_Stdinc then\n-      Get_Target_Parameters;\n-   end if;\n-\n    if Verbose_Mode then\n       Write_Eol;\n       Display_Version (\"GNATLS\", \"1997\");"}, {"sha": "236a636a85e0c5dfb675783f0e11dd997f8fec2b", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -1515,8 +1515,7 @@ package body MLib.Prj is\n                                           ALIs.Append (new String'(ALI_Path));\n \n                                           --  Find out if for this ALI file,\n-                                          --  libgnarl or libdecgnat is\n-                                          --  necessary.\n+                                          --  libgnarl is necessary.\n \n                                           Check_Libs (ALI_Path, True);\n                                        end if;\n@@ -2392,8 +2391,8 @@ package body MLib.Prj is\n             --  Ignore -static and -shared, since -shared will be used\n             --  in any case.\n \n-            --  Ignore -lgnat, -lgnarl and -ldecgnat as they will be added\n-            --  later, because they are also needed for non Stand-Alone shared\n+            --  Ignore -lgnat and -lgnarl as they will be added later,\n+            --  because they are also needed for non Stand-Alone shared\n             --  libraries.\n \n             --  Also ignore the shared libraries which are :\n@@ -2403,12 +2402,8 @@ package body MLib.Prj is\n \n             if Next_Line (1 .. Nlast) /= \"-static\" and then\n                Next_Line (1 .. Nlast) /= \"-shared\" and then\n-               Next_Line (1 .. Nlast) /= \"-ldecgnat\" and then\n                Next_Line (1 .. Nlast) /= \"-lgnarl\" and then\n                Next_Line (1 .. Nlast) /= \"-lgnat\" and then\n-               Next_Line\n-                 (1 .. Natural'Min (Nlast, 10 + Library_Version'Length)) /=\n-                   Shared_Lib (\"decgnat\") and then\n                Next_Line\n                  (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) /=\n                    Shared_Lib (\"gnarl\") and then"}, {"sha": "88126e428cf4da316c487b0de16fef9d07a4e023", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -4425,25 +4425,31 @@ package body Sem_Ch12 is\n       Gen_Unit : Entity_Id;\n       Act_Decl : Node_Id)\n    is\n-      Vis          : Boolean;\n-      Gen_Comp     : constant Entity_Id :=\n-                      Cunit_Entity (Get_Source_Unit (Gen_Unit));\n-      Curr_Comp    : constant Node_Id := Cunit (Current_Sem_Unit);\n-      Curr_Scope   : Entity_Id := Empty;\n-      Curr_Unit    : constant Entity_Id := Cunit_Entity (Current_Sem_Unit);\n-      Removed      : Boolean := False;\n-      Num_Scopes   : Int := 0;\n+      Curr_Comp : constant Node_Id   := Cunit (Current_Sem_Unit);\n+      Curr_Unit : constant Entity_Id := Cunit_Entity (Current_Sem_Unit);\n+      Gen_Comp  : constant Entity_Id :=\n+                    Cunit_Entity (Get_Source_Unit (Gen_Unit));\n+\n+      Save_SM  : constant SPARK_Mode_Type := SPARK_Mode;\n+      Save_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n+      --  Save all SPARK_Mode-related attributes as removing enclosing scopes\n+      --  to provide a clean environment for analysis of the inlined body will\n+      --  eliminate any previously set SPARK_Mode.\n \n       Scope_Stack_Depth : constant Int :=\n                             Scope_Stack.Last - Scope_Stack.First + 1;\n \n       Use_Clauses  : array (1 .. Scope_Stack_Depth) of Node_Id;\n       Instances    : array (1 .. Scope_Stack_Depth) of Entity_Id;\n       Inner_Scopes : array (1 .. Scope_Stack_Depth) of Entity_Id;\n+      Curr_Scope   : Entity_Id := Empty;\n       List         : Elist_Id;\n       Num_Inner    : Int := 0;\n+      Num_Scopes   : Int := 0;\n       N_Instances  : Int := 0;\n+      Removed      : Boolean := False;\n       S            : Entity_Id;\n+      Vis          : Boolean;\n \n    begin\n       --  Case of generic unit defined in another unit. We must remove the\n@@ -4574,6 +4580,10 @@ package body Sem_Ch12 is\n \n          pragma Assert (Num_Inner < Num_Scopes);\n \n+         --  The inlined package body must be analyzed with the SPARK_Mode of\n+         --  the enclosing context, otherwise the body may cause bogus errors\n+         --  if a configuration SPARK_Mode pragma in in effect.\n+\n          Push_Scope (Standard_Standard);\n          Scope_Stack.Table (Scope_Stack.Last).Is_Active_Stack_Base := True;\n          Instantiate_Package_Body\n@@ -4587,8 +4597,8 @@ package body Sem_Ch12 is\n                Version                  => Ada_Version,\n                Version_Pragma           => Ada_Version_Pragma,\n                Warnings                 => Save_Warnings,\n-               SPARK_Mode               => SPARK_Mode,\n-               SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n+               SPARK_Mode               => Save_SM,\n+               SPARK_Mode_Pragma        => Save_SMP)),\n             Inlined_Body => True);\n \n          Pop_Scope;\n@@ -4692,7 +4702,9 @@ package body Sem_Ch12 is\n             end loop;\n          end;\n \n-      --  If generic unit is in current unit, current context is correct\n+      --  If generic unit is in current unit, current context is correct. Note\n+      --  that the context is guaranteed to carry the correct SPARK_Mode as no\n+      --  enclosing scopes were removed.\n \n       else\n          Instantiate_Package_Body"}, {"sha": "e29b65ace0def3baf978f28e2d3f0b73bc4e277c", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -11751,6 +11751,20 @@ package body Sem_Ch3 is\n          Set_Full_View (Prev, Id);\n          Set_Etype (Id, Any_Type);\n \n+         --  A deferred constant whose type is an anonymous array is always\n+         --  illegal (unless imported). A detailed error message might be\n+         --  helpful for Ada beginners.\n+\n+         if Nkind (Object_Definition (Parent (Prev)))\n+            = N_Constrained_Array_Definition\n+           and then Nkind (Object_Definition (N))\n+              = N_Constrained_Array_Definition\n+         then\n+            Error_Msg_N (\"\\each anonymous array is a distinct type\", N);\n+            Error_Msg_N (\"a deferred constant must have a named type\",\n+              Object_Definition (Parent (Prev)));\n+         end if;\n+\n       elsif\n         Null_Exclusion_Present (Parent (Prev))\n           and then not Null_Exclusion_Present (N)"}, {"sha": "88e277344838cc787d9d161b1d7394344557efb2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -312,8 +312,11 @@ package body Sem_Ch6 is\n \n       --  If there are previous overloadable entities with the same name,\n       --  check whether any of them is completed by the expression function.\n+      --  In a generic context a formal subprogram has no completion.\n \n-      if Present (Prev) and then Is_Overloadable (Prev) then\n+      if Present (Prev) and then Is_Overloadable (Prev)\n+        and then not Is_Formal_Subprogram (Prev)\n+      then\n          Def_Id := Analyze_Subprogram_Specification (Spec);\n          Prev   := Find_Corresponding_Spec (N);\n       end if;\n@@ -358,7 +361,9 @@ package body Sem_Ch6 is\n       --  scope. The entity itself may be internally created if within a body\n       --  to be inlined.\n \n-      elsif Present (Prev) and then Comes_From_Source (Parent (Prev)) then\n+      elsif Present (Prev) and then Comes_From_Source (Parent (Prev))\n+        and then not Is_Formal_Subprogram (Prev)\n+      then\n          Set_Has_Completion (Prev, False);\n \n          --  An expression function that is a completion freezes the\n@@ -448,6 +453,28 @@ package body Sem_Ch6 is\n          end if;\n \n          Analyze (N);\n+\n+         --  Within a generic we only need to analyze the expression. The body\n+         --  only needs to be constructed when generating code.\n+\n+         if Inside_A_Generic then\n+            declare\n+               Id : constant Entity_Id := Defining_Entity (N);\n+               Save_In_Spec_Expression : constant Boolean\n+                  := In_Spec_Expression;\n+\n+            begin\n+               Set_Has_Completion (Id);\n+               In_Spec_Expression := True;\n+               Push_Scope (Id);\n+               Install_Formals (Id);\n+               Preanalyze_And_Resolve (Expr, Etype (Id));\n+               End_Scope;\n+               In_Spec_Expression := Save_In_Spec_Expression;\n+               return;\n+            end;\n+         end if;\n+\n          Set_Is_Inlined (Defining_Entity (N));\n \n          --  Establish the linkages between the spec and the body. These are"}, {"sha": "df8ec80b142f6380e39225334cdd8afceeb36f06", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -14894,12 +14894,21 @@ package body Sem_Prag is\n \n          when Pragma_Inline =>\n \n-            --  Inline status is Enabled if inlining option is active\n+            --  Pragma always active unless in GNATprove mode. It is disabled\n+            --  in GNATprove mode because frontend inlining is applied\n+            --  independently of pragmas Inline and Inline_Always for\n+            --  formal verification, see Can_Be_Inlined_In_GNATprove_Mode\n+            --  in inline.ads.\n \n-            if Inline_Active then\n-               Process_Inline (Enabled);\n-            else\n-               Process_Inline (Disabled);\n+            if not GNATprove_Mode then\n+\n+               --  Inline status is Enabled if inlining option is active\n+\n+               if Inline_Active then\n+                  Process_Inline (Enabled);\n+               else\n+                  Process_Inline (Disabled);\n+               end if;\n             end if;\n \n          -------------------\n@@ -14911,15 +14920,15 @@ package body Sem_Prag is\n          when Pragma_Inline_Always =>\n             GNAT_Pragma;\n \n-            --  Pragma always active unless in CodePeer mode. It is disabled\n-            --  in CodePeer mode because inlining is not helpful, and enabling\n-            --  if caused walk order issues.\n-\n-            --  Historical note: this pragma used to be disabled in GNATprove\n-            --  mode as well, but that was odd since walk order should not be\n-            --  an issue in that case.\n+            --  Pragma always active unless in CodePeer mode or GNATprove\n+            --  mode. It is disabled in CodePeer mode because inlining is\n+            --  not helpful, and enabling it caused walk order issues. It\n+            --  is disabled in GNATprove mode because frontend inlining is\n+            --  applied independently of pragmas Inline and Inline_Always for\n+            --  formal verification, see Can_Be_Inlined_In_GNATprove_Mode in\n+            --  inline.ads.\n \n-            if not CodePeer_Mode then\n+            if not CodePeer_Mode and not GNATprove_Mode then\n                Process_Inline (Enabled);\n             end if;\n "}, {"sha": "83023a48ebc3c5469e2207f5b2e8924e903c54e6", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -1041,15 +1041,6 @@ package body Sinfo is\n       return Flag4 (N);\n    end Elaborate_Present;\n \n-   function Elaboration_Boolean\n-      (N : Node_Id) return Node_Id is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Function_Specification\n-        or else NT (N).Nkind = N_Procedure_Specification);\n-      return Node2 (N);\n-   end Elaboration_Boolean;\n-\n    function Else_Actions\n       (N : Node_Id) return List_Id is\n    begin\n@@ -4248,15 +4239,6 @@ package body Sinfo is\n       Set_Flag4 (N, Val);\n    end Set_Elaborate_Present;\n \n-   procedure Set_Elaboration_Boolean\n-      (N : Node_Id; Val : Node_Id) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Function_Specification\n-        or else NT (N).Nkind = N_Procedure_Specification);\n-      Set_Node2 (N, Val);\n-   end Set_Elaboration_Boolean;\n-\n    procedure Set_Else_Actions\n       (N : Node_Id; Val : List_Id) is\n    begin"}, {"sha": "613760e15f3a02c64b1934af172a7409848dfe71", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04d926e216ec1c7bd66080fd891dafc1baed9c5/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b04d926e216ec1c7bd66080fd891dafc1baed9c5", "patch": "@@ -1123,13 +1123,6 @@ package Sinfo is\n    --    elaboration processing has determined that an Elaborate pragma is\n    --    desirable for correct elaboration for this unit.\n \n-   --  Elaboration_Boolean (Node2-Sem)\n-   --    This field is present in function and procedure specification nodes.\n-   --    If set, it points to the entity for a Boolean flag that must be tested\n-   --    for certain calls to check for access before elaboration. See body of\n-   --    Sem_Elab for further details. This field is Empty if no elaboration\n-   --    boolean is required.\n-\n    --  Else_Actions (List3-Sem)\n    --    This field is present in if expression nodes. During code\n    --    expansion we use the Insert_Actions procedure (in Exp_Util) to insert\n@@ -4895,7 +4888,6 @@ package Sinfo is\n       --  N_Function_Specification\n       --  Sloc points to FUNCTION\n       --  Defining_Unit_Name (Node1) (the designator)\n-      --  Elaboration_Boolean (Node2-Sem)\n       --  Parameter_Specifications (List3) (set to No_List if no formal part)\n       --  Null_Exclusion_Present (Flag11)\n       --  Result_Definition (Node4) for result subtype\n@@ -4906,7 +4898,6 @@ package Sinfo is\n       --  N_Procedure_Specification\n       --  Sloc points to PROCEDURE\n       --  Defining_Unit_Name (Node1)\n-      --  Elaboration_Boolean (Node2-Sem)\n       --  Parameter_Specifications (List3) (set to No_List if no formal part)\n       --  Generic_Parent (Node5-Sem)\n       --  Null_Present (Flag13) set for null procedure case (Ada 2005 feature)\n@@ -8963,9 +8954,6 @@ package Sinfo is\n    function Elaborate_Present\n      (N : Node_Id) return Boolean;    -- Flag4\n \n-   function Elaboration_Boolean\n-     (N : Node_Id) return Node_Id;    -- Node2\n-\n    function Else_Actions\n      (N : Node_Id) return List_Id;    -- List3\n \n@@ -9985,9 +9973,6 @@ package Sinfo is\n    procedure Set_Elaborate_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag4\n \n-   procedure Set_Elaboration_Boolean\n-     (N : Node_Id; Val : Node_Id);            -- Node2\n-\n    procedure Set_Else_Actions\n      (N : Node_Id; Val : List_Id);            -- List3\n \n@@ -11510,14 +11495,14 @@ package Sinfo is\n \n      N_Function_Specification =>\n        (1 => True,    --  Defining_Unit_Name (Node1)\n-        2 => False,   --  Elaboration_Boolean (Node2-Sem)\n+        2 => False,   --  unused\n         3 => True,    --  Parameter_Specifications (List3)\n         4 => True,    --  Result_Definition (Node4)\n         5 => False),  --  Generic_Parent (Node5-Sem)\n \n      N_Procedure_Specification =>\n        (1 => True,    --  Defining_Unit_Name (Node1)\n-        2 => False,   --  Elaboration_Boolean (Node2-Sem)\n+        2 => False,   --  unused\n         3 => True,    --  Parameter_Specifications (List3)\n         4 => False,   --  unused\n         5 => False),  --  Generic_Parent (Node5-Sem)\n@@ -12551,7 +12536,6 @@ package Sinfo is\n    pragma Inline (Elaborate_All_Desirable);\n    pragma Inline (Elaborate_All_Present);\n    pragma Inline (Elaborate_Desirable);\n-   pragma Inline (Elaboration_Boolean);\n    pragma Inline (Else_Actions);\n    pragma Inline (Else_Statements);\n    pragma Inline (Elsif_Parts);\n@@ -12889,7 +12873,6 @@ package Sinfo is\n    pragma Inline (Set_Elaborate_All_Present);\n    pragma Inline (Set_Elaborate_Desirable);\n    pragma Inline (Set_Elaborate_Present);\n-   pragma Inline (Set_Elaboration_Boolean);\n    pragma Inline (Set_Else_Actions);\n    pragma Inline (Set_Else_Statements);\n    pragma Inline (Set_Elsif_Parts);"}]}