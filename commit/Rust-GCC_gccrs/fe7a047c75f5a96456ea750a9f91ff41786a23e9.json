{"sha": "fe7a047c75f5a96456ea750a9f91ff41786a23e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3YTA0N2M3NWY1YTk2NDU2ZWE3NTBhOWY5MWZmNDE3ODZhMjNlOQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@tele2.fr", "date": "2008-12-09T19:12:27Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2008-12-09T19:12:27Z"}, "message": "re PR fortran/35983 (C_LOC in derived type constructor gives weird result)\n\n2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n\n\tPR fortran/35983\n\t* trans-expr.c (gfc_trans_subcomponent_assign):\n\tAdd se's pre and post blocks to current block.\n\t(gfc_trans_structure_assign): Remove specific handling\n\tof C_NULL_PTR and C_NULL_FUNPTR.\n\n2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n\n\tPR fortran/35983\n\t* gfortran.dg/pr35983.f90: New test.\n\nFrom-SVN: r142605", "tree": {"sha": "98f291a107f72f26d297b79987efe4473c0f40cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98f291a107f72f26d297b79987efe4473c0f40cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe7a047c75f5a96456ea750a9f91ff41786a23e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7a047c75f5a96456ea750a9f91ff41786a23e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7a047c75f5a96456ea750a9f91ff41786a23e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7a047c75f5a96456ea750a9f91ff41786a23e9/comments", "author": null, "committer": null, "parents": [{"sha": "b922b5ae3258177415b64a230ce49cea9ef87172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b922b5ae3258177415b64a230ce49cea9ef87172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b922b5ae3258177415b64a230ce49cea9ef87172"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "a46e79adeb1fc79cb956208297e6a7c05d8530c9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fe7a047c75f5a96456ea750a9f91ff41786a23e9", "patch": "@@ -1,3 +1,11 @@\n+2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n+\n+\tPR fortran/35983\n+\t* trans-expr.c (gfc_trans_subcomponent_assign):\n+\tAdd se's pre and post blocks to current block.\n+\t(gfc_trans_structure_assign): Remove specific handling\n+\tof C_NULL_PTR and C_NULL_FUNPTR.\n+\n 2008-12-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/38425"}, {"sha": "4ecfa0839d0da9b2301d0c4bd6b36b9892fcf72e", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fe7a047c75f5a96456ea750a9f91ff41786a23e9", "patch": "@@ -3670,8 +3670,10 @@ gfc_trans_subcomponent_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n \t{\n \t  gfc_init_se (&se, NULL);\n \t  gfc_conv_expr (&se, expr);\n+\t  gfc_add_block_to_block (&block, &se.pre);\n \t  gfc_add_modify (&block, dest,\n \t\t\t       fold_convert (TREE_TYPE (dest), se.expr));\n+\t  gfc_add_block_to_block (&block, &se.post);\n \t}\n       else\n \t{\n@@ -3713,21 +3715,8 @@ gfc_trans_structure_assign (tree dest, gfc_expr * expr)\n     {\n       /* Skip absent members in default initializers.  */\n       if (!c->expr)\n-        continue;\n+\tcontinue;\n \n-      /* Update the type/kind of the expression if it represents either\n-\t C_NULL_PTR or C_NULL_FUNPTR.  This is done here because this may\n-\t be the first place reached for initializing output variables that\n-\t have components of type C_PTR/C_FUNPTR that are initialized.  */\n-      if (c->expr->ts.type == BT_DERIVED && c->expr->ts.derived\n-\t  && c->expr->ts.derived->attr.is_iso_c)\n-        {\n-\t  c->expr->expr_type = EXPR_NULL;\n-\t  c->expr->ts.type = c->expr->ts.derived->ts.type;\n-\t  c->expr->ts.f90_type = c->expr->ts.derived->ts.f90_type;\n-\t  c->expr->ts.kind = c->expr->ts.derived->ts.kind;\n-\t}\n-      \n       field = cm->backend_decl;\n       tmp = fold_build3 (COMPONENT_REF, TREE_TYPE (field),\n \t\t\t dest, field, NULL_TREE);"}, {"sha": "bcee032920385c92235fc3f17cd28b01621160c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe7a047c75f5a96456ea750a9f91ff41786a23e9", "patch": "@@ -1,3 +1,8 @@\n+2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n+\n+\tPR fortran/35983\n+\t* gfortran.dg/pr35983.f90: New test.\n+\n 2008-12-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/38420"}, {"sha": "5cc3855029427f60970e47ba58a71871f6a9b66e", "filename": "gcc/testsuite/gfortran.dg/pr35983.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr35983.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7a047c75f5a96456ea750a9f91ff41786a23e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr35983.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr35983.f90?ref=fe7a047c75f5a96456ea750a9f91ff41786a23e9", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+!\n+! PR fortran/35983\n+! C_LOC expanded to a NULL_PTR expr if called from a structure constructor\n+!\n+! Contributed by Fran\u00e7ois-Xavier Coudert\n+\n+program main\n+   use ISO_C_BINDING\n+   implicit none\n+   type, bind(C) :: descr\n+      type(C_PTR) :: address\n+   end type descr\n+   type(descr) :: DD\n+   double precision, target :: buf(1)\n+   integer (C_INTPTR_T) :: i, j\n+\n+   buf = (/ 0 /)\n+   DD = descr(c_loc(buf))\n+   i = transfer (DD%address, 0_c_intptr_t)\n+   j = transfer (c_loc(buf), 0_c_intptr_t)\n+   if (any((/ i,j /) == 0_c_intptr_t)) call abort\n+   if (i /= j) call abort\n+end program main"}]}