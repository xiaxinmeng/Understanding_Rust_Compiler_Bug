{"sha": "1f00691e9b28370c9e9986afc46dd9f7c42024bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwMDY5MWU5YjI4MzcwYzllOTk4NmFmYzQ2ZGQ5ZjdjNDIwMjRiYw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-09-22T13:16:35Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-09-22T13:16:35Z"}, "message": "make next/prev nonnote_nondebug_insn take rtx_insn *\n\ngcc/ChangeLog:\n\n2016-09-22  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* config/cris/cris.c (cris_asm_output_case_end): Change argument\n\ttype to rtx_insn *.\n\t* emit-rtl.c (next_nonnote_nondebug_insn): Likewise.\n\t(prev_nonnote_nondebug_insn): Likewise.\n\t* config/cris/cris-protos.h: Adjust prototype.\n\t* rtl.h: Likewise.\n\t* jump.c (rtx_renumbered_equal_p): Adjust.\n\nFrom-SVN: r240360", "tree": {"sha": "d6909c3f9e76c396339eb33e04190c171dbd81db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6909c3f9e76c396339eb33e04190c171dbd81db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f00691e9b28370c9e9986afc46dd9f7c42024bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f00691e9b28370c9e9986afc46dd9f7c42024bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f00691e9b28370c9e9986afc46dd9f7c42024bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f00691e9b28370c9e9986afc46dd9f7c42024bc/comments", "author": null, "committer": null, "parents": [{"sha": "d8fd56b22635e30177b2849de33b4c6d5ef6c422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fd56b22635e30177b2849de33b4c6d5ef6c422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8fd56b22635e30177b2849de33b4c6d5ef6c422"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "658fbec2ee60a99200066cb5abc0e22ac4422e99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -1,3 +1,13 @@\n+2016-09-22  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* config/cris/cris.c (cris_asm_output_case_end): Change argument\n+\ttype to rtx_insn *.\n+\t* emit-rtl.c (next_nonnote_nondebug_insn): Likewise.\n+\t(prev_nonnote_nondebug_insn): Likewise.\n+\t* config/cris/cris-protos.h: Adjust prototype.\n+\t* rtl.h: Likewise.\n+\t* jump.c (rtx_renumbered_equal_p): Adjust.\n+\n 2016-09-22  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* emit-rtl.c (prev_real_insn): Change argument type to rtx_insn *."}, {"sha": "028c2b7120d83e4ac95d943fc6e744075e35af25", "filename": "gcc/config/cris/cris-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fconfig%2Fcris%2Fcris-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fconfig%2Fcris%2Fcris-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris-protos.h?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -44,7 +44,7 @@ extern bool cris_store_multiple_op_p (rtx);\n extern bool cris_movem_load_rest_p (rtx, int);\n extern void cris_asm_output_symbol_ref (FILE *, rtx);\n extern int cris_cfun_uses_pic_table (void);\n-extern void cris_asm_output_case_end (FILE *, int, rtx);\n+extern void cris_asm_output_case_end (FILE *, int, rtx_insn *);\n extern rtx cris_gen_movem_load (rtx, rtx, int);\n extern rtx cris_emit_movem_store (rtx, rtx, int, bool);\n extern void cris_expand_pic_call_address (rtx *, rtx *);"}, {"sha": "c909453006d5b4410be89be2bba9481f0e3423c7", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -2588,27 +2588,27 @@ cris_asm_output_ident (const char *string)\n /* The ASM_OUTPUT_CASE_END worker.  */\n \n void\n-cris_asm_output_case_end (FILE *stream, int num, rtx table)\n+cris_asm_output_case_end (FILE *stream, int num, rtx_insn *table)\n {\n   /* Step back, over the label for the table, to the actual casejump and\n      assert that we find only what's expected.  */\n-  rtx whole_jump_insn = prev_nonnote_nondebug_insn (table);\n+  rtx_insn *whole_jump_insn = prev_nonnote_nondebug_insn (table);\n   gcc_assert (whole_jump_insn != NULL_RTX && LABEL_P (whole_jump_insn));\n   whole_jump_insn = prev_nonnote_nondebug_insn (whole_jump_insn);\n   gcc_assert (whole_jump_insn != NULL_RTX\n \t      && (JUMP_P (whole_jump_insn)\n \t\t  || (TARGET_V32 && INSN_P (whole_jump_insn)\n \t\t      && GET_CODE (PATTERN (whole_jump_insn)) == SEQUENCE)));\n   /* Get the pattern of the casejump, so we can extract the default label.  */\n-  whole_jump_insn = PATTERN (whole_jump_insn);\n+  rtx whole_jump_pat = PATTERN (whole_jump_insn);\n \n   if (TARGET_V32)\n     {\n       /* This can be a SEQUENCE, meaning the delay-slot of the jump is\n \t filled.  We also output the offset word a little differently.  */\n       rtx parallel_jump\n-\t= (GET_CODE (whole_jump_insn) == SEQUENCE\n-\t   ? PATTERN (XVECEXP (whole_jump_insn, 0, 0)) : whole_jump_insn);\n+\t= (GET_CODE (whole_jump_pat) == SEQUENCE\n+\t   ? PATTERN (XVECEXP (whole_jump_pat, 0, 0)) : whole_jump_pat);\n \n       asm_fprintf (stream,\n \t\t   \"\\t.word %LL%d-.%s\\n\",\n@@ -2623,7 +2623,7 @@ cris_asm_output_case_end (FILE *stream, int num, rtx table)\n \t       \"\\t.word %LL%d-%LL%d%s\\n\",\n \t       CODE_LABEL_NUMBER (XEXP\n \t\t\t\t  (XEXP\n-\t\t\t\t   (XEXP (XVECEXP (whole_jump_insn, 0, 0), 1), \n+\t\t\t\t   (XEXP (XVECEXP (whole_jump_pat, 0, 0), 1),\n \t\t\t\t    2), 0)),\n \t       num,\n \t       (TARGET_PDEBUG ? \"; default\" : \"\"));"}, {"sha": "e4c58bebfe725ff1dbfb0a4a5cbcdff736a978d5", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -3405,10 +3405,8 @@ prev_nondebug_insn (rtx_insn *insn)\n    This routine does not look inside SEQUENCEs.  */\n \n rtx_insn *\n-next_nonnote_nondebug_insn (rtx uncast_insn)\n+next_nonnote_nondebug_insn (rtx_insn *insn)\n {\n-  rtx_insn *insn = safe_as_a <rtx_insn *> (uncast_insn);\n-\n   while (insn)\n     {\n       insn = NEXT_INSN (insn);\n@@ -3423,10 +3421,8 @@ next_nonnote_nondebug_insn (rtx uncast_insn)\n    This routine does not look inside SEQUENCEs.  */\n \n rtx_insn *\n-prev_nonnote_nondebug_insn (rtx uncast_insn)\n+prev_nonnote_nondebug_insn (rtx_insn *insn)\n {\n-  rtx_insn *insn = safe_as_a <rtx_insn *> (uncast_insn);\n-\n   while (insn)\n     {\n       insn = PREV_INSN (insn);"}, {"sha": "2164c3b8626e54cab80ede4fa9ac732cb9b5d2dc", "filename": "gcc/jump.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -1806,8 +1806,10 @@ rtx_renumbered_equal_p (const_rtx x, const_rtx y)\n \t in the same position in the instruction stream.  */\n       else\n \t{\n-\t  rtx_insn *xi = next_nonnote_nondebug_insn (LABEL_REF_LABEL (x));\n-\t  rtx_insn *yi = next_nonnote_nondebug_insn (LABEL_REF_LABEL (y));\n+\t  rtx_insn *xi = next_nonnote_nondebug_insn\n+\t    (as_a<rtx_insn *> (LABEL_REF_LABEL (x)));\n+\t  rtx_insn *yi = next_nonnote_nondebug_insn\n+\t    (as_a<rtx_insn *> (LABEL_REF_LABEL (y)));\n \t  while (xi && LABEL_P (xi))\n \t    xi = next_nonnote_nondebug_insn (xi);\n \t  while (yi && LABEL_P (yi))"}, {"sha": "4ae9a2535454cad31062e8f7b4bed82fe367d94b", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00691e9b28370c9e9986afc46dd9f7c42024bc/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=1f00691e9b28370c9e9986afc46dd9f7c42024bc", "patch": "@@ -2840,8 +2840,8 @@ extern rtx_insn *next_nonnote_insn (rtx_insn *);\n extern rtx_insn *next_nonnote_insn_bb (rtx_insn *);\n extern rtx_insn *prev_nondebug_insn (rtx_insn *);\n extern rtx_insn *next_nondebug_insn (rtx_insn *);\n-extern rtx_insn *prev_nonnote_nondebug_insn (rtx);\n-extern rtx_insn *next_nonnote_nondebug_insn (rtx);\n+extern rtx_insn *prev_nonnote_nondebug_insn (rtx_insn *);\n+extern rtx_insn *next_nonnote_nondebug_insn (rtx_insn *);\n extern rtx_insn *prev_real_insn (rtx_insn *);\n extern rtx_insn *next_real_insn (rtx);\n extern rtx_insn *prev_active_insn (rtx);"}]}