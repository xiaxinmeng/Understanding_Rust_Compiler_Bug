{"sha": "a969c1d23b142de977b07ce0d7a018fb4aab3893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2OWMxZDIzYjE0MmRlOTc3YjA3Y2UwZDdhMDE4ZmI0YWFiMzg5Mw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-01-11T13:02:43Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-01-11T13:02:43Z"}, "message": "altivec-3.C (baz, baz2): Check one component of structs at a time.\n\n\t* g++.dg/ext/altivec-3.C (baz, baz2): Check one component of structs\n\tat a time.\n\t* g++.dg/ext/altivec_check.h: Support compiling as C.\n\nFrom-SVN: r93184", "tree": {"sha": "0e932b6e792c287f435aa7e1363b97e00f26c64d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e932b6e792c287f435aa7e1363b97e00f26c64d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a969c1d23b142de977b07ce0d7a018fb4aab3893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a969c1d23b142de977b07ce0d7a018fb4aab3893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a969c1d23b142de977b07ce0d7a018fb4aab3893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a969c1d23b142de977b07ce0d7a018fb4aab3893/comments", "author": null, "committer": null, "parents": [{"sha": "464b277ba2697cc48d75cc5a343f4209338291d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464b277ba2697cc48d75cc5a343f4209338291d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/464b277ba2697cc48d75cc5a343f4209338291d5"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "a28010510cfc76f3703bf58cd724f2bb8a61eaa5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a969c1d23b142de977b07ce0d7a018fb4aab3893", "patch": "@@ -1,3 +1,9 @@\n+2005-01-11  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* g++.dg/ext/altivec-3.C (baz, baz2): Check one component of structs\n+\tat a time.\n+\t* g++.dg/ext/altivec_check.h: Support compiling as C.\n+\n 2005-01-10  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c++/19355"}, {"sha": "f2812fc91a1590aed6a1186e29855901c6d7460e", "filename": "gcc/testsuite/g++.dg/ext/altivec-3.C", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C?ref=a969c1d23b142de977b07ce0d7a018fb4aab3893", "patch": "@@ -75,11 +75,15 @@ void baz (int i, ... )\n       \n     CHECK_INVARIANT (vec_all_eq (v_i, v_g));\n     CHECK_INVARIANT (j == i_1);\n-    CHECK_INVARIANT (vx.x == vx_g.x && vec_all_eq(vx.v, vx_g.v) && vx.y == vx_g.y);\n+    CHECK_INVARIANT (vx.x == vx_g.x);\n+    CHECK_INVARIANT (vec_all_eq (vx.v, vx_g.v));\n+    CHECK_INVARIANT (vx.y == vx_g.y);\n     CHECK_INVARIANT (k == i_1);\n     CHECK_INVARIANT (vec_all_eq (v2_i, v2_g));\n     CHECK_INVARIANT (l == i_1);\n-    CHECK_INVARIANT (vx2.x == vx2_g.x && vec_all_eq(vx2.v, vx2_g.v) && vx2.y == vx2_g.y);\n+    CHECK_INVARIANT (vx2.x == vx2_g.x);\n+    CHECK_INVARIANT (vec_all_eq (vx2.v, vx2_g.v));\n+    CHECK_INVARIANT (vx2.y == vx2_g.y);\n }\n \n void quux (int i, ... )\n@@ -110,7 +114,9 @@ void baz2 (int i, ... )\n     va_end(ap);\n     vxi.v = vx.v;\n \n-    CHECK_INVARIANT (vx.x == vx_g.x && vec_all_eq(vx.v, vx_g.v) && vx.y == vx_g.y);\n+    CHECK_INVARIANT (vx.x == vx_g.x);\n+    CHECK_INVARIANT (vec_all_eq (vx.v, vx_g.v));\n+    CHECK_INVARIANT (vx.y == vx_g.y);\n     CHECK_INVARIANT (vec_all_eq (vxi.v, vx_g.v));\n }\n "}, {"sha": "9e8b3f78ac2b9a72d7e5adfd1ca5e8b901410de8", "filename": "gcc/testsuite/g++.dg/ext/altivec_check.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec_check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a969c1d23b142de977b07ce0d7a018fb4aab3893/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec_check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec_check.h?ref=a969c1d23b142de977b07ce0d7a018fb4aab3893", "patch": "@@ -2,7 +2,11 @@\n /* Contributed by Ziemowit Laski  <zlaski@apple.com>  */\n \n #include <signal.h>\n-extern \"C\" void exit(int);\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+void exit(int);\n \n void \n sig_ill_handler (int sig)"}]}