{"sha": "15923c25df505b21061fda148dcb2b036af4735a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5MjNjMjVkZjUwNWIyMTA2MWZkYTE0OGRjYjJiMDM2YWY0NzM1YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-07-04T17:19:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-07-04T17:19:52Z"}, "message": "re PR debug/49602 (verify_ssa failed (definition does not dominate use) with \"-O2 -g\")\n\n\tPR debug/49602\n\t* tree-into-ssa.c (rewrite_debug_stmt_uses): Disregard\n\tget_current_def return value if it can't be trusted to be\n\tthe current value of the variable in the current bb.\n\n\t* gcc.dg/pr49602.c: New test.\n\nFrom-SVN: r175818", "tree": {"sha": "923ee6bb7c94810daeb4d2239aece6bc1e8b8edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923ee6bb7c94810daeb4d2239aece6bc1e8b8edd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15923c25df505b21061fda148dcb2b036af4735a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15923c25df505b21061fda148dcb2b036af4735a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15923c25df505b21061fda148dcb2b036af4735a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15923c25df505b21061fda148dcb2b036af4735a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d5e0c1bf0e68323091e3f3152ad4676cd59e53d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5e0c1bf0e68323091e3f3152ad4676cd59e53d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d5e0c1bf0e68323091e3f3152ad4676cd59e53d"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "0823aa84fe02219c4ec6ca25b9a73df28f6fa1cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15923c25df505b21061fda148dcb2b036af4735a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15923c25df505b21061fda148dcb2b036af4735a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15923c25df505b21061fda148dcb2b036af4735a", "patch": "@@ -1,3 +1,10 @@\n+2011-07-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/49602\n+\t* tree-into-ssa.c (rewrite_debug_stmt_uses): Disregard\n+\tget_current_def return value if it can't be trusted to be\n+\tthe current value of the variable in the current bb.\n+\n 2011-07-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/49600"}, {"sha": "5a7d801c377e4564c354f5dd804d34f8ddf7ac86", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15923c25df505b21061fda148dcb2b036af4735a", "patch": "@@ -1,3 +1,8 @@\n+2011-07-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/49602\n+\t* gcc.dg/pr49602.c: New test.\n+\n 2011-07-04  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \tPR target/34734"}, {"sha": "bb8eeb0c3320fe0bf6255b7bbb6980de1c9ef3d7", "filename": "gcc/testsuite/gcc.dg/pr49602.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49602.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49602.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49602.c?ref=15923c25df505b21061fda148dcb2b036af4735a", "patch": "@@ -0,0 +1,17 @@\n+/* PR debug/49602 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2\" } */\n+\n+static void\n+foo (int *x)\n+{\n+}\n+\n+void\n+bar (int *x)\n+{\n+  int i;\n+  for (i = 0; i == 1; ++i)\n+    x = 0;\n+  foo (x);\n+}"}, {"sha": "5fd34455df4092d090e830f9e3444bc0a276e40b", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15923c25df505b21061fda148dcb2b036af4735a/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=15923c25df505b21061fda148dcb2b036af4735a", "patch": "@@ -1343,7 +1343,41 @@ rewrite_debug_stmt_uses (gimple stmt)\n \t    }\n \t}\n       else\n-\tdef = get_current_def (var);\n+\t{\n+\t  def = get_current_def (var);\n+\t  /* Check if get_current_def can be trusted.  */\n+\t  if (def)\n+\t    {\n+\t      basic_block bb = gimple_bb (stmt);\n+\t      basic_block def_bb\n+\t\t= SSA_NAME_IS_DEFAULT_DEF (def)\n+\t\t  ? NULL : gimple_bb (SSA_NAME_DEF_STMT (def));\n+\n+\t      /* If definition is in current bb, it is fine.  */\n+\t      if (bb == def_bb)\n+\t\t;\n+\t      /* If definition bb doesn't dominate the current bb,\n+\t\t it can't be used.  */\n+\t      else if (def_bb && !dominated_by_p (CDI_DOMINATORS, bb, def_bb))\n+\t\tdef = NULL;\n+\t      /* If there is just one definition and dominates the current\n+\t\t bb, it is fine.  */\n+\t      else if (get_phi_state (var) == NEED_PHI_STATE_NO)\n+\t\t;\n+\t      else\n+\t\t{\n+\t\t  struct def_blocks_d *db_p = get_def_blocks_for (var);\n+\n+\t\t  /* If there are some non-debug uses in the current bb,\n+\t\t     it is fine.  */\n+\t\t  if (bitmap_bit_p (db_p->livein_blocks, bb->index))\n+\t\t    ;\n+\t\t  /* Otherwise give up for now.  */\n+\t\t  else\n+\t\t    def = NULL;\n+\t\t}\n+\t    }\n+\t}\n       if (def == NULL)\n \t{\n \t  gimple_debug_bind_reset_value (stmt);"}]}