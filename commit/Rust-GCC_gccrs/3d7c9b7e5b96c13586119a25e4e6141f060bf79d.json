{"sha": "3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3YzliN2U1Yjk2YzEzNTg2MTE5YTI1ZTRlNjE0MWYwNjBiZjc5ZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@merlin.codesourcery.com", "date": "2001-02-23T17:28:25Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-02-23T17:28:25Z"}, "message": "diagnostic.c (output_to_stream): Rename to output_buffer_to_stream.\n\n\t* diagnostic.c (output_to_stream): Rename to\n\toutput_buffer_to_stream. Loses the stream parameter.\n\t(init_output_buffer): Set diagnosic_buffer's stream.\n\t(flush_diagnostic_buffer): Adjust.\n\t(default_print_error_function): Likewise.\n\t(finish_diagnostic): Likewise.\n\t(verbatim): Likewise.\n\n\t* diagnostic.h (struct output_buffer): Add `stream' field.\n\t(output_buffer_attached_stream): New macro.\n\nFrom-SVN: r39999", "tree": {"sha": "7b39cf093a88c1aec0218061f4a7916c30cf1fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b39cf093a88c1aec0218061f4a7916c30cf1fe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/comments", "author": null, "committer": null, "parents": [{"sha": "fba2c0cdbcf92d860a2acd8a2667a68b723dc8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba2c0cdbcf92d860a2acd8a2667a68b723dc8c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba2c0cdbcf92d860a2acd8a2667a68b723dc8c0"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "e87303d23e7c958880621000151c7a198b099454", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "patch": "@@ -1,3 +1,16 @@\n+2001-02-23  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\t* diagnostic.c (output_to_stream): Rename to\n+\toutput_buffer_to_stream. Loses the stream parameter.\n+\t(init_output_buffer): Set diagnosic_buffer's stream.\n+\t(flush_diagnostic_buffer): Adjust.\n+\t(default_print_error_function): Likewise.\n+\t(finish_diagnostic): Likewise.\n+\t(verbatim): Likewise.\n+\n+\t* diagnostic.h (struct output_buffer): Add `stream' field.\n+\t(output_buffer_attached_stream): New macro.\n+\n 2001-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* fold-const.c (extract_muldiv) [case PLUS_EXPR]: If not MULT_EXPR,"}, {"sha": "24aa348941244f70f6b4ddb799128e60212ed65d", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "patch": "@@ -65,7 +65,7 @@ Boston, MA 02111-1307, USA.  */\n static void finish_diagnostic PARAMS ((void));\n static void output_do_verbatim PARAMS ((output_buffer *,\n                                         const char *, va_list *));\n-static void output_to_stream PARAMS ((output_buffer *, FILE *));\n+static void output_buffer_to_stream PARAMS ((output_buffer *));\n static void output_format PARAMS ((output_buffer *));\n static void output_indent PARAMS ((output_buffer *));\n \n@@ -340,6 +340,7 @@ init_output_buffer (buffer, prefix, maximum_length)\n {\n   memset (buffer, 0, sizeof (output_buffer));\n   obstack_init (&buffer->obstack);\n+  output_buffer_attached_stream (buffer) = stderr;\n   ideal_line_wrap_cutoff (buffer) = maximum_length;\n   prefixing_policy (buffer) = current_prefixing_rule;\n   output_set_prefix (buffer, prefix);\n@@ -393,8 +394,8 @@ output_finalize_message (buffer)\n void\n flush_diagnostic_buffer ()\n {\n-  output_to_stream (diagnostic_buffer, stderr);\n-  fflush (stderr);\n+  output_buffer_to_stream (diagnostic_buffer);\n+  fflush (output_buffer_attached_stream (diagnostic_buffer));\n }\n \n /* Return the amount of characters BUFFER can accept to\n@@ -654,15 +655,15 @@ output_add_string (buffer, str)\n   maybe_wrap_text (buffer, str, str + (str ? strlen (str) : 0));\n }\n \n-/* Flush the content of BUFFER onto FILE and reinitialize BUFFER.  */\n+/* Flush the content of BUFFER onto the attached stream,\n+   and reinitialize.  */\n \n static void\n-output_to_stream (buffer, file)\n+output_buffer_to_stream (buffer)\n      output_buffer *buffer;\n-     FILE *file;\n {\n   const char *text = output_finalize_message (buffer);\n-  fputs (text, file);\n+  fputs (text, output_buffer_attached_stream (buffer));\n   output_clear_message_text (buffer);\n }\n \n@@ -1294,7 +1295,7 @@ default_print_error_function (file)\n       output_add_newline (diagnostic_buffer);\n \n       record_last_error_function ();\n-      output_to_stream (diagnostic_buffer, stderr);\n+      output_buffer_to_stream (diagnostic_buffer);\n       output_buffer_state (diagnostic_buffer) = os;\n       free ((char*) prefix);\n     }\n@@ -1600,10 +1601,10 @@ warning VPARAMS ((const char *msgid, ...))\n static void\n finish_diagnostic ()\n {\n-  output_to_stream (diagnostic_buffer, stderr);\n+  output_buffer_to_stream (diagnostic_buffer);\n   clear_diagnostic_info (diagnostic_buffer);\n-  fputc ('\\n', stderr);\n-  fflush (stderr);\n+  fputc ('\\n', output_buffer_attached_stream (diagnostic_buffer));\n+  fflush (output_buffer_attached_stream (diagnostic_buffer));\n }\n \n /* Helper subroutine of output_verbatim and verbatim. Do the approriate\n@@ -1662,7 +1663,7 @@ verbatim VPARAMS ((const char *msg, ...))\n   msg = va_arg (ap, const char *);\n #endif\n   output_do_verbatim (diagnostic_buffer, msg, &ap);\n-  output_to_stream (diagnostic_buffer, stderr);\n+  output_buffer_to_stream (diagnostic_buffer);\n   va_end (ap);\n }\n "}, {"sha": "eb7594e16fcc80654d530d6f2ee37144941d3b3c", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7c9b7e5b96c13586119a25e4e6141f060bf79d/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=3d7c9b7e5b96c13586119a25e4e6141f060bf79d", "patch": "@@ -80,6 +80,8 @@ struct output_buffer\n   /* Internal data.  These fields should not be accessed directly by\n      front-ends.  */\n \n+  /* Where to output formatted text.  */\n+  FILE* stream;\n   /* The obstack where the text is built up.  */  \n   struct obstack obstack;\n   /* The amount of characters output so far.  */  \n@@ -88,6 +90,7 @@ struct output_buffer\n   output_state state;\n };\n \n+#define output_buffer_attached_stream(BUFFER) (BUFFER)->stream\n #define output_buffer_text_cursor(BUFFER) (BUFFER)->state.cursor\n #define output_buffer_format_args(BUFFER) *((BUFFER)->state.format_args)\n #define output_needs_newline(BUFFER) (BUFFER)->state.need_newline_p"}]}