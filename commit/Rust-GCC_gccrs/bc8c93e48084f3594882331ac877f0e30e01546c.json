{"sha": "bc8c93e48084f3594882331ac877f0e30e01546c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4YzkzZTQ4MDg0ZjM1OTQ4ODIzMzFhYzg3N2YwZTMwZTAxNTQ2Yw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-11-15T00:26:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-11-15T00:26:51Z"}, "message": "h8300.c (dosize): Don't clobber the static chain register if it's needed by the current function.\n\n        * h8300/h8300.c (dosize): Don't clobber the static chain\n        register if it's needed by the current function.\n\nFrom-SVN: r13158", "tree": {"sha": "a45aae65c11618a7f58bec550754530f9a35e69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45aae65c11618a7f58bec550754530f9a35e69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8c93e48084f3594882331ac877f0e30e01546c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8c93e48084f3594882331ac877f0e30e01546c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8c93e48084f3594882331ac877f0e30e01546c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8c93e48084f3594882331ac877f0e30e01546c/comments", "author": null, "committer": null, "parents": [{"sha": "8762df168991b646310a3a2839ebafafc9d4a802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8762df168991b646310a3a2839ebafafc9d4a802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8762df168991b646310a3a2839ebafafc9d4a802"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "a8f973606e73084d83a06e8024ab1a155dcf002c", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8c93e48084f3594882331ac877f0e30e01546c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8c93e48084f3594882331ac877f0e30e01546c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=bc8c93e48084f3594882331ac877f0e30e01546c", "patch": "@@ -170,7 +170,27 @@ dosize (file, op, size)\n       break;\n     default:\n       if (TARGET_H8300)\n-\tfprintf (file, \"\\tmov.w\\t#%d,r3\\n\\t%s.w\\tr3,sp\\n\", size, op);\n+\t{\n+\t  if (current_function_needs_context\n+\t      && strcmp (op, \"sub\") == 0)\n+\t    {\n+\t      /* Egad.  We don't have a temporary to hold the\n+\t\t size of the frame in the prologue!  Just inline\n+\t\t the bastard since this shouldn't happen often.  */\n+\t      while (size >= 2)\n+\t\t{\n+\t\t  fprintf (file, \"\\tsubs\\t#2,sp\\n\");\n+\t\t  size -= 2;\n+\t\t}\n+\n+\t      if (size)\n+\t\tfprintf (file, \"\\tsubs\\t#1,sp\\n\");\n+\n+\t      size = 0;\n+\t    }\n+\t  else\n+\t    fprintf (file, \"\\tmov.w\\t#%d,r3\\n\\t%s.w\\tr3,sp\\n\", size, op);\n+\t}\n       else\n \tfprintf (file, \"\\t%s\\t#%d,sp\\n\", op, size);\n       size = 0;"}]}