{"sha": "2ca08953848815c505cc930f1127564f0ed60056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhMDg5NTM4NDg4MTVjNTA1Y2M5MzBmMTEyNzU2NGYwZWQ2MDA1Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-03-22T20:13:43Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-03-22T20:13:43Z"}, "message": "vterminate.cc: Format, -fno-exceptions cleanup.\n\n\n2002-03-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* src/vterminate.cc: Format, -fno-exceptions cleanup.\n\nFrom-SVN: r51185", "tree": {"sha": "ea75ac04b13e5bfff77b8de260446036d96605e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea75ac04b13e5bfff77b8de260446036d96605e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca08953848815c505cc930f1127564f0ed60056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca08953848815c505cc930f1127564f0ed60056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca08953848815c505cc930f1127564f0ed60056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca08953848815c505cc930f1127564f0ed60056/comments", "author": null, "committer": null, "parents": [{"sha": "70e0ccd0a04d6d517298264ad94822169d3958b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e0ccd0a04d6d517298264ad94822169d3958b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e0ccd0a04d6d517298264ad94822169d3958b1"}], "stats": {"total": 82, "additions": 44, "deletions": 38}, "files": [{"sha": "b910f5bb2e6b41e7192b7f7a62a9cc6b83f0f357", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca08953848815c505cc930f1127564f0ed60056/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca08953848815c505cc930f1127564f0ed60056/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2ca08953848815c505cc930f1127564f0ed60056", "patch": "@@ -1,3 +1,7 @@\n+2002-03-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* src/vterminate.cc: Format, -fno-exceptions cleanup.\n+\n 2002-03-21  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_3): New."}, {"sha": "9475d1ad6fd0e888c8660613c830d84ca0037ffd", "filename": "libstdc++-v3/src/vterminate.cc", "status": "modified", "additions": 40, "deletions": 38, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca08953848815c505cc930f1127564f0ed60056/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca08953848815c505cc930f1127564f0ed60056/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc?ref=2ca08953848815c505cc930f1127564f0ed60056", "patch": "@@ -1,6 +1,6 @@\n // Verbose terminate_handler -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation\n+// Copyright (C) 2001, 2002 Free Software Foundation\n //\n // This file is part of GNU CC.\n //\n@@ -28,56 +28,58 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <exception>\n #include <cstdlib>\n #include <cstdio>\n+#include <exception>\n+#include <exception_defines.h>\n #include <cxxabi.h>\n \n using namespace std;\n using namespace abi;\n \n namespace __gnu_cxx\n {\n-\n-/* A replacement for the standard terminate_handler which prints\n-   more information about the terminating exception (if any) on stderr.  */\n-void __verbose_terminate_handler ()\n-{\n-  // Make sure there was an exception; terminate is also called for an\n-  // attempt to rethrow when there is no suitable exception.\n-  type_info *t = __cxa_current_exception_type ();\n-  if (t)\n-    {\n-      char const *name = t->name ();\n-      // Note that \"name\" is the mangled name.\n-\n+  /* A replacement for the standard terminate_handler which prints\n+   more information about the terminating exception (if any) on\n+   stderr.  */\n+  void __verbose_terminate_handler()\n+  {\n+    // Make sure there was an exception; terminate is also called for an\n+    // attempt to rethrow when there is no suitable exception.\n+    type_info *t = __cxa_current_exception_type();\n+    if (t)\n       {\n-\tint status = -1;\n-\tchar *dem = 0;\n-\n+\tchar const *name = t->name();\n+\t// Note that \"name\" is the mangled name.\n+\t\n+\t{\n+\t  int status = -1;\n+\t  char *dem = 0;\n+\t  \n #if 0\n-\t// Disabled until __cxa_demangle gets the runtime GPL exception.\n-\tdem = __cxa_demangle (name, 0, 0, &status);\n+\t  // Disabled until __cxa_demangle gets the runtime GPL exception.\n+\t  dem = __cxa_demangle(name, 0, 0, &status);\n #endif\n \n-\tprintf (\"terminate called after throwing a `%s'\\n\",\n-\t\tstatus == 0 ? dem : name);\n+\t  printf(\"terminate called after throwing a `%s'\\n\", \n+\t\t status == 0 ? dem : name);\n \n-\tif (status == 0)\n-\t  free (dem);\n-      }\n-\n-      // If the exception is derived from std::exception, we can give more\n-      // information.\n-      try { throw; }\n-      catch (exception &exc)\n-\t{ fprintf (stderr, \"  what(): %s\\n\", exc.what()); }\n-      catch (...) { }\n-    }\n-  else\n-    fprintf (stderr, \"terminate called without an active exception\\n\");\n-\n-  abort ();\n-}\n+\t  if (status == 0)\n+\t    free(dem);\n+\t}\n \n+\t// If the exception is derived from std::exception, we can give more\n+\t// information.\n+\ttry { __throw_exception_again; }\n+#ifdef __EXCEPTIONS\n+\tcatch (exception &exc)\n+\t  { fprintf(stderr, \"  what(): %s\\n\", exc.what()); }\n+#endif\n+\tcatch (...) { }\n+      }\n+    else\n+      fprintf(stderr, \"terminate called without an active exception\\n\");\n+    \n+    abort();\n+  }\n } // namespace __gnu_cxx"}]}