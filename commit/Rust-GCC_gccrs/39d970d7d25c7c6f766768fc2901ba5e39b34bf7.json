{"sha": "39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkOTcwZDdkMjVjN2M2Zjc2Njc2OGZjMjkwMWJhNWUzOWIzNGJmNw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2017-07-29T01:38:00Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2017-07-29T01:38:00Z"}, "message": "use c++ instead of _stat for copy_node_stat\n\ngcc/cp/ChangeLog:\n\n2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* lex.c (copy_decl): Adjust.\n\t(copy_type): Likewise.\n\ngcc/ChangeLog:\n\n2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree.c (copy_node_stat): Rename to copy_node.\n\t(build_distinct_type_copy): Adjust.\n\t* tree.h (copy_node_stat): Adjust prototype.\n\t(copy_node): Remove macro.\n\nFrom-SVN: r250695", "tree": {"sha": "9a5b23425450ed90691bdf724ee60855798e4c00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a5b23425450ed90691bdf724ee60855798e4c00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/comments", "author": null, "committer": null, "parents": [{"sha": "f719e2f1d7675d997fda88be87f65e350d563bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f719e2f1d7675d997fda88be87f65e350d563bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f719e2f1d7675d997fda88be87f65e350d563bc3"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "1e7c2b8d8df58e9b2acc9927e1f8af50a349a411", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "patch": "@@ -1,3 +1,10 @@\n+2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree.c (copy_node_stat): Rename to copy_node.\n+\t(build_distinct_type_copy): Adjust.\n+\t* tree.h (copy_node_stat): Adjust prototype.\n+\t(copy_node): Remove macro.\n+\n 2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* tree.c (make_node_stat): rename to make_node."}, {"sha": "806235fcd75353e2a29e394e3c282bbab1d98e8c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "patch": "@@ -1,3 +1,8 @@\n+2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* lex.c (copy_decl): Adjust.\n+\t(copy_type): Likewise.\n+\n 2017-07-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71570"}, {"sha": "097fbb547d2c49d8c7ab4e73d19f97d7222ca1e2", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "patch": "@@ -766,7 +766,7 @@ copy_decl (tree decl MEM_STAT_DECL)\n {\n   tree copy;\n \n-  copy = copy_node_stat (decl PASS_MEM_STAT);\n+  copy = copy_node (decl PASS_MEM_STAT);\n   cxx_dup_lang_specific_decl (copy);\n   return copy;\n }\n@@ -799,7 +799,7 @@ copy_type (tree type MEM_STAT_DECL)\n {\n   tree copy;\n \n-  copy = copy_node_stat (type PASS_MEM_STAT);\n+  copy = copy_node (type PASS_MEM_STAT);\n   copy_lang_type (copy);\n   return copy;\n }"}, {"sha": "1bd4cfcc1d5c15d27a170277d6bad5cdfa5a187b", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "patch": "@@ -1128,7 +1128,7 @@ free_node (tree node)\n    TREE_CHAIN, if it has one, is zero and it has a fresh uid.  */\n \n tree\n-copy_node_stat (tree node MEM_STAT_DECL)\n+copy_node (tree node MEM_STAT_DECL)\n {\n   tree t;\n   enum tree_code code = TREE_CODE (node);\n@@ -6684,7 +6684,7 @@ build_aligned_type (tree type, unsigned int align)\n tree\n build_distinct_type_copy (tree type MEM_STAT_DECL)\n {\n-  tree t = copy_node_stat (type PASS_MEM_STAT);\n+  tree t = copy_node (type PASS_MEM_STAT);\n \n   TYPE_POINTER_TO (t) = 0;\n   TYPE_REFERENCE_TO (t) = 0;"}, {"sha": "64bc369c239eba6a9c6bb0a9c305b08811de1085", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d970d7d25c7c6f766768fc2901ba5e39b34bf7/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=39d970d7d25c7c6f766768fc2901ba5e39b34bf7", "patch": "@@ -3897,8 +3897,7 @@ extern void free_node (tree);\n \n /* Make a copy of a node, with all the same contents.  */\n \n-extern tree copy_node_stat (tree MEM_STAT_DECL);\n-#define copy_node(t) copy_node_stat (t MEM_STAT_INFO)\n+extern tree copy_node (tree CXX_MEM_STAT_INFO);\n \n /* Make a copy of a chain of TREE_LIST nodes.  */\n "}]}