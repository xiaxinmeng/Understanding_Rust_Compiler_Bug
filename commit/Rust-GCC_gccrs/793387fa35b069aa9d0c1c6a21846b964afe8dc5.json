{"sha": "793387fa35b069aa9d0c1c6a21846b964afe8dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzMzg3ZmEzNWIwNjlhYTlkMGMxYzZhMjE4NDZiOTY0YWZlOGRjNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-09T23:14:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-09T23:14:06Z"}, "message": "inclhack.def (hpux8_bogus_inlines): Bypass on __GNUG__.\n\n\t* inclhack.def (hpux8_bogus_inlines): Bypass on __GNUG__.\n\t(int_abort_free_and_exit, sun_malloc, sysv68_string): Bypass on\n\t_CLASSIC_ANSI_TYPES.\n\t(sun_auth_proto): Bypass on __cplusplus.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r90371", "tree": {"sha": "7c77608c22687ddb1d832e0b816a6be1f27c4888", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c77608c22687ddb1d832e0b816a6be1f27c4888"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/793387fa35b069aa9d0c1c6a21846b964afe8dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793387fa35b069aa9d0c1c6a21846b964afe8dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793387fa35b069aa9d0c1c6a21846b964afe8dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793387fa35b069aa9d0c1c6a21846b964afe8dc5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdf87ecb60ea10a9ad40d41477849ab385d075d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf87ecb60ea10a9ad40d41477849ab385d075d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf87ecb60ea10a9ad40d41477849ab385d075d5"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "6922cd6cd7e4fc12f49bcd59b1c0ce9f8ea2d625", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=793387fa35b069aa9d0c1c6a21846b964afe8dc5", "patch": "@@ -1,3 +1,11 @@\n+2004-11-09  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* inclhack.def (hpux8_bogus_inlines): Bypass on __GNUG__.\n+\t(int_abort_free_and_exit, sun_malloc, sysv68_string): Bypass on\n+\t_CLASSIC_ANSI_TYPES.\n+\t(sun_auth_proto): Bypass on __cplusplus.\n+\t* fixincl.x: Regenerate.\n+\n 2004-11-05  Geoffrey Keating  <geoffk@apple.com>\n \n \t* Makefile.in (mostlyclean): Add fixinc.sh."}, {"sha": "95206e36c090b83b1b3aefb7cc26721512b6f48c", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 47, "deletions": 10, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=793387fa35b069aa9d0c1c6a21846b964afe8dc5", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Friday October 29, 2004 at 02:26:49 PM PDT\n+ * It has been AutoGen-ed  Tuesday November  9, 2004 at 11:12:40 PM UTC\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Fri Oct 29 14:26:49 PDT 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Nov  9 23:12:40 UTC 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -2547,8 +2547,15 @@ tSCC zHpux8_Bogus_InlinesList[] =\n tSCC zHpux8_Bogus_InlinesSelect0[] =\n        \"inline\";\n \n-#define    HPUX8_BOGUS_INLINES_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zHpux8_Bogus_InlinesBypass0[] =\n+       \"__GNUG__\";\n+\n+#define    HPUX8_BOGUS_INLINES_TEST_CT  2\n static tTestDesc aHpux8_Bogus_InlinesTests[] = {\n+  { TT_NEGREP,   zHpux8_Bogus_InlinesBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zHpux8_Bogus_InlinesSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -2748,8 +2755,15 @@ tSCC zInt_Abort_Free_And_ExitList[] =\n tSCC zInt_Abort_Free_And_ExitSelect0[] =\n        \"int[ \\t]+(abort|free|exit)[ \\t]*\\\\(\";\n \n-#define    INT_ABORT_FREE_AND_EXIT_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zInt_Abort_Free_And_ExitBypass0[] =\n+       \"_CLASSIC_ANSI_TYPES\";\n+\n+#define    INT_ABORT_FREE_AND_EXIT_TEST_CT  2\n static tTestDesc aInt_Abort_Free_And_ExitTests[] = {\n+  { TT_NEGREP,   zInt_Abort_Free_And_ExitBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zInt_Abort_Free_And_ExitSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -5238,8 +5252,15 @@ tSCC zSun_Auth_ProtoList[] =\n tSCC zSun_Auth_ProtoSelect0[] =\n        \"\\\\(\\\\*[a-z][a-z_]*\\\\)\\\\(\\\\)\";\n \n-#define    SUN_AUTH_PROTO_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSun_Auth_ProtoBypass0[] =\n+       \"__cplusplus\";\n+\n+#define    SUN_AUTH_PROTO_TEST_CT  2\n static tTestDesc aSun_Auth_ProtoTests[] = {\n+  { TT_NEGREP,   zSun_Auth_ProtoBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zSun_Auth_ProtoSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -5345,8 +5366,16 @@ tSCC zSun_MallocList[] =\n  *  Machine/OS name selection pattern\n  */\n #define apzSun_MallocMachs (const char**)NULL\n-#define SUN_MALLOC_TEST_CT  0\n-#define aSun_MallocTests   (tTestDesc*)NULL\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSun_MallocBypass0[] =\n+       \"_CLASSIC_ANSI_TYPES\";\n+\n+#define    SUN_MALLOC_TEST_CT  1\n+static tTestDesc aSun_MallocTests[] = {\n+  { TT_NEGREP,   zSun_MallocBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Malloc\n@@ -5749,8 +5778,16 @@ tSCC zSysv68_StringList[] =\n  *  Machine/OS name selection pattern\n  */\n #define apzSysv68_StringMachs (const char**)NULL\n-#define SYSV68_STRING_TEST_CT  0\n-#define aSysv68_StringTests   (tTestDesc*)NULL\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSysv68_StringBypass0[] =\n+       \"_CLASSIC_ANSI_TYPES\";\n+\n+#define    SYSV68_STRING_TEST_CT  1\n+static tTestDesc aSysv68_StringTests[] = {\n+  { TT_NEGREP,   zSysv68_StringBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sysv68_String\n@@ -7196,7 +7233,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          206\n+#define REGEX_COUNT          211\n #define MACH_LIST_SIZE_LIMIT 261\n #define FIX_COUNT            181\n "}, {"sha": "9dcb1234c29ce718ef6ae35686c489ea6e857e3a", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793387fa35b069aa9d0c1c6a21846b964afe8dc5/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=793387fa35b069aa9d0c1c6a21846b964afe8dc5", "patch": "@@ -1432,6 +1432,7 @@ fix = {\n     hackname = hpux8_bogus_inlines;\n     files    = math.h;\n     select   = inline;\n+    bypass   = \"__GNUG__\";\n     sed = \"s@inline int abs(int [a-z][a-z]*) {.*}\"\n            \"@extern \\\"C\\\" int abs(int);@\";\n     sed = \"s@inline double abs(double [a-z][a-z]*) {.*}@@\";\n@@ -1521,6 +1522,7 @@ fix = {\n     hackname  = int_abort_free_and_exit;\n     files     = stdlib.h;\n     select    = \"int[ \\t]+(abort|free|exit)[ \\t]*\\\\(\";\n+    bypass    = \"_CLASSIC_ANSI_TYPES\";\n \n     c_fix     = format;\n     c_fix_arg = \"void\\t%1(\";\n@@ -2912,6 +2914,7 @@ fix = {\n     files    = rpc/clnt.h;\n     files    = rpc/svc.h;\n     files    = rpc/xdr.h;\n+    bypass   = \"__cplusplus\";\n     /*\n      *  Select those files containing '(*name)()'.\n      */\n@@ -2970,6 +2973,7 @@ fix = {\n fix = {\n     hackname = sun_malloc;\n     files    = malloc.h;\n+    bypass   = \"_CLASSIC_ANSI_TYPES\";\n \n     sed   = \"s/typedef[ \\t]char \\\\*\\tmalloc_t/typedef void \\\\*\\tmalloc_t/g\";\n     sed   = \"s/int[ \\t][ \\t]*free/void\\tfree/g\";\n@@ -3473,6 +3477,7 @@ fix = {\n     hackname = sysv68_string;\n     files    = testing.h;\n     files    = string.h;\n+    bypass   = \"_CLASSIC_ANSI_TYPES\";\n \n     sed = \"s/extern[ \\t]*int[ \\t]*strlen();/extern unsigned int strlen();/\";\n     sed = \"s/extern[ \\t]*int[ \\t]*ffs[ \\t]*(long);/extern int ffs(int);/\";"}]}