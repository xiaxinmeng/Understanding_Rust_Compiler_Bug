{"sha": "8a7988f51a78c05841fad17683cbb94b9dc33fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE3OTg4ZjUxYTc4YzA1ODQxZmFkMTc2ODNjYmI5NGI5ZGMzM2ZkMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-25T15:59:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-25T15:59:05Z"}, "message": "[multiple changes]\n\n2004-02-25  Robert Dewar  <dewar@gnat.com>\n\n\t* 51osinte.ads, 52osinte.ads, 53osinte.ads, 54osinte.ads,\n\t55osinte.ads, 56osinte.ads, 5aosinte.ads, 5bosinte.ads,\n\t5cosinte.ads, 5fosinte.ads, 5gosinte.ads, 5hosinte.ads,\n\t5iosinte.ads, 5losinte.ads, 5nosinte.ads, 5oosinte.ads,\n\t5posinte.ads, 5sosinte.ads, 5tosinte.ads, 5vosinte.ads,\n\t5wosinte.ads, 5zosinte.ads: Move instances of Unchecked_Conversion to\n\tthe defining instance of the type to avoid aliasing problems.\n\tFix copyright header.  Fix bad comments in package header.\n\n\t* exp_util.adb, prj-part.adb, prj-part.adb: Minor reformatting\n\n2004-02-25  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch2.adb (Param_Entity): Handle properly formals that have been\n\trewritten as references when aliased through an address clause.\n\n\t* sem_ch4.adb (Try_Indirect_Call): Normalize actuals before checking\n\twhether call can be interpreted as an indirect call to the result of a\n\tparameterless function call returning an access subprogram.\n\n2004-02-25  Arnaud Charlet  <charlet@act-europe.fr>\n\n\tCode clean up:\n\t* exp_ch7.adb (Make_Clean): Remove generation of calls to\n\tUnlock[_Entries], since this is now done by Service_Entries directly.\n\n\t* exp_ch9.adb (Build_Protected_Subprogram_Body): ditto.\n\n\t* s-tpobop.ads, s-tpobop.adb (PO_Service_Entries): New nested procedure\n\tRequeue_Call for better code readability. Change spec and update calls:\n\tPO_Service_Entries now unlock the PO on exit.\n\t(Protected_Entry_Call, Timed_Protected_Entry_Call): Update calls to\n\tPO_Service_Entries.\n\n\t* s-tposen.ads, s-tposen.adb (Service_Entry): Now unlock the PO on exit.\n\n\t* s-taenca.adb, s-tasren.adb: Update calls to PO_Service_Entries.\n\n2004-02-25  Sergey Rybin  <rybin@act-europe.fr>\n\n\t* exp_ch9.adb (Build_Simple_Entry_Call): Prevent expanding the\n\tprotected subprogram call and analyzing the result of such expanding\n\tin case when the called protected subprogram is eliminated.\n\n\t* sem_elim.adb (Check_Eliminated): Skip blocks when comparing scope\n\tnames.\n\n2004-02-25  Jerome Guitton  <guitton@act-europe.fr>\n\n\t* Makefile.in: Clean ups.\n\nFrom-SVN: r78436", "tree": {"sha": "55546168634e1653e8e637a0b8c0f34c3ccdada9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55546168634e1653e8e637a0b8c0f34c3ccdada9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a7988f51a78c05841fad17683cbb94b9dc33fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7988f51a78c05841fad17683cbb94b9dc33fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7988f51a78c05841fad17683cbb94b9dc33fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7988f51a78c05841fad17683cbb94b9dc33fd0/comments", "author": null, "committer": null, "parents": [{"sha": "4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab51fb500e802efac59c1eb79f2ddb5029a9e69"}], "stats": {"total": 835, "additions": 524, "deletions": 311}, "files": [{"sha": "efc55eb54d5c01e97013a79fc9852c9c6c8c60ef", "filename": "gcc/ada/51osinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F51osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F51osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F51osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a UnixWare (Native THREADS) version of this package.\n+--  This is a UnixWare (Native THREADS) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -243,6 +245,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "71607a408a6bae3d769cbf81a41a69b6100c5a96", "filename": "gcc/ada/52osinte.ads", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F52osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F52osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F52osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,8 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                                                                          --\n---          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a LynxOS (Native) version of this package.\n+--  This is a LynxOS (Native) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -246,6 +247,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "95b093ae7fa614aada14a2c0a7aa895ce30932cf", "filename": "gcc/ada/53osinte.ads", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F53osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F53osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F53osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,20 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a HPUX 11.0 (Native THREADS) version of this package.\n+--  This is a HPUX 11.0 (Native THREADS) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  This package encapsulates all direct interfaces to OS services\n+--  that are needed by children of System.\n+\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -247,6 +252,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "b5ad0af3877654bc06e14c8e53711fe11e7282c9", "filename": "gcc/ada/54osinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F54osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F54osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F54osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 2000-2003 Ada Core Technologies, Inc.           --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Solaris (POSIX Threads) version of this package.\n+--  This is a Solaris (POSIX Threads) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -237,6 +239,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "13e545871c114f275a6a2f379928344dbb689d71", "filename": "gcc/ada/55osinte.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F55osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F55osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F55osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---          Copyright (C) 1991-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +35,15 @@\n \n --  This is the FreeBSD PTHREADS version of this package\n \n+--  This package encapsulates all direct interfaces to OS services\n+--  that are needed by children of System.\n+\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n+\n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -269,6 +278,9 @@ package System.OS_Interface is\n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n \n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "8b6b33885d158cb2ba5b66d758ffc260c0dbde55", "filename": "gcc/ada/56osinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F56osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F56osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56osinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 2002-2003 Ada Core Technologies, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a LynxOS (POSIX Threads) version of this package.\n+--  This is a LynxOS (POSIX Threads) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -261,6 +263,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "dc01b058343f027a73c8fd040e43aab89d0a9d36", "filename": "gcc/ada/5aosinte.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5aosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5aosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5aosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---           Copyright (C) 1998-2002 Free Software Foundation, Inc.         --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,15 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the DEC Unix 4.0/5.1 version of this package.\n+--  This is the DEC Unix 4.0/5.1 version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -253,6 +256,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "c761eb8a048ec1b8d4569f1d8a707dcdbd6470dd", "filename": "gcc/ada/5bosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5bosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5bosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5bosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a AIX (Native THREADS) version of this package.\n+--  This is a AIX (Native THREADS) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -252,6 +254,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "7ea96a832994ef2fbc47a0f3b2a08913d5baf7d0", "filename": "gcc/ada/5cosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5cosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5cosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5cosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2001 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a AIX (FSU THREADS) version of this package.\n+--  This is a AIX (FSU THREADS) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n    --  pragma Elaborate_Body;\n@@ -246,6 +248,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "92c11070dade3174e223db74828fd2a5de9e9581", "filename": "gcc/ada/5fosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5fosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5fosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5fosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2001, Free Software Foundation, Inc.         --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the SGI Pthreads version of this package.\n+--  This is the SGI Pthreads version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n \n    pragma Preelaborate;\n@@ -242,6 +244,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "e6df06813d7703e3ef6d25530e7336b6453909da", "filename": "gcc/ada/5gosinte.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5gosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5gosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2001 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,18 +32,18 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is an Irix (old pthread library) version of this package.\n+--  This is an Irix (old pthread library) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces;\n with Interfaces.C;\n with Interfaces.C.Strings;\n+with Unchecked_Conversion;\n \n package System.OS_Interface is\n \n@@ -269,6 +270,9 @@ package System.OS_Interface is\n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n \n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private; --   thread identifier\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "18de527be158e9c626877a51eabffb5c1c894450", "filename": "gcc/ada/5hosinte.ads", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5hosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5hosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2003, Ada Core Technologies               --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the HP-UX version of this package.\n+--  This is the HP-UX version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -237,6 +238,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "7b5de13b92c7707e21b63ffbe45b834b9155b4aa", "filename": "gcc/ada/5iosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5iosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5iosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5iosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a GNU/Linux (GNU/LinuxThreads) version of this package.\n+--  This is a GNU/Linux (GNU/LinuxThreads) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -267,6 +269,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "df7a4322bf50539060b81c3bf0b0d3f69dc41f18", "filename": "gcc/ada/5losinte.ads", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5losinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5losinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5losinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,11 +37,12 @@\n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -246,6 +248,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "f33370dd43d42f78b55a9ef125c5898e0f8d5a52", "filename": "gcc/ada/5nosinte.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5nosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5nosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5nosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +34,9 @@\n \n --  This is the no tasking version\n \n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n "}, {"sha": "4ddd2d0b06de923ab171407d1840aad829b3abae", "filename": "gcc/ada/5oosinte.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5oosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5oosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2003, Ada Core Technologies               --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,12 +37,11 @@\n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Preelaborate.\n-\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n "}, {"sha": "4e5d9567df387dc979f48a5353e4346c6052d879", "filename": "gcc/ada/5posinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5posinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5posinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5posinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a OpenNT/Interix (FSU THREADS) version of this package.\n+--  This is a OpenNT/Interix (FSU THREADS) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -237,6 +239,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "eaba6c8d567ce52308021fc5b79da6a3dbfbd8c3", "filename": "gcc/ada/5sosinte.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5sosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5sosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2002 Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,11 +37,12 @@\n --  This package includes all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -298,6 +300,9 @@ package System.OS_Interface is\n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n \n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    THR_DETACHED  : constant := 64;\n    THR_BOUND     : constant := 1;\n    THR_NEW_LWP   : constant := 2;"}, {"sha": "14caf4e3dddb411daaa35ed6a440b1ca8974046f", "filename": "gcc/ada/5tosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5tosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5tosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5tosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2003, Free Software Foundation, Inc.         --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Solaris (FSU THREADS) version of this package.\n+--  This is a Solaris (FSU THREADS) version of this package\n \n --  This package includes all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -333,6 +335,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "333e02a37b88e849d59fd2d101d063655f897b17", "filename": "gcc/ada/5vosinte.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5vosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5vosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---           Copyright (C) 1991-2002 Free Software Foundation, Inc.         --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,16 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a OpenVMS/Alpha version of this package.\n+--  This is a OpenVMS/Alpha version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with Unchecked_Conversion;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -358,6 +360,10 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+\n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n "}, {"sha": "eec2e6ead98b71a5f27080d14e30a1ccb25102a5", "filename": "gcc/ada/5wosinte.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5wosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5wosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---         Copyright (C) 1997-2003, Free Software Foundation, Inc.          --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,17 +32,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a NT (native) version of this package.\n+--  This is a NT (native) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n with Interfaces.C.Strings;\n+with Unchecked_Conversion;\n \n package System.OS_Interface is\n pragma Preelaborate;\n@@ -68,7 +69,8 @@ pragma Preelaborate;\n    subtype PSZ   is Interfaces.C.Strings.chars_ptr;\n    subtype PCHAR is Interfaces.C.Strings.chars_ptr;\n    subtype PVOID is System.Address;\n-   Null_Void   : constant PVOID := System.Null_Address;\n+\n+   Null_Void : constant PVOID := System.Null_Address;\n \n    type PLONG  is access all Interfaces.C.long;\n    type PDWORD is access all DWORD;\n@@ -185,6 +187,9 @@ pragma Preelaborate;\n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n \n+   function Thread_Body_Access is new\n+     Unchecked_Conversion (System.Address, Thread_Body);\n+\n    procedure SwitchToThread;\n    pragma Import (Stdcall, SwitchToThread, \"SwitchToThread\");\n \n@@ -216,6 +221,9 @@ pragma Preelaborate;\n      (pThreadParameter : PVOID) return DWORD;\n    pragma Convention (Stdcall, PTHREAD_START_ROUTINE);\n \n+   function To_PTHREAD_START_ROUTINE is new\n+     Unchecked_Conversion (System.Address, PTHREAD_START_ROUTINE);\n+\n    type SECURITY_ATTRIBUTES is record\n       nLength              : DWORD;\n       pSecurityDescriptor  : PVOID;"}, {"sha": "7888cc18e68e85b3d6b0bec8313ed0d388933b62", "filename": "gcc/ada/5zosinte.ads", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5zosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2F5zosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zosinte.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---           Copyright (C) 1997-2002 Free Software Foundation, Inc.         --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2004, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,19 +32,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the VxWorks version of this package.\n---\n---  VxWorks does not directly support the needed POSIX routines, but it\n---  does have other routines that make it possible to code equivalent\n---  POSIX compliant routines.  The approach taken is to provide an\n---  FSU threads compliant interface.\n+--  This is the VxWorks version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n with System.VxWorks;"}, {"sha": "b26caea850a95e908266d824780d8f5a3bfc7526", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -1,3 +1,56 @@\n+2004-02-25  Robert Dewar  <dewar@gnat.com>\n+\n+\t* 51osinte.ads, 52osinte.ads, 53osinte.ads, 54osinte.ads,\n+\t55osinte.ads, 56osinte.ads, 5aosinte.ads, 5bosinte.ads,\n+\t5cosinte.ads, 5fosinte.ads, 5gosinte.ads, 5hosinte.ads,\n+\t5iosinte.ads, 5losinte.ads, 5nosinte.ads, 5oosinte.ads,\n+\t5posinte.ads, 5sosinte.ads, 5tosinte.ads, 5vosinte.ads,\n+\t5wosinte.ads, 5zosinte.ads: Move instances of Unchecked_Conversion to\n+\tthe defining instance of the type to avoid aliasing problems.\n+\tFix copyright header.  Fix bad comments in package header.\n+\n+\t* exp_util.adb, prj-part.adb, prj-part.adb: Minor reformatting\n+\n+2004-02-25  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch2.adb (Param_Entity): Handle properly formals that have been\n+\trewritten as references when aliased through an address clause.\n+\n+\t* sem_ch4.adb (Try_Indirect_Call): Normalize actuals before checking\n+\twhether call can be interpreted as an indirect call to the result of a\n+\tparameterless function call returning an access subprogram.\n+\n+2004-02-25  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\tCode clean up:\n+\t* exp_ch7.adb (Make_Clean): Remove generation of calls to\n+\tUnlock[_Entries], since this is now done by Service_Entries directly.\n+\n+\t* exp_ch9.adb (Build_Protected_Subprogram_Body): ditto.\n+\n+\t* s-tpobop.ads, s-tpobop.adb (PO_Service_Entries): New nested procedure\n+\tRequeue_Call for better code readability. Change spec and update calls:\n+\tPO_Service_Entries now unlock the PO on exit.\n+\t(Protected_Entry_Call, Timed_Protected_Entry_Call): Update calls to\n+\tPO_Service_Entries.\n+\n+\t* s-tposen.ads, s-tposen.adb (Service_Entry): Now unlock the PO on exit.\n+\n+\t* s-taenca.adb, s-tasren.adb: Update calls to PO_Service_Entries.\n+\n+2004-02-25  Sergey Rybin  <rybin@act-europe.fr>\n+\n+\t* exp_ch9.adb (Build_Simple_Entry_Call): Prevent expanding the\n+\tprotected subprogram call and analyzing the result of such expanding\n+\tin case when the called protected subprogram is eliminated.\n+\n+\t* sem_elim.adb (Check_Eliminated): Skip blocks when comparing scope\n+\tnames.\n+\n+2004-02-25  Jerome Guitton  <guitton@act-europe.fr>\n+\n+\t* Makefile.in: Clean ups.\n+\n 2004-02-23  Ed Schonberg  <schonberg@gnat.com>\n \n \t* exp_ch6.adb (Expand_N_Subprogram_Declaration): Do not create"}, {"sha": "f8df3945c925bd5738084810eb795da3582e5371", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -1382,6 +1382,7 @@ HIE_OBJS =  \\\n  s-fatflt.o \\\n  s-fatlfl.o \\\n  s-fatllf.o \\\n+ s-fatsfl.o \\\n  s-secsta.o \\\n  a-tags.o $(EXTRA_HIE_OBJS)\n \n@@ -1428,8 +1429,7 @@ RAVEN_SOURCES = $(NON_COMPILABLE_RAVEN_SOURCES) $(COMPILABLE_RAVEN_SOURCES)\n \n # Objects to generate for the ravenscar run time\n \n-RAVEN_OBJS = \\\n- $(HIE_OBJS) \\\n+RAVEN_LIBGNARL_OBJS = \\\n  s-parame.o  \\\n  s-purexc.o  \\\n  s-osinte.o  \\\n@@ -1442,13 +1442,18 @@ RAVEN_OBJS = \\\n  a-intnam.o  \\\n  a-reatim.o  \\\n  a-retide.o  \\\n+ s-osinte.o  \\\n  s-taprob.o  \\\n  s-tposen.o  \\\n  s-tasres.o  \\\n  s-tarest.o  \\\n  a-sytaco.o \\\n  a-taside.o $(EXTRA_RAVEN_OBJS)\n \n+RAVEN_OBJS = \\\n+ $(HIE_OBJS) \\\n+ $(RAVEN_LIBGNARL_OBJS)\n+\n # Default run time files\n \n ADA_INCLUDE_SRCS =\\\n@@ -1874,10 +1879,13 @@ rts-ravenscar: force\n \t   COMPILABLE_SOURCES=\"$(COMPILABLE_RAVEN_SOURCES)\" \n \t$(GNATMAKE) -Prts-ravenscar/ravenscar.gpr \\\n \t   --GCC=\"../../../xgcc -B../../../\"\n-\tcd rts-ravenscar/adalib/ ; $(AR) r libgnat.a *.o\n+\tcd rts-ravenscar/adalib ; \\\n+\t$(foreach FILE,$(RAVEN_LIBGNARL_OBJS), $(AR) r libgnarl.a $(FILE);) \\\n+\t$(foreach FILE,$(HIE_OBJS), $(AR) r libgnat.a $(FILE);)\n \t$(RM) rts-ravenscar/adalib/*.o\n \t$(CHMOD) a-wx rts-ravenscar/adalib/*.ali\n \t$(CHMOD) a-wx rts-ravenscar/adalib/libgnat.a\n+\t$(CHMOD) a-wx rts-ravenscar/adalib/libgnarl.a\n \n # Warning: this target assumes that LIBRARY_VERSION has been set correctly.\n gnatlib-shared-default:"}, {"sha": "f7cf1abc16e7441f9183fda3ea8f93309cf45f13", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -695,6 +695,8 @@ package body Exp_Ch2 is\n    --  where rec is a selector whose Entry_Formal link points to the formal\n    --  For a formal of a task entity, the formal is rewritten as a local\n    --  renaming.\n+   --  In addition, a formal that is marked volatile because it is aliased\n+   --  through an address clause is rewritten as dereference as well.\n \n    function Param_Entity (N : Node_Id) return Entity_Id is\n    begin\n@@ -723,6 +725,9 @@ package body Exp_Ch2 is\n                   if Present (Entry_Formal (Entity (S))) then\n                      return Entry_Formal (Entity (S));\n                   end if;\n+\n+               elsif Nkind (Original_Node (N)) = N_Identifier then\n+                  return Param_Entity (Original_Node (N));\n                end if;\n             end;\n          end if;"}, {"sha": "e78d9954082149d5b0c2a63edf7c75dd69c0b9ac", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 36, "deletions": 34, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -2193,7 +2193,6 @@ package body Exp_Ch7 is\n       Spec         : Node_Id;\n       Name         : Node_Id;\n       Param        : Node_Id;\n-      Unlock       : Node_Id;\n       Param_Type   : Entity_Id;\n       Pid          : Entity_Id := Empty;\n       Cancel_Param : Entity_Id;\n@@ -2274,50 +2273,53 @@ package body Exp_Ch7 is\n                         Selector_Name =>\n                           Make_Identifier (Loc, Name_uObject)),\n                     Attribute_Name => Name_Unchecked_Access))));\n-         end if;\n \n-         --  Unlock (_object._object'Access);\n+         else\n+            --  Unlock (_object._object'Access);\n \n-         --  _object is the record used to implement the protected object.\n-         --  It is a parameter to the protected subprogram.\n+            --  object is the record used to implement the protected object.\n+            --  It is a parameter to the protected subprogram.\n \n-         --  If the protected object is controlled (i.e it has entries or\n-         --  needs finalization for interrupt handling), call Unlock_Entries,\n-         --  except if the protected object follows the ravenscar profile, in\n-         --  which case call Unlock_Entry, otherwise call the simplified\n-         --  version, Unlock.\n+            --  If the protected object is controlled (i.e it has entries or\n+            --  needs finalization for interrupt handling), call\n+            --  Unlock_Entries, except if the protected object follows the\n+            --  ravenscar profile, in which case call Unlock_Entry, otherwise\n+            --  call the simplified version, Unlock.\n \n-         if Has_Entries (Pid)\n-           or else Has_Interrupt_Handler (Pid)\n-           or else (Has_Attach_Handler (Pid) and then not Restricted_Profile)\n-         then\n-            if Abort_Allowed\n-              or else Restriction_Active (No_Entry_Queue) = False\n-              or else Number_Entries (Pid) > 1\n+            if Has_Entries (Pid)\n+              or else Has_Interrupt_Handler (Pid)\n+              or else (Has_Attach_Handler (Pid)\n+                         and then not Restricted_Profile)\n             then\n-               Unlock := New_Reference_To (RTE (RE_Unlock_Entries), Loc);\n+               if Abort_Allowed\n+                 or else Restriction_Active (No_Entry_Queue) = False\n+                 or else Number_Entries (Pid) > 1\n+               then\n+                  Name := New_Reference_To (RTE (RE_Unlock_Entries), Loc);\n+               else\n+                  Name := New_Reference_To (RTE (RE_Unlock_Entry), Loc);\n+               end if;\n+\n             else\n-               Unlock := New_Reference_To (RTE (RE_Unlock_Entry), Loc);\n+               Name := New_Reference_To (RTE (RE_Unlock), Loc);\n             end if;\n \n-         else\n-            Unlock := New_Reference_To (RTE (RE_Unlock), Loc);\n+            Append_To (Stmt,\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => Name,\n+                Parameter_Associations => New_List (\n+                  Make_Attribute_Reference (Loc,\n+                    Prefix =>\n+                      Make_Selected_Component (Loc,\n+                        Prefix =>\n+                          New_Reference_To (Defining_Identifier (Param), Loc),\n+                        Selector_Name =>\n+                          Make_Identifier (Loc, Name_uObject)),\n+                    Attribute_Name => Name_Unchecked_Access))));\n          end if;\n \n-         Append_To (Stmt,\n-           Make_Procedure_Call_Statement (Loc,\n-             Name => Unlock,\n-             Parameter_Associations => New_List (\n-               Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   Make_Selected_Component (Loc,\n-                     Prefix =>\n-                       New_Reference_To (Defining_Identifier (Param), Loc),\n-                     Selector_Name =>\n-                       Make_Identifier (Loc, Name_uObject)),\n-                 Attribute_Name => Name_Unchecked_Access))));\n-\n          if Abort_Allowed then\n+\n             --  Abort_Undefer;\n \n             Append_To (Stmt,"}, {"sha": "62ed2af0c5db27aed587bf319b7133e58fd70af2", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -1553,10 +1553,7 @@ package body Exp_Ch9 is\n       Sub_Body     : Node_Id;\n       Lock_Name    : Node_Id;\n       Lock_Stmt    : Node_Id;\n-      Unlock_Name  : Node_Id;\n-      Unlock_Stmt  : Node_Id;\n       Service_Name : Node_Id;\n-      Service_Stmt : Node_Id;\n       R            : Node_Id;\n       Return_Stmt  : Node_Id := Empty;    -- init to avoid gcc 3 warning\n       Pre_Stmts    : List_Id := No_List;  -- init to avoid gcc 3 warning\n@@ -1740,19 +1737,16 @@ package body Exp_Ch9 is\n            or else Number_Entries (Pid) > 1\n          then\n             Lock_Name := New_Reference_To (RTE (RE_Lock_Entries), Loc);\n-            Unlock_Name := New_Reference_To (RTE (RE_Unlock_Entries), Loc);\n             Service_Name := New_Reference_To (RTE (RE_Service_Entries), Loc);\n \n          else\n             Lock_Name := New_Reference_To (RTE (RE_Lock_Entry), Loc);\n-            Unlock_Name := New_Reference_To (RTE (RE_Unlock_Entry), Loc);\n             Service_Name := New_Reference_To (RTE (RE_Service_Entry), Loc);\n          end if;\n \n       else\n          Lock_Name := New_Reference_To (RTE (RE_Lock), Loc);\n-         Unlock_Name := New_Reference_To (RTE (RE_Unlock), Loc);\n-         Service_Name := Empty;\n+         Service_Name := New_Reference_To (RTE (RE_Unlock), Loc);\n       end if;\n \n       Object_Parm :=\n@@ -1790,20 +1784,12 @@ package body Exp_Ch9 is\n             Append (Unprot_Call, Stmts);\n          end if;\n \n-         if Service_Name /= Empty then\n-            Service_Stmt := Make_Procedure_Call_Statement (Loc,\n-              Name => Service_Name,\n-              Parameter_Associations =>\n-                New_List (New_Copy_Tree (Object_Parm)));\n-            Append (Service_Stmt, Stmts);\n-         end if;\n-\n-         Unlock_Stmt :=\n+         Append (\n            Make_Procedure_Call_Statement (Loc,\n-             Name => Unlock_Name,\n-             Parameter_Associations => New_List (\n-               New_Copy_Tree (Object_Parm)));\n-         Append (Unlock_Stmt, Stmts);\n+             Name => Service_Name,\n+             Parameter_Associations =>\n+               New_List (New_Copy_Tree (Object_Parm))),\n+           Stmts);\n \n          if Abort_Allowed then\n             Append (\n@@ -2040,9 +2026,12 @@ package body Exp_Ch9 is\n          if Is_Protected_Type (Conctyp)\n            and then Is_Subprogram (Entity (Ename))\n          then\n-            Build_Protected_Subprogram_Call\n-              (N, Ename, Convert_Concurrent (Concval, Conctyp));\n-            Analyze (N);\n+            if not Is_Eliminated (Entity (Ename)) then\n+               Build_Protected_Subprogram_Call\n+                 (N, Ename, Convert_Concurrent (Concval, Conctyp));\n+               Analyze (N);\n+            end if;\n+\n             return;\n          end if;\n "}, {"sha": "ba88516f4854d67f23bef5f814dc2871e27d2afe", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -3264,8 +3264,7 @@ package body Exp_Util is\n                  N_In        |\n                  N_Not_In    |\n                  N_And_Then  |\n-                 N_Or_Else\n-            =>\n+                 N_Or_Else   =>\n                return Side_Effect_Free (Left_Opnd  (N))\n                  and then Side_Effect_Free (Right_Opnd (N));\n "}, {"sha": "d9a3797ccaf03c1da6ef2e51234d62d248a8af09", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -100,7 +100,7 @@ package body Prj.Part is\n    type Names_And_Id is record\n       Path_Name           : Name_Id;\n       Canonical_Path_Name : Name_Id;\n-      Id   : Project_Node_Id;\n+      Id                  : Project_Node_Id;\n    end record;\n \n    package Project_Stack is new Table.Table\n@@ -763,10 +763,10 @@ package body Prj.Part is\n \n                      for Index in 1 .. Project_Stack.Last loop\n                         if Project_Stack.Table (Index).Canonical_Path_Name =\n-                          Canonical_Path_Name\n+                             Canonical_Path_Name\n                         then\n                            --  We have found the limited imported project,\n-                           --  get its project id, and don't parse it.\n+                           --  get its project id, and do not parse it.\n \n                            Withed_Project := Project_Stack.Table (Index).Id;\n                            exit;\n@@ -915,6 +915,7 @@ package body Prj.Part is\n       loop\n          declare\n             Path_Id : Name_Id := Path_Name_Of (A_Project_Name_And_Node.Node);\n+\n          begin\n             if Path_Id /= No_Name then\n                Get_Name_String (Path_Id);\n@@ -947,10 +948,12 @@ package body Prj.Part is\n                   if From_Extended /= None then\n                      declare\n                         Decl : Project_Node_Id :=\n-                          Project_Declaration_Of\n-                            (A_Project_Name_And_Node.Node);\n+                                 Project_Declaration_Of\n+                                   (A_Project_Name_And_Node.Node);\n+\n                         Prj : Project_Node_Id :=\n-                          Extending_Project_Of (Decl);\n+                                Extending_Project_Of (Decl);\n+\n                      begin\n                         loop\n                            Decl := Project_Declaration_Of (Prj);\n@@ -983,7 +986,7 @@ package body Prj.Part is\n       Source_Index := Load_Project_File (Path_Name);\n       Tree.Save (Project_Comment_State);\n \n-      --  if we cannot find it, we stop\n+      --  If we cannot find it, we stop\n \n       if Source_Index = No_Source_File then\n          Project := Empty_Node;"}, {"sha": "63b78d052052dd0e0359f19a30fb66f7edf18558", "filename": "gcc/ada/s-taenca.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taenca.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -470,7 +470,7 @@ package body System.Tasking.Entry_Calls is\n          STPO.Unlock (Entry_Call.Called_Task);\n       else\n          Called_PO := To_Protection (Entry_Call.Called_PO);\n-         PO_Service_Entries (Self_ID, Called_PO);\n+         PO_Service_Entries (Self_ID, Called_PO, False);\n \n          if Called_PO.Pending_Action then\n             Called_PO.Pending_Action := False;"}, {"sha": "7d0a0ae736e83a479c0a7e0e3fae558659858831", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -71,7 +71,6 @@ with System.Tasking.Protected_Objects.Operations;\n --  used for PO_Do_Or_Queue\n --           PO_Service_Entries\n --           Lock_Entries\n---           Unlock_Entries\n \n with System.Tasking.Debug;\n --  used for Trace\n@@ -678,7 +677,6 @@ package body System.Tasking.Rendezvous is\n                     (Self_Id, Called_PO, Entry_Call,\n                      Entry_Call.Requeue_With_Abort);\n                   POO.PO_Service_Entries (Self_Id, Called_PO);\n-                  STPE.Unlock_Entries (Called_PO);\n                end if;\n             end if;\n "}, {"sha": "cf15ed9f88a373fbe5377e3664cd1b06e61b8afc", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 133, "deletions": 120, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1998-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1998-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -376,7 +376,6 @@ package body System.Tasking.Protected_Objects.Operations is\n                else\n                   PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call, With_Abort);\n                   PO_Service_Entries (Self_ID, New_Object);\n-                  Unlock_Entries (New_Object);\n                end if;\n \n             else\n@@ -441,150 +440,168 @@ package body System.Tasking.Protected_Objects.Operations is\n    ------------------------\n \n    procedure PO_Service_Entries\n-     (Self_ID : Task_ID;\n-      Object : Protection_Entries_Access)\n+     (Self_ID       : Task_ID;\n+      Object        : Entries.Protection_Entries_Access;\n+      Unlock_Object : Boolean := True)\n    is\n-      Entry_Call        : Entry_Call_Link;\n-      E                 : Protected_Entry_Index;\n-      Caller            : Task_ID;\n-      New_Object        : Protection_Entries_Access;\n-      Ceiling_Violation : Boolean;\n-      Result            : Boolean;\n+      procedure Requeue_Call\n+        (Entry_Call      : Entry_Call_Link;\n+         Call_Cancelled  : out Boolean);\n+      --  Handle requeue of Entry_Call.\n+      --  Call_Cancelled is set to True of call was cancelled.\n \n-   begin\n-      loop\n-         Queuing.Select_Protected_Entry_Call (Self_ID, Object, Entry_Call);\n+      ------------------\n+      -- Requeue_Call --\n+      ------------------\n+\n+      procedure Requeue_Call\n+        (Entry_Call      : Entry_Call_Link;\n+         Call_Cancelled  : out Boolean)\n+      is\n+         New_Object        : Protection_Entries_Access;\n+         Ceiling_Violation : Boolean;\n+         Result            : Boolean;\n+         E                 : Protected_Entry_Index;\n+\n+      begin\n+         Call_Cancelled := False;\n+         New_Object := To_Protection (Entry_Call.Called_PO);\n \n-         if Entry_Call /= null then\n-            E := Protected_Entry_Index (Entry_Call.E);\n+         if New_Object = null then\n \n-            --  Not abortable while service is in progress.\n+            --  Call is to be requeued to a task entry\n \n-            if Entry_Call.State = Now_Abortable then\n-               Entry_Call.State := Was_Abortable;\n+            if Single_Lock then\n+               STPO.Lock_RTS;\n             end if;\n \n-            Object.Call_In_Progress := Entry_Call;\n+            Result := Rendezvous.Task_Do_Or_Queue\n+              (Self_ID, Entry_Call,\n+               With_Abort => Entry_Call.Requeue_With_Abort);\n \n-            begin\n-               if Runtime_Traces then\n-                  Send_Trace_Info (PO_Run, Self_ID,\n-                                   Entry_Call.Self, Entry_Index (E));\n-               end if;\n+            if not Result then\n+               Queuing.Broadcast_Program_Error\n+                 (Self_ID, Object, Entry_Call, RTS_Locked => True);\n+            end if;\n+\n+            if Single_Lock then\n+               STPO.Unlock_RTS;\n+            end if;\n+\n+         else\n+            --  Call should be requeued to a PO\n+\n+            if Object /= New_Object then\n \n-               pragma Debug\n-                (Debug.Trace (Self_ID, \"POSE: start entry body\", 'P'));\n-               Object.Entry_Bodies (\n-                 Object.Find_Body_Index (Object.Compiler_Info, E)).Action (\n-                   Object.Compiler_Info, Entry_Call.Uninterpreted_Data, E);\n-            exception\n-               when others =>\n+               --  Requeue is to different PO\n+\n+               Lock_Entries (New_Object, Ceiling_Violation);\n+\n+               if Ceiling_Violation then\n+                  Object.Call_In_Progress := null;\n                   Queuing.Broadcast_Program_Error\n                     (Self_ID, Object, Entry_Call);\n-            end;\n \n-            if Object.Call_In_Progress /= null then\n-               Object.Call_In_Progress := null;\n-               Caller := Entry_Call.Self;\n-\n-               if Single_Lock then\n-                  STPO.Lock_RTS;\n+               else\n+                  PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call,\n+                    Entry_Call.Requeue_With_Abort);\n+                  PO_Service_Entries (Self_ID, New_Object);\n                end if;\n \n-               STPO.Write_Lock (Caller);\n-               Initialization.Wakeup_Entry_Caller (Self_ID, Entry_Call, Done);\n-               STPO.Unlock (Caller);\n+            else\n+               --  Requeue is to same protected object\n \n-               if Single_Lock then\n-                  STPO.Unlock_RTS;\n+               if Entry_Call.Requeue_With_Abort\n+                 and then Entry_Call.Cancellation_Attempted\n+               then\n+                  --  If this is a requeue with abort and someone tried\n+                  --  to cancel this call, cancel it at this point.\n+\n+                  Entry_Call.State := Cancelled;\n+                  Call_Cancelled := True;\n+                  return;\n                end if;\n \n-            else\n-               --  Call needs to be requeued\n+               if not Entry_Call.Requeue_With_Abort or else\n+                 Entry_Call.Mode /= Conditional_Call\n+               then\n+                  E := Protected_Entry_Index (Entry_Call.E);\n+                  Queuing.Enqueue\n+                    (New_Object.Entry_Queues (E), Entry_Call);\n+                  Update_For_Queue_To_PO (Entry_Call,\n+                    Entry_Call.Requeue_With_Abort);\n+\n+               else\n+                  PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call,\n+                    Entry_Call.Requeue_With_Abort);\n+               end if;\n+            end if;\n+         end if;\n+      end Requeue_Call;\n \n-               New_Object := To_Protection (Entry_Call.Called_PO);\n+      E          : Protected_Entry_Index;\n+      Caller     : Task_ID;\n+      Entry_Call : Entry_Call_Link;\n+      Cancelled  : Boolean;\n \n-               if New_Object = null then\n+   begin\n+      loop\n+         Queuing.Select_Protected_Entry_Call (Self_ID, Object, Entry_Call);\n \n-                  --  Call is to be requeued to a task entry\n+         exit when Entry_Call = null;\n \n-                  if Single_Lock then\n-                     STPO.Lock_RTS;\n-                  end if;\n+         E := Protected_Entry_Index (Entry_Call.E);\n \n-                  Result := Rendezvous.Task_Do_Or_Queue\n-                    (Self_ID, Entry_Call,\n-                     With_Abort => Entry_Call.Requeue_With_Abort);\n+         --  Not abortable while service is in progress.\n \n-                  if not Result then\n-                     Queuing.Broadcast_Program_Error\n-                       (Self_ID, Object, Entry_Call, RTS_Locked => True);\n-                  end if;\n+         if Entry_Call.State = Now_Abortable then\n+            Entry_Call.State := Was_Abortable;\n+         end if;\n \n-                  if Single_Lock then\n-                     STPO.Unlock_RTS;\n-                  end if;\n+         Object.Call_In_Progress := Entry_Call;\n \n-               else\n-                  --  Call should be requeued to a PO\n-\n-                  if Object /= New_Object then\n-                     --  Requeue is to different PO\n-\n-                     Lock_Entries (New_Object, Ceiling_Violation);\n-\n-                     if Ceiling_Violation then\n-                        Object.Call_In_Progress := null;\n-                        Queuing.Broadcast_Program_Error\n-                          (Self_ID, Object, Entry_Call);\n-\n-                     else\n-                        PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call,\n-                          Entry_Call.Requeue_With_Abort);\n-                        PO_Service_Entries (Self_ID, New_Object);\n-                        Unlock_Entries (New_Object);\n-                     end if;\n-\n-                  else\n-                     --  Requeue is to same protected object\n-\n-                     --  ??? Try to compensate apparent failure of the\n-                     --  scheduler on some OS (e.g VxWorks) to give higher\n-                     --  priority tasks a chance to run (see CXD6002).\n-\n-                     STPO.Yield (False);\n-\n-                     if Entry_Call.Requeue_With_Abort\n-                       and then Entry_Call.Cancellation_Attempted\n-                     then\n-                        --  If this is a requeue with abort and someone tried\n-                        --  to cancel this call, cancel it at this point.\n-\n-                        Entry_Call.State := Cancelled;\n-                        exit;\n-                     end if;\n-\n-                     if not Entry_Call.Requeue_With_Abort or else\n-                       Entry_Call.Mode /= Conditional_Call\n-                     then\n-                        E := Protected_Entry_Index (Entry_Call.E);\n-                        Queuing.Enqueue\n-                          (New_Object.Entry_Queues (E), Entry_Call);\n-                        Update_For_Queue_To_PO (Entry_Call,\n-                          Entry_Call.Requeue_With_Abort);\n-\n-                     else\n-                        PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call,\n-                          Entry_Call.Requeue_With_Abort);\n-                     end if;\n-                  end if;\n-               end if;\n+         begin\n+            if Runtime_Traces then\n+               Send_Trace_Info (PO_Run, Self_ID,\n+                                Entry_Call.Self, Entry_Index (E));\n             end if;\n \n+            pragma Debug\n+             (Debug.Trace (Self_ID, \"POSE: start entry body\", 'P'));\n+            Object.Entry_Bodies (\n+              Object.Find_Body_Index (Object.Compiler_Info, E)).Action (\n+                Object.Compiler_Info, Entry_Call.Uninterpreted_Data, E);\n+         exception\n+            when others =>\n+               Queuing.Broadcast_Program_Error\n+                 (Self_ID, Object, Entry_Call);\n+         end;\n+\n+         if Object.Call_In_Progress = null then\n+            Requeue_Call (Entry_Call, Cancelled);\n+            exit when Cancelled;\n+\n          else\n-            exit;\n+            Object.Call_In_Progress := null;\n+            Caller := Entry_Call.Self;\n+\n+            if Single_Lock then\n+               STPO.Lock_RTS;\n+            end if;\n+\n+            STPO.Write_Lock (Caller);\n+            Initialization.Wakeup_Entry_Caller (Self_ID, Entry_Call, Done);\n+            STPO.Unlock (Caller);\n+\n+            if Single_Lock then\n+               STPO.Unlock_RTS;\n+            end if;\n          end if;\n       end loop;\n+\n+      if Unlock_Object then\n+         Unlock_Entries (Object);\n+      end if;\n    end PO_Service_Entries;\n \n    ---------------------\n@@ -712,8 +729,6 @@ package body System.Tasking.Protected_Objects.Operations is\n       Initially_Abortable := Entry_Call.State = Now_Abortable;\n       PO_Service_Entries (Self_ID, Object);\n \n-      Unlock_Entries (Object);\n-\n       --  Try to prevent waiting later (in Cancel_Protected_Entry_Call)\n       --  for completed or cancelled calls.  (This is a heuristic, only.)\n \n@@ -971,8 +986,6 @@ package body System.Tasking.Protected_Objects.Operations is\n       PO_Do_Or_Queue (Self_Id, Object, Entry_Call, With_Abort => True);\n       PO_Service_Entries (Self_Id, Object);\n \n-      Unlock_Entries (Object);\n-\n       --  Try to avoid waiting for completed or cancelled calls.\n \n       if Entry_Call.State >= Done then"}, {"sha": "2e2ba0dfb984032d052ffb9c11279104afb66c92", "filename": "gcc/ada/s-tpobop.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tpobop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tpobop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,19 +95,22 @@ package System.Tasking.Protected_Objects.Operations is\n    pragma Inline (Service_Entries);\n \n    procedure PO_Service_Entries\n-     (Self_ID : Task_ID;\n-      Object  : Entries.Protection_Entries_Access);\n+     (Self_ID       : Task_ID;\n+      Object        : Entries.Protection_Entries_Access;\n+      Unlock_Object : Boolean := True);\n    --  Service all entry queues of the specified object, executing the\n    --  corresponding bodies of any queued entry calls that are waiting\n    --  on True barriers. This is used when the state of a protected\n    --  object may have changed, in particular after the execution of\n    --  the statement sequence of a protected procedure.\n+   --\n    --  Note that servicing an entry may change the value of one or more\n    --  barriers, so this routine keeps checking barriers until all of\n    --  them are closed.\n    --\n    --  This must be called with abortion deferred and with the corresponding\n    --  object locked.\n+   --  If Unlock_Object, then Object is unlocked on return.\n \n    procedure Complete_Entry_Body (Object : Entries.Protection_Entries_Access);\n    --  Called from within an entry body procedure, indicates that the"}, {"sha": "b1a3ef29a4bbbec18e193bf8c2bb4c59f385600c", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1998-2002, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1998-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,7 +52,7 @@ pragma Style_Checks (All_Checks);\n --  mentioned above are respected, except for the No_Entry_Queue restriction\n --  that is checked dynamically in this package, since the check cannot be\n --  performed at compile time, and is relatively cheap (see PO_Do_Or_Queue,\n---  PO_Service_Entry).\n+--  Service_Entry).\n \n pragma Polling (Off);\n --  Turn off polling, we do not want polling to take place during tasking\n@@ -530,6 +530,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n                --  Program_Error to the caller.\n \n                Send_Program_Error (Self_Id, Entry_Call);\n+               Unlock_Entry (Object);\n                return;\n             end if;\n \n@@ -538,6 +539,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n               (Object.Compiler_Info, Entry_Call.Uninterpreted_Data, 1);\n             Object.Call_In_Progress := null;\n             Caller := Entry_Call.Self;\n+            Unlock_Entry (Object);\n \n             if Single_Lock then\n                STPO.Lock_RTS;\n@@ -556,6 +558,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    exception\n       when others =>\n          Send_Program_Error (Self_Id, Entry_Call);\n+         Unlock_Entry (Object);\n    end Service_Entry;\n \n    ---------------------------------------"}, {"sha": "6ad90c7fe644cbc5a30aae30c3a99a652c90efe9", "filename": "gcc/ada/s-tposen.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tposen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fs-tposen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.ads?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -222,8 +222,9 @@ package System.Tasking.Protected_Objects.Single_Entry is\n    --  barrier. This is used when the state of a protected object may have\n    --  changed, in particular after the execution of the statement sequence of\n    --  a protected procedure.\n-   --  This must be called with abortion deferred and with the corresponding\n-   --  object locked.\n+   --\n+   --  This must be called with abort deferred and with the corresponding\n+   --  object locked. Object is unlocked on return.\n \n    procedure Protected_Single_Entry_Call\n      (Object              : Protection_Entry_Access;"}, {"sha": "c96450a107a955bd4a66b7c34b1072f69dd30293", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -4317,13 +4317,15 @@ package body Sem_Ch4 is\n       Nam : Entity_Id;\n       Typ : Entity_Id) return Boolean\n    is\n-      Actuals : constant List_Id := Parameter_Associations (N);\n       Actual  : Node_Id;\n       Formal  : Entity_Id;\n+      Call_OK : Boolean;\n \n    begin\n-      Actual := First (Actuals);\n+      Normalize_Actuals (N, Designated_Type (Typ), False, Call_OK);\n+      Actual := First_Actual (N);\n       Formal := First_Formal (Designated_Type (Typ));\n+\n       while Present (Actual)\n         and then Present (Formal)\n       loop"}, {"sha": "8d380024b06850c9fa99ae2bff37f8859d92b70d", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7988f51a78c05841fad17683cbb94b9dc33fd0/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=8a7988f51a78c05841fad17683cbb94b9dc33fd0", "patch": "@@ -289,8 +289,15 @@ package body Sem_Elim is\n \n             --  Then we need to see if the static scope matches within the\n             --  compilation unit.\n+            --  At the moment, gnatelim does not consider block statements as\n+            --  scopes (even if a block is named)\n \n             Scop := Scope (E);\n+\n+            while Ekind (Scop) = E_Block loop\n+               Scop := Scope (Scop);\n+            end loop;\n+\n             if Elmt.Entity_Scope /= null then\n                for J in reverse Elmt.Entity_Scope'Range loop\n                   if Elmt.Entity_Scope (J) /= Original_Chars (Scop) then\n@@ -299,6 +306,10 @@ package body Sem_Elim is\n \n                   Scop := Scope (Scop);\n \n+                  while Ekind (Scop) = E_Block loop\n+                     Scop := Scope (Scop);\n+                  end loop;\n+\n                   if not Is_Compilation_Unit (Scop) and then J = 1 then\n                      goto Continue;\n                   end if;\n@@ -314,6 +325,10 @@ package body Sem_Elim is\n \n                Scop := Scope (Scop);\n \n+               while Ekind (Scop) = E_Block loop\n+                  Scop := Scope (Scop);\n+               end loop;\n+\n                if Scop /= Standard_Standard and then J = 1 then\n                   goto Continue;\n                end if;"}]}