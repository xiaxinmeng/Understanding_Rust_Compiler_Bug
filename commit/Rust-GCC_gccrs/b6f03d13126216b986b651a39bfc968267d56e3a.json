{"sha": "b6f03d13126216b986b651a39bfc968267d56e3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmMDNkMTMxMjYyMTZiOTg2YjY1MWEzOWJmYzk2ODI2N2Q1NmUzYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-07T09:19:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-07T09:19:36Z"}, "message": "re PR c++/84704 (internal compiler error: gimplification failed)\n\n\tPR c++/84704\n\t* gimple-expr.c (create_tmp_var_raw): Set DECL_NAMELESS flag\n\ton tmp_var.\n\t* tree-pretty-print.c (dump_decl_name): For TDF_COMPARE_DEBUG,\n\tdon't print names of DECL_NAMELESS DECL_IGNORED_P decls.\n\nFrom-SVN: r258317", "tree": {"sha": "159b61aad84c157344321082d5e6b220b05b8130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/159b61aad84c157344321082d5e6b220b05b8130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6f03d13126216b986b651a39bfc968267d56e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f03d13126216b986b651a39bfc968267d56e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f03d13126216b986b651a39bfc968267d56e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f03d13126216b986b651a39bfc968267d56e3a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f1de8d013d92e2996f6936ecb25b2561e48ca56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1de8d013d92e2996f6936ecb25b2561e48ca56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1de8d013d92e2996f6936ecb25b2561e48ca56"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "38d5535b3d291ca8418f11c522cc1cbc00fee953", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6f03d13126216b986b651a39bfc968267d56e3a", "patch": "@@ -1,5 +1,11 @@\n 2018-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/84704\n+\t* gimple-expr.c (create_tmp_var_raw): Set DECL_NAMELESS flag\n+\ton tmp_var.\n+\t* tree-pretty-print.c (dump_decl_name): For TDF_COMPARE_DEBUG,\n+\tdon't print names of DECL_NAMELESS DECL_IGNORED_P decls.\n+\n \tPR middle-end/84723\n \t* multiple_target.c: Include tree-inline.h and intl.h.\n \t(expand_target_clones): Diagnose and fail if node->definition and"}, {"sha": "d07c89bebab5e65a0e59791a0f90564196944d26", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=b6f03d13126216b986b651a39bfc968267d56e3a", "patch": "@@ -446,6 +446,9 @@ create_tmp_var_raw (tree type, const char *prefix)\n   DECL_ARTIFICIAL (tmp_var) = 1;\n   /* And we don't want debug info for it.  */\n   DECL_IGNORED_P (tmp_var) = 1;\n+  /* And we don't want even the fancy names of those printed in\n+     -fdump-final-insns= dumps.  */\n+  DECL_NAMELESS (tmp_var) = 1;\n \n   /* Make the variable writable.  */\n   TREE_READONLY (tmp_var) = 0;"}, {"sha": "276ad00a7b2f58394bf2900f58a111d69dfb0915", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f03d13126216b986b651a39bfc968267d56e3a/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=b6f03d13126216b986b651a39bfc968267d56e3a", "patch": "@@ -247,21 +247,32 @@ dump_fancy_name (pretty_printer *pp, tree name)\n static void\n dump_decl_name (pretty_printer *pp, tree node, dump_flags_t flags)\n {\n-  if (DECL_NAME (node))\n+  tree name = DECL_NAME (node);\n+  if (name)\n     {\n       if ((flags & TDF_ASMNAME)\n \t  && HAS_DECL_ASSEMBLER_NAME_P (node)\n \t  && DECL_ASSEMBLER_NAME_SET_P (node))\n \tpp_tree_identifier (pp, DECL_ASSEMBLER_NAME_RAW (node));\n+      /* For -fcompare-debug don't dump DECL_NAMELESS names at all,\n+\t -g might have created more fancy names and their indexes\n+\t could get out of sync.  Usually those should be DECL_IGNORED_P\n+\t too, SRA can create even non-DECL_IGNORED_P DECL_NAMELESS fancy\n+\t names, let's hope those never get out of sync after doing the\n+\t dump_fancy_name sanitization.  */\n+      else if ((flags & TDF_COMPARE_DEBUG)\n+\t       && DECL_NAMELESS (node)\n+\t       && DECL_IGNORED_P (node))\n+\tname = NULL_TREE;\n       /* For DECL_NAMELESS names look for embedded uids in the\n \t names and sanitize them for TDF_NOUID.  */\n       else if ((flags & TDF_NOUID) && DECL_NAMELESS (node))\n-\tdump_fancy_name (pp, DECL_NAME (node));\n+\tdump_fancy_name (pp, name);\n       else\n-\tpp_tree_identifier (pp, DECL_NAME (node));\n+\tpp_tree_identifier (pp, name);\n     }\n   char uid_sep = (flags & TDF_GIMPLE) ? '_' : '.';\n-  if ((flags & TDF_UID) || DECL_NAME (node) == NULL_TREE)\n+  if ((flags & TDF_UID) || name == NULL_TREE)\n     {\n       if (TREE_CODE (node) == LABEL_DECL && LABEL_DECL_UID (node) != -1)\n \tpp_printf (pp, \"L%c%d\", uid_sep, (int) LABEL_DECL_UID (node));"}]}