{"sha": "ecd637e9761485437498f311ddf09af5286d6d0f", "node_id": "C_kwDOANBUbNoAKGVjZDYzN2U5NzYxNDg1NDM3NDk4ZjMxMWRkZjA5YWY1Mjg2ZDZkMGY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-13T00:17:18Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-13T00:17:18Z"}, "message": "Daily bump.", "tree": {"sha": "bfa0b819293533b27d8bd9b4a06643faee816edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa0b819293533b27d8bd9b4a06643faee816edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd637e9761485437498f311ddf09af5286d6d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd637e9761485437498f311ddf09af5286d6d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd637e9761485437498f311ddf09af5286d6d0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd637e9761485437498f311ddf09af5286d6d0f/comments", "author": null, "committer": null, "parents": [{"sha": "ceae3a66d3d9eb7c468f0a36f203c9e6b2b8a3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceae3a66d3d9eb7c468f0a36f203c9e6b2b8a3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceae3a66d3d9eb7c468f0a36f203c9e6b2b8a3e7"}], "stats": {"total": 177, "additions": 176, "deletions": 1}, "files": [{"sha": "d112fe8a161178c2bf06608a3852d31668997dcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecd637e9761485437498f311ddf09af5286d6d0f", "patch": "@@ -1,3 +1,60 @@\n+2023-01-12  Andrew Pinski  <apinski@marvell.com>\n+\t    Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/92342\n+\t* match.pd ((m1 CMP m2) * d -> (m1 CMP m2) ? d : 0):\n+\tUse tcc_comparison and :c for the multiply.\n+\t(b & -(a CMP c) -> (a CMP c)?b:0): New pattern.\n+\n+2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/105549\n+\t* config/aarch64/aarch64.cc (aarch64_function_arg_alignment):\n+\tCheck DECL_PACKED for bitfield.\n+\t(aarch64_layout_arg): Warn when parameter passing ABI changes.\n+\t(aarch64_function_arg_boundary): Do not warn here.\n+\t(aarch64_gimplify_va_arg_expr): Warn when parameter passing ABI\n+\tchanges.\n+\n+2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.cc (aarch64_function_arg_alignment): Fix\n+\tcomment.\n+\t(aarch64_layout_arg): Factorize warning conditions.\n+\t(aarch64_function_arg_boundary): Fix typo.\n+\t* function.cc (currently_expanding_function_start): New variable.\n+\t(expand_function_start): Handle\n+\tcurrently_expanding_function_start.\n+\t* function.h (currently_expanding_function_start): Declare.\n+\n+2023-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99412\n+\t* tree-ssa-reassoc.cc (is_phi_for_stmt): Remove.\n+\t(swap_ops_for_binary_stmt): Remove reduction handling.\n+\t(rewrite_expr_tree_parallel): Adjust.\n+\t(reassociate_bb): Likewise.\n+\t* tree-parloops.cc (build_new_reduction): Handle MINUS_EXPR.\n+\n+2023-01-12  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (ctzsi2, ffssi2):\n+\tRearrange the emitting codes.\n+\n+2023-01-12  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (*btrue):\n+\tCorrect value of the attribute \"length\" that depends on\n+\tTARGET_DENSITY and operands, and add '?' character to the register\n+\tconstraint of the compared operand.\n+\n+2023-01-12  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* hash-table.h (expand): Check elements and deleted counts.\n+\t(verify): Likewise.\n+\n 2023-01-11  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR tree-optimization/71343"}, {"sha": "e47d85a2bca09e218f114a6380a3959ad2fa2809", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ecd637e9761485437498f311ddf09af5286d6d0f", "patch": "@@ -1 +1 @@\n-20230112\n+20230113"}, {"sha": "5e6feea9aa7f277f40d6740e23b6ec98e1651fab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ecd637e9761485437498f311ddf09af5286d6d0f", "patch": "@@ -1,3 +1,8 @@\n+2023-01-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/107706\n+\t* openmp.cc (gfc_resolve_omp_assumptions): Reject nonscalars.\n+\n 2023-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/108349"}, {"sha": "eec4ca1aeec409f7ea13f072eaf9b39354610809", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd637e9761485437498f311ddf09af5286d6d0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecd637e9761485437498f311ddf09af5286d6d0f", "patch": "@@ -1,3 +1,70 @@\n+2023-01-12  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* lib/gm2.exp: Use timeout.exp.\n+\n+2023-01-12  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* lib/gm2.exp (gm2_init_min): Append -fno-exceptions\n+\tto args.\n+\n+2023-01-12  Andrew Pinski  <apinski@marvell.com>\n+\t    Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/92342\n+\t* gcc.dg/tree-ssa/andnegcmp-1.c: New test.\n+\t* gcc.dg/tree-ssa/andnegcmp-2.c: New test.\n+\t* gcc.dg/tree-ssa/multcmp-1.c: New test.\n+\t* gcc.dg/tree-ssa/multcmp-2.c: New test.\n+\n+2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/105549\n+\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: Update.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: Update.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: Update.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: Update.\n+\t* gcc.target/aarch64/aapcs64/va_arg-17.c: New test.\n+\t* gcc.target/aarch64/pr105549.c: New test.\n+\t* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: Update.\n+\t* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: Update.\n+\t* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: Update.\n+\t* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: Update.\n+\n+2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: New test.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: New\n+\ttest.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: New test.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: New\n+\ttest.\n+\t* gcc.target/aarch64/bitfield-abi-warning-align8-O2.c: New test.\n+\t* gcc.target/aarch64/bitfield-abi-warning.h: New test.\n+\t* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: New test.\n+\t* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: New\n+\ttest.\n+\t* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: New test.\n+\t* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: New\n+\ttest.\n+\t* g++.target/aarch64/bitfield-abi-warning-align8-O2.C: New test.\n+\t* g++.target/aarch64/bitfield-abi-warning.h: New test.\n+\n+2023-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99412\n+\t* gcc.dg/vect/pr99412.c: New testcase.\n+\t* gcc.dg/tree-ssa/reassoc-47.c: Adjust comment.\n+\t* gcc.dg/tree-ssa/reassoc-48.c: Remove.\n+\n+2023-01-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/107706\n+\t* gfortran.dg/gomp/assume-2.f90: Update dg-error.\n+\t* gfortran.dg/gomp/assumes-2.f90: Likewise.\n+\t* gfortran.dg/gomp/assume-5.f90: New test.\n+\n 2023-01-12  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* c-c++-common/cpp/pr108244-1.c: New test."}, {"sha": "3823090907777cd054de713b8de098ecec9429dd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd637e9761485437498f311ddf09af5286d6d0f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd637e9761485437498f311ddf09af5286d6d0f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ecd637e9761485437498f311ddf09af5286d6d0f", "patch": "@@ -1,3 +1,49 @@\n+2023-01-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108327\n+\t* config/os/gnu-linux/ldbl-extra.ver (GLIBCXX_LDBL_3.4.31):\n+\tExport __try_use_facet specializations for facets in namespace\n+\t__gnu_cxx_ldbl128.\n+\t* config/os/gnu-linux/ldbl-ieee128-extra.ver\n+\t(GLIBCXX_IEEE128_3.4.31): Likewise for facets in namespace\n+\t__gnu_cxx_ieee128.\n+\t* testsuite/util/testsuite_abi.cc: Add to lists of known and\n+\tlatest versions.\n+\n+2023-01-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/std_mutex.h: Remove <system_error> include.\n+\t* include/std/condition_variable: Add <bits/error_constants.h>\n+\tinclude.\n+\t* include/std/mutex: Likewise.\n+\t* include/std/shared_mutex: Likewise.\n+\n+2023-01-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/77691\n+\t* include/experimental/memory_resource\n+\t(_GLIBCXX_MAX_ALIGN_MATCHES_MALLOC): Define.\n+\t(do_allocate, do_deallocate): Check it.\n+\t* testsuite/experimental/memory_resource/new_delete_resource.cc:\n+\tRelax expected behaviour for 64-bit hppa-hp-hpux11.11.\n+\n+2023-01-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/abi.xml: Add latest library versions.\n+\t* doc/html/manual/abi.html: Regenerate.\n+\n+2023-01-12  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/107189\n+\t* include/bits/stl_tree.h (_Rb_tree<>::_M_insert_range_equal): Remove\n+\tunused _Alloc_node instance.\n+\n+2023-01-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/atomic_wait.h (__detail::__platform_wait_t):\n+\tDefine as unsigned long if always lock-free, and unsigned int\n+\totherwise.\n+\n 2023-01-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* src/c++20/tzdb.cc (tzdb_list::_S_init_tzdb): Use __try and"}]}