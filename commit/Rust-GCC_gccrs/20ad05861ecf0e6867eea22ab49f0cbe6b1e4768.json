{"sha": "20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhZDA1ODYxZWNmMGU2ODY3ZWVhMjJhYjQ5ZjBjYmU2YjFlNDc2OA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-29T13:04:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-29T13:04:47Z"}, "message": "[multiple changes]\n\n2017-09-29  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch8.adb (Mark_Use_Clauses): Add recursive call to properly handle\n\tall cases related to marking entity identifiers.\n\n2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* adaint.c (win32_wait): Properly handle error and take into account\n\tthe WIN32 limitation on the number of simultaneous wait objects.\n\n2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* cal.c: Minor proofreading.\n\n2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* doc/gnat_ugn/gnat_utility_programs.rst: Minor formatting fix.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-09-29  Bob Duff  <duff@adacore.com>\n\n\t* lib-xref.ads: Comment fix.\n\n2017-09-29  Bob Duff  <duff@adacore.com>\n\n\t* exp_aggr.adb: Remove calls to Set_No_Ctrl_Actions for discriminants.\n\tDiscriminants can't need finalization.\n\n2017-09-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): Do not emit freeze nodes\n\tfor types in expression if the function is within a generic unit.\n\t* sem_res.adb (Resolve): In a generic context do not freeze an\n\texpression, unless it is an entity. This exception is solely for the\n\tpurpose of detecting illegal uses of deferred constants in generic\n\tunits.\n\t* sem_res.adb: Minor reformatting.\n\nFrom-SVN: r253285", "tree": {"sha": "a1417fb1608cea898415a4aade20c5cc6bce3e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1417fb1608cea898415a4aade20c5cc6bce3e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/comments", "author": null, "committer": null, "parents": [{"sha": "5b1265cc8651f7395ee2009ccd610eadd8fdedf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1265cc8651f7395ee2009ccd610eadd8fdedf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1265cc8651f7395ee2009ccd610eadd8fdedf7"}], "stats": {"total": 84, "additions": 61, "deletions": 23}, "files": [{"sha": "8b566a7cbce198cd60045f4f2db69c31d5aedf91", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -1,3 +1,41 @@\n+2017-09-29  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch8.adb (Mark_Use_Clauses): Add recursive call to properly handle\n+\tall cases related to marking entity identifiers.\n+\n+2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* adaint.c (win32_wait): Properly handle error and take into account\n+\tthe WIN32 limitation on the number of simultaneous wait objects.\n+\n+2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* cal.c: Minor proofreading.\n+\n+2017-09-29  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_utility_programs.rst: Minor formatting fix.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-09-29  Bob Duff  <duff@adacore.com>\n+\n+\t* lib-xref.ads: Comment fix.\n+\n+2017-09-29  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_aggr.adb: Remove calls to Set_No_Ctrl_Actions for discriminants.\n+\tDiscriminants can't need finalization.\n+\n+2017-09-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): Do not emit freeze nodes\n+\tfor types in expression if the function is within a generic unit.\n+\t* sem_res.adb (Resolve): In a generic context do not freeze an\n+\texpression, unless it is an entity. This exception is solely for the\n+\tpurpose of detecting illegal uses of deferred constants in generic\n+\tunits.\n+\t* sem_res.adb: Minor reformatting.\n+\n 2017-09-29  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch8.adb (Note_Redundant_Use): Add guard to protect against false"}, {"sha": "05e4953f209b806446c3be43b7814fdb9770e25e", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2014, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,10 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This file contains those routines named by Import pragmas in package    */\n+/*  This file contains routines marked with pragmas Import in package       */\n /*  GNAT.Calendar. It is used to do Duration to timeval conversion.         */\n-/*  These are simple wrappers function to abstract the fact that the C      */\n-/*  struct timeval fields type are not normalized (they are generally       */\n+/*  These are simple wrapper functions to abstract the fact that the C      */\n+/*  struct timeval fields are not normalized (they are generally            */\n /*  defined as int or long values).                                         */\n \n #if defined (__vxworks)"}, {"sha": "3f5f2d64c6b625b0b8a190a750c666f460905a63", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -365,7 +365,7 @@ Switches for ``gnatls``\n \n .. index:: --RTS (gnatls)\n \n-:switch:`--RTS={rts-path}``\n+:switch:`--RTS={rts-path}`\n   Specifies the default location of the runtime library. Same meaning as the\n   equivalent ``gnatmake`` flag (:ref:`Switches_for_gnatmake`).\n "}, {"sha": "0d6d3d14c9d9b5a0961c025666b4b6877ed7c7da", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -2725,7 +2725,6 @@ package body Exp_Aggr is\n                           Selector_Name => New_Occurrence_Of (Discr, Loc)),\n                       Expression => New_Copy_Tree (Discr_Val));\n \n-                  Set_No_Ctrl_Actions (Discr_Init);\n                   Append_To (List, Discr_Init);\n                end if;\n \n@@ -2763,7 +2762,6 @@ package body Exp_Aggr is\n                 Name       => Comp_Expr,\n                 Expression => New_Copy_Tree (Discriminant_Value));\n \n-            Set_No_Ctrl_Actions (Instr);\n             Append_To (L, Instr);\n \n             Next_Discriminant (Discriminant);\n@@ -2795,7 +2793,6 @@ package body Exp_Aggr is\n                 Name       => Comp_Expr,\n                 Expression => New_Copy_Tree (Discriminant_Value));\n \n-            Set_No_Ctrl_Actions (Instr);\n             Append_To (L, Instr);\n \n             Next_Stored_Discriminant (Discriminant);"}, {"sha": "5fdb2724ba1c0c09121f1851f587810ada01aa77", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Sep 25, 2017\n+GNAT User's Guide for Native Platforms , Sep 29, 2017\n \n AdaCore\n \n@@ -17654,7 +17654,7 @@ Add @code{dir} at the beginning of the project search dir.\n \n @table @asis\n \n-@item @code{--RTS=@emph{rts-path}`}\n+@item @code{--RTS=@emph{rts-path}}\n \n Specifies the default location of the runtime library. Same meaning as the\n equivalent @code{gnatmake} flag (@ref{dc,,Switches for gnatmake})."}, {"sha": "d4216396c9ca6d9b991363552edefd49d562d85e", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -611,7 +611,8 @@ package Lib.Xref is\n      Table_Name           => \"Name_Deferred_References\");\n \n    procedure Process_Deferred_References;\n-   --  This procedure is called from Frontend to process these table entries\n+   --  This procedure is called from Frontend to process these table entries.\n+   --  It is also called from Sem_Warn.\n \n    function Has_Deferred_Reference (Ent : Entity_Id) return Boolean;\n    --  Determine whether arbitrary entity Ent has a pending reference in order"}, {"sha": "cf1b83f0ade123944c2fb629265452be15d9b7c1", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -568,8 +568,11 @@ package body Sem_Ch6 is\n          --  Note that we cannot defer this freezing to the analysis of the\n          --  expression itself, because a freeze node might appear in a nested\n          --  scope, leading to an elaboration order issue in gigi.\n+         --  As elsewhere, we do not emit freeze nodes within a generic unit.\n \n-         Freeze_Expr_Types (Def_Id);\n+         if not Inside_A_Generic then\n+            Freeze_Expr_Types (Def_Id);\n+         end if;\n \n          --  For navigation purposes, indicate that the function is a body\n "}, {"sha": "77df1c850100498855f3f99e6617016136629e05", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -8405,15 +8405,7 @@ package body Sem_Ch8 is\n               or else (Present (Prefix (Id))\n                          and then Scope (Entity (Id)) /= Entity (Prefix (Id)))\n             then\n-               --  There is a case whereby a unary operator is used within a\n-               --  qualified expression, so mark the parameters as well as the\n-               --  entity.\n-\n-               if Nkind (Entity (Id)) = N_Defining_Operator_Symbol then\n-                  Mark_Parameters (Entity (Id));\n-               end if;\n-\n-               Mark_Use_Package (Scope (Entity (Id)));\n+               Mark_Use_Clauses (Entity (Id));\n             end if;\n          end if;\n       end if;"}, {"sha": "1435e047f5afded1019dd023d57f6c712ffca3cc", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ad05861ecf0e6867eea22ab49f0cbe6b1e4768/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=20ad05861ecf0e6867eea22ab49f0cbe6b1e4768", "patch": "@@ -3070,7 +3070,14 @@ package body Sem_Res is\n          --  Here we are resolving the corresponding expanded body, so we do\n          --  need to perform normal freezing.\n \n-         Freeze_Expression (N);\n+         --  As elsewhere we do not emit freeze node within a generic. We make\n+         --  an exception for entities that are expressions, only to detect\n+         --  misuses of deferred constants and preserve the output of various\n+         --  tests.\n+\n+         if not Inside_A_Generic or else Is_Entity_Name (N) then\n+            Freeze_Expression (N);\n+         end if;\n \n          --  Now we can do the expansion\n "}]}