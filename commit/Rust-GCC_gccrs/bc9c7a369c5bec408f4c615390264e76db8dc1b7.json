{"sha": "bc9c7a369c5bec408f4c615390264e76db8dc1b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5YzdhMzY5YzViZWM0MDhmNGM2MTUzOTAyNjRlNzZkYjhkYzFiNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-13T18:21:37Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-13T18:21:37Z"}, "message": "(*): Change 'f' constraint for dest to '*f' if it is not the only alternative.\n\n(*):  Change 'f' constraint for dest to '*f' if it is not the\nonly alternative.  Add '*f' dest constraints to all patterns where\nit is valid but was previously missing.\n\nFrom-SVN: r2435", "tree": {"sha": "a71ff4511ad41af0c17a23d0e6c2976d4a7583dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71ff4511ad41af0c17a23d0e6c2976d4a7583dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9c7a369c5bec408f4c615390264e76db8dc1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9c7a369c5bec408f4c615390264e76db8dc1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9c7a369c5bec408f4c615390264e76db8dc1b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9c7a369c5bec408f4c615390264e76db8dc1b7/comments", "author": null, "committer": null, "parents": [{"sha": "7c08017416be9c16a25a1459b59329500be7ab10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c08017416be9c16a25a1459b59329500be7ab10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c08017416be9c16a25a1459b59329500be7ab10"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "2cca88c08b4733cdf8cbaea9f022fc50e844e82e", "filename": "gcc/config/i960/i960.md", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9c7a369c5bec408f4c615390264e76db8dc1b7/gcc%2Fconfig%2Fi960%2Fi960.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9c7a369c5bec408f4c615390264e76db8dc1b7/gcc%2Fconfig%2Fi960%2Fi960.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.md?ref=bc9c7a369c5bec408f4c615390264e76db8dc1b7", "patch": "@@ -22,6 +22,13 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \f\n+;; There are very few (4) 'f' registers, they can't be loaded/stored from/to\n+;; memory, and some instructions explicitly require them, so we get better\n+;; code by discouraging psuedo-registers from being allocated to them.\n+;; However, we do want to allow all patterns which can store to them to\n+;; include them in their constraints, so we always use '*f' in a destination\n+;; constraint except when 'f' is the only alternative.\n+\f\n ;; Insn attributes which describe the i960.\n \n ;; Modscan is not used, since the compiler never emits any of these insns.\n@@ -949,7 +956,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=r,f,d,d,m,o\")\n+  [(set (match_operand:DF 0 \"general_operand\" \"=r,*f,d,d,m,o\")\n \t(match_operand:DF 1 \"fpmove_src_operand\" \"r,GH,F,m,d,G\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], DFmode)\n@@ -980,7 +987,7 @@\n   [(set_attr \"type\" \"move,move,load,fpload,fpstore,fpstore\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=r,f,d,d,m\")\n+  [(set (match_operand:DF 0 \"general_operand\" \"=r,*f,d,d,m\")\n \t(match_operand:DF 1 \"fpmove_src_operand\" \"r,GH,F,m,d\"))]\n   \"current_function_args_size != 0\n    && (register_operand (operands[0], DFmode)\n@@ -1017,7 +1024,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=r,f,d,d,m\")\n+  [(set (match_operand:SF 0 \"general_operand\" \"=r,*f,d,d,m\")\n \t(match_operand:SF 1 \"fpmove_src_operand\" \"r,GH,F,m,dG\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], SFmode)\n@@ -1047,7 +1054,7 @@\n   [(set_attr \"type\" \"move,move,load,fpload,fpstore\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=r,f,d,d,m\")\n+  [(set (match_operand:SF 0 \"general_operand\" \"=r,*f,d,d,m\")\n \t(match_operand:SF 1 \"fpmove_src_operand\" \"r,GH,F,m,d\"))]\n   \"current_function_args_size != 0\n    && (register_operand (operands[0], SFmode)\n@@ -1312,7 +1319,7 @@\n ;; Conversions between float and double.\n \n (define_insn \"extendsfdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,d\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=*f,d\")\n \t(float_extend:DF (match_operand:SF 1 \"fp_arith_operand\" \"dGH,fGH\")))]\n   \"TARGET_NUMERICS\"\n   \"@\n@@ -1338,7 +1345,7 @@\n   [(set_attr \"type\" \"fpcvt\")])\n \n (define_insn \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=df\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(float:SF (match_operand:SI 1 \"register_operand\" \"d\")))]\n   \"TARGET_NUMERICS\"\n   \"cvtir\t%1,%0\"\n@@ -1697,15 +1704,15 @@\n ;; Floating point arithmetic instructions.\n \n (define_insn \"adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d*f\")\n \t(plus:DF (match_operand:DF 1 \"fp_arith_operand\" \"%rGH\")\n \t\t (match_operand:DF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n   \"addrl\t%1,%2,%0\"\n   [(set_attr \"type\" \"fpadd\")])\n \n (define_insn \"addsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(plus:SF (match_operand:SF 1 \"fp_arith_operand\" \"%rGH\")\n \t\t (match_operand:SF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n@@ -1714,15 +1721,15 @@\n \n \n (define_insn \"subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d*f\")\n \t(minus:DF (match_operand:DF 1 \"fp_arith_operand\" \"rGH\")\n \t\t  (match_operand:DF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n   \"subrl\t%2,%1,%0\"\n   [(set_attr \"type\" \"fpadd\")])\n \n (define_insn \"subsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(minus:SF (match_operand:SF 1 \"fp_arith_operand\" \"rGH\")\n \t\t  (match_operand:SF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n@@ -1731,15 +1738,15 @@\n \n \n (define_insn \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d*f\")\n \t(mult:DF (match_operand:DF 1 \"fp_arith_operand\" \"rGH\")\n \t\t (match_operand:DF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n   \"mulrl\t%1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(mult:SF (match_operand:SF 1 \"fp_arith_operand\" \"rGH\")\n \t\t (match_operand:SF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n@@ -1748,23 +1755,23 @@\n \n \n (define_insn \"divdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d*f\")\n \t(div:DF (match_operand:DF 1 \"fp_arith_operand\" \"rGH\")\n \t\t(match_operand:DF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n   \"divrl\t%2,%1,%0\"\n   [(set_attr \"type\" \"fpdiv\")])\n \n (define_insn \"divsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(div:SF (match_operand:SF 1 \"fp_arith_operand\" \"rGH\")\n \t\t(match_operand:SF 2 \"fp_arith_operand\" \"rGH\")))]\n   \"TARGET_NUMERICS\"\n   \"divr\t%2,%1,%0\"\n   [(set_attr \"type\" \"fpdiv\")])\n \n (define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=d,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d,d*f\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"d,r\")))]\n   \"\"\n   \"*\n@@ -1780,7 +1787,7 @@\n   [(set_attr \"type\" \"fpadd\")])\n \n (define_insn \"negsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=d,f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d,d*f\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"d,r\")))]\n   \"\"\n   \"@\n@@ -1793,7 +1800,7 @@\n ;;; less than 32.\n \n (define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=df\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=d*f\")\n \t(abs:DF (match_operand:DF 1 \"register_operand\" \"df\")))]\n   \"\"\n   \"*\n@@ -1819,7 +1826,7 @@\n   [(set_attr \"type\" \"multi\")])\n \n (define_insn \"abssf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=df\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=d*f\")\n \t(abs:SF (match_operand:SF 1 \"register_operand\" \"df\")))]\n   \"\"\n   \"*\n@@ -1861,7 +1868,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=r,f,d,d,m,o\")\n+  [(set (match_operand:TF 0 \"general_operand\" \"=r,*f,d,d,m,o\")\n \t(match_operand:TF 1 \"fpmove_src_operand\" \"r,GH,F,m,d,G\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], TFmode)\n@@ -1894,7 +1901,7 @@\n   [(set_attr \"type\" \"move,move,load,fpload,fpstore,fpstore\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=r,f,d,d,m\")\n+  [(set (match_operand:TF 0 \"general_operand\" \"=r,*f,d,d,m\")\n \t(match_operand:TF 1 \"fpmove_src_operand\" \"r,GH,F,m,d\"))]\n   \"current_function_args_size != 0\n    && (register_operand (operands[0], TFmode)\n@@ -1921,7 +1928,7 @@\n   [(set_attr \"type\" \"move,move,load,fpload,fpstore\")])\n \n (define_insn \"extendsftf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f,d\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=*f,d\")\n \t(float_extend:TF\n \t (match_operand:SF 1 \"register_operand\" \"d,f\")))]\n   \"TARGET_NUMERICS\"\n@@ -1931,7 +1938,7 @@\n   [(set_attr \"type\" \"fpmove\")])\n \n (define_insn \"extenddftf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f,d\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=*f,d\")\n \t(float_extend:TF\n \t (match_operand:DF 1 \"register_operand\" \"d,f\")))]\n   \"TARGET_NUMERICS\""}]}