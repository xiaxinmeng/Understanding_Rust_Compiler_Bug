{"sha": "8c4137c7ead515baaf1ac8340edeb3a442388b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM0MTM3YzdlYWQ1MTViYWFmMWFjODM0MGVkZWIzYTQ0MjM4OGI1Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-12T16:43:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-12T21:50:03Z"}, "message": "c++: Seed imported bindings [PR 99039]\n\nAs mentioned in 99040's fix, we can get inter-module using decls.  If the\nusing decl is the only reference to an import, we'll have failed to\nseed our imports leading to an assertion failure.  The fix is\nstraight-forwards, check binding contents when seeding imports.\n\n\tgcc/cp/\n\t* module.cc (module_state::write_cluster): Check bindings for\n\timported using-decls.\n\tgcc/testsuite/\n\t* g++.dg/modules/pr99039_a.C: New.\n\t* g++.dg/modules/pr99039_b.C: New.", "tree": {"sha": "d6ccd7dde1ca9927baaefec183c28bd9619e0546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6ccd7dde1ca9927baaefec183c28bd9619e0546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c4137c7ead515baaf1ac8340edeb3a442388b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4137c7ead515baaf1ac8340edeb3a442388b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c4137c7ead515baaf1ac8340edeb3a442388b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4137c7ead515baaf1ac8340edeb3a442388b5b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c27fe96f812df76ca07272d3c68765bd1f9dc08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c27fe96f812df76ca07272d3c68765bd1f9dc08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c27fe96f812df76ca07272d3c68765bd1f9dc08"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "520494f2543a3d8884df5e90e55fe0bd208a2e78", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=8c4137c7ead515baaf1ac8340edeb3a442388b5b", "patch": "@@ -3108,7 +3108,8 @@ class trees_out : public bytes_out {\n   unsigned section;\n #if CHECKING_P\n   int importedness;\t\t/* Checker that imports not occurring\n-\t\t\t\t   inappropriately.  */\n+\t\t\t\t   inappropriately.  +ve imports ok,\n+\t\t\t\t   -ve imports not ok.  */\n #endif\n \n public:\n@@ -14632,13 +14633,36 @@ module_state::write_cluster (elf_out *to, depset *scc[], unsigned size,\n \t{\n \t  depset *dep = b->deps[jx];\n \n-\t  if (!dep->is_binding ()\n-\t      && dep->is_import () && !TREE_VISITED (dep->get_entity ()))\n+\t  if (dep->is_binding ())\n \t    {\n-\t      tree import = dep->get_entity ();\n+\t      /* A cross-module using decl could be here.  */\n+\t      for (unsigned ix = dep->deps.length (); --ix;)\n+\t\t{\n+\t\t  depset *bind = dep->deps[ix];\n+\t\t  if (bind->get_entity_kind () == depset::EK_USING\n+\t\t      && bind->deps[1]->is_import ())\n+\t\t    {\n+\t\t      tree import = bind->deps[1]->get_entity ();\n+\t\t      if (!TREE_VISITED (import))\n+\t\t\t{\n+\t\t\t  sec.tree_node (import);\n+\t\t\t  dump (dumper::CLUSTER)\n+\t\t\t    && dump (\"Seeded import %N\", import);\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t      /* Also check the namespace itself.  */\n+\t      dep = dep->deps[0];\n+\t    }\n \n-\t      sec.tree_node (import);\n-\t      dump (dumper::CLUSTER) && dump (\"Seeded import %N\", import);\n+\t  if (dep->is_import ())\n+\t    {\n+\t      tree import = dep->get_entity ();\n+\t      if (!TREE_VISITED (import))\n+\t\t{\n+\t\t  sec.tree_node (import);\n+\t\t  dump (dumper::CLUSTER) && dump (\"Seeded import %N\", import);\n+\t\t}\n \t    }\n \t}\n     }"}, {"sha": "56041e948db4c9907b50a3c4c968d4c1c391968f", "filename": "gcc/testsuite/g++.dg/modules/pr99039_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_a.C?ref=8c4137c7ead515baaf1ac8340edeb3a442388b5b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/99039\n+// { dg-additional-options -fmodules-ts }\n+export  module  format;\n+// { dg-module-cmi format }\n+\n+export namespace NS\n+{\n+void Format ();\n+}"}, {"sha": "6fb76f584fa5b91064d95564573b0c044dc10d45", "filename": "gcc/testsuite/g++.dg/modules/pr99039_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c4137c7ead515baaf1ac8340edeb3a442388b5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99039_b.C?ref=8c4137c7ead515baaf1ac8340edeb3a442388b5b", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+export  module  hello;\n+// { dg-module-cmi hello }\n+import  format;\n+\n+export namespace NS\n+{\n+using NS::Format;\n+}"}]}