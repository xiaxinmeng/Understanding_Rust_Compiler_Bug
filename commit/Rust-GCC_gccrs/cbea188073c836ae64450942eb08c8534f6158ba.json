{"sha": "cbea188073c836ae64450942eb08c8534f6158ba", "node_id": "C_kwDOANBUbNoAKGNiZWExODgwNzNjODM2YWU2NDQ1MDk0MmViMDhjODUzNGY2MTU4YmE", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-10-13T12:40:34Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-10-13T12:40:34Z"}, "message": "rust: Implement TARGET_RUST_OS_INFO for *-*-vxworks*\n\ngcc/ChangeLog:\n\n\t* config.gcc (*-*-vxworks*): Set rust_target_objs and\n\t  target_has_targetrustm.\n\t* config/t-vxworks (vxworks-rust.o): New rule.\n\t* config/vxworks-rust.cc: New file.", "tree": {"sha": "dd20b23d566e53f147e9de50fe7f02d701010ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd20b23d566e53f147e9de50fe7f02d701010ac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbea188073c836ae64450942eb08c8534f6158ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbea188073c836ae64450942eb08c8534f6158ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbea188073c836ae64450942eb08c8534f6158ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbea188073c836ae64450942eb08c8534f6158ba/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fc003cb99dd5064b03328420774f6cd25ca3d56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc003cb99dd5064b03328420774f6cd25ca3d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc003cb99dd5064b03328420774f6cd25ca3d56"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "d33e5df597bc6490fb48388d5becc2ec87305f7c", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=cbea188073c836ae64450942eb08c8534f6158ba", "patch": "@@ -1053,6 +1053,9 @@ case ${target} in\n   extra_headers=\"${extra_headers} ../vxworks/vxworks-predef.h\"\n   target_has_targetcm=\"yes\"\n \n+  rust_target_objs=\"${rust_target_objs} vxworks-rust.o\"\n+  target_has_targetrustm=yes\n+\n   # This private header exposes a consistent interface for checks on\n   # the VxWorks version our runtime header files need to perform, based on\n   # what the system headers adverstise:"}, {"sha": "7fb2adf2b95da6372532e2c081e5c07f901a2d08", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=cbea188073c836ae64450942eb08c8534f6158ba", "patch": "@@ -24,6 +24,10 @@ vxworks-c.o: $(srcdir)/config/vxworks-c.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+vxworks-rust.o: $(srcdir)/config/vxworks-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n # We leverage $sysroot to find target system headers only, distributed\n # in a VxWorks (a)typical fashion with a different set of headers for\n # rtp vs kernel mode.  We setup SYSROOT_HEADERS_SUFFIX_SPEC to handle"}, {"sha": "76d618cdcd1ba632d3b82e0bdd50f3d66fa8cdc2", "filename": "gcc/config/vxworks-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig%2Fvxworks-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea188073c836ae64450942eb08c8534f6158ba/gcc%2Fconfig%2Fvxworks-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks-rust.cc?ref=cbea188073c836ae64450942eb08c8534f6158ba", "patch": "@@ -0,0 +1,40 @@\n+/* VxWorks support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for VxWorks targets.  */\n+\n+static void\n+vxworks_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"vxworks\");\n+  rust_add_target_info (\"target_vendor\", \"wrs\");\n+  rust_add_target_info (\"target_env\", \"gnu\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO vxworks_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}]}