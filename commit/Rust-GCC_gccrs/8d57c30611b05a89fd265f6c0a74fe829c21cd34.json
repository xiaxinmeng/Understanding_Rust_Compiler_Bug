{"sha": "8d57c30611b05a89fd265f6c0a74fe829c21cd34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1N2MzMDYxMWIwNWE4OWZkMjY1ZjZjMGE3NGZlODI5YzIxY2QzNA==", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-06-03T17:33:11Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-06-03T17:38:22Z"}, "message": "Simple patch only add assumed-rank to the list of possible attributes.\n\ngcc/fortran/ChangeLog:\n\n2020-06-03  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n\n\tPR fortran/95214\n\tPR fortran/66833\n\tPR fortran/67938\n\t* trans-expr.c (gfc_maybe_dereference_var): Add assumed-rank to\n\tcharacter dummy arguments list of possible attributes.\n\ngcc/testsuite/ChangeLog:\n\n2020-06-03  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n\n\tPR fortran/95214\n\tPR fortran/66833\n\tPR fortran/67938\n\t* gfortran.dg/PR95214.f90: New test.", "tree": {"sha": "8344f164a6b9ad014c288328c9e2896918c24702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8344f164a6b9ad014c288328c9e2896918c24702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d57c30611b05a89fd265f6c0a74fe829c21cd34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d57c30611b05a89fd265f6c0a74fe829c21cd34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d57c30611b05a89fd265f6c0a74fe829c21cd34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d57c30611b05a89fd265f6c0a74fe829c21cd34/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "887c45fb5b047171e82710baa51108d5c210eb42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887c45fb5b047171e82710baa51108d5c210eb42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/887c45fb5b047171e82710baa51108d5c210eb42"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "435eaeb2c992dc605fc976692fd28979506518e4", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d57c30611b05a89fd265f6c0a74fe829c21cd34/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d57c30611b05a89fd265f6c0a74fe829c21cd34/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=8d57c30611b05a89fd265f6c0a74fe829c21cd34", "patch": "@@ -2613,7 +2613,8 @@ gfc_maybe_dereference_var (gfc_symbol *sym, tree var, bool descriptor_only_p,\n     {\n       /* Dereference character pointer dummy arguments\n \t or results.  */\n-      if ((sym->attr.pointer || sym->attr.allocatable)\n+      if ((sym->attr.pointer || sym->attr.allocatable\n+\t   || (sym->as && sym->as->type == AS_ASSUMED_RANK))\n \t  && (sym->attr.dummy\n \t      || sym->attr.function\n \t      || sym->attr.result))"}, {"sha": "8224767cb6775ebae1aab267c117abdbd28835fc", "filename": "gcc/testsuite/gfortran.dg/PR95214.f90", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d57c30611b05a89fd265f6c0a74fe829c21cd34/gcc%2Ftestsuite%2Fgfortran.dg%2FPR95214.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d57c30611b05a89fd265f6c0a74fe829c21cd34/gcc%2Ftestsuite%2Fgfortran.dg%2FPR95214.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR95214.f90?ref=8d57c30611b05a89fd265f6c0a74fe829c21cd34", "patch": "@@ -0,0 +1,84 @@\n+! { dg-do run }\n+!\n+! PR fortran/95214\n+!\n+\n+program chr_p\n+\n+  implicit none\n+\n+  integer, parameter :: u = 65\n+  \n+  integer, parameter :: n = 26\n+  \n+  character :: c(n)\n+  integer   :: i\n+\n+  c = [(achar(i), i=u,u+n-1)]\n+  call chr_s(c, c)\n+  call gfc_descriptor_c_char(c)\n+  call s1(c)\n+  call s1s_a(c)\n+  call s1s_b(c)\n+  call s2(c)\n+  stop\n+  \n+contains\n+\n+  subroutine chr_s(a, b)\n+    character, intent(in) :: a(..)\n+    character, intent(in) :: b(:)\n+\n+    integer :: i\n+\n+    select rank(a)\n+    rank(1)\n+      do i = 1, size(a)\n+        if(a(i)/=b(i)) stop 1\n+      end do\n+    rank default\n+      stop 2\n+    end select\n+    return\n+  end subroutine chr_s\n+\n+  ! From Bug 66833\n+  ! Contributed by Damian Rouson <damian@sourceryinstitute.org>\n+  subroutine gfc_descriptor_c_char(a)\n+    character a(..)\n+    if(rank(a)/=1) stop 3 ! ICE (also for lbound, ubound, and c_loc)\n+  end subroutine gfc_descriptor_c_char\n+\n+\n+  ! From Bug 67938\n+  ! Contributed by Gerhard Steinmetz <gerhard.steinmetz.fortran@t-online.de>\n+  \n+  ! example z1.f90\n+  subroutine s1(x)\n+    character(1) :: x(..)\n+    if(any(lbound(x)/=[1])) stop 4\n+    if(any(ubound(x)/=[n])) stop 5\n+  end subroutine s1\n+  \n+  ! example z1s.f90\n+  subroutine s1s_a(x)\n+    character :: x(..)\n+    if(size(x)/=n) stop 6\n+  end subroutine s1s_a\n+  \n+  subroutine s1s_b(x)\n+    character(77) :: x(..)\n+    if(size(x)/=n) stop 7\n+  end subroutine s1s_b\n+  \n+  ! example z2.f90\n+  subroutine s2(x)\n+    character(1) :: x(..)\n+    if(lbound(x, dim=1)/=1) stop 8\n+    if(ubound(x, dim=1)/=n) stop 9\n+    if(size(x, dim=1)/=n)   stop 10\n+  end subroutine s2\n+  \n+end program chr_p\n+\n+"}]}