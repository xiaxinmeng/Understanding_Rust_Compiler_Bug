{"sha": "8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1OWM4YzA0MzUwMzJlNGFjZWI0ZmUwZjc3M2MxMWJiZTVhNmEzOA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-01-15T06:17:04Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-01-15T06:17:04Z"}, "message": "config.gcc (x86_64-*-*): Install mmintrin.h and xmmintrin.h.\n\n\t* config.gcc (x86_64-*-*): Install mmintrin.h and xmmintrin.h.\n\nfor testsuite:\n\t* gcc.dg/i386-mmx-1.c: Also run on x86-64.\n\t* gcc.dg/i386-mmx-2.c: Likewise.\n\t* gcc.dg/i386-sse-1.c: Likewise.\n\t* gcc.dg/i386-sse-2.c: Likewise.\n\t* gcc.dg/i386-sse-3.c: Likewise.\n\nFrom-SVN: r48864", "tree": {"sha": "ccbef767acc7f283f818276d8a6abc954eeda225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccbef767acc7f283f818276d8a6abc954eeda225"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/comments", "author": null, "committer": null, "parents": [{"sha": "70f122f2467df0432afee22564b58044aed086c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f122f2467df0432afee22564b58044aed086c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f122f2467df0432afee22564b58044aed086c3"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "630ed957f0da6eec4a6bbe124ef4fbef90b9e998", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,3 +1,7 @@\n+2002-01-15  Andreas Jaeger  <aj@suse.de>\n+\n+\t* config.gcc (x86_64-*-*): Install mmintrin.h and xmmintrin.h.\n+\n 2002-01-15  Kazu Hirata  <kazu@hxi.com>\n \n \t* mips-tfile.c: Fix formatting.\n@@ -86,12 +90,12 @@ Mon Jan 14 20:18:19 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t(extendsidi2, zero_extendsidi2): Remove no-conflict blocks.\n \n-\t(movti splitter): Never use register 0 as base register.\t\n+\t(movti splitter): Never use register 0 as base register.\n \n 2002-01-14  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* combine.c (simplify_shift_const): Always generate new rtx \n-\tfor shift expression instead of reusing given expression. \n+\t* combine.c (simplify_shift_const): Always generate new rtx\n+\tfor shift expression instead of reusing given expression.\n \n Mon Jan 14 07:08:55 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -130,7 +134,7 @@ Sun Jan 13 06:55:31 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2002-01-12  Tom Rix  <trix@redhat.com>\n \n-\t* config/rs6000/rs6000.c (rs6000_emit_set_long_const): Use ior for \n+\t* config/rs6000/rs6000.c (rs6000_emit_set_long_const): Use ior for\n \tTARGET_POWERPC64.\n \n 2002-01-12  Richard Henderson  <rth@redhat.com>\n@@ -153,7 +157,7 @@ Sat Jan 12 08:54:51 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \toffsets, and change line folding.\n \t* optabs.c (expand_binop): Remove warnings.\n \t* sdbout.c (sdbout_record_type_name): Constify NAME to avoid warning.\n-\t\n+\n 2002-01-12  Graham Stott <grahams@redhat.com>\n \n \t* attribs.c (handle_deprecated_attribute): constify WHAT.\n@@ -209,7 +213,7 @@ Sat Jan 12 08:54:51 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* conflict.c (conflict_graph_compute): Free regsets when finished.\n \t* ssa.c (compute_coalesced_reg_partition): Likewise.\n-\t\n+\n 2002-01-12  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* global.c (find_reg): Check for HARD_REGNO_CALL_PART_CLOBBERED"}, {"sha": "ffb1e857707832861fc5d80f3965d2b2a5fa57de", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -235,6 +235,7 @@ i[34567]86-*-*)\n \t;;\n x86_64-*-*)\n \tcpu_type=i386\n+\textra_headers=\"mmintrin.h xmmintrin.h\"\n \t;;\n ia64-*-*)\n \textra_headers=ia64intrin.h"}, {"sha": "5a8c11d2e5df7b916f13ce79d9bc6dc6f02dd61f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,3 +1,11 @@\n+2002-01-15  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc.dg/i386-mmx-1.c: Also run on x86-64.\n+\t* gcc.dg/i386-mmx-2.c: Likewise.\n+\t* gcc.dg/i386-sse-1.c: Likewise.\n+\t* gcc.dg/i386-sse-2.c: Likewise.\n+\t* gcc.dg/i386-sse-3.c: Likewise.\n+\n 2001-01-14  David Billinghurst <David.Billinghurst@riotinto.com>\n \n         * g77.f-torture/execute/intrinsic-unix-bessel.f:\n@@ -23,7 +31,7 @@ Fri Jan 11 12:13:30 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2002-01-08  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/altivec-4.c: Add test for mtvscr, dssall, mfvscr, \n+        * gcc.dg/altivec-4.c: Add test for mtvscr, dssall, mfvscr,\n \tdss, lvsl, lvsr, dstt, dstst, dststt, dst.\n \n 2002-01-09  Richard Henderson  <rth@redhat.com>"}, {"sha": "a658909853cce74a545c9eb15bfff6264cb510c8", "filename": "gcc/testsuite/gcc.dg/i386-mmx-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-1.c?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -mmmx\" } */\n \n /* Test that the intrinsics compile with optimization.  All of them are"}, {"sha": "0c38579f89341762f071feae82bf7fdbdbb54c14", "filename": "gcc/testsuite/gcc.dg/i386-mmx-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-2.c?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O0 -mmmx\" } */\n \n /* Test that the intrinsics compile without optimization.  All of them are"}, {"sha": "1f657e1f27392c3b3dc464c88a44ff2322bc4d4b", "filename": "gcc/testsuite/gcc.dg/i386-sse-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-1.c?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -msse\" } */\n \n /* Test that the intrinsics compile with optimization.  All of them are"}, {"sha": "38e4e56acbe2b4fa0468dc3e3b151c9545e6ff9e", "filename": "gcc/testsuite/gcc.dg/i386-sse-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-2.c?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O0 -msse\" } */\n \n /* Test that the intrinsics compile without optimization.  All of them are"}, {"sha": "d67a5910cdc023953bef9f9efaa1ce92dcd33fea", "filename": "gcc/testsuite/gcc.dg/i386-sse-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559c8c0435032e4aceb4fe0f773c11bbe5a6a38/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c?ref=8559c8c0435032e4aceb4fe0f773c11bbe5a6a38", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -msse\" } */\n \n /* Test that the intrinsics compile with optimization.  These were not"}]}