{"sha": "449c480110f6c57085db9c005127052731a97395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ5YzQ4MDExMGY2YzU3MDg1ZGI5YzAwNTEyNzA1MjczMWE5NzM5NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-11-05T16:17:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-11-05T16:17:03Z"}, "message": "lwg-active.html, [...]: Import Revision 45.\n\n2006-11-05  Paolo Carlini  <pcarlini@suse.de>\n\n\t* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 45.\n\t* docs/html/ext/lwg-closed.html: Add.\n\t* docs/html/ext/howto.html: Adjust.\n\nFrom-SVN: r118502", "tree": {"sha": "cde5bfbb3a1bcaa94e2901c15a3ed0541f4aee49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde5bfbb3a1bcaa94e2901c15a3ed0541f4aee49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/449c480110f6c57085db9c005127052731a97395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449c480110f6c57085db9c005127052731a97395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/449c480110f6c57085db9c005127052731a97395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449c480110f6c57085db9c005127052731a97395/comments", "author": null, "committer": null, "parents": [{"sha": "f4d4085c10bb2b4d6f9ca4524adfc0b809c7cf20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d4085c10bb2b4d6f9ca4524adfc0b809c7cf20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d4085c10bb2b4d6f9ca4524adfc0b809c7cf20"}], "stats": {"total": 7916, "additions": 7199, "deletions": 717}, "files": [{"sha": "7b94c3b8cf7f4a75ff55356fcfe9a37499770a13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=449c480110f6c57085db9c005127052731a97395", "patch": "@@ -1,3 +1,9 @@\n+2006-11-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 45.\n+\t* docs/html/ext/lwg-closed.html: Add.\n+\t* docs/html/ext/howto.html: Adjust.\n+\n 2006-10-30  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/utility (tuple_size<std::pair<> >::value): Provide"}, {"sha": "8d9bee14e60367f5011108fea97a60f7c7a4a9d3", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=449c480110f6c57085db9c005127052731a97395", "patch": "@@ -580,14 +580,14 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n     <dd>Fix the parameters.\n     </dd>\n \n-    <dt><a href=\"lwg-active.html#512\">512</a>:\n+    <dt><a href=\"lwg-closed.html#512\">512</a>:\n         <em>Seeding subtract_with_carry_01 from a single unsigned long</em>\n     </dt>\n     <dd>Construct a <code>linear_congruential</code> engine and seed with it.\n     </dd>\n \n-    <dt><a href=\"lwg-active.html#538\">538</a>:\n-        <em>DR 538. 241 again: Does unique_copy() require CopyConstructible\n+    <dt><a href=\"lwg-defects.html#538\">538</a>:\n+        <em>241 again: Does unique_copy() require CopyConstructible\n \t    and Assignable?</em>\n     </dt>\n     <dd>In case of input_iterator/output_iterator rely on Assignability of"}, {"sha": "a4f69b645110ab364929445f589bb17a7edc304a", "filename": "libstdc++-v3/docs/html/ext/lwg-active.html", "status": "modified", "additions": 1132, "deletions": 691, "changes": 1823, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-active.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-active.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-active.html?ref=449c480110f6c57085db9c005127052731a97395"}, {"sha": "19de85138dfce6fcab7d39a3dd860cfc108717c9", "filename": "libstdc++-v3/docs/html/ext/lwg-closed.html", "status": "added", "additions": 5669, "deletions": 0, "changes": 5669, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-closed.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-closed.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-closed.html?ref=449c480110f6c57085db9c005127052731a97395"}, {"sha": "94e4cb0a5d4e5191c5909f6cca1daa0fd466df3b", "filename": "libstdc++-v3/docs/html/ext/lwg-defects.html", "status": "modified", "additions": 389, "deletions": 23, "changes": 412, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-defects.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449c480110f6c57085db9c005127052731a97395/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-defects.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Flwg-defects.html?ref=449c480110f6c57085db9c005127052731a97395", "patch": "@@ -8,11 +8,11 @@\n <table>\n <tbody><tr>\n <td align=\"left\">Doc. no.</td>\n-<td align=\"left\">N2092=06-0162</td>\n+<td align=\"left\">N2131=06-0201</td>\n </tr>\n <tr>\n <td align=\"left\">Date:</td>\n-<td align=\"left\">2006-09-08</td>\n+<td align=\"left\">2006-11-03</td>\n </tr>\n <tr>\n <td align=\"left\">Project:</td>\n@@ -23,7 +23,7 @@\n <td align=\"left\">Howard Hinnant &lt;howard.hinnant@gmail.com&gt;</td>\n </tr>\n </tbody></table>\n-<h1>C++ Standard Library Defect Report List (Revision R44)</h1>\n+<h1>C++ Standard Library Defect Report List (Revision R45)</h1>\n   <p>Reference ISO/IEC IS 14882:1998(E)</p>\n   <p>Also see:</p>\n     <ul>\n@@ -45,6 +45,16 @@ <h1>C++ Standard Library Defect Report List (Revision R44)</h1>\n   document.</p>\n <h2>Revision History</h2>\n <ul>\n+<li>R45: \n+2006-11-03 post-Portland mailing.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#520\">520</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#521\">521</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#530\">530</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#535\">535</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#537\">537</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#538\">538</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#540\">540</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#541\">541</a> to WP.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#504\">504</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#512\">512</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#516\">516</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#544\">544</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#549\">549</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#554\">554</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#555\">555</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#558\">558</a> to NAD.\n+Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#569\">569</a> to Dup.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#518\">518</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#523\">523</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#524\">524</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#542\">542</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#556\">556</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#557\">557</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#559\">559</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#597\">597</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#606\">606</a> to Open.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#543\">543</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#545\">545</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#549\">549</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#549\">549</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#598\">598</a> - <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#603\">603</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#605\">605</a> to Ready.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#531\">531</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#551\">551</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#604\">604</a> to Review.\n+Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#593\">593</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#609\">609</a>.\n+</li>\n <li>R44: \n 2006-09-08 pre-Portland mailing.\n Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#583\">583</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#592\">592</a>.\n@@ -53,14 +63,14 @@ <h2>Revision History</h2>\n 2006-06-23 mid-term mailing.\n Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#575\">575</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#582\">582</a>.\n Reopened <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#255\">255</a>.\n-Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#520\">520</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#541\">541</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#544\">544</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#569\">569</a> to Tentatively Ready.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#520\">520</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#541\">541</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#544\">544</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#569\">569</a> to Tentatively Ready.\n </li>\n <li>R42: \n 2006-04-21 post-Berlin mailing.\n Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#567\">567</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#572\">572</a>.\n Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#499\">499</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#501\">501</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#506\">506</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#509\">509</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#511\">511</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#513\">513</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#514\">514</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#517\">517</a> to NAD.\n-Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#502\">502</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#503\">503</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#515\">515</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#516\">516</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#522\">522</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#525\">525</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#529\">529</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#532\">532</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#536\">536</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#539\">539</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#548\">548</a> to Open.\n-Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#504\">504</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#512\">512</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#521\">521</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#530\">530</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#531\">531</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#535\">535</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#537\">537</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#538\">538</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#540\">540</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#549\">549</a> to Ready.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#502\">502</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#503\">503</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#515\">515</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#516\">516</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#522\">522</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#525\">525</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#529\">529</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#532\">532</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#536\">536</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#539\">539</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#548\">548</a> to Open.\n+Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#504\">504</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#512\">512</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#521\">521</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#530\">530</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#531\">531</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#535\">535</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#537\">537</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#538\">538</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#540\">540</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#549\">549</a> to Ready.\n Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#247\">247</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#294\">294</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#362\">362</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#369\">369</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#371\">371</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#376\">376</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#384\">384</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#475\">475</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#478\">478</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#495\">495</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#497\">497</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#505\">505</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#507\">507</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#508\">508</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#519\">519</a> to WP.\n Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#534\">534</a> to Review.\n </li>\n@@ -72,21 +82,21 @@ <h2>Revision History</h2>\n </li>\n <li>R40: \n 2005-12-16 mid-term mailing.\n-Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#529\">529</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#535\">535</a>.\n+Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#529\">529</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#535\">535</a>.\n </li>\n <li>R39: \n 2005-10-14 post-Mont Tremblant mailing.\n Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#526\">526</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#528\">528</a>.\n Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#280\">280</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#461\">461</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#464\">464</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#465\">465</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#467\">467</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#468\">468</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#474\">474</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#496\">496</a> from Ready to WP as per the vote from Mont Tremblant.\n Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#247\">247</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#294\">294</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#342\">342</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#362\">362</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#369\">369</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#371\">371</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#376\">376</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#384\">384</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#475\">475</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#478\">478</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#495\">495</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#497\">497</a> from Review to Ready.\n-Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#498\">498</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#504\">504</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#506\">506</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#509\">509</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#510\">510</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#511\">511</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#512\">512</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#513\">513</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#514\">514</a> from New to Open.\n+Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#498\">498</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#504\">504</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#506\">506</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#509\">509</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#510\">510</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#511\">511</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#512\">512</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#513\">513</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#514\">514</a> from New to Open.\n Moved issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#505\">505</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#507\">507</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#508\">508</a>, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#519\">519</a> from New to Ready.\n Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#500\">500</a> from New to NAD.\n Moved issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#518\">518</a> from New to Review.\n </li>\n <li>R38: \n 2005-07-03 pre-Mont Tremblant mailing.\n-Merged open TR1 issues in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#504\">504</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#522\">522</a>.\n+Merged open TR1 issues in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#504\">504</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#522\">522</a>.\n Added new issues <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#523\">523</a>-<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#523\">523</a>\n </li>\n <li>R37: \n@@ -876,7 +886,7 @@ <h2>Defect Reports</h2>\n   unchanged, and there are no changes to the values in <tt>[to, to_limit)</tt>.</p>\n </blockquote>\n <hr>\n-<a name=\"20\"><h3>20.&nbsp;Thousands_sep returns wrong type</h3></a><p><b>Section:</b>&nbsp;22.2.3.1.2 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-locales.html#lib.facet.numpunct.virtuals\"> [lib.facet.numpunct.virtuals]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Nathan Myers&nbsp; <b>Date:</b>&nbsp;6 Aug 1998</p>\n+<a name=\"20\"></a><h3><a name=\"20\">20.&nbsp;Thousands_sep returns wrong type</a></h3><p><b>Section:</b>&nbsp;22.2.3.1.2 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-locales.html#lib.facet.numpunct.virtuals\"> [lib.facet.numpunct.virtuals]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Nathan Myers&nbsp; <b>Date:</b>&nbsp;6 Aug 1998</p>\n <p>The synopsis for numpunct&lt;&gt;::do_thousands_sep, and the\n definition of numpunct&lt;&gt;::thousands_sep which calls it, specify\n that it returns a value of type char_type. Here it is erroneously\n@@ -1665,7 +1675,7 @@ <h2>Defect Reports</h2>\n   <p>EFFECTS: Constructs an object of class <tt>failure</tt>.</p>\n </blockquote>\n <hr>\n-<a name=\"49\"></a><h3><a name=\"49\">49.&nbsp;Underspecification of ios_base::sync_with_stdio</a></h3><p><b>Section:</b>&nbsp;27.4.2.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.ios.members.static\"> [lib.ios.members.static]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Matt Austern&nbsp; <b>Date:</b>&nbsp;21 Jun 1998</p>\n+<a name=\"49\"><h3>49.&nbsp;Underspecification of ios_base::sync_with_stdio</h3></a><p><b>Section:</b>&nbsp;27.4.2.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.ios.members.static\"> [lib.ios.members.static]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Matt Austern&nbsp; <b>Date:</b>&nbsp;21 Jun 1998</p>\n <p>Two problems</p>\n \n <p>(1) 27.4.2.4 doesn't say what ios_base::sync_with_stdio(f)\n@@ -3990,7 +4000,7 @@ <h2>Defect Reports</h2>\n for basic_streambuf&lt;&gt;::seekpos, or for basic_filebuf&lt;&gt;::seekoff or\n basic_filebuf&lt;&gt;::seekpos.]</i></p>\n <hr>\n-<a name=\"137\"></a><h3><a name=\"137\">137.&nbsp;Do use_facet and has_facet look in the global locale?</a></h3><p><b>Section:</b>&nbsp;22.1.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-locales.html#lib.locale\"> [lib.locale]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Angelika Langer&nbsp; <b>Date:</b>&nbsp;17 Mar 1999</p>\n+<a name=\"137\"><h3>137.&nbsp;Do use_facet and has_facet look in the global locale?</h3></a><p><b>Section:</b>&nbsp;22.1.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-locales.html#lib.locale\"> [lib.locale]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Angelika Langer&nbsp; <b>Date:</b>&nbsp;17 Mar 1999</p>\n <p>Section 22.1.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-locales.html#lib.locale\"> [lib.locale]</a> says:</p>\n \n <p>-4- In the call to use_facet&lt;Facet&gt;(loc), the type argument\n@@ -4060,7 +4070,7 @@ <h2>Defect Reports</h2>\n <tt><br>\n </tt>&#8212; <tt>xpos &lt;= pos</tt> and <tt>xpos &lt; size();</tt></p>\n <hr>\n-<a name=\"142\"></a><h3><a name=\"142\">142.&nbsp;lexicographical_compare complexity wrong</a></h3><p><b>Section:</b>&nbsp;25.3.8 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-algorithms.html#lib.alg.lex.comparison\"> [lib.alg.lex.comparison]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Howard Hinnant&nbsp; <b>Date:</b>&nbsp;20 Jun 1999</p>\n+<a name=\"142\"><h3>142.&nbsp;lexicographical_compare complexity wrong</h3></a><p><b>Section:</b>&nbsp;25.3.8 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-algorithms.html#lib.alg.lex.comparison\"> [lib.alg.lex.comparison]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Howard Hinnant&nbsp; <b>Date:</b>&nbsp;20 Jun 1999</p>\n <p>The lexicographical_compare complexity is specified as:<br>\n <br>\n &nbsp;&nbsp;&nbsp;&nbsp; \"At most min((last1 - first1), (last2 - first2))\n@@ -4198,7 +4208,7 @@ <h2>Defect Reports</h2>\n <p>For inserters, the LWG believes there is no defect; the standard is correct\n as written.</p>\n <hr>\n-<a name=\"147\"></a><h3><a name=\"147\">147.&nbsp;Library Intro refers to global functions that aren't global</a></h3><p><b>Section:</b>&nbsp;17.4.4.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-intro.html#lib.global.functions\"> [lib.global.functions]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Lois Goldthwaite&nbsp; <b>Date:</b>&nbsp;4 Jun 1999</p>\n+<a name=\"147\"><h3>147.&nbsp;Library Intro refers to global functions that aren't global</h3></a><p><b>Section:</b>&nbsp;17.4.4.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-intro.html#lib.global.functions\"> [lib.global.functions]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Lois Goldthwaite&nbsp; <b>Date:</b>&nbsp;4 Jun 1999</p>\n <p>The library had many global functions until 17.4.1.1 [lib.contents]\n paragraph 2 was added: </p>\n \n@@ -4716,8 +4726,8 @@ <h2>Defect Reports</h2>\n <p><i>[Kona: Dietmar is working on a proposed resolution.]</i></p>\n <p><i>[Post-Tokyo: Dietmar supplied the above wording.]</i></p>\n <hr>\n-<a name=\"172\"></a><h3><a name=\"172\">172.&nbsp;Inconsistent types for <tt>basic_istream::ignore()</tt>\n-</a></h3><p><b>Section:</b>&nbsp;27.6.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.istream.unformatted\"> [lib.istream.unformatted]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Greg Comeau, Dietmar K\ufffdhl&nbsp; <b>Date:</b>&nbsp;23 Jul 1999</p>\n+<a name=\"172\"><h3>172.&nbsp;Inconsistent types for <tt>basic_istream::ignore()</tt>\n+</h3></a><p><b>Section:</b>&nbsp;27.6.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.istream.unformatted\"> [lib.istream.unformatted]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#TC\">TC</a>&nbsp; <b>Submitter:</b>&nbsp;Greg Comeau, Dietmar K\ufffdhl&nbsp; <b>Date:</b>&nbsp;23 Jul 1999</p>\n <p>In 27.6.1.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.istream\"> [lib.istream]</a> the function\n <tt>ignore()</tt> gets an object of type <tt>streamsize</tt> as first\n argument. However, in 27.6.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.istream.unformatted\"> [lib.istream.unformatted]</a>\n@@ -5249,7 +5259,7 @@ <h2>Defect Reports</h2>\n checked against changes supplied by Andy Sawyer. It should be further\n checked by the LWG.]</i></p>\n <hr>\n-<a name=\"184\"></a><h3><a name=\"184\">184.&nbsp;numeric_limits&lt;bool&gt; wording problems</a></h3><p><b>Section:</b>&nbsp;18.2.1.5 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-support.html#lib.numeric.special\"> [lib.numeric.special]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Gabriel Dos Reis&nbsp; <b>Date:</b>&nbsp;21 Jul 1999</p>\n+<a name=\"184\"><h3>184.&nbsp;numeric_limits&lt;bool&gt; wording problems</h3></a><p><b>Section:</b>&nbsp;18.2.1.5 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-support.html#lib.numeric.special\"> [lib.numeric.special]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Gabriel Dos Reis&nbsp; <b>Date:</b>&nbsp;21 Jul 1999</p>\n <p>bools are defined by the standard to be of integer types, as per\n 3.9.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/basic.html#basic.fundamental\"> [basic.fundamental]</a> paragraph 7.  However \"integer types\"\n seems to have a special meaning for the author of 18.2. The net effect\n@@ -7804,7 +7814,7 @@ <h2>Defect Reports</h2>\n     or rend().\n </blockquote>\n <hr>\n-<a name=\"264\"><h3>264.&nbsp;Associative container <tt>insert(i, j)</tt> complexity requirements are not feasible.</h3></a><p><b>Section:</b>&nbsp;23.1.2 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.associative.reqmts\"> [lib.associative.reqmts]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;John Potter&nbsp; <b>Date:</b>&nbsp;07 Sep 2000</p>\n+<a name=\"264\"></a><h3><a name=\"264\">264.&nbsp;Associative container <tt>insert(i, j)</tt> complexity requirements are not feasible.</a></h3><p><b>Section:</b>&nbsp;23.1.2 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.associative.reqmts\"> [lib.associative.reqmts]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;John Potter&nbsp; <b>Date:</b>&nbsp;07 Sep 2000</p>\n <p>\n Table 69 requires linear time if [i, j) is sorted.  Sorted is necessary but not sufficient.\n Consider inserting a sorted range of even integers into a set&lt;int&gt; containing the odd\n@@ -8321,7 +8331,7 @@ <h2>Defect Reports</h2>\n                 ios_base::iostate&amp; err, float&amp; val) const;\n </pre>\n <hr>\n-<a name=\"276\"><h3>276.&nbsp;Assignable requirement for container value type overly strict</h3></a><p><b>Section:</b>&nbsp;23.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.container.requirements\"> [lib.container.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Peter Dimov&nbsp; <b>Date:</b>&nbsp;07 Nov 2000</p>\n+<a name=\"276\"></a><h3><a name=\"276\">276.&nbsp;Assignable requirement for container value type overly strict</a></h3><p><b>Section:</b>&nbsp;23.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.container.requirements\"> [lib.container.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Peter Dimov&nbsp; <b>Date:</b>&nbsp;07 Nov 2000</p>\n <p>\n 23.1/3 states that the objects stored in a container must be\n Assignable.  23.3.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.map\"> [lib.map]</a>, paragraph 2,\n@@ -10983,7 +10993,7 @@ <h2>Defect Reports</h2>\n <p><b>Proposed resolution:</b></p>\n <p>In section 21.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-strings.html#lib.c.strings\"> [lib.c.strings]</a>, add \"tm\" to table 48.</p>\n <hr>\n-<a name=\"346\"><h3>346.&nbsp;Some iterator member functions should be const</h3></a><p><b>Section:</b>&nbsp;24.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iterators.html#lib.iterator.requirements\"> [lib.iterator.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Jeremy Siek&nbsp; <b>Date:</b>&nbsp;20 Oct 2001</p>\n+<a name=\"346\"></a><h3><a name=\"346\">346.&nbsp;Some iterator member functions should be const</a></h3><p><b>Section:</b>&nbsp;24.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iterators.html#lib.iterator.requirements\"> [lib.iterator.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Jeremy Siek&nbsp; <b>Date:</b>&nbsp;20 Oct 2001</p>\n <p>Iterator member functions and operators that do not change the state\n of the iterator should be defined as const member functions or as\n functions that take iterators either by const reference or by\n@@ -11719,7 +11729,7 @@ <h2>Defect Reports</h2>\n <p><b>Rationale:</b></p>\n <p>Fixes an obvious typo.</p>\n <hr>\n-<a name=\"371\"></a><h3><a name=\"371\">371.&nbsp;Stability of multiset and multimap member functions</a></h3><p><b>Section:</b>&nbsp;23.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.container.requirements\"> [lib.container.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Frank Compagner&nbsp; <b>Date:</b>&nbsp;20 Jul 2002</p>\n+<a name=\"371\"><h3>371.&nbsp;Stability of multiset and multimap member functions</h3></a><p><b>Section:</b>&nbsp;23.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.container.requirements\"> [lib.container.requirements]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Frank Compagner&nbsp; <b>Date:</b>&nbsp;20 Jul 2002</p>\n <p>\n The requirements for multiset and multimap containers (23.1\n [lib.containers.requirements], 23.1.2 [lib.associative.reqmnts],\n@@ -12386,7 +12396,7 @@ <h2>Defect Reports</h2>\n Throws: Shall not throw exceptions.\n </p>\n <hr>\n-<a name=\"404\"></a><h3><a name=\"404\">404.&nbsp;May a replacement allocation function be declared inline?</a></h3><p><b>Section:</b>&nbsp;17.4.3.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-intro.html#lib.replacement.functions\"> [lib.replacement.functions]</a>, 18.5.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-support.html#lib.new.delete\"> [lib.new.delete]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Matt Austern&nbsp; <b>Date:</b>&nbsp;24 Apr 2003</p>\n+<a name=\"404\"><h3>404.&nbsp;May a replacement allocation function be declared inline?</h3></a><p><b>Section:</b>&nbsp;17.4.3.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-intro.html#lib.replacement.functions\"> [lib.replacement.functions]</a>, 18.5.1 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-support.html#lib.new.delete\"> [lib.new.delete]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Matt Austern&nbsp; <b>Date:</b>&nbsp;24 Apr 2003</p>\n <p>\n The eight basic dynamic memory allocation functions (single-object\n and array versions of ::operator new and ::operator delete, in the\n@@ -13910,7 +13920,7 @@ <h2>Defect Reports</h2>\n undefined.\"\n </blockquote>\n <hr>\n-<a name=\"453\"><h3>453.&nbsp;basic_stringbuf::seekoff need not always fail for an empty stream</h3></a><p><b>Section:</b>&nbsp;27.7.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.stringbuf.virtuals\"> [lib.stringbuf.virtuals]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#DR\">DR</a>&nbsp; <b>Submitter:</b>&nbsp;Bill Plauger&nbsp; <b>Date:</b>&nbsp;30 Jan 2004</p>\n+<a name=\"453\"></a><h3><a name=\"453\">453.&nbsp;basic_stringbuf::seekoff need not always fail for an empty stream</a></h3><p><b>Section:</b>&nbsp;27.7.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.stringbuf.virtuals\"> [lib.stringbuf.virtuals]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#DR\">DR</a>&nbsp; <b>Submitter:</b>&nbsp;Bill Plauger&nbsp; <b>Date:</b>&nbsp;30 Jan 2004</p>\n <pre>  pos_type basic_stringbuf::seekoff(off_type, ios_base::seekdir,\n                                     ios_base::openmode);\n </pre>\n@@ -14736,6 +14746,125 @@ <h2>Defect Reports</h2>\n of <tt>data()</tt> is unspecified.\n </blockquote>\n <hr>\n+<a name=\"520\"><h3>520.&nbsp;Result_of and pointers to data members</h3></a><p><b>Section:</b>&nbsp;TR1 3.6 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/tr1.html#tr.func.bind\"> [tr.func.bind]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Pete Becker&nbsp; <b>Date:</b>&nbsp;3 Jul 2005</p>\n+<p>\n+In the original proposal for binders, the return type of bind() when\n+called with a pointer to member data as it's callable object was\n+defined to be mem_fn(ptr); when Peter Dimov and I  unified the\n+descriptions of the TR1 function objects we hoisted the descriptions\n+of return types into the INVOKE pseudo-function and into result_of.\n+Unfortunately, we left pointer to member data out of result_of, so\n+bind doesn't have any specified behavior when called with a pointer\n+to  member data.\n+</p>\n+<p><b>Proposed resolution:</b></p>\n+<p><i>[\n+Pete and Peter will provide wording.\n+]</i></p>\n+\n+<p>\n+In 20.5.4 [lib.func.ret] ([tr.func.ret]) p3 add the following bullet after bullet 2:\n+</p>\n+<ol start=\"3\">\n+<li>If <tt>F</tt> is a member data pointer type <tt>R T::*</tt>, <tt>type</tt>\n+shall be <tt><i>cv</i> R&amp;</tt> when <tt>T1</tt> is <tt><i>cv</i> U1&amp;</tt>,\n+<tt>R</tt> otherwise.</li>\n+</ol>\n+\n+<p><i>[\n+Peter provided wording.\n+]</i></p>\n+<hr>\n+<a name=\"521\"><h3>521.&nbsp;Garbled requirements for argument_type in reference_wrapper</h3></a><p><b>Section:</b>&nbsp;TR1 2.1.2 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/tr1.html#tr.util.refwrp.refwrp\"> [tr.util.refwrp.refwrp]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Pete Becker&nbsp; <b>Date:</b>&nbsp;3 Jul 2005</p>\n+<p>\n+2.1.2/3, second bullet item currently says that reference_wrapper&lt;T&gt; is\n+derived from unary_function&lt;T, R&gt; if T is:\n+</p>\n+<blockquote>\n+a pointer to member function type with cv-qualifier cv and no arguments;\n+the type T1 is cv T* and R is the return type of the pointer to member function;\n+</blockquote>\n+<p>\n+The type of T1 can't be cv T*, 'cause that's a pointer to a pointer to member\n+function. It should be a pointer to the class that T is a pointer to member of.\n+Like this:\n+</p>\n+<blockquote>\n+a pointer to a member function R T0::f() cv (where cv represents the member\n+function's cv-qualifiers); the type T1 is cv T0*\n+</blockquote>\n+<p>\n+Similarly, bullet item 2 in 2.1.2/4 should be:\n+</p>\n+<blockquote>\n+a pointer to a member function R T0::f(T2) cv (where cv represents the member\n+function's cv-qualifiers); the type T1 is cv T0*\n+</blockquote>\n+<p><b>Proposed resolution:</b></p>\n+\n+<p>\n+Change bullet item 2 in 2.1.2/3:\n+</p>\n+\n+<blockquote>\n+<ul>\n+<li>\n+a pointer to member function <del>type with cv-qualifier <tt><i>cv</i></tt> and no arguments;\n+the type <tt>T1</tt> is <tt><i>cv</i> T*</tt> and <tt>R</tt> is the return \n+type of the pointer to member function</del> <ins><tt>R T0::f() <i>cv</i></tt>\n+(where <tt><i>cv</i></tt> represents the member function's cv-qualifiers);\n+the type <tt>T1</tt> is <tt><i>cv</i> T0*</tt></ins>\n+</li>\n+</ul>\n+</blockquote>\n+\n+<p>\n+Change bullet item 2 in 2.1.2/4:\n+</p>\n+\n+<blockquote>\n+<ul>\n+<li>\n+a pointer to member function <del>with cv-qualifier <tt><i>cv</i></tt> and taking one argument\n+of type <tt>T2</tt>; the type <tt>T1</tt> is <tt><i>cv</i> T*</tt> and \n+<tt>R</tt> is the return type of the pointer to member function</del>\n+<ins><tt>R T0::f(T2) <i>cv</i></tt> (where <tt><i>cv</i></tt> represents the member\n+function's cv-qualifiers); the type <tt>T1</tt> is <tt><i>cv</i> T0*</tt></ins>\n+</li>\n+</ul>\n+</blockquote>\n+\n+<hr>\n+<a name=\"530\"><h3>530.&nbsp;Must elements of a string be contiguous?</h3></a><p><b>Section:</b>&nbsp;21.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-strings.html#lib.basic.string\"> [lib.basic.string]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Matt Austern&nbsp; <b>Date:</b>&nbsp;15 Nov 2005</p>\n+<p>Issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#69\">69</a>, which was incorporated into C++03, mandated\n+&nbsp;&nbsp; that the elements of a vector must be stored in contiguous memory.\n+&nbsp;&nbsp; Should the same also apply to <tt>basic_string</tt>?</p>\n+\n+<p>We almost require contiguity already. Clause 23.3.4 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-containers.html#lib.multiset\"> [lib.multiset]</a>\n+&nbsp; defines <tt>operator[]</tt> as <tt>data()[pos]</tt>. What's missing\n+&nbsp; is a similar guarantee if we access the string's elements via the\n+&nbsp; iterator interface.</p>\n+\n+<p>Given the existence of <tt>data()</tt>, and the definition of\n+&nbsp; <tt>operator[]</tt> and <tt>at</tt> in terms of <tt>data</tt>,\n+&nbsp; I don't believe it's possible to write a useful and standard-\n+&nbsp; conforming <tt>basic_string</tt> that isn't contiguous. I'm not\n+&nbsp; aware of any non-contiguous implementation. We should just require\n+&nbsp; it.\n+</p>\n+<p><b>Proposed resolution:</b></p>\n+<p>Add the following text to the end of 21.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-strings.html#lib.basic.string\"> [lib.basic.string]</a>,\n+paragraph 2. </p>\n+\n+<blockquote>\n+&nbsp; <p>The characters in a string are stored contiguously, meaning that if\n+&nbsp; <tt>s</tt> is a <tt>basic_string&lt;charT, Allocator&gt;</tt>, then\n+&nbsp; it obeys the identity\n+&nbsp; <tt>&amp;*(s.begin() + n) == &amp;*s.begin() + n</tt>\n+&nbsp; for all <tt>0 &lt;= n &lt; s.size()</tt>.\n+  </p>\n+</blockquote>\n+<hr>\n <a name=\"533\"><h3>533.&nbsp;typo in 2.2.3.10/1</h3></a><p><b>Section:</b>&nbsp;TR1 2.2.3.10 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/tr1.html#tr.util.smartptr.getdeleter\"> [tr.util.smartptr.getdeleter]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#DR\">DR</a>&nbsp; <b>Submitter:</b>&nbsp;Paolo Carlini&nbsp; <b>Date:</b>&nbsp;9 Nov 2005</p>\n <p>\n I'm seeing something that looks like a typo. The Return of <tt>get_deleter</tt>\n@@ -14754,5 +14883,242 @@ <h2>Defect Reports</h2>\n <blockquote>\n If <tt><del>*this</del> <ins>p</ins></tt> <i>owns</i> a deleter <tt>d</tt>...\n </blockquote>\n+<hr>\n+<a name=\"535\"><h3>535.&nbsp;std::string::swap specification poorly worded</h3></a><p><b>Section:</b>&nbsp;21.3.5.8 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-strings.html#lib.string::swap\"> [lib.string::swap]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Beman Dawes&nbsp; <b>Date:</b>&nbsp;14 Dec 2005</p>\n+<p>\n+std::string::swap currently says for effects and postcondition:\n+</p>\n+\n+<blockquote>\n+<p>\n+<i>Effects:</i> Swaps the contents of the two strings.\n+</p>\n+\n+<p>\n+<i>Postcondition:</i> <tt>*this</tt> contains the characters that were in <tt><i>s</i></tt>,\n+<tt><i>s</i></tt> contains the characters that were in <tt>*this</tt>.\n+</p>\n+</blockquote>\n+\n+<p>\n+Specifying both Effects and Postcondition seems redundant, and the postcondition\n+needs to be made stronger. Users would be unhappy if the characters were not in\n+the same order after the swap.\n+</p>\n+<p><b>Proposed resolution:</b></p>\n+<blockquote>\n+<p>\n+<del><i>Effects:</i> Swaps the contents of the two strings.</del>\n+</p>\n+\n+<p>\n+<i>Postcondition:</i> <tt>*this</tt> contains the <ins>same sequence of</ins>\n+characters that <del>were</del> <ins>was</ins> in <tt><i>s</i></tt>,\n+<tt><i>s</i></tt> contains the <ins>same sequence of</ins> characters that\n+<del>were</del> <ins>was</ins> in <tt>*this</tt>.\n+</p>\n+</blockquote>\n+<hr>\n+<a name=\"537\"><h3>537.&nbsp;Typos in the signatures in 27.6.1.3/42-43 and 27.6.2.4</h3></a><p><b>Section:</b>&nbsp;27.6.1.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-iostreams.html#lib.istream.unformatted\"> [lib.istream.unformatted]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Paolo Carlini&nbsp; <b>Date:</b>&nbsp;12 Feb 2006</p>\n+<p>\n+In the most recent working draft, I'm still seeing:\n+</p>\n+\n+<blockquote><pre>seekg(off_type&amp; off, ios_base::seekdir dir)\n+</pre></blockquote>\n+\n+<p>\n+and\n+</p>\n+\n+<blockquote><pre>seekp(pos_type&amp; pos)\n+\n+seekp(off_type&amp; off, ios_base::seekdir dir)\n+</pre></blockquote>\n+\n+<p>\n+that is, by reference off and pos arguments.\n+</p>\n+<p><b>Proposed resolution:</b></p>\n+<p>\n+After 27.6.1.3p42 change:\n+</p>\n+\n+<blockquote><pre>basic_istream&lt;charT,traits&gt;&amp; seekg(off_type<del>&amp;</del> <i>off</i>, ios_base::seekdir <i>dir</i>);\n+</pre></blockquote>\n+\n+<p>\n+After 27.6.2.4p1 change:\n+</p>\n+\n+<blockquote><pre>basic_ostream&lt;charT,traits&gt;&amp; seekp(pos_type<del>&amp;</del> <i>pos</i>);\n+</pre></blockquote>\n+\n+<p>\n+After 27.6.2.4p3 change:\n+</p>\n+\n+<blockquote><pre>basic_ostream&lt;charT,traits&gt;&amp; seekp(off_type<del>&amp;</del> <i>off</i>, ios_base::seekdir <i>dir</i>);\n+</pre></blockquote>\n+<hr>\n+<a name=\"538\"></a><h3><a name=\"538\">538.&nbsp;241 again: Does unique_copy() require CopyConstructible and Assignable?</a></h3><p><b>Section:</b>&nbsp;25.2.8 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lib-algorithms.html#lib.alg.unique\"> [lib.alg.unique]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Howard Hinnant&nbsp; <b>Date:</b>&nbsp;9 Feb 2006</p>\n+<p>\n+I believe I botched the resolution of\n+<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#241\">\n+241 \"Does unique_copy() require CopyConstructible and Assignable?\"</a> which now\n+has WP status.\n+</p>\n+\n+<p>\n+This talks about <tt>unique_copy</tt> requirements and currently reads:\n+</p>\n+\n+<blockquote>\n+-5- <i>Requires:</i> The ranges <tt>[<i>first</i>, <i>last</i>)</tt> and\n+<tt>[<i>result</i>, <i>result</i>+(<i>last</i>-<i>first</i>))</tt>\n+shall not overlap. The expression <tt>*<i>result</i> = *<i>first</i></tt> shall\n+be valid. If neither <tt>InputIterator</tt> nor <tt>OutputIterator</tt> meets the\n+requirements of forward iterator then the value type of <tt>InputIterator</tt>\n+must be CopyConstructible (20.1.3). Otherwise CopyConstructible is not required.\n+</blockquote>\n+\n+<p>\n+The problem (which Paolo discovered) is that when the iterators are at their\n+most restrictive (<tt>InputIterator</tt>, <tt>OutputIterator</tt>), then we want\n+<tt>InputIterator::value_type</tt> to be both <tt>CopyConstructible</tt> and\n+<tt>CopyAssignable</tt> (for the most efficient implementation).  However this\n+proposed resolution only makes it clear that it is <tt>CopyConstructible</tt>,\n+and that one can assign from <tt>*<i>first</i></tt> to <tt>*<i>result</i></tt>.\n+This latter requirement does not necessarily imply that you can:\n+</p>\n+\n+<blockquote><pre>*<i>first</i> = *<i>first</i>;\n+</pre></blockquote>\n+<p><b>Proposed resolution:</b></p>\n+<blockquote>\n+-5- <i>Requires:</i> The ranges <tt>[<i>first</i>, <i>last</i>)</tt> and\n+<tt>[<i>result</i>, <i>result</i>+(<i>last</i>-<i>first</i>))</tt>\n+shall not overlap. The expression <tt>*<i>result</i> = *<i>first</i></tt>\n+shall\n+be valid. If neither <tt>InputIterator</tt> nor <tt>OutputIterator</tt> meets the\n+requirements of forward iterator then the <del>value type</del> \n+<ins><tt>value_type</tt></ins> of <tt>InputIterator</tt>\n+must be CopyConstructible (20.1.3) <ins>and Assignable</ins>.\n+Otherwise CopyConstructible is not required.\n+</blockquote>\n+<hr>\n+<a name=\"540\"><h3>540.&nbsp;shared_ptr&lt;void&gt;::operator*()</h3></a><p><b>Section:</b>&nbsp;TR1 2.2.3.5 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/tr1.html#tr.util.smartptr.shared.obs\"> [tr.util.smartptr.shared.obs]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Martin Sebor&nbsp; <b>Date:</b>&nbsp;15 Oct 2005</p>\n+<p>\n+I'm trying to reconcile the note in tr.util.smartptr.shared.obs, p6\n+that talks about the operator*() member function of shared_ptr:\n+</p>\n+\n+<blockquote>\n+  Notes: When T is void, attempting to instantiate this member function\n+  renders the program ill-formed. [Note: Instantiating shared_ptr&lt;void&gt;\n+  does not necessarily result in instantiating this member function.\n+  --end note]\n+</blockquote>\n+\n+<p>\n+with the requirement in temp.inst, p1:\n+</p>\n+\n+<blockquote>\n+  The implicit instantiation of a class template specialization causes\n+  the implicit instantiation of the declarations, but not of the\n+  definitions...\n+</blockquote>\n+\n+<p>\n+I assume that what the note is really trying to say is that\n+\"instantiating shared_ptr&lt;void&gt; *must not* result in instantiating\n+this member function.\" That is, that this function must not be\n+declared a member of shared_ptr&lt;void&gt;. Is my interpretation\n+correct?\n+</p>\n+<p><b>Proposed resolution:</b></p>\n+<p>\n+Change 2.2.3.5p6\n+</p>\n+\n+<blockquote>\n+-6- <del><i>Notes:</i></del> When <tt>T</tt> is <tt>void</tt>, <del>attempting to instantiate\n+this member function renders the program ill-formed. [<i>Note:</i>\n+Instantiating <tt>shared_ptr&lt;void&gt;</tt> does not necessarily result in\n+instantiating this member function. <i>--end note</i>]</del> <ins>it is\n+unspecified whether this member function is declared or not, and if so, what its\n+return type is, except that the declaration (although not necessarily the\n+definition) of the function shall be well-formed.</ins>\n+</blockquote>\n+\n+<hr>\n+<a name=\"541\"><h3>541.&nbsp;shared_ptr template assignment and void</h3></a><p><b>Section:</b>&nbsp;TR1 2.2.3 <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/tr1.html#tr.util.smartptr.shared\"> [tr.util.smartptr.shared]</a>&nbsp; <b>Status:</b>&nbsp;<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#WP\">WP</a>&nbsp; <b>Submitter:</b>&nbsp;Martin Sebor&nbsp; <b>Date:</b>&nbsp;16 Oct 2005</p>\n+<p>\n+Is the void specialization of the template assignment operator taking\n+a shared_ptr&lt;void&gt; as an argument supposed be well-formed?\n+</p>\n+<p>\n+I.e., is this snippet well-formed:\n+</p>\n+<blockquote><pre>shared_ptr&lt;void&gt; p;\n+p.operator=&lt;void&gt;(p);\n+</pre></blockquote>\n+\n+<p>\n+Gcc complains about auto_ptr&lt;void&gt;::operator*() returning a reference\n+to void. I suspect it's because shared_ptr has two template assignment\n+operators, one of which takes auto_ptr, and the auto_ptr template gets\n+implicitly instantiated in the process of overload resolution.\n+</p>\n+\n+<p>\n+The only way I see around it is to do the same trick with auto_ptr&lt;void&gt;\n+operator*() as with the same operator in shared_ptr&lt;void&gt;.\n+</p>\n+\n+<p>\n+PS Strangely enough, the EDG front end doesn't mind the code, even\n+though in a small test case (below) I can reproduce the error with\n+it as well.\n+</p>\n+\n+<blockquote><pre>template &lt;class T&gt;\n+struct A { T&amp; operator*() { return *(T*)0; } };\n+\n+template &lt;class T&gt;\n+struct B {\n+    void operator= (const B&amp;) { }\n+    template &lt;class U&gt;\n+    void operator= (const B&lt;U&gt;&amp;) { }\n+    template &lt;class U&gt;\n+    void operator= (const A&lt;U&gt;&amp;) { }\n+};\n+\n+int main ()\n+{\n+    B&lt;void&gt; b;\n+    b.operator=&lt;void&gt;(b);\n+}\n+</pre></blockquote>\n+<p><b>Proposed resolution:</b></p>\n+<p>\n+In [lib.memory] change:\n+</p>\n+<blockquote><pre>template&lt;class X&gt; class auto_ptr;\n+<ins>template&lt;&gt; class auto_ptr&lt;void&gt;;</ins>\n+</pre></blockquote>\n+\n+<p>\n+In [lib.auto.ptr]/2 add the following before the last closing brace:\n+</p>\n+\n+<blockquote><pre>template&lt;&gt; class auto_ptr&lt;void&gt;\n+{\n+public:\n+&nbsp; &nbsp; typedef void element_type;\n+};\n+</pre></blockquote>\n+\n <p>----- End of document -----</p>\n </body></html>\n\\ No newline at end of file"}]}