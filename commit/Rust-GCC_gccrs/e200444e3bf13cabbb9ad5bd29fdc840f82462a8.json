{"sha": "e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwMDQ0NGUzYmYxM2NhYmJiOWFkNWJkMjlmZGM4NDBmODI0NjJhOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-09-22T20:12:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-09-22T20:12:06Z"}, "message": "common.opt (-assemble, [...]): New.\n\n\t* common.opt (-assemble, -compile, -coverage, -debug, -dump,\n\t-dump=, -dumpbase, -dumpdir, -entry, -entry=, -extra-warnings,\n\t-for-assembler, -for-assembler=, -for-linker, -for-linker=,\n\t-force-link, -force-link=, -language, -language=,\n\t-library-directory, -library-directory=, -no-canonical-prefixes,\n\t-no-standard-libraries, -no-warnings, -optimize, -output,\n\t-output=, -pass-exit-codes, -pedantic, -pedantic-errors, -pie,\n\t-pipe, -prefix, -prefix=, -preprocess, -print-file-name,\n\t-print-file-name=, -print-libgcc-file-name,\n\t-print-multi-directory, -print-multi-lib,\n\t-print-multi-os-directory, -print-prog-name, -print-prog-name=,\n\t-print-search-dirs, -print-sysroot, -print-sysroot-headers-suffix,\n\t-profile, -save-temps, -shared, -specs, -specs=, -static,\n\t-symbolic, -time, -verbose, -param=, -sysroot, coverage, e, u,\n\tsymbolic): New.\n\t(fhelp, fhelp=, ftarget-help, fversion): Make into aliases.\n\t* gcc.c (A Short Introduction to Adding a Command-Line Option):\n\tRemove comment.\n\t(cc1_options): Correct specs for passing down --help,\n\t--target-help and --help=*.  Add spec for passing down --version.\n\t(struct option_map, option_map, target_option_translations,\n\ttranslate_options): Remove.\n\t(driver_handle_option): Handle OPT__version, OPT__help, OPT__help_\n\tand OPT__target_help instead of OPT_fversion, OPT_fhelp,\n\tOPT_fhelp_ and OPT_ftarget_help.\n\t(process_command): Don't call translate_options.  Call\n\tdecode_cmdline_options_to_array before checking for\n\t-no-canonical-prefixes using decoded options.\n\t* opts-common.c (tm.h): Update comment on #include.\n\t(find_opt): Allow abbreviations of long options.\n\t(struct option_map, option_map): New.\n\t(decode_cmdline_option): Use them instead of hardcoding -Wno, -fno\n\tand -mno handling.\n\t(target_option_translations): New.\n\t(decode_cmdline_options_to_array): Handle\n\tTARGET_OPTION_TRANSLATE_TABLE in driver.\n\t* opts.c (common_handle_option): Don't handle OPT_fhelp,\n\tOPT_ftarget_help, OPT_fhelp_ or OPT_fversion.\n\nada:\n\t* gcc-interface/lang.opt (-all-warnings, -include-barrier,\n\t-include-directory, -include-directory=, -no-standard-includes,\n\t-no-standard-libraries): New.\n\nc-family:\n\t* c.opt (-all-warnings, -ansi, -assert, -assert=, -comments,\n\t-comments-in-macros, -define-macro, -define-macro=, -dependencies,\n\t-dump, -dump=, -imacros, -imacros=, -include, -include=,\n\t-include-barrier, -include-directory, -include-directory=,\n\t-include-directory-after, -include-directory-after=,\n\t-include-prefix, -include-prefix=, -include-with-prefix,\n\t-include-with-prefix=, -include-with-prefix-after,\n\t-include-with-prefix-after=, -include-with-prefix-before,\n\t-include-with-prefix-before=, -no-integrated-cpp,\n\t-no-line-commands, -no-standard-includes, -no-warnings, -output,\n\t-output=, -pedantic, -pedantic-errors, -preprocess,\n\t-print-missing-file-dependencies, -trace-includes, -traditional,\n\t-traditional-cpp, -trigraphs, -undefine-macro, -undefine-macro=,\n\t-user-dependencies, -verbose, -write-dependencies,\n\t-write-user-dependencies, no-integrated-cpp, traditional): New.\n\nfortran:\n\t* gfortranspec.c (lang_specific_driver): Handle OPT__version and\n\tOPT__help instead of OPT_fversion and OPT_fhelp.\n\t* lang.opt (-all-warnings, -assert, -assert=, -comments,\n\t-comments-in-macros, -define-macro, -define-macro=, -dependencies,\n\t-dump, -dump=, -include-barrier, -include-directory,\n\t-include-directory=, -include-directory-after,\n\t-include-directory-after=, -include-prefix, -include-prefix=,\n\t-no-line-commands, -no-standard-includes, -output, -output=,\n\t-preprocess, -print-missing-file-dependencies, -trace-includes,\n\t-undefine-macro, -undefine-macro=, -user-dependencies, -verbose,\n\t-write-dependencies, -write-user-dependencies): New.\n\njava:\n\t* jvspec.c (lang_specific_driver): Handle OPT__help instead of\n\tOPT_fhelp.\n\t* lang.opt (-CLASSPATH, -all-warnings, -bootclasspath, -classpath,\n\t-dependencies, -encoding, -extdirs, -include-directory,\n\t-include-directory=, -output-class-directory,\n\t-output-class-directory=, -resource, -resource=,\n\t-user-dependencies): New.\n\nFrom-SVN: r164531", "tree": {"sha": "c66d31c60ecaae93e312d12451c889cde531ce79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c66d31c60ecaae93e312d12451c889cde531ce79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c98ca4c79cbb9dc3c1358aa769fbbf3407237216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98ca4c79cbb9dc3c1358aa769fbbf3407237216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98ca4c79cbb9dc3c1358aa769fbbf3407237216"}], "stats": {"total": 1266, "additions": 821, "deletions": 445}, "files": [{"sha": "5983420620c1db4b41dda9bc7c1d55173131accf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,3 +1,44 @@\n+2010-09-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* common.opt (-assemble, -compile, -coverage, -debug, -dump,\n+\t-dump=, -dumpbase, -dumpdir, -entry, -entry=, -extra-warnings,\n+\t-for-assembler, -for-assembler=, -for-linker, -for-linker=,\n+\t-force-link, -force-link=, -language, -language=,\n+\t-library-directory, -library-directory=, -no-canonical-prefixes,\n+\t-no-standard-libraries, -no-warnings, -optimize, -output,\n+\t-output=, -pass-exit-codes, -pedantic, -pedantic-errors, -pie,\n+\t-pipe, -prefix, -prefix=, -preprocess, -print-file-name,\n+\t-print-file-name=, -print-libgcc-file-name,\n+\t-print-multi-directory, -print-multi-lib,\n+\t-print-multi-os-directory, -print-prog-name, -print-prog-name=,\n+\t-print-search-dirs, -print-sysroot, -print-sysroot-headers-suffix,\n+\t-profile, -save-temps, -shared, -specs, -specs=, -static,\n+\t-symbolic, -time, -verbose, -param=, -sysroot, coverage, e, u,\n+\tsymbolic): New.\n+\t(fhelp, fhelp=, ftarget-help, fversion): Make into aliases.\n+\t* gcc.c (A Short Introduction to Adding a Command-Line Option):\n+\tRemove comment.\n+\t(cc1_options): Correct specs for passing down --help,\n+\t--target-help and --help=*.  Add spec for passing down --version.\n+\t(struct option_map, option_map, target_option_translations,\n+\ttranslate_options): Remove.\n+\t(driver_handle_option): Handle OPT__version, OPT__help, OPT__help_\n+\tand OPT__target_help instead of OPT_fversion, OPT_fhelp,\n+\tOPT_fhelp_ and OPT_ftarget_help.\n+\t(process_command): Don't call translate_options.  Call\n+\tdecode_cmdline_options_to_array before checking for\n+\t-no-canonical-prefixes using decoded options.\n+\t* opts-common.c (tm.h): Update comment on #include.\n+\t(find_opt): Allow abbreviations of long options.\n+\t(struct option_map, option_map): New.\n+\t(decode_cmdline_option): Use them instead of hardcoding -Wno, -fno\n+\tand -mno handling.\n+\t(target_option_translations): New.\n+\t(decode_cmdline_options_to_array): Handle\n+\tTARGET_OPTION_TRANSLATE_TABLE in driver.\n+\t* opts.c (common_handle_option): Don't handle OPT_fhelp,\n+\tOPT_ftarget_help, OPT_fhelp_ or OPT_fversion.\n+\n 2010-09-22  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-inline.c (optimize_inline_calls): Schedule cleanups"}, {"sha": "42c3d3cd19bd082e07a4aefc1a53db65730d6ac8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,3 +1,9 @@\n+2010-09-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc-interface/lang.opt (-all-warnings, -include-barrier,\n+\t-include-directory, -include-directory=, -no-standard-includes,\n+\t-no-standard-libraries): New.\n+\n 2010-09-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Replace calls to"}, {"sha": "3b9129b32cc8dba2591fe91f36d9a65e3d65ee95", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,5 +1,5 @@\n ; Options for the Ada front end.\n-; Copyright (C) 2003, 2007, 2008 Free Software Foundation, Inc.\n+; Copyright (C) 2003, 2007, 2008, 2010 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -25,6 +25,24 @@\n Language\n Ada\n \n+-all-warnings\n+Ada Alias(Wall)\n+\n+-include-barrier\n+Ada Alias(I, -)\n+\n+-include-directory\n+Ada Separate Alias(I)\n+\n+-include-directory=\n+Ada Joined Alias(I)\n+\n+-no-standard-includes\n+Ada Alias(nostdinc)\n+\n+-no-standard-libraries\n+Ada Alias(nostdlib)\n+\n I\n Ada Joined Separate\n ; Documented for C"}, {"sha": "d708edbb39cae7c0bbcd35ec8d829322a10311de", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,3 +1,21 @@\n+2010-09-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c.opt (-all-warnings, -ansi, -assert, -assert=, -comments,\n+\t-comments-in-macros, -define-macro, -define-macro=, -dependencies,\n+\t-dump, -dump=, -imacros, -imacros=, -include, -include=,\n+\t-include-barrier, -include-directory, -include-directory=,\n+\t-include-directory-after, -include-directory-after=,\n+\t-include-prefix, -include-prefix=, -include-with-prefix,\n+\t-include-with-prefix=, -include-with-prefix-after,\n+\t-include-with-prefix-after=, -include-with-prefix-before,\n+\t-include-with-prefix-before=, -no-integrated-cpp,\n+\t-no-line-commands, -no-standard-includes, -no-warnings, -output,\n+\t-output=, -pedantic, -pedantic-errors, -preprocess,\n+\t-print-missing-file-dependencies, -trace-includes, -traditional,\n+\t-traditional-cpp, -trigraphs, -undefine-macro, -undefine-macro=,\n+\t-user-dependencies, -verbose, -write-dependencies,\n+\t-write-user-dependencies, no-integrated-cpp, traditional): New.\n+\n 2010-09-21  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/23710"}, {"sha": "f91eeef5a31b3771f6d9447c6e8e735bf940414d", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -34,9 +34,153 @@ C++\n Language\n ObjC++\n \n+-all-warnings\n+C ObjC C++ ObjC++ Warning Alias(Wall)\n+\n+-ansi\n+C ObjC C++ ObjC++ Alias(ansi)\n+\n+-assert\n+C ObjC C++ ObjC++ Separate Alias(A) MissingArgError(assertion missing after %qs)\n+\n+-assert=\n+C ObjC C++ ObjC++ Joined Alias(A) MissingArgError(assertion missing after %qs)\n+\n+-comments\n+C ObjC C++ ObjC++ Alias(C)\n+\n+-comments-in-macros\n+C ObjC C++ ObjC++ Alias(CC)\n+\n+-define-macro\n+C ObjC C++ ObjC++ Separate Alias(D) MissingArgError(macro name missing after %qs)\n+\n+-define-macro=\n+C ObjC C++ ObjC++ Joined Alias(D) MissingArgError(macro name missing after %qs)\n+\n+-dependencies\n+C ObjC C++ ObjC++ Alias(M)\n+\n+-dump\n+C ObjC C++ ObjC++ Separate Alias(d)\n+\n+-dump=\n+C ObjC C++ ObjC++ Joined Alias(d)\n+\n+-imacros\n+C ObjC C++ ObjC++ Separate Alias(imacros) MissingArgError(missing filename after %qs)\n+\n+-imacros=\n+C ObjC C++ ObjC++ Joined Alias(imacros) MissingArgError(missing filename after %qs)\n+\n+-include\n+C ObjC C++ ObjC++ Separate Alias(include) MissingArgError(missing filename after %qs)\n+\n+-include=\n+C ObjC C++ ObjC++ Joined Alias(include) MissingArgError(missing filename after %qs)\n+\n+-include-barrier\n+C ObjC C++ ObjC++ Alias(I, -)\n+\n+-include-directory\n+C ObjC C++ ObjC++ Separate Alias(I) MissingArgError(missing path after %qs)\n+\n+-include-directory=\n+C ObjC C++ ObjC++ Joined Alias(I) MissingArgError(missing path after %qs)\n+\n+-include-directory-after\n+C ObjC C++ ObjC++ Separate Alias(idirafter) MissingArgError(missing path after %qs)\n+\n+-include-directory-after=\n+C ObjC C++ ObjC++ Joined Alias(idirafter) MissingArgError(missing path after %qs)\n+\n+-include-prefix\n+C ObjC C++ ObjC++ Separate Alias(iprefix)\n+\n+-include-prefix=\n+C ObjC C++ ObjC++ JoinedOrMissing Alias(iprefix)\n+\n+-include-with-prefix\n+C ObjC C++ ObjC++ Separate Alias(iwithprefix)\n+\n+-include-with-prefix=\n+C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefix)\n+\n+-include-with-prefix-after\n+C ObjC C++ ObjC++ Separate Alias(iwithprefix)\n+\n+-include-with-prefix-after=\n+C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefix)\n+\n+-include-with-prefix-before\n+C ObjC C++ ObjC++ Separate Alias(iwithprefixbefore)\n+\n+-include-with-prefix-before=\n+C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefixbefore)\n+\n+-no-integrated-cpp\n+Driver Alias(no-integrated-cpp)\n+\n+-no-line-commands\n+C ObjC C++ ObjC++ Alias(P)\n+\n+-no-standard-includes\n+C ObjC C++ ObjC++ Alias(nostdinc)\n+\n+-no-warnings\n+C ObjC C++ ObjC++ Alias(w)\n+\n+-output\n+C ObjC C++ ObjC++ Separate Alias(o)\n+\n+-output=\n+C ObjC C++ ObjC++ Joined Alias(o)\n+\n -output-pch=\n C ObjC C++ ObjC++ Joined Separate\n \n+-pedantic\n+C ObjC C++ ObjC++ Alias(pedantic)\n+\n+-pedantic-errors\n+C ObjC C++ ObjC++ Alias(pedantic-errors)\n+\n+-preprocess\n+C ObjC C++ ObjC++ Undocumented Alias(E)\n+\n+-print-missing-file-dependencies\n+C ObjC C++ ObjC++ Alias(MG)\n+\n+-trace-includes\n+C ObjC C++ ObjC++ Alias(H)\n+\n+-traditional\n+Driver Alias(traditional)\n+\n+-traditional-cpp\n+C ObjC C++ ObjC++ Alias(traditional-cpp)\n+\n+-trigraphs\n+C ObjC C++ ObjC++ Alias(trigraphs)\n+\n+-undefine-macro\n+C ObjC C++ ObjC++ Separate Alias(U) MissingArgError(macro name missing after %qs)\n+\n+-undefine-macro=\n+C ObjC C++ ObjC++ Joined Alias(U) MissingArgError(macro name missing after %qs)\n+\n+-user-dependencies\n+C ObjC C++ ObjC++ Alias(MM)\n+\n+-verbose\n+Common C ObjC C++ ObjC++ Alias(v)\n+\n+-write-dependencies\n+C ObjC C++ ObjC++ NoDriverArg Separate Alias(MD) MissingArgError(missing filename after %qs)\n+\n+-write-user-dependencies\n+C ObjC C++ ObjC++ NoDriverArg Separate Alias(MMD) MissingArgError(missing filename after %qs)\n+\n A\n C ObjC C++ ObjC++ Joined Separate MissingArgError(assertion missing after %qs)\n -A<question>=<answer>\tAssert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>\n@@ -932,6 +1076,9 @@ C ObjC C++ ObjC++ Joined Separate\n lang-asm\n C Undocumented RejectDriver\n \n+no-integrated-cpp\n+Driver\n+\n nostdinc\n C ObjC C++ ObjC++\n Do not search standard system include directories (those specified with -isystem will still be used)\n@@ -1038,6 +1185,9 @@ std=iso9899:199x\n C ObjC Alias(std=c99)\n Deprecated in favor of -std=iso9899:1999\n \n+traditional\n+Driver\n+\n traditional-cpp\n C ObjC C++ ObjC++\n Enable traditional preprocessing"}, {"sha": "119a64af0a8754d684e7c5852bf5676394a3f4a1", "filename": "gcc/common.opt", "status": "modified", "additions": 191, "deletions": 8, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -29,37 +29,208 @@ int target_flags\n ###\n Driver\n \n+-assemble\n+Driver Alias(S)\n+\n+-compile\n+Driver Alias(c)\n+\n+-coverage\n+Driver Alias(coverage)\n+\n+-debug\n+Common Alias(g)\n+\n+-dump\n+Common Separate Alias(d)\n+\n+-dump=\n+Common Joined Alias(d)\n+\n+-dumpbase\n+Common Separate Alias(dumpbase)\n+\n+-dumpdir\n+Common Separate Alias(dumpdir)\n+\n+-entry\n+Driver Separate Alias(e)\n+\n+-entry=\n+Driver Joined Alias(e)\n+\n+-extra-warnings\n+Common Warning Alias(Wextra)\n+\n+-for-assembler\n+Driver Separate Alias(Xassembler)\n+\n+-for-assembler=\n+Driver JoinedOrMissing Alias(Xassembler)\n+\n+-for-linker\n+Driver Separate Alias(Xlinker)\n+\n+-for-linker=\n+Driver JoinedOrMissing Alias(Xlinker)\n+\n+-force-link\n+Driver Separate Alias(u)\n+\n+-force-link=\n+Driver Joined Alias(u)\n+\n -help\n-Common Driver\n+Common Driver Var(help_flag)\n Display this information\n \n -help=\n Common Driver Report Joined\n --help=<class>\tDisplay descriptions of a specific class of options.  <class> is one or more of optimizers, target, warnings, undocumented, params\n \n+-language\n+Driver Separate Alias(x)\n+\n+-language=\n+Driver Joined Alias(x)\n+\n+-library-directory\n+Driver Separate Alias(L)\n+\n+-library-directory=\n+Driver Joined Alias(L)\n+\n+-no-canonical-prefixes\n+Driver Alias(no-canonical-prefixes)\n+\n+-no-standard-libraries\n+Driver Alias(nostdlib)\n+\n+-no-warnings\n+Common Alias(w)\n+\n+-optimize\n+Common Alias(O)\n+\n+-output\n+Common Driver Separate Alias(o) MissingArgError(missing filename after %qs)\n+\n+-output=\n+Common Driver Joined Alias(o) MissingArgError(missing filename after %qs)\n+\n+-pass-exit-codes\n+Driver Alias(pass-exit-codes)\n+\n+-pedantic\n+Common Alias(pedantic)\n+\n+-pedantic-errors\n+Common Alias(pedantic-errors)\n+\n+-pie\n+Common Alias(pie)\n+\n+-pipe\n+Driver Alias(pipe)\n+\n+-prefix\n+Driver Separate Alias(B)\n+\n+-prefix=\n+Driver JoinedOrMissing Alias(B)\n+\n+-preprocess\n+Driver Alias(E)\n+\n+-print-file-name\n+Driver Separate Alias(print-file-name=)\n+\n+-print-file-name=\n+Driver JoinedOrMissing Alias(print-file-name=)\n+\n+-print-libgcc-file-name\n+Driver Alias(print-libgcc-file-name)\n+\n+-print-multi-directory\n+Driver Alias(print-multi-directory)\n+\n+-print-multi-lib\n+Driver Alias(print-multi-lib)\n+\n+-print-multi-os-directory\n+Driver Alias(print-multi-os-directory)\n+\n+-print-prog-name\n+Driver Separate Alias(print-prog-name=)\n+\n+-print-prog-name=\n+Driver JoinedOrMissing Alias(print-prog-name=)\n+\n+-print-search-dirs\n+Driver Alias(print-search-dirs)\n+\n+-print-sysroot\n+Driver Alias(print-sysroot)\n+\n+-print-sysroot-headers-suffix\n+Driver Alias(print-sysroot-headers-suffix)\n+\n+-profile\n+Common Alias(p)\n+\n+-save-temps\n+Driver Alias(save-temps)\n+\n+-shared\n+Common Alias(shared)\n+\n+-specs\n+Driver Separate Alias(specs=)\n+\n+-specs=\n+Driver Joined Alias(specs=)\n+\n+-static\n+Driver Alias(static)\n+\n+-symbolic\n+Driver Alias(symbolic)\n+\n -target-help\n Common Driver\n Alias for --help=target\n \n-;; The following four entries are to work around the gcc driver\n-;; program's insatiable desire to turn options starting with a\n-;; double dash (--) into options starting with a dash f (-f).\n+-time\n+Driver Alias(time)\n+\n+-verbose\n+Driver Alias(v)\n+\n+;; The driver used to convert options such as --help into forms such\n+;; as -fhelp; the following four entries are for compatibility with\n+;; any direct uses of those (undocumented) -f forms\n fhelp\n-Common Driver Var(help_flag)\n+Common Driver Alias(-help)\n \n fhelp=\n-Common Driver Joined\n+Common Driver Joined Alias(-help=)\n \n ftarget-help\n-Common Driver\n+Common Driver Alias(-target-help)\n \n fversion\n-Common Driver\n+Common Driver Alias(-version)\n \n -param\n Common Separate\n --param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters\n \n+-param=\n+Common Joined Alias(-param)\n+\n+-sysroot\n+Driver Separate Alias(-sysroot=)\n+\n -sysroot=\n Driver JoinedOrMissing\n \n@@ -312,6 +483,9 @@ Common Separate RejectDriver\n auxbase-strip\n Common Separate RejectDriver\n \n+coverage\n+Driver\n+\n c\n Driver\n \n@@ -336,6 +510,9 @@ Driver\n dumpversion\n Driver\n \n+e\n+Driver Joined Separate\n+\n ; The version of the C++ ABI in use.  The following values are allowed:\n ;\n ; 0: The version of the ABI believed most conformant with the C++ ABI\n@@ -1744,6 +1921,9 @@ Driver Var(report_times)\n time=\n Driver JoinedOrMissing\n \n+u\n+Driver Joined Separate\n+\n v\n Driver\n \n@@ -1787,6 +1967,9 @@ Driver\n static-libstdc++\n Driver\n \n+symbolic\n+Driver\n+\n pie\n Common RejectNegative Negative(shared)\n Create a position independent executable"}, {"sha": "b9df02f668debbe1c037e1c6f2a17b0ed52db14f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,3 +1,17 @@\n+2010-09-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gfortranspec.c (lang_specific_driver): Handle OPT__version and\n+\tOPT__help instead of OPT_fversion and OPT_fhelp.\n+\t* lang.opt (-all-warnings, -assert, -assert=, -comments,\n+\t-comments-in-macros, -define-macro, -define-macro=, -dependencies,\n+\t-dump, -dump=, -include-barrier, -include-directory,\n+\t-include-directory=, -include-directory-after,\n+\t-include-directory-after=, -include-prefix, -include-prefix=,\n+\t-no-line-commands, -no-standard-includes, -output, -output=,\n+\t-preprocess, -print-missing-file-dependencies, -trace-includes,\n+\t-undefine-macro, -undefine-macro=, -user-dependencies, -verbose,\n+\t-write-dependencies, -write-user-dependencies): New.\n+\n 2010-09-21  Jason Blevins  <jrblevin@sdf.org>\n \n \t* intrinsics.texi (HYPOT, IMAGE_INDEX, BESSEL_JN, BESSEL_YN,"}, {"sha": "b79f6a25706856c40105b581df7f90a8abccd4cd", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -271,7 +271,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \t  verbose = 1;\n \t  break;\n \n-\tcase OPT_fversion:\n+\tcase OPT__version:\n \t  printf (\"GNU Fortran %s%s\\n\", pkgversion_string, version_string);\n \t  printf (\"Copyright %s 2010 Free Software Foundation, Inc.\\n\\n\",\n \t\t  _(\"(C)\"));\n@@ -282,7 +282,7 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n \t  exit (0);\n \t  break;\n \n-\tcase OPT_fhelp:\n+\tcase OPT__help:\n \t  /* Let gcc.c handle this, as it has a really\n \t     cool facility for handling --help and --verbose --help.  */\n \t  return;"}, {"sha": "d523bdfe66c0fa84eead158dea75e40111f2cacc", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -25,6 +25,96 @@\n Language\n Fortran\n \n+-all-warnings\n+Fortran Alias(Wall)\n+\n+-assert\n+Fortran Separate Alias(A)\n+\n+-assert=\n+Fortran Joined Alias(A)\n+\n+-comments\n+Fortran Alias(C)\n+\n+-comments-in-macros\n+Fortran Alias(CC)\n+\n+-define-macro\n+Fortran Separate Alias(D)\n+\n+-define-macro=\n+Fortran Joined Alias(D)\n+\n+-dependencies\n+Fortran Alias(M)\n+\n+-dump\n+Fortran Separate Alias(d)\n+\n+-dump=\n+Fortran Joined Alias(d)\n+\n+-include-barrier\n+Fortran Alias(I, -)\n+\n+-include-directory\n+Fortran Separate Alias(I)\n+\n+-include-directory=\n+Fortran Joined Alias(I)\n+\n+-include-directory-after\n+Fortran Separate Alias(idirafter)\n+\n+-include-directory-after=\n+Fortran Joined Alias(idirafter)\n+\n+-include-prefix\n+Fortran Separate Alias(iprefix)\n+\n+-include-prefix=\n+Fortran JoinedOrMissing Alias(iprefix)\n+\n+-no-line-commands\n+Fortran Alias(P)\n+\n+-no-standard-includes\n+Fortran Alias(nostdinc)\n+\n+-output\n+Fortran Separate Alias(o)\n+\n+-output=\n+Fortran Joined Alias(o)\n+\n+-preprocess\n+Fortran Undocumented Alias(E)\n+\n+-print-missing-file-dependencies\n+Fortran Alias(MG)\n+\n+-trace-includes\n+Fortran Alias(H)\n+\n+-undefine-macro\n+Fortran Separate Alias(U)\n+\n+-undefine-macro=\n+Fortran Joined Alias(U)\n+\n+-user-dependencies\n+Fortran Alias(MM)\n+\n+-verbose\n+Fortran Alias(v)\n+\n+-write-dependencies\n+Fortran NoDriverArg Separate Alias(MD)\n+\n+-write-user-dependencies\n+Fortran NoDriverArg Separate Alias(MMD)\n+\n A\n Fortran Joined Separate\n ; Documented in C"}, {"sha": "83bfbb9ee6bcad122fc243525c05e830d8fcbee7", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 395, "changes": 407, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -30,44 +30,6 @@ CC recognizes how to compile each input file by suffixes in the file names.\n Once it knows which kind of compilation to perform, the procedure for\n compilation is specified by a string called a \"spec\".  */\n \n-/* A Short Introduction to Adding a Command-Line Option.\n-\n-   Before adding a command-line option, consider if it is really\n-   necessary.  Each additional command-line option adds complexity and\n-   is difficult to remove in subsequent versions.\n-\n-   In the following, consider adding the command-line argument\n-   `--bar'.\n-\n-   1. Each command-line option is specified in the specs file.  The\n-   notation is described below in the comment entitled \"The Specs\n-   Language\".  Read it.\n-\n-   2. In this file, add an entry to \"option_map\" equating the long\n-   `--' argument version and any shorter, single letter version.  Read\n-   the comments in the declaration of \"struct option_map\" for an\n-   explanation.  Do not omit the first `-'.\n-\n-   3. Look in the \"specs\" file to determine which program or option\n-   list should be given the argument, e.g., \"cc1_options\".  Add the\n-   appropriate syntax for the shorter option version to the\n-   corresponding \"const char *\" entry in this file.  Omit the first\n-   `-' from the option.  For example, use `-bar', rather than `--bar'.\n-\n-   4. If the argument takes an argument, e.g., `--baz argument1',\n-   modify either DEFAULT_SWITCH_TAKES_ARG or\n-   DEFAULT_WORD_SWITCH_TAKES_ARG in gcc.h.  Omit the first `-'\n-   from `--baz'.\n-\n-   5. Document the option in this file's display_help().  If the\n-   option is passed to a subprogram, modify its corresponding\n-   function, e.g., cppinit.c:print_help() or toplev.c:display_help(),\n-   instead.\n-\n-   6. Compile and test.  Make sure that your new specs file is being\n-   read.  For example, use a debugger to investigate the value of\n-   \"specs_file\" in main().  */\n-\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -263,7 +225,6 @@ static void add_prefix (struct path_prefix *, const char *, const char *,\n \t\t\tint, int, int);\n static void add_sysrooted_prefix (struct path_prefix *, const char *,\n \t\t\t\t  const char *, int, int, int);\n-static void translate_options (int *, const char *const **);\n static char *skip_whitespace (char *);\n static void delete_if_ordinary (const char *);\n static void delete_temp_files (void);\n@@ -802,9 +763,10 @@ static const char *cc1_options =\n  %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}}%{!c:%{!S:-auxbase %b}} \\\n  %{g*} %{O*} %{W*&pedantic*} %{w} %{std*&ansi&trigraphs}\\\n  %{v:-version} %{pg:-p} %{p} %{f*} %{undef}\\\n- %{Qn:-fno-ident} %{--help:--help}\\\n- %{--target-help:--target-help}\\\n- %{--help=*:--help=%(VALUE)}\\\n+ %{Qn:-fno-ident} %{-help:--help}\\\n+ %{-target-help:--target-help}\\\n+ %{-version:--version}\\\n+ %{-help=*:--help=%*}\\\n  %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}}\\\n  %{fsyntax-only:-o %j} %{-param*}\\\n  %{fmudflap|fmudflapth:-fno-builtin -fno-merge-constants}\\\n@@ -1042,341 +1004,6 @@ static char **assembler_options;\n static int n_preprocessor_options;\n static char **preprocessor_options;\n \f\n-/* Define how to map long options into short ones.  */\n-\n-/* This structure describes one mapping.  */\n-struct option_map\n-{\n-  /* The long option's name.  */\n-  const char *const name;\n-  /* The equivalent short option.  */\n-  const char *const equivalent;\n-  /* Argument info.  A string of flag chars; NULL equals no options.\n-     a => argument required.\n-     o => argument optional.\n-     j => join argument to equivalent, making one word.\n-     * => require other text after NAME as an argument.  */\n-  const char *const arg_info;\n-};\n-\n-/* This is the table of mappings.  Mappings are tried sequentially\n-   for each option encountered; the first one that matches, wins.  */\n-\n-static const struct option_map option_map[] =\n- {\n-   {\"--all-warnings\", \"-Wall\", 0},\n-   {\"--ansi\", \"-ansi\", 0},\n-   {\"--assemble\", \"-S\", 0},\n-   {\"--assert\", \"-A\", \"a\"},\n-   {\"--classpath\", \"-fclasspath=\", \"aj\"},\n-   {\"--bootclasspath\", \"-fbootclasspath=\", \"aj\"},\n-   {\"--CLASSPATH\", \"-fclasspath=\", \"aj\"},\n-   {\"--comments\", \"-C\", 0},\n-   {\"--comments-in-macros\", \"-CC\", 0},\n-   {\"--compile\", \"-c\", 0},\n-   {\"--debug\", \"-g\", \"oj\"},\n-   {\"--define-macro\", \"-D\", \"aj\"},\n-   {\"--dependencies\", \"-M\", 0},\n-   {\"--dump\", \"-d\", \"aj\"},\n-   {\"--dumpbase\", \"-dumpbase\", \"a\"},\n-   {\"--dumpdir\", \"-dumpdir\", \"a\"},\n-   {\"--encoding\", \"-fencoding=\", \"aj\"},\n-   {\"--entry\", \"-e\", 0},\n-   {\"--extra-warnings\", \"-W\", 0},\n-   {\"--extdirs\", \"-fextdirs=\", \"aj\"},\n-   {\"--for-assembler\", \"-Wa\", \"a\"},\n-   {\"--for-linker\", \"-Xlinker\", \"a\"},\n-   {\"--force-link\", \"-u\", \"a\"},\n-   {\"--coverage\", \"-coverage\", 0},\n-   {\"--imacros\", \"-imacros\", \"a\"},\n-   {\"--include\", \"-include\", \"a\"},\n-   {\"--include-barrier\", \"-I-\", 0},\n-   {\"--include-directory\", \"-I\", \"aj\"},\n-   {\"--include-directory-after\", \"-idirafter\", \"a\"},\n-   {\"--include-prefix\", \"-iprefix\", \"a\"},\n-   {\"--include-with-prefix\", \"-iwithprefix\", \"a\"},\n-   {\"--include-with-prefix-before\", \"-iwithprefixbefore\", \"a\"},\n-   {\"--include-with-prefix-after\", \"-iwithprefix\", \"a\"},\n-   {\"--language\", \"-x\", \"a\"},\n-   {\"--library-directory\", \"-L\", \"a\"},\n-   {\"--machine\", \"-m\", \"aj\"},\n-   {\"--machine-\", \"-m\", \"*j\"},\n-   {\"--no-canonical-prefixes\", \"-no-canonical-prefixes\", 0},\n-   {\"--no-integrated-cpp\", \"-no-integrated-cpp\", 0},\n-   {\"--no-line-commands\", \"-P\", 0},\n-   {\"--no-precompiled-includes\", \"-noprecomp\", 0},\n-   {\"--no-standard-includes\", \"-nostdinc\", 0},\n-   {\"--no-standard-libraries\", \"-nostdlib\", 0},\n-   {\"--no-warnings\", \"-w\", 0},\n-   {\"--optimize\", \"-O\", \"oj\"},\n-   {\"--output\", \"-o\", \"a\"},\n-   {\"--output-class-directory\", \"-foutput-class-dir=\", \"ja\"},\n-   {\"--param\", \"--param\", \"a\"},\n-   {\"--pass-exit-codes\", \"-pass-exit-codes\", 0},\n-   {\"--pedantic\", \"-pedantic\", 0},\n-   {\"--pedantic-errors\", \"-pedantic-errors\", 0},\n-   {\"--pie\", \"-pie\", 0},\n-   {\"--pipe\", \"-pipe\", 0},\n-   {\"--prefix\", \"-B\", \"a\"},\n-   {\"--preprocess\", \"-E\", 0},\n-   {\"--print-search-dirs\", \"-print-search-dirs\", 0},\n-   {\"--print-file-name\", \"-print-file-name=\", \"aj\"},\n-   {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n-   {\"--print-missing-file-dependencies\", \"-MG\", 0},\n-   {\"--print-multi-lib\", \"-print-multi-lib\", 0},\n-   {\"--print-multi-directory\", \"-print-multi-directory\", 0},\n-   {\"--print-multi-os-directory\", \"-print-multi-os-directory\", 0},\n-   {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n-   {\"--print-sysroot\", \"-print-sysroot\", 0},\n-   {\"--print-sysroot-headers-suffix\", \"-print-sysroot-headers-suffix\", 0},\n-   {\"--profile\", \"-p\", 0},\n-   {\"--resource\", \"-fcompile-resource=\", \"aj\"},\n-   {\"--save-temps\", \"-save-temps\", 0},\n-   {\"--shared\", \"-shared\", 0},\n-   {\"--specs\", \"-specs=\", \"aj\"},\n-   {\"--static\", \"-static\", 0},\n-   {\"--std\", \"-std=\", \"aj\"},\n-   {\"--symbolic\", \"-symbolic\", 0},\n-   {\"--sysroot\", \"--sysroot=\", \"aj\"},\n-   {\"--time\", \"-time\", 0},\n-   {\"--trace-includes\", \"-H\", 0},\n-   {\"--traditional\", \"-traditional\", 0},\n-   {\"--traditional-cpp\", \"-traditional-cpp\", 0},\n-   {\"--trigraphs\", \"-trigraphs\", 0},\n-   {\"--undefine-macro\", \"-U\", \"aj\"},\n-   {\"--user-dependencies\", \"-MM\", 0},\n-   {\"--verbose\", \"-v\", 0},\n-   {\"--warn-\", \"-W\", \"*j\"},\n-   {\"--write-dependencies\", \"-MD\", 0},\n-   {\"--write-user-dependencies\", \"-MMD\", 0},\n-   {\"--\", \"-f\", \"*j\"}\n- };\n-\f\n-\n-#ifdef TARGET_OPTION_TRANSLATE_TABLE\n-static const struct {\n-  const char *const option_found;\n-  const char *const replacements;\n-} target_option_translations[] =\n-{\n-  TARGET_OPTION_TRANSLATE_TABLE,\n-  { 0, 0 }\n-};\n-#endif\n-\n-/* Translate the options described by *ARGCP and *ARGVP.\n-   Make a new vector and store it back in *ARGVP,\n-   and store its length in *ARGCP.  */\n-\n-static void\n-translate_options (int *argcp, const char *const **argvp)\n-{\n-  int i;\n-  int argc = *argcp;\n-  const char *const *argv = *argvp;\n-  int newvsize = (argc + 2) * 2 * sizeof (const char *);\n-  const char **newv = XNEWVAR (const char *, newvsize);\n-  int newindex = 0;\n-\n-  i = 0;\n-  newv[newindex++] = argv[i++];\n-\n-  while (i < argc)\n-    {\n-#ifdef TARGET_OPTION_TRANSLATE_TABLE\n-      int tott_idx;\n-\n-      for (tott_idx = 0;\n-\t   target_option_translations[tott_idx].option_found;\n-\t   tott_idx++)\n-\t{\n-\t  if (strcmp (target_option_translations[tott_idx].option_found,\n-\t\t      argv[i]) == 0)\n-\t    {\n-\t      int spaces = 1;\n-\t      const char *sp;\n-\t      char *np;\n-\n-\t      for (sp = target_option_translations[tott_idx].replacements;\n-\t\t   *sp; sp++)\n-\t\t{\n-\t\t  if (*sp == ' ')\n-\t\t    spaces ++;\n-\t\t}\n-\n-\t      newvsize += spaces * sizeof (const char *);\n-\t      newv =  XRESIZEVAR (const char *, newv, newvsize);\n-\n-\t      sp = target_option_translations[tott_idx].replacements;\n-\t      np = xstrdup (sp);\n-\n-\t      while (1)\n-\t\t{\n-\t\t  while (*np == ' ')\n-\t\t    np++;\n-\t\t  if (*np == 0)\n-\t\t    break;\n-\t\t  newv[newindex++] = np;\n-\t\t  while (*np != ' ' && *np)\n-\t\t    np++;\n-\t\t  if (*np == 0)\n-\t\t    break;\n-\t\t  *np++ = 0;\n-\t\t}\n-\n-\t      i ++;\n-\t      break;\n-\t    }\n-\t}\n-      if (target_option_translations[tott_idx].option_found)\n-\tcontinue;\n-#endif\n-\n-      /* Translate -- options.  */\n-      if (argv[i][0] == '-' && argv[i][1] == '-')\n-\t{\n-\t  size_t j;\n-\t  /* Find a mapping that applies to this option.  */\n-\t  for (j = 0; j < ARRAY_SIZE (option_map); j++)\n-\t    {\n-\t      size_t optlen = strlen (option_map[j].name);\n-\t      size_t arglen = strlen (argv[i]);\n-\t      size_t complen = arglen > optlen ? optlen : arglen;\n-\t      const char *arginfo = option_map[j].arg_info;\n-\n-\t      if (arginfo == 0)\n-\t\targinfo = \"\";\n-\n-\t      if (!strncmp (argv[i], option_map[j].name, complen))\n-\t\t{\n-\t\t  const char *arg = 0;\n-\n-\t\t  if (arglen < optlen)\n-\t\t    {\n-\t\t      size_t k;\n-\t\t      for (k = j + 1; k < ARRAY_SIZE (option_map); k++)\n-\t\t\tif (strlen (option_map[k].name) >= arglen\n-\t\t\t    && !strncmp (argv[i], option_map[k].name, arglen))\n-\t\t\t  {\n-\t\t\t    error (\"ambiguous abbreviation %s\", argv[i]);\n-\t\t\t    break;\n-\t\t\t  }\n-\n-\t\t      if (k != ARRAY_SIZE (option_map))\n-\t\t\tbreak;\n-\t\t    }\n-\n-\t\t  if (arglen > optlen)\n-\t\t    {\n-\t\t      /* If the option has an argument, accept that.  */\n-\t\t      if (argv[i][optlen] == '=')\n-\t\t\targ = argv[i] + optlen + 1;\n-\n-\t\t      /* If this mapping requires extra text at end of name,\n-\t\t\t accept that as \"argument\".  */\n-\t\t      else if (strchr (arginfo, '*') != 0)\n-\t\t\targ = argv[i] + optlen;\n-\n-\t\t      /* Otherwise, extra text at end means mismatch.\n-\t\t\t Try other mappings.  */\n-\t\t      else\n-\t\t\tcontinue;\n-\t\t    }\n-\n-\t\t  else if (strchr (arginfo, '*') != 0)\n-\t\t    {\n-\t\t      error (\"incomplete %qs option\", option_map[j].name);\n-\t\t      break;\n-\t\t    }\n-\n-\t\t  /* Handle arguments.  */\n-\t\t  if (strchr (arginfo, 'a') != 0)\n-\t\t    {\n-\t\t      if (arg == 0)\n-\t\t\t{\n-\t\t\t  if (i + 1 == argc)\n-\t\t\t    {\n-\t\t\t      error (\"missing argument to %qs option\",\n-\t\t\t\t     option_map[j].name);\n-\t\t\t      break;\n-\t\t\t    }\n-\n-\t\t\t  arg = argv[++i];\n-\t\t\t}\n-\t\t    }\n-\t\t  else if (strchr (arginfo, '*') != 0)\n-\t\t    ;\n-\t\t  else if (strchr (arginfo, 'o') == 0)\n-\t\t    {\n-\t\t      if (arg != 0)\n-\t\t\terror (\"extraneous argument to %qs option\",\n-\t\t\t       option_map[j].name);\n-\t\t      arg = 0;\n-\t\t    }\n-\n-\t\t  /* Store the translation as one argv elt or as two.  */\n-\t\t  if (arg != 0 && strchr (arginfo, 'j') != 0)\n-\t\t    newv[newindex++] = concat (option_map[j].equivalent, arg,\n-\t\t\t\t\t       NULL);\n-\t\t  else if (arg != 0)\n-\t\t    {\n-\t\t      newv[newindex++] = option_map[j].equivalent;\n-\t\t      newv[newindex++] = arg;\n-\t\t    }\n-\t\t  else\n-\t\t    newv[newindex++] = option_map[j].equivalent;\n-\n-\t\t  break;\n-\t\t}\n-\t    }\n-\t  i++;\n-\t}\n-\n-      /* Handle old-fashioned options--just copy them through,\n-\t with their arguments.  */\n-      else if (argv[i][0] == '-')\n-\t{\n-\t  const char *p = argv[i] + 1;\n-\t  int c = *p;\n-\t  int nskip = 1;\n-\n-\t  if (SWITCH_TAKES_ARG (c) > (p[1] != 0))\n-\t    nskip += SWITCH_TAKES_ARG (c) - (p[1] != 0);\n-\t  else if (WORD_SWITCH_TAKES_ARG (p))\n-\t    nskip += WORD_SWITCH_TAKES_ARG (p);\n-\t  else if ((c == 'B' || c == 'b' || c == 'x')\n-\t\t   && p[1] == 0)\n-\t    nskip += 1;\n-\t  else if (! strcmp (p, \"Xlinker\"))\n-\t    nskip += 1;\n-\t  else if (! strcmp (p, \"Xpreprocessor\"))\n-\t    nskip += 1;\n-\t  else if (! strcmp (p, \"Xassembler\"))\n-\t    nskip += 1;\n-\n-\t  /* Watch out for an option at the end of the command line that\n-\t     is missing arguments, and avoid skipping past the end of the\n-\t     command line.  */\n-\t  if (nskip + i > argc)\n-\t    nskip = argc - i;\n-\n-\t  while (nskip > 0)\n-\t    {\n-\t      newv[newindex++] = argv[i++];\n-\t      nskip--;\n-\t    }\n-\t}\n-      else\n-\t/* Ordinary operands.  */\n-\tnewv[newindex++] = argv[i++];\n-    }\n-\n-  newv[newindex] = 0;\n-\n-  *argvp = newv;\n-  *argcp = newindex;\n-}\n-\f\n static char *\n skip_whitespace (char *p)\n {\n@@ -3546,8 +3173,7 @@ driver_handle_option (const struct cl_decoded_option *decoded,\n       printf (\"%s\\n\", spec_machine);\n       exit (0);\n \n-    case OPT_fversion:\n-      /* translate_options () has turned --version into -fversion.  */\n+    case OPT__version:\n       print_version = 1;\n \n       /* CPP driver cannot obtain switch from cc1_options.  */\n@@ -3557,8 +3183,7 @@ driver_handle_option (const struct cl_decoded_option *decoded,\n       add_linker_option (\"--version\", strlen (\"--version\"));\n       break;\n \n-    case OPT_fhelp:\n-      /* translate_options () has turned --help into -fhelp.  */\n+    case OPT__help:\n       print_help_list = 1;\n \n       /* CPP driver cannot obtain switch from cc1_options.  */\n@@ -3568,13 +3193,11 @@ driver_handle_option (const struct cl_decoded_option *decoded,\n       add_linker_option (\"--help\", 6);\n       break;\n \n-    case OPT_fhelp_:\n-      /* translate_options () has turned --help into -fhelp.  */\n+    case OPT__help_:\n       print_subprocess_help = 2;\n       break;\n \n-    case OPT_ftarget_help:\n-      /* translate_options() has turned --target-help into -ftarget-help.  */\n+    case OPT__target_help:\n       print_subprocess_help = 1;\n \n       /* CPP driver cannot obtain switch from cc1_options.  */\n@@ -3885,7 +3508,6 @@ driver_handle_option (const struct cl_decoded_option *decoded,\n static void\n process_command (int argc, const char **argv)\n {\n-  int i;\n   const char *temp;\n   char *temp1;\n   const char *tooldir_prefix;\n@@ -3914,18 +3536,16 @@ process_command (int argc, const char **argv)\n \t}\n     }\n \n-  /* Convert new-style -- options to old-style.  */\n-  translate_options (&argc,\n-\t\t     CONST_CAST2 (const char *const **, const char ***,\n-\t\t\t\t  &argv));\n+  decode_cmdline_options_to_array (argc, argv, CL_DRIVER,\n+\t\t\t\t   &decoded_options, &decoded_options_count);\n \n   /* Handle any -no-canonical-prefixes flag early, to assign the function\n      that builds relative prefixes.  This function creates default search\n      paths that are needed later in normal option handling.  */\n \n-  for (i = 1; i < argc; i++)\n+  for (j = 1; j < decoded_options_count; j++)\n     {\n-      if (! strcmp (argv[i], \"-no-canonical-prefixes\"))\n+      if (decoded_options[j].opt_index == OPT_no_canonical_prefixes)\n \t{\n \t  get_relative_prefix = make_relative_prefix_ignore_links;\n \t  break;\n@@ -3974,9 +3594,6 @@ process_command (int argc, const char **argv)\n      is relocated. The toolchain was either relocated using GCC_EXEC_PREFIX\n      or an automatically created GCC_EXEC_PREFIX from argv[0].  */\n \n-  decode_cmdline_options_to_array (argc, argv, CL_DRIVER,\n-\t\t\t\t   &decoded_options, &decoded_options_count);\n-\n   /* Do language-specific adjustment/addition of flags.  */\n   lang_specific_driver (&decoded_options, &decoded_options_count,\n \t\t\t&added_libraries);"}, {"sha": "f1a1ee1c0fbb27f723ec1d335769e9fd00221103", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1,3 +1,13 @@\n+2010-09-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* jvspec.c (lang_specific_driver): Handle OPT__help instead of\n+\tOPT_fhelp.\n+\t* lang.opt (-CLASSPATH, -all-warnings, -bootclasspath, -classpath,\n+\t-dependencies, -encoding, -extdirs, -include-directory,\n+\t-include-directory=, -output-class-directory,\n+\t-output-class-directory=, -resource, -resource=,\n+\t-user-dependencies): New.\n+\n 2010-09-16  Richard Guenther  <rguenther@suse.de>\n \n \t* jcf-parse.c (current_file_list): Remove."}, {"sha": "7fe44f3b23d6871594ad9f8fd90f1df5bf50429a", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -238,7 +238,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \t  added--;\n \t  break;\n \n-\tcase OPT_fhelp:\n+\tcase OPT__help:\n \t  want_spec_file = 0;\n \t  break;\n "}, {"sha": "8f529787f4d886f633bc258eb2843f720ab1a2b2", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -24,6 +24,48 @@\n Language\n Java\n \n+-CLASSPATH\n+Java Separate Alias(fclasspath=)\n+\n+-all-warnings\n+Java Alias(Wall)\n+\n+-bootclasspath\n+Java Separate Alias(fbootclasspath=)\n+\n+-classpath\n+Java Separate Alias(fclasspath=)\n+\n+-dependencies\n+Java Alias(M)\n+\n+-encoding\n+Java Separate Alias(fencoding=)\n+\n+-extdirs\n+Java Separate Alias(fextdirs=)\n+\n+-include-directory\n+Java Separate Alias(I)\n+\n+-include-directory=\n+Java Joined Alias(I)\n+\n+-output-class-directory\n+Java Separate Alias(foutput-class-dir=)\n+\n+-output-class-directory=\n+Java Joined Alias(foutput-class-dir=)\n+\n+-resource\n+Java Separate Alias(fcompile-resource=)\n+\n+-resource=\n+Java Joined Alias(fcompile-resource=)\n+\n+-user-dependencies\n+Java Alias(MM)\n+\n C\n Driver\n ; Java driver option in fact distinct from C-family option with the same name."}, {"sha": "678b60e891b0b9e80e023791f6a1c1ef7fb2b676", "filename": "gcc/opts-common.c", "status": "modified", "additions": 225, "deletions": 34, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -24,7 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"options.h\"\n #include \"diagnostic.h\"\n-#include \"tm.h\" /* For SWITCH_TAKES_ARG and WORD_SWITCH_TAKES_ARG.  */\n+#include \"tm.h\" /* For SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG and\n+\t\t   TARGET_OPTION_TRANSLATE_TABLE.  */\n \n /* Perform a binary search to find which option the command-line INPUT\n    matches.  Returns its index in the option array, and\n@@ -53,7 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n size_t\n find_opt (const char *input, int lang_mask)\n {\n-  size_t mn, mx, md, opt_len;\n+  size_t mn, mn_orig, mx, md, opt_len;\n   size_t match_wrong_lang;\n   int comp;\n \n@@ -74,6 +75,8 @@ find_opt (const char *input, int lang_mask)\n \tmn = md;\n     }\n \n+  mn_orig = mn;\n+\n   /* This is the switch that is the best match but for a different\n      front end, or OPT_SPECIAL_unknown if there is no match at all.  */\n   match_wrong_lang = OPT_SPECIAL_unknown;\n@@ -106,6 +109,40 @@ find_opt (const char *input, int lang_mask)\n     }\n   while (mn != cl_options_count);\n \n+  if (match_wrong_lang == OPT_SPECIAL_unknown && input[0] == '-')\n+    {\n+      /* Long options, starting \"--\", may be abbreviated if the\n+\t abbreviation is unambiguous.  This only applies to options\n+\t not taking a joined argument, and abbreviations of \"--option\"\n+\t are permitted even if there is a variant \"--option=\".  */\n+      size_t mnc = mn_orig + 1;\n+      size_t cmp_len = strlen (input);\n+      while (mnc < cl_options_count\n+\t     && strncmp (input, cl_options[mnc].opt_text + 1, cmp_len) == 0)\n+\t{\n+\t  /* Option matching this abbreviation.  OK if it is the first\n+\t     match and that does not take a joined argument, or the\n+\t     second match, taking a joined argument and with only '='\n+\t     added to the first match; otherwise considered\n+\t     ambiguous.  */\n+\t  if (mnc == mn_orig + 1\n+\t      && !(cl_options[mnc].flags & CL_JOINED))\n+\t    match_wrong_lang = mnc;\n+\t  else if (mnc == mn_orig + 2\n+\t\t   && match_wrong_lang == mn_orig + 1\n+\t\t   && (cl_options[mnc].flags & CL_JOINED)\n+\t\t   && (cl_options[mnc].opt_len\n+\t\t       == cl_options[mn_orig + 1].opt_len + 1)\n+\t\t   && strncmp (cl_options[mnc].opt_text + 1,\n+\t\t\t       cl_options[mn_orig + 1].opt_text + 1,\n+\t\t\t       cl_options[mn_orig + 1].opt_len) == 0)\n+\t    ; /* OK, as long as there are no more matches.  */\n+\t  else\n+\t    return OPT_SPECIAL_unknown;\n+\t  mnc++;\n+\t}\n+    }\n+\n   /* Return the best wrong match, or OPT_SPECIAL_unknown if none.  */\n   return match_wrong_lang;\n }\n@@ -197,6 +234,46 @@ generate_canonical_option (size_t opt_index, const char *arg, int value,\n     }\n }\n \n+/* Structure describing mappings from options on the command line to\n+   options to look up with find_opt.  */\n+struct option_map\n+{\n+  /* Prefix of the option on the command line.  */\n+  const char *opt0;\n+  /* If two argv elements are considered to be merged into one option,\n+     prefix for the second element, otherwise NULL.  */\n+  const char *opt1;\n+  /* The new prefix to map to.  */\n+  const char *new_prefix;\n+  /* Whether at least one character is needed following opt1 or opt0\n+     for this mapping to be used.  (--optimize= is valid for -O, but\n+     --warn- is not valid for -W.)  */\n+  bool another_char_needed;\n+  /* Whether the original option is a negated form of the option\n+     resulting from this map.  */\n+  bool negated;\n+};\n+static const struct option_map option_map[] =\n+  {\n+    { \"-Wno-\", NULL, \"-W\", false, true },\n+    { \"-fno-\", NULL, \"-f\", false, true },\n+    { \"-mno-\", NULL, \"-m\", false, true },\n+    { \"--debug=\", NULL, \"-g\", false, false },\n+    { \"--machine-\", NULL, \"-m\", true, false },\n+    { \"--machine-no-\", NULL, \"-m\", false, true },\n+    { \"--machine=\", NULL, \"-m\", false, false },\n+    { \"--machine=no-\", NULL, \"-m\", false, true },\n+    { \"--machine\", \"\", \"-m\", false, false },\n+    { \"--machine\", \"no-\", \"-m\", false, true },\n+    { \"--optimize=\", NULL, \"-O\", false, false },\n+    { \"--std=\", NULL, \"-std=\", false, false },\n+    { \"--std\", \"\", \"-std=\", false, false },\n+    { \"--warn-\", NULL, \"-W\", true, false },\n+    { \"--warn-no-\", NULL, \"-W\", false, true },\n+    { \"--\", NULL, \"-f\", true, false },\n+    { \"--no-\", NULL, \"-f\", false, true }\n+  };\n+\n /* Decode the switch beginning at ARGV for the language indicated by\n    LANG_MASK (including CL_COMMON and CL_TARGET if applicable), into\n    the structure *DECODED.  Returns the number of switches\n@@ -207,10 +284,10 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t\t       struct cl_decoded_option *decoded)\n {\n   size_t opt_index;\n-  const char *opt, *arg = 0;\n-  char *dup = 0;\n+  const char *arg = 0;\n   int value = 1;\n-  unsigned int result = 1, i;\n+  unsigned int result = 1, i, extra_args;\n+  int adjust_len = 0;\n   size_t total_len;\n   char *p;\n   const struct cl_option *option;\n@@ -220,28 +297,50 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n   bool joined_arg_flag;\n   bool have_separate_arg = false;\n \n-  opt = argv[0];\n+  extra_args = 0;\n \n-  opt_index = find_opt (opt + 1, lang_mask);\n-  if (opt_index == OPT_SPECIAL_unknown\n-      && (opt[1] == 'W' || opt[1] == 'f' || opt[1] == 'm')\n-      && opt[2] == 'n' && opt[3] == 'o' && opt[4] == '-')\n+  opt_index = find_opt (argv[0] + 1, lang_mask);\n+  i = 0;\n+  while (opt_index == OPT_SPECIAL_unknown\n+\t && i < ARRAY_SIZE (option_map))\n     {\n-      /* Drop the \"no-\" from negative switches.  */\n-      size_t len = strlen (opt) - 3;\n-\n-      dup = XNEWVEC (char, len + 1);\n-      dup[0] = '-';\n-      dup[1] = opt[1];\n-      memcpy (dup + 2, opt + 5, len - 2 + 1);\n-      opt = dup;\n-      value = 0;\n-      opt_index = find_opt (opt + 1, lang_mask);\n+      const char *opt0 = option_map[i].opt0;\n+      const char *opt1 = option_map[i].opt1;\n+      const char *new_prefix = option_map[i].new_prefix;\n+      bool another_char_needed = option_map[i].another_char_needed;\n+      size_t opt0_len = strlen (opt0);\n+      size_t opt1_len = (opt1 == NULL ? 0 : strlen (opt1));\n+      size_t optn_len = (opt1 == NULL ? opt0_len : opt1_len);\n+      size_t new_prefix_len = strlen (new_prefix);\n+\n+      extra_args = (opt1 == NULL ? 0 : 1);\n+      value = !option_map[i].negated;\n+\n+      if (strncmp (argv[0], opt0, opt0_len) == 0\n+\t  && (opt1 == NULL\n+\t      || (argv[1] != NULL && strncmp (argv[1], opt1, opt1_len) == 0))\n+\t  && (!another_char_needed\n+\t      || argv[extra_args][optn_len] != 0))\n+\t{\n+\t  size_t arglen = strlen (argv[extra_args]);\n+\t  char *dup;\n+\n+\t  adjust_len = (int) optn_len - (int) new_prefix_len;\n+\t  dup = XNEWVEC (char, arglen + 1 - adjust_len);\n+\t  memcpy (dup, new_prefix, new_prefix_len);\n+\t  memcpy (dup + new_prefix_len, argv[extra_args] + optn_len,\n+\t\t  arglen - optn_len + 1);\n+\t  opt_index = find_opt (dup + 1, lang_mask);\n+\t  free (dup);\n+\t}\n+      i++;\n     }\n \n   if (opt_index == OPT_SPECIAL_unknown)\n     {\n       arg = argv[0];\n+      extra_args = 0;\n+      value = 1;\n       goto done;\n     }\n \n@@ -257,6 +356,7 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n       goto done;\n     }\n \n+  result = extra_args + 1;\n   warn_message = option->warn_message;\n \n   /* Check to see if the option is disabled for this configuration.  */\n@@ -276,18 +376,16 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n       /* Have arg point to the original switch.  This is because\n \t some code, such as disable_builtin_function, expects its\n \t argument to be persistent until the program exits.  */\n-      arg = argv[0] + cl_options[opt_index].opt_len + 1;\n-      if (!value)\n-\targ += strlen (\"no-\");\n+      arg = argv[extra_args] + cl_options[opt_index].opt_len + 1 + adjust_len;\n \n       if (*arg == '\\0' && !(option->flags & CL_MISSING_OK))\n \t{\n \t  if (separate_arg_flag)\n \t    {\n-\t      arg = argv[1];\n-\t      result = 2;\n+\t      arg = argv[extra_args + 1];\n+\t      result = extra_args + 2;\n \t      if (arg == NULL)\n-\t\tresult = 1;\n+\t\tresult = extra_args + 1;\n \t      else\n \t\thave_separate_arg = true;\n \t    }\n@@ -298,10 +396,10 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n     }\n   else if (separate_arg_flag)\n     {\n-      arg = argv[1];\n-      result = 2;\n+      arg = argv[extra_args + 1];\n+      result = extra_args + 2;\n       if (arg == NULL)\n-\tresult = 1;\n+\tresult = extra_args + 1;\n       else\n \thave_separate_arg = true;\n     }\n@@ -329,7 +427,8 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t  const struct cl_option *new_option = &cl_options[new_opt_index];\n \n \t  /* The new option must not be an alias itself.  */\n-\t  gcc_assert (new_option->alias_target == N_OPTS);\n+\t  gcc_assert (new_option->alias_target == N_OPTS\n+\t\t      || (new_option->flags & CL_SEPARATE_ALIAS));\n \n \t  if (option->neg_alias_arg)\n \t    {\n@@ -363,7 +462,11 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t  if (!(errors & CL_ERR_MISSING_ARG))\n \t    {\n \t      if (separate_arg_flag || joined_arg_flag)\n-\t\tgcc_assert (arg != NULL);\n+\t\t{\n+\t\t  if ((option->flags & CL_MISSING_OK) && arg == NULL)\n+\t\t    arg = \"\";\n+\t\t  gcc_assert (arg != NULL);\n+\t\t}\n \t      else\n \t\tgcc_assert (arg == NULL);\n \t    }\n@@ -392,8 +495,6 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n     }\n \n  done:\n-  if (dup)\n-    free (dup);\n   decoded->opt_index = opt_index;\n   decoded->arg = arg;\n   decoded->value = value;\n@@ -455,6 +556,17 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n   return result;\n }\n \n+#ifdef TARGET_OPTION_TRANSLATE_TABLE\n+static const struct {\n+  const char *const option_found;\n+  const char *const replacements;\n+} target_option_translations[] =\n+{\n+  TARGET_OPTION_TRANSLATE_TABLE,\n+  { 0, 0 }\n+};\n+#endif\n+\n /* Decode command-line options (ARGC and ARGV being the arguments of\n    main) into an array, setting *DECODED_OPTIONS to a pointer to that\n    array and *DECODED_OPTIONS_COUNT to the number of entries in the\n@@ -470,9 +582,10 @@ decode_cmdline_options_to_array (unsigned int argc, const char **argv,\n \t\t\t\t struct cl_decoded_option **decoded_options,\n \t\t\t\t unsigned int *decoded_options_count)\n {\n-  unsigned int n, i;\n+  unsigned int n, i, target_translate_from;\n   struct cl_decoded_option *opt_array;\n   unsigned int num_decoded_options;\n+  bool argv_copied = false;\n \n   opt_array = XNEWVEC (struct cl_decoded_option, argc);\n \n@@ -489,6 +602,7 @@ decode_cmdline_options_to_array (unsigned int argc, const char **argv,\n   opt_array[0].errors = 0;\n   num_decoded_options = 1;\n \n+  target_translate_from = 1;\n   for (i = 1; i < argc; i += n)\n     {\n       const char *opt = argv[i];\n@@ -502,11 +616,88 @@ decode_cmdline_options_to_array (unsigned int argc, const char **argv,\n \t  continue;\n \t}\n \n+      if (i >= target_translate_from && (lang_mask & CL_DRIVER))\n+\t{\n+#ifdef TARGET_OPTION_TRANSLATE_TABLE\n+\t  int tott_idx;\n+\n+\t  for (tott_idx = 0;\n+\t       target_option_translations[tott_idx].option_found;\n+\t       tott_idx++)\n+\t    {\n+\t      if (strcmp (target_option_translations[tott_idx].option_found,\n+\t\t\t  argv[i]) == 0)\n+\t\t{\n+\t\t  unsigned int spaces = 0;\n+\t\t  unsigned int m = 0;\n+\t\t  const char *sp;\n+\t\t  char *np;\n+\n+\t\t  for (sp = target_option_translations[tott_idx].replacements;\n+\t\t       *sp; sp++)\n+\t\t    {\n+\t\t      if (*sp == ' ')\n+\t\t\t{\n+\t\t\t  spaces++;\n+\t\t\t  while (*sp == ' ')\n+\t\t\t    sp++;\n+\t\t\t  sp--;\n+\t\t\t}\n+\t\t    }\n+\n+\t\t  if (spaces)\n+\t\t    {\n+\t\t      int new_argc = argc + spaces;\n+\t\t      if (argv_copied)\n+\t\t\targv = XRESIZEVEC (const char *, argv, new_argc + 1);\n+\t\t      else\n+\t\t\t{\n+\t\t\t  const char **new_argv = XNEWVEC (const char *,\n+\t\t\t\t\t\t\t   new_argc + 1);\n+\t\t\t  memcpy (new_argv, argv,\n+\t\t\t\t  (argc + 1) * sizeof (const char *));\n+\t\t\t  argv = new_argv;\n+\t\t\t  argv_copied = true;\n+\t\t\t}\n+\t\t      memmove (&argv[i] + spaces, &argv[i],\n+\t\t\t       (argc + 1 - i) * sizeof (const char *));\n+\t\t      argc = new_argc;\n+\t\t      opt_array = XRESIZEVEC (struct cl_decoded_option,\n+\t\t\t\t\t      opt_array, argc);\n+\t\t    }\n+\n+\t\t  sp = target_option_translations[tott_idx].replacements;\n+\t\t  np = xstrdup (sp);\n+\n+\t\t  while (1)\n+\t\t    {\n+\t\t      while (*np == ' ')\n+\t\t\tnp++;\n+\t\t      if (*np == 0)\n+\t\t\tbreak;\n+\t\t      argv[i + m++] = np;\n+\t\t      while (*np != ' ' && *np)\n+\t\t\tnp++;\n+\t\t      if (*np == 0)\n+\t\t\tbreak;\n+\t\t      *np++ = 0;\n+\t\t    }\n+\n+\t\t  target_translate_from = i + m;\n+\t\t  gcc_assert (m == spaces + 1);\n+\t\t  break;\n+\t\t}\n+\t    }\n+#endif\n+\t}\n+\n       n = decode_cmdline_option (argv + i, lang_mask,\n \t\t\t\t &opt_array[num_decoded_options]);\n       num_decoded_options++;\n     }\n \n+  if (argv_copied)\n+    free (argv);\n   opt_array = XRESIZEVEC (struct cl_decoded_option, opt_array,\n \t\t\t  num_decoded_options);\n   *decoded_options = opt_array;"}, {"sha": "643f88999d50e948dad4a4afa8a581251a019118", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e200444e3bf13cabbb9ad5bd29fdc840f82462a8/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e200444e3bf13cabbb9ad5bd29fdc840f82462a8", "patch": "@@ -1429,7 +1429,6 @@ common_handle_option (const struct cl_decoded_option *decoded,\n       verbose = true;\n       break;\n \n-    case OPT_fhelp:\n     case OPT__help:\n       {\n \tunsigned int all_langs_mask = (1U << cl_lang_count) - 1;\n@@ -1451,7 +1450,6 @@ common_handle_option (const struct cl_decoded_option *decoded,\n \tbreak;\n       }\n \n-    case OPT_ftarget_help:\n     case OPT__target_help:\n       print_specific_help (CL_TARGET, CL_UNDOCUMENTED, 0);\n       exit_after_options = true;\n@@ -1461,7 +1459,6 @@ common_handle_option (const struct cl_decoded_option *decoded,\n \ttargetm.help ();\n       break;\n \n-    case OPT_fhelp_:\n     case OPT__help_:\n       {\n \tconst char * a = arg;\n@@ -1580,7 +1577,6 @@ common_handle_option (const struct cl_decoded_option *decoded,\n \tbreak;\n       }\n \n-    case OPT_fversion:\n     case OPT__version:\n       exit_after_options = true;\n       break;"}]}