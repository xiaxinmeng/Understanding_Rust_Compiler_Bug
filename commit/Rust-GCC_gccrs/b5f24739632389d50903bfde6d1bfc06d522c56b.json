{"sha": "b5f24739632389d50903bfde6d1bfc06d522c56b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmMjQ3Mzk2MzIzODlkNTA5MDNiZmRlNmQxYmZjMDZkNTIyYzU2Yg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-03T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-03T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "b9a7bc9531b3a203680828f18b5288a5ed918433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9a7bc9531b3a203680828f18b5288a5ed918433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5f24739632389d50903bfde6d1bfc06d522c56b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f24739632389d50903bfde6d1bfc06d522c56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f24739632389d50903bfde6d1bfc06d522c56b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f24739632389d50903bfde6d1bfc06d522c56b/comments", "author": null, "committer": null, "parents": [{"sha": "c4a6b2dadcdebd39ba89e6e931c3a1e5bdfa4e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4a6b2dadcdebd39ba89e6e931c3a1e5bdfa4e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4a6b2dadcdebd39ba89e6e931c3a1e5bdfa4e23"}], "stats": {"total": 272, "additions": 271, "deletions": 1}, "files": [{"sha": "3b9871d208c63c438aea59e40690784b84bf247c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,83 @@\n+2020-07-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96028\n+\t* tree-vect-slp.c (vect_slp_convert_to_external): Make sure\n+\twe have scalar stmts to use.\n+\t(vect_slp_analyze_node_operations): When analyzing a child\n+\tfailed try externalizing the parent node.\n+\n+2020-07-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR debug/95343\n+\t* ipa-param-manipulation.c (ipa_param_adjustments::modify_call): Adjust\n+\targument index if necessary.\n+\n+2020-07-02  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/95830\n+\t* tree-vect-generic.c (expand_vector_condition): Forward declaration.\n+\t(expand_vector_comparison): Do not expand a comparison if all\n+\tuses are consumed by a VEC_COND_EXPR.\n+\t(expand_vector_operation): Change void return type to bool.\n+\t(expand_vector_operations_1): Pass dce_ssa_names.\n+\n+2020-07-02  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR bootstrap/95700\n+\t* system.h (NULL): Redefine to nullptr.\n+\n+2020-07-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95857\n+\t* tree-cfg.c (group_case_labels_stmt): When removing an unreachable\n+\tbase_bb, remember all forced and non-local labels on it and later\n+\ttreat those as if they have NULL label_to_block.  Formatting fix.\n+\tFix a comment typo.\n+\n+2020-07-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96022\n+\t* tree-vect-stmts.c (vectorizable_shift): Only use the\n+\tfirst vector stmt when extracting the scalar shift amount.\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Also build unary\n+\tnodes with all-scalar children from scalars but not stores.\n+\t(vect_analyze_slp_instance): Mark the node not failed.\n+\n+2020-07-02  Felix Yang  <felix.yang@huawei.com>\n+\n+\tPR tree-optimization/95961\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Use the\n+\tnumber of scalars instead of the number of vectors as an upper bound\n+\tfor the loop saving info about DR in the hash table.  Remove unused\n+\tlocal variables.\n+\n+2020-07-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-expand.c (expand_omp_for): Diagnose non-rectangular loops with\n+\tinvalid steps - ((m2 - m1) * incr_outer) % incr must be 0 in valid\n+\tOpenMP non-rectangular loops.  Use XALLOCAVEC.\n+\n+2020-07-02  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/95348\n+\t* coverage.c (read_counts_file): Read only COUNTERS that are\n+\tnot all-zero.\n+\t* gcov-dump.c (tag_function): Change signature from unsigned to\n+\tsigned integer.\n+\t(tag_blocks): Likewise.\n+\t(tag_arcs): Likewise.\n+\t(tag_lines): Likewise.\n+\t(tag_counters): Likewise.\n+\t(tag_summary): Likewise.\n+\t* gcov.c (read_count_file): Read all non-zero counters\n+\tsensitively.\n+\n+2020-07-02  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/multilib-generator (arch_canonicalize): Handle\n+\tmulti-letter extension.\n+\tUsing underline as separator between different extensions.\n+\n 2020-07-01  Pip Cet  <pipcet@gmail.com>\n \n \t* spellcheck.c (test_data): Add problematic strings."}, {"sha": "58c9c6a0cb060e4a93b5f273ce070f073cb8d923", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1 +1 @@\n-20200702\n+20200703"}, {"sha": "0cb5f1b3e0ef389ed8fe8d7dfbdcb7c72f94a771", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,10 @@\n+2020-07-02  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* debug.adb (d.K): Document new usage.\n+\t* fe.h (Debug_Flag_Dot_KK): Declare.\n+\t* gcc-interface/decl.c (gnat_to_gnu_field): Give an error when the\n+\tcomponent overlaps with the parent subtype, except with -gnatd.K.\n+\n 2020-06-26  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n \n \t* exp_ch4.adb (Expand_Set_Membership): Expand the membership test"}, {"sha": "87925f63fc2124a9b6471a062bd62d4a113811de", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,8 @@\n+2020-07-02  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Define __cpp_consteval.\n+\n 2020-06-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/95963"}, {"sha": "41a6e6d02f7ab78300a142f2099f03e52fcead26", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,16 @@\n+2020-07-02  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (grokfndecl): Allow consteval virtual.\n+\t* search.c (check_final_overrider): Check consteval mismatch.\n+\t* constexpr.c (cxx_eval_thunk_call): New.\n+\t(cxx_eval_call_expression): Call it.\n+\t* cvt.c (cp_get_fndecl_from_callee): Handle FDESC_EXPR.\n+\t* decl2.c (mark_vtable_entries): Track vtables with consteval.\n+\t(maybe_emit_vtables): Pass consteval_vtables through.\n+\t(clear_consteval_vfns): Replace consteval with nullptr.\n+\t(c_parse_final_cleanups): Call it.\n+\n 2020-07-01  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (copy_fndecl_with_name): Add additional predicate args, do"}, {"sha": "9bc9c444b07e36155294f76f47ebbb088142ef12", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,26 @@\n+2020-07-02  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/93423\n+\t* resolve.c (resolve_symbol): Avoid NULL pointer dereference.\n+\n+2020-07-02  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/93337\n+\t* class.c (gfc_find_derived_vtab): Punt if name is not set.\n+\n+2020-07-02  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/52279\n+\t* check.c (gfc_invalid_boz):  Change array declaration for\n+\thint into a pointer.\n+\n+2020-07-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/95584\n+\t* interface.c (generic_correspondence): Only use the pointer\n+\tto a symbol if exists.\n+\n 2020-07-01  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* check.c (gfc_invalid_boz): Fix bootstrap. Revert"}, {"sha": "464048d13873e52be010caff53ad8230a8e39127", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,64 @@\n+2020-07-02  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gfortran.dg/pr95690.f90: Solaris error appears on line 5.\n+\n+2020-07-02  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.dg/pr26570.c: dg-prune function not inlinable warning.\n+\n+2020-07-02  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/93423\n+\t* gfortran.dg/pr93423.f90: New file.\n+\n+2020-07-02  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/93337\n+\t* gfortran.dg/pr93337.f90: New file.\n+\n+2020-07-02  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp2a/consteval-virtual1.C: New test.\n+\t* g++.dg/cpp2a/consteval-virtual2.C: New test.\n+\t* g++.dg/cpp2a/consteval-virtual3.C: New test.\n+\t* g++.dg/cpp2a/consteval-virtual4.C: New test.\n+\t* g++.dg/cpp2a/consteval-virtual5.C: New test.\n+\n+2020-07-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR debug/95343\n+\t* gcc.dg/guality/pr95343.c: New test.\n+\n+2020-07-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95857\n+\t* gcc.dg/pr95857.c: New test.\n+\n+2020-07-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96022\n+\t* g++.dg/vect/pr96022.cc: New testcase.\n+\n+2020-07-02  Felix Yang  <felix.yang@huawei.com>\n+\n+\tPR tree-optimization/95961\n+\t* gcc.target/aarch64/sve/pr95961.c: New test.\n+\n+2020-07-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/loop-7.c: New test.\n+\n+2020-07-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/95584\n+\t* gfortran.dg/pr95584.f90: New test.\n+\n+2020-07-02  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* g++.dg/vect/slp-pr56812.cc: Ignore line number for basic block\n+\tvectorization messages.\n+\n 2020-07-01  Omar Tahir  <omar.tahir@arm.com>\n \n \t* gcc.target/aarch64/bti-4.c: New test."}, {"sha": "7ab77a05455fc1a4d6e20aae77e7e66c31e6b5bd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,19 @@\n+2020-07-02  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/95348\n+\t* libgcov-driver.c (merge_one_data): Merge only profiles\n+\tthat are not of non-zero type.\n+\t(write_one_data): Write counters only if there's one non-zero\n+\tvalue.\n+\t* libgcov-util.c (tag_function): Change signature from unsigned\n+\tto int.\n+\t(tag_blocks): Likewise.\n+\t(tag_arcs): Likewise.\n+\t(tag_counters): Likewise.\n+\t(tag_summary): Likewise.\n+\t(tag_lines): Read only if COUNTERS is non-zero.\n+\t(read_gcda_file): Handle negative length for COUNTERS type.\n+\n 2020-06-25  Martin Liska  <mliska@suse.cz>\n \n \t* libgcov-driver.c (merge_summary): Remove function as its name"}, {"sha": "d8832773e902b7d978b68140fbd1814ca3f0a1af", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f24739632389d50903bfde6d1bfc06d522c56b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f24739632389d50903bfde6d1bfc06d522c56b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b5f24739632389d50903bfde6d1bfc06d522c56b", "patch": "@@ -1,3 +1,68 @@\n+2020-07-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/basic_ios/conv/voidptr.cc: Add c++98_only\n+\ttarget selector.\n+\n+2020-07-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/18_support/headers/cstdalign/std_c++0x_neg.cc: Add\n+\tc++98_only target selector.\n+\t* testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/18_support/headers/cstdint/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/18_support/headers/new/synopsis_cxx98.cc: Likewise.\n+\t* testsuite/19_diagnostics/headers/system_error/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/headers/type_traits/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/headers/array/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/headers/tuple/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/cmath/c99_classification_macros_c++98.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/random/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/28_regex/headers/regex/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/29_atomics/headers/atomic/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/headers/condition_variable/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/headers/future/std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/headers/mutex/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/30_threads/headers/thread/std_c++0x_neg.cc:\n+\tLikewise.\n+\n+2020-07-02  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/91807\n+\t* include/std/variant\n+\t(_Copy_assign_base::operator=(const _Copy_assign_base&):\n+\tDo the move-assignment from a temporary so that the temporary\n+\tis constructed with an explicit index.\n+\t* testsuite/20_util/variant/91807.cc: New.\n+\n+2020-07-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/91153\n+\tPR target/93224\n+\t* testsuite/29_atomics/atomic_float/1.cc: Use different values\n+\tfor tests.\n+\t* testsuite/29_atomics/atomic_ref/float.cc: Likewise.\n+\n 2020-07-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/94627"}]}