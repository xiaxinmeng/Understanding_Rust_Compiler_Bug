{"sha": "5d53ec27015b916640171e891870adf2c6fdfd4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1M2VjMjcwMTViOTE2NjQwMTcxZTg5MTg3MGFkZjJjNmZkZmQ0Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-20T13:25:20Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-20T15:23:12Z"}, "message": "Saturate overflows return from SCEV in ranger.\n\nbounds_of_var_in_loop is returning an overflowed int, which is causing\nus to create a range for which we can't compare the bounds causing\nan ICE in verify_range.\n\nOverflowed bounds cause compare_values() to return -2, which we\ndon't handle in verify_range.\n\nWe don't represent overflowed ranges in irange, so this patch just\nsaturates any overflowed end-points to MIN or MAX.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/97501\n\t* gimple-range.cc (gimple_ranger::range_of_ssa_name_with_loop_info):\n\tSaturate overflows returned from SCEV.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr97501.c: New test.", "tree": {"sha": "e40dddc65912a5f0727da9e19536a0c53948fea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e40dddc65912a5f0727da9e19536a0c53948fea6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d53ec27015b916640171e891870adf2c6fdfd4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d53ec27015b916640171e891870adf2c6fdfd4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d53ec27015b916640171e891870adf2c6fdfd4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d53ec27015b916640171e891870adf2c6fdfd4c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbcc6b1577bedd2bf5879393c862b6c461787503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbcc6b1577bedd2bf5879393c862b6c461787503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbcc6b1577bedd2bf5879393c862b6c461787503"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "ed9609be68ef27a862d5763500d048a9bac53cb4", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d53ec27015b916640171e891870adf2c6fdfd4c/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d53ec27015b916640171e891870adf2c6fdfd4c/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=5d53ec27015b916640171e891870adf2c6fdfd4c", "patch": "@@ -1146,9 +1146,9 @@ gimple_ranger::range_of_ssa_name_with_loop_info (irange &r, tree name,\n       // ?? We could do better here.  Since MIN/MAX can only be an\n       // SSA, SSA +- INTEGER_CST, or INTEGER_CST, we could easily call\n       // the ranger and solve anything not an integer.\n-      if (TREE_CODE (min) != INTEGER_CST)\n+      if (TREE_CODE (min) != INTEGER_CST || TREE_OVERFLOW (min))\n \tmin = vrp_val_min (type);\n-      if (TREE_CODE (max) != INTEGER_CST)\n+      if (TREE_CODE (max) != INTEGER_CST || TREE_OVERFLOW (max))\n \tmax = vrp_val_max (type);\n       r.set (min, max);\n     }"}, {"sha": "aedac83962dab7e8c0900e66e3509320c63942bb", "filename": "gcc/testsuite/gcc.dg/pr97501.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d53ec27015b916640171e891870adf2c6fdfd4c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d53ec27015b916640171e891870adf2c6fdfd4c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97501.c?ref=5d53ec27015b916640171e891870adf2c6fdfd4c", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+static int c = 0;\n+\n+int main() {\n+  int b = 0;\n+  if (c) {\n+  for (;; b--)\n+    do\n+      b++;\n+    while (b);\n+  }\n+}"}]}