{"sha": "12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1NzFiMWY5NjRiMmZjYmFlNWY2NmI2MzA3YzMxODU0ZWQ4YzBkNQ==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "1999-04-23T16:36:22Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "1999-04-23T16:36:22Z"}, "message": "Makefile.am: Added URLDecoder and URLEncoder.\n\n\t* Makefile.am: Added URLDecoder and URLEncoder.\n\t* Makefile.in: Rebuilt.\n\t* java/net/ServerSocket.java (setSocketFactory): Renamed from\n\tsetSocketImplFactory to match spec.\n\t* java/net/Socket.java (getSoLinger): Changed return type to\n\tmatch spec.\n\t* java/net/URLDecoder.java: New file.\n\t* java/net/URLEncoder.java: New file.\n\nFrom-SVN: r26605", "tree": {"sha": "824800dc6994edffba9ebed90251cddc6b816ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/824800dc6994edffba9ebed90251cddc6b816ef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/comments", "author": null, "committer": null, "parents": [{"sha": "d2692ef86e8ea0191975319469e8b1b3b2a846d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2692ef86e8ea0191975319469e8b1b3b2a846d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2692ef86e8ea0191975319469e8b1b3b2a846d4"}], "stats": {"total": 151, "additions": 146, "deletions": 5}, "files": [{"sha": "5f4e85b84d37ff315cb60f66d76ecfe6739a1277", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -1,3 +1,16 @@\n+1999-04-23  Warren Levy  <warrenl@cygnus.com>\n+\n+\t* Makefile.am: Added URLDecoder and URLEncoder.\n+\t* Makefile.in: Rebuilt.\n+\n+\t* java/net/ServerSocket.java (setSocketFactory): Renamed from\n+\tsetSocketImplFactory to match spec.\n+\t* java/net/Socket.java (getSoLinger): Changed return type to\n+\tmatch spec.\n+\n+\t* java/net/URLDecoder.java: New file.\n+\t* java/net/URLEncoder.java: New file.\n+\n 1999-04-21  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/lang/natString.cc (getBytes): Reverted earlier change and"}, {"sha": "1d28807a037b51ac71e33f15564b3bf2a959f447", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -513,6 +513,8 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/URL.java \\\n java/net/URLConnection.java \\\n+java/net/URLDecoder.java \\\n+java/net/URLEncoder.java \\\n java/net/URLStreamHandler.java \\\n java/net/URLStreamHandlerFactory.java \\\n java/net/UnknownHostException.java \\"}, {"sha": "5a7fe608b6c8fb93f82946073d2940f9e2313527", "filename": "libjava/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -374,6 +374,8 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/URL.java \\\n java/net/URLConnection.java \\\n+java/net/URLDecoder.java \\\n+java/net/URLEncoder.java \\\n java/net/URLStreamHandler.java \\\n java/net/URLStreamHandlerFactory.java \\\n java/net/UnknownHostException.java \\\n@@ -691,7 +693,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/net/ServerSocket.P .deps/java/net/Socket.P \\\n .deps/java/net/SocketException.P .deps/java/net/SocketImpl.P \\\n .deps/java/net/SocketImplFactory.P .deps/java/net/URL.P \\\n-.deps/java/net/URLConnection.P .deps/java/net/URLStreamHandler.P \\\n+.deps/java/net/URLConnection.P .deps/java/net/URLDecoder.P \\\n+.deps/java/net/URLEncoder.P .deps/java/net/URLStreamHandler.P \\\n .deps/java/net/URLStreamHandlerFactory.P \\\n .deps/java/net/UnknownHostException.P \\\n .deps/java/net/UnknownServiceException.P \\"}, {"sha": "4dcd9d60346fd9737068bde9b97fd49721816c64", "filename": "libjava/java/net/ServerSocket.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FServerSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FServerSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FServerSocket.java?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -96,7 +96,7 @@ public String toString ()\n     return impl.toString();\n   }\n \n-  public static void setSocketImplFactory (SocketImplFactory fac)\n+  public static void setSocketFactory (SocketImplFactory fac)\n     throws IOException\n   {\n     factory = fac;"}, {"sha": "8446b22989e1f17b7f805ab79155cb38e1c2f083", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -156,7 +156,7 @@ public void setSoLinger(boolean on, int linger) throws SocketException\n     throw new InternalError(\"Socket.setSoLinger not implemented\");\n   }\n \n-  public boolean getSoLinger() throws SocketException\n+  public int getSoLinger() throws SocketException\n   {\n     throw new InternalError(\"Socket.getSoLinger not implemented\");\n   }"}, {"sha": "40d47b7f13191b4313ee51648e93f411f6042645", "filename": "libjava/java/net/URLDecoder.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FURLDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FURLDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLDecoder.java?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -0,0 +1,48 @@\n+// URLDecoder.java - Provides a method for decoding strings according to\n+//\t\t     application/x-www-form-urlencoded MIME type.\n+\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.net;\n+import java.io.UnsupportedEncodingException;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date April 22, 1999.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public class URLDecoder\n+{\n+  // This method, per the JCL, is conservative in that it encodes\n+  // some \"allowable\" characters as % triplets.\n+  public static String decode(String s) throws Exception\n+  {\n+    String str = s.replace('+', ' ');\n+    String result = \"\";\n+    int i;\n+    int start = 0;\n+    while ((i = str.indexOf('%', start)) >= 0)\n+      {\n+\tresult = result + str.substring(start, i) +\n+\t\t (char) Integer.parseInt(str.substring(i + 1, i + 3), 16);\n+\tstart = i + 3;\n+      }\n+\n+    if (start < str.length())\n+      result = result + str.substring(start);\n+\n+    return result;\n+  }\n+}"}, {"sha": "83295ea57de27ba15a534f7900144126bffa76f6", "filename": "libjava/java/net/URLEncoder.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FURLEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Fjava%2Fnet%2FURLEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLEncoder.java?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -0,0 +1,71 @@\n+// URLEncoder.java - Provides a method for encoding strings according to\n+//\t\t     application/x-www-form-urlencoded MIME type.\n+\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.net;\n+import java.io.UnsupportedEncodingException;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date April 22, 1999.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Believed complete and correct.\n+ */\n+\n+public class URLEncoder\n+{\n+  // This method, per the JCL, is conservative in that it encodes\n+  // some \"allowable\" characters as % triplets.\n+  public static String encode(String s)\n+  {\n+    // Get the bytes in ISO-Latin-1 (i.e. 8859_1) per the JCL.\n+    // Even though it is the default in most cases, it's specified here\n+    // just in case System.getProperty(\"file.encoding\") is not \"8859_1\".\n+    String result = \"\";\n+    try\n+      {\n+\tbyte[] buf = s.getBytes(\"8859_1\");\n+\tint start = 0;\n+\tfor (int i = 0; i < buf.length; i++)\n+\t  // For efficiency, check the byte in order of most likely\n+\t  // possibility so as to minimize the number of comparisons.\n+\t  // Hence, exclude all the alphanumeric & allowed special chars first.\n+\t  if ((buf[i] >= 'a' && buf[i] <= 'z') ||\n+\t      (buf[i] >= 'A' && buf[i] <= 'Z') ||\n+\t      (buf[i] >= '0' && buf[i] <= '9') ||\n+\t      buf[i] == '-' || buf[i] == '_' || buf[i] == '.' || buf[i] == '*')\n+\t    ; // This is the most likely case so exclude first for efficiency.\n+\t  else if (buf[i] == ' ')\n+\t    buf[i] = (byte) '+';  // Replace space char with plus symbol.\n+\t  else\n+\t    {\n+\t      result = result + new String(buf, start, i - start, \"8859_1\") +\n+\t\t\t\"%\" + Integer.toHexString(((int) buf[i]) & 0xFF);\n+\t      start = i + 1;\n+\t    }\n+\n+\t// Append remainder of allowable chars from the string, if any.\n+\tif (start < buf.length)\n+\t  result = result +\n+\t\t   new String(buf, start, buf.length - start, \"8859_1\");\n+      }\n+    catch (UnsupportedEncodingException ex)\n+      {\n+\t// This should never happen as \"8859_1\" is the default encoding.\n+\treturn s;\n+      }\n+\n+    return result;\n+  }\n+}"}, {"sha": "764c148a3cad4ad558a63d10dc34211600b962c2", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12571b1f964b2fcbae5f66b6307c31854ed8c0d5/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "patch": "@@ -96,10 +96,14 @@ libgcj_basedir = @libgcj_basedir@\n AUTOMAKE_OPTIONS = foreign dejagnu no-installinfo\n \n # Setup the testing framework, if you have one\n-EXPECT = `if [ -f $(top_builddir)/../expect/expect ] ; then             echo $(top_builddir)/../expect/expect ;           else echo expect ; fi`\n+EXPECT = `if [ -f $(top_builddir)/../expect/expect ] ; then \\\n+            echo $(top_builddir)/../expect/expect ; \\\n+          else echo expect ; fi`\n \n \n-RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \t       echo $(top_srcdir)/../dejagnu/runtest ; \t    else echo runtest; fi`\n+RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n+\t       echo $(top_srcdir)/../dejagnu/runtest ; \\\n+\t    else echo runtest; fi`\n \n \n RUNTESTFLAGS = @AM_RUNTESTFLAGS@"}]}