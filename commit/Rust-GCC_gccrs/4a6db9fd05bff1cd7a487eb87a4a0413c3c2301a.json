{"sha": "4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2ZGI5ZmQwNWJmZjFjZDdhNDg3ZWI4N2E0YTA0MTNjM2MyMzAxYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-14T09:50:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:50:51Z"}, "message": "[Ada] Small internal improvements to the inlining machinery\n\nNo functional changes.\n\n2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* inline.adb (Add_Inlined_Body): Tweak comments.\n\t(List_Inlining_Info): Also list information about non-main\n\tunits.\n\nFrom-SVN: r274447", "tree": {"sha": "73280a052ff090ce67c4b67b7fabda01485db204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73280a052ff090ce67c4b67b7fabda01485db204"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a/comments", "author": null, "committer": null, "parents": [{"sha": "27de857e21ff577d5b478f3c98e4f3a8ca3b51b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27de857e21ff577d5b478f3c98e4f3a8ca3b51b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27de857e21ff577d5b478f3c98e4f3a8ca3b51b3"}], "stats": {"total": 81, "additions": 44, "deletions": 37}, "files": [{"sha": "ff7de27c00e00f55f4d378303706ce342d78e2a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "patch": "@@ -1,3 +1,9 @@\n+2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Add_Inlined_Body): Tweak comments.\n+\t(List_Inlining_Info): Also list information about non-main\n+\tunits.\n+\n 2019-08-14  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Selected_Component): In the case where"}, {"sha": "aa8f7ddf40d8d517c30561746fa2c8fefaa7f5ec", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 38, "deletions": 37, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "patch": "@@ -481,12 +481,6 @@ package body Inline is\n       end if;\n \n       --  Find unit containing E, and add to list of inlined bodies if needed.\n-      --  If the body is already present, no need to load any other unit. This\n-      --  is the case for an initialization procedure, which appears in the\n-      --  package declaration that contains the type. It is also the case if\n-      --  the body has already been analyzed. Finally, if the unit enclosing\n-      --  E is an instance, the instance body will be analyzed in any case.\n-\n       --  Library-level functions must be handled specially, because there is\n       --  no enclosing package to retrieve. In this case, it is the body of\n       --  the function that will have to be loaded.\n@@ -504,6 +498,9 @@ package body Inline is\n          else\n             pragma Assert (Ekind (Pack) = E_Package);\n \n+            --  If the unit containing E is an instance, then the instance body\n+            --  will be analyzed in any case, see Sem_Ch12.Might_Inline_Subp.\n+\n             if Is_Generic_Instance (Pack) then\n                null;\n \n@@ -514,7 +511,7 @@ package body Inline is\n             --  Do not inline it either if it is in the main unit.\n             --  Extend the -gnatn2 processing to -gnatn1 for Inline_Always\n             --  calls if the back-end takes care of inlining the call.\n-            --  Note that Level in Inline_Package | Inline_Call here.\n+            --  Note that Level is in Inline_Call | Inline_Packag here.\n \n             elsif ((Level = Inline_Call\n                       and then Has_Pragma_Inline_Always (E)\n@@ -4350,7 +4347,7 @@ package body Inline is\n          while Present (Elmt) loop\n             Nod := Node (Elmt);\n \n-            if In_Extended_Main_Code_Unit (Nod) then\n+            if not In_Internal_Unit (Nod) then\n                Count := Count + 1;\n \n                if Count = 1 then\n@@ -4379,7 +4376,7 @@ package body Inline is\n          while Present (Elmt) loop\n             Nod := Node (Elmt);\n \n-            if In_Extended_Main_Code_Unit (Nod) then\n+            if not In_Internal_Unit (Nod) then\n                Count := Count + 1;\n \n                if Count = 1 then\n@@ -4407,22 +4404,24 @@ package body Inline is\n          while Present (Elmt) loop\n             Nod := Node (Elmt);\n \n-            Count := Count + 1;\n+            if not In_Internal_Unit (Nod) then\n+               Count := Count + 1;\n \n-            if Count = 1 then\n-               Write_Str\n-                 (\"List of inlined subprograms passed to the backend\");\n-               Write_Eol;\n-            end if;\n+               if Count = 1 then\n+                  Write_Str\n+                    (\"List of inlined subprograms passed to the backend\");\n+                  Write_Eol;\n+               end if;\n \n-            Write_Str (\"  \");\n-            Write_Int (Count);\n-            Write_Str (\":\");\n-            Write_Name (Chars (Nod));\n-            Write_Str (\" (\");\n-            Write_Location (Sloc (Nod));\n-            Write_Str (\")\");\n-            Output.Write_Eol;\n+               Write_Str (\"  \");\n+               Write_Int (Count);\n+               Write_Str (\":\");\n+               Write_Name (Chars (Nod));\n+               Write_Str (\" (\");\n+               Write_Location (Sloc (Nod));\n+               Write_Str (\")\");\n+               Output.Write_Eol;\n+            end if;\n \n             Next_Elmt (Elmt);\n          end loop;\n@@ -4437,22 +4436,24 @@ package body Inline is\n          while Present (Elmt) loop\n             Nod := Node (Elmt);\n \n-            Count := Count + 1;\n+            if not In_Internal_Unit (Nod) then\n+               Count := Count + 1;\n \n-            if Count = 1 then\n-               Write_Str\n-                 (\"List of subprograms that cannot be inlined by the backend\");\n-               Write_Eol;\n-            end if;\n+               if Count = 1 then\n+                  Write_Str\n+                    (\"List of subprograms that cannot be inlined by backend\");\n+                  Write_Eol;\n+               end if;\n \n-            Write_Str (\"  \");\n-            Write_Int (Count);\n-            Write_Str (\":\");\n-            Write_Name (Chars (Nod));\n-            Write_Str (\" (\");\n-            Write_Location (Sloc (Nod));\n-            Write_Str (\")\");\n-            Output.Write_Eol;\n+               Write_Str (\"  \");\n+               Write_Int (Count);\n+               Write_Str (\":\");\n+               Write_Name (Chars (Nod));\n+               Write_Str (\" (\");\n+               Write_Location (Sloc (Nod));\n+               Write_Str (\")\");\n+               Output.Write_Eol;\n+            end if;\n \n             Next_Elmt (Elmt);\n          end loop;"}]}