{"sha": "0384c7652f54fa6091c16213bbd885b9a9b64a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4NGM3NjUyZjU0ZmE2MDkxYzE2MjEzYmJkODg1YjlhOWI2NGExZQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2005-02-07T20:44:27Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2005-02-07T20:44:27Z"}, "message": "Reported by Timo Lindfors <timo.lindfors@iki.fi> java/util/regex/Matcher.java...\n\n2005-02-07  Mark Wielaard  <mark@klomp.org>\n\n        Reported by Timo Lindfors <timo.lindfors@iki.fi>\n        java/util/regex/Matcher.java (lookingAt): Set position when match\n        found.\n        (matches): Implemented through lookingAt().\n\n2005-02-07  Mark Wielaard  <mark@klomp.org>\n\n        Fix suggested by Timo Lindfors <timo.lindfors@iki.fi>\n        * java/util/regex/Pattern.java (split(CharSequence,int)):\n        Fix while empties > 0 loops.\n\nFrom-SVN: r94713", "tree": {"sha": "ac0595a63671d3b78325011c53603e721bdcd337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac0595a63671d3b78325011c53603e721bdcd337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0384c7652f54fa6091c16213bbd885b9a9b64a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0384c7652f54fa6091c16213bbd885b9a9b64a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0384c7652f54fa6091c16213bbd885b9a9b64a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0384c7652f54fa6091c16213bbd885b9a9b64a1e/comments", "author": null, "committer": null, "parents": [{"sha": "7f5c93ac95dcf6e499bba466e7ebb28ddaaeb772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5c93ac95dcf6e499bba466e7ebb28ddaaeb772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5c93ac95dcf6e499bba466e7ebb28ddaaeb772"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "9b3a5a3a55e9dd3d03f31e509143678b404b6787", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0384c7652f54fa6091c16213bbd885b9a9b64a1e", "patch": "@@ -1,3 +1,16 @@\n+2005-02-07  Mark Wielaard  <mark@klomp.org>\n+\n+        Reported by Timo Lindfors <timo.lindfors@iki.fi>\n+        java/util/regex/Matcher.java (lookingAt): Set position when match\n+        found.\n+        (matches): Implemented through lookingAt().\n+\n+2005-02-07  Mark Wielaard  <mark@klomp.org>\n+\n+        Fix suggested by Timo Lindfors <timo.lindfors@iki.fi>\n+        * java/util/regex/Pattern.java (split(CharSequence,int)):\n+        Fix while empties > 0 loops.\n+\n 2005-02-07  Robert Schuster  <thebohemian@gmx.net>\n \n \t* gnu/java/nio/charset/ISO_8859_1.java,"}, {"sha": "f8c8f1a4a1ea660f9a327957181b14943728f36a", "filename": "libjava/java/util/regex/Matcher.java", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java?ref=0384c7652f54fa6091c16213bbd885b9a9b64a1e", "patch": "@@ -212,7 +212,10 @@ public boolean lookingAt ()\n     if (match != null)\n       {\n \tif (match.getStartIndex() == 0)\n-\t  return true;\n+\t  {\n+\t    position = match.getEndIndex();\n+\t    return true;\n+\t  }\n \tmatch = null;\n       }\n     return false;\n@@ -230,7 +233,13 @@ public boolean lookingAt ()\n    */\n   public boolean matches ()\n   {\n-    return find(0);\n+    if (lookingAt())\n+      {\n+\tif (position == input.length())\n+\t  return true;\n+\tmatch = null;\n+      }\n+    return false;\n   }\n   \n   /**"}, {"sha": "06418a22a3430f214bfd33e99af015027e793fd9", "filename": "libjava/java/util/regex/Pattern.java", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0384c7652f54fa6091c16213bbd885b9a9b64a1e/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fregex%2FPattern.java?ref=0384c7652f54fa6091c16213bbd885b9a9b64a1e", "patch": "@@ -198,8 +198,11 @@ public String[] split (CharSequence input, int limit)\n \t  empties++;\n \telse\n \t  {\n-\t    while (empties-- > 0)\n-\t      list.add(\"\");\n+\t    while (empties > 0)\n+\t      {\n+\t\tlist.add(\"\");\n+\t\tempties--;\n+\t      }\n \n \t    String text = input.subSequence(start, end).toString();\n \t    list.add(text);\n@@ -222,8 +225,11 @@ public String[] split (CharSequence input, int limit)\n \t    int max = limit - list.size();\n \t    empties = (empties > max) ? max : empties;\n \t  }\n-\twhile (empties-- > 0)\n-\t  list.add(\"\");\n+\twhile (empties > 0)\n+\t  {\n+\t    list.add(\"\");\n+\t    empties--;\n+\t  }\n       }\n \n     // last token at end"}]}