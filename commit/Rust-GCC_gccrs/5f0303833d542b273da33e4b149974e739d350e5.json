{"sha": "5f0303833d542b273da33e4b149974e739d350e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwMzAzODMzZDU0MmIyNzNkYTMzZTRiMTQ5OTc0ZTczOWQzNTBlNQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-15T20:55:11Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-17T13:26:14Z"}, "message": "analyzer: fix handling of negative byte offsets (v2) (PR 93281)\n\nVarious 32-bit targets show failures in gcc.dg/analyzer/data-model-1.c\nwith tests of the form:\n  __analyzer_eval (q[-2].x == 107024); /* { dg-warning \"TRUE\" } */\n  __analyzer_eval (q[-2].y == 107025); /* { dg-warning \"TRUE\" } */\nwhere they emit UNKNOWN instead.\n\nThe root cause is that gimple has a byte-based twos-complement offset\nof -16 expressed like this:\n  _55 = q_92 + 4294967280;  (32-bit)\nor:\n  _55 = q_92 + 18446744073709551600; (64-bit)\n\nWithin region_model::convert_byte_offset_to_array_index that unsigned\noffset was being divided by the element size to get an offset within\nan array.\n\nThis happened to work on 64-bit target and host, but not elsewhere;\nthe offset needs to be converted to a signed type before the division\nis meaningful.\n\nThis patch does so, fixing the failures.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93281\n\t* region-model.cc\n\t(region_model::convert_byte_offset_to_array_index): Convert to\n\tssizetype before dividing by byte_size.  Use fold_binary rather\n\tthan fold_build2 to avoid needlessly constructing a tree for the\n\tnon-const case.", "tree": {"sha": "654638109512ff4a9b180ab18d7bc6f786dc96cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/654638109512ff4a9b180ab18d7bc6f786dc96cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f0303833d542b273da33e4b149974e739d350e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0303833d542b273da33e4b149974e739d350e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0303833d542b273da33e4b149974e739d350e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0303833d542b273da33e4b149974e739d350e5/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e07b68187b9aa334519746c45b8cffc5eb7e5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e07b68187b9aa334519746c45b8cffc5eb7e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e07b68187b9aa334519746c45b8cffc5eb7e5c"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "e809018421650ae62ec2f34aeb2efdffad3a7bdb", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0303833d542b273da33e4b149974e739d350e5/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0303833d542b273da33e4b149974e739d350e5/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=5f0303833d542b273da33e4b149974e739d350e5", "patch": "@@ -1,3 +1,12 @@\n+2020-01-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93281\n+\t* region-model.cc\n+\t(region_model::convert_byte_offset_to_array_index): Convert to\n+\tssizetype before dividing by byte_size.  Use fold_binary rather\n+\tthan fold_build2 to avoid needlessly constructing a tree for the\n+\tnon-const case.\n+\n 2020-01-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* engine.cc (class impl_region_model_context): Fix comment."}, {"sha": "f67572e2d456974f12f408fcee005eb1e3ae4e36", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0303833d542b273da33e4b149974e739d350e5/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0303833d542b273da33e4b149974e739d350e5/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=5f0303833d542b273da33e4b149974e739d350e5", "patch": "@@ -6414,11 +6414,13 @@ region_model::convert_byte_offset_to_array_index (tree ptr_type,\n       /* This might not be a constant.  */\n       tree byte_size = size_in_bytes (elem_type);\n \n+      /* Try to get a constant by dividing, ensuring that we're in a\n+\t signed representation first.  */\n       tree index\n-\t= fold_build2 (TRUNC_DIV_EXPR, integer_type_node,\n-\t\t       offset_cst, byte_size);\n-\n-      if (CONSTANT_CLASS_P (index))\n+\t= fold_binary (TRUNC_DIV_EXPR, ssizetype,\n+\t\t       fold_convert (ssizetype, offset_cst),\n+\t\t       fold_convert (ssizetype, byte_size));\n+      if (index && TREE_CODE (index) == INTEGER_CST)\n \treturn get_or_create_constant_svalue (index);\n     }\n "}]}