{"sha": "1b27500048b97fbdf53c5407e2dbc8f91c439481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyNzUwMDA0OGI5N2ZiZGY1M2M1NDA3ZTJkYmM4ZjkxYzQzOTQ4MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-08-29T11:20:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-08-29T11:20:16Z"}, "message": "re PR middle-end/57287 (Bogus uninitialized warning with abnormal control flow)\n\n2013-08-29  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/57287\n\t* tree-ssa-copy.c (may_propagate_copy): Allow propagating\n\tof default defs that appear in abnormal PHI nodes.\n\n\t* gcc.dg/pr57287-2.c: New testcase.\n\nFrom-SVN: r202069", "tree": {"sha": "2b171d0dc3143399511b4fee994d22982c91662c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b171d0dc3143399511b4fee994d22982c91662c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b27500048b97fbdf53c5407e2dbc8f91c439481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b27500048b97fbdf53c5407e2dbc8f91c439481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b27500048b97fbdf53c5407e2dbc8f91c439481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b27500048b97fbdf53c5407e2dbc8f91c439481/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b1184bab6d4f38dbab3a970634510bf9fc675b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1184bab6d4f38dbab3a970634510bf9fc675b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b1184bab6d4f38dbab3a970634510bf9fc675b2"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "ad77502e277db07f175a95d1d1af287be47131ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b27500048b97fbdf53c5407e2dbc8f91c439481", "patch": "@@ -1,3 +1,9 @@\n+2013-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57287\n+\t* tree-ssa-copy.c (may_propagate_copy): Allow propagating\n+\tof default defs that appear in abnormal PHI nodes.\n+\n 2013-08-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57685"}, {"sha": "d95d535a92c730babcccd3440390093b7142e859", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b27500048b97fbdf53c5407e2dbc8f91c439481", "patch": "@@ -1,3 +1,8 @@\n+2013-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57287\n+\t* gcc.dg/pr57287-2.c: New testcase.\n+\n 2013-08-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57685"}, {"sha": "5422e148cbe7ee3da83cb09cb8364261ff714920", "filename": "gcc/testsuite/gcc.dg/pr57287-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287-2.c?ref=1b27500048b97fbdf53c5407e2dbc8f91c439481", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall\" } */\n+\n+#include <setjmp.h>\n+\n+struct node\n+{\n+  struct node *next;\n+  char *name;\n+} *list;\n+\n+struct node *list;\n+struct node *head (void);\n+\n+sigjmp_buf *bar (void);\n+\n+int baz (void)\n+{\n+  struct node *n;\n+  int varseen = 0;\n+\n+  list = head ();\n+  for (n = list; n; n = n->next)\n+    {\n+      if (!varseen)\n+\tvarseen = 1;\n+\n+      sigjmp_buf *buf = bar ();  /* { dg-bogus \"may be used uninitialized\" \"\" } */\n+      __sigsetjmp (*buf, 1);\n+    }\n+\n+  if (!varseen)\n+    return 0;\n+  return 1;\n+}"}, {"sha": "9bc455c61a728760d9b17d4b90a41a3b81752393", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b27500048b97fbdf53c5407e2dbc8f91c439481/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=1b27500048b97fbdf53c5407e2dbc8f91c439481", "patch": "@@ -60,7 +60,13 @@ may_propagate_copy (tree dest, tree orig)\n \n   /* If ORIG flows in from an abnormal edge, it cannot be propagated.  */\n   if (TREE_CODE (orig) == SSA_NAME\n-      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (orig))\n+      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (orig)\n+      /* If it is the default definition and an automatic variable then\n+         we can though and it is important that we do to avoid\n+\t uninitialized regular copies.  */\n+      && !(SSA_NAME_IS_DEFAULT_DEF (orig)\n+\t   && (SSA_NAME_VAR (orig) == NULL_TREE\n+\t       || TREE_CODE (SSA_NAME_VAR (orig)) == VAR_DECL)))\n     return false;\n \n   /* If DEST is an SSA_NAME that flows from an abnormal edge, then it"}]}