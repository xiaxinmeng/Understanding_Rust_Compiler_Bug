{"sha": "212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEyYmZlNzFlZDVhYTc4MmRmOGQ1ZTViMjJiOTE1YjY1MzgwZjllMA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2014-03-03T21:51:58Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2014-03-03T21:51:58Z"}, "message": "opts.h (CL_PCH_IGNORE): Define.\n\n        * opts.h (CL_PCH_IGNORE): Define.\n        * targhooks.c (option_affects_pch_p):\n        Return false for options that have CL_PCH_IGNORE set.\n        * opt-functions.awk: Process PchIgnore.\n        * doc/options.texi: Document PchIgnore.\n\nFrom-SVN: r208292", "tree": {"sha": "73c4f0a31f7f2f93431e3d9c847daa3e61a1d8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73c4f0a31f7f2f93431e3d9c847daa3e61a1d8a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a42a7046ebd930b41804819dedaecef252b89e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42a7046ebd930b41804819dedaecef252b89e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42a7046ebd930b41804819dedaecef252b89e72"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "71a56c04474141e289ae6774f5aeac48a8b2adcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "patch": "@@ -1,3 +1,11 @@\n+2014-03-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* opts.h (CL_PCH_IGNORE): Define.\n+\t* targhooks.c (option_affects_pch_p):\n+\tReturn false for options that have CL_PCH_IGNORE set.\n+\t* opt-functions.awk: Process PchIgnore.\n+\t* doc/options.texi: Document PchIgnore.\n+\n 2014-03-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_preferred_reload_class): Disallow"}, {"sha": "938017adeac84ddbceff6cdcec6cc96514fe1f2c", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "patch": "@@ -478,4 +478,8 @@ record.  @xref{Option file format}.\n @item NoDWARFRecord\n The option is omitted from the producer string written by\n @option{-grecord-gcc-switches}.\n+\n+@item PchIgnore\n+Even if this is a target option, this option will not be recorded / compared\n+to determine if a precompiled header file matches.\n @end table"}, {"sha": "381bb50028a3b6430709ab702afe0f4299ced0c0", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "patch": "@@ -97,6 +97,7 @@ function switch_flags (flags)\n \tresult = result \\\n \t  test_flag(\"Common\", flags, \" | CL_COMMON\") \\\n \t  test_flag(\"Target\", flags, \" | CL_TARGET\") \\\n+\t  test_flag(\"PchIgnore\", flags, \" | CL_PCH_IGNORE\") \\\n \t  test_flag(\"Driver\", flags, \" | CL_DRIVER\") \\\n \t  test_flag(\"Joined\", flags, \" | CL_JOINED\") \\\n \t  test_flag(\"JoinedOrMissing\", flags, \" | CL_JOINED\") \\"}, {"sha": "f6940823403912f85d13b93edbea066fc2e9892e", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "patch": "@@ -146,6 +146,7 @@ extern const unsigned int cl_lang_count;\n #define CL_SEPARATE\t\t(1U << 23) /* If takes a separate argument.  */\n #define CL_UNDOCUMENTED\t\t(1U << 24) /* Do not output with --help.  */\n #define CL_NO_DWARF_RECORD\t(1U << 25) /* Do not add to producer string.  */\n+#define CL_PCH_IGNORE\t\t(1U << 26) /* Do compare state for pch.  */\n \n /* Flags for an enumerated option argument.  */\n #define CL_ENUM_CANONICAL\t(1 << 0) /* Canonical for this value.  */"}, {"sha": "79491c7c59ba5eeccc5c1ae543c6a8805cde593e", "filename": "gcc/targhooks.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212bfe71ed5aa782df8d5e5b22b915b65380f9e0/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=212bfe71ed5aa782df8d5e5b22b915b65380f9e0", "patch": "@@ -1456,6 +1456,8 @@ option_affects_pch_p (int option, struct cl_option_state *state)\n {\n   if ((cl_options[option].flags & CL_TARGET) == 0)\n     return false;\n+  if ((cl_options[option].flags & CL_PCH_IGNORE) != 0)\n+    return false;\n   if (option_flag_var (option, &global_options) == &target_flags)\n     if (targetm.check_pch_target_flags)\n       return false;"}]}