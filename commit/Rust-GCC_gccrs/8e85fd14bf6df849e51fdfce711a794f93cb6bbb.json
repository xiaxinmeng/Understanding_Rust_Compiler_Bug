{"sha": "8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4NWZkMTRiZjZkZjg0OWU1MWZkZmNlNzExYTc5NGY5M2NiNmJiYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-06-13T07:22:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-06-13T07:22:04Z"}, "message": "re PR tree-optimization/27830 (ICE: verify_stmts failed (invalid operand to unary operator))\n\n2006-06-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/27830\n\t* tree-inline.c (copy_body_r): For copying the operand\n\tof an ADDR_EXPR make sure to fold &* afterwards.\n\n\t* g++.dg/tree-ssa/pr27830.C: New testcase.\n\nFrom-SVN: r114600", "tree": {"sha": "d8cd3e86855b1ecec0488283f8bc785b5ff92718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8cd3e86855b1ecec0488283f8bc785b5ff92718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c67ed86a4aaeb9146ac8a22ca87a65d59820df51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67ed86a4aaeb9146ac8a22ca87a65d59820df51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67ed86a4aaeb9146ac8a22ca87a65d59820df51"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "7798dd053d8738f9e0a23c782ad51832db973202", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "patch": "@@ -1,3 +1,9 @@\n+2006-06-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27830\n+\t* tree-inline.c (copy_body_r): For copying the operand\n+\tof an ADDR_EXPR make sure to fold &* afterwards.\n+\n 2006-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_expr): Treat VIEW_CONVERT_EXPR like other"}, {"sha": "fa0ecd5fb7c20bfbe5b3f6c3c66b404271b33519", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "patch": "@@ -1,3 +1,8 @@\n+2006-06-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27830\n+\t* g++.dg/tree-ssa/pr27830.C: New testcase.\n+\n 2006-06-13  Matthew Sachs  <msachs@apple.com>\n \n \t* lib/target-supports-dg.exp (check-flags): Include TOOL_OPTIONS in"}, {"sha": "01c7fc1878395ca4b409bc3dcfb90158f2b6b733", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27830.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27830.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27830.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27830.C?ref=8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+struct gc{};\n+struct transform:public gc\n+{\n+    double x, y, z, t;\n+    transform (void){}\n+};\n+inline transform f (void)\n+{\n+    return transform ();\n+};\n+void transformed (void)\n+{\n+    new transform (f());\n+}\n+"}, {"sha": "3aeb7b61341cd9ff20515da7f831822cef87b549", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e85fd14bf6df849e51fdfce711a794f93cb6bbb/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=8e85fd14bf6df849e51fdfce711a794f93cb6bbb", "patch": "@@ -659,7 +659,12 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n       else if (TREE_CODE (*tp) == ADDR_EXPR)\n \t{\n \t  walk_tree (&TREE_OPERAND (*tp, 0), copy_body_r, id, NULL);\n-\t  recompute_tree_invariant_for_addr_expr (*tp);\n+\t  /* Handle the case where we substituted an INDIRECT_REF\n+\t     into the operand of the ADDR_EXPR.  */\n+\t  if (TREE_CODE (TREE_OPERAND (*tp, 0)) == INDIRECT_REF)\n+\t    *tp = TREE_OPERAND (TREE_OPERAND (*tp, 0), 0);\n+\t  else\n+\t    recompute_tree_invariant_for_addr_expr (*tp);\n \t  *walk_subtrees = 0;\n \t}\n     }"}]}