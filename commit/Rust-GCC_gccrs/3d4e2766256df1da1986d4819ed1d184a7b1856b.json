{"sha": "3d4e2766256df1da1986d4819ed1d184a7b1856b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0ZTI3NjYyNTZkZjFkYTE5ODZkNDgxOWVkMWQxODRhN2IxODU2Yg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-08-17T15:19:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-08-17T15:19:39Z"}, "message": "tree.h (struct tree_label_decl): Removed old \"java\" fields.\n\ngcc:\n\t* tree.h (struct tree_label_decl): Removed old \"java\" fields.\ngcc/java:\n\t* java-tree.h (LABEL_TYPE_STATE): Removed.\n\t(load_type_state): Removed.\n\t(LABEL_PC): Removed.\n\t(LABEL_VERIFIED): Removed.\n\t(type_states): Declare.\n\t* expr.c (type_states): New global.\n\t(load_type_state): Now static.  Use type_states.  Changed\n\targument.\n\t(lookup_label): Don't set LABEL_PC.\n\t(expand_byte_code): Don't use LABEL_VERIFIED.\n\t(note_instructions): Initialize type_states.\n\t* verify-glue.c (vfy_note_stack_depth): Rewrote.\n\t(vfy_note_stack_type): Use type_states.\n\t(vfy_note_local_type): Likewise.\n\nFrom-SVN: r127587", "tree": {"sha": "b4740b1c9b8809e0eb41a3c75d252ad2c54600a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4740b1c9b8809e0eb41a3c75d252ad2c54600a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d4e2766256df1da1986d4819ed1d184a7b1856b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4e2766256df1da1986d4819ed1d184a7b1856b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d4e2766256df1da1986d4819ed1d184a7b1856b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4e2766256df1da1986d4819ed1d184a7b1856b/comments", "author": null, "committer": null, "parents": [{"sha": "4bf6c438d2117f8473b36b84eb8bd44487631efa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf6c438d2117f8473b36b84eb8bd44487631efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf6c438d2117f8473b36b84eb8bd44487631efa"}], "stats": {"total": 84, "additions": 50, "deletions": 34}, "files": [{"sha": "4d21bd43537f432563273fd5e68f1746a160ee35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -1,3 +1,7 @@\n+2007-08-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* tree.h (struct tree_label_decl): Removed old \"java\" fields.\n+\n 2007-08-17  Richard Sandiford  <richard@codesourcery.com>\n \t    Nigel Stephens  <nigel@mips.com>\n "}, {"sha": "c72525dc94f7a4176b8a059d44bc879162bcaf02", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -1,3 +1,20 @@\n+2007-08-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java-tree.h (LABEL_TYPE_STATE): Removed.\n+\t(load_type_state): Removed.\n+\t(LABEL_PC): Removed.\n+\t(LABEL_VERIFIED): Removed.\n+\t(type_states): Declare.\n+\t* expr.c (type_states): New global.\n+\t(load_type_state): Now static.  Use type_states.  Changed\n+\targument.\n+\t(lookup_label): Don't set LABEL_PC.\n+\t(expand_byte_code): Don't use LABEL_VERIFIED.\n+\t(note_instructions): Initialize type_states.\n+\t* verify-glue.c (vfy_note_stack_depth): Rewrote.\n+\t(vfy_note_stack_type): Use type_states.\n+\t(vfy_note_local_type): Likewise.\n+\n 2007-08-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* jcf-parse.c (read_class, java_parse_file): Use CONST_CAST."}, {"sha": "c222a6550e6223fd45994f9aeb7e32f395dffeb3", "filename": "gcc/java/expr.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -1772,7 +1772,6 @@ lookup_label (int pc)\n     {\n       /* The type of the address of a label is return_address_type_node. */\n       tree decl = create_label_decl (name);\n-      LABEL_PC (decl) = pc;\n       return pushdecl (decl);\n     }\n }\n@@ -1801,9 +1800,15 @@ create_label_decl (tree name)\n   return decl;\n }\n \n-/* This maps a bytecode offset (PC) to various flags. */\n+/* This maps a bytecode offset (PC) to various flags.  */\n char *instruction_bits;\n \n+/* This is a vector of type states for the current method.  It is\n+   indexed by PC.  Each element is a tree vector holding the type\n+   state at that PC.  We only note type states at basic block\n+   boundaries.  */\n+VEC(tree, gc) *type_states;\n+\n static void\n note_label (int current_pc ATTRIBUTE_UNUSED, int target_pc)\n {\n@@ -2953,11 +2958,11 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n   TREE_THIS_VOLATILE (field_ref) = TREE_THIS_VOLATILE (field_decl);\n }\n \n-void\n-load_type_state (tree label)\n+static void\n+load_type_state (int pc)\n {\n   int i;\n-  tree vec = LABEL_TYPE_STATE (label);\n+  tree vec = VEC_index (tree, type_states, pc);\n   int cur_length = TREE_VEC_LENGTH (vec);\n   stack_pointer = cur_length - DECL_MAX_LOCALS(current_function_decl);\n   for (i = 0; i < cur_length; i++)\n@@ -3000,6 +3005,8 @@ note_instructions (JCF *jcf, tree method)\n   byte_ops = jcf->read_ptr;\n   instruction_bits = xrealloc (instruction_bits, length + 1);\n   memset (instruction_bits, 0, length + 1);\n+  type_states = VEC_alloc (tree, gc, length + 1);\n+  VEC_safe_grow_cleared (tree, gc, type_states, length + 1);\n \n   /* This pass figures out which PC can be the targets of jumps. */\n   for (PC = 0; PC < length;)\n@@ -3158,8 +3165,8 @@ expand_byte_code (JCF *jcf, tree method)\n           flush_quick_stack ();\n \t  if ((instruction_bits [PC] & BCODE_TARGET) != 0)\n \t    java_add_stmt (build1 (LABEL_EXPR, void_type_node, label));\n-\t  if (LABEL_VERIFIED (label) || PC == 0)\n-\t    load_type_state (label);\n+\t  if ((instruction_bits[PC] & BCODE_VERIFIED) != 0)\n+\t    load_type_state (PC);\n \t}\n \n       if (! (instruction_bits [PC] & BCODE_VERIFIED))"}, {"sha": "29902de913881e77a66952726b85845bcefc3ed7", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -771,16 +771,6 @@ union lang_tree_node\n    FIELD_LOCAL_ALIAS.  */\n #define FIELD_THISN(DECL) DECL_LANG_FLAG_7 (VAR_OR_FIELD_CHECK (DECL))\n \n-/* In a LABEL_DECL, a TREE_VEC that saves the type_map at that point. */\n-#define LABEL_TYPE_STATE(NODE) (LABEL_DECL_CHECK (NODE)->label_decl.java_field_1)\n-\n-/* In a LABEL_DECL, the corresponding bytecode program counter. */\n-#define LABEL_PC(NODE) (LABEL_DECL_CHECK (NODE)->label_decl.java_field_4)\n-\n-/* In a LABEL_DECL, true if we have verified instructions starting here. */\n-#define LABEL_VERIFIED(NODE) \\\n-  (instruction_bits[LABEL_PC (NODE)] & BCODE_VERIFIED)\n-\n /* The slot number for this local variable. */\n #define DECL_LOCAL_SLOT_NUMBER(NODE) \\\n   (DECL_LANG_SPECIFIC (NODE)->u.v.slot_number)\n@@ -1248,7 +1238,6 @@ extern void set_local_type (int, tree);\n extern int merge_type_state (tree);\n extern int push_type_0 (tree);\n extern void push_type (tree);\n-extern void load_type_state (tree);\n extern void add_interface (tree, tree);\n extern tree force_evaluation_order (tree);\n extern tree java_create_object (tree);\n@@ -1418,6 +1407,9 @@ extern void rewrite_reflection_indexes (void *);\n /* Use CLASS_LOADED_P? FIXME */\n #define CLASS_COMPLETE_P(DECL) DECL_LANG_FLAG_2 (DECL) \n \n+/* A vector used to track type states for the current method.  */\n+extern VEC(tree, gc) *type_states;\n+\n /* This maps a bytecode offset (PC) to various flags,\n    listed below (starting with BCODE_). */\n extern char *instruction_bits;"}, {"sha": "3dfe608808c4d888d7bd39d0edc43b7785951571", "filename": "gcc/java/verify-glue.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fverify-glue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Fjava%2Fverify-glue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-glue.c?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -393,37 +393,41 @@ vfy_get_primitive_type (int type)\n void\n vfy_note_stack_depth (vfy_method *method, int pc, int depth)\n {\n-  tree label = lookup_label (pc);\n-  LABEL_TYPE_STATE (label) = make_tree_vec (method->max_locals + depth);\n+  tree val = make_tree_vec (method->max_locals + depth);\n+  VEC_replace (tree, type_states, pc, val);\n+  /* Called for side effects.  */\n+  lookup_label (pc);\n }\n \n void\n vfy_note_stack_type (vfy_method *method, int pc, int slot, vfy_jclass type)\n {\n-  tree label, vec;\n+  tree vec;\n   \n   slot += method->max_locals;\n \n   if (type == object_type_node)\n     type = object_ptr_type_node;\n \n-  label = lookup_label (pc);\n-  vec = LABEL_TYPE_STATE (label);\n+  vec = VEC_index (tree, type_states, pc);\n   TREE_VEC_ELT (vec, slot) = type;\n+  /* Called for side effects.  */\n+  lookup_label (pc);\n }\n \n void\n vfy_note_local_type (vfy_method *method ATTRIBUTE_UNUSED, int pc, int slot,\n \t\t     vfy_jclass type)\n {\n-  tree label, vec;\n+  tree vec;\n   \n   if (type == object_type_node)\n     type = object_ptr_type_node;\n \n-  label = lookup_label (pc);\n-  vec = LABEL_TYPE_STATE (label);\n+  vec = VEC_index (tree, type_states, pc);\n   TREE_VEC_ELT (vec, slot) = type;\n+  /* Called for side effects.  */\n+  lookup_label (pc);\n }\n \n void"}, {"sha": "7b62a161bbf84a55b294deaf2486b1c16dd5c732", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4e2766256df1da1986d4819ed1d184a7b1856b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3d4e2766256df1da1986d4819ed1d184a7b1856b", "patch": "@@ -2914,14 +2914,6 @@ struct tree_field_decl GTY(())\n struct tree_label_decl GTY(())\n {\n   struct tree_decl_with_rtl common;\n-  /* Java's verifier has some need to store information about labels,\n-     and was using fields that no longer exist on labels.\n-     Once the verifier doesn't need these anymore, they should be removed.  */\n-  tree java_field_1;\n-  tree java_field_2;\n-  tree java_field_3;\n-  unsigned int java_field_4;\n-\n };\n \n struct tree_result_decl GTY(())"}]}