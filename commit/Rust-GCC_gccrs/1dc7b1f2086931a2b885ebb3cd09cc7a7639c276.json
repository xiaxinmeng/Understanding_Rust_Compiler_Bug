{"sha": "1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjN2IxZjIwODY5MzFhMmI4ODVlYmIzY2QwOWNjN2E3NjM5YzI3Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-21T02:42:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-21T02:42:40Z"}, "message": "re PR c++/62017 (AddressSanitizer reports *-buffer-overflow in destructor when multiple virtual inheritance is used)\n\n\tPR c++/62017\n\t* decl.c (begin_destructor_body): Only clobber the as-base part of\n\t*this.\n\nFrom-SVN: r215427", "tree": {"sha": "e6055b836dcbe9fef031dc101d0c7df83726c73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6055b836dcbe9fef031dc101d0c7df83726c73a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c2c9440d4d2dd62346d6dafd452c9ad74bd858a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2c9440d4d2dd62346d6dafd452c9ad74bd858a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2c9440d4d2dd62346d6dafd452c9ad74bd858a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "857f58d4264101c018beb9456383af529dfbd51e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "patch": "@@ -1,3 +1,9 @@\n+2014-09-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/62017\n+\t* decl.c (begin_destructor_body): Only clobber the as-base part of\n+\t*this.\n+\n 2014-09-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/61392"}, {"sha": "fe5a4af17b5a36632e4346394e5065a43d64be49", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc7b1f2086931a2b885ebb3cd09cc7a7639c276/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1dc7b1f2086931a2b885ebb3cd09cc7a7639c276", "patch": "@@ -13808,10 +13808,12 @@ begin_destructor_body (void)\n \n       /* Insert a cleanup to let the back end know that the object is dead\n \t when we exit the destructor, either normally or via exception.  */\n-      tree clobber = build_constructor (current_class_type, NULL);\n+      tree btype = CLASSTYPE_AS_BASE (current_class_type);\n+      tree clobber = build_constructor (btype, NULL);\n       TREE_THIS_VOLATILE (clobber) = true;\n-      tree exprstmt = build2 (MODIFY_EXPR, current_class_type,\n-\t\t\t      current_class_ref, clobber);\n+      tree bref = build_nop (build_reference_type (btype), current_class_ptr);\n+      bref = convert_from_reference (bref);\n+      tree exprstmt = build2 (MODIFY_EXPR, btype, bref, clobber);\n       finish_decl_cleanup (NULL_TREE, exprstmt);\n \n       /* And insert cleanups for our bases and members so that they"}]}