{"sha": "d2f08d98796279fe8886918e7746eb276420545c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmMDhkOTg3OTYyNzlmZTg4ODY5MThlNzc0NmViMjc2NDIwNTQ1Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-12-15T20:16:03Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2007-12-15T20:16:03Z"}, "message": "dwarf2out.c (reference_to_unused): Don't emit strings in initializers just because of debug information.\n\ngcc/ChangeLog:\n* dwarf2out.c (reference_to_unused): Don't emit strings in\ninitializers just because of debug information.\n* tree.h (TREE_ASM_WRITTEN): Document use for STRING_CSTs.\ngcc/testsuite/ChangeLog:\n* gcc.dg/debug/const-3.c: New.\n\nFrom-SVN: r130959", "tree": {"sha": "d3840255d42f8a4fe5fdefc4d692fcc1b2d4771c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3840255d42f8a4fe5fdefc4d692fcc1b2d4771c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2f08d98796279fe8886918e7746eb276420545c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f08d98796279fe8886918e7746eb276420545c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f08d98796279fe8886918e7746eb276420545c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f08d98796279fe8886918e7746eb276420545c/comments", "author": null, "committer": null, "parents": [{"sha": "4b516b14bac816c054c9b190f718cbbaf83e6603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b516b14bac816c054c9b190f718cbbaf83e6603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b516b14bac816c054c9b190f718cbbaf83e6603"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "0bebee04a79109c84fe0c631cf9bfbf58192a6d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f08d98796279fe8886918e7746eb276420545c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f08d98796279fe8886918e7746eb276420545c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2f08d98796279fe8886918e7746eb276420545c", "patch": "@@ -1,3 +1,9 @@\n+2007-12-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* dwarf2out.c (reference_to_unused): Don't emit strings in\n+\tinitializers just because of debug information.\n+\t* tree.h (TREE_ASM_WRITTEN): Document use for STRING_CSTs.\n+\n 2007-12-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-scalar-evolution.c (number_of_iterations_for_all_loops): Replace"}, {"sha": "a0df24c446195755901898cf1a4f6677463e1697", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d2f08d98796279fe8886918e7746eb276420545c", "patch": "@@ -10365,6 +10365,8 @@ reference_to_unused (tree * tp, int * walk_subtrees,\n       if (!node->output)\n \treturn *tp;\n     }\n+  else if (TREE_CODE (*tp) == STRING_CST && !TREE_ASM_WRITTEN (*tp))\n+    return *tp;\n \n   return NULL_TREE;\n }"}, {"sha": "a80b86a147802163bed47667bf847dd50aa7f25f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2f08d98796279fe8886918e7746eb276420545c", "patch": "@@ -1,3 +1,7 @@\n+2007-12-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcc.dg/debug/const-3.c: New.\n+\n 2007-12-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* g++.dg/other/datasec1.C: Require named section support."}, {"sha": "2e9db490cb7ad89b8aa3dcbf3470202ff7738fbb", "filename": "gcc/testsuite/gcc.dg/debug/const-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-3.c?ref=d2f08d98796279fe8886918e7746eb276420545c", "patch": "@@ -0,0 +1,7 @@\n+/* Make sure we don't emit strings just because of debug information\n+   for string initializers.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+/* { dg-final { scan-assembler-not \"dontgenerate\" } } */\n+static const char *p = \"dontgenerate1\";\n+static const char *q[2] = { 0, \"dontgenerate2\" };"}, {"sha": "331bdfab16efea304cdae5ecd57d13f30c7db87d", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f08d98796279fe8886918e7746eb276420545c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d2f08d98796279fe8886918e7746eb276420545c", "patch": "@@ -546,7 +546,7 @@ struct gimple_stmt GTY(())\n \n        TREE_ASM_WRITTEN in\n            VAR_DECL, FUNCTION_DECL, RECORD_TYPE, UNION_TYPE, QUAL_UNION_TYPE\n-\t   BLOCK, SSA_NAME\n+\t   BLOCK, SSA_NAME, STRING_CST\n \n    used_flag:\n \n@@ -1300,7 +1300,7 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n /* In integral and pointer types, means an unsigned type.  */\n #define TYPE_UNSIGNED(NODE) (TYPE_CHECK (NODE)->base.unsigned_flag)\n \n-/* Nonzero in a VAR_DECL means assembler code has been written.\n+/* Nonzero in a VAR_DECL or STRING_CST means assembler code has been written.\n    Nonzero in a FUNCTION_DECL means that the function has been compiled.\n    This is interesting in an inline function, since it might not need\n    to be compiled separately."}]}