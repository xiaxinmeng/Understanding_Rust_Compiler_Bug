{"sha": "2001028ad3a44e5333333c175118837dba03c620", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwMTAyOGFkM2E0NGU1MzMzMzMzYzE3NTExODgzN2RiYTAzYzYyMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-01-13T20:59:37Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-01-13T20:59:37Z"}, "message": "re PR ipa/64565 (ICE: in inline_small_functions, at ipa-inline.c:1664)\n\n\n\tPR ipa/64565\n\t* g++.dg/torture/pr64565.C: New testcase.\n\t* ipa-inline.c (inline_small_functions): Update callee keys after\n\tresolving speculation\n\t(inline_small_functions): Always check monotonicity of the queue.\n\nFrom-SVN: r219556", "tree": {"sha": "16b0e6a36e132f7bfcc281898adf43947cc7246d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b0e6a36e132f7bfcc281898adf43947cc7246d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2001028ad3a44e5333333c175118837dba03c620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2001028ad3a44e5333333c175118837dba03c620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2001028ad3a44e5333333c175118837dba03c620", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2001028ad3a44e5333333c175118837dba03c620/comments", "author": null, "committer": null, "parents": [{"sha": "59b8926c6fe2f4320babf3fd7e7d1ca8731e3890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59b8926c6fe2f4320babf3fd7e7d1ca8731e3890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59b8926c6fe2f4320babf3fd7e7d1ca8731e3890"}], "stats": {"total": 105, "additions": 104, "deletions": 1}, "files": [{"sha": "ef6430706eb7b5e628a07382e03ad165c85a9205", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2001028ad3a44e5333333c175118837dba03c620/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2001028ad3a44e5333333c175118837dba03c620/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2001028ad3a44e5333333c175118837dba03c620", "patch": "@@ -1,3 +1,10 @@\n+2015-01-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/64565\n+\t* ipa-inline.c (inline_small_functions): Update callee keys after\n+\tresolving speculation\n+\t(inline_small_functions): Always check monotonicity of the queue.\n+\n 2015-01-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/64391"}, {"sha": "61e470f303e5137e87bab7c2520cdca4ee3b0de6", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2001028ad3a44e5333333c175118837dba03c620/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2001028ad3a44e5333333c175118837dba03c620/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=2001028ad3a44e5333333c175118837dba03c620", "patch": "@@ -1626,6 +1626,8 @@ inline_small_functions (void)\n \t  reset_edge_caches (where);\n           update_caller_keys (&edge_heap, where,\n \t\t\t      updated_nodes, NULL);\n+          update_callee_keys (&edge_heap, where,\n+\t\t\t      updated_nodes);\n           bitmap_clear (updated_nodes);\n \t}\n     }\n@@ -1661,7 +1663,7 @@ inline_small_functions (void)\n       /* Disable checking for profile because roundoff errors may cause slight\n          deviations in the order.  */\n       gcc_assert (max_count || cached_badness == current_badness);\n-      gcc_assert (max_count || current_badness >= badness);\n+      gcc_assert (current_badness >= badness);\n #else\n       current_badness = edge_badness (edge, false);\n #endif"}, {"sha": "a0163c3875f4f104c180f28d5f6bc052bb212c00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2001028ad3a44e5333333c175118837dba03c620/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2001028ad3a44e5333333c175118837dba03c620/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2001028ad3a44e5333333c175118837dba03c620", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/64565\n+\t* g++.dg/torture/pr64565.C: New testcase.\n+\n 2015-01-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/64391"}, {"sha": "42b0239c525b6709de0b62a62d0982ad46a5f9c8", "filename": "gcc/testsuite/g++.dg/torture/pr64565.C", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2001028ad3a44e5333333c175118837dba03c620/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr64565.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2001028ad3a44e5333333c175118837dba03c620/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr64565.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr64565.C?ref=2001028ad3a44e5333333c175118837dba03c620", "patch": "@@ -0,0 +1,89 @@\n+/* { dg-do compile } */\n+typedef enum\n+{\n+  NS_OK\n+} nsresult;\n+struct A\n+{\n+  static int kIID;\n+};\n+class B\n+{\n+};\n+class C\n+{\n+public:\n+  C (B p1) { m_fn1 (p1, A::kIID); }\n+  void m_fn1 (B, int);\n+};\n+class D;\n+class F\n+{\n+public:\n+  F (int);\n+};\n+class G\n+{\n+public:\n+  D *operator[](int);\n+};\n+class H\n+{\n+  virtual nsresult m_fn2 ();\n+\n+public:\n+  void m_fn3 ();\n+};\n+class J : H\n+{\n+  G mQueries;\n+  int mLiveUpdate;\n+  nsresult m_fn2 ();\n+};\n+class D\n+{\n+public:\n+  nsresult m_fn4 (int);\n+  void m_fn5 (int);\n+};\n+class I\n+{\n+public:\n+  static I *\n+  m_fn6 ()\n+  {\n+    B __trans_tmp_3;\n+    if (!gHistoryService)\n+      C serv = __trans_tmp_3;\n+  }\n+  void m_fn7 ();\n+  static I *gHistoryService;\n+};\n+D *Refresh___trans_tmp_2;\n+D Refresh___trans_tmp_6, Refresh___trans_tmp_5;\n+int Refresh_hasDomain;\n+nsresult\n+J::m_fn2 ()\n+{\n+  m_fn3 ();\n+  I history = *I::m_fn6 ();\n+  switch (mLiveUpdate)\n+    {\n+    case 1:\n+      {\n+        mQueries[0];\n+        F query = 0;\n+        if (Refresh_hasDomain)\n+          return NS_OK;\n+      }\n+    case 0:\n+      {\n+        Refresh___trans_tmp_2 = mQueries[0];\n+        F query = Refresh___trans_tmp_5.m_fn4 (0);\n+        history.m_fn7 ();\n+        Refresh___trans_tmp_6.m_fn5 (0);\n+      }\n+    case 3:\n+      m_fn2 ();\n+    }\n+}"}]}