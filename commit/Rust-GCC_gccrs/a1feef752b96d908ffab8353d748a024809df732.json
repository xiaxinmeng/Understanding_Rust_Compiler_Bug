{"sha": "a1feef752b96d908ffab8353d748a024809df732", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmZWVmNzUyYjk2ZDkwOGZmYWI4MzUzZDc0OGEwMjQ4MDlkZjczMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:36:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:36:59Z"}, "message": "Replace use of __obj_xmalloc and free with objc_malloc and objc_free.\n\nFrom-SVN: r12765", "tree": {"sha": "cbb06195b65b8ab3c3f1c3bc5e0f8454dd6e30b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb06195b65b8ab3c3f1c3bc5e0f8454dd6e30b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1feef752b96d908ffab8353d748a024809df732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1feef752b96d908ffab8353d748a024809df732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1feef752b96d908ffab8353d748a024809df732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1feef752b96d908ffab8353d748a024809df732/comments", "author": null, "committer": null, "parents": [{"sha": "d2ca2ea6e8f35b33135a049e22ae3f022947f489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ca2ea6e8f35b33135a049e22ae3f022947f489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ca2ea6e8f35b33135a049e22ae3f022947f489"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "19760906238a42a7e341fd495beeb0dcc9448ca7", "filename": "gcc/objc/objc-list.h", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1feef752b96d908ffab8353d748a024809df732/gcc%2Fobjc%2Fobjc-list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1feef752b96d908ffab8353d748a024809df732/gcc%2Fobjc%2Fobjc-list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-list.h?ref=a1feef752b96d908ffab8353d748a024809df732", "patch": "@@ -1,7 +1,6 @@\n /* Generic single linked list to keep various information \n    Copyright (C) 1993, 1994, 1996 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Contributed by Kresten Krab Thorup.\n \n This file is part of GNU CC.\n \n@@ -28,8 +27,6 @@ Boston, MA 02111-1307, USA.  */\n \n #ifndef __GNU_OBJC_LIST_H\n #define __GNU_OBJC_LIST_H\n-void * __objc_xrealloc (void *optr, size_t size);\n-void * __objc_xmalloc (size_t size);\n \n struct objc_list {\n   void *head;\n@@ -43,7 +40,7 @@ list_cons(void* head, struct objc_list* tail)\n {\n   struct objc_list* cell;\n \n-  cell = (struct objc_list*)__objc_xmalloc(sizeof(struct objc_list));\n+  cell = (struct objc_list*)objc_malloc(sizeof(struct objc_list));\n   cell->head = head;\n   cell->tail = tail;\n   return cell;\n@@ -88,11 +85,11 @@ list_remove_head(struct objc_list** list)\n     {\n       struct objc_list* tail = (*list)->tail; /* fetch next */\n       *(*list) = *tail;\t\t/* copy next to list head */\n-      free(tail);\t\t\t/* free next */\n+      objc_free(tail);\t\t\t/* free next */\n     }\n   else\t\t\t\t/* only one element in list */\n     {\n-      free (*list);\n+      objc_free(*list);\n       (*list) = 0;\n     }\n }\n@@ -144,7 +141,7 @@ list_free(struct objc_list* list)\n   if(list)\n     {\n       list_free(list->tail);\n-      free(list);\n+      objc_free(list);\n     }\n }\n #endif __GNU_OBJC_LIST_H"}, {"sha": "3e68334c924bd0ecfe57af45e65292b855062cc8", "filename": "gcc/objc/objects.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1feef752b96d908ffab8353d748a024809df732/gcc%2Fobjc%2Fobjects.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1feef752b96d908ffab8353d748a024809df732/gcc%2Fobjc%2Fobjects.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjects.c?ref=a1feef752b96d908ffab8353d748a024809df732", "patch": "@@ -66,19 +66,19 @@ object_dispose(id object)\n       if (_objc_object_dispose)\n         (*_objc_object_dispose)(object);\n       else\n-        free(object);\n+        objc_free(object);\n     }\n   return nil;\n }\n \n id __objc_object_alloc(Class class)\n {\n-  return (id)__objc_xmalloc(class->instance_size);\n+  return (id)objc_malloc(class->instance_size);\n }\n \n id __objc_object_dispose(id object) \n {\n-  free(object);\n+  objc_free(object);\n   return 0;\n }\n "}]}