{"sha": "95035b6fb78afbfd51cf59196bc69950932368da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwMzViNmZiNzhhZmJmZDUxY2Y1OTE5NmJjNjk5NTA5MzIzNjhkYQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-05-08T15:04:44Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-05-08T15:04:44Z"}, "message": "c-decl.c (define_label): Tidy.\n\n\t* c-decl.c (define_label): Tidy.  Don't use any of\n\terror_with_file_and_line or warning_with_file_and_file.\n\t(pending_xref_error): Likewise.\n\t(store_parm_decls): Likewise.\n\t(current_function_prototype_locus): New object.  Package from\n\tcurrent_function_prototype_file and current_function_prototype_line.\n\t(start_function): Use it.\n\t(current_function_prototype_file): Remove.\n\t(current_function_prototype_line): Remove;\n\nFrom-SVN: r66599", "tree": {"sha": "227413f279ea46db2c8aeeeee10f6e4e20bccd53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227413f279ea46db2c8aeeeee10f6e4e20bccd53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95035b6fb78afbfd51cf59196bc69950932368da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95035b6fb78afbfd51cf59196bc69950932368da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95035b6fb78afbfd51cf59196bc69950932368da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95035b6fb78afbfd51cf59196bc69950932368da/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dc61d6cfb77ab9d3c59cc04d4bfb732bdb5f7d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc61d6cfb77ab9d3c59cc04d4bfb732bdb5f7d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc61d6cfb77ab9d3c59cc04d4bfb732bdb5f7d0"}], "stats": {"total": 60, "additions": 31, "deletions": 29}, "files": [{"sha": "de0a6b37418b7d15819aa4acc57cd5a02893e5c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95035b6fb78afbfd51cf59196bc69950932368da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95035b6fb78afbfd51cf59196bc69950932368da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95035b6fb78afbfd51cf59196bc69950932368da", "patch": "@@ -1,3 +1,15 @@\n+2003-05-08  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-decl.c (define_label): Tidy.  Don't use any of\n+\terror_with_file_and_line or warning_with_file_and_file.\n+\t(pending_xref_error): Likewise.\n+\t(store_parm_decls): Likewise.\n+\t(current_function_prototype_locus): New object.  Package from\n+\tcurrent_function_prototype_file and current_function_prototype_line.\n+\t(start_function): Use it.\n+\t(current_function_prototype_file): Remove.\n+\t(current_function_prototype_line): Remove;\n+\n 2003-05-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (readonly_data_expr): New function."}, {"sha": "7ac47391b6f58bbca182278ca74f4f13d6e40ff9", "filename": "gcc/c-decl.c", "status": "modified", "additions": 19, "deletions": 29, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95035b6fb78afbfd51cf59196bc69950932368da/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95035b6fb78afbfd51cf59196bc69950932368da/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=95035b6fb78afbfd51cf59196bc69950932368da", "patch": "@@ -100,8 +100,7 @@ static tree current_function_parm_tags;\n \n /* Similar, for the file and line that the prototype came from if this is\n    an old-style definition.  */\n-static const char *current_function_prototype_file;\n-static int current_function_prototype_line;\n+static location_t current_function_prototype_locus;\n \n /* The current statement tree.  */\n \n@@ -2070,12 +2069,12 @@ shadow_label (name)\n    Otherwise return 0.  */\n \n tree\n-define_label (filename, line, name)\n-     const char *filename;\n-     int line;\n-     tree name;\n+define_label (const char* filename, int line, tree name)\n {\n+  location_t locus;\n   tree decl = lookup_label (name);\n+  locus.file = filename;\n+  locus.line = line;\n \n   /* If label with this name is known from an outer context, shadow it.  */\n   if (decl != 0 && DECL_CONTEXT (decl) != current_function_decl)\n@@ -2086,23 +2085,20 @@ define_label (filename, line, name)\n     }\n \n   if (warn_traditional && !in_system_header && lookup_name (name))\n-    warning_with_file_and_line (filename, line,\n-\t\t\t\t\"traditional C lacks a separate namespace for labels, identifier `%s' conflicts\",\n-\t\t\t\tIDENTIFIER_POINTER (name));\n+    warning (\"%Htraditional C lacks a separate namespace for labels, \"\n+             \"identifier `%s' conflicts\", &locus, IDENTIFIER_POINTER (name));\n \n   if (DECL_INITIAL (decl) != 0)\n     {\n-      error_with_file_and_line (filename, line, \"duplicate label `%s'\",\n-\t\t\t\tIDENTIFIER_POINTER (name));\n+      error (\"%Hduplicate label `%s'\", &locus, IDENTIFIER_POINTER (name));\n       return 0;\n     }\n   else\n     {\n       /* Mark label as having been defined.  */\n       DECL_INITIAL (decl) = error_mark_node;\n       /* Say where in the source.  */\n-      DECL_SOURCE_FILE (decl) = filename;\n-      DECL_SOURCE_LINE (decl) = line;\n+      DECL_SOURCE_LOCATION (decl) = locus;\n       return decl;\n     }\n }\n@@ -2202,10 +2198,9 @@ void\n pending_xref_error ()\n {\n   if (pending_invalid_xref != 0)\n-    error_with_file_and_line (pending_invalid_xref_location.file,\n-\t\t\t      pending_invalid_xref_location.line,\n-\t\t\t      \"`%s' defined as wrong kind of tag\",\n-\t\t\t      IDENTIFIER_POINTER (pending_invalid_xref));\n+    error (\"%H`%s' defined as wrong kind of tag\",\n+           &pending_invalid_xref_location,\n+           IDENTIFIER_POINTER (pending_invalid_xref));\n   pending_invalid_xref = 0;\n }\n \n@@ -5536,8 +5531,7 @@ start_function (declspecs, declarator, attributes)\n       && TYPE_ARG_TYPES (TREE_TYPE (decl1)) == 0)\n     {\n       TREE_TYPE (decl1) = TREE_TYPE (old_decl);\n-      current_function_prototype_file = DECL_SOURCE_FILE (old_decl);\n-      current_function_prototype_line = DECL_SOURCE_LINE (old_decl);\n+      current_function_prototype_locus = DECL_SOURCE_LOCATION (old_decl);\n     }\n \n   /* Optionally warn of old-fashioned def with no previous prototype.  */\n@@ -5966,9 +5960,8 @@ store_parm_decls ()\n \t\t  || TYPE_MAIN_VARIANT (TREE_VALUE (type)) == void_type_node)\n \t\t{\n \t\t  error (\"number of arguments doesn't match prototype\");\n-\t\t  error_with_file_and_line (current_function_prototype_file,\n-\t\t\t\t\t    current_function_prototype_line,\n-\t\t\t\t\t    \"prototype declaration\");\n+\t\t  error (\"%Hprototype declaration\",\n+                         &current_function_prototype_locus);\n \t\t  break;\n \t\t}\n \t      /* Type for passing arg must be consistent with that\n@@ -5997,19 +5990,16 @@ store_parm_decls ()\n \t\t\t{\n \t\t\t  pedwarn (\"promoted argument `%s' doesn't match prototype\",\n \t\t\t\t   IDENTIFIER_POINTER (DECL_NAME (parm)));\n-\t\t\t  warning_with_file_and_line\n-\t\t\t    (current_function_prototype_file,\n-\t\t\t     current_function_prototype_line,\n-\t\t\t     \"prototype declaration\");\n+\t\t\t  warning (\"%Hprototype declaration\",\n+                                   &current_function_prototype_locus);\n \t\t\t}\n \t\t    }\n \t\t  else\n \t\t    {\n \t\t      error (\"argument `%s' doesn't match prototype\",\n \t\t\t     IDENTIFIER_POINTER (DECL_NAME (parm)));\n-\t\t      error_with_file_and_line (current_function_prototype_file,\n-\t\t\t\t\t\tcurrent_function_prototype_line,\n-\t\t\t\t\t\t\"prototype declaration\");\n+\t\t      error (\"%Hprototype declaration\",\n+                             &current_function_prototype_locus);\n \t\t    }\n \t\t}\n \t    }"}]}