{"sha": "0839863cfad677645b112db8c6bdc4153768412d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzOTg2M2NmYWQ2Nzc2NDViMTEyZGI4YzZiZGM0MTUzNzY4NDEyZA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-04T16:55:48Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-04T16:55:48Z"}, "message": "einfo.adb (Has_Pragma_Pure_Function): New flag.\n\n\t* einfo.adb (Has_Pragma_Pure_Function): New flag.\n\tFix problem that stopped ceinfo from working\n\n\t* einfo.ads (Has_Pragma_Pure_Function): New flag.\n\n\t* sem_prag.adb (Pure_Function): Set new flag Has_Pragma_Pure_Function.\n\nFrom-SVN: r47614", "tree": {"sha": "dcfc83ee806b8d2ab5b64ddf5adb4fb3ee1d6b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcfc83ee806b8d2ab5b64ddf5adb4fb3ee1d6b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0839863cfad677645b112db8c6bdc4153768412d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0839863cfad677645b112db8c6bdc4153768412d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0839863cfad677645b112db8c6bdc4153768412d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0839863cfad677645b112db8c6bdc4153768412d/comments", "author": null, "committer": null, "parents": [{"sha": "9678de4977f3ea4a80bd40e05d62ce6b7d7ead23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9678de4977f3ea4a80bd40e05d62ce6b7d7ead23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9678de4977f3ea4a80bd40e05d62ce6b7d7ead23"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "1c1279d4c2bd669826e07d274571eb5264058789", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0839863cfad677645b112db8c6bdc4153768412d", "patch": "@@ -1,4 +1,13 @@\n-2001-12-04  Douglas B. <rupp@gnat.com>\n+2001-12-04  Robert Dewar <dewar@gnat.com>\n+\n+\t* einfo.adb (Has_Pragma_Pure_Function): New flag.\n+\tFix problem that stopped ceinfo from working\n+\t\n+\t* einfo.ads (Has_Pragma_Pure_Function): New flag.\n+\t\n+\t* sem_prag.adb (Pure_Function): Set new flag Has_Pragma_Pure_Function.\n+\n+2001-12-04  Douglas B. Rupp <rupp@gnat.com>\n \n \t* gnatchop.adb:\n \t(File_Time_Stamp): New procedure."}, {"sha": "eaa362ef339f1806a117622a6b11224db4d90fef", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=0839863cfad677645b112db8c6bdc4153768412d", "patch": "@@ -58,23 +58,20 @@ package body Einfo is\n    --  Four of these fields are defined in Sinfo, since they in are the\n    --  base part of the node. The access routines for these fields and\n    --  the corresponding set procedures are defined in Sinfo. These fields\n-   --  are present in all entities.\n+   --  are present in all entities. Note that Homonym is also in the base\n+   --  part of the node, but has access routines that are more properly\n+   --  part of Einfo, which is why they are defined here.\n \n    --    Chars                           Name1\n    --    Next_Entity                     Node2\n    --    Scope                           Node3\n    --    Etype                           Node5\n \n-   --    The fifth field is also in the base part of the node, but it\n-   --    carries some additional semantic checks and its subprograms are\n-   --    more properly defined in Einfo.\n-\n-   --    Homonym                         Node4\n-\n    --   Remaining fields are present only in extended nodes (i.e. entities)\n \n    --  The following fields are present in all entities\n \n+   --    Homonym                         Node4\n    --    First_Rep_Item                  Node6\n    --    Freeze_Node                     Node7\n \n@@ -397,8 +394,8 @@ package body Einfo is\n    --    Is_Discrim_SO_Function         Flag176\n    --    Size_Depends_On_Discriminant   Flag177\n    --    Is_Null_Init_Proc              Flag178\n+   --    Has_Pragma_Pure_Function       Flag179\n \n-   --    (unused)                       Flag179\n    --    (unused)                       Flag180\n    --    (unused)                       Flag181\n    --    (unused)                       Flag182\n@@ -1087,6 +1084,12 @@ package body Einfo is\n       return Flag121 (Implementation_Base_Type (Id));\n    end Has_Pragma_Pack;\n \n+   function Has_Pragma_Pure_Function (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Subprogram (Id));\n+      return Flag179 (Id);\n+   end Has_Pragma_Pure_Function;\n+\n    function Has_Primitive_Operations (Id : E) return B is\n    begin\n       pragma Assert (Is_Type (Id));\n@@ -2924,6 +2927,12 @@ package body Einfo is\n       Set_Flag121 (Implementation_Base_Type (Id), V);\n    end Set_Has_Pragma_Pack;\n \n+   procedure Set_Has_Pragma_Pure_Function (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Subprogram (Id));\n+      Set_Flag179 (Id, V);\n+   end Set_Has_Pragma_Pure_Function;\n+\n    procedure Set_Has_Primitive_Operations (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id));\n@@ -5835,6 +5844,7 @@ package body Einfo is\n       W (\"Has_Pragma_Elaborate_Body\",     Flag150 (Id));\n       W (\"Has_Pragma_Inline\",             Flag157 (Id));\n       W (\"Has_Pragma_Pack\",               Flag121 (Id));\n+      W (\"Has_Pragma_Pure_Function\",      Flag179 (Id));\n       W (\"Has_Primitive_Operations\",      Flag120 (Id));\n       W (\"Has_Private_Declaration\",       Flag155 (Id));\n       W (\"Has_Qualified_Name\",            Flag161 (Id));"}, {"sha": "bac1287e9483eadf58e2a3f766d1fcff44b27576", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=0839863cfad677645b112db8c6bdc4153768412d", "patch": "@@ -1347,6 +1347,11 @@ package Einfo is\n --       was given for the type. Note that this flag is not inherited by a\n --       derived type. See also the Is_Packed flag.\n \n+--    Has_Pragma_Pure_Function (Flag179)\n+--       Present in subprogram entities. It indicates that a valid pragma\n+--       Pure_Function was given for the entity. In some cases, we need to\n+--       know that Is_Pure was explicitly set using this pragma.\n+\n --    Has_Primitive_Operations (Flag120) [base type only]\n --       Present in all type entities. Set if at least one primitive operation\n --       is defined on the type. This flag is not yet properly set ???\n@@ -4048,6 +4053,7 @@ package Einfo is\n    --    Has_Master_Entity             (Flag21)\n    --    Has_Missing_Return            (Flag142)\n    --    Has_Nested_Block_With_Handler (Flag101)\n+   --    Has_Pragma_Pure_Function      (Flag179)  (non-generic case only)\n    --    Has_Recursive_Call            (Flag143)\n    --    Has_Subprogram_Descriptor     (Flag93)\n    --    Is_Abstract                   (Flag19)\n@@ -4170,6 +4176,7 @@ package Einfo is\n    --    Is_Pure                       (Flag44)\n    --    Is_Intrinsic_Subprogram       (Flag64)\n    --    Default_Expressions_Processed (Flag108)\n+   --    Has_Pragma_Pure_Function      (Flag179)\n \n    --  E_Ordinary_Fixed_Point_Type\n    --  E_Ordinary_Fixed_Point_Subtype\n@@ -4277,6 +4284,7 @@ package Einfo is\n    --    Has_Completion                (Flag26)\n    --    Has_Master_Entity             (Flag21)\n    --    Has_Nested_Block_With_Handler (Flag101)\n+   --    Has_Pragma_Pure_Function      (Flag179)  (non-generic case only)\n    --    Has_Subprogram_Descriptor     (Flag93)\n    --    Is_Visible_Child_Unit         (Flag116)\n    --    Is_Abstract                   (Flag19)\n@@ -4828,6 +4836,7 @@ package Einfo is\n    function Has_Pragma_Elaborate_Body          (Id : E) return B;\n    function Has_Pragma_Inline                  (Id : E) return B;\n    function Has_Pragma_Pack                    (Id : E) return B;\n+   function Has_Pragma_Pure_Function           (Id : E) return B;\n    function Has_Primitive_Operations           (Id : E) return B;\n    function Has_Qualified_Name                 (Id : E) return B;\n    function Has_Record_Rep_Clause              (Id : E) return B;\n@@ -5283,6 +5292,7 @@ package Einfo is\n    procedure Set_Has_Pragma_Elaborate_Body     (Id : E; V : B := True);\n    procedure Set_Has_Pragma_Inline             (Id : E; V : B := True);\n    procedure Set_Has_Pragma_Pack               (Id : E; V : B := True);\n+   procedure Set_Has_Pragma_Pure_Function      (Id : E; V : B := True);\n    procedure Set_Has_Primitive_Operations      (Id : E; V : B := True);\n    procedure Set_Has_Private_Declaration       (Id : E; V : B := True);\n    procedure Set_Has_Qualified_Name            (Id : E; V : B := True);\n@@ -5750,6 +5760,7 @@ package Einfo is\n    pragma Inline (Has_Pragma_Elaborate_Body);\n    pragma Inline (Has_Pragma_Inline);\n    pragma Inline (Has_Pragma_Pack);\n+   pragma Inline (Has_Pragma_Pure_Function);\n    pragma Inline (Has_Primitive_Operations);\n    pragma Inline (Has_Private_Declaration);\n    pragma Inline (Has_Qualified_Name);\n@@ -6095,6 +6106,7 @@ package Einfo is\n    pragma Inline (Set_Has_Pragma_Elaborate_Body);\n    pragma Inline (Set_Has_Pragma_Inline);\n    pragma Inline (Set_Has_Pragma_Pack);\n+   pragma Inline (Set_Has_Pragma_Pure_Function);\n    pragma Inline (Set_Has_Primitive_Operations);\n    pragma Inline (Set_Has_Private_Declaration);\n    pragma Inline (Set_Has_Qualified_Name);"}, {"sha": "8e102cd51a55e9386f9d3986c3e4593a4c5a3d55", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839863cfad677645b112db8c6bdc4153768412d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0839863cfad677645b112db8c6bdc4153768412d", "patch": "@@ -7267,6 +7267,7 @@ package body Sem_Prag is\n                end if;\n \n                Set_Is_Pure (Def_Id);\n+               Set_Has_Pragma_Pure_Function (Def_Id);\n                E := Homonym (E);\n             end loop;\n          end Pure_Function;"}]}