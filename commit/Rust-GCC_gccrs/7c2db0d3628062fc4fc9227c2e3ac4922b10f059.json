{"sha": "7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyZGIwZDM2MjgwNjJmYzRmYzkyMjdjMmUzYWM0OTIyYjEwZjA1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-12T12:08:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-12T12:08:34Z"}, "message": "re PR debug/42278 (incorrect dwarf data gcc-4.4.2)\n\n\tPR debug/42278\n\t* dwarf2out.c (base_type_die): Don't add name attribute here.\n\t(modified_type_die): Instead of sizetype use\n\tits underlying original type.  If a DW_TAG_base_type doesn't\n\thave name added, add __unknown__.\n\t(dwarf2out_imported_module_or_decl_1): Don't call base_type_die,\n\talways call force_type_die instead.\n\nFrom-SVN: r159315", "tree": {"sha": "7c2bbc9a530c0bc7329d73cce4d2900d40f8a5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c2bbc9a530c0bc7329d73cce4d2900d40f8a5c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2db0d3628062fc4fc9227c2e3ac4922b10f059/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e247ae5a1779cdd22af089f8666b3d7c5f4cecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e247ae5a1779cdd22af089f8666b3d7c5f4cecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e247ae5a1779cdd22af089f8666b3d7c5f4cecf"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "fb4d61628fd37947194e219e8eb3d9b103ac1fff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2db0d3628062fc4fc9227c2e3ac4922b10f059/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2db0d3628062fc4fc9227c2e3ac4922b10f059/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "patch": "@@ -1,3 +1,13 @@\n+2010-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/42278\n+\t* dwarf2out.c (base_type_die): Don't add name attribute here.\n+\t(modified_type_die): Instead of sizetype use\n+\tits underlying original type.  If a DW_TAG_base_type doesn't\n+\thave name added, add __unknown__.\n+\t(dwarf2out_imported_module_or_decl_1): Don't call base_type_die,\n+\talways call force_type_die instead.\n+\n 2010-05-12  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* targhooks.c (default_stack_protect_guard): Avoid sharing RTL"}, {"sha": "467bb268d4ddbe1f32276726c775c98f28f9c5d5", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2db0d3628062fc4fc9227c2e3ac4922b10f059/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2db0d3628062fc4fc9227c2e3ac4922b10f059/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7c2db0d3628062fc4fc9227c2e3ac4922b10f059", "patch": "@@ -12073,10 +12073,6 @@ base_type_die (tree type)\n \n   base_type_result = new_die (DW_TAG_base_type, comp_unit_die, type);\n \n-  /* This probably indicates a bug.  */\n-  if (! TYPE_NAME (type))\n-    add_name_attribute (base_type_result, \"__unknown__\");\n-\n   add_AT_unsigned (base_type_result, DW_AT_byte_size,\n \t\t   int_size_in_bytes (type));\n   add_AT_unsigned (base_type_result, DW_AT_encoding, encoding);\n@@ -12195,6 +12191,21 @@ modified_type_die (tree type, int is_const_type, int is_volatile_type,\n \t\t\t  ((is_const_type ? TYPE_QUAL_CONST : 0)\n \t\t\t   | (is_volatile_type ? TYPE_QUAL_VOLATILE : 0)));\n \n+  if (qualified_type == sizetype\n+      && TYPE_NAME (qualified_type)\n+      && TREE_CODE (TYPE_NAME (qualified_type)) == TYPE_DECL)\n+    {\n+#ifdef ENABLE_CHECKING\n+      gcc_assert (TREE_CODE (TREE_TYPE (TYPE_NAME (qualified_type)))\n+\t\t  == INTEGER_TYPE\n+\t\t  && TYPE_PRECISION (TREE_TYPE (TYPE_NAME (qualified_type)))\n+\t\t     == TYPE_PRECISION (qualified_type)\n+\t\t  && TYPE_UNSIGNED (TREE_TYPE (TYPE_NAME (qualified_type)))\n+\t\t     == TYPE_UNSIGNED (qualified_type));\n+#endif\n+      qualified_type = TREE_TYPE (TYPE_NAME (qualified_type));\n+    }\n+\n   /* If we do, then we can just use its DIE, if it exists.  */\n   if (qualified_type)\n     {\n@@ -12311,6 +12322,9 @@ modified_type_die (tree type, int is_const_type, int is_volatile_type,\n \tname = DECL_NAME (name);\n       add_name_attribute (mod_type_die, IDENTIFIER_POINTER (name));\n     }\n+  /* This probably indicates a bug.  */\n+  else if (mod_type_die->die_tag == DW_TAG_base_type)\n+    add_name_attribute (mod_type_die, \"__unknown__\");\n \n   if (qualified_type)\n     equate_type_number_to_die (qualified_type, mod_type_die);\n@@ -19816,10 +19830,7 @@ dwarf2out_imported_module_or_decl_1 (tree decl,\n \n   if (TREE_CODE (decl) == TYPE_DECL || TREE_CODE (decl) == CONST_DECL)\n     {\n-      if (is_base_type (TREE_TYPE (decl)))\n-\tat_import_die = base_type_die (TREE_TYPE (decl));\n-      else\n-\tat_import_die = force_type_die (TREE_TYPE (decl));\n+      at_import_die = force_type_die (TREE_TYPE (decl));\n       /* For namespace N { typedef void T; } using N::T; base_type_die\n \t returns NULL, but DW_TAG_imported_declaration requires\n \t the DW_AT_import tag.  Force creation of DW_TAG_typedef.  */"}]}