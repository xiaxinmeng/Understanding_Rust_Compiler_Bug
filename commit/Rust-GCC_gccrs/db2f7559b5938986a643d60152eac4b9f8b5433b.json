{"sha": "db2f7559b5938986a643d60152eac4b9f8b5433b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyZjc1NTliNTkzODk4NmE2NDNkNjAxNTJlYWM0YjlmOGI1NDMzYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-25T23:53:40Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-25T23:53:40Z"}, "message": "(final_giv_value): Verify that bl->initial_value is\ninvariant before trying to use it.\n\nFrom-SVN: r14323", "tree": {"sha": "268eedb0b3cdc3c501cf512d5950d943790fa774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268eedb0b3cdc3c501cf512d5950d943790fa774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db2f7559b5938986a643d60152eac4b9f8b5433b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f7559b5938986a643d60152eac4b9f8b5433b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2f7559b5938986a643d60152eac4b9f8b5433b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f7559b5938986a643d60152eac4b9f8b5433b/comments", "author": null, "committer": null, "parents": [{"sha": "f9317f0d751914dc72d58516900a972d4ffa8410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9317f0d751914dc72d58516900a972d4ffa8410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9317f0d751914dc72d58516900a972d4ffa8410"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "23bf6d372c1a2e8ad185e7480b4bdcab8dc4f053", "filename": "gcc/unroll.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db2f7559b5938986a643d60152eac4b9f8b5433b/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db2f7559b5938986a643d60152eac4b9f8b5433b/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=db2f7559b5938986a643d60152eac4b9f8b5433b", "patch": "@@ -3205,9 +3205,14 @@ final_giv_value (v, loop_start, loop_end)\n \t determine whether giv's are replaceable so that we can use the\n \t biv value here if it is not eliminable.  */\n \n+      /* We are emitting code after the end of the loop, so we must make\n+\t sure that bl->initial_value is still valid then.  It will still\n+\t be valid if it is invariant.  */\n+\n       increment = biv_total_increment (bl, loop_start, loop_end);\n \n-      if (increment && invariant_p (increment))\n+      if (increment && invariant_p (increment)\n+\t  && invariant_p (bl->initial_value))\n \t{\n \t  /* Can calculate the loop exit value of its biv as\n \t     (loop_n_iterations * increment) + initial_value */"}]}