{"sha": "8cce3d04c451595cc9f33a332a4dbeae2729b40e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjZTNkMDRjNDUxNTk1Y2M5ZjMzYTMzMmE0ZGJlYWUyNzI5YjQwZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-03-20T23:03:03Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-03-20T23:03:03Z"}, "message": "re PR target/13889 (Assignment of an int to an int of different size in a struct gives ICE)\n\n\n\tPR target/13889\n\t* cse.c (fold_rtx): Avoid substituting constants into unary\n\tconvertion operations.\n\n\t* gcc.c-torture/compile/pr13889.c: New test case.\n\nFrom-SVN: r79762", "tree": {"sha": "715204d51caed06f5a32eb4eba6087472e7e2e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715204d51caed06f5a32eb4eba6087472e7e2e33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cce3d04c451595cc9f33a332a4dbeae2729b40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cce3d04c451595cc9f33a332a4dbeae2729b40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cce3d04c451595cc9f33a332a4dbeae2729b40e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cce3d04c451595cc9f33a332a4dbeae2729b40e/comments", "author": null, "committer": null, "parents": [{"sha": "05fe5c6724457b820fb0750b3de07e90fba596f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fe5c6724457b820fb0750b3de07e90fba596f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fe5c6724457b820fb0750b3de07e90fba596f8"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "ccbe122132a6d5f6083abd3b9d8dcafa32b07ca7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cce3d04c451595cc9f33a332a4dbeae2729b40e", "patch": "@@ -1,3 +1,9 @@\n+2004-03-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/13889\n+\t* cse.c (fold_rtx): Avoid substituting constants into unary\n+\tconvertion operations.\n+\n 2004-03-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* fold-const.c (fold): Replace \"expr\" with \"t\"."}, {"sha": "38f6ef06004634b7f0ba3a3b427d31ef55eba9b1", "filename": "gcc/cse.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8cce3d04c451595cc9f33a332a4dbeae2729b40e", "patch": "@@ -3662,6 +3662,23 @@ fold_rtx (rtx x, rtx insn)\n \t\t|| (new_cost == old_cost && CONSTANT_P (XEXP (x, i))))\n \t      break;\n \n+\t    /* It's not safe to substitute the operand of a conversion\n+\t       operator with a constant, as the conversion's identity\n+\t       depends upon the mode of it's operand.  This optimization\n+\t       is handled by the call to simplify_unary_operation.  */\n+\t    if (GET_RTX_CLASS (code) == RTX_UNARY\n+\t\t&& GET_MODE (replacements[j]) != mode_arg0\n+\t\t&& (code == ZERO_EXTEND\n+\t\t    || code == SIGN_EXTEND\n+\t\t    || code == TRUNCATE\n+\t\t    || code == FLOAT_TRUNCATE\n+\t\t    || code == FLOAT_EXTEND\n+\t\t    || code == FLOAT\n+\t\t    || code == FIX\n+\t\t    || code == UNSIGNED_FLOAT\n+\t\t    || code == UNSIGNED_FIX))\n+\t      continue;\n+\n \t    if (validate_change (insn, &XEXP (x, i), replacements[j], 0))\n \t      break;\n "}, {"sha": "b53e941f16277a9c10860f112eb736a8dbeb4c7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cce3d04c451595cc9f33a332a4dbeae2729b40e", "patch": "@@ -1,3 +1,8 @@\n+2004-03-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/13889\n+\t* gcc.c-torture/compile/pr13889.c: New test case.\n+\n 2004-03-20  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/14635"}, {"sha": "d14bc9ac54293146fc835014b85844f8ccc12387", "filename": "gcc/testsuite/gcc.c-torture/compile/pr13889.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr13889.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cce3d04c451595cc9f33a332a4dbeae2729b40e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr13889.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr13889.c?ref=8cce3d04c451595cc9f33a332a4dbeae2729b40e", "patch": "@@ -0,0 +1,7 @@\n+/* PR target/13889 */\n+struct { long long a; } *p;\n+void initNetFlowFunct(void) {\n+  unsigned int b = (unsigned int)-1;\n+  p->a = b;\n+}\n+"}]}