{"sha": "b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI4NWJlYmU2YWQxZTlmNjQxNmYwZWI2Y2I2OWVkYzQ0ZGI3ODEzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-30T08:39:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-30T08:39:05Z"}, "message": "i386: Optimize popcnt followed by zero/sign extension [PR91824]\n\nLike any other instruction with 32-bit GPR destination operand in 64-bit\nmode, popcntl also clears the upper 32 bits of the register (and other bits\ntoo, it can return only 0 to 32 inclusive).\n\nDuring combine, the zero or sign extensions of it show up as paradoxical\nsubreg of the popcount & 63, there 63 is the smallest power of two - 1 mask\nthat can represent all the 0 to 32 inclusive values.\n\n2020-01-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/91824\n\t* config/i386/i386.md (*popcountsi2_zext): New define_insn_and_split.\n\t(*popcountsi2_zext_falsedep): New define_insn.\n\n\t* gcc.target/i386/pr91824-1.c: New test.", "tree": {"sha": "28a294b50851fef478ce7d6a189f210086bc0686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28a294b50851fef478ce7d6a189f210086bc0686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2595f25cdaf4f16d04a1078a487b2ecc126cae29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2595f25cdaf4f16d04a1078a487b2ecc126cae29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2595f25cdaf4f16d04a1078a487b2ecc126cae29"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "c86b9c2aa509736d68c3d1f11d962c5eb911544e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "patch": "@@ -1,3 +1,9 @@\n+2020-01-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/91824\n+\t* config/i386/i386.md (*popcountsi2_zext): New define_insn_and_split.\n+\t(*popcountsi2_zext_falsedep): New define_insn.\n+\n 2020-01-30  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n \t* config.in: Regenerated."}, {"sha": "f5c8d552af8ddef6f0e564617f767d60991974bb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "patch": "@@ -14563,6 +14563,60 @@\n    (set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn_and_split \"*popcountsi2_zext\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(and:DI\n+\t  (subreg:DI\n+\t    (popcount:SI\n+\t      (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")) 0)\n+\t  (const_int 63)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_POPCNT && TARGET_64BIT\"\n+{\n+#if TARGET_MACHO\n+  return \"popcnt\\t{%1, %k0|%k0, %1}\";\n+#else\n+  return \"popcnt{l}\\t{%1, %k0|%k0, %1}\";\n+#endif\n+}\n+  \"&& TARGET_AVOID_FALSE_DEP_FOR_BMI && epilogue_completed\n+   && optimize_function_for_speed_p (cfun)\n+   && !reg_mentioned_p (operands[0], operands[1])\"\n+  [(parallel\n+    [(set (match_dup 0)\n+\t  (and:DI (subreg:DI (popcount:SI (match_dup 1)) 0) (const_int 63)))\n+     (unspec [(match_dup 0)] UNSPEC_INSN_FALSE_DEP)\n+     (clobber (reg:CC FLAGS_REG))])]\n+  \"ix86_expand_clear (operands[0]);\"\n+  [(set_attr \"prefix_rep\" \"1\")\n+   (set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+; False dependency happens when destination is only updated by tzcnt,\n+; lzcnt or popcnt.  There is no false dependency when destination is\n+; also used in source.\n+(define_insn \"*popcountsi2_zext_falsedep\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(and:DI\n+\t  (subreg:DI\n+\t    (popcount:SI\n+\t      (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")) 0)\n+\t  (const_int 63)))\n+   (unspec [(match_operand:DI 2 \"register_operand\" \"0\")]\n+\t   UNSPEC_INSN_FALSE_DEP)\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_POPCNT && TARGET_64BIT\"\n+{\n+#if TARGET_MACHO\n+  return \"popcnt\\t{%1, %k0|%k0, %1}\";\n+#else\n+  return \"popcnt{l}\\t{%1, %k0|%k0, %1}\";\n+#endif\n+}\n+  [(set_attr \"prefix_rep\" \"1\")\n+   (set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn_and_split \"*popcounthi2_1\"\n   [(set (match_operand:SI 0 \"register_operand\")\n \t(popcount:SI"}, {"sha": "9b3660645efe4bec4425b3f7979757358f8f0bea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "patch": "@@ -1,3 +1,8 @@\n+2020-01-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/91824\n+\t* gcc.target/i386/pr91824-1.c: New test.\n+\n 2020-01-30  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \t* g++.dg/coroutines/co-await-syntax-09-convert.C: New test."}, {"sha": "0bb24e7fedc051a89b1cc82e922d8f2f13dc0809", "filename": "gcc/testsuite/gcc.target/i386/pr91824-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b285bebe6ad1e9f6416f0eb6cb69edc44db7813c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91824-1.c?ref=b285bebe6ad1e9f6416f0eb6cb69edc44db7813c", "patch": "@@ -0,0 +1,54 @@\n+/* PR target/91824 */\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2 -mpopcnt\" } */\n+/* { dg-final { scan-assembler-not \"cltq\" } } */\n+\n+unsigned int foo (void);\n+\n+unsigned long\n+f1 (unsigned int x)\n+{\n+  return __builtin_popcount (x);\n+}\n+\n+unsigned long\n+f2 (unsigned int x)\n+{\n+  return (unsigned) __builtin_popcount (x);\n+}\n+\n+unsigned long\n+f3 (unsigned int x)\n+{\n+  return __builtin_popcount (x) & 63ULL;\n+}\n+\n+unsigned long\n+f4 (unsigned int x)\n+{\n+  return __builtin_popcount (x) & 1023ULL;\n+}\n+\n+unsigned long\n+f5 (void)\n+{\n+  return __builtin_popcount (foo ());\n+}\n+\n+unsigned long\n+f6 (void)\n+{\n+  return (unsigned) __builtin_popcount (foo ());\n+}\n+\n+unsigned long\n+f7 (void)\n+{\n+  return __builtin_popcount (foo ()) & 63ULL;\n+}\n+\n+unsigned long\n+f8 (void)\n+{\n+  return __builtin_popcount (foo ()) & 1023ULL;\n+}"}]}