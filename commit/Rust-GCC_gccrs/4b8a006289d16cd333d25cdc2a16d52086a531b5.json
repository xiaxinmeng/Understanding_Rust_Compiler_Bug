{"sha": "4b8a006289d16cd333d25cdc2a16d52086a531b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI4YTAwNjI4OWQxNmNkMzMzZDI1Y2RjMmExNmQ1MjA4NmE1MzFiNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-25T10:33:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-25T10:33:38Z"}, "message": "(fold-convert): Use assignment, instead of initializing, aggregate\nlocal variable REAL_VALUE_TYPE.\n\nFrom-SVN: r7146", "tree": {"sha": "3ee8f806dcd3b756680b90f0162d35b7db7e87b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ee8f806dcd3b756680b90f0162d35b7db7e87b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8a006289d16cd333d25cdc2a16d52086a531b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a006289d16cd333d25cdc2a16d52086a531b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8a006289d16cd333d25cdc2a16d52086a531b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a006289d16cd333d25cdc2a16d52086a531b5/comments", "author": null, "committer": null, "parents": [{"sha": "4791d99b588f73e575285806f6a2ba967a7df419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4791d99b588f73e575285806f6a2ba967a7df419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4791d99b588f73e575285806f6a2ba967a7df419"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "c3f2c5c9dfd2fa33ef502a4f34d4cdc65a0db6f3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8a006289d16cd333d25cdc2a16d52086a531b5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8a006289d16cd333d25cdc2a16d52086a531b5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4b8a006289d16cd333d25cdc2a16d52086a531b5", "patch": "@@ -1584,10 +1584,15 @@ fold_convert (t, arg1)\n #if !defined (REAL_IS_NOT_DOUBLE) || defined (REAL_ARITHMETIC)\n       else if (TREE_CODE (arg1) == REAL_CST)\n \t{\n-\t  REAL_VALUE_TYPE x = TREE_REAL_CST (arg1);\n-\t  REAL_VALUE_TYPE l = real_value_from_int_cst (TYPE_MIN_VALUE (type));\n-\t  REAL_VALUE_TYPE u = real_value_from_int_cst (TYPE_MAX_VALUE (type));\n-\n+\t  /* Don't initialize these, use assignments.\n+\t     Initialized local aggregates don't work on old compilers.  */\n+\t  REAL_VALUE_TYPE x;\n+\t  REAL_VALUE_TYPE l;\n+\t  REAL_VALUE_TYPE u;\n+\n+\t  x = TREE_REAL_CST (arg1);\n+\t  l = real_value_from_int_cst (TYPE_MIN_VALUE (type));\n+\t  u = real_value_from_int_cst (TYPE_MAX_VALUE (type));\n \t  /* See if X will be in range after truncation towards 0.\n \t     To compensate for truncation, move the bounds away from 0,\n \t     but reject if X exactly equals the adjusted bounds.  */"}]}