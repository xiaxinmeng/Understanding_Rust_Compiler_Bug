{"sha": "b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM5NWRkYmVlNWRlMGYyMDI4ZGFlMGVkNjIzOWUwZTRhMTAzYzdkNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-19T02:51:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-19T02:51:35Z"}, "message": "ia64.c (ia64_sched_reorder2): Also skip past pred_rel_mutex when searching for insn_group_barrier.\n\n        * config/ia64/ia64.c (ia64_sched_reorder2): Also skip past\n        pred_rel_mutex when searching for insn_group_barrier.\n\nFrom-SVN: r45019", "tree": {"sha": "8fba3f5a42eb2aff1a57c41ed32ec6ae196c2ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fba3f5a42eb2aff1a57c41ed32ec6ae196c2ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4/comments", "author": null, "committer": null, "parents": [{"sha": "f83594c41cf89df9817cc9cf61f7dcd57f90340c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f83594c41cf89df9817cc9cf61f7dcd57f90340c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f83594c41cf89df9817cc9cf61f7dcd57f90340c"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "8333b68923e235dbefdf05bd2b698f895b6ae565", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "patch": "@@ -1,5 +1,8 @@\n 2001-08-18  Richard Henderson  <rth@redhat.com>\n \n+\t* config/ia64/ia64.c (ia64_sched_reorder2): Also skip past\n+\tpred_rel_mutex when searching for insn_group_barrier.\n+\n \t* config/ia64/ia64.c (ia64_internal_sched_reorder): Emit stop\n \tbit before asm as needed.\n "}, {"sha": "aee3ee27284dc53d85136afc9bf0f4e0fd2188ea", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b395ddbee5de0f2028dae0ed6239e0e4a103c7d4/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=b395ddbee5de0f2028dae0ed6239e0e4a103c7d4", "patch": "@@ -6211,30 +6211,43 @@ ia64_sched_reorder2 (dump, sched_verbose, ready, pn_ready, clock_var)\n \t   && (sched_data.types[2] == TYPE_I || sched_data.types[2] == TYPE_A)\n \t   && (sched_data.types[3] != TYPE_M && sched_data.types[3] != TYPE_A))\n \t  || (sched_data.cur == 3\n-\t      && (sched_data.types[1] == TYPE_M || sched_data.types[1] == TYPE_A)\n-\t      && (sched_data.types[2] != TYPE_M && sched_data.types[2] != TYPE_I\n+\t      && (sched_data.types[1] == TYPE_M\n+\t\t  || sched_data.types[1] == TYPE_A)\n+\t      && (sched_data.types[2] != TYPE_M\n+\t\t  && sched_data.types[2] != TYPE_I\n \t\t  && sched_data.types[2] != TYPE_A))))\n       \n     {\n       int i, best;\n-      rtx stop = PREV_INSN (sched_data.insns[1]);\n-      rtx pat;\n+      rtx stop = sched_data.insns[1];\n \n-      sched_data.stopbit[0] = 0;\n-      sched_data.stopbit[2] = 1;\n-      if (GET_CODE (stop) != INSN)\n-\tabort ();\n+      /* Search backward for the stop bit that must be there.  */\n+      while (1)\n+\t{\n+\t  int insn_code;\n+\n+\t  stop = PREV_INSN (stop);\n+\t  if (GET_CODE (stop) != INSN)\n+\t    abort ();\n+\t  insn_code = recog_memoized (stop);\n \n-      pat = PATTERN (stop);\n-      /* Ignore cycle displays.  */\n-      if (GET_CODE (pat) == UNSPEC && XINT (pat, 1) == 23)\n-\tstop = PREV_INSN (stop);\n-      pat = PATTERN (stop);\n-      if (GET_CODE (pat) != UNSPEC_VOLATILE\n-\t  || XINT (pat, 1) != 2\n-\t  || INTVAL (XVECEXP (pat, 0, 0)) != 1)\n+\t  /* Ignore cycle displays and .pred.rel.mutex.  */\n+\t  if (insn_code == CODE_FOR_cycle_display\n+\t      || insn_code == CODE_FOR_pred_rel_mutex)\n+\t    continue;\n+\n+\t  if (insn_code == CODE_FOR_insn_group_barrier)\n+\t    break;\n+\t  abort ();\n+\t}\n+\n+      /* Adjust the stop bit's slot selector.  */\n+      if (INTVAL (XVECEXP (PATTERN (stop), 0, 0)) != 1)\n \tabort ();\n-      XVECEXP (pat, 0, 0) = GEN_INT (3);\n+      XVECEXP (PATTERN (stop), 0, 0) = GEN_INT (3);\n+\n+      sched_data.stopbit[0] = 0;\n+      sched_data.stopbit[2] = 1;\n \n       sched_data.types[5] = sched_data.types[3];\n       sched_data.types[4] = sched_data.types[2];"}]}