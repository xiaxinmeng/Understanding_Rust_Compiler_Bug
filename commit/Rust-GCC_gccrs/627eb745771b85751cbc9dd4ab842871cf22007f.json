{"sha": "627eb745771b85751cbc9dd4ab842871cf22007f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3ZWI3NDU3NzFiODU3NTFjYmM5ZGQ0YWI4NDI4NzFjZjIyMDA3Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-12-14T15:33:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-12-14T15:33:34Z"}, "message": "sse.md (sse4_2_pcmpestr): Use reg_not_xmm0_operand constraint for operand2.\n\n\t* config/i386/sse.md (sse4_2_pcmpestr): Use reg_not_xmm0_operand\n\tconstraint for operand2.  Use nonimm_not_xmm0_operand constraint\n\tfor operand 4.  Update arguments in the call to\n\tgen_sse4_2_pcmpestr_cconly.\n\t(sse_4_2_pcmpestr_cconly): Renumber insn operands and update insn\n\ttemplate accordingly.\n\t(sse4_2_pcmpistr): Use reg_not_xmm0_operand constraint for operand2.\n\tUse nonimm_not_xmm0_operand constraint for operand 3.  Update\n\targuments in the call to gen_sse4_2_pcmpistr_cconly.\n\t(sse_4_2_pcmpistr_cconly): Renumber insn operands and update insn\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/sse-12.c (dg-options): Use -msse4\n\tinstead of -msse4.1.\n\t* gcc.target/i386/sse-12.c (dg-options): Ditto.\n\t* g++.dg/other/i386-2.C (dg-options): Ditto.\n\nFrom-SVN: r130934", "tree": {"sha": "1cbb659d14030239590fd3f5210ba313304db51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cbb659d14030239590fd3f5210ba313304db51e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/627eb745771b85751cbc9dd4ab842871cf22007f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627eb745771b85751cbc9dd4ab842871cf22007f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/627eb745771b85751cbc9dd4ab842871cf22007f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627eb745771b85751cbc9dd4ab842871cf22007f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "720522379c33e1054acc70d63382ae4bb65ae119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720522379c33e1054acc70d63382ae4bb65ae119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720522379c33e1054acc70d63382ae4bb65ae119"}], "stats": {"total": 80, "additions": 51, "deletions": 29}, "files": [{"sha": "b006b495cc32cd7ab450fd52cad1bef1ec35d17a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -1,3 +1,16 @@\n+2007-12-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (sse4_2_pcmpestr): Use reg_not_xmm0_operand\n+\tconstraint for operand2.  Use nonimm_not_xmm0_operand constraint\n+\tfor operand 4.  Update arguments in the call to\n+\tgen_sse4_2_pcmpestr_cconly.\n+\t(sse_4_2_pcmpestr_cconly): Renumber insn operands and update insn\n+\ttemplate accordingly.\n+\t(sse4_2_pcmpistr): Use reg_not_xmm0_operand constraint for operand2.\n+\tUse nonimm_not_xmm0_operand constraint for operand 3.  Update\n+\targuments in the call to gen_sse4_2_pcmpistr_cconly.\n+\t(sse_4_2_pcmpistr_cconly): Renumber insn operands and update insn\n+\n 2007-12-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34462"}, {"sha": "12fb4a230c9c41863c533e0567e68b5886beeae5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -7309,9 +7309,9 @@\n (define_insn_and_split \"sse4_2_pcmpestr\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=c,c\")\n \t(unspec:SI\n-\t  [(match_operand:V16QI 2 \"register_operand\" \"x,x\")\n+\t  [(match_operand:V16QI 2 \"reg_not_xmm0_operand\" \"x,x\")\n \t   (match_operand:SI 3 \"register_operand\" \"a,a\")\n-\t   (match_operand:V16QI 4 \"nonimmediate_operand\" \"x,m\")\n+\t   (match_operand:V16QI 4 \"nonimm_not_xmm0_operand\" \"x,m\")\n \t   (match_operand:SI 5 \"register_operand\" \"d,d\")\n \t   (match_operand:SI 6 \"const_0_to_255_operand\" \"n,n\")]\n \t  UNSPEC_PCMPESTR))\n@@ -7350,7 +7350,8 @@\n \t\t\t\t     operands[3], operands[4],\n \t\t\t\t     operands[5], operands[6]));\n   if (flags && !(ecx || xmm0))\n-    emit_insn (gen_sse4_2_pcmpestr_cconly (operands[2], operands[3],\n+    emit_insn (gen_sse4_2_pcmpestr_cconly (NULL, NULL,\n+\t\t\t\t\t   operands[2], operands[3],\n \t\t\t\t\t   operands[4], operands[5],\n \t\t\t\t\t   operands[6]));\n   DONE;\n@@ -7414,20 +7415,20 @@\n (define_insn \"sse4_2_pcmpestr_cconly\"\n   [(set (reg:CC FLAGS_REG)\n \t(unspec:CC\n-\t  [(match_operand:V16QI 0 \"register_operand\" \"x,x,x,x\")\n-\t   (match_operand:SI 1 \"register_operand\" \"a,a,a,a\")\n-\t   (match_operand:V16QI 2 \"nonimmediate_operand\" \"x,m,x,m\")\n-\t   (match_operand:SI 3 \"register_operand\" \"d,d,d,d\")\n-\t   (match_operand:SI 4 \"const_0_to_255_operand\" \"n,n,n,n\")]\n+\t  [(match_operand:V16QI 2 \"register_operand\" \"x,x,x,x\")\n+\t   (match_operand:SI 3 \"register_operand\" \"a,a,a,a\")\n+\t   (match_operand:V16QI 4 \"nonimmediate_operand\" \"x,m,x,m\")\n+\t   (match_operand:SI 5 \"register_operand\" \"d,d,d,d\")\n+\t   (match_operand:SI 6 \"const_0_to_255_operand\" \"n,n,n,n\")]\n \t  UNSPEC_PCMPESTR))\n-   (clobber (match_scratch:V16QI 5 \"=Yz,Yz,X,X\"))\n-   (clobber (match_scratch:SI    6 \"= X, X,c,c\"))]\n+   (clobber (match_scratch:V16QI 0 \"=Yz,Yz,X,X\"))\n+   (clobber (match_scratch:SI    1 \"= X, X,c,c\"))]\n   \"TARGET_SSE4_2\"\n   \"@\n-   pcmpestrm\\t{%4, %2, %0|%0, %2, %4}\n-   pcmpestrm\\t{%4, %2, %0|%0, %2, %4}\n-   pcmpestri\\t{%4, %2, %0|%0, %2, %4}\n-   pcmpestri\\t{%4, %2, %0|%0, %2, %4}\"\n+   pcmpestrm\\t{%6, %4, %2|%2, %4, %6}\n+   pcmpestrm\\t{%6, %4, %2|%2, %4, %6}\n+   pcmpestri\\t{%6, %4, %2|%2, %4, %6}\n+   pcmpestri\\t{%6, %4, %2|%2, %4, %6}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -7437,8 +7438,8 @@\n (define_insn_and_split \"sse4_2_pcmpistr\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=c,c\")\n \t(unspec:SI\n-\t  [(match_operand:V16QI 2 \"register_operand\" \"x,x\")\n-\t   (match_operand:V16QI 3 \"nonimmediate_operand\" \"x,m\")\n+\t  [(match_operand:V16QI 2 \"reg_not_xmm0_operand\" \"x,x\")\n+\t   (match_operand:V16QI 3 \"nonimm_not_xmm0_operand\" \"x,m\")\n \t   (match_operand:SI 4 \"const_0_to_255_operand\" \"n,n\")]\n \t  UNSPEC_PCMPISTR))\n    (set (match_operand:V16QI 1 \"register_operand\" \"=Yz,Yz\")\n@@ -7470,7 +7471,8 @@\n     emit_insn (gen_sse4_2_pcmpistrm (operands[1], operands[2],\n \t\t\t\t     operands[3], operands[4]));\n   if (flags && !(ecx || xmm0))\n-    emit_insn (gen_sse4_2_pcmpistr_cconly (operands[2], operands[3],\n+    emit_insn (gen_sse4_2_pcmpistr_cconly (NULL, NULL,\n+\t\t\t\t\t   operands[2], operands[3],\n \t\t\t\t\t   operands[4]));\n   DONE;\n }\n@@ -7525,18 +7527,18 @@\n (define_insn \"sse4_2_pcmpistr_cconly\"\n   [(set (reg:CC FLAGS_REG)\n \t(unspec:CC\n-\t  [(match_operand:V16QI 0 \"register_operand\" \"x,x,x,x\")\n-\t   (match_operand:V16QI 1 \"nonimmediate_operand\" \"x,m,x,m\")\n-\t   (match_operand:SI 2 \"const_0_to_255_operand\" \"n,n,n,n\")]\n+\t  [(match_operand:V16QI 2 \"register_operand\" \"x,x,x,x\")\n+\t   (match_operand:V16QI 3 \"nonimmediate_operand\" \"x,m,x,m\")\n+\t   (match_operand:SI 4 \"const_0_to_255_operand\" \"n,n,n,n\")]\n \t  UNSPEC_PCMPISTR))\n-   (clobber (match_scratch:V16QI 3 \"=Yz,Yz,X,X\"))\n-   (clobber (match_scratch:SI    4 \"= X, X,c,c\"))]\n+   (clobber (match_scratch:V16QI 0 \"=Yz,Yz,X,X\"))\n+   (clobber (match_scratch:SI    1 \"= X, X,c,c\"))]\n   \"TARGET_SSE4_2\"\n   \"@\n-   pcmpistrm\\t{%2, %1, %0|%0, %1, %2}\n-   pcmpistrm\\t{%2, %1, %0|%0, %1, %2}\n-   pcmpistri\\t{%2, %1, %0|%0, %1, %2}\n-   pcmpistri\\t{%2, %1, %0|%0, %1, %2}\"\n+   pcmpistrm\\t{%4, %3, %2|%2, %3, %4}\n+   pcmpistrm\\t{%4, %3, %2|%2, %3, %4}\n+   pcmpistri\\t{%4, %3, %2|%2, %3, %4}\n+   pcmpistri\\t{%4, %3, %2|%2, %3, %4}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")"}, {"sha": "c6ce8eb2f71ff41fdeb32daa1529e9346aeeaea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -1,3 +1,10 @@\n+2007-12-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/sse-12.c (dg-options): Use -msse4\n+\tinstead of -msse4.1.\n+\t* gcc.target/i386/sse-12.c (dg-options): Ditto.\n+\t* g++.dg/other/i386-2.C (dg-options): Ditto.\n+\n 2007-12-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34438"}, {"sha": "e2131b023aaeac9fcda03f2cae32edf1f6504973", "filename": "gcc/testsuite/g++.dg/other/i386-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -1,7 +1,7 @@\n /* Test that {,x,e,p,t,s,a,b}mmintrin.h, mm3dnow.h and mm_malloc.h are\n    usable with -O -pedantic-errors.  */\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -pedantic-errors -march=k8 -m3dnow -msse4.1 -msse5\" } */\n+/* { dg-options \"-O -pedantic-errors -march=k8 -m3dnow -msse4 -msse5\" } */\n \n #include <bmmintrin.h>\n #include <smmintrin.h>"}, {"sha": "ef4dd6e84e0242c965a4e2cb8db9af68818473a1", "filename": "gcc/testsuite/gcc.target/i386/sse-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -1,7 +1,7 @@\n /* Test that {,x,e,p,t,s,a}mmintrin.h, mm3dnow.h and mm_malloc.h are\n    usable with -O -std=c89 -pedantic-errors.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -m3dnow -msse4.1 -msse5\" } */\n+/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -m3dnow -msse4 -msse5\" } */\n \n #include <bmmintrin.h>\n #include <smmintrin.h>"}, {"sha": "05e9a9eea24f96485cb208af4c578fc904dd6c46", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627eb745771b85751cbc9dd4ab842871cf22007f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=627eb745771b85751cbc9dd4ab842871cf22007f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=k8 -m3dnow -msse4.1 -msse5\" } */\n+/* { dg-options \"-O2 -march=k8 -m3dnow -msse4 -msse5\" } */\n \n /* Test that the intrinsics compile with optimization.  All of them are\n    defined as inline functions in {,x,e,p,t,s,a,b}mmintrin.h and mm3dnow.h"}]}