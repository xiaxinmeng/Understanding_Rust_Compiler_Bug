{"sha": "3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyNzUwOGNlNGZhNjE1YTk2ZjlhMmUxYmZhM2M0MzE4NzlhYzZhZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-01T11:34:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-01T11:34:49Z"}, "message": "gcc.c (process_command): Update copyright notice dates.\n\n\t* gcc.c (process_command): Update copyright notice dates.\n\t* gcov-dump.c (print_version): Ditto.\n\t* gcov.c (print_version): Ditto.\n\t* gcov-tool.c (print_version): Ditto.\n\t* gengtype.c (create_file): Ditto.\n\t* doc/cpp.texi: Bump @copying's copyright year.\n\t* doc/cppinternals.texi: Ditto.\n\t* doc/gcc.texi: Ditto.\n\t* doc/gccint.texi: Ditto.\n\t* doc/gcov.texi: Ditto.\n\t* doc/install.texi: Ditto.\n\t* doc/invoke.texi: Ditto.\ngcc/fortran/\n\t* gfortranspec.c (lang_specific_driver): Update copyright notice\n\tdates.\n\t* gfc-internals.texi: Bump @copying's copyright year.\n\t* gfortran.texi: Ditto.\n\t* intrinsic.texi: Ditto.\n\t* invoke.texi: Ditto.\ngcc/go/\n\t* gccgo.texi: Bump @copyrights-go year.\ngcc/ada/\n \t* gnat_ugn.texi: Bump @copying's copyright year.\n \t* gnat_rm.texi: Likewise.\ngcc/d/\n\t* gdc.texi: Bump @copyrights-d year.\nlibitm/\n\t* libitm.texi: Bump @copying's copyright year.\nlibgomp/\n\t* libgomp.texi: Bump @copying's copyright year.\nlibquadmath/\n\t* libquadmath.texi: Bump @copying's copyright year.\n\nFrom-SVN: r267492", "tree": {"sha": "6b6b38db62adbb14a4dc1fece364d3defb9b4cef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b6b38db62adbb14a4dc1fece364d3defb9b4cef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0070af3f1ce600a304ea0e530d07c3fcfb13d4a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0070af3f1ce600a304ea0e530d07c3fcfb13d4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0070af3f1ce600a304ea0e530d07c3fcfb13d4a7"}], "stats": {"total": 96669, "additions": 48369, "deletions": 48300}, "files": [{"sha": "13b69d3415588a6b6fc8ca4cd04df9c1949291ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 36285, "changes": 36287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "ced3782493ad0a1df2f774ca045fcdffaf5d1c08", "filename": "gcc/ChangeLog-2018", "status": "added", "additions": 36303, "deletions": 0, "changes": 36303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2FChangeLog-2018", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2FChangeLog-2018", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2018?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "f9f8fc0c950be8e2134600676016cf7f1f1bb346", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 2, "deletions": 5707, "changes": 5709, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "026f202af58b86f25ca6a9e4fcbb4650563c4f7e", "filename": "gcc/ada/ChangeLog-2018", "status": "added", "additions": 5715, "deletions": 0, "changes": 5715, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2FChangeLog-2018", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2FChangeLog-2018", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2018?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "85bc1442a81192f6681bcd28148e36aef975a183", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -25,7 +25,7 @@ GNAT Reference Manual , Sep 24, 2018\n \n AdaCore\n \n-Copyright @copyright{} 2008-2018, Free Software Foundation\n+Copyright @copyright{} 2008-2019, Free Software Foundation\n @end quotation\n \n @end copying"}, {"sha": "faf01c6f3c52de38bdf52132355425a6cda68b7e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -25,7 +25,7 @@ GNAT User's Guide for Native Platforms , Dec 05, 2018\n \n AdaCore\n \n-Copyright @copyright{} 2008-2018, Free Software Foundation\n+Copyright @copyright{} 2008-2019, Free Software Foundation\n @end quotation\n \n @end copying"}, {"sha": "cc5ec6734cdad6f903fe29b5f9bf00527aa4752e", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 3, "deletions": 638, "changes": 641, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,643 +1,8 @@\n-2018-11-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n-\tPR d/87866\n-\t* d-incpath.cc (add_globalpaths): Use lrealpath to get canonical name.\n-\t(add_filepaths): Likewise.\n-\n-2018-11-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/87824\n-\t* d-target.cc (Target::alignsize): Return min_align_of_type.\n-\n-2018-11-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/87865\n-\t* d-system.h: New file.\n-\n-2018-11-01  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR d/87824\n-\t* lang.opt (Wpsabi): New option.\n-\n-2018-10-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/87825\n-\t* Make-lang.in (d/idgen) Link with BUILD_LINKERFLAGS.\n-\t(d/impcvgen): Likewise.\n-\n-2018-10-26  Eugene Wissner  <belka@caraus.de>\n-\n-\t* Make-lang.in (selftest-d): New.\n-\t* d-diagnostic.cc (vwarning): Fix warning emitting.\n-\n-2018-10-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-spec.cc (lang_specific_driver): Always link against phobos if any\n-\tinput file is given.\n-\n-2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_get_alias_set): Always return zero.\n-\n-2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (maybe_set_intrinsic): Don't set built-in flag on\n-\tunsupported pow() overloads.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::binop_assignment): Call stabilize_reference on\n-\tLHS construct if it has side effects.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (clear_intrinsic_flag): Remove function.\n-\t(maybe_expand_intrinsic): Remove clear_intrinsic_flag call.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (expand_intrinsic_copysign): Use mathfn_built_in to\n-\tdetermine correct built-in to call.\n-\t(expand_intrinsic_pow): Likewise.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (expand_intrinsic_sqrt): Remove implicit int to double\n-\tconversion.\n-\t(expand_intrinsic_pow): Likewise.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (get_frame_for_symbol): Use error_at.\n-\t(build_frame_type): Likewise.\n-\t(get_framedecl): Likewise.\n-\t* d-lang.cc (d_parse_file): Likewise.\n-\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Likewise.\n-\t(DeclVisitor::finish_vtable): Likewise.\n-\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n-\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n-\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n-\t(DeclVisitor::visit(VarDeclaration)): Likewise.\n-\t* toir.cc (IRVisitor::check_goto): Likewise.\n-\t(IRVisitor::check_previous_goto): Likewise.\n-\t(IRVisitor::visit(ThrowStatement)): Likewise.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (get_array_length): Use quoted format flag in message.\n-\t(d_build_call): Likewise.\n-\t* d-lang.cc (d_handle_option): Likewise.\n-\t* decl.cc (DeclVisitor::finish_vtable): Likewise.\n-\t* expr.cc (ExprVisitor::visit(ArrayLengthExp)): Likewise.\n-\t(ExprVisitor::visit(DeleteExp)): Likewise.\n-\t(ExprVisitor::visit(RemoveExp)): Likewise.\n-\t(ExprVisitor::visit(RemoveExp)): Likewise.\n-\t(ExprVisitor::visit(CallExp)): Likewise.\n-\t(ExprVisitor::visit(DotVarExp)): Likewise.\n-\t(ExprVisitor::visit(VarExp)): Likewise.\n-\t(ExprVisitor::visit(ScopeExp)): Likewise.\n-\t(ExprVisitor::visit(TypeExp)): Likewise.\n-\t(build_expr): Likewise.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-diagnostic.cc (d_diagnostic_report_diagnostic): Skip translation\n-\tby instead calling diagnostic_set_info_translated.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-tree.h (bool_type_node): Rename to d_bool_type.\n-\t(byte_type_node): Rename to d_byte_type.\n-\t(ubyte_type_node): Rename to d_ubyte_type.\n-\t(short_type_node): Rename to d_short_type.\n-\t(ushort_type_node): Rename to d_ushort_type.\n-\t(int_type_node): Rename to d_int_type.\n-\t(uint_type_node): Rename to d_uint_type.\n-\t(long_type_node): Rename to d_long_type.\n-\t(ulong_type_node): Rename to d_ulong_type.\n-\t(cent_type_node): Rename to d_cent_type.\n-\t(ucent_type_node): Rename to d_ucent_type.\n-\n-2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::visit(PowExp)): Remove function.\n-\n-2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-attribs.c: Rename to d-attribs.cc.\n-\t* d-spec.c: Rename to d-spec.cc.\n-\n-2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_gimplify_expr): Don't handle TREE_THIS_VOLATILE.\n-\n-2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-diagnostic.cc (vwarning): Update to use Diagnostic enum.\n-\t(vdeprecation): Likewise.\n-\t(vdeprecationSupplemental): Likewise.\n-\t* d-lang.cc (d_init_options): Explicitly set warnings and deprecations\n-\tas DIAGNOSTICoff.\n-\t(d_handle_option): Update to use Diagnostic enum.\n-\t(d_post_options): Likewise.\n-\n-2018-10-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-diagnostic.cc (expand_format): Rename to expand_d_format.\n-\tUpdated all callers.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (get_linemap): Rename function to make_location_t.\n-\tUpdated all callers.\n-\t* d-tree.h (get_linemap): Rename declaration to make_location_t.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::binary_op): Use POINTER_DIFF_EXPR.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (expand_intrinsic_bsf): Assert that built-in function\n-\tcode is not END_BUILTINS.\n-\t(expand_intrinsic_bsr): Likewise.\n-\t(expand_intrinsic_bswap): Likewise.\n-\t(expand_intrinsic_popcnt): Likewise.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* config-lang.in (gtfiles): Add modules.cc.\n-\t* modules.cc: Include gt-d-modules.h.\n-\t(module_info): Mark with GTY.\n-\t(static_ctor_list): Likewise.\n-\t(static_dtor_list): Likewise.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-spec.c (lang_specific_driver): Use strrchr and strcmp to check\n-\tinput file suffix.\n-\n-2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-spec.c (phobos_action): New enum.\n-\t(library): Rename to phobos_library.\n-\t(lang_specific_driver): Update to use phobos_library.\n-\t(lang_specific_pre_link): Likewise.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-frontend.cc (Port::writelongLE): Remove function.\n-\t(Port::writelongBE): Remove function.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-convert.cc (convert): Remove goto maybe_fold.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (warn_for_null_address): New function.\n-\t(build_boolop): Warn about comparing address of decl to null.\n-\t* d-convert.cc (decl_with_nonnull_addr_p): New function.\n-\t(d_truthvalue_conversion): Warn about evaluating address as boolean.\n-\t* d-tree.h (decl_with_nonnull_addr_p): Add declaration.\n-\t* lang.opt (Waddress): New option.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (d_array_length): Assert that argument type is a\n-\tdynamic array.\n-\t(d_array_ptr): Likewise.\n-\t(d_array_value): Likewise.\n-\t(delegate_method): Assert that argument type is a delegate.\n-\t(delegate_object): Likewise.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-attribs.c (handle_malloc_attribute): Use gcc_assert instead of\n-\tgcc_unreachable.\n-\t(handle_pure_attribute): Likewise.\n-\t(handle_nothrow_attribute): Likewise.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in: Rename compiler proper to d21.\n-\t* config-lang.in (compilers): Rename compiler to d21.\n-\t* d-spec.c (lang_specific_driver): Update comments.\n-\t* lang-specs.h: Rename compiler to d21.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* lang.opt: Add missing periods to the ends of sentences.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_handle_option): Remove handling of -fdeps.\n-\t(d_parse_file): Don't generate module dependencies.\n-\t* lang.opt (fdeps, fdeps=): Remove options.\n-\t(fintfc, fintfc-dir=, fintfc-file=): Remove options.\n-\t(ftransition=safe): Remove option.\n-\n-2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_init_ts): Remove handling of IASM_EXPR.\n-\t(d_gimplify_expr): Likewise.\n-\t* d-tree.def (IASM_EXPR): Remove tree code.\n-\n-2018-10-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-attrib.c (attr_noreturn_exclusions): Attribute not mutually\n-\texclusive with self.\n-\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Assert that\n-\tbase class vtable is found in interface.\n-\n-2018-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (DeclVisitor): Add using Visitor::visit.\n-\t* expr.cc (ExprVisitor): Likewise.\n-\t* imports.cc (ImportVisitor): Likewise.\n-\t* toir.cc (IRVisitor): Likewise.\n-\t* typeinfo.cc (TypeInfoVisitor): Likewise.\n-\t(TypeInfoDeclVisitor): Likewise.\n-\t(SpeculativeTypeVisitor): Likewise.\n-\t* types.cc (TypeVisitor): Likewise.\n-\n-2018-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-frontend.cc: Include compiler.h, errors.h, expression.h.\n-\t(genCmain): Rename function to Compiler::genCmain.\n-\t(Compiler::paintAsType): New function.\n-\t(Compiler::loadModule): New function.\n-\t(getTypeInfoType): Call error function directly.\n-\t* d-lang.cc (deps_write): Use hash_set for dependency tracking.\n-\t(d_parse_file): Call Compiler::loadModule.\n-\t* d-target.cc: Remove include identifier.h, module.h.\n-\t(Target::paintAsType): Remove function.\n-\t(Target::loadModule): Remove function.\n-\t(Target::getTargetInfo): New function.\n-\n-2018-10-01  Eugene Wissner  <belka@caraus.de>\n-\n-\t* decl.cc (finish_thunk): Adjust call to cgraph_node::create_thunk.\n-\n-2018-09-25  Eugene Wissner  <belka@caraus.de>\n-\n-\t* d-codegen.cc (d_assert_call): Don't make STRING_CSTs larger than they\n-\tare.\n-\t* expr.cc (ExprVisitor::visit(StringExp)): Likewise.\n-\t* typeinfo.cc (TypeInfoVisitor::layout_string): Likewise.\n-\n-2018-09-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc: Include expression.h, identifier.h.\n-\t* d-codegen.cc: Include identifier.h.\n-\t* d-convert.cc: Include declaration.h.\n-\t* d-frontend.cc: Include identifier.h.\n-\t* d-lang.cc: Include declaration.h, expression.h, identifier.h.\n-\t(d_parse_file): Call moduleToBuffer to get string dump of contents.\n-\t* d-target.cc: Include declaration.h, expression.h, identifier.h.\n-\t* expr.cc: Include identifier.h.\n-\t* imports.cc: Include identifier.h.\n-\t* intrinsics.cc: Include identifier.h.\n-\t* modules.cc: Include identifier.h.\n-\t* toir.cc: Include expression.h, identifier.h.\n-\t* typeinfo.cc: Include expression.h, identifier.h.\n-\t* types.cc: Include expression.h, identifier.h.\n-\n-2018-09-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (D_INCLUDES): Rename dfrontend to dmd.\n-\t(d/%.o): Likewise.\n-\t(d/%.dmdgen.o): Likewise.\n-\t* verstr.h: Update to 2.076.1\n-\n-2018-09-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* intrinsics.cc (maybe_expand_intrinsic): Handle INTRINSIC_EXP.\n-\t* intrinsics.def (EXP): Add CTFE intrinsic.\n-\n-2018-09-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc: Include errors.h, mars.h.\n-\t* decl.cc: Include errors.h.\n-\t* typeinfo.cc: Include globals.h, errors.h.\n-\n-2018-09-05  Eugene Wissner  <belka@caraus.de>\n-\n-\t* d-frontend.cc (eval_builtin): Replace DECL_BUILT_IN with\n-\tfndecl_built_in_p.\n-\n-2018-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-target.cc (Target::prefixName): Remove function.\n-\t(Target::cppParameterType): New function.\n-\n-2018-08-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (D_FRONTEND_OBJS): Add iasm.o, iasmgcc.o\n-\t* lang.opt (fproperty): Remove option.\n-\t* d-lang.cc (d_handle_option): Remove case for OPT_fproperty.\n-\t* toir.cc (IRVisitor::visit(ExtAsmStatement)): Rename override to\n-\tGccAsmStatement.\n-\n-2018-07-23  Eugene Wissner  <belka@caraus.de>\n-\n-\t* d-lang.cc (d_handle_option): Change function argument to HOST_WIDE_INT.\n-\t* lang.opt (Walloca-larger-than=, Wno-alloca-larger-than): New options.\n-\t* opt.texi (Walloca-larger-than=, Wno-alloca-larger-than): Likewise.\n-\n-2018-07-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (get_symbol_decl): Set all generated static symbols as\n-\tDECL_EXTERNAL. Move logic for determining TREE_STATIC ...\n-\t(start_function): ... here.\n-\t(d_finish_decl): Update TLS model after finishing variable linkage.\n-\n-2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (d.tags): Rename dfrontend to dmd.\n-\t* d-attribs.c: Rename dfrontend includes to dmd.\n-\t* d-builtins.cc: Likewise.\n-\t* d-codegen.cc: Likewise.\n-\t* d-convert.cc: Likewise.\n-\t* d-diagnostic.cc: Likewise.\n-\t* d-frontend.cc: Likewise.\n-\t* d-incpath.cc: Likewise.\n-\t* d-lang.cc: Likewise.\n-\t* d-longdouble.cc: Likewise.\n-\t* d-target.cc: Likewise.\n-\t* decl.cc: Likewise.\n-\t* expr.cc: Likewise.\n-\t* imports.cc: Likewise.\n-\t* intrinsics.cc: Likewise.\n-\t* modules.cc: Likewise.\n-\t* runtime.cc: Likewise.\n-\t* toir.cc: Likewise.\n-\t* typeinfo.cc: Likewise.\n-\t* types.cc: Likewise.\n-\n-2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* types.cc (same_type_p): Check type codes match before checking\n-\tequivalence.\n-\n-2018-07-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Makefile.in (d/verstr.h): Remove recipe.\n-\t(d.mostlyclean): Remove cleanup of verstr.h.\n-\t* verstr.h: New file.\n-\n-2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (lower_struct_comparison): Evaluate side effects of\n-\tempty struct.\n-\t(build_struct_comparison): Likewise.\n-\n-2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Only generate an\n-\tinterface vtable for classes.\n-\t(TypeInfoVisitor::visit(TypeInfoClassDeclaration)): Likewise.\n-\n-2018-07-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (deps_write): Ignore __main module.\n-\t(d_handle_option): Handle -fmain option.\n-\t(d_parse_file): Generate D main function if requested.\n-\t* lang.opt (fmain): New option.\n-\n-2018-07-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (d_build_builtins_module): Export __builtin_clonglong\n-\tand __builtin_culonglong to gcc builtins module.\n-\n-2018-07-04  Eugene Wissner  <belka@caraus.de>\n-\n-\t* d-spec.c: Include opt-suggestions.h containing option_proposer used by\n-\tgcc.h.\n-\n-2018-07-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (get_symbol_decl): Implicitly convert return type of 'void'\n-\tmain to 'int' for both C and D entry functions.\n-\t* toir.cc (IRVisitor::visit(ReturnStatement)): Likewise.\n-\n-2018-06-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::visit(FuncExp)): Don't error about nested\n-\tdelegate literals.\n-\n-2018-06-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-frontend.cc (eval_builtin): Allow both gcc and frontend builtins.\n-\t* intrinsics.cc (call_builtin_fn): Use convert.\n-\t(expand_intrinsic_sqrt): Use fold_convert.\n-\t(expand_intrinsic_copysign): New function.\n-\t(expand_intrinsic_pow): New function.\n-\t(maybe_expand_intrinsic): Handle many math intrinsics.\n-\t* intrinsics.def (EXPM1, EXP2, LOG, LOG2, LOG10, ROUND, FLOORF),\n-\t(FLOOR, FLOORL, CEILF, CEIL, CEILL, TRUNC, FMIN, FMAX, COPYSIGN),\n-\t(POW, FMA): Add math intrinsics.\n-\n-2018-06-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (find_aggregate_field): Move to decl.cc\n-\t(build_class_instance): Move to decl.cc, make static.\n-\t* d-tree.h (build_class_instance): Remove declaration.\n-\t* decl.cc (DeclVisitor::finish_vtable): New function.\n-\n-2018-06-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* types.cc (TypeVisitor::visit(TypeClass)): Handle get_symbol_decl\n-\treturning an error_mark_node.\n-\n-2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Move function\n-\tunnesting to...\n-\t(get_symbol_decl): ... here.\n-\n-2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_post_options): Set global showColumns parameter.\n-\n-2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-diagnostic.cc (expand_format): Handle whitespace format specifier.\n-\t(d_diagnostic_report_diagnostic): Change signature, updated all\n-\tcallers.  Handle writing messages verbatim.\n-\t(vmessage): New function.\n-\t* d-lang.cc (d_parse_file): Use message to emit verbose diagnostics.\n-\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Likewise.\n-\t(get_symbol_decl): Likewise.\n-\n-2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (build_frontend_type): Use Type::merge2 to merge\n-\tgenerated front-end types.\n-\t* d-codegen.cc (declaration_type): Likewise.\n-\t(type_passed_as): Likewise.\n-\t* d-convert.cc (convert_expr): Use ClassDeclaration::isCPPclass.\n-\t* d-lang.cc (d_build_eh_runtime_type): Likewise.\n-\t* toir.cc (IRVisitor::visit): Use ClassDecalration::isCPPclass.\n-\t* typeinfo.cc (TypeInfoVisitor::visit): Use Type::merge2 to merge\n-\tgenerated front-end types.\n-\t* types.cc (layout_aggregate_type): Use ClassDeclaration::isCPPclass.\n-\n-2018-05-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::visit(StringExp)): Copy string literal from\n-\tthe frontend to a null terminated string.\n-\n-2018-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::binary_op): Don't do complex conversions if\n-\talready handling excess precision.\n-\n-2018-04-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (doing_semantic_analysis_p): New variable.\n-\t(d_parse_file): Set when in semantic pass.\n-\t* d-tree.h (doing_semantic_analysis_p): Add declaration.\n-\t* intrinsics.cc (maybe_expand_intrinsic): Test for\n-\tdoing_semantic_analysis_p.\n-\n-2018-03-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (stabilize_expr): Move modify expression rewrite...\n-\t* expr.cc (ExprVisitor::binop_assignment): ... here.\n-\n-2018-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::visit(StringExp)): Include null terminator\n-\tin length when calling build_String.  Generate static array string\n-\tliterals as array constructors.\n-\n-2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_handle_option): Rename OPT_fintfc cases to OPT_H.\n-\t* gdc.texi (Code Generation): Rename -fintfc options to -H.\n-\t* lang-specs.h: Add H, Hd, and Hf options.\n-\t* lang.opt (H, Hd, Hf): New options.\n-\t(fintfc, fintfc-dir=, fintfc-file=): Deprecate and alias new options.\n-\n-2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* lang.opt (fdeps, fdeps=): Deprecate options.\n-\t* gdc.texi (Code Generation): Remove deprecated fdeps options.\n-\n-2018-02-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (D_FRONTEND_OBJS): Remove inline.o and inlinecost.o.\n-\n-2018-02-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-frontend.cc (CTFloat::fabs): Assign result to real_t directly.\n-\t(CTFloat::ldexp): Likewise.\n-\t* d-longdouble.cc (longdouble::from_int): Remove function.\n-\t(longdouble::from_uint): Likewise.\n-\t(longdouble::to_int): Update Signature.\n-\t(longdouble::to_uint): Likewise.\n-\t(longdouble::operator): Likewise.\n-\t(longdouble::add): New function, move operator overload headers.\n-\t(longdouble::sub, longdouble::mul, longdouble::div): Likewise.\n-\t(longdouble::mod, longdouble::neg): Likewise.\n-\t(longdouble::cmp, longdouble::equals): Likewise.\n-\t* d-target.cc (Target::_init): Construct assignment into real_t\n-\tdirectly.\n-\n-2018-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (DMD_WARN_CXXFLAGS): Only filter out\n-\t-Wmissing-format-attribute from WARN_CXXFLAGS.\n-\n-2018-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (build_frontend_type): Set alignment of structs in\n-\tfrontend.\n-\n-2018-02-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-incpath.cc (add_environment_paths): Remove function.\n-\t* gdc.texi (Environment Variables): Remove section.\n-\n-2018-02-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* expr.cc (ExprVisitor::AssertExp): Use builtin expect to mark assert\n-\tcondition as being likely true.\n-\n-2018-02-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* lang.opt (fd-vgc, fd-verbose, fd-vtls): Remove options.\n-\t(femit-moduleinfo, femit-templates): Likewise.\n-\t(fmake-deps, fmake-mdeps): Likewise.\n-\t(fin, fout, fXf): Likewise.\n-\n-2018-01-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* gdc.texi (Runtime Options): Remove deprecated -fproperty option.\n-\n-2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_gimplify_expr): Gimplify all CALL_EXPR_ARGS_ORDERED\n-\tcall arguments, not just non-constant.\n-\n-2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Don't reuse existing\n-\ttemporary for TARGET_EXPR.\n-\t(declare_local_var): Push all variables to current binding level.\n-\n-2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* toir.cc (build_function_body): Set input_location.\n-\n-2018-01-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (build_frame_type): Don't add chain field for\n-\tfunctions without context pointer.\n-\t(build_closure): Don't set chain field for functions without context\n-\tpointer.\n-\n-2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Mark compiler\n-\tgenerated symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n-\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n-\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n-\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n-\t(get_symbol_decl): Mark template instantiations as DECL_ONE_ONLY\n-\tinstead of DECL_COMDAT.  Don't call mark_needed.\n-\t(declare_extern_var): Don't call mark_needed.\n-\t(d_finish_decl): Remove zero initializer for common symbols.\n-\t(finish_thunk): Don't call d_comdat_linkage on generic thunk.\n-\t(d_comdat_linkage): Don't set DECL_DECLARED_INLINE on functions.\n-\t* typeinfo.cc (TypeInfoDeclVisitor::visit(TypeInfoDeclaration)): Mark\n-\tbuilt-in typeinfo symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n-\n-2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_init): Disable flag_weak if not supported.\n-\t* decl.cc (d_comdat_linkage): Use flag_weak to guard setting\n-\tDECL_ONE_ONLY on decls.\n-\t(d_linkonce_linkage): New function.\n-\t* gdc.texi (Runtime Options): Document -fweak.\n-\t* lang.opt (fweak): Declare.\n-\n-2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decls.cc (get_symbol_decl): Use attribute to mark naked functions.\n-\n-2018-01-08  Eugene Wissner  <belka@caraus.de>\n-\n-\t* d-builtins.cc (d_eval_constant_expression): Handle polynomial\n-\tVECTOR_CST_NELTS.\n-\t(build_frontend_type): Handle polynomial TYPE_VECTOR_SUBPARTS.\n-\n-2018-01-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tUpdate copyright years.\n+\t* gdc.texi: Bump @copyrights-d year.\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "d1afa38886d48e5655430de9627227e10303c80c", "filename": "gcc/d/ChangeLog-2018", "status": "added", "additions": 644, "deletions": 0, "changes": 644, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2FChangeLog-2018", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2FChangeLog-2018", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2018?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -0,0 +1,644 @@\n+2018-11-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87866\n+\t* d-incpath.cc (add_globalpaths): Use lrealpath to get canonical name.\n+\t(add_filepaths): Likewise.\n+\n+2018-11-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87824\n+\t* d-target.cc (Target::alignsize): Return min_align_of_type.\n+\n+2018-11-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87865\n+\t* d-system.h: New file.\n+\n+2018-11-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR d/87824\n+\t* lang.opt (Wpsabi): New option.\n+\n+2018-10-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87825\n+\t* Make-lang.in (d/idgen) Link with BUILD_LINKERFLAGS.\n+\t(d/impcvgen): Likewise.\n+\n+2018-10-26  Eugene Wissner  <belka@caraus.de>\n+\n+\t* Make-lang.in (selftest-d): New.\n+\t* d-diagnostic.cc (vwarning): Fix warning emitting.\n+\n+2018-10-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.cc (lang_specific_driver): Always link against phobos if any\n+\tinput file is given.\n+\n+2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_get_alias_set): Always return zero.\n+\n+2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (maybe_set_intrinsic): Don't set built-in flag on\n+\tunsupported pow() overloads.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binop_assignment): Call stabilize_reference on\n+\tLHS construct if it has side effects.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (clear_intrinsic_flag): Remove function.\n+\t(maybe_expand_intrinsic): Remove clear_intrinsic_flag call.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_copysign): Use mathfn_built_in to\n+\tdetermine correct built-in to call.\n+\t(expand_intrinsic_pow): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_sqrt): Remove implicit int to double\n+\tconversion.\n+\t(expand_intrinsic_pow): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_frame_for_symbol): Use error_at.\n+\t(build_frame_type): Likewise.\n+\t(get_framedecl): Likewise.\n+\t* d-lang.cc (d_parse_file): Likewise.\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Likewise.\n+\t(DeclVisitor::finish_vtable): Likewise.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t(DeclVisitor::visit(VarDeclaration)): Likewise.\n+\t* toir.cc (IRVisitor::check_goto): Likewise.\n+\t(IRVisitor::check_previous_goto): Likewise.\n+\t(IRVisitor::visit(ThrowStatement)): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_array_length): Use quoted format flag in message.\n+\t(d_build_call): Likewise.\n+\t* d-lang.cc (d_handle_option): Likewise.\n+\t* decl.cc (DeclVisitor::finish_vtable): Likewise.\n+\t* expr.cc (ExprVisitor::visit(ArrayLengthExp)): Likewise.\n+\t(ExprVisitor::visit(DeleteExp)): Likewise.\n+\t(ExprVisitor::visit(RemoveExp)): Likewise.\n+\t(ExprVisitor::visit(RemoveExp)): Likewise.\n+\t(ExprVisitor::visit(CallExp)): Likewise.\n+\t(ExprVisitor::visit(DotVarExp)): Likewise.\n+\t(ExprVisitor::visit(VarExp)): Likewise.\n+\t(ExprVisitor::visit(ScopeExp)): Likewise.\n+\t(ExprVisitor::visit(TypeExp)): Likewise.\n+\t(build_expr): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (d_diagnostic_report_diagnostic): Skip translation\n+\tby instead calling diagnostic_set_info_translated.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (bool_type_node): Rename to d_bool_type.\n+\t(byte_type_node): Rename to d_byte_type.\n+\t(ubyte_type_node): Rename to d_ubyte_type.\n+\t(short_type_node): Rename to d_short_type.\n+\t(ushort_type_node): Rename to d_ushort_type.\n+\t(int_type_node): Rename to d_int_type.\n+\t(uint_type_node): Rename to d_uint_type.\n+\t(long_type_node): Rename to d_long_type.\n+\t(ulong_type_node): Rename to d_ulong_type.\n+\t(cent_type_node): Rename to d_cent_type.\n+\t(ucent_type_node): Rename to d_ucent_type.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(PowExp)): Remove function.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c: Rename to d-attribs.cc.\n+\t* d-spec.c: Rename to d-spec.cc.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gimplify_expr): Don't handle TREE_THIS_VOLATILE.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (vwarning): Update to use Diagnostic enum.\n+\t(vdeprecation): Likewise.\n+\t(vdeprecationSupplemental): Likewise.\n+\t* d-lang.cc (d_init_options): Explicitly set warnings and deprecations\n+\tas DIAGNOSTICoff.\n+\t(d_handle_option): Update to use Diagnostic enum.\n+\t(d_post_options): Likewise.\n+\n+2018-10-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (expand_format): Rename to expand_d_format.\n+\tUpdated all callers.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_linemap): Rename function to make_location_t.\n+\tUpdated all callers.\n+\t* d-tree.h (get_linemap): Rename declaration to make_location_t.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binary_op): Use POINTER_DIFF_EXPR.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_bsf): Assert that built-in function\n+\tcode is not END_BUILTINS.\n+\t(expand_intrinsic_bsr): Likewise.\n+\t(expand_intrinsic_bswap): Likewise.\n+\t(expand_intrinsic_popcnt): Likewise.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in (gtfiles): Add modules.cc.\n+\t* modules.cc: Include gt-d-modules.h.\n+\t(module_info): Mark with GTY.\n+\t(static_ctor_list): Likewise.\n+\t(static_dtor_list): Likewise.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_driver): Use strrchr and strcmp to check\n+\tinput file suffix.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (phobos_action): New enum.\n+\t(library): Rename to phobos_library.\n+\t(lang_specific_driver): Update to use phobos_library.\n+\t(lang_specific_pre_link): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (Port::writelongLE): Remove function.\n+\t(Port::writelongBE): Remove function.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (convert): Remove goto maybe_fold.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (warn_for_null_address): New function.\n+\t(build_boolop): Warn about comparing address of decl to null.\n+\t* d-convert.cc (decl_with_nonnull_addr_p): New function.\n+\t(d_truthvalue_conversion): Warn about evaluating address as boolean.\n+\t* d-tree.h (decl_with_nonnull_addr_p): Add declaration.\n+\t* lang.opt (Waddress): New option.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_array_length): Assert that argument type is a\n+\tdynamic array.\n+\t(d_array_ptr): Likewise.\n+\t(d_array_value): Likewise.\n+\t(delegate_method): Assert that argument type is a delegate.\n+\t(delegate_object): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (handle_malloc_attribute): Use gcc_assert instead of\n+\tgcc_unreachable.\n+\t(handle_pure_attribute): Likewise.\n+\t(handle_nothrow_attribute): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in: Rename compiler proper to d21.\n+\t* config-lang.in (compilers): Rename compiler to d21.\n+\t* d-spec.c (lang_specific_driver): Update comments.\n+\t* lang-specs.h: Rename compiler to d21.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt: Add missing periods to the ends of sentences.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Remove handling of -fdeps.\n+\t(d_parse_file): Don't generate module dependencies.\n+\t* lang.opt (fdeps, fdeps=): Remove options.\n+\t(fintfc, fintfc-dir=, fintfc-file=): Remove options.\n+\t(ftransition=safe): Remove option.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_ts): Remove handling of IASM_EXPR.\n+\t(d_gimplify_expr): Likewise.\n+\t* d-tree.def (IASM_EXPR): Remove tree code.\n+\n+2018-10-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attrib.c (attr_noreturn_exclusions): Attribute not mutually\n+\texclusive with self.\n+\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Assert that\n+\tbase class vtable is found in interface.\n+\n+2018-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor): Add using Visitor::visit.\n+\t* expr.cc (ExprVisitor): Likewise.\n+\t* imports.cc (ImportVisitor): Likewise.\n+\t* toir.cc (IRVisitor): Likewise.\n+\t* typeinfo.cc (TypeInfoVisitor): Likewise.\n+\t(TypeInfoDeclVisitor): Likewise.\n+\t(SpeculativeTypeVisitor): Likewise.\n+\t* types.cc (TypeVisitor): Likewise.\n+\n+2018-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc: Include compiler.h, errors.h, expression.h.\n+\t(genCmain): Rename function to Compiler::genCmain.\n+\t(Compiler::paintAsType): New function.\n+\t(Compiler::loadModule): New function.\n+\t(getTypeInfoType): Call error function directly.\n+\t* d-lang.cc (deps_write): Use hash_set for dependency tracking.\n+\t(d_parse_file): Call Compiler::loadModule.\n+\t* d-target.cc: Remove include identifier.h, module.h.\n+\t(Target::paintAsType): Remove function.\n+\t(Target::loadModule): Remove function.\n+\t(Target::getTargetInfo): New function.\n+\n+2018-10-01  Eugene Wissner  <belka@caraus.de>\n+\n+\t* decl.cc (finish_thunk): Adjust call to cgraph_node::create_thunk.\n+\n+2018-09-25  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-codegen.cc (d_assert_call): Don't make STRING_CSTs larger than they\n+\tare.\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Likewise.\n+\t* typeinfo.cc (TypeInfoVisitor::layout_string): Likewise.\n+\n+2018-09-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc: Include expression.h, identifier.h.\n+\t* d-codegen.cc: Include identifier.h.\n+\t* d-convert.cc: Include declaration.h.\n+\t* d-frontend.cc: Include identifier.h.\n+\t* d-lang.cc: Include declaration.h, expression.h, identifier.h.\n+\t(d_parse_file): Call moduleToBuffer to get string dump of contents.\n+\t* d-target.cc: Include declaration.h, expression.h, identifier.h.\n+\t* expr.cc: Include identifier.h.\n+\t* imports.cc: Include identifier.h.\n+\t* intrinsics.cc: Include identifier.h.\n+\t* modules.cc: Include identifier.h.\n+\t* toir.cc: Include expression.h, identifier.h.\n+\t* typeinfo.cc: Include expression.h, identifier.h.\n+\t* types.cc: Include expression.h, identifier.h.\n+\n+2018-09-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_INCLUDES): Rename dfrontend to dmd.\n+\t(d/%.o): Likewise.\n+\t(d/%.dmdgen.o): Likewise.\n+\t* verstr.h: Update to 2.076.1\n+\n+2018-09-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (maybe_expand_intrinsic): Handle INTRINSIC_EXP.\n+\t* intrinsics.def (EXP): Add CTFE intrinsic.\n+\n+2018-09-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc: Include errors.h, mars.h.\n+\t* decl.cc: Include errors.h.\n+\t* typeinfo.cc: Include globals.h, errors.h.\n+\n+2018-09-05  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-frontend.cc (eval_builtin): Replace DECL_BUILT_IN with\n+\tfndecl_built_in_p.\n+\n+2018-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::prefixName): Remove function.\n+\t(Target::cppParameterType): New function.\n+\n+2018-08-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Add iasm.o, iasmgcc.o\n+\t* lang.opt (fproperty): Remove option.\n+\t* d-lang.cc (d_handle_option): Remove case for OPT_fproperty.\n+\t* toir.cc (IRVisitor::visit(ExtAsmStatement)): Rename override to\n+\tGccAsmStatement.\n+\n+2018-07-23  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-lang.cc (d_handle_option): Change function argument to HOST_WIDE_INT.\n+\t* lang.opt (Walloca-larger-than=, Wno-alloca-larger-than): New options.\n+\t* opt.texi (Walloca-larger-than=, Wno-alloca-larger-than): Likewise.\n+\n+2018-07-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_symbol_decl): Set all generated static symbols as\n+\tDECL_EXTERNAL. Move logic for determining TREE_STATIC ...\n+\t(start_function): ... here.\n+\t(d_finish_decl): Update TLS model after finishing variable linkage.\n+\n+2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (d.tags): Rename dfrontend to dmd.\n+\t* d-attribs.c: Rename dfrontend includes to dmd.\n+\t* d-builtins.cc: Likewise.\n+\t* d-codegen.cc: Likewise.\n+\t* d-convert.cc: Likewise.\n+\t* d-diagnostic.cc: Likewise.\n+\t* d-frontend.cc: Likewise.\n+\t* d-incpath.cc: Likewise.\n+\t* d-lang.cc: Likewise.\n+\t* d-longdouble.cc: Likewise.\n+\t* d-target.cc: Likewise.\n+\t* decl.cc: Likewise.\n+\t* expr.cc: Likewise.\n+\t* imports.cc: Likewise.\n+\t* intrinsics.cc: Likewise.\n+\t* modules.cc: Likewise.\n+\t* runtime.cc: Likewise.\n+\t* toir.cc: Likewise.\n+\t* typeinfo.cc: Likewise.\n+\t* types.cc: Likewise.\n+\n+2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (same_type_p): Check type codes match before checking\n+\tequivalence.\n+\n+2018-07-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.in (d/verstr.h): Remove recipe.\n+\t(d.mostlyclean): Remove cleanup of verstr.h.\n+\t* verstr.h: New file.\n+\n+2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (lower_struct_comparison): Evaluate side effects of\n+\tempty struct.\n+\t(build_struct_comparison): Likewise.\n+\n+2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Only generate an\n+\tinterface vtable for classes.\n+\t(TypeInfoVisitor::visit(TypeInfoClassDeclaration)): Likewise.\n+\n+2018-07-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (deps_write): Ignore __main module.\n+\t(d_handle_option): Handle -fmain option.\n+\t(d_parse_file): Generate D main function if requested.\n+\t* lang.opt (fmain): New option.\n+\n+2018-07-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Export __builtin_clonglong\n+\tand __builtin_culonglong to gcc builtins module.\n+\n+2018-07-04  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-spec.c: Include opt-suggestions.h containing option_proposer used by\n+\tgcc.h.\n+\n+2018-07-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_symbol_decl): Implicitly convert return type of 'void'\n+\tmain to 'int' for both C and D entry functions.\n+\t* toir.cc (IRVisitor::visit(ReturnStatement)): Likewise.\n+\n+2018-06-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(FuncExp)): Don't error about nested\n+\tdelegate literals.\n+\n+2018-06-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (eval_builtin): Allow both gcc and frontend builtins.\n+\t* intrinsics.cc (call_builtin_fn): Use convert.\n+\t(expand_intrinsic_sqrt): Use fold_convert.\n+\t(expand_intrinsic_copysign): New function.\n+\t(expand_intrinsic_pow): New function.\n+\t(maybe_expand_intrinsic): Handle many math intrinsics.\n+\t* intrinsics.def (EXPM1, EXP2, LOG, LOG2, LOG10, ROUND, FLOORF),\n+\t(FLOOR, FLOORL, CEILF, CEIL, CEILL, TRUNC, FMIN, FMAX, COPYSIGN),\n+\t(POW, FMA): Add math intrinsics.\n+\n+2018-06-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (find_aggregate_field): Move to decl.cc\n+\t(build_class_instance): Move to decl.cc, make static.\n+\t* d-tree.h (build_class_instance): Remove declaration.\n+\t* decl.cc (DeclVisitor::finish_vtable): New function.\n+\n+2018-06-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(TypeClass)): Handle get_symbol_decl\n+\treturning an error_mark_node.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Move function\n+\tunnesting to...\n+\t(get_symbol_decl): ... here.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_post_options): Set global showColumns parameter.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (expand_format): Handle whitespace format specifier.\n+\t(d_diagnostic_report_diagnostic): Change signature, updated all\n+\tcallers.  Handle writing messages verbatim.\n+\t(vmessage): New function.\n+\t* d-lang.cc (d_parse_file): Use message to emit verbose diagnostics.\n+\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Likewise.\n+\t(get_symbol_decl): Likewise.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_frontend_type): Use Type::merge2 to merge\n+\tgenerated front-end types.\n+\t* d-codegen.cc (declaration_type): Likewise.\n+\t(type_passed_as): Likewise.\n+\t* d-convert.cc (convert_expr): Use ClassDeclaration::isCPPclass.\n+\t* d-lang.cc (d_build_eh_runtime_type): Likewise.\n+\t* toir.cc (IRVisitor::visit): Use ClassDecalration::isCPPclass.\n+\t* typeinfo.cc (TypeInfoVisitor::visit): Use Type::merge2 to merge\n+\tgenerated front-end types.\n+\t* types.cc (layout_aggregate_type): Use ClassDeclaration::isCPPclass.\n+\n+2018-05-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Copy string literal from\n+\tthe frontend to a null terminated string.\n+\n+2018-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binary_op): Don't do complex conversions if\n+\talready handling excess precision.\n+\n+2018-04-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (doing_semantic_analysis_p): New variable.\n+\t(d_parse_file): Set when in semantic pass.\n+\t* d-tree.h (doing_semantic_analysis_p): Add declaration.\n+\t* intrinsics.cc (maybe_expand_intrinsic): Test for\n+\tdoing_semantic_analysis_p.\n+\n+2018-03-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (stabilize_expr): Move modify expression rewrite...\n+\t* expr.cc (ExprVisitor::binop_assignment): ... here.\n+\n+2018-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Include null terminator\n+\tin length when calling build_String.  Generate static array string\n+\tliterals as array constructors.\n+\n+2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Rename OPT_fintfc cases to OPT_H.\n+\t* gdc.texi (Code Generation): Rename -fintfc options to -H.\n+\t* lang-specs.h: Add H, Hd, and Hf options.\n+\t* lang.opt (H, Hd, Hf): New options.\n+\t(fintfc, fintfc-dir=, fintfc-file=): Deprecate and alias new options.\n+\n+2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fdeps, fdeps=): Deprecate options.\n+\t* gdc.texi (Code Generation): Remove deprecated fdeps options.\n+\n+2018-02-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Remove inline.o and inlinecost.o.\n+\n+2018-02-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (CTFloat::fabs): Assign result to real_t directly.\n+\t(CTFloat::ldexp): Likewise.\n+\t* d-longdouble.cc (longdouble::from_int): Remove function.\n+\t(longdouble::from_uint): Likewise.\n+\t(longdouble::to_int): Update Signature.\n+\t(longdouble::to_uint): Likewise.\n+\t(longdouble::operator): Likewise.\n+\t(longdouble::add): New function, move operator overload headers.\n+\t(longdouble::sub, longdouble::mul, longdouble::div): Likewise.\n+\t(longdouble::mod, longdouble::neg): Likewise.\n+\t(longdouble::cmp, longdouble::equals): Likewise.\n+\t* d-target.cc (Target::_init): Construct assignment into real_t\n+\tdirectly.\n+\n+2018-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (DMD_WARN_CXXFLAGS): Only filter out\n+\t-Wmissing-format-attribute from WARN_CXXFLAGS.\n+\n+2018-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_frontend_type): Set alignment of structs in\n+\tfrontend.\n+\n+2018-02-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-incpath.cc (add_environment_paths): Remove function.\n+\t* gdc.texi (Environment Variables): Remove section.\n+\n+2018-02-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::AssertExp): Use builtin expect to mark assert\n+\tcondition as being likely true.\n+\n+2018-02-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fd-vgc, fd-verbose, fd-vtls): Remove options.\n+\t(femit-moduleinfo, femit-templates): Likewise.\n+\t(fmake-deps, fmake-mdeps): Likewise.\n+\t(fin, fout, fXf): Likewise.\n+\n+2018-01-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.texi (Runtime Options): Remove deprecated -fproperty option.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gimplify_expr): Gimplify all CALL_EXPR_ARGS_ORDERED\n+\tcall arguments, not just non-constant.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Don't reuse existing\n+\ttemporary for TARGET_EXPR.\n+\t(declare_local_var): Push all variables to current binding level.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (build_function_body): Set input_location.\n+\n+2018-01-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_frame_type): Don't add chain field for\n+\tfunctions without context pointer.\n+\t(build_closure): Don't set chain field for functions without context\n+\tpointer.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Mark compiler\n+\tgenerated symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t(get_symbol_decl): Mark template instantiations as DECL_ONE_ONLY\n+\tinstead of DECL_COMDAT.  Don't call mark_needed.\n+\t(declare_extern_var): Don't call mark_needed.\n+\t(d_finish_decl): Remove zero initializer for common symbols.\n+\t(finish_thunk): Don't call d_comdat_linkage on generic thunk.\n+\t(d_comdat_linkage): Don't set DECL_DECLARED_INLINE on functions.\n+\t* typeinfo.cc (TypeInfoDeclVisitor::visit(TypeInfoDeclaration)): Mark\n+\tbuilt-in typeinfo symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init): Disable flag_weak if not supported.\n+\t* decl.cc (d_comdat_linkage): Use flag_weak to guard setting\n+\tDECL_ONE_ONLY on decls.\n+\t(d_linkonce_linkage): New function.\n+\t* gdc.texi (Runtime Options): Document -fweak.\n+\t* lang.opt (fweak): Declare.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decls.cc (get_symbol_decl): Use attribute to mark naked functions.\n+\n+2018-01-08  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-builtins.cc (d_eval_constant_expression): Handle polynomial\n+\tVECTOR_CST_NELTS.\n+\t(build_frontend_type): Handle polynomial TYPE_VECTOR_SUBPARTS.\n+\n+2018-01-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tUpdate copyright years.\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "faadffa2502e707494c4d306435166b9998a25b4", "filename": "gcc/d/gdc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2Fgdc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fd%2Fgdc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fgdc.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -12,7 +12,7 @@\n @include gcc-common.texi\n \n @c Copyright years for this manual.\n-@set copyrights-d 2006-2018\n+@set copyrights-d 2006-2019\n \n @copying\n @c man begin COPYRIGHT"}, {"sha": "8849ceb07084d19506c78458a9837270acc5ddc5", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -10,7 +10,7 @@\n \n @copying\n @c man begin COPYRIGHT\n-Copyright @copyright{} 1987-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1987-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "0476ced86c4f67175ed159891fdc5c7544d15d4b", "filename": "gcc/doc/cppinternals.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fcppinternals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fcppinternals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppinternals.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -18,7 +18,7 @@\n @ifinfo\n This file documents the internals of the GNU C Preprocessor.\n \n-Copyright (C) 2000-2018 Free Software Foundation, Inc.\n+Copyright (C) 2000-2019 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -47,7 +47,7 @@ into another language, under the above conditions for modified versions.\n @page\n @vskip 0pt plus 1filll\n @c man begin COPYRIGHT\n-Copyright @copyright{} 2000-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 2000-2019 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice"}, {"sha": "5297b9cb5d0a02389eeb67c4de2bb904596b4a0d", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -40,7 +40,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1988-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "99ec005e96734f4793b9a9921541fffcb34990ac", "filename": "gcc/doc/gccint.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgccint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgccint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgccint.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -26,7 +26,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1988-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "41a0ea6aacf6e01c4c93af20353f08f0702d552a", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -4,7 +4,7 @@\n \n @ignore\n @c man begin COPYRIGHT\n-Copyright @copyright{} 1996-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1996-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "5cf007bd1ecd9aa26da8c1e27b2f8f2d62dbd6b7", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -44,7 +44,7 @@\n @settitle Installing GCC: GNU Free Documentation License\n @end ifset\n \n-@c Copyright (C) 1988-2018 Free Software Foundation, Inc.\n+@c Copyright (C) 1988-2019 Free Software Foundation, Inc.\n @c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n \n @c IMPORTANT: whenever you modify this file, run `install.texi2html' to\n@@ -69,7 +69,7 @@\n \n @c Part 2 Summary Description and Copyright\n @copying\n-Copyright @copyright{} 1988-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n @sp 1\n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "fe55c36133d9e100d999c057b927247706d23ce3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -8,7 +8,7 @@\n @c man end\n \n @c man begin COPYRIGHT\n-Copyright @copyright{} 1988-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "4041b4acad21de0a849e5e304c516298e951fd07", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 2, "deletions": 5644, "changes": 5646, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "044636519883315686b5df626954fa03bc62925c", "filename": "gcc/fortran/ChangeLog-2018", "status": "added", "additions": 5656, "deletions": 0, "changes": 5656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2FChangeLog-2018", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2FChangeLog-2018", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog-2018?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae"}, {"sha": "e8e05f04f32cd274d38af7a2f95e943a40520840", "filename": "gcc/fortran/gfc-internals.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfc-internals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfc-internals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfc-internals.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,7 +1,7 @@\n \\input texinfo  @c -*-texinfo-*-\n @c %**start of header\n @setfilename gfc-internals.info\n-@set copyrights-gfortran 2007-2018\n+@set copyrights-gfortran 2007-2019\n \n @include gcc-common.texi\n "}, {"sha": "9b13346b305a1b1b531ba3f81af8cc21c1901d7f", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,7 +1,7 @@\n \\input texinfo  @c -*-texinfo-*-\n @c %**start of header\n @setfilename gfortran.info\n-@set copyrights-gfortran 1999-2018\n+@set copyrights-gfortran 1999-2019\n \n @include gcc-common.texi\n "}, {"sha": "b971093c71c1037b6ca14bd18c6882829fb92529", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -278,7 +278,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \n \tcase OPT__version:\n \t  printf (\"GNU Fortran %s%s\\n\", pkgversion_string, version_string);\n-\t  printf (\"Copyright %s 2018 Free Software Foundation, Inc.\\n\",\n+\t  printf (\"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n \t\t  _(\"(C)\"));\n \t  fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),"}, {"sha": "ae24dc61f0759d66553cd187844547884a6b8d20", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,5 +1,5 @@\n @ignore\n-Copyright (C) 2005-2018 Free Software Foundation, Inc.\n+Copyright (C) 2005-2019 Free Software Foundation, Inc.\n This is part of the GNU Fortran manual.   \n For copying conditions, see the file gfortran.texi.\n "}, {"sha": "7b5597e453632ba345702c483f7e71729bfd4932", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,10 +1,10 @@\n-@c Copyright (C) 2004-2018 Free Software Foundation, Inc.\n+@c Copyright (C) 2004-2019 Free Software Foundation, Inc.\n @c This is part of the GNU Fortran manual.   \n @c For copying conditions, see the file gfortran.texi.\n \n @ignore\n @c man begin COPYRIGHT\n-Copyright @copyright{} 2004-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 2004-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "ee1a91bf38b8caa57d6a5fc30ccdaa3b84dfdc86", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -7963,7 +7963,7 @@ driver::maybe_print_and_exit () const\n     {\n       printf (_(\"%s %s%s\\n\"), progname, pkgversion_string,\n \t      version_string);\n-      printf (\"Copyright %s 2018 Free Software Foundation, Inc.\\n\",\n+      printf (\"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n \t      _(\"(C)\"));\n       fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),"}, {"sha": "4dcb12851ad3f36a956f771e14f074b9ac7ad6f1", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -138,7 +138,7 @@ static void\n print_version (void)\n {\n   printf (\"gcov-dump %s%s\\n\", pkgversion_string, version_string);\n-  printf (\"Copyright (C) 2018 Free Software Foundation, Inc.\\n\");\n+  printf (\"Copyright (C) 2019 Free Software Foundation, Inc.\\n\");\n   printf (\"This is free software; see the source for copying conditions.\\n\"\n   \t  \"There is NO warranty; not even for MERCHANTABILITY or \\n\"\n \t  \"FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\");"}, {"sha": "211b03cb949a64ec6995b40f4c3595e298f77bc5", "filename": "gcc/gcov-tool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov-tool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov-tool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-tool.c?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -525,7 +525,7 @@ static void\n print_version (void)\n {\n   fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n-  fnotice (stdout, \"Copyright %s 2018 Free Software Foundation, Inc.\\n\",\n+  fnotice (stdout, \"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n            _(\"(C)\"));\n   fnotice (stdout,\n            _(\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "8f25c70a121920e49cac85d7cf9ac3ee9e3fad47", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -914,7 +914,7 @@ static void\n print_version (void)\n {\n   fnotice (stdout, \"gcov %s%s\\n\", pkgversion_string, version_string);\n-  fprintf (stdout, \"Copyright %s 2018 Free Software Foundation, Inc.\\n\",\n+  fprintf (stdout, \"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n \t   _(\"(C)\"));\n   fnotice (stdout,\n \t   _(\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "460e742590cd78e6bbe3b7c1c3375b7590b9e273", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,3 +1,7 @@\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gccgo.texi: Bump @copyrights-go year.\n+\n 2018-11-27  Ian Lance Taylor  <iant@golang.org>\n \n \t* go-gcc.cc (Gcc_backend::function): Handle function_only_inline"}, {"sha": "231019541998ca2840abde79db8e8dd983d945f6", "filename": "gcc/go/gccgo.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgo%2Fgccgo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/gcc%2Fgo%2Fgccgo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgccgo.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -12,7 +12,7 @@\n @include gcc-common.texi\n \n @c Copyright years for this manual.\n-@set copyrights-go 2010-2018\n+@set copyrights-go 2010-2019\n \n @copying\n @c man begin COPYRIGHT"}, {"sha": "47e07c0fd1ac57ff8f77c5ddd8c966b6910d0d8c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,3 +1,7 @@\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi: Bump @copying's copyright year.\n+\n 2018-12-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* oacc-parallel.c (GOACC_parallel_keyed, GOACC_parallel)"}, {"sha": "4991271528c0ed0af45b5aa0cdeaa581fb134f6e", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -7,7 +7,7 @@\n \n \n @copying\n-Copyright @copyright{} 2006-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 2006-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "71479c99ddae8f6bf9cf10010c3628672067a1d3", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,3 +1,7 @@\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libitm.texi: Bump @copying's copyright year.\n+\n 2018-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88482"}, {"sha": "a84ca6e0d7ddf4b82d4192f8183f90577b102372", "filename": "libitm/libitm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libitm%2Flibitm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libitm%2Flibitm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Flibitm.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -7,7 +7,7 @@\n \n \n @copying\n-Copyright @copyright{} 2011-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 2011-2019 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2 or"}, {"sha": "a758e4167f5f0d2748ce98deb6a634d75f01ba0d", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -1,3 +1,7 @@\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libquadmath.texi: Bump @copying's copyright year.\n+\n 2018-12-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/88430"}, {"sha": "131a2ccf4491c9f818e505740e5096ec0e263c0d", "filename": "libquadmath/libquadmath.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libquadmath%2Flibquadmath.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae/libquadmath%2Flibquadmath.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Flibquadmath.texi?ref=3f27508ce4fa615a96f9a2e1bfa3c431879ac6ae", "patch": "@@ -6,7 +6,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 2010-2018 Free Software Foundation, Inc.\n+Copyright @copyright{} 2010-2019 Free Software Foundation, Inc.\n \n @quotation\n Permission is granted to copy, distribute and/or modify this document"}]}