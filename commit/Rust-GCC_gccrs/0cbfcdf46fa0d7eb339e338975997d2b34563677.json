{"sha": "0cbfcdf46fa0d7eb339e338975997d2b34563677", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiZmNkZjQ2ZmEwZDdlYjMzOWUzMzg5NzU5OTdkMmIzNDU2MzY3Nw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2017-08-07T20:13:53Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-08-07T20:13:53Z"}, "message": "Olivier Hainque  <hainque@adacore.com>\n\n\tPR target/81755\n\t* config/vxworksae.h (VXWORKS_HAVE_TLS): Define.\n\nFrom-SVN: r250931", "tree": {"sha": "324c5ce71a216efd94ad37935bc0e4d77a391c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/324c5ce71a216efd94ad37935bc0e4d77a391c51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cbfcdf46fa0d7eb339e338975997d2b34563677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbfcdf46fa0d7eb339e338975997d2b34563677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cbfcdf46fa0d7eb339e338975997d2b34563677", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbfcdf46fa0d7eb339e338975997d2b34563677/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "664650989a1623935155077e3ad222ed1b9b7a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/664650989a1623935155077e3ad222ed1b9b7a75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/664650989a1623935155077e3ad222ed1b9b7a75"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "596dd57fe0c06da610e55f9fb6ca1183c204d887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbfcdf46fa0d7eb339e338975997d2b34563677/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbfcdf46fa0d7eb339e338975997d2b34563677/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cbfcdf46fa0d7eb339e338975997d2b34563677", "patch": "@@ -1,3 +1,8 @@\n+Olivier Hainque  <hainque@adacore.com>\n+\n+\tPR target/81755\n+\t* config/vxworksae.h (VXWORKS_HAVE_TLS): Define.\n+\n 2017-08-07  Douglas Rupp  <rupp@adacore.com>\n \n \t* Makefile.in (install-mkheaders): Fix typo, where the multi_dir"}, {"sha": "3b0b6529b8a7fd30badad4efb82bb9b7e9c9c906", "filename": "gcc/config/vxworksae.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbfcdf46fa0d7eb339e338975997d2b34563677/gcc%2Fconfig%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbfcdf46fa0d7eb339e338975997d2b34563677/gcc%2Fconfig%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworksae.h?ref=0cbfcdf46fa0d7eb339e338975997d2b34563677", "patch": "@@ -68,6 +68,10 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n \n /* Do VxWorks-specific parts of TARGET_OPTION_OVERRIDE.  */\n+\n+/* None of the VxWorks AE/653/MILS ports to date has native TLS support.  */\n+#define VXWORKS_HAVE_TLS 0\n+\n #undef VXWORKS_OVERRIDE_OPTIONS\n #define VXWORKS_OVERRIDE_OPTIONS vxworks_override_options ()\n extern void vxworks_override_options (void);"}]}