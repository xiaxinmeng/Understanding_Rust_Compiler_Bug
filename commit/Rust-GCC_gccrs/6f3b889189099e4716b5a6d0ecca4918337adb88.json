{"sha": "6f3b889189099e4716b5a6d0ecca4918337adb88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYzYjg4OTE4OTA5OWU0NzE2YjVhNmQwZWNjYTQ5MTgzMzdhZGI4OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-01T12:18:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-01T12:18:08Z"}, "message": "Remove unused headers and variables from libstdc++ tests\n\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc: Remove\n\tunused header and variable from compile-only test.\n\t* testsuite/20_util/shared_ptr/assign/unique_ptr_rvalue.cc: Likewise.\n\t* testsuite/28_regex/basic_regex/assign/char/cstring.cc: Likewise.\n\t* testsuite/28_regex/basic_regex/ctors/string_wchar_t.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/copy_ctor_neg.cc:\n\tLikewise.\n\nFrom-SVN: r238943", "tree": {"sha": "893de69073dcedb35fea5c6d650f15b22cc82c01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/893de69073dcedb35fea5c6d650f15b22cc82c01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f3b889189099e4716b5a6d0ecca4918337adb88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3b889189099e4716b5a6d0ecca4918337adb88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3b889189099e4716b5a6d0ecca4918337adb88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3b889189099e4716b5a6d0ecca4918337adb88/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ab794ebf50e1bcc0c214ccfe4d0377be5d1aeb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab794ebf50e1bcc0c214ccfe4d0377be5d1aeb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab794ebf50e1bcc0c214ccfe4d0377be5d1aeb5"}], "stats": {"total": 44, "additions": 12, "deletions": 32}, "files": [{"sha": "1e44841c6f942644c67290b476a2559553837a04", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -1,5 +1,13 @@\n 2016-08-01  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc: Remove\n+\tunused header and variable from compile-only test.\n+\t* testsuite/20_util/shared_ptr/assign/unique_ptr_rvalue.cc: Likewise.\n+\t* testsuite/28_regex/basic_regex/assign/char/cstring.cc: Likewise.\n+\t* testsuite/28_regex/basic_regex/ctors/string_wchar_t.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/copy_ctor_neg.cc:\n+\tLikewise.\n+\n \t* testsuite/experimental/string_view/operations/rfind/char/2.cc:\n \tRemove duplicate dg-options directive.\n "}, {"sha": "f1f399c5f36bb373a9414bf5eed9b242bc198e35", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -21,35 +21,26 @@\n // 20.7.12.2 Template class shared_ptr [util.smartptr.shared]\n \n #include <memory>\n-#include <testsuite_hooks.h>\n \n struct A { };\n std::auto_ptr<A> source() { return std::auto_ptr<A>(); }\n \n // 20.7.12.2.3 shared_ptr assignment [util.smartptr.shared.assign]\n \n // Assignment from rvalue auto_ptr\n-int\n+void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   a = source();\n-\n-  return 0;\n }\n \n-int\n+void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   std::auto_ptr<A> au;\n   a = std::move(au);\n-\n-  return 0;\n }\n \n int "}, {"sha": "58334375c3854e3b21d46576e0ef5b1859b3162c", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/unique_ptr_rvalue.cc", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_rvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_rvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_rvalue.cc?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -21,35 +21,26 @@\n // 20.7.12.2 Template class shared_ptr [util.smartptr.shared]\n \n #include <memory>\n-#include <testsuite_hooks.h>\n \n struct A { };\n std::unique_ptr<A> source() { return std::unique_ptr<A>(); }\n \n // 20.7.12.2.3 shared_ptr assignment [util.smartptr.shared.assign]\n \n // Assignment from rvalue unique_ptr\n-int\n+void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   a = source();\n-\n-  return 0;\n }\n \n-int\n+void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   std::unique_ptr<A> u;\n   a = std::move(u);\n-\n-  return 0;\n }\n \n int "}, {"sha": "5ee1b422858ccefeed51171ad2f0fabebaf03a68", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/assign/char/cstring.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -22,13 +22,10 @@\n // C++0X [28.8.3] class template basic_regex assign()\n \n #include <regex>\n-#include <testsuite_hooks.h>\n \n // Tests assign operation from a C-style null-terminated-string.  \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::basic_regex<char> re;\n \n   const char* cs = \"aab\";"}, {"sha": "fbd49c8a3478537744a87e0c84977b27f2ae848f", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/ctors/string_wchar_t.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fstring_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fstring_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fstring_wchar_t.cc?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -24,7 +24,6 @@\n \n #include <string>\n #include <regex>\n-#include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n \n // Tests C++ string constructor of the basic_regex class.  \n@@ -39,7 +38,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::basic_regex<wchar_t> test_type;\n   typedef __gnu_test::tracker_allocator<wchar_t> alloc_type;\n "}, {"sha": "7f735e09ddc0df53cb2d1313c54eb0d872b01d72", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/copy_ctor_neg.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3b889189099e4716b5a6d0ecca4918337adb88/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc?ref=6f3b889189099e4716b5a6d0ecca4918337adb88", "patch": "@@ -21,7 +21,6 @@\n // 8.2.1 Class template shared_ptr [memory.smartptr.shared]\n \n #include <experimental/memory>\n-#include <testsuite_hooks.h>\n \n struct A { virtual ~A() { } };\n struct B : A { };\n@@ -34,17 +33,13 @@ struct B : A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[3]> a;\n   a = std::experimental::shared_ptr<B[3]> (new B[3]); // { dg-error \"no match \" }\n }\n \n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[]> a(new A[3]);\n   std::experimental::shared_ptr<A[2]> spa(a); // { dg-error \"no matching\" }\n }"}]}