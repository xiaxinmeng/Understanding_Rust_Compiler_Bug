{"sha": "4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhN2EzMDdjZjUzYThiZTc4ZmIwZWY0YzgwMzFmYTQwNzQ2Zjc2OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-05-09T10:06:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-05-09T10:06:20Z"}, "message": "genrecog.c (write_switch): Avoid outputting of switch for types wider than int.\n\n\t* genrecog.c (write_switch): Avoid outputting of switch for\n\ttypes wider than int.\n\nFrom-SVN: r41922", "tree": {"sha": "5854b87d364c530d709eed6da005ba4c60ac6efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5854b87d364c530d709eed6da005ba4c60ac6efd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea7a307cf53a8be78fb0ef4c8031fa40746f768/comments", "author": null, "committer": null, "parents": [{"sha": "710bbed09da25b2e26526df3ecb6d9e2a327bd41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710bbed09da25b2e26526df3ecb6d9e2a327bd41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/710bbed09da25b2e26526df3ecb6d9e2a327bd41"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8e72bd4a1f6bb20c89a0875dfaebf4e7c8e75617", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea7a307cf53a8be78fb0ef4c8031fa40746f768/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea7a307cf53a8be78fb0ef4c8031fa40746f768/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "patch": "@@ -1,3 +1,8 @@\n+Wed May  9 12:05:39 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* genrecog.c (write_switch): Avoid outputting of switch for\n+\ttypes wider than int.\n+\n 2001-05-03  Andrew Haley  <aph@cambridge.redhat.com>\n \n \t* reload1.c (copy_eh_notes): New function."}, {"sha": "ba4043797d2e88577f2b55d2b35664c12dd0c09e", "filename": "gcc/genrecog.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea7a307cf53a8be78fb0ef4c8031fa40746f768/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea7a307cf53a8be78fb0ef4c8031fa40746f768/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=4ea7a307cf53a8be78fb0ef4c8031fa40746f768", "patch": "@@ -1860,6 +1860,10 @@ write_switch (start, depth)\n \t   || type == DT_elt_one_int\n \t   || type == DT_elt_zero_wide)\n     {\n+      /* The argument is casted to int.  In case HOST_WIDE_INT is more exact,\n+         we can't safely construct switch statement over it.  */\n+      if (type == DT_elt_zero_wide && HOST_BITS_PER_WIDE_INT > sizeof (int) * CHAR_BIT)\n+\t  return p;\n       printf (\"  switch (\");\n       switch (type)\n \t{"}]}