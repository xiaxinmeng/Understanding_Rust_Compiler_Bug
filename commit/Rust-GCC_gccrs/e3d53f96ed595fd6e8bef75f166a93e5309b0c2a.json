{"sha": "e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNkNTNmOTZlZDU5NWZkNmU4YmVmNzVmMTY2YTkzZTUzMDliMGMyYQ==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2017-01-23T09:12:29Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2017-01-23T09:12:29Z"}, "message": "re PR lto/79061 ([LTO][ASAN] LTO plus ASAN fails with \"AddressSanitizer: initialization-order-fiasco\")\n\nRevert fix for PR lto/79061 due to this regresses compile-time by 100%\non some fortran cases.\n\nFrom-SVN: r244773", "tree": {"sha": "b00bc74146414cdc735ba7984a03a985eb0aeb9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b00bc74146414cdc735ba7984a03a985eb0aeb9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/comments", "author": null, "committer": null, "parents": [{"sha": "54d7c70c08b5b4a0180269301d466cc5e3d951b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d7c70c08b5b4a0180269301d466cc5e3d951b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d7c70c08b5b4a0180269301d466cc5e3d951b5"}], "stats": {"total": 63, "additions": 5, "deletions": 58}, "files": [{"sha": "de154fdc28efd045c8ac94e4fabd078398765885", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -401,15 +401,6 @@\n \tNew function.\n \t(TARGET_SCHED_ADJUST_PRIORITY): Define target hook.\n \n-2017-01-18  Maxim Ostapenko  <m.ostapenko@samsung.com>\n-\n-\tPR lto/79061\n-\t* asan.c (get_translation_unit_decl): New function.\n-\t(asan_add_global): Extract modules file name from globals\n-\tTRANSLATION_UNIT_DECL in lto mode.\n-\t* tree.c (build_translation_unit_decl): Add source location for newly\n-\tbuilt TRANSLATION_UNIT_DECL.\n-\n 2017-01-18  Matthias Klose  <doko@ubuntu.com>\n \n \t* doc/install.texi: Allow default for --with-target-bdw-gc-include."}, {"sha": "74500448a1246a59a3ff8029d6441d21b429e18c", "filename": "gcc/asan.c", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -2372,22 +2372,6 @@ asan_needs_odr_indicator_p (tree decl)\n \t  && TREE_PUBLIC (decl));\n }\n \n-/* For given DECL return its corresponding TRANSLATION_UNIT_DECL.  */\n-\n-static const_tree\n-get_translation_unit_decl (tree decl)\n-{\n-  const_tree context = decl;\n-  while (context && TREE_CODE (context) != TRANSLATION_UNIT_DECL)\n-    {\n-      if (TREE_CODE (context) == BLOCK)\n-\tcontext = BLOCK_SUPERCONTEXT (context);\n-      else\n-\tcontext = get_containing_scope (context);\n-    }\n-  return context;\n-}\n-\n /* Append description of a single global DECL into vector V.\n    TYPE is __asan_global struct type as returned by asan_global_struct.  */\n \n@@ -2407,14 +2391,7 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n     pp_string (&asan_pp, \"<unknown>\");\n   str_cst = asan_pp_string (&asan_pp);\n \n-  const char *filename = main_input_filename;\n-  if (in_lto_p)\n-    {\n-      const_tree translation_unit_decl = get_translation_unit_decl (decl);\n-      if (translation_unit_decl)\n-\tfilename = DECL_SOURCE_FILE (translation_unit_decl);\n-    }\n-  pp_string (&module_name_pp, filename);\n+  pp_string (&module_name_pp, main_input_filename);\n   module_name_cst = asan_pp_string (&module_name_pp);\n \n   if (asan_needs_local_alias (decl))"}, {"sha": "8f2e0ec180c3fedf6cd870f82d485097ad3608a2", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -6,12 +6,6 @@\n \tlhd_type_for_size.\n \t(LANG_HOOKS_TYPE_FOR_SIZE): Don't redefine.\n \n-2017-01-18  Maxim Ostapenko  <m.ostapenko@samsung.com>\n-\n-\tPR lto/79061\n-\t* lto.c (lto_read_decls): accept location cache for\n-\tTRANSLATION_UNIT_DECL.\n-\n 2017-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/50199"}, {"sha": "d77d85defb60da84dedd05098334ab0789645fb0", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -1707,13 +1707,7 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n \t      && (TREE_CODE (first) == IDENTIFIER_NODE\n \t\t  || TREE_CODE (first) == INTEGER_CST\n \t\t  || TREE_CODE (first) == TRANSLATION_UNIT_DECL))\n-\t    {\n-\t      /* For TRANSLATION_UNIT_DECL we need to accept location cache now\n-\t         to avoid possible reverting during following unify_scc call.  */\n-\t      if (TREE_CODE (first) == TRANSLATION_UNIT_DECL)\n-\t\tdata_in->location_cache.accept_location_cache ();\n-\t      continue;\n-\t    }\n+\t    continue;\n \n \t  /* Try to unify the SCC with already existing ones.  */\n \t  if (!flag_ltrans"}, {"sha": "e6dc6b39d35ca55142ed9f796bc35ba39634a820", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -299,12 +299,6 @@\n \t* gcc.target/powerpc/pr58673-2.c: Likewise.\n \t* gcc.target/powerpc/pr59054.c: Likewise.\n \n-2017-01-18  Maxim Ostapenko  <m.ostapenko@samsung.com>\n-\n-\tPR lto/79061\n-\t* gcc.dg/cpp/mi1.c: Adjust testcase.\n-\t* gcc.dg/pch/cpp-3.c: Likewise.\n-\n 2016-01-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p8vector-builtin-8.c: Add new form for"}, {"sha": "0cfedad2f39ede976beb47de6df2376adfd41fd0", "filename": "gcc/testsuite/gcc.dg/cpp/mi1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi1.c?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -13,7 +13,7 @@\n \n /* { dg-do compile }\n    { dg-options \"-H\" }\n-   { dg-message \"mi1c\\.h\\n\\[^\\n\\]*mi1cc\\.h\\n\\[^\\n\\]*mi1nd\\.h\\n\\[^\\n\\]*mi1ndp\\.h\\n\\[^\\n\\]*mi1x\\.h\\n\\[^\\n\\]*mi1\\.c\" \"redundant include check\" { target *-*-* } 0 } */\n+   { dg-message \"mi1c\\.h\\n\\[^\\n\\]*mi1cc\\.h\\n\\[^\\n\\]*mi1nd\\.h\\n\\[^\\n\\]*mi1ndp\\.h\\n\\[^\\n\\]*mi1x\\.h\" \"redundant include check\" { target *-*-* } 0 } */\n \n #include \"mi1c.h\"\n #include \"mi1c.h\""}, {"sha": "25b5ca4077ff97c3b671097036115ebdc10277a9", "filename": "gcc/testsuite/gcc.dg/pch/cpp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.c?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -1,7 +1,7 @@\n /* PR preprocessor/36649 */\n /* { dg-do compile } */\n /* { dg-options \"-H -I.\" } */\n-/* { dg-message \"cpp-3.h\\[^\\n\\]*(\\n\\[^\\n\\]*cpp-3.c)?\\n\\[^\\n\\]*cpp-3a.h\\n\\[^\\n\\]*cpp-3b.h\\n\\[^\\n\\]*cpp-3.c\" \"\" { target *-*-* } 0 } */\n+/* { dg-message \"cpp-3.h\\[^\\n\\]*(\\n\\[^\\n\\]*cpp-3.c)?\\n\\[^\\n\\]*cpp-3a.h\\n\\[^\\n\\]*cpp-3b.h\" \"\" { target *-*-* } 0 } */\n \n #include \"cpp-3.h\"\n #include \"cpp-3a.h\""}, {"sha": "14f045201728b150854633c82440f42a5983cafa", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d53f96ed595fd6e8bef75f166a93e5309b0c2a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e3d53f96ed595fd6e8bef75f166a93e5309b0c2a", "patch": "@@ -4758,10 +4758,7 @@ vec<tree, va_gc> *all_translation_units;\n tree\n build_translation_unit_decl (tree name)\n {\n-  linemap_add (line_table, LC_ENTER, false, main_input_filename, 1);\n-  location_t loc = linemap_line_start (line_table, 1, 0);\n-  linemap_add (line_table, LC_LEAVE, false, NULL, 0);\n-  tree tu = build_decl (loc, TRANSLATION_UNIT_DECL,\n+  tree tu = build_decl (UNKNOWN_LOCATION, TRANSLATION_UNIT_DECL,\n \t\t\tname, NULL_TREE);\n   TRANSLATION_UNIT_LANGUAGE (tu) = lang_hooks.name;\n   vec_safe_push (all_translation_units, tu);"}]}