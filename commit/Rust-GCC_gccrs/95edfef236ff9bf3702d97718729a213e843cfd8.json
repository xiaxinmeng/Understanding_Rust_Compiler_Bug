{"sha": "95edfef236ff9bf3702d97718729a213e843cfd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVlZGZlZjIzNmZmOWJmMzcwMmQ5NzcxODcyOWEyMTNlODQzY2ZkOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-07-28T01:58:27Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-07-28T01:58:27Z"}, "message": "Add DEFINE_SPLITs to optimize logic operation with\ncertain immediate values.\n\nFrom-SVN: r1694", "tree": {"sha": "04720bb007cd293c1fb52eb1f2fd2013cbc404a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04720bb007cd293c1fb52eb1f2fd2013cbc404a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95edfef236ff9bf3702d97718729a213e843cfd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95edfef236ff9bf3702d97718729a213e843cfd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95edfef236ff9bf3702d97718729a213e843cfd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95edfef236ff9bf3702d97718729a213e843cfd8/comments", "author": null, "committer": null, "parents": [{"sha": "2abaee930b35ca4bff4ac836e0b59efb90c1ec42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abaee930b35ca4bff4ac836e0b59efb90c1ec42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abaee930b35ca4bff4ac836e0b59efb90c1ec42"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "acb4ee48ffd59be91c878eb2b28e3b492e9df17f", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95edfef236ff9bf3702d97718729a213e843cfd8/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95edfef236ff9bf3702d97718729a213e843cfd8/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=95edfef236ff9bf3702d97718729a213e843cfd8", "patch": "@@ -1993,6 +1993,20 @@\n   \"\"\n   \"and %1,%2,%0\")\n \n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(and:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t(match_operand:SI 2 \"\" \"\")))]\n+  \"GET_CODE (operands[2]) == CONST_INT\n+   && !SMALL_INT (operands[2])\n+   && (INTVAL (operands[2]) & 0x3ff) == 0x3ff\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 0) (and:SI (not:SI (match_dup 0)) (match_dup 1)))]\n+  \"\n+{\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode, ~INTVAL (operands[2]));\n+}\")\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(and:DI (not:DI (match_operand:DI 1 \"register_operand\" \"r\"))\n@@ -2053,6 +2067,20 @@\n   \"\"\n   \"or %1,%2,%0\")\n \n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(ior:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t(match_operand:SI 2 \"\" \"\")))]\n+  \"GET_CODE (operands[2]) == CONST_INT\n+   && !SMALL_INT (operands[2])\n+   && (INTVAL (operands[2]) & 0x3ff) == 0x3ff\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 0) (ior:SI (not:SI (match_dup 0)) (match_dup 1)))]\n+  \"\n+{\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode, ~INTVAL (operands[2]));\n+}\")\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ior:DI (not:DI (match_operand:DI 1 \"register_operand\" \"r\"))\n@@ -2113,6 +2141,34 @@\n   \"\"\n   \"xor %r1,%2,%0\")\n \n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t(match_operand:SI 2 \"\" \"\")))]\n+  \"GET_CODE (operands[2]) == CONST_INT\n+   && !SMALL_INT (operands[2])\n+   && (INTVAL (operands[2]) & 0x3ff) == 0x3ff\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 0) (not:SI (xor:SI (match_dup 0) (match_dup 1))))]\n+  \"\n+{\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode, ~INTVAL (operands[2]));\n+}\")\n+\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(not:SI (xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t(match_operand:SI 2 \"\" \"\"))))]\n+  \"GET_CODE (operands[2]) == CONST_INT\n+   && !SMALL_INT (operands[2])\n+   && (INTVAL (operands[2]) & 0x3ff) == 0x3ff\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 0) (xor:SI (match_dup 0) (match_dup 1)))]\n+  \"\n+{\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode, ~INTVAL (operands[2]));\n+}\")\n+\n ;; xnor patterns.  Note that (a ^ ~b) == (~a ^ b) == ~(a ^ b).\n ;; Combine now canonicalizes to the rightmost expression.\n (define_insn \"\""}]}