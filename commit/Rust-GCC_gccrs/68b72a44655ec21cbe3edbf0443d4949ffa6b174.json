{"sha": "68b72a44655ec21cbe3edbf0443d4949ffa6b174", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhiNzJhNDQ2NTVlYzIxY2JlM2VkYmYwNDQzZDQ5NDlmZmE2YjE3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-26T13:11:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-26T13:11:38Z"}, "message": "Resync.\n\nFrom-SVN: r128812", "tree": {"sha": "c2e8485da7ad3d8199eece2843ef28ac70136646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2e8485da7ad3d8199eece2843ef28ac70136646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68b72a44655ec21cbe3edbf0443d4949ffa6b174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b72a44655ec21cbe3edbf0443d4949ffa6b174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68b72a44655ec21cbe3edbf0443d4949ffa6b174", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b72a44655ec21cbe3edbf0443d4949ffa6b174/comments", "author": null, "committer": null, "parents": [{"sha": "7bfcb402eab7dbcf0108c5b9682a8b409fad4359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bfcb402eab7dbcf0108c5b9682a8b409fad4359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bfcb402eab7dbcf0108c5b9682a8b409fad4359"}], "stats": {"total": 386, "additions": 386, "deletions": 0}, "files": [{"sha": "fe22516ce50c1396f945fef2352025aa2d326be1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 386, "deletions": 0, "changes": 386, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b72a44655ec21cbe3edbf0443d4949ffa6b174/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b72a44655ec21cbe3edbf0443d4949ffa6b174/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=68b72a44655ec21cbe3edbf0443d4949ffa6b174", "patch": "@@ -1,3 +1,389 @@\n+2007-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Use_Type): Code cleanup.\n+\t(Applicable_Use): Emit a warning when a package tries to use itself.\n+\t(Use_One_Type): Add variable Is_Known_Used. Emit a warning when a type\n+\tis already in use or the package where it is declared is in use or is\n+\tdeclared in the current package.\n+\t(Spec_Reloaded_For_Body): New subsidiary routine for Use_One_Type.\n+\n+\t* a-tasatt.adb, s-osprim-vxworks.adb, g-socthi-mingw.adb,\n+\ts-intman-vms.adb, g-socket.adb, g-thread.adb, s-tarest.adb,\n+\ts-tassta.adb, s-tporft.adb: Remove redundant 'use type' clause.\n+\n+2007-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-calend-vms.adb, a-calend.adb: \n+\tAdd a section on leap seconds control along with two entities used to\n+\tenable and disable leap seconds support. The array Leap_Second_Times is\n+\tnow constant and contains hard time values pre-generated. Remove\n+\tall elaboration code used to populate the table of leap seconds.\n+\n+\t* bindgen.adb: \n+\tAdd entity Leap_Seconds_Support to the list of global run-time variables\n+\talong with a comment on its usage and values.\n+\t(Gen_Adainit_Ada): Add code to generate the declaration and import of\n+\tInteger variable Leap_Seconds_Support. Set its value to zero (disabled)\n+\tor one (enabled) depending on the presence of binder switch \"-y\".\n+\t(Gen_Adainit_C): Add code to generate the declaration of external int\n+\t__gl_leap_seconds_support. Set is value to zero (disabled) or one\n+\t(enabled) depending on the presence of binder switch \"-y\".\n+\n+\t* init.c: Add __gl_leap_seconds_support to the list of global values\n+\tcomputed by the binder.\n+\n+2007-09-26  Jerome Guitton  <guitton@adacore.com>\n+\n+\t* s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb,\n+\ts-taprop-hpux-dce.adb, s-taprop-linux.adb, s-taprop-dummy.adb,\n+\t s-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb,\n+\ts-taprop-posix.adb (Stop_Task): New function, dummy implementation.\n+\n+\t* s-taprop.ads, s-taprop-vxworks.adb (Stop_Task): New function.\n+\n+\t* s-tasdeb.adb (Stop_All_Tasks): New function, implementing a run-time\n+\tfunction which can be called by the debugger to interrupt the tasks of\n+\tan Ada application asynchronously, as needed on VxWorks.\n+\t(Stop_All_Tasks_Handler): Renamed from Stop_All_Tasks.\n+\n+\t* s-tasdeb.ads (Stop_All_Tasks_Handler): New function declaration,\n+\trenamed from Stop_All_Tasks. Update comments.\n+\t(Stop_All_tasks): New function declaration.\n+\n+2007-09-26  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* adaint.c (if defined (__Lynx__)): Wrap #def/#undef VMOS_DEV around\n+\t#include <utime.h> and #define GCC_RESOURCE_H before\n+\t#include <sys/wait.h>.\n+\tAdd more protections in __gnat_translate_vms.\n+\n+\t* expect.c (if defined (__Lynx__)): #define GCC_RESOURCE_H before\n+\t#include <sys/wait.h>.\n+\n+2007-09-26  Thomas Quinot  <quinot@adacore.com>\n+\t    Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnatvsn.ads (PCS_Version_Number, ASIS_Version_Number): Removed.\n+\n+\t* exp_dist.ads (PCS_Version_Number): Move from Gnatvsn to Exp_Dist,\n+\twhere it belongs.\n+\n+\t* opt.ads: Move ASIS_Version_Number from Gnatvsn into Tree_IO.\n+\n+\t* rtsfind.adb (PCS_Version_Number): Move from Gnatvsn to Exp_Dist,\n+\twhere it belongs.\n+\n+\t* sem_dist.ads: Minor comment fix\n+\n+\t* tree_io.ads: Move ASIS_Version_Number from Gnatvsn into Tree_IO.\n+\n+2007-09-26  Javier Miranda  <miranda@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* a-tags.adb: \n+\t(Get_HT_Link/Set_HT_Link): Updated to handle the additional level of\n+\t indirection added to the HT_Link component of the TSD. This is required\n+\t to statically allocate the TSD.\n+\n+\t* a-tags.ads: \n+\tMinor reordering of the declarations in the private part. Required to\n+\tadd a level of indirection to the contents of the TSD component HT_Link.\n+\tThis is required to statically allocate the TSD.\n+\n+\t* decl.c (gnat_to_gnu_entity) <object>: Do not exclude objects with\n+\tIs_Statically_Allocated set from constant objects.\n+\tDo not make exported constants created by the compiler volatile.\n+\t(gnat_to_gnu_param): Do not treat an IN parameter whose address is taken\n+\tas read-only.\n+\n+\t* trans.c (Identifier_to_gnu): For constants, unshare initializers\n+\tbefore returning them.\n+\n+\t* exp_disp.ads, exp_disp.adb (Building_Static_DT): Spec moved to the\n+\tpublic part of the package.\n+\t(Make_DT): Move HT_Link component out of the TSD record. For this\n+\tpurpose Make_DT now declares a separate object that stores the\n+\tHT_Link value, and initializes the TSD component with the address\n+\tof this new object. The addition of this level of indirection is\n+\trequired to statically allocate the TSD because the TSD cannot\n+\thave variable components.\n+\t(Expand_Interface_Conversion): Improve the expanded code.\n+\t(Expand_Interface_Thunk): Set Is_Thunk in the thunk entity.\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): In case of a body\n+\tdeclaring a primitive operation ---allowed by RM 3.9.2 (13.e/2)---,\n+\tif we are building static dispatch tables then we must not generate\n+\textra code to register the primitive because the dispatch table will\n+\tbe built at the end of the library package; otherwise we notify that\n+\twe cannot build the static dispatch table.\n+\n+2007-09-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, gnat1drv.adb, sem_util.ads: Improve warnings for address\n+\toverlays.\n+\n+\t* sem_ch13.ads, sem_ch13.adb: Improve warnings for address overlays\n+\t(Analyze_Record_Representation_Clause): Suppress junk warning for\n+\tmissing component clause.\n+\t(Analyze_Attribute_Definition_Clause, case Address): Apply the special\n+\ttests for controlled type overlay to composites with controlled\n+\tcomponents.\n+\t(Analyze_Record_Representation_Clause): Add reference for component name\n+\n+2007-09-26  Javier Miranda  <miranda@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* einfo.adb (Is_Thunk): New attribute applicable to subprograms. True\n+\tfor thunks associated with interface types.\n+\n+\t* einfo.ads: Improve documentatation of Is_Internal\n+\t(Is_Thunk): New attribute applicable to subprograms. True for thunks\n+\tassociated with interface types.\n+\tExtensive comment fixes regarding flags that appear in all entities. The\n+\tdocumentation is now consistent for all such flags (there were a number\n+\tof errors in the documentation in this regard).\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Minor code cleanup.\n+\n+\t* exp_ch6.adb (Make_Build_In_Place_Call_*): Return immediately if any\n+\tof these procedures are passed a function call that already has\n+\tbuild-in-place actuals (testing new flag\n+\tIs_Expanded_Build_In_Place_Call). Set the flag on the function call in\n+\tthe case where processing continues.\n+\t(Expand_Call): If the call is generated from a thunk body then we\n+\tpropagate the extra actuals associated with the accessibility\n+\tlevel of the access type actuals.\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): Set the Protected_Formal field\n+\tof each extra formal of a protected operation to reference the\n+\tcorresponding extra formal of the subprogram denoted by the\n+\toperation's Protected_Body_Subprogram.\n+\t\n+\t* sinfo.ads, sinfo.adb (Is_Expanded_Build_In_Place_Call): New flag on\n+\tN_Function_Call nodes.\n+\n+2007-09-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb: Activate memmove type processing if debug flag d.s is set\n+\n+\t* debug.adb: Add d.s flag.\n+\n+2007-09-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): Set Is_Internal on the\n+\tdebug variable so that it won't be initialized when pragma\n+\tInitialize_Scalars is in effect.\n+\n+2007-09-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Remove check for preelaborable\n+\tinitialization of a full view. This is moved to\n+\tAnalyze_Package_Specification.\n+\n+\t* sem_ch7.adb (Analyze_Package_Specification): Add check for\n+\tpreelaborable initialization of a full view in entity loop.\n+\t(Uninstall_Declarations): If entity is a use-visible compilation unit,\n+\tits child units are use-visible only if they are visible child units.\n+\n+\t* sem_util.adb (Is_Preelaborable_Expression): New function to determine\n+\twhether an expression can be used within a type declaration that\n+\trequires preelaborable init.\n+\t(Check_Components): Replace inline code that does partial checking for\n+\tpreelaborable default expressions with call to\n+\tIs_Preelaborable_Expression.\n+\t(Has_Preelaborable_Initialization): In the case of a generic actual\n+\tsubtype, (that is, Is_Generic_Actual is True), return the result of\n+\tapplying Has_Preelaborable_Initialization to the generic actual's base\n+\ttype.\n+\n+2007-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* g-calend.adb (Has_53_Weeks): Rename to Last_Year_Has_53_Weeks. Add a\n+\tcall to Jan_1_Day _Of_Week to optimize its performance.\n+\t(Is_Leap): Move the routine to the scope of Week_In_Year.\n+\t(Jan_1_Day_Of_Week): New routine in Week_In_Year which calculates the\n+\tweekday on which January 1 falls of Year - 1 and Year + 1. This function\n+\tavoids calling Time_Of and Split, thus making it more efficent.\n+\t(Week_In_Year): Reimplemented in oder to follow ISO 8601.\n+\n+\t* g-calend.ads (Week_In_Year): Change comment to reflect new\n+\timplementation.\n+\n+2007-09-26  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.ads, g-comlin.adb (Command_Line_Configuration,\n+\tCommand_Line): New types\n+\t(Define_Alias, Define_Prefix, Free): New subprograms. These provide\n+\tsupport for defining how switches can be grouped on a command line (as\n+\tis the case for -gnatw... for GNAT), and how simple switches can be\n+\tused as aliases for more complex switches (-gnatwa is same as\n+\t-gnatwbcef...)\n+\t(Set_Command_Line, Add_Switch, Remove_Switch): New subprogram\n+\t(Start, Current_*): New subprograms\n+\tAdded support for parsing an array of strings in addition to the real\n+\tcommand line.\n+\t(Opt_Parser, Opt_Parser_Data): New type. As a result, some types had to\n+\t be moved from the body to the private part of the spec.\n+\t(*): All subprograms now have an extra parameter with default value to\n+\tspecify which parser should be used. For backward compatibility, it\n+\tdefaults to parsing the command line of the application. They were also\n+\tmodified to properly handle cases where each of the argument does not\n+\tstart at index 1 (which is always true for Ada.Command_Line, but not\n+\twhen processing any Argument_List).\n+\t(Free): New subprogram\n+\t(Internal_Initialize_Option_Scan, Find_Longuest_Matching_Switch,\n+\tArgument): New subprograms\n+\t(Switch_Parameter_Type): New enum, which clarifies the code. The extra\n+\tspecial characters like ':', '=',... are now handled in a single place,\n+\twhich makes the code more extensible eventually.\n+\t(Getopt, Full_Switch): When the switch was returned as part of the\n+\tspecial character '*', make sure it is prepended by the switch character\n+\t('-' in general), so that the application knows whether \"foo\" or \"-foo\"\n+\twas specified on the command line.\n+\n+2007-09-26  Florian Villoing  <villoing@adacore.com>\n+\n+\t* g-dirope.adb (Remove_Dir): In case we are removing directories\n+\trecursively, make sure that if an exception is raised during the\n+\tprocessing, the current working directory is reset to its initial\n+\tvalue before propagating the exception.\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatbind.adb: If there are several ALI files specified and there is\n+\ta main program to bind, the first ALI is expected to contain the main\n+\tsubprogram and the names of the binder generated files will be derived\n+\tfrom the first ALI file name.\n+\t(Gnatbind): Fix insertion character in invocation of Error_Msg\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb (Check_Files): Do not include sources that have been\n+\tremoved by attributes Exclude_Source_Files or Locally_Removed_Files.\n+\n+2007-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.ads, lib-xref.adb: The entry for array types now carries\n+\tinformation about each of its index types, following the type\n+\treference for its component type.\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb: (Kill): New procedure (__gnat_kill imported)\n+\t(Running_Compile, Outstanding_Compiles): Global variables that\n+\twere previously local to procedure Compile_Sources.\n+\t(Sigint_Intercepted): Send signal SIGINT to all outstanding\n+\tcompilation processes.\n+\n+\t(Gnatmake): If project files are used, create the mapping of all the\n+\tsources, so that the correct paths will be found.\n+\n+\t* prj-env.ads, prj-env.adb (Create_Mapping): New procedure\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.ads (Main_Config_Project): Moved to gpr_util.ads\n+\n+\t* prj.ads, prj.adb (Default_Language): Remove function, no longer used\n+\tReplace components Compiler_Min_Options and Binder_Min_Options with\n+\tCompiler_Required_Switches and Binder_Required_Switches in record\n+\tLanguage_Config.\n+\tRemove components Default_Language and Config in Project_Tree_Data,\n+\tno longer used.\n+\n+\t* prj-attr.adb: New attributes Required_Switches (<language>) in\n+\tpackages Compiler and Binder.\n+\n+\t* prj-nmsc.adb: Major rewrite of the processing of configuration\n+\tattributes for gprbuild. No impact on GNAT tools.\n+\n+\t* prj-proc.ads, prj-proc.adb (Process_Project_Tree_Phase_2): No longer\n+\tprocess configuration attributes: this is done in Prj.Nmsc.Check.\n+\t(Recursive_Process): Make a full copy of packages inherited from project\n+\tbeing extended, instead of a shallow copy.\n+\t(Process_Project_Tree_Phase_1): New procedure\n+\t(Process_Project_Tree_Phase_1): New procedure\n+\t(Process): Implementation now uses the two new procedures\n+\n+\t* prj-util.adb (Executable_Of): Get the suffix and the default suffix\n+\tfrom the project config, not the tree config that no longer exists.\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* Make-lang.in: Update dependencies..\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* osint.adb, osint.ads: Minor reformatting\n+\n+\t* osint-b.adb, osint-b.ads (Set_Current_File_Name_Index): New procedure\n+\n+2007-09-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* par-ch4.adb (P_Record_Or_Array_Component_Association): Change Ada 95\n+\tmessage to cite use of <> in aggregate component associations rather\n+\tthan wrongly indicating use of limited aggregates.\n+\n+2007-09-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Access_Attribute): Fix missing set of\n+\tAddress_Taken.\n+\n+2007-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Subprograms): If the interface parent is a direct\n+\tancestor of the derived type, the operations are inherited from the\n+\tprimary dispatch table of the parent.\n+\t(OK_For_Limited_Init_In_05): Remove old comment. Reject in-place calls\n+\twhen the context is an explicit type conversion.\n+\n+2007-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Qualified_Expression): Apply name resolution\n+\trule for qualified expressions properly, to detect improper conversions\n+\tand resolve some cases of overloading.\n+\n+2007-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): If the call is dispatching, generate the\n+\tproper kind of reference to the primitive operation, for better source\n+\tnavigation.\n+\t(Valid_Conversion): A tagged conversion is legal if both operands are\n+\ttagged.\n+\n+2007-09-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Check_References): Catch more cases of unreferenced\n+\tpackages.\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* snames.adb, snames.ads: Change Include_Option to Include_Switches\n+\n+2007-09-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-wchstw.adb: provide messages for run time unit exceptions\n+\n+\t* a-witeio.adb: Minor reformatting\n+\n+\t* exp_ch13.adb: Minor reformatting\n+\n+2007-09-26  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* vms_data.ads: Revise gnatmetric qualifiers.\n+\tAdd qualified for the new gnatbind option '-y'\n+\n+\t* gnat_ugn.texi: Revise the gnatmetric section.\n+\tAdd entry for new gnatbind option '-y'.\n+\n+\t* gnat_rm.texi: Minor spelling correction.\n+\tDocument restriction on overlaying controlled types\n+\n+2007-09-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* makegpr.adb (Link_Executables): Do not fail when the root project has\n+\tno sources, but is an extending project.\n+\n 2007-09-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* trans.c: Fix misplaced #define."}]}