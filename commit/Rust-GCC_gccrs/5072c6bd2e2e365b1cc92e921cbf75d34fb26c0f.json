{"sha": "5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3MmM2YmQyZTJlMzY1YjFjYzkyZTkyMWNiZjc1ZDM0ZmIyNmMwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-10T13:41:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-10T13:41:37Z"}, "message": "re PR c++/38021 (C++ hang for new keywords)\n\n\tPR c++/38021\n\t* parser.c (cp_parser_enum_specifier): After parsing :,\n\tparse definitely.  Don't return early if type specifier\n\tis erroneous.\n\n\t* g++.dg/cpp0x/enum1.C: New test.\n\nFrom-SVN: r141739", "tree": {"sha": "4ee43bf33873d343cbe16be7dc0e94d1b1199e81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ee43bf33873d343cbe16be7dc0e94d1b1199e81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94b5f4db225e10e4d0a93f7dba46bc6ddf8e193a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b5f4db225e10e4d0a93f7dba46bc6ddf8e193a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b5f4db225e10e4d0a93f7dba46bc6ddf8e193a"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "81941e262f1fd15a2c50e1d4f1256de126924c42", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "patch": "@@ -1,3 +1,10 @@\n+2008-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/38021\n+\t* parser.c (cp_parser_enum_specifier): After parsing :,\n+\tparse definitely.  Don't return early if type specifier\n+\tis erroneous.\n+\n 2008-11-06  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/26397"}, {"sha": "c819082c781000c20b0e15ba61dd8508920c55c2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "patch": "@@ -11780,6 +11780,7 @@ cp_parser_enum_specifier (cp_parser* parser)\n   tree type;\n   tree attributes;\n   bool scoped_enum_p = false;\n+  bool has_underlying_type = false;\n   tree underlying_type = NULL_TREE;\n \n   /* Parse tentatively so that we can back up if we don't find a\n@@ -11805,7 +11806,7 @@ cp_parser_enum_specifier (cp_parser* parser)\n \n       scoped_enum_p = true;\n     }\n-      \n+\n   attributes = cp_parser_attributes_opt (parser);\n \n   if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n@@ -11818,18 +11819,22 @@ cp_parser_enum_specifier (cp_parser* parser)\n     {\n       cp_decl_specifier_seq type_specifiers;\n \n+      /* At this point this is surely not elaborated type specifier.  */\n+      if (!cp_parser_parse_definitely (parser))\n+\treturn NULL_TREE;\n+\n       if (cxx_dialect == cxx98)\n         maybe_warn_cpp0x (\"scoped enums\");\n \n       /* Consume the `:'.  */\n       cp_lexer_consume_token (parser->lexer);\n \n+      has_underlying_type = true;\n+\n       /* Parse the type-specifier-seq.  */\n       cp_parser_type_specifier_seq (parser, /*is_condition=*/false,\n                                     &type_specifiers);\n-      if (type_specifiers.type == error_mark_node)\n-        return error_mark_node;\n-     \n+\n       /* If that didn't work, stop.  */\n       if (type_specifiers.type != error_mark_node)\n         {\n@@ -11838,15 +11843,17 @@ cp_parser_enum_specifier (cp_parser* parser)\n           if (underlying_type == error_mark_node)\n             underlying_type = NULL_TREE;\n         }\n-      else\n-        cp_parser_error (parser, \"expected underlying type of enumeration\");\n     }\n \n   /* Look for the `{' but don't consume it yet.  */\n   if (!cp_lexer_next_token_is (parser->lexer, CPP_OPEN_BRACE))\n-    cp_parser_simulate_error (parser);\n+    {\n+      cp_parser_error (parser, \"expected %<{%>\");\n+      if (has_underlying_type)\n+\treturn NULL_TREE;\n+    }\n \n-  if (!cp_parser_parse_definitely (parser))\n+  if (!has_underlying_type && !cp_parser_parse_definitely (parser))\n     return NULL_TREE;\n \n   /* Issue an error message if type-definitions are forbidden here.  */"}, {"sha": "412c77abaee5d5e6f846e8ba2c2e5062108fa0e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "patch": "@@ -1,3 +1,8 @@\n+2008-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/38021\n+\t* g++.dg/cpp0x/enum1.C: New test.\n+\n 2008-11-02  Ralph Loader  <suckfish@ihug.co.nz>\n \n \tPR middle-end/37807"}, {"sha": "af691f028b18fe887a8973671d2db0502e1da406", "filename": "gcc/testsuite/g++.dg/cpp0x/enum1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum1.C?ref=5072c6bd2e2e365b1cc92e921cbf75d34fb26c0f", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/38021\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+enum : { };\t// { dg-error \"expected type-specifier\" }\n+enum : 3 { };\t// { dg-error \"expected\" }"}]}