{"sha": "910a2e4d8c25017c00098043c52a0ad8662272c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEwYTJlNGQ4YzI1MDE3YzAwMDk4MDQzYzUyYTBhZDg2NjIyNzJjOA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@gnat.com", "date": "2004-10-27T12:28:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T12:28:57Z"}, "message": "a-exexpr.adb (Setup_Key): Change initial value to 16#DEAD#...\n\n2004-10-26  Gary Dismukes  <dismukes@gnat.com>\n\n\t* a-exexpr.adb (Setup_Key): Change initial value to 16#DEAD#, for\n\tcompatibility with type Unwind_Word on 16-bit targets such as AAMP.\n\nFrom-SVN: r89643", "tree": {"sha": "e68f88fd51dd6c21f67e49a26565cbe0935c9d70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e68f88fd51dd6c21f67e49a26565cbe0935c9d70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/910a2e4d8c25017c00098043c52a0ad8662272c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910a2e4d8c25017c00098043c52a0ad8662272c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/910a2e4d8c25017c00098043c52a0ad8662272c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910a2e4d8c25017c00098043c52a0ad8662272c8/comments", "author": null, "committer": null, "parents": [{"sha": "7cd6e9f14f058fdac9ca87e19ff9c85907f3625c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd6e9f14f058fdac9ca87e19ff9c85907f3625c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd6e9f14f058fdac9ca87e19ff9c85907f3625c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "913c0e8e186772d590104e096df7ee044ab413cf", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/910a2e4d8c25017c00098043c52a0ad8662272c8/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/910a2e4d8c25017c00098043c52a0ad8662272c8/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=910a2e4d8c25017c00098043c52a0ad8662272c8", "patch": "@@ -224,15 +224,16 @@ package body Exception_Propagation is\n    procedure End_Handler (GCC_Exception : GNAT_GCC_Exception_Access);\n    pragma Export (C, End_Handler, \"__gnat_end_handler\");\n \n+   Setup_Key : constant := 16#DEAD#;\n    --  To handle the case of a task \"transferring\" an exception occurrence to\n    --  another task, for instance via Exceptional_Complete_Rendezvous, we need\n    --  to be able to identify occurrences which have been Setup and not yet\n    --  Propagated. We hijack one of the common header fields for that purpose,\n    --  setting it to a special key value during the setup process, clearing it\n    --  at the very beginning of the propagation phase, and expecting it never\n-   --  to be reset to the special value later on.\n-\n-   Setup_Key : constant := 16#DEAD_BEEF#;\n+   --  to be reset to the special value later on. A 16-bit value is used rather\n+   --  than a 32-bit value for static compatibility with 16-bit targets such as\n+   --  AAMP (where type Unwind_Word will be 16 bits).\n \n    function Is_Setup_And_Not_Propagated (E : EOA) return Boolean;\n "}]}