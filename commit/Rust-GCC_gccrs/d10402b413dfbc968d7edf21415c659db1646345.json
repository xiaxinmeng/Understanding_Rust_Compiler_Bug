{"sha": "d10402b413dfbc968d7edf21415c659db1646345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwNDAyYjQxM2RmYmM5NjhkN2VkZjIxNDE1YzY1OWRiMTY0NjM0NQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-09-28T13:32:41Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-09-28T13:32:41Z"}, "message": "PR c++/54372 - unused attribute inactive on dependant entities\n\nIn the example of this patch, gcc/g++ invoked with\n-Wunused-local-typedefs warns on dependant entities even when those\nare decorated with the 'unused' attribute.\n\nThis is because in cplus_decl_attributes, save_template_attributes\nmakes so that the 'unused' attribute is applied to its appertaining\nentity only at instantiation time.  But then at parsing time\nmaybe_warn_unused_local_typedefs checks for TREE_USED before warning.\n\nThis patch applies the 'unused' attribute at compilation time.\n\nTested on x86_64-unknown-linux-gnu against trunk.\n\ngcc/cp/\n\n\t* decl2.c (is_late_template_attribute): \"unused\" attribute is to\n\tbe applied at compile time.\n\ngcc/testsuite/\n\n\t* c-c++-common/Wunused-local-typedefs-2.c: New test.\n\nFrom-SVN: r191830", "tree": {"sha": "7928841298b3d0e441ba635912fde0644eea753a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7928841298b3d0e441ba635912fde0644eea753a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d10402b413dfbc968d7edf21415c659db1646345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10402b413dfbc968d7edf21415c659db1646345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10402b413dfbc968d7edf21415c659db1646345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10402b413dfbc968d7edf21415c659db1646345/comments", "author": null, "committer": null, "parents": [{"sha": "3b4441db79de403b90038af98f8641c19ff0953b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4441db79de403b90038af98f8641c19ff0953b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4441db79de403b90038af98f8641c19ff0953b"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "6550e16c654daa7698c3e4eee37e687f83da5b44", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d10402b413dfbc968d7edf21415c659db1646345", "patch": "@@ -1,3 +1,9 @@\n+2012-09-28  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/54372 - unused attribute inactive on dependant entities\n+\t* decl2.c (is_late_template_attribute): \"unused\" attribute is to\n+    \tbe applied at compile time.\n+\n 2012-09-25  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/29028 - Missed unused warning on using declaration"}, {"sha": "a590d1781561f1a5e29119ce73866576445547b1", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=d10402b413dfbc968d7edf21415c659db1646345", "patch": "@@ -1104,6 +1104,11 @@ is_late_template_attribute (tree attr, tree decl)\n   if (is_attribute_p (\"weak\", name))\n     return true;\n \n+  /* Attribute unused is applied directly, as it appertains to\n+     decls. */\n+  if (is_attribute_p (\"unused\", name))\n+    return false;\n+\n   /* If any of the arguments are dependent expressions, we can't evaluate\n      the attribute until instantiation time.  */\n   for (arg = args; arg; arg = TREE_CHAIN (arg))"}, {"sha": "22ff3f58ef0fa1c5ff2c7b691172c486d4279d41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d10402b413dfbc968d7edf21415c659db1646345", "patch": "@@ -1,3 +1,8 @@\n+2012-09-28  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/54372 - unused attribute inactive on dependant entities\n+\t* c-c++-common/Wunused-local-typedefs-2.c: New test.\n+\n 2012-09-25  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/29028 - Missed unused warning on using declaration"}, {"sha": "77bacd788baf1ea86a56f24f051564b5c03b5b0c", "filename": "gcc/testsuite/c-c++-common/Wunused-local-typedefs-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-local-typedefs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10402b413dfbc968d7edf21415c659db1646345/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-local-typedefs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-local-typedefs-2.c?ref=d10402b413dfbc968d7edf21415c659db1646345", "patch": "@@ -0,0 +1,35 @@\n+/*  Origin PR c++/54372\n+    { dg-options \"-Wunused-local-typedefs\" }\n+    { dg-do compile }\n+*/\n+\n+template <typename T>\n+void f2()\n+{\n+    typedef T t __attribute__((unused));\n+}\n+\n+class S\n+{\n+    template <typename T>\n+    void f4()\n+    {\n+\ttypedef T t __attribute__((unused));\n+    }\n+};\n+\n+template <typename T>\n+class tS\n+{\n+    void f()\n+    {\n+\ttypedef T t2 __attribute__((unused));\n+    }\n+\n+    template <typename U>\n+    void f2()\n+    {\n+\ttypedef T t1 __attribute__((unused));\n+\ttypedef U t2 __attribute__((unused));\n+    }\n+};"}]}