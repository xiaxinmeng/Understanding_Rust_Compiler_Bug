{"sha": "f142b5bc21027d6a14a31f6dd9768b913fd199ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0MmI1YmMyMTAyN2Q2YTE0YTMxZjZkZDk3NjhiOTEzZmQxOTliYQ==", "commit": {"author": {"name": "Romain Geissler", "email": "romain.geissler@gmail.com", "date": "2011-08-04T11:30:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-08-04T11:30:45Z"}, "message": "gengtype-state.c: Include \"bconfig.h\" if GENERATOR_FILE is defined, \"config.h\" otherwise.\n\n2011-08-04  Romain Geissler  <romain.geissler@gmail.com>\n\n\t* gengtype-state.c: Include \"bconfig.h\" if\n\tGENERATOR_FILE is defined, \"config.h\" otherwise.\n\t* gengtype.c: Likewise.\n\t* gengtype-lex.l: Likewise.\n\t* gengtype-parse.c: Likewise.\n\t* Makefile.in (gengtype-lex.o-warn): New variable.\n\t(plugin_resourcesdir): Likewise.\n\t(plugin_bindir): Likewise.\n\t(plugin_includedir): Use $(plugin_resourcesdir) as prefix base.\n\t(MOSTLYCLEANFILES): Add gengtype$(exeext).\n\t(native): Depend on gengtype$(exeext) is $enable_plugin\n\tis set to \"yes\".\n\t(gtype.state): Depend on s-gtype. Use temporary file.\n\t(gengtype-lex.o): New rule.\n\t(gengtype-parse.o): Likewise.\n\t(gengtype-state.o): Likewise.\n\t(gengtype$(exeext)): Likewise.\n\t(install-gengtype): Likewise.\n\t(gengtype.o): Likewise.\n\t(build/gengtype.o): Depend on version.h.\n\t(build/gengtype-state): Depend on double-int.h, version.h,\n\t$(HASHTAB_H), $(OBSTACK_H), $(XREGEX_H) and build/errors.o.\n\t(install-plugin): Depend on install-gengtype.\n\nFrom-SVN: r177358", "tree": {"sha": "f1de2f7a09aa7bba895a381f90aea9843be566b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1de2f7a09aa7bba895a381f90aea9843be566b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f142b5bc21027d6a14a31f6dd9768b913fd199ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f142b5bc21027d6a14a31f6dd9768b913fd199ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f142b5bc21027d6a14a31f6dd9768b913fd199ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f142b5bc21027d6a14a31f6dd9768b913fd199ba/comments", "author": {"login": "Romain-Geissler", "id": 801960, "node_id": "MDQ6VXNlcjgwMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/801960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Romain-Geissler", "html_url": "https://github.com/Romain-Geissler", "followers_url": "https://api.github.com/users/Romain-Geissler/followers", "following_url": "https://api.github.com/users/Romain-Geissler/following{/other_user}", "gists_url": "https://api.github.com/users/Romain-Geissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Romain-Geissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Romain-Geissler/subscriptions", "organizations_url": "https://api.github.com/users/Romain-Geissler/orgs", "repos_url": "https://api.github.com/users/Romain-Geissler/repos", "events_url": "https://api.github.com/users/Romain-Geissler/events{/privacy}", "received_events_url": "https://api.github.com/users/Romain-Geissler/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9e357d27e9b1776193865fb848f248993cce91c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e357d27e9b1776193865fb848f248993cce91c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e357d27e9b1776193865fb848f248993cce91c"}], "stats": {"total": 100, "additions": 86, "deletions": 14}, "files": [{"sha": "6e0dd68a0178aec979d749627d15964d406c0366", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -1,3 +1,29 @@\n+2011-08-04  Romain Geissler  <romain.geissler@gmail.com>\n+\n+\t* gengtype-state.c: Include \"bconfig.h\" if\n+\tGENERATOR_FILE is defined, \"config.h\" otherwise.\n+\t* gengtype.c: Likewise.\n+\t* gengtype-lex.l: Likewise.\n+\t* gengtype-parse.c: Likewise.\n+\t* Makefile.in (gengtype-lex.o-warn): New variable.\n+\t(plugin_resourcesdir): Likewise.\n+\t(plugin_bindir): Likewise.\n+\t(plugin_includedir): Use $(plugin_resourcesdir) as prefix base.\n+\t(MOSTLYCLEANFILES): Add gengtype$(exeext).\n+\t(native): Depend on gengtype$(exeext) is $enable_plugin\n+\tis set to \"yes\".\n+\t(gtype.state): Depend on s-gtype. Use temporary file.\n+\t(gengtype-lex.o): New rule.\n+\t(gengtype-parse.o): Likewise.\n+\t(gengtype-state.o): Likewise.\n+\t(gengtype$(exeext)): Likewise.\n+\t(install-gengtype): Likewise.\n+\t(gengtype.o): Likewise.\n+\t(build/gengtype.o): Depend on version.h.\n+\t(build/gengtype-state): Depend on double-int.h, version.h,\n+\t$(HASHTAB_H), $(OBSTACK_H), $(XREGEX_H) and build/errors.o.\n+\t(install-plugin): Depend on install-gengtype.\n+\n 2011-08-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/49905"}, {"sha": "0204f93208a0c363eea166518b0d90b5806bdc4f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 44, "deletions": 14, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -192,6 +192,7 @@ GCC_WARN_CXXFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $($@-warn)\n # be subject to -Werror:\n # flex output may yield harmless \"no previous prototype\" warnings\n build/gengtype-lex.o-warn = -Wno-error\n+gengtype-lex.o-warn = -Wno-error\n # mips-tfile.c contains -Wcast-qual warnings.\n mips-tfile.o-warn = -Wno-error\n expmed.o-warn = -Wno-error\n@@ -566,8 +567,12 @@ libexecdir = @libexecdir@\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(version)\n # Directory in which the compiler finds executables\n libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(version)\n-# Directory in which plugin headers are installed\n-plugin_includedir = $(libsubdir)/plugin/include\n+# Directory in which all plugin resources are installed\n+plugin_resourcesdir = $(libsubdir)/plugin\n+ # Directory in which plugin headers are installed\n+plugin_includedir = $(plugin_resourcesdir)/include\n+# Directory in which plugin specific executables are installed\n+plugin_bindir = $(libexecsubdir)/plugin\n # Used to produce a relative $(gcc_tooldir) in gcc.o\n unlibsubdir = ../../..\n # $(prefix), expressed as a path relative to $(libsubdir).\n@@ -1531,8 +1536,8 @@ MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) lto-wrapper$(exeext) \\\n  gcov-iov$(build_exeext) gcov$(exeext) gcov-dump$(exeext) \\\n- *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a libcommon-target.a \\\n- libcommon.a libgcc.mk\n+ gengtype$(exeext) *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a \\\n+ libcommon-target.a libcommon.a libgcc.mk\n \n # Defined in libgcc2.c, included only in the static library.\n LIB2FUNCS_ST = _eprintf __gcc_bcmp\n@@ -1792,6 +1797,10 @@ rest.encap: lang.rest.encap\n native: config.status auto-host.h build-@POSUB@ $(LANGUAGES) \\\n \t$(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(COLLECT2) lto-wrapper$(exeext)\n \n+ifeq ($(enable_plugin),yes)\n+native: gengtype$(exeext)\n+endif\n+\n # Define the names for selecting languages in LANGUAGES.\n c: cc1$(exeext)\n \n@@ -3838,7 +3847,7 @@ ALL_GTFILES_H := $(sort $(GTFILES_H) $(GTFILES_LANG_H))\n # write it out to a file (taking care not to do that in a way that\n # overflows a command line!) and then have gengtype read the file in.\n \n-$(ALL_GTFILES_H) gtype-desc.c gtype-desc.h : s-gtype ; @true\n+$(ALL_GTFILES_H) gtype-desc.c gtype-desc.h gtype.state: s-gtype ; @true\n \n ### Common flags to gengtype [e.g. -v or -B backupdir]\n GENGTYPE_FLAGS= \n@@ -3853,9 +3862,10 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \\\n \t gtyp-input.list\n # First, parse all files and save a state file.\n \t$(RUN_GEN) build/gengtype$(build_exeext) $(GENGTYPE_FLAGS) \\\n-                    -S $(srcdir) -I gtyp-input.list -w gtype.state\n+                    -S $(srcdir) -I gtyp-input.list -w tmp-gtype.state\n # Second, read the state file and generate all files.  This ensure that\n # gtype.state is correctly read:\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-gtype.state gtype.state\n \t$(RUN_GEN) build/gengtype$(build_exeext) $(GENGTYPE_FLAGS) \\\n                     -r gtype.state\n \t$(STAMP) s-gtype\n@@ -3952,14 +3962,23 @@ build/genextract.o : genextract.c $(RTL_BASE_H) $(BCONFIG_H)\t\t\\\n build/genflags.o : genflags.c $(RTL_BASE_H) $(OBSTACK_H) $(BCONFIG_H)\t\\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(READ_MD_H) gensupport.h\n build/gengenrtl.o : gengenrtl.c $(BCONFIG_H) $(SYSTEM_H) rtl.def\n-build/gengtype-lex.o : gengtype-lex.c gengtype.h $(BCONFIG_H) $(SYSTEM_H)\n-build/gengtype-parse.o : gengtype-parse.c gengtype.h $(BCONFIG_H)\t\\\n+gengtype-lex.o build/gengtype-lex.o : gengtype-lex.c gengtype.h $(SYSTEM_H)\n+gengtype-lex.o: $(CONFIG_H)\n+build/gengtype-lex.o: $(BCONFIG_H)\n+gengtype-parse.o build/gengtype-parse.o : gengtype-parse.c gengtype.h \\\n   $(SYSTEM_H)\n-build/gengtype-state.o: gengtype-state.c gengtype.h $(BCONFIG_H)\t\\\n-  $(SYSTEM_H) errors.h\n-build/gengtype.o : gengtype.c $(BCONFIG_H) $(SYSTEM_H) gengtype.h \t\\\n-  rtl.def insn-notes.def errors.h double-int.h $(HASHTAB_H)             \\\n+gengtype-parse.o: $(CONFIG_H)\n+build/gengtype-parse.o: $(BCONFIG_H)\n+gengtype-state.o build/gengtype-state.o: gengtype-state.c $(SYSTEM_H) \\\n+  gengtype.h errors.h double-int.h version.h $(HASHTAB_H) $(OBSTACK_H) \\\n+  $(XREGEX_H)\n+gengtype-state.o: $(CONFIG_H)\n+build/gengtype-state.o: $(BCONFIG_H)\n+gengtype.o build/gengtype.o : gengtype.c $(SYSTEM_H) gengtype.h \t\\\n+  rtl.def insn-notes.def errors.h double-int.h version.h $(HASHTAB_H) \\\n   $(OBSTACK_H) $(XREGEX_H)\n+gengtype.o: $(CONFIG_H)\n+build/gengtype.o: $(BCONFIG_H)\n build/genmddeps.o: genmddeps.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   errors.h $(READ_MD_H)\n build/genmodes.o : genmodes.c $(BCONFIG_H) $(SYSTEM_H) errors.h\t\t\\\n@@ -4003,7 +4022,11 @@ build/genautomata$(build_exeext) : BUILD_LIBS += -lm\n \n # These programs are not linked with the MD reader.\n build/gengtype$(build_exeext) : build/gengtype-lex.o build/gengtype-parse.o \\\n-              build/gengtype-state.o build/version.o\n+              build/gengtype-state.o build/version.o build/errors.o\n+\n+gengtype$(exeext) : gengtype.o gengtype-lex.o gengtype-parse.o \\\n+              gengtype-state.o version.o errors.o $(LIBDEPS)\n+\t+$(LINKER) $(ALL_LINKERFLAGS) -o $@ $(filter-out ($LIBDEPS), $^) $(LIBS)\n \n # Rule for the generator programs:\n $(genprog:%=build/gen%$(build_exeext)): build/gen%$(build_exeext): build/gen%.o $(BUILD_LIBDEPS)\n@@ -4600,8 +4623,15 @@ s-header-vars: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change tmp-header-vars b-header-vars\n \t$(STAMP) s-header-vars\n \n+# Install gengtype\n+install-gengtype: installdirs gengtype$(exeext) gtype.state\n+\t$(mkinstalldirs) $(DESTDIR)$(plugin_resourcesdir)\n+\t$(INSTALL_DATA) gtype.state $(DESTDIR)$(plugin_resourcesdir)/gtype.state\n+\t$(mkinstalldirs) $(DESTDIR)$(plugin_bindir)\n+\t$(INSTALL_PROGRAM) gengtype$(exeext) $(DESTDIR)$(plugin_bindir)/gengtype$(exeext)\n+\n # Install the headers needed to build a plugin.\n-install-plugin: installdirs lang.install-plugin s-header-vars\n+install-plugin: installdirs lang.install-plugin s-header-vars install-gengtype\n # We keep the directory structure for files in config or c-family and .def\n # files. All other files are flattened to a single directory.\n \t$(mkinstalldirs) $(DESTDIR)$(plugin_includedir)"}, {"sha": "a71cce00f4f1b7dca0e90d36c0fec5a8a1eb7905", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -22,7 +22,11 @@ along with GCC; see the file COPYING3.  If not see\n %option noinput\n \n %{\n+#ifdef GENERATOR_FILE\n #include \"bconfig.h\"\n+#else\n+#include \"config.h\"\n+#endif\n #include \"system.h\"\n \n #define malloc xmalloc"}, {"sha": "89f14e84d960b643932248d700e743d1d68c170c", "filename": "gcc/gengtype-parse.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-parse.c?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -17,7 +17,11 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+#ifdef GENERATOR_FILE\n #include \"bconfig.h\"\n+#else\n+#include \"config.h\"\n+#endif\n #include \"system.h\"\n #include \"gengtype.h\"\n "}, {"sha": "5a5939dec85fd7e121e8600264ab36a560133928", "filename": "gcc/gengtype-state.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-state.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype-state.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-state.c?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -23,7 +23,11 @@\n    and Basile Starynkevitch <basile@starynkevitch.net>\n */\n \n+#ifdef GENERATOR_FILE\n #include \"bconfig.h\"\n+#else\n+#include \"config.h\"\n+#endif\n #include \"system.h\"\n #include \"errors.h\"\t/* For fatal.  */\n #include \"double-int.h\""}, {"sha": "0820741a051a7674ad1ccaa6eafc5d73e12ca931", "filename": "gcc/gengtype.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f142b5bc21027d6a14a31f6dd9768b913fd199ba/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=f142b5bc21027d6a14a31f6dd9768b913fd199ba", "patch": "@@ -18,7 +18,11 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+#ifdef GENERATOR_FILE\n #include \"bconfig.h\"\n+#else\n+#include \"config.h\"\n+#endif\n #include \"system.h\"\n #include \"errors.h\"\t\t/* for fatal */\n #include \"getopt.h\""}]}