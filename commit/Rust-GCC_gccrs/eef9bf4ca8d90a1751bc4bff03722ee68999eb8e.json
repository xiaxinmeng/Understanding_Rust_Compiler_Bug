{"sha": "eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmOWJmNGNhOGQ5MGExNzUxYmM0YmZmMDM3MjJlZTY4OTk5ZWI4ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-19T11:13:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-19T11:13:23Z"}, "message": "libstdc++: Add deprecated attributes to old iostream members\n\nBack in 2017 I removed these prehistoric members (which were deprecated\nsince C++98) for C++17 mode. But I didn't add deprecated attributes to\nmost of them, so users didn't get any warning they would be going away.\nApparently some poor souls do actually use some of these names, and so\nnow that GCC 11 defaults to -std=gnu++17 some code has stopped\ncompiling.\n\nThis adds deprecated attributes to them, so that C++98/03/11/14 code\nwill get a warning if it uses them. I'll also backport this to the\nrelease branches so that users can find out about the deprecation before\nthey start using C++17.\n\nIn order to give deprecated warnings even in C++98 mode this patch makes\n_GLIBCXX_DEPRECATED work even for C++98, adds _GLIBCXX11_DEPRECATED for\nthe old meaning of _GLIBCXX_DEPRECATED, and adds new macros such as\n_GLIBCXX_DEPRECATED_SUGGEST for suggesting alternatives to deprecated\nfeatures.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/c++config (_GLIBCXX_DEPRECATED): Define for all\n\tstandard modes.\n\t(_GLIBCXX_DEPRECATED_SUGGEST): New macro for \"use 'foo' instead\"\n\tmessage in deprecated warnings.\n\t(_GLIBCXX11_DEPRECATED, _GLIBCXX11_DEPRECATED_SUGGEST): New\n\tmacros for marking features derpecated in C++11.\n\t(_GLIBCXX17_DEPRECATED_SUGGEST, _GLIBCXX20_DEPRECATED_SUGGEST):\n\tNew macros.\n\t* include/backward/auto_ptr.h (auto_ptr_ref, auto_ptr<void>):\n\tUse _GLIBCXX11_DEPRECATED instead of _GLIBCXX_DEPRECATED.\n\t(auto_ptr): Use _GLIBCXX11_DEPRECATED_SUGGEST.\n\t* include/backward/binders.h (binder1st, binder2nd): Likewise.\n\t* include/bits/ios_base.h (io_state, open_mode, seek_dir)\n\t(streampos, streamoff): Use _GLIBCXX_DEPRECATED_SUGGEST.\n\t* include/std/streambuf (stossc): Replace C++11 attribute\n\twith _GLIBCXX_DEPRECATED_SUGGEST.\n\t* include/std/type_traits (__is_nullptr_t): Use\n\t_GLIBCXX_DEPRECATED_SUGGEST instead of _GLIBCXX_DEPRECATED.\n\t* testsuite/27_io/types/1.cc: Check for deprecated warnings.\n\tAlso check for io_state, open_mode and seek_dir typedefs.", "tree": {"sha": "77266a8822275f972e7f45e31d71167b962cf60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77266a8822275f972e7f45e31d71167b962cf60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f571ffc513b689fa26e4c9fceba17c2c989ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f571ffc513b689fa26e4c9fceba17c2c989ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f571ffc513b689fa26e4c9fceba17c2c989ab3"}], "stats": {"total": 63, "additions": 45, "deletions": 18}, "files": [{"sha": "0863a0804d126763a5006e0d6cada53b95d9389b", "filename": "libstdc++-v3/include/backward/auto_ptr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -51,7 +51,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       explicit\n       auto_ptr_ref(_Tp1* __p): _M_ptr(__p) { }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX11_DEPRECATED;\n \n #pragma GCC diagnostic push\n #pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n@@ -284,7 +284,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Tp1>\n         operator auto_ptr<_Tp1>() throw()\n         { return auto_ptr<_Tp1>(this->release()); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX11_DEPRECATED_SUGGEST(\"std::unique_ptr\");\n \n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 541. shared_ptr template assignment and void\n@@ -293,7 +293,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n     public:\n       typedef void element_type;\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX11_DEPRECATED;\n \n #if __cplusplus >= 201103L\n   template<_Lock_policy _Lp>"}, {"sha": "e3029e74bf10b167534a0e8cad8412fb3c5f2b53", "filename": "libstdc++-v3/include/backward/binders.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -127,7 +127,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typename _Operation::result_type\n       operator()(typename _Operation::second_argument_type& __x) const\n       { return op(value, __x); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX11_DEPRECATED_SUGGEST(\"std::bind\");\n \n   /// One of the @link binders binder functors@endlink.\n   template<typename _Operation, typename _Tp>\n@@ -162,7 +162,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typename _Operation::result_type\n       operator()(typename _Operation::first_argument_type& __x) const\n       { return op(__x, value); }\n-    } _GLIBCXX_DEPRECATED;\n+    } _GLIBCXX11_DEPRECATED_SUGGEST(\"std::bind\");\n \n   /// One of the @link binders binder functors@endlink.\n   template<typename _Operation, typename _Tp>"}, {"sha": "116faf6444160c5b9d49e3cd18e26e0c6adb419b", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -83,22 +83,37 @@\n # define _GLIBCXX_USE_DEPRECATED 1\n #endif\n \n-#if defined(__DEPRECATED) && (__cplusplus >= 201103L)\n+#if defined(__DEPRECATED)\n # define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))\n+# define _GLIBCXX_DEPRECATED_SUGGEST(ALT) \\\n+  __attribute__ ((__deprecated__ (\"use '\" ALT \"' instead\")))\n #else\n # define _GLIBCXX_DEPRECATED\n+# define _GLIBCXX_DEPRECATED_SUGGEST(ALT)\n+#endif\n+\n+#if defined(__DEPRECATED) && (__cplusplus >= 201103L)\n+# define _GLIBCXX11_DEPRECATED _GLIBCXX_DEPRECATED\n+# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)\n+#else\n+# define _GLIBCXX11_DEPRECATED\n+# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT)\n #endif\n \n #if defined(__DEPRECATED) && (__cplusplus >= 201703L)\n # define _GLIBCXX17_DEPRECATED [[__deprecated__]]\n+# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)\n #else\n # define _GLIBCXX17_DEPRECATED\n+# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT)\n #endif\n \n #if defined(__DEPRECATED) && (__cplusplus > 201703L)\n # define _GLIBCXX20_DEPRECATED(MSG) [[deprecated(MSG)]]\n+# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)\n #else\n # define _GLIBCXX20_DEPRECATED(MSG)\n+# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT)\n #endif\n \n // Macros for ABI tag attributes."}, {"sha": "4ac026547b49090531420b9e79e728c5a2074da4", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -471,12 +471,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus <= 201402L\n     // Annex D.6 (removed in C++17)\n-    typedef int io_state;\n-    typedef int open_mode;\n-    typedef int seek_dir;\n-\n-    typedef std::streampos streampos;\n-    typedef std::streamoff streamoff;\n+    typedef int io_state\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::iostate\");\n+    typedef int open_mode\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::openmode\");\n+    typedef int seek_dir\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::seekdir\");\n+\n+    typedef std::streampos streampos\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::streampos\");\n+    typedef std::streamoff streamoff\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::streamoff\");\n #endif\n \n     // Callbacks;"}, {"sha": "cae35e75bda2fb971bffb2f47027a2e6e3cc0b8a", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -784,9 +784,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  See http://gcc.gnu.org/ml/libstdc++/2002-05/msg00168.html\n        */\n-#if __cplusplus >= 201103L\n-      [[__deprecated__(\"stossc is deprecated, use sbumpc instead\")]]\n-#endif\n+      _GLIBCXX_DEPRECATED_SUGGEST(\"std::basic_streambuf::sbumpc\")\n       void\n       stossc()\n       {"}, {"sha": "6ced781bd599bee30d525a0f82e5becd17690e4d", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -518,7 +518,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp>\n     struct __is_nullptr_t\n     : public is_null_pointer<_Tp>\n-    { } _GLIBCXX_DEPRECATED;\n+    { } _GLIBCXX_DEPRECATED_SUGGEST(\"std::is_null_pointer\");\n \n   // Composite type categories.\n "}, {"sha": "a565c205b35cd4ee3ff98bfcba10579aeb60e771", "filename": "libstdc++-v3/testsuite/27_io/types/1.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef9bf4ca8d90a1751bc4bff03722ee68999eb8e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F1.cc?ref=eef9bf4ca8d90a1751bc4bff03722ee68999eb8e", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// { dg-options \"-Wdeprecated\" }\n // { dg-do compile { target c++14_down } }\n \n // 27.4.2.1 - Types [lib.ios.types]\n@@ -26,6 +27,14 @@\n // Annex D, deprecated.\n void test01()\n {\n-  typedef std::ios_base::streampos streampos_type;\n-  typedef std::ios_base::streamoff streamoff_type;\n+  typedef std::ios_base::streampos streampos_type; // { dg-warning \"is deprecated: use 'std::streampos' instead\" }\n+  typedef std::ios_base::streamoff streamoff_type; // { dg-warning \"is deprecated: use 'std::streamoff' instead\" }\n+}\n+\n+// Annex D, deprecated.\n+void test02()\n+{\n+  typedef std::ios_base::io_state iostate_type; // { dg-warning \"is deprecated: use 'std::iostate' instead\" }\n+  typedef std::ios_base::open_mode openmode_type; // { dg-warning \"is deprecated: use 'std::openmode' instead\" }\n+  typedef std::ios_base::seek_dir seekdir_type; // { dg-warning \"is deprecated: use 'std::seekdir' instead\" }\n }"}]}