{"sha": "7061977bf95142acdacc0727223a1acc619dfb2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2MTk3N2JmOTUxNDJhY2RhY2MwNzI3MjIzYTFhY2M2MTlkZmIyZQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@vnet.linux.ibm.com", "date": "2013-07-22T23:08:44Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-07-22T23:08:44Z"}, "message": "rs6000.c (rs6000_expand_vector_init): Fix endianness when selecting field to splat.\n\n2013-07-22  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n\t    Anton Blanchard <anton@au1.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Fix\n\tendianness when selecting field to splat.\n\n\nCo-Authored-By: Anton Blanchard <anton@au1.ibm.com>\n\nFrom-SVN: r201149", "tree": {"sha": "59177bf2cd228ae4e6262d207c2c0bcd897be8f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59177bf2cd228ae4e6262d207c2c0bcd897be8f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7061977bf95142acdacc0727223a1acc619dfb2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7061977bf95142acdacc0727223a1acc619dfb2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7061977bf95142acdacc0727223a1acc619dfb2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7061977bf95142acdacc0727223a1acc619dfb2e/comments", "author": null, "committer": null, "parents": [{"sha": "75a418785a223a0efa41824bf55826271a4ddde6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a418785a223a0efa41824bf55826271a4ddde6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a418785a223a0efa41824bf55826271a4ddde6"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d63ff2759de326cbe37c7105301b18084e6f4b21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061977bf95142acdacc0727223a1acc619dfb2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061977bf95142acdacc0727223a1acc619dfb2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7061977bf95142acdacc0727223a1acc619dfb2e", "patch": "@@ -1,3 +1,9 @@\n+2013-07-22  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n+\t    Anton Blanchard <anton@au1.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Fix\n+\tendianness when selecting field to splat.\n+\n 2013-07-22  Eric Christopher  <echristo@gmail.com>\n \n \t* dwarf2out.c (die_odr_checksum): New function to use"}, {"sha": "646eedcc79d0568ef955047a941ca12ae49c97b7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061977bf95142acdacc0727223a1acc619dfb2e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061977bf95142acdacc0727223a1acc619dfb2e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7061977bf95142acdacc0727223a1acc619dfb2e", "patch": "@@ -5177,6 +5177,7 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n      of 64-bit items is not supported on Altivec.  */\n   if (all_same && GET_MODE_SIZE (inner_mode) <= 4)\n     {\n+      rtx field;\n       mem = assign_stack_temp (mode, GET_MODE_SIZE (inner_mode));\n       emit_move_insn (adjust_address_nv (mem, inner_mode, 0),\n \t\t      XVECEXP (vals, 0, 0));\n@@ -5187,9 +5188,11 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n \t\t\t\t\t      gen_rtx_SET (VOIDmode,\n \t\t\t\t\t\t\t   target, mem),\n \t\t\t\t\t      x)));\n+      field = (BYTES_BIG_ENDIAN ? const0_rtx\n+\t       : GEN_INT (GET_MODE_NUNITS (mode) - 1));\n       x = gen_rtx_VEC_SELECT (inner_mode, target,\n \t\t\t      gen_rtx_PARALLEL (VOIDmode,\n-\t\t\t\t\t\tgen_rtvec (1, const0_rtx)));\n+\t\t\t\t\t\tgen_rtvec (1, field)));\n       emit_insn (gen_rtx_SET (VOIDmode, target,\n \t\t\t      gen_rtx_VEC_DUPLICATE (mode, x)));\n       return;"}]}