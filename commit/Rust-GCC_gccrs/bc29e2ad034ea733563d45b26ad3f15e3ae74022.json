{"sha": "bc29e2ad034ea733563d45b26ad3f15e3ae74022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyOWUyYWQwMzRlYTczMzU2M2Q0NWIyNmFkM2YxNWUzYWU3NDAyMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T21:52:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T21:52:21Z"}, "message": "(split_double): Fix arg of REAL_VALUE_TO_TARGET_DOUBLE.\n\nFrom-SVN: r7314", "tree": {"sha": "f09d783a94574f78af06309232d881de8bb4d9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f09d783a94574f78af06309232d881de8bb4d9aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc29e2ad034ea733563d45b26ad3f15e3ae74022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc29e2ad034ea733563d45b26ad3f15e3ae74022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc29e2ad034ea733563d45b26ad3f15e3ae74022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc29e2ad034ea733563d45b26ad3f15e3ae74022/comments", "author": null, "committer": null, "parents": [{"sha": "60e611651584555d097ad3b2511ddea6d1fc6c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e611651584555d097ad3b2511ddea6d1fc6c20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e611651584555d097ad3b2511ddea6d1fc6c20"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "861165625ec67af65e865fab6312efbfd3182c8a", "filename": "gcc/final.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc29e2ad034ea733563d45b26ad3f15e3ae74022/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc29e2ad034ea733563d45b26ad3f15e3ae74022/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=bc29e2ad034ea733563d45b26ad3f15e3ae74022", "patch": "@@ -2859,11 +2859,17 @@ split_double (value, first, second)\n   else\n     {\n #ifdef REAL_ARITHMETIC\n-      REAL_VALUE_TYPE r; HOST_WIDE_INT l[2];\n+      REAL_VALUE_TYPE r; long l[2];\n       REAL_VALUE_FROM_CONST_DOUBLE (r, value);\n+\n+      /* Note, this converts the REAL_VALUE_TYPE to the target's\n+\t format, splits up the floating point double and outputs\n+\t exactly 32 bits of it into each of l[0] and l[1] --\n+\t not necessarily BITS_PER_WORD bits. */\n       REAL_VALUE_TO_TARGET_DOUBLE (r, l);\n-      *first = GEN_INT (l[0]);\n-      *second = GEN_INT (l[1]);\n+\n+      *first = GEN_INT ((HOST_WIDE_INT) l[0]);\n+      *second = GEN_INT ((HOST_WIDE_INT) l[1]);\n #else\n       if ((HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n \t   || HOST_BITS_PER_WIDE_INT != BITS_PER_WORD)"}]}