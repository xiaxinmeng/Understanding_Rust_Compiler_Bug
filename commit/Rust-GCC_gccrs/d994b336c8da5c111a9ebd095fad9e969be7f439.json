{"sha": "d994b336c8da5c111a9ebd095fad9e969be7f439", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5NGIzMzZjOGRhNWMxMTFhOWViZDA5NWZhZDllOTY5YmU3ZjQzOQ==", "commit": {"author": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-27T18:02:48Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-27T18:02:48Z"}, "message": "Okay, let's see if CVS can actually put these in the right place...\n\n        * gnu/classpath/jdwp/exception/VmDeadException.java: New file.\n        * gnu/classpath/jdwp/exception/NotImplementedException.java: New file.\n        * gnu/classpath/jdwp/exception/JdwpInternalErrorException.java: New\n        file.\n        * gnu/classpath/jdwp/exception/JdwpException.java: New file.\n        * gnu/classpath/jdwp/exception/InvalidThreadGroupException.java: New\n        file.\n        * gnu/classpath/jdwp/exception/InvalidThreadException.java: New file.\n        * gnu/classpath/jdwp/exception/InvalidStringException.java: New file\n        * gnu/classpath/jdwp/exception/InvalidObjectException.java: New file.\n        * gnu/classpath/jdwp/exception/InvalidEventTypeException.java: New\n        file.\n        * gnu/classpath/jdwp/exception/InvalidCountException.java: New file.\n        * gnu/classpath/jdwp/exception/InvalidClassException.java: New file.\n\nFrom-SVN: r101357", "tree": {"sha": "e109412f7fa43b3f265d886806ed38711ff89085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e109412f7fa43b3f265d886806ed38711ff89085"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d994b336c8da5c111a9ebd095fad9e969be7f439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d994b336c8da5c111a9ebd095fad9e969be7f439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d994b336c8da5c111a9ebd095fad9e969be7f439", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d994b336c8da5c111a9ebd095fad9e969be7f439/comments", "author": null, "committer": null, "parents": [{"sha": "b0bfee6eb4b3363ca97d83bb590d7ac5cf8098d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0bfee6eb4b3363ca97d83bb590d7ac5cf8098d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0bfee6eb4b3363ca97d83bb590d7ac5cf8098d7"}], "stats": {"total": 697, "additions": 697, "deletions": 0}, "files": [{"sha": "ce8c6b8161256f52fc70a285a65dbbba6dea6924", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidClassException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidClassException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidClassException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidClassException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidClassException.java -- invalid/unknown class reference id exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown by the JDWP back-end when an invalid reference\n+ * type id is used by the debugger.\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidClassException\n+  extends JdwpException\n+{\n+  public InvalidClassException (long id)\n+  {\n+    super (JdwpConstants.Error.INVALID_CLASS,\n+\t   \"invalid class id (\" + id + \")\");\n+  }\n+\n+  public InvalidClassException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_CLASS, t);\n+  }\n+}"}, {"sha": "69eef9b99f33fc8add278abd1bb28e20df31f8cb", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidCountException.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidCountException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidCountException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidCountException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,61 @@\n+/* InvalidCountException -- an invalid count exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when a count filter is given an invalid count.\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidCountException\n+  extends JdwpException\n+{\n+  public InvalidCountException (int id)\n+  {\n+    super (JdwpConstants.Error.INVALID_COUNT, \"invalid count (\" + id + \")\");\n+  }\n+\n+  public InvalidCountException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_COUNT, t);\n+  }\n+}"}, {"sha": "ad6bb6a3436232b8edc0e34f8858fceb393d730d", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidEventTypeException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidEventTypeException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidEventTypeException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidEventTypeException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidEventTypeException.java -- an invalid event kind exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when the debugger asks for an event request\n+ * for a non-existant event\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidEventTypeException\n+  extends JdwpException\n+{\n+  public InvalidEventTypeException (byte kind)\n+  {\n+    super (JdwpConstants.Error.INVALID_EVENT_TYPE,\n+\t   \"invalid event type (\" + kind + \")\");\n+  }\n+\n+  public InvalidEventTypeException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_EVENT_TYPE, t);\n+  }\n+}"}, {"sha": "ab76ba97be02adccf37942a1d6da057dadd3cb1f", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidObjectException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidObjectException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidObjectException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidObjectException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidObjectException.java -- an invalid object id exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when an invalid object id is used by\n+ * the debugger\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidObjectException\n+  extends JdwpException\n+{\n+  public InvalidObjectException (long id)\n+  {\n+    super (JdwpConstants.Error.INVALID_OBJECT,\n+\t   \"invalid object id (\" + id + \")\");\n+  }\n+\n+  public InvalidObjectException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_OBJECT, t);\n+  }\n+}"}, {"sha": "fa709b41d177e95a3f47359be634f7959ae083a2", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidStringException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidStringException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidStringException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidStringException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidStringException.java -- an invalid string id exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when the debugger uses an invalid String\n+ * id\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidStringException\n+  extends JdwpException\n+{\n+  public InvalidStringException (String str)\n+  {\n+    super (JdwpConstants.Error.INVALID_STRING,\n+\t   \"invalid string (\" + str + \")\");\n+  }\n+\n+  public InvalidStringException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_STRING, t);\n+  }\n+}"}, {"sha": "d7b4e0d14ac8c5f5a6b644fd95482d68500d0b0e", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidThreadException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidThreadException.java -- an invalid thread id exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when an invalid thread id is used\n+ * by the debugger\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidThreadException\n+  extends JdwpException\n+{\n+  public InvalidThreadException (long id)\n+  {\n+    super (JdwpConstants.Error.INVALID_THREAD,\n+\t   \"invalid thread id (\" + id + \")\");\n+  }\n+\n+  public InvalidThreadException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_THREAD, t);\n+  }\n+}"}, {"sha": "8b6407141ead063aaa2fe5ca197c3576334d1c40", "filename": "libjava/gnu/classpath/jdwp/exception/InvalidThreadGroupException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,63 @@\n+/* InvalidThreadGroupException.java -- an invalid thread group id exception\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when an invalid thread group id is used\n+ * by the debugger\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class InvalidThreadGroupException\n+  extends JdwpException\n+{\n+  public InvalidThreadGroupException (long id)\n+  {\n+    super (JdwpConstants.Error.INVALID_THREAD_GROUP,\n+\t   \"invalid thread id (\" + id + \")\");\n+  }\n+\n+  public InvalidThreadException (Throwable t)\n+  {\n+    super (JdwpConstants.Error.INVALID_THREAD_GROUP, t);\n+  }\n+}"}, {"sha": "3f7d2bbcd25e23311299566f38559e15b990d508", "filename": "libjava/gnu/classpath/jdwp/exception/JdwpException.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,86 @@\n+/* JdwpException.java -- an exception base class for all JDWP exceptions\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+/**\n+ * A base class exception for all JDWP back-end exceptions\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class JdwpException\n+  extends Exception\n+{\n+  // The integer error code defined by JDWP\n+  private short _errorCode;\n+\n+  /**\n+   * Constructs a new <code>JdwpException</code> with the\n+   * given error code and given cause\n+   *\n+   * @param code  the JDWP error code\n+   * @param t     the cause of the exception\n+   */\n+  public JdwpException (short code, Throwable t)\n+  {\n+    super (t);\n+    _errorCode = code;\n+  }\n+\n+  /**\n+   * Constructs a new <code>JdwpException</code> with the\n+   * given error code and string error message\n+   *\n+   * @param code  the JDWP error code\n+   * @param str   an error message\n+   */\n+  public JdwpException (short code, String str)\n+  {\n+    super (str);\n+    _errorCode = code;\n+  }\n+\n+  /**\n+   * Returns the JDWP error code represented by this exception\n+   */\n+  public short getErrorCode ()\n+  {\n+    return _errorCode;\n+  }\n+}"}, {"sha": "591cd0e9b0e8a6e299fb455e956485574ec6ebc4", "filename": "libjava/gnu/classpath/jdwp/exception/JdwpInternalErrorException.java", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,58 @@\n+/* JdwpInternalErrorException.java -- an internal error exception\n+   features or functions\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown by the JDWP back-end when an unusual runtime\n+ * error occurs internally\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class JdwpInternalErrorException\n+  extends JdwpException\n+{\n+  public JdwpInternalErrorException (Throwable cause)\n+  {\n+    super (JdwpConstants.Error.INTERNAL, cause);\n+  }\n+}"}, {"sha": "78ba47d745f8ccd4abf03063ceeea2a4b232ef2e", "filename": "libjava/gnu/classpath/jdwp/exception/NotImplementedException.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FNotImplementedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FNotImplementedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FNotImplementedException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,59 @@\n+/* NotImplementedException.java -- an exception for unimplemented JDWP\n+   features or functions\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown by virtual machines when functionality\n+ * or features are not implemented\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class NotImplementedException\n+  extends JdwpException\n+{\n+  public NotImplementedException (String feature)\n+  {\n+    super (JdwpConstants.Error.NOT_IMPLEMENTED,\n+\t   feature + \" is not yet implemented\");\n+  }\n+}"}, {"sha": "5865dab773a3f5d7074fbca2c991ae819d3650ec", "filename": "libjava/gnu/classpath/jdwp/exception/VmDeadException.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FVmDeadException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d994b336c8da5c111a9ebd095fad9e969be7f439/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FVmDeadException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FVmDeadException.java?ref=d994b336c8da5c111a9ebd095fad9e969be7f439", "patch": "@@ -0,0 +1,55 @@\n+/* Jdwp.java -- Virtual machine to JDWP back-end programming interface\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.classpath.jdwp.exception;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+\n+/**\n+ * An exception thrown when the virtual machine is dead\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class VmDeadException\n+  extends JdwpException\n+{\n+  public VmDeadException ()\n+  {\n+    super (JdwpConstants.Error.VM_DEAD, \"Virtual machine is dead\");\n+  }\n+}"}]}