{"sha": "09825f923fadac7b79a894c4e7f6e0839c2837ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4MjVmOTIzZmFkYWM3Yjc5YTg5NGM0ZTdmNmUwODM5YzI4MzdhYw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-08-21T14:47:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:47:44Z"}, "message": "[Ada] Einfo: remove obsolete code\n\n2018-08-21  Bob Duff  <duff@adacore.com>\n\ngcc/ada\n\n\t* einfo.ads, einfo.adb (Private_View, Shadow_Entities): Remove\n\tobsolete code.\n\nFrom-SVN: r263728", "tree": {"sha": "d0b06ad963ebfc5ae628752d99c4d501d33c8854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0b06ad963ebfc5ae628752d99c4d501d33c8854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09825f923fadac7b79a894c4e7f6e0839c2837ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09825f923fadac7b79a894c4e7f6e0839c2837ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09825f923fadac7b79a894c4e7f6e0839c2837ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09825f923fadac7b79a894c4e7f6e0839c2837ac/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d8cc2b6d17fa3fa2c0683286926556da6d3bb6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8cc2b6d17fa3fa2c0683286926556da6d3bb6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8cc2b6d17fa3fa2c0683286926556da6d3bb6f"}], "stats": {"total": 80, "additions": 5, "deletions": 75}, "files": [{"sha": "a89911a9b42cbe1a1bc7f8e82232451e2ce4bb87", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09825f923fadac7b79a894c4e7f6e0839c2837ac", "patch": "@@ -1,3 +1,8 @@\n+2018-08-21  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Private_View, Shadow_Entities): Remove\n+\tobsolete code.\n+\n 2018-08-21  Maroua Maalej  <maalej@adacore.com>\n \n \t* sem_spark.adb (Check_Call_Statement): Check global and formal"}, {"sha": "52a9435fdeb17f0d315dda2061b6209de740687c", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=09825f923fadac7b79a894c4e7f6e0839c2837ac", "patch": "@@ -118,7 +118,6 @@ package body Einfo is\n    --    Alignment                       Uint14\n    --    Normalized_Position             Uint14\n    --    Postconditions_Proc             Node14\n-   --    Shadow_Entities                 List14\n \n    --    Discriminant_Number             Uint15\n    --    DT_Position                     Uint15\n@@ -199,7 +198,6 @@ package body Einfo is\n    --    Corresponding_Remote_Type       Node22\n    --    Enumeration_Rep_Expr            Node22\n    --    Original_Record_Component       Node22\n-   --    Private_View                    Node22\n    --    Protected_Formal                Node22\n    --    Scope_Depth_Value               Uint22\n    --    Shared_Var_Procs_Instance       Node22\n@@ -3126,12 +3124,6 @@ package body Einfo is\n       return Elist18 (Id);\n    end Private_Dependents;\n \n-   function Private_View (Id : E) return N is\n-   begin\n-      pragma Assert (Is_Private_Type (Id));\n-      return Node22 (Id);\n-   end Private_View;\n-\n    function Protected_Body_Subprogram (Id : E) return E is\n    begin\n       pragma Assert (Is_Subprogram (Id) or else Is_Entry (Id));\n@@ -3314,12 +3306,6 @@ package body Einfo is\n       return Flag167 (Id);\n    end Sec_Stack_Needed_For_Return;\n \n-   function Shadow_Entities (Id : E) return S is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package));\n-      return List14 (Id);\n-   end Shadow_Entities;\n-\n    function Shared_Var_Procs_Instance (Id : E) return E is\n    begin\n       pragma Assert (Ekind (Id) = E_Variable);\n@@ -6376,12 +6362,6 @@ package body Einfo is\n       Set_Elist18 (Id, V);\n    end Set_Private_Dependents;\n \n-   procedure Set_Private_View (Id : E; V : N) is\n-   begin\n-      pragma Assert (Is_Private_Type (Id));\n-      Set_Node22 (Id, V);\n-   end Set_Private_View;\n-\n    procedure Set_Prev_Entity (Id : E; V : E) is\n    begin\n       Set_Node36 (Id, V);\n@@ -6573,12 +6553,6 @@ package body Einfo is\n       Set_Flag167 (Id, V);\n    end Set_Sec_Stack_Needed_For_Return;\n \n-   procedure Set_Shadow_Entities (Id : E; V : S) is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package));\n-      Set_List14 (Id, V);\n-   end Set_Shadow_Entities;\n-\n    procedure Set_Shared_Var_Procs_Instance (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind (Id) = E_Variable);\n@@ -10405,11 +10379,6 @@ package body Einfo is\n          =>\n             Write_Str (\"Postconditions_Proc\");\n \n-         when E_Generic_Package\n-            | E_Package\n-         =>\n-            Write_Str (\"Shadow_Entities\");\n-\n          when others =>\n             Write_Str (\"Field14??\");\n       end case;\n@@ -10845,15 +10814,6 @@ package body Einfo is\n          when E_Enumeration_Literal =>\n             Write_Str (\"Enumeration_Rep_Expr\");\n \n-         when E_Limited_Private_Subtype\n-            | E_Limited_Private_Type\n-            | E_Private_Subtype\n-            | E_Private_Type\n-            | E_Record_Subtype_With_Private\n-            | E_Record_Type_With_Private\n-         =>\n-            Write_Str (\"Private_View\");\n-\n          when Formal_Kind =>\n             Write_Str (\"Protected_Formal\");\n "}, {"sha": "018684d7b2f6740b3f7fc4d86e8dce50d0654717", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09825f923fadac7b79a894c4e7f6e0839c2837ac/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=09825f923fadac7b79a894c4e7f6e0839c2837ac", "patch": "@@ -4005,17 +4005,6 @@ package Einfo is\n --       declaration of the type is seen. Subprograms that have such an\n --       access parameter are also placed in the list of private_dependents.\n \n---    Private_View (Node22)\n---       For each private type, three entities are allocated, the private view,\n---       the full view, and the shadow entity. The shadow entity contains a\n---       copy of the private view and is used for restoring the proper private\n---       view after a region in which the full view is visible (and is copied\n---       into the entity normally used for the private view during this period\n---       of visibility). The Private_View field is self-referential when the\n---       private view lives in its normal entity, but in the copy that is made\n---       in the shadow entity, it points to the proper location in which to\n---       restore the private view saved in the shadow.\n-\n --    Protected_Body_Subprogram (Node11)\n --       Defined in protected operations. References the entity for the\n --       subprogram which implements the body of the operation.\n@@ -4264,18 +4253,6 @@ package Einfo is\n --       returned value of a function and thus should not be released on scope\n --       exit.\n \n---    Shadow_Entities (List14)\n---       Defined in package and generic package entities. Points to a list\n---       of entities that correspond to private types. For each private type\n---       a shadow entity is created that holds a copy of the private view.\n---       In regions of the program where the full views of these private\n---       entities are visible, the full view is copied into the entity that\n---       is normally used to hold the private view, but the shadow entity\n---       copy is unchanged. The shadow entities are then used to restore the\n---       original private views at the end of the region. This list is a\n---       standard format list (i.e. First (Shadow_Entities) is the first\n---       entry and subsequent entries are obtained using Next.\n-\n --    Shared_Var_Procs_Instance (Node22)\n --       Defined in variables. Set non-Empty only if Is_Shared_Passive is\n --       set, in which case this is the entity for the associated instance of\n@@ -6323,7 +6300,6 @@ package Einfo is\n    --    Underlying_Full_View                (Node19)\n    --    Last_Entity                         (Node20)\n    --    Discriminant_Constraint             (Elist21)\n-   --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Has_Completion                      (Flag26)\n    --    (plus type attributes)\n@@ -6402,7 +6378,6 @@ package Einfo is\n    --    Generic_Homonym                     (Node11)   (generic case only)\n    --    Associated_Formal_Package           (Node12)\n    --    Elaboration_Entity                  (Node13)\n-   --    Shadow_Entities                     (List14)\n    --    Related_Instance                    (Node15)   (non-generic case only)\n    --    First_Private_Entity                (Node16)\n    --    First_Entity                        (Node17)\n@@ -6480,7 +6455,6 @@ package Einfo is\n    --    Underlying_Full_View                (Node19)\n    --    Last_Entity                         (Node20)\n    --    Discriminant_Constraint             (Elist21)\n-   --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Has_Completion                      (Flag26)\n    --    Is_Controlled_Active                (Flag42)   (base type only)\n@@ -6661,7 +6635,6 @@ package Einfo is\n    --    Underlying_Full_View                (Node19)\n    --    Last_Entity                         (Node20)\n    --    Discriminant_Constraint             (Elist21)\n-   --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Interfaces                          (Elist25)\n    --    Predicated_Parent                   (Node38)   (subtype only)\n@@ -7476,7 +7449,6 @@ package Einfo is\n    function Prival                              (Id : E) return E;\n    function Prival_Link                         (Id : E) return E;\n    function Private_Dependents                  (Id : E) return L;\n-   function Private_View                        (Id : E) return N;\n    function Protected_Body_Subprogram           (Id : E) return E;\n    function Protected_Formal                    (Id : E) return E;\n    function Protected_Subprogram                (Id : E) return N;\n@@ -7509,7 +7481,6 @@ package Einfo is\n    function Scale_Value                         (Id : E) return U;\n    function Scope_Depth_Value                   (Id : E) return U;\n    function Sec_Stack_Needed_For_Return         (Id : E) return B;\n-   function Shadow_Entities                     (Id : E) return S;\n    function Shared_Var_Procs_Instance           (Id : E) return E;\n    function Size_Check_Code                     (Id : E) return N;\n    function Size_Depends_On_Discriminant        (Id : E) return B;\n@@ -8182,7 +8153,6 @@ package Einfo is\n    procedure Set_Prival                          (Id : E; V : E);\n    procedure Set_Prival_Link                     (Id : E; V : E);\n    procedure Set_Private_Dependents              (Id : E; V : L);\n-   procedure Set_Private_View                    (Id : E; V : N);\n    procedure Set_Protected_Body_Subprogram       (Id : E; V : E);\n    procedure Set_Protected_Formal                (Id : E; V : E);\n    procedure Set_Protected_Subprogram            (Id : E; V : N);\n@@ -8215,7 +8185,6 @@ package Einfo is\n    procedure Set_Scale_Value                     (Id : E; V : U);\n    procedure Set_Scope_Depth_Value               (Id : E; V : U);\n    procedure Set_Sec_Stack_Needed_For_Return     (Id : E; V : B := True);\n-   procedure Set_Shadow_Entities                 (Id : E; V : S);\n    procedure Set_Shared_Var_Procs_Instance       (Id : E; V : E);\n    procedure Set_Size_Check_Code                 (Id : E; V : N);\n    procedure Set_Size_Depends_On_Discriminant    (Id : E; V : B := True);\n@@ -9059,7 +9028,6 @@ package Einfo is\n    pragma Inline (Prival);\n    pragma Inline (Prival_Link);\n    pragma Inline (Private_Dependents);\n-   pragma Inline (Private_View);\n    pragma Inline (Protected_Body_Subprogram);\n    pragma Inline (Protected_Formal);\n    pragma Inline (Protected_Subprogram);\n@@ -9093,7 +9061,6 @@ package Einfo is\n    pragma Inline (Scale_Value);\n    pragma Inline (Scope_Depth_Value);\n    pragma Inline (Sec_Stack_Needed_For_Return);\n-   pragma Inline (Shadow_Entities);\n    pragma Inline (Shared_Var_Procs_Instance);\n    pragma Inline (Size_Check_Code);\n    pragma Inline (Size_Depends_On_Discriminant);\n@@ -9552,7 +9519,6 @@ package Einfo is\n    pragma Inline (Set_Prival);\n    pragma Inline (Set_Prival_Link);\n    pragma Inline (Set_Private_Dependents);\n-   pragma Inline (Set_Private_View);\n    pragma Inline (Set_Protected_Body_Subprogram);\n    pragma Inline (Set_Protected_Formal);\n    pragma Inline (Set_Protected_Subprogram);\n@@ -9585,7 +9551,6 @@ package Einfo is\n    pragma Inline (Set_Scale_Value);\n    pragma Inline (Set_Scope_Depth_Value);\n    pragma Inline (Set_Sec_Stack_Needed_For_Return);\n-   pragma Inline (Set_Shadow_Entities);\n    pragma Inline (Set_Shared_Var_Procs_Instance);\n    pragma Inline (Set_Size_Check_Code);\n    pragma Inline (Set_Size_Depends_On_Discriminant);"}]}