{"sha": "175d65591b3e774494dd909909f721aae9d444c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1ZDY1NTkxYjNlNzc0NDk0ZGQ5MDk5MDlmNzIxYWFlOWQ0NDRjMg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2010-06-18T12:49:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T12:49:46Z"}, "message": "g-pehage.ads, [...] (Produce): Clean up some of the code.\n\n2010-06-18  Bob Duff  <duff@adacore.com>\n\n\t* g-pehage.ads, g-pehage.adb (Produce): Clean up some of the code.\n\tRaise an exception if the output file cannot be opened. Add comments.\n\nFrom-SVN: r160985", "tree": {"sha": "467c97c067919d49de32ef738eadbbd40e45e377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/467c97c067919d49de32ef738eadbbd40e45e377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/175d65591b3e774494dd909909f721aae9d444c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175d65591b3e774494dd909909f721aae9d444c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/175d65591b3e774494dd909909f721aae9d444c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175d65591b3e774494dd909909f721aae9d444c2/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "709121b5a52e45f1bf29b56a9a4d813adf1dd292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709121b5a52e45f1bf29b56a9a4d813adf1dd292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709121b5a52e45f1bf29b56a9a4d813adf1dd292"}], "stats": {"total": 69, "additions": 48, "deletions": 21}, "files": [{"sha": "f177911e9da86770921f5642f8ad526f64082096", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=175d65591b3e774494dd909909f721aae9d444c2", "patch": "@@ -1,3 +1,8 @@\n+2010-06-18  Bob Duff  <duff@adacore.com>\n+\n+\t* g-pehage.ads, g-pehage.adb (Produce): Clean up some of the code.\n+\tRaise an exception if the output file cannot be opened. Add comments.\n+\n 2010-06-18  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_cat.adb (Validate_Object_Declaration): A variable declaration is"}, {"sha": "b63bc7a804d414a581244ca04defb297d06125e3", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 36, "deletions": 18, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=175d65591b3e774494dd909909f721aae9d444c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2009, AdaCore                     --\n+--                     Copyright (C) 2002-2010, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.IO_Exceptions; use Ada.IO_Exceptions;\n+with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n with GNAT.Heap_Sort_G;\n with GNAT.OS_Lib;      use GNAT.OS_Lib;\n@@ -213,6 +214,12 @@ package body GNAT.Perfect_Hash_Generators is\n    procedure Put_Vertex_Table (File : File_Descriptor; Title : String);\n    --  Output a title and a vertex table\n \n+   function Ada_File_Base_Name (Pkg_Name : String) return String;\n+   --  Return the base file name (i.e. without .ads/.adb extension) for an Ada\n+   --  source file containing the named package, using the standard GNAT\n+   --  file-naming convention. For example, if Pkg_Name is \"Parent.Child\", we\n+   --  return \"parent-child\".\n+\n    ----------------------------------\n    -- Character Position Selection --\n    ----------------------------------\n@@ -494,6 +501,23 @@ package body GNAT.Perfect_Hash_Generators is\n       return True;\n    end Acyclic;\n \n+   ------------------------\n+   -- Ada_File_Base_Name --\n+   ------------------------\n+\n+   function Ada_File_Base_Name (Pkg_Name : String) return String is\n+   begin\n+      --  Convert to lower case, then replace '.' with '-'\n+\n+      return Result : String := To_Lower (Pkg_Name) do\n+         for J in Result'Range loop\n+            if Result (J) = '.' then\n+               Result (J) := '-';\n+            end if;\n+         end loop;\n+      end return;\n+   end Ada_File_Base_Name;\n+\n    ---------\n    -- Add --\n    ---------\n@@ -1369,7 +1393,7 @@ package body GNAT.Perfect_Hash_Generators is\n    -- Produce --\n    -------------\n \n-   procedure Produce (Pkg_Name  : String := Default_Pkg_Name) is\n+   procedure Produce (Pkg_Name : String := Default_Pkg_Name) is\n       File : File_Descriptor;\n \n       Status : Boolean;\n@@ -1462,27 +1486,18 @@ package body GNAT.Perfect_Hash_Generators is\n       L : Natural;\n       P : Natural;\n \n-      PLen  : constant Natural := Pkg_Name'Length;\n-      FName : String (1 .. PLen + 4);\n+      FName : String := Ada_File_Base_Name (Pkg_Name) & \".ads\";\n+      --  Initially, the name of the spec file; then modified to be the name of\n+      --  the body file.\n \n    --  Start of processing for Produce\n \n    begin\n-      FName (1 .. PLen) := Pkg_Name;\n-      for J in 1 .. PLen loop\n-         if FName (J) in 'A' .. 'Z' then\n-            FName (J) := Character'Val (Character'Pos (FName (J))\n-                                        - Character'Pos ('A')\n-                                        + Character'Pos ('a'));\n-\n-         elsif FName (J) = '.' then\n-            FName (J) := '-';\n-         end if;\n-      end loop;\n-\n-      FName (PLen + 1 .. PLen + 4) := \".ads\";\n \n       File := Create_File (FName, Binary);\n+      if File = Invalid_FD then\n+         raise Program_Error with \"cannot create: \" & FName;\n+      end if;\n \n       Put      (File, \"package \");\n       Put      (File, Pkg_Name);\n@@ -1500,9 +1515,12 @@ package body GNAT.Perfect_Hash_Generators is\n          raise Device_Error;\n       end if;\n \n-      FName (PLen + 4) := 'b';\n+      FName (FName'Last) := 'b';  --  Set to body file name\n \n       File := Create_File (FName, Binary);\n+      if File = Invalid_FD then\n+         raise Program_Error with \"cannot create: \" & FName;\n+      end if;\n \n       Put      (File, \"with Interfaces; use Interfaces;\");\n       New_Line (File);"}, {"sha": "c01c28576105168cca7d6b7fea9e8d8da705ec73", "filename": "gcc/ada/g-pehage.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2Fg-pehage.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175d65591b3e774494dd909909f721aae9d444c2/gcc%2Fada%2Fg-pehage.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.ads?ref=175d65591b3e774494dd909909f721aae9d444c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2008, AdaCore                     --\n+--                     Copyright (C) 2002-2010, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,9 +130,13 @@ package GNAT.Perfect_Hash_Generators is\n    --  Raise Too_Many_Tries in case that the algorithm does not succeed in less\n    --  than Tries attempts (see Initialize).\n \n-   procedure Produce (Pkg_Name  : String := Default_Pkg_Name);\n+   procedure Produce (Pkg_Name : String := Default_Pkg_Name);\n    --  Generate the hash function package Pkg_Name. This package includes the\n-   --  minimal perfect Hash function.\n+   --  minimal perfect Hash function. The output is placed in the current\n+   --  directory, in files X.ads and X.adb, where X is the standard GNAT file\n+   --  name for a package named Pkg_Name.\n+\n+   ----------------------------------------------------------------\n \n    --  The routines and structures defined below allow producing the hash\n    --  function using a different way from the procedure above. The procedure"}]}