{"sha": "117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE3YzliMWM5ZGRjNTcxYTM5YjQ2YzgxNTFkZjcyZTUwYTJjNDFlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-21T05:44:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-21T05:44:02Z"}, "message": "merge with /cvs/src\n\nFrom-SVN: r35168", "tree": {"sha": "8901d3350aac94bbb6cd291596851a0b8ebb155d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8901d3350aac94bbb6cd291596851a0b8ebb155d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/comments", "author": null, "committer": null, "parents": [{"sha": "6c329b931401eb3be8d9fc6129cab636badab9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c329b931401eb3be8d9fc6129cab636badab9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c329b931401eb3be8d9fc6129cab636badab9fb"}], "stats": {"total": 2040, "additions": 2040, "deletions": 0}, "files": [{"sha": "920ab3226a89c3d56eab57016e5176cf169e33bb", "filename": "config/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "patch": "@@ -1,8 +1,21 @@\n+Fri Jul 14 18:13:23 2000  Mark P Mitchell  <mark@codesourcery.com>\n+\n+\t* mh-irix6 (CC): Don't set it.\n+\n 2000-06-21  Branko Cibej  <branko.cibej@hermes.si>\n \n \t* mh-sparcpic: Use single instead of double quotes.\n \t* mt-sparcpic: Likewise.\n \n+2000-06-19  Syd Polk <spolk@redhat.com>\n+\n+\t* acinclude.m4: Updated for Incr Tcl 3.0.\n+\n+2000-02-23  Linas Vepstas <linas@linas.org>\n+\n+\t* mh-i370pic: New file.\n+\t* mt-i370pic: New file.\n+\n 2000-02-22  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/mt-wince: new file: Makefile fragment for WinCE targets.\n@@ -16,6 +29,18 @@ Tue Sep  7 23:31:01 1999  Linas Vepstas  <linas@linas.org>\n \n \t* mh-openedition: New file.\n \n+1999-04-07  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* mt-d30v: New file, pass -g -Os -Wa,-C as default options.\n+\n+1999-02-08  Syd Polk  <spolk@cygnus.com>\n+\n+\t* acinclude.m4: Added macros to find itcl files.\n+\tExport TCL_CFLAGS from tclConfig.sh.\n+\tExport TCL_LIB_FULL_PATH, TK_LIB_FULL_PATH, ITCL_LIB_FULL_PATH,\n+\tITK_LIB_FULL_PATH, and TIX_LIB_FULL_PATH\n+\tReplace TIX macros with better ones from snavigator.\n+\n Tue Feb  2 22:51:21 1999 Philip Blundell  <philb@gnu.org>\n \n \t* mh-armpic: New file.  Patch from Jim Pick <jim@jimpick.com>.\n@@ -37,6 +62,16 @@ Mon Nov  2 15:15:33 1998  Geoffrey Noer  <noer@cygnus.com>\n         * mh-cygwin32: delete\n         * mh-cygwin: was mh-cygwin32\n \n+1998-10-26  Syd Polk  <spolk@cygnus.com>\n+\n+\t* acinclude.m4: TCLHDIR and TKHDIR need to be run through\n+\tcygpath for Microsoft builds.\n+\n+1998-10-20  Syd Polk  <spolk@cygnus.com>\n+\n+\t* acinclude.m4: Re-exported TCL_LIBS and TCL_LD_SEARCH_FLAGS\n+\tbecause itcl needs them.\n+\n Mon Aug 31 17:50:53 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \n \t* mh-aix43 (NM_FOR_TARGET): Add -X32_64 as well.\n@@ -49,6 +84,10 @@ Mon Aug 10 00:15:47 1998  HJ Lu (hjl@gnu.org)\n \n \t* mt-linux (CXXFLAGS_FOR_TARGET): Add -D_GNU_SOURCE.\n \n+1998-05-29  Rob Savoye  <rob@chinadoll.cygnus.com>\n+\n+\t* acinclude.m4: New collection of generic autoconf macros.\n+\t\n Wed Apr 22 12:24:28 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* mt-ospace: New file, support using -Os instead of -O2 to compile"}, {"sha": "6187b5acdce626b1102cf00c059090b48e88d6cd", "filename": "config/acinclude.m4", "status": "added", "additions": 1995, "deletions": 0, "changes": 1995, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facinclude.m4?ref=117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "patch": "@@ -0,0 +1,1995 @@\n+dnl This file is included into all any other acinclude file that needs\n+dnl to use these macros.\n+\n+dnl This is copied from autoconf 2.12, but does calls our own AC_PROG_CC_WORKS,\n+dnl and doesn't call AC_PROG_CXX_GNU, cause we test for that in  AC_PROG_CC_WORKS.\n+dnl We are probably using a cross compiler, which will not be able to fully\n+dnl link an executable.  This should really be fixed in autoconf itself.\n+dnl Find a working G++ cross compiler. This only works for the GNU C++ compiler.\n+AC_DEFUN(CYG_AC_PROG_CXX_CROSS,\n+[AC_BEFORE([$0], [AC_PROG_CXXCPP])\n+AC_CHECK_PROGS(CXX, $CCC c++ g++ gcc CC cxx cc++, gcc)\n+\n+CYG_AC_PROG_GXX_WORKS\n+\n+if test $ac_cv_prog_gxx = yes; then\n+  GXX=yes\n+dnl Check whether -g works, even if CXXFLAGS is set, in case the package\n+dnl plays around with CXXFLAGS (such as to build both debugging and\n+dnl normal versions of a library), tasteless as that idea is.\n+  ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\n+  AC_PROG_CXX_G\n+  if test \"$ac_test_CXXFLAGS\" = set; then\n+    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  elif test $ac_cv_prog_cxx_g = yes; then\n+    CXXFLAGS=\"-g -O2\"\n+  else\n+    CXXFLAGS=\"-O2\"\n+  fi\n+else\n+  GXX=\n+  test \"${CXXFLAGS+set}\" = set || CXXFLAGS=\"-g\"\n+fi\n+])\n+\n+dnl See if the G++ compiler we found works.\n+AC_DEFUN(CYG_AC_PROG_GXX_WORKS,\n+[AC_MSG_CHECKING([whether the G++ compiler ($CXX $CXXFLAGS $LDFLAGS) actually works])\n+AC_LANG_SAVE\n+AC_LANG_CPLUSPLUS\n+dnl Try a test case. We only compile, because it's close to impossible\n+dnl to get a correct fully linked executable with a cross compiler. For\n+dnl most cross compilers, this test is bogus. For G++, we can use various\n+dnl other compile line options to get a decent idea that the cross compiler\n+dnl actually does work, even though we can't produce an executable without\n+dnl more info about the target it's being compiled for. This only works\n+dnl for the GNU C++ compiler.\n+\n+dnl Transform the name of the compiler to it's cross variant, unless\n+dnl CXX is set. This is also what CXX gets set to in the generated\n+dnl Makefile.\n+if test x\"${CXX}\" = xc++ ; then\n+    CXX=`echo gcc | sed -e \"${program_transform_name}\"`\n+fi\n+\n+dnl Get G++'s full path to libgcc.a\n+libgccpath=`${CXX} --print-libgcc`\n+\n+dnl If we don't have a path with libgcc.a on the end, this isn't G++.\n+if test `echo $libgccpath | sed -e 's:/.*/::'` = libgcc.a ; then\n+   ac_cv_prog_gxx=yes\n+else\n+   ac_cv_prog_gxx=no\n+fi\n+\n+dnl If we are using G++, look for the files that need to exist if this\n+dnl compiler works.\n+if test x\"${ac_cv_prog_gxx}\" = xyes ; then\n+    gccfiles=`echo $libgccpath | sed -e 's:/libgcc.a::'`\n+    if test -f ${gccfiles}/specs -a -f ${gccfiles}/cpp -a -f ${gccfiles}/cc1plus; then\n+\tgccfiles=yes\n+    else\n+\tgccfiles=no\n+    fi\n+    gcclibs=`echo $libgccpath | sed -e 's:lib/gcc-lib/::' -e 's:/libgcc.a::' -e 's,\\(.*\\)/.*,\\1,g'`/lib\n+    if test -d ${gcclibs}/ldscripts -a -f ${gcclibs}/libc.a -a -f ${gcclibs}/libstdc++.a ; then\n+\tgcclibs=yes\n+    else\n+\tgcclibs=no\n+    fi\n+fi\n+\n+dnl If everything is OK, then we can safely assume the compiler works.\n+if test x\"${gccfiles}\" = xno -o x\"${gcclibs}\" = xno; then\n+    ac_cv_prog_cxx_works=no\n+    AC_MSG_ERROR(${CXX} is a non-working cross compiler)\n+else\n+   ac_cv_prog_cxx_works=yes \n+fi\n+\n+AC_LANG_RESTORE\n+AC_MSG_RESULT($ac_cv_prog_cxx_works)\n+if test x\"$ac_cv_prog_cxx_works\" = xno; then\n+  AC_MSG_ERROR([installation or configuration problem: C++ compiler cannot create executables.])\n+fi\n+AC_MSG_CHECKING([whether the G++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler])\n+AC_MSG_RESULT($ac_cv_prog_cxx_cross)\n+cross_compiling=$ac_cv_prog_cxx_cross\n+AC_SUBST(CXX)\n+])\n+\n+dnl ====================================================================\n+dnl Find a working GCC cross compiler. This only works for the GNU gcc compiler.\n+dnl This is based on the macros above for G++.\n+AC_DEFUN(CYG_AC_PROG_CC_CROSS,\n+[AC_BEFORE([$0], [AC_PROG_CCPP])\n+AC_CHECK_PROGS(CC, cc, gcc)\n+\n+CYG_AC_PROG_GCC_WORKS\n+\n+if test $ac_cv_prog_gcc = yes; then\n+  GCC=yes\n+dnl Check whether -g works, even if CFLAGS is set, in case the package\n+dnl plays around with CFLAGS (such as to build both debugging and\n+dnl normal versions of a library), tasteless as that idea is.\n+  ac_test_CFLAGS=\"${CFLAGS+set}\"\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\n+  AC_PROG_CC_G\n+  if test \"$ac_test_CFLAGS\" = set; then\n+    CFLAGS=\"$ac_save_CFLAGS\"\n+  elif test $ac_cv_prog_cc_g = yes; then\n+    CFLAGS=\"-g -O2\"\n+  else\n+    CFLAGS=\"-O2\"\n+  fi\n+else\n+  GXX=\n+  test \"${CFLAGS+set}\" = set || CFLAGS=\"-g\"\n+fi\n+])\n+\n+dnl See if the GCC compiler we found works.\n+AC_DEFUN(CYG_AC_PROG_GCC_WORKS,\n+[AC_MSG_CHECKING([whether the Gcc compiler ($CC $CFLAGS $LDFLAGS) actually works])\n+AC_LANG_SAVE\n+AC_LANG_C\n+dnl Try a test case. We only compile, because it's close to impossible\n+dnl to get a correct fully linked executable with a cross\n+dnl compiler. For most cross compilers, this test is bogus. For G++,\n+dnl we can use various other compile line options to get a decent idea\n+dnl that the cross compiler actually does work, even though we can't\n+dnl produce an executable without more info about the target it's\n+dnl being compiled for. This only works for the GNU C++ compiler.\n+\n+dnl Transform the name of the compiler to it's cross variant, unless\n+dnl CXX is set. This is also what CC gets set to in the generated Makefile.\n+if test x\"${CC}\" = xcc ; then\n+    CC=`echo gcc | sed -e \"${program_transform_name}\"`\n+fi\n+\n+dnl Get Gcc's full path to libgcc.a\n+libgccpath=`${CC} --print-libgcc`\n+\n+dnl If we don't have a path with libgcc.a on the end, this isn't G++.\n+if test `echo $libgccpath | sed -e 's:/.*/::'` = libgcc.a ; then\n+   ac_cv_prog_gcc=yes\n+else\n+   ac_cv_prog_gcc=no\n+fi\n+\n+dnl If we are using Gcc, look for the files that need to exist if this\n+dnl compiler works.\n+if test x\"${ac_cv_prog_gcc}\" = xyes ; then\n+    gccfiles=`echo $libgccpath | sed -e 's:/libgcc.a::'`\n+    if test -f ${gccfiles}/specs -a -f ${gccfiles}/cpp -a -f ${gccfiles}/cc1plus; then\n+\tgccfiles=yes\n+    else\n+\tgccfiles=no\n+    fi\n+    gcclibs=`echo $libgccpath | sed -e 's:lib/gcc-lib/::' -e 's:/libgcc.a::' -e 's,\\(.*\\)/.*,\\1,g'`/lib\n+    if test -d ${gcclibs}/ldscripts -a -f ${gcclibs}/libc.a -a -f ${gcclibs}/libstdc++.a ; then\n+\tgcclibs=yes\n+    else\n+\tgcclibs=no\n+    fi\n+fi\n+\n+dnl If everything is OK, then we can safely assume the compiler works.\n+if test x\"${gccfiles}\" = xno -o x\"${gcclibs}\" = xno; then\n+    ac_cv_prog_cc_works=no\n+    AC_MSG_ERROR(${CC} is a non-working cross compiler)    \n+else\n+    ac_cv_prog_cc_works=yes\n+fi\n+\n+AC_LANG_RESTORE\n+AC_MSG_RESULT($ac_cv_prog_cc_works)\n+if test x\"$ac_cv_prog_cc_works\" = xno; then\n+  AC_MSG_ERROR([installation or configuration problem: C++ compiler cannot create executables.])\n+fi\n+AC_MSG_CHECKING([whether the Gcc compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler])\n+AC_MSG_RESULT($ac_cv_prog_cc_cross)\n+cross_compiling=$ac_cv_prog_cc_cross\n+AC_SUBST(CC)\n+])\n+\n+dnl ====================================================================\n+dnl Find the BFD library in the build tree. This is used to access and\n+dnl manipulate object or executable files.\n+AC_DEFUN(CYG_AC_PATH_BFD, [\n+AC_MSG_CHECKING(for the bfd header in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+dnl Look for the header file\n+AC_CACHE_VAL(ac_cv_c_bfdh,[\n+for i in $dirlist; do\n+    if test -f \"$i/bfd/bfd.h\" ; then\n+\tac_cv_c_bfdh=`(cd $i/bfd; pwd)`\n+\tbreak\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_bfdh}\" != x; then\n+    BFDHDIR=\"-I${ac_cv_c_bfdh}\"\n+    AC_MSG_RESULT(${ac_cv_c_bfdh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(BFDHDIR)\n+\n+dnl Look for the library\n+AC_MSG_CHECKING(for the bfd library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_bfdlib,[\n+for i in $dirlist; do\n+    if test -f \"$i/bfd/Makefile\" ; then\n+\tac_cv_c_bfdlib=`(cd $i/bfd; pwd)`\n+    fi\n+done\n+])\n+dnl We list two directories cause bfd now uses libtool\n+if test x\"${ac_cv_c_bfdlib}\" != x; then\n+    BFDLIB=\"-L${ac_cv_c_bfdlib} -L${ac_cv_c_bfdlib}/.libs\"\n+    AC_MSG_RESULT(${ac_cv_c_bfdlib})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(BFDLIB)\n+])\n+\n+dnl ====================================================================\n+dnl Find the libiberty library. This defines many commonly used C\n+dnl functions that exists in various states based on the underlying OS.\n+AC_DEFUN(CYG_AC_PATH_LIBERTY, [\n+AC_MSG_CHECKING(for the liberty library in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_liberty,[\n+for i in $dirlist; do\n+    if test -f \"$i/libiberty/Makefile\" ; then\n+\tac_cv_c_liberty=`(cd $i/libiberty; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_liberty}\" != x; then\n+    LIBERTY=\"-L${ac_cv_c_liberty}\"\n+    AC_MSG_RESULT(${ac_cv_c_liberty})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(LIBERTY)\n+])\n+\n+dnl ====================================================================\n+dnl Find the opcodes library. This is used to do dissasemblies.\n+AC_DEFUN(CYG_AC_PATH_OPCODES, [\n+AC_MSG_CHECKING(for the opcodes library in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_opc,[\n+for i in $dirlist; do\n+    if test -f \"$i/opcodes/Makefile\" ; then\n+\tac_cv_c_opc=`(cd $i/opcodes; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_opc}\" != x; then\n+    OPCODESLIB=\"-L${ac_cv_c_opc}\"\n+    AC_MSG_RESULT(${ac_cv_c_opc})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(OPCODESLIB)\n+])\n+\n+dnl ====================================================================\n+dnl Look for the DejaGnu header file in the source tree. This file\n+dnl defines the functions used to testing support.\n+AC_DEFUN(CYG_AC_PATH_DEJAGNU, [\n+AC_MSG_CHECKING(for the testing support files in the source tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_dejagnu,[\n+for i in $dirlist; do\n+    if test -f \"$srcdir/$i/ecc/ecc/infra/testlib/current/include/dejagnu.h\" ; then\n+\tac_cv_c_dejagnu=`(cd $srcdir/$i/ecc/ecc/infra/testlib/current/include; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_dejagnu}\" != x; then\n+    DEJAGNUHDIR=\"-I${ac_cv_c_dejagnu}\"\n+    AC_MSG_RESULT(${ac_cv_c_dejagnu})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_CACHE_VAL(ac_cv_c_dejagnulib,[\n+for i in $dirlist; do\n+    if test -f \"$srcdir/$i/infra/testlib/current/lib/hostutil.exp\" ; then\n+\tac_cv_c_dejagnulib=`(cd $srcdir/$i/infra/testlib/current/lib; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_dejagnulib}\" != x; then\n+    DEJAGNULIB=\"${ac_cv_c_dejagnulib}\"\n+else\n+    DEJAGNULIB=\"\"\n+fi\n+AC_MSG_CHECKING(for runtest in the source tree)\n+AC_CACHE_VAL(ac_cv_c_runtest,[\n+for i in $dirlist; do\n+    if test -f \"$srcdir/$i/dejagnu/runtest\" ; then\n+\tac_cv_c_runtest=`(cd $srcdir/$i/dejagnu; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_runtest}\" != x; then\n+    RUNTESTDIR=\"${ac_cv_c_runtest}\"\n+   AC_MSG_RESULT(${ac_cv_c_runtest})\n+else\n+    RUNTESTDIR=\"\"\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(RUNTESTDIR)\n+AC_SUBST(DEJAGNULIB)\n+AC_SUBST(DEJAGNUHDIR)\n+])\n+\n+dnl ====================================================================\n+dnl Find the libintl library in the build tree. This is for\n+dnl  internationalization support.\n+AC_DEFUN(CYG_AC_PATH_INTL, [\n+AC_MSG_CHECKING(for the intl header in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+dnl Look for the header file\n+AC_CACHE_VAL(ac_cv_c_intlh,[\n+for i in $dirlist; do\n+    if test -f \"$i/intl/libintl.h\" ; then\n+\tac_cv_c_intlh=`(cd $i/intl; pwd)`\n+\tbreak\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_intlh}\" != x; then\n+    INTLHDIR=\"-I${ac_cv_c_intlh}\"\n+    AC_MSG_RESULT(${ac_cv_c_intlh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(INTLHDIR)\n+\n+dnl Look for the library\n+AC_MSG_CHECKING(for the libintl library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_intllib,[\n+for i in $dirlist; do\n+    if test -f \"$i/intl/Makefile\" ; then\n+\tac_cv_c_intllib=`(cd $i/intl; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_intllib}\" != x; then\n+    INTLLIB=\"-L${ac_cv_c_intllib} -lintl\"\n+    AC_MSG_RESULT(${ac_cv_c_intllib})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(INTLLIB)\n+])\n+\n+dnl ====================================================================\n+dnl Find the simulator library.\n+AC_DEFUN(CYG_AC_PATH_SIM, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../.. ../../../../../../../../../..\"\n+case \"$target_cpu\" in\n+    powerpc)\ttarget_dir=ppc ;;\n+    sparc*)\ttarget_dir=erc32 ;;\n+    mips*)\ttarget_dir=mips ;;\n+    *)\t\ttarget_dir=$target_cpu ;;\n+esac\n+dnl First look for the header file\n+AC_MSG_CHECKING(for the simulator header file)\n+AC_CACHE_VAL(ac_cv_c_simh,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/include/remote-sim.h\" ; then\n+\tac_cv_c_simh=`(cd ${srcdir}/$i/include; pwd)`\n+\tbreak\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_simh}\" != x; then\n+    SIMHDIR=\"-I${ac_cv_c_simh}\"\n+    AC_MSG_RESULT(${ac_cv_c_simh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(SIMHDIR)\n+\n+dnl See whether it's a devo or Foundry branch simulator\n+AC_MSG_CHECKING(Whether this is a devo simulator )\n+AC_CACHE_VAL(ac_cv_c_simdevo,[\n+    CPPFLAGS=\"$CPPFLAGS $SIMHDIR\"\n+    AC_EGREP_HEADER([SIM_DESC sim_open.*struct _bfd], remote-sim.h,\n+        ac_cv_c_simdevo=yes,\n+        ac_cv_c_simdevo=no)\n+])\n+if test x\"$ac_cv_c_simdevo\" = x\"yes\" ; then\n+    AC_DEFINE(HAVE_DEVO_SIM)\n+fi\n+AC_MSG_RESULT(${ac_cv_c_simdevo})\n+AC_SUBST(HAVE_DEVO_SIM)\n+\n+dnl Next look for the library\n+AC_MSG_CHECKING(for the simulator library)\n+AC_CACHE_VAL(ac_cv_c_simlib,[\n+for i in $dirlist; do\n+    if test -f \"$i/sim/$target_dir/Makefile\" ; then\n+\tac_cv_c_simlib=`(cd $i/sim/$target_dir; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_simlib}\" != x; then\n+    SIMLIB=\"-L${ac_cv_c_simlib}\"\n+else\n+    AC_MSG_RESULT(none)\n+    dnl FIXME: this is kinda bogus, cause umtimately the TM will build\n+    dnl all the libraries for several architectures. But for now, this\n+    dnl will work till then.\n+dnl     AC_MSG_CHECKING(for the simulator installed with the compiler libraries)\n+    dnl Transform the name of the compiler to it's cross variant, unless\n+    dnl CXX is set. This is also what CXX gets set to in the generated\n+    dnl Makefile.\n+    CROSS_GCC=`echo gcc | sed -e \"s/^/$target/\"`\n+\n+    dnl Get G++'s full path to libgcc.a\n+changequote(,)\n+    gccpath=`${CROSS_GCC} --print-libgcc | sed -e 's:[a-z0-9A-Z\\.\\-]*/libgcc.a::' -e 's:lib/gcc-lib/::'`lib\n+changequote([,])\n+    if test -f $gccpath/libsim.a -o -f $gccpath/libsim.so ; then\n+        ac_cv_c_simlib=\"$gccpath/\"\n+        SIMLIB=\"-L${ac_cv_c_simlib}\"\n+\tAC_MSG_RESULT(${ac_cv_c_simlib})\n+    else\n+        AM_CONDITIONAL(PSIM, test x$psim = xno)\n+\tSIMLIB=\"\"\n+\tAC_MSG_RESULT(none)\n+dnl         ac_cv_c_simlib=none\n+    fi\n+fi\n+AC_SUBST(SIMLIB)\n+])\n+\n+dnl ====================================================================\n+dnl Find the libiberty library.\n+AC_DEFUN(CYG_AC_PATH_LIBIBERTY, [\n+AC_MSG_CHECKING(for the libiberty library in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_libib,[\n+for i in $dirlist; do\n+    if test -f \"$i/libiberty/Makefile\" ; then\n+\tac_cv_c_libib=`(cd $i/libiberty/; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_libib}\" != x; then\n+    LIBIBERTY=\"-L${ac_cv_c_libib}\"\n+    AC_MSG_RESULT(${ac_cv_c_libib})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(LIBIBERTY)\n+])\n+\n+dnl ====================================================================\n+AC_DEFUN(CYG_AC_PATH_DEVO, [\n+AC_MSG_CHECKING(for devo headers in the source tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_devoh,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/include/remote-sim.h\" ; then\n+\tac_cv_c_devoh=`(cd ${srcdir}/$i/include; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_devoh}\" != x; then\n+    DEVOHDIR=\"-I${ac_cv_c_devoh}\"\n+    AC_MSG_RESULT(${ac_cv_c_devoh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(DEVOHDIR)\n+])\n+\n+dnl ====================================================================\n+dnl find the IDE library and headers.\n+AC_DEFUN(CYG_AC_PATH_IDE, [\n+AC_MSG_CHECKING(for IDE headers in the source tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+IDEHDIR=\n+IDELIB=\n+AC_CACHE_VAL(ac_cv_c_ideh,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/libide/src/event.h\" ; then\n+\tac_cv_c_ideh=`(cd ${srcdir}/$i/libide/src; pwd)`;\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_ideh}\" != x; then\n+    IDEHDIR=\"-I${ac_cv_c_ideh}\"\n+    AC_MSG_RESULT(${ac_cv_c_ideh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for LIBIDE TCL headers in the source tree)\n+AC_CACHE_VAL(ac_cv_c_idetclh,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/libidetcl/src/idetcl.h\" ; then\n+\tac_cv_c_idetclh=`(cd ${srcdir}/$i/libidetcl/src; pwd)`;\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_idetclh}\" != x; then\n+    IDEHDIR=\"${IDEHDIR} -I${ac_cv_c_idetclh}\"\n+    AC_MSG_RESULT(${ac_cv_c_idetclh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for IDE headers in the build tree)\n+AC_CACHE_VAL(ac_cv_c_ideh2,[\n+for i in $dirlist; do\n+    if test -f \"$i/libide/src/Makefile\" ; then\n+\tac_cv_c_ideh2=`(cd $i/libide/src; pwd)`;\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_ideh2}\" != x; then\n+    IDEHDIR=\"${IDEHDIR} -I${ac_cv_c_ideh2}\"\n+    AC_MSG_RESULT(${ac_cv_c_ideh2})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+dnl look for the library\n+AC_MSG_CHECKING(for IDE library)\n+AC_CACHE_VAL(ac_cv_c_idelib,[\n+if test x\"${ac_cv_c_idelib}\" = x ; then\n+    for i in $dirlist; do\n+      if test -f \"$i/libide/src/Makefile\" ; then\n+        ac_cv_c_idelib=`(cd $i/libide/src; pwd)`\n+        break\n+      fi\n+    done\n+fi]) \n+if test x\"${ac_cv_c_idelib}\" != x ; then\n+     IDELIB=\"-L${ac_cv_c_idelib}\"\n+     AC_MSG_RESULT(${ac_cv_c_idelib})\n+else\n+     AC_MSG_RESULT(none)\n+fi\n+\n+dnl find libiddetcl.a if it exists\n+AC_MSG_CHECKING(for IDE TCL library)\n+AC_CACHE_VAL(ac_cv_c_idetcllib,[\n+if test x\"${ac_cv_c_idetcllib}\" = x ; then\n+    for i in $dirlist; do\n+      if test -f \"$i/libidetcl/src/Makefile\" ; then\n+        ac_cv_c_idetcllib=`(cd $i/libidetcl/src; pwd)`\n+        break\n+      fi\n+    done\n+fi\n+]) \n+if test x\"${ac_cv_c_idetcllib}\" != x ; then\n+     IDELIB=\"${IDELIB} -L${ac_cv_c_idetcllib}\"\n+     IDETCLLIB=\"-lidetcl\"\n+     AC_MSG_RESULT(${ac_cv_c_idetcllib})\n+else\n+     AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(IDEHDIR)\n+AC_SUBST(IDELIB)\n+AC_SUBST(IDETCLLIB)\n+])\n+\n+dnl ====================================================================\n+dnl Find all the ILU headers and libraries\n+AC_DEFUN(CYG_AC_PATH_ILU, [\n+AC_MSG_CHECKING(for ILU kernel headers in the source tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_iluh,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/ilu/runtime/kernel/method.h\" ; then\n+\tac_cv_c_iluh=`(cd ${srcdir}/$i/ilu/runtime/kernel; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_iluh}\" != x; then\n+    ILUHDIR=\"-I${ac_cv_c_iluh}\"\n+    AC_MSG_RESULT(${ac_cv_c_iluh})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for ILU kernel headers in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+AC_CACHE_VAL(ac_cv_c_iluh5,[\n+for i in $dirlist; do\n+    if test -f \"$i/ilu/runtime/kernel/iluconf.h\" ; then\n+\tac_cv_c_iluh5=`(cd $i/ilu/runtime/kernel; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_iluh5}\" != x; then\n+    ILUHDIR=\"${ILUHDIR} -I${ac_cv_c_iluh5}\"\n+    AC_MSG_RESULT(${ac_cv_c_iluh5})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for ILU C++ headers in the source tree)\n+AC_CACHE_VAL(ac_cv_c_iluh2,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/ilu/stubbers/cpp/resource.h\" ; then\n+\tac_cv_c_iluh2=`(cd ${srcdir}/$i/ilu/stubbers/cpp; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_iluh2}\" != x; then\n+    ILUHDIR=\"${ILUHDIR} -I${ac_cv_c_iluh2}\"\n+    AC_MSG_RESULT(${ac_cv_c_iluh2})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for ILU C headers)\n+AC_CACHE_VAL(ac_cv_c_iluh3,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/ilu/stubbers/c/resource.h\" ; then\n+\tac_cv_c_iluh3=`(cd ${srcdir}/$i/ilu/stubbers/c  ; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_iluh3}\" != x; then\n+    ILUHDIR=\"${ILUHDIR} -I${ac_cv_c_iluh3}\"\n+    AC_MSG_RESULT(${ac_cv_c_iluh3})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_MSG_CHECKING(for ILU C runtime headers)\n+AC_CACHE_VAL(ac_cv_c_iluh4,[\n+for i in $dirlist; do\n+    if test -f \"${srcdir}/$i/ilu/runtime/c/ilucstub.h\" ; then\n+\tac_cv_c_iluh4=`(cd ${srcdir}/$i/ilu/runtime/c  ; pwd)`\n+    fi\n+done\n+])\n+if test x\"${ac_cv_c_iluh4}\" != x; then\n+    ILUHDIR=\"${ILUHDIR} -I${ac_cv_c_iluh4}\"\n+    AC_MSG_RESULT(${ac_cv_c_iluh4})\n+else\n+    AC_MSG_RESULT(none)\n+fi\n+\n+AC_CACHE_VAL(ac_cv_c_ilupath,[\n+for i in $dirlist; do\n+    if test -f \"$i/ilu/Makefile\" ; then\n+\tac_cv_c_ilupath=`(cd $i/ilu; pwd)`\n+\tbreak\n+    fi\n+done\n+])\n+ILUTOP=${ac_cv_c_ilupath}\n+\n+AC_MSG_CHECKING(for the ILU library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_ilulib,[\n+if test -f \"$ac_cv_c_ilupath/runtime/kernel/Makefile\" ; then\n+    ac_cv_c_ilulib=`(cd $ac_cv_c_ilupath/runtime/kernel; pwd)`\n+    AC_MSG_RESULT(found ${ac_cv_c_ilulib}/libilu.a)\n+else\n+    AC_MSG_RESULT(no)\n+fi])\n+   \n+AC_MSG_CHECKING(for the ILU C++ bindings library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_ilulib2,[\n+if test -f \"$ac_cv_c_ilupath/runtime/cpp/Makefile\" ; then\n+    ac_cv_c_ilulib2=`(cd $ac_cv_c_ilupath/runtime/cpp; pwd)`\n+    AC_MSG_RESULT(found ${ac_cv_c_ilulib2}/libilu-c++.a)\n+else\n+    AC_MSG_RESULT(no)\n+fi])\n+\n+AC_MSG_CHECKING(for the ILU C bindings library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_ilulib3,[\n+if test -f \"$ac_cv_c_ilupath/runtime/c/Makefile\" ; then\n+    ac_cv_c_ilulib3=`(cd $ac_cv_c_ilupath/runtime/c; pwd)`\n+    AC_MSG_RESULT(found ${ac_cv_c_ilulib3}/libilu-c.a)\n+else\n+    AC_MSG_RESULT(no)\n+fi])\n+\n+AC_MSG_CHECKING(for the ILU Tk bindings library in the build tree)\n+AC_CACHE_VAL(ac_cv_c_ilulib4,[\n+if test -f \"$ac_cv_c_ilupath/runtime/mainloop/Makefile\" ; then\n+    ac_cv_c_ilulib4=`(cd $ac_cv_c_ilupath/runtime/mainloop; pwd)`\n+    AC_MSG_RESULT(found ${ac_cv_c_ilulib4}/libilu-tk.a)\n+else\n+    AC_MSG_RESULT(no)\n+fi])\n+\n+if test x\"${ac_cv_c_ilulib}\" = x -a x\"${ac_cv_c_ilulib2}\" = x; then\n+  ILUHDIR=\"\"\n+fi\n+\n+if test x\"${ac_cv_c_ilulib}\" != x -a x\"${ac_cv_c_ilulib2}\" != x; then\n+    ILULIB=\"-L${ac_cv_c_ilulib} -L${ac_cv_c_ilulib2} -L${ac_cv_c_ilulib3} -L${ac_cv_c_ilulib4}\"\n+else\n+    ILULIB=\"\"\n+fi\n+\n+if test x\"${ILULIB}\" = x; then\n+    AC_MSG_CHECKING(for ILU libraries installed with the compiler)\n+    AC_CACHE_VAL(ac_cv_c_ilulib5,[\n+    NATIVE_GCC=`echo gcc | sed -e \"${program_transform_name}\"`\n+\n+    dnl Get G++'s full path to it's libraries\n+    ac_cv_c_ilulib5=`${NATIVE_GCC} --print-libgcc | sed -e 's:lib/gcc-lib/.*::'`lib\n+    if test -f $ac_cv_c_ilulib5/libilu-c.a -o -f $ac_cv_c_ilulib5/libilu-c.so ; then\n+        if test x\"${ILUHDIR}\" = x; then\n+               ILUHDIR=\"-I${ac_cv_c_ilulib5}/../include\"\n+        fi\n+        ILULIB=\"-L${ac_cv_c_ilulib5}\"\n+        AC_MSG_RESULT(${ac_cv_c_ilulib5})\n+    else\n+        ac_cv_c_ilulib=none\n+        AC_MSG_RESULT(none)\n+    fi\n+fi])\n+AC_SUBST(ILUHDIR)\n+AC_SUBST(ILULIB)\n+AC_SUBST(ILUTOP)\n+])\n+\n+dnl ====================================================================\n+dnl This defines the byte order for the host. We can't use\n+dnl AC_C_BIGENDIAN, cause we want to create a config file and\n+dnl substitue the real value, so the header files work right\n+AC_DEFUN(CYG_AC_C_ENDIAN, [\n+AC_MSG_CHECKING(to see if this is a little endian host)\n+AC_CACHE_VAL(ac_cv_c_little_endian, [\n+ac_cv_c_little_endian=unknown\n+# See if sys/param.h defines the BYTE_ORDER macro.\n+AC_TRY_COMPILE([#include <sys/types.h>\n+#include <sys/param.h>], [\n+#if !BYTE_ORDER || !_BIG_ENDIAN || !_LITTLE_ENDIAN\n+ bogus endian macros\n+#endif], [# It does; now see whether it defined to _LITTLE_ENDIAN or not.\n+AC_TRY_COMPILE([#include <sys/types.h>\n+#include <sys/param.h>], [\n+#if BYTE_ORDER != _LITTLE_ENDIAN\n+ not big endian\n+#endif], ac_cv_c_little_endian=yes, ac_cv_c_little_endian=no)\n+])\n+if test ${ac_cv_c_little_endian} = unknown; then\n+old_cflags=$CFLAGS\n+CFLAGS=-g\n+AC_TRY_RUN([\n+main () {\n+  /* Are we little or big endian?  From Harbison&Steele.  */\n+  union\n+  {\n+    long l;\n+    char c[sizeof (long)];\n+  } u;\n+  u.l = 1;\n+  exit (u.c[0] == 1);\n+}],\n+ac_cv_c_little_endian=no,\n+ac_cv_c_little_endian=yes,[\n+dnl Yes, this is ugly, and only used for a canadian cross anyway. This\n+dnl is just to keep configure from stopping here.\n+case \"${host}\" in\n+changequote(,)\n+   i[3456]86-*-*) ac_cv_c_little_endian=yes ;;\n+   sparc*-*-*)    ac_cv_c_little_endian=no ;;\n+changequote([,])\n+  *)    AC_MSG_WARN(Can't cross compile this test) ;;\n+esac])\n+CFLAGS=$old_cflags\n+fi])\n+\n+if test x\"${ac_cv_c_little_endian}\" = xyes; then\n+    AC_DEFINE(LITTLE_ENDIAN_HOST)\n+    ENDIAN=\"CYG_LSBFIRST\";\n+else\n+    ENDIAN=\"CYG_MSBFIRST\";\n+fi\n+AC_MSG_RESULT(${ac_cv_c_little_endian})\n+AC_SUBST(ENDIAN)\n+])\n+\n+dnl ====================================================================\n+dnl Look for the path to libgcc, so we can use it to directly link\n+dnl in libgcc.a with LD.\n+AC_DEFUN(CYG_AC_PATH_LIBGCC,\n+[AC_MSG_CHECKING([Looking for the path to libgcc.a])\n+AC_LANG_SAVE\n+AC_LANG_C\n+\n+dnl Get Gcc's full path to libgcc.a\n+libgccpath=`${CC} --print-libgcc`\n+\n+dnl If we don't have a path with libgcc.a on the end, this isn't G++.\n+if test `echo $libgccpath | sed -e 's:/.*/::'` = libgcc.a ; then\n+   ac_cv_prog_gcc=yes\n+else\n+   ac_cv_prog_gcc=no\n+fi\n+\n+dnl \n+if test x\"${ac_cv_prog_gcc}\" = xyes ; then\n+   gccpath=`echo $libgccpath | sed -e 's:/libgcc.a::'`\n+   LIBGCC=\"-L${gccpath}\"\n+   AC_MSG_RESULT(${gccpath})\n+else\n+   LIBGCC=\"\"\n+   AC_MSG_ERROR(Not using gcc)\n+fi\n+\n+AC_LANG_RESTORE\n+AC_SUBST(LIBGCC)\n+])\n+\n+dnl ====================================================================\n+dnl Ok, lets find the tcl source trees so we can use the headers\n+dnl Warning: transition of version 9 to 10 will break this algorithm\n+dnl because 10 sorts before 9. We also look for just tcl. We have to\n+dnl be careful that we don't match stuff like tclX by accident.\n+dnl the alternative search directory is involked by --with-tclinclude\n+AC_DEFUN(CYG_AC_PATH_TCL, [\n+    CYG_AC_PATH_TCLH\n+    CYG_AC_PATH_TCLCONFIG\n+    CYG_AC_LOAD_TCLCONFIG\n+])\n+AC_DEFUN(CYG_AC_PATH_TCLH, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_tcl=true\n+AC_MSG_CHECKING(for Tcl headers in the source tree)\n+AC_ARG_WITH(tclinclude, [  --with-tclinclude       directory where tcl headers are], with_tclinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_tclh,[\n+dnl first check to see if --with-tclinclude was specified\n+if test x\"${with_tclinclude}\" != x ; then\n+  if test -f ${with_tclinclude}/tcl.h ; then\n+    ac_cv_c_tclh=`(cd ${with_tclinclude}; pwd)`\n+  elif test -f ${with_tclinclude}/generic/tcl.h ; then\n+    ac_cv_c_tclh=`(cd ${with_tclinclude}/generic; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_tclinclude} directory doesn't contain headers])\n+  fi\n+fi\n+\n+dnl next check if it came with Tcl configuration file\n+if test x\"${ac_cv_c_tclconfig}\" != x ; then\n+  for i in $dirlist; do\n+    if test -f $ac_cv_c_tclconfig/$i/generic/tcl.h ; then\n+      ac_cv_c_tclh=`(cd $ac_cv_c_tclconfig/$i/generic; pwd)`\n+      break\n+    fi\n+  done\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_tclh}\" = x ; then\n+    dnl find the top level Tcl source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/tcl* 2>/dev/null`\" ; then\n+\t    tclpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Tcl source dir. We do it this way, cause there\n+    dnl might be multiple version of Tcl, and we want the most recent one.\n+    for i in `ls -dr $tclpath/tcl* 2>/dev/null ` ; do\n+        if test -f $i/generic/tcl.h ; then\n+          ac_cv_c_tclh=`(cd $i/generic; pwd)`\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl check if its installed with the compiler\n+if test x\"${ac_cv_c_tclh}\" = x ; then\n+    dnl Get the path to the compiler\n+    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n+    if test -f $ccpath/tcl.h; then\n+        ac_cv_c_tclh=$ccpath\n+    fi\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_tclh}\" = x ; then\n+   AC_MSG_RESULT(none)\n+   AC_CHECK_HEADER(tcl.h, ac_cv_c_tclh=installed, ac_cv_c_tclh=\"\")\n+else\n+   AC_MSG_RESULT(${ac_cv_c_tclh})\n+fi\n+])\n+  TCLHDIR=\"\"\n+if test x\"${ac_cv_c_tclh}\" = x ; then\n+    AC_MSG_ERROR([Can't find any Tcl headers])\n+fi\n+if test x\"${ac_cv_c_tclh}\" != x ; then\n+    no_tcl=\"\"\n+    if test x\"${ac_cv_c_tclh}\" != x\"installed\" ; then\n+\tif test x\"${CC}\" = xcl ; then\n+\t    tmp=\"`cygpath --windows ${ac_cv_c_tclh}`\"\n+\t    ac_cv_c_tclh=\"`echo $tmp | sed -e s#\\\\\\\\\\\\\\\\#/#g`\"\n+\tfi\n+        AC_MSG_RESULT(${ac_cv_c_tclh})\n+        TCLHDIR=\"-I${ac_cv_c_tclh}\"\n+    fi\n+fi\n+\n+AC_SUBST(TCLHDIR)\n+])\n+\n+dnl ====================================================================\n+dnl Ok, lets find the tcl configuration\n+AC_DEFUN(CYG_AC_PATH_TCLCONFIG, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+dnl First, look for one uninstalled.  \n+dnl the alternative search directory is invoked by --with-tclconfig\n+if test x\"${no_tcl}\" = x ; then\n+  dnl we reset no_tcl in case something fails here\n+    no_tcl=true\n+    AC_ARG_WITH(tclconfig, [  --with-tclconfig           directory containing tcl configuration (tclConfig.sh)],\n+         with_tclconfig=${withval})\n+    AC_MSG_CHECKING([for Tcl configuration script])\n+    AC_CACHE_VAL(ac_cv_c_tclconfig,[\n+\n+    dnl First check to see if --with-tclconfig was specified.\n+    if test x\"${with_tclconfig}\" != x ; then\n+        if test -f \"${with_tclconfig}/tclConfig.sh\" ; then\n+            ac_cv_c_tclconfig=`(cd ${with_tclconfig}; pwd)`\n+        else\n+            AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])\n+        fi\n+    fi\n+\n+    dnl next check if it came with Tcl configuration file in the source tree\n+    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n+        for i in $dirlist; do\n+            if test -f $srcdir/$i/unix/tclConfig.sh ; then\n+                ac_cv_c_tclconfig=`(cd $srcdir/$i/unix; pwd)`\n+\t        break\n+            fi\n+        done\n+    fi\n+    dnl check in a few other locations\n+    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n+        dnl find the top level Tcl source directory\n+        for i in $dirlist; do\n+            if test -n \"`ls -dr $i/tcl* 2>/dev/null`\" ; then\n+\t        tclconfpath=$i\n+\t        break\n+\t    fi\n+        done\n+\n+        dnl find the exact Tcl dir. We do it this way, cause there\n+        dnl might be multiple version of Tcl, and we want the most recent one.\n+        for i in `ls -dr $tclconfpath/tcl* 2>/dev/null ` ; do\n+            if test -f $i/unix/tclConfig.sh ; then\n+                ac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n+                break\n+            fi\n+        done\n+    fi\n+\n+    dnl Check to see if it's installed. We have to look in the $CC path\n+    dnl to find it, cause our $prefix may not match the compilers.\n+    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n+        dnl Get the path to the compiler\n+\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n+        if test -f $ccpath/tclConfig.sh; then\n+\t    ac_cv_c_tclconfig=$ccpath\n+        fi\n+    fi\n+    ])\tdnl end of cache_val\n+\n+    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n+        TCLCONFIG=\"\"\n+        AC_MSG_WARN(Can't find Tcl configuration definitions)\n+    else\n+        no_tcl=\"\"\n+        TCLCONFIG=${ac_cv_c_tclconfig}/tclConfig.sh\n+        AC_MSG_RESULT(${TCLCONFIG})\n+     fi\n+fi\n+AC_SUBST(TCLCONFIG)\n+])\n+\n+dnl Defined as a separate macro so we don't have to cache the values\n+dnl from PATH_TCLCONFIG (because this can also be cached).\n+AC_DEFUN(CYG_AC_LOAD_TCLCONFIG, [\n+    . $TCLCONFIG\n+\n+dnl AC_SUBST(TCL_VERSION)\n+dnl AC_SUBST(TCL_MAJOR_VERSION)\n+dnl AC_SUBST(TCL_MINOR_VERSION)\n+dnl AC_SUBST(TCL_CC)\n+    AC_SUBST(TCL_DEFS)\n+\n+dnl not used, don't export to save symbols\n+    AC_SUBST(TCL_LIB_FILE)\n+    AC_SUBST(TCL_LIB_FULL_PATH)\n+    AC_SUBST(TCL_LIBS)\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TCL_PREFIX)\n+\n+    AC_SUBST(TCL_CFLAGS)\n+\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TCL_EXEC_PREFIX)\n+\n+    AC_SUBST(TCL_SHLIB_CFLAGS)\n+    AC_SUBST(TCL_SHLIB_LD)\n+dnl don't export, not used outside of configure\n+dnl AC_SUBST(TCL_SHLIB_LD_LIBS)\n+dnl AC_SUBST(TCL_SHLIB_SUFFIX)\n+dnl not used, don't export to save symbols\n+dnl AC_SUBST(TCL_DL_LIBS)\n+    AC_SUBST(TCL_LD_FLAGS)\n+    AC_SUBST(TCL_LD_SEARCH_FLAGS)\n+dnl don't export, not used outside of configure\n+dnl AC_SUBST(TCL_COMPAT_OBJS)\n+    AC_SUBST(TCL_RANLIB)\n+    AC_SUBST(TCL_BUILD_LIB_SPEC)\n+    AC_SUBST(TCL_LIB_SPEC)\n+    AC_SUBST(TCL_BIN_DIR)\n+dnl AC_SUBST(TCL_LIB_VERSIONS_OK)\n+\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TCL_SHARED_LIB_SUFFIX)\n+\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TCL_UNSHARED_LIB_SUFFIX)\n+])\n+\n+dnl ====================================================================\n+AC_DEFUN(CYG_AC_PATH_TK, [\n+    CYG_AC_PATH_TKH\n+    CYG_AC_PATH_TKCONFIG\n+    CYG_AC_LOAD_TKCONFIG\n+])\n+AC_DEFUN(CYG_AC_PATH_TKH, [\n+#\n+# Ok, lets find the tk source trees so we can use the headers\n+# If the directory (presumably symlink) named \"tk\" exists, use that one\n+# in preference to any others.  Same logic is used when choosing library\n+# and again with Tcl. The search order is the best place to look first, then in\n+# decreasing significance. The loop breaks if the trigger file is found.\n+# Note the gross little conversion here of srcdir by cd'ing to the found\n+# directory. This converts the path from a relative to an absolute, so\n+# recursive cache variables for the path will work right. We check all\n+# the possible paths in one loop rather than many seperate loops to speed\n+# things up.\n+# the alternative search directory is involked by --with-tkinclude\n+#\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_tk=true\n+AC_MSG_CHECKING(for Tk headers in the source tree)\n+AC_ARG_WITH(tkinclude, [  --with-tkinclude       directory where tk headers are], with_tkinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_tkh,[\n+dnl first check to see if --with-tkinclude was specified\n+if test x\"${with_tkinclude}\" != x ; then\n+  if test -f ${with_tkinclude}/tk.h ; then\n+    ac_cv_c_tkh=`(cd ${with_tkinclude}; pwd)`\n+  elif test -f ${with_tkinclude}/generic/tk.h ; then\n+    ac_cv_c_tkh=`(cd ${with_tkinclude}/generic; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_tkinclude} directory doesn't contain headers])\n+  fi\n+fi\n+\n+dnl next check if it came with Tk configuration file\n+if test x\"${ac_cv_c_tkconfig}\" != x ; then\n+  for i in $dirlist; do\n+    if test -f $ac_cv_c_tkconfig/$i/generic/tk.h ; then\n+      ac_cv_c_tkh=`(cd $ac_cv_c_tkconfig/$i/generic; pwd)`\n+      break\n+    fi\n+  done\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_tkh}\" = x ; then\n+    dnl find the top level Tk source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/tk* 2>/dev/null`\" ; then\n+\t    tkpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Tk source dir. We do it this way, cause there\n+    dnl might be multiple version of Tk, and we want the most recent one.\n+    for i in `ls -dr $tkpath/tk* 2>/dev/null ` ; do\n+        if test -f $i/generic/tk.h ; then\n+          ac_cv_c_tkh=`(cd $i/generic; pwd)`\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_tkh}\" = x ; then\n+    AC_MSG_RESULT(none)\n+    dnl Get the path to the compiler. We do it this way instead of using\n+    dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.\n+    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n+    if test -f $ccpath/tk.h; then\n+\tac_cv_c_tkh=$ccpath\n+    fi\n+else\n+   AC_MSG_RESULT(${ac_cv_c_tkh})\n+fi\n+])\n+  TKHDIR=\"\"\n+if test x\"${ac_cv_c_tkh}\" = x ; then\n+    AC_MSG_ERROR([Can't find any Tk headers])\n+fi\n+if test x\"${ac_cv_c_tkh}\" != x ; then\n+    no_tk=\"\"\n+    if test x\"${ac_cv_c_tkh}\" != x\"installed\" ; then\n+\tif test x\"${CC}\" = xcl ; then\n+\t    tmp=\"`cygpath --windows ${ac_cv_c_tkh}`\"\n+\t    ac_cv_c_tkh=\"`echo $tmp | sed -e s#\\\\\\\\\\\\\\\\#/#g`\"\n+\tfi\n+        AC_MSG_RESULT([found in ${ac_cv_c_tkh}])\n+        TKHDIR=\"-I${ac_cv_c_tkh}\"\n+    fi\n+fi\n+\n+AC_SUBST(TKHDIR)\n+])\n+\n+AC_DEFUN(CYG_AC_PATH_TKCONFIG, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+dnl First, look for one uninstalled.  \n+dnl the alternative search directory is invoked by --with-tkconfig\n+if test x\"${no_tk}\" = x ; then\n+  dnl we reset no_tk in case something fails here\n+    no_tk=true\n+    AC_ARG_WITH(tkconfig, [  --with-tkconfig           directory containing tk configuration (tkConfig.sh)],\n+         with_tkconfig=${withval})\n+    AC_MSG_CHECKING([for Tk configuration script])\n+    AC_CACHE_VAL(ac_cv_c_tkconfig,[\n+\n+    dnl First check to see if --with-tkconfig was specified.\n+    if test x\"${with_tkconfig}\" != x ; then\n+        if test -f \"${with_tkconfig}/tkConfig.sh\" ; then\n+            ac_cv_c_tkconfig=`(cd ${with_tkconfig}; pwd)`\n+        else\n+            AC_MSG_ERROR([${with_tkconfig} directory doesn't contain tkConfig.sh])\n+        fi\n+    fi\n+\n+    dnl next check if it came with Tk configuration file in the source tree\n+    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n+        for i in $dirlist; do\n+            if test -f $srcdir/$i/unix/tkConfig.sh ; then\n+                ac_cv_c_tkconfig=`(cd $srcdir/$i/unix; pwd)`\n+\t        break\n+            fi\n+        done\n+    fi\n+    dnl check in a few other locations\n+    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n+        dnl find the top level Tk source directory\n+        for i in $dirlist; do\n+            if test -n \"`ls -dr $i/tk* 2>/dev/null`\" ; then\n+\t        tkconfpath=$i\n+\t        break\n+\t    fi\n+        done\n+\n+        dnl find the exact Tk dir. We do it this way, cause there\n+        dnl might be multiple version of Tk, and we want the most recent one.\n+        for i in `ls -dr $tkconfpath/tk* 2>/dev/null ` ; do\n+            if test -f $i/unix/tkConfig.sh ; then\n+                ac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n+                break\n+            fi\n+        done\n+    fi\n+\n+    dnl Check to see if it's installed. We have to look in the $CC path\n+    dnl to find it, cause our $prefix may not match the compilers.\n+    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n+        dnl Get the path to the compiler\n+\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n+        if test -f $ccpath/tkConfig.sh; then\n+\t    ac_cv_c_tkconfig=$ccpath\n+        fi\n+    fi\n+    ])\tdnl end of cache_val\n+\n+    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n+        TKCONFIG=\"\"\n+        AC_MSG_WARN(Can't find Tk configuration definitions)\n+    else\n+        no_tk=\"\"\n+        TKCONFIG=${ac_cv_c_tkconfig}/tkConfig.sh\n+        AC_MSG_RESULT(${TKCONFIG})\n+     fi\n+fi\n+AC_SUBST(TKCONFIG)\n+])\n+\n+dnl Defined as a separate macro so we don't have to cache the values\n+dnl from PATH_TKCONFIG (because this can also be cached).\n+AC_DEFUN(CYG_AC_LOAD_TKCONFIG, [\n+    if test -f \"$TKCONFIG\" ; then\n+      . $TKCONFIG\n+    fi\n+\n+    AC_SUBST(TK_VERSION)\n+dnl not actually used, don't export to save symbols\n+dnl    AC_SUBST(TK_MAJOR_VERSION)\n+dnl    AC_SUBST(TK_MINOR_VERSION)\n+    AC_SUBST(TK_DEFS)\n+\n+dnl not used, don't export to save symbols\n+    AC_SUBST(TK_LIB_FILE)\n+    AC_SUBST(TK_LIB_FULL_PATH)\n+    AC_SUBST(TK_LIBS)\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TK_PREFIX)\n+\n+dnl not used, don't export to save symbols\n+dnl    AC_SUBST(TK_EXEC_PREFIX)\n+    AC_SUBST(TK_BUILD_INCLUDES)\n+    AC_SUBST(TK_XINCLUDES)\n+    AC_SUBST(TK_XLIBSW)\n+    AC_SUBST(TK_BUILD_LIB_SPEC)\n+    AC_SUBST(TK_LIB_SPEC)\n+])\n+\n+dnl ====================================================================\n+dnl Ok, lets find the itcl source trees so we can use the headers\n+dnl the alternative search directory is involked by --with-itclinclude\n+AC_DEFUN(CYG_AC_PATH_ITCL, [\n+    CYG_AC_PATH_ITCLH\n+    CYG_AC_PATH_ITCLLIB\n+    CYG_AC_PATH_ITCLSH\n+    CYG_AC_PATH_ITCLMKIDX\n+])\n+AC_DEFUN(CYG_AC_PATH_ITCLH, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_itcl=true\n+AC_MSG_CHECKING(for Itcl headers in the source tree)\n+AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_itclh,[\n+dnl first check to see if --with-itclinclude was specified\n+if test x\"${with_itclinclude}\" != x ; then\n+  if test -f ${with_itclinclude}/itcl.h ; then\n+    ac_cv_c_itclh=`(cd ${with_itclinclude}; pwd)`\n+  elif test -f ${with_itclinclude}/src/itcl.h ; then\n+    ac_cv_c_itclh=`(cd ${with_itclinclude}/src; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain headers])\n+  fi\n+fi\n+\n+dnl next check if it came with Itcl configuration file\n+if test x\"${ac_cv_c_itclconfig}\" != x ; then\n+  for i in $dirlist; do\n+    if test -f $ac_cv_c_itclconfig/$i/src/itcl.h ; then\n+      ac_cv_c_itclh=`(cd $ac_cv_c_itclconfig/$i/src; pwd)`\n+      break\n+    fi\n+  done\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_itclh}\" = x ; then\n+    dnl find the top level Itcl source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n+\t    itclpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Itcl source dir. We do it this way, cause there\n+    dnl might be multiple version of Itcl, and we want the most recent one.\n+    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n+        if test -f $i/src/itcl.h ; then\n+          ac_cv_c_itclh=`(cd $i/src; pwd)`\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_itclh}\" = x ; then\n+   AC_MSG_RESULT(none)\n+   AC_CHECK_HEADER(itcl.h, ac_cv_c_itclh=installed, ac_cv_c_itclh=\"\")\n+else\n+   AC_MSG_RESULT(${ac_cv_c_itclh})\n+fi\n+])\n+  ITCLHDIR=\"\"\n+if test x\"${ac_cv_c_itclh}\" = x ; then\n+    AC_MSG_ERROR([Can't find any Itcl headers])\n+fi\n+if test x\"${ac_cv_c_itclh}\" != x ; then\n+    no_itcl=\"\"\n+    if test x\"${ac_cv_c_itclh}\" != x\"installed\" ; then\n+        AC_MSG_RESULT(${ac_cv_c_itclh})\n+        ITCLHDIR=\"-I${ac_cv_c_itclh}\"\n+    fi\n+fi\n+\n+AC_SUBST(ITCLHDIR)\n+])\n+\n+dnl Ok, lets find the itcl library\n+dnl First, look for one uninstalled.  \n+dnl the alternative search directory is invoked by --with-itcllib\n+AC_DEFUN(CYG_AC_PATH_ITCLLIB, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+if test x\"${no_itcl}\" = x ; then\n+    dnl we reset no_itcl incase something fails here\n+    no_itcl=true\n+    AC_ARG_WITH(itcllib,\n+\t[  --with-itcllib           directory where the itcl library is],\n+        with_itcllib=${withval})\n+    AC_MSG_CHECKING([for Itcl library])\n+    AC_CACHE_VAL(ac_cv_c_itcllib,[\n+    dnl First check to see if --with-itcllib was specified.\n+    if test x\"${with_itcllib}\" != x ; then\n+        if test -f \"${with_itcllib}/libitcl$TCL_SHARED_LIB_SUFFIX\" ; then\n+            ac_cv_c_itcllib=`(cd ${with_itcllib}; pwd)`/libitcl$TCL_SHARED_LIB_SUFFIX\n+\telse\n+\t    if test -f \"${with_itcllib}/libitcl$TCL_UNSHARED_LIB_SUFFIX\"; then\n+\t \tac_cv_c_itcllib=`(cd ${with_itcllib}; pwd)`/libitcl$TCL_UNSHARED_LIB_SUFFIX\n+\t    fi\n+\tfi\n+    fi\n+    dnl then check for a  Itcl library. Since these are uninstalled,\n+    dnl use the simple lib name root. \n+    if test x\"${ac_cv_c_itcllib}\" = x ; then\n+        dnl find the top level Itcl build directory\n+        for i in $dirlist; do\n+            if test -n \"`ls -dr $i/itcl* 2>/dev/null`\" ; then\n+\t        itclpath=$i/itcl\n+\t        break\n+\t    fi\n+        done\n+        dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n+        if test -f \"$itclpath/src/libitcl.$TCL_SHLIB_SUFFIX\" ; then\n+\t     ac_cv_c_itcllib=`(cd $itclpath/src; pwd)`\n+        elif test -f \"$itclpath/src/libitcl.a\"; then\n+\t     ac_cv_c_itcllib=`(cd $itclpath/src; pwd)`\n+\tfi\n+    fi\n+    dnl check in a few other private locations\n+    if test x\"${ac_cv_c_itcllib}\" = x ; then\n+        for i in ${dirlist}; do\n+            if test -n \"`ls -dr ${srcdir}/$i/itcl* 2>/dev/null`\" ; then\n+\t        itclpath=${srcdir}/$i\n+\t        break\n+\t    fi\n+        done\n+        for i in `ls -dr ${itclpath}/itcl* 2>/dev/null` ; do\n+            dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n+            if test -f \"$i/src/libitcl$TCL_SHLIB_SUFFIX\" ; then\n+\t        ac_cv_c_itcllib=`(cd $i/src; pwd)`\n+\t        break\n+            elif test -f \"$i/src/libitcl.a\"; then\n+\t        ac_cv_c_itcllib=`(cd $i/src; pwd)`\n+\t        break\n+\t    fi\t\n+        done\n+    fi\n+\n+    dnl see if one is conveniently installed with the compiler\n+    if test x\"${ac_cv_c_itcllib}\" = x ; then\n+        dnl Get the path to the compiler\n+\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n+        dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n+        if test -f \"${ccpath}/libitcl$TCL_SHLIB_SUFFIX\" ; then\n+\t    ac_cv_c_itcllib=`(cd ${ccpath}; pwd)`\n+        elif test -f \"${ccpath}/libitcl.a\"; then\n+\t    ac_cv_c_itcllib=`(cd ${ccpath}; pwd)`\n+        fi\n+    fi\n+    ])\n+    if test x\"${ac_cv_c_itcllib}\" = x ; then\n+        ITCLLIB=\"\"\n+        AC_MSG_WARN(Can't find Itcl library)\n+    else\n+        ITCLLIB=\"-L${ac_cv_c_itcllib}\"\n+        AC_MSG_RESULT(${ac_cv_c_itcllib})\n+        no_itcl=\"\"\n+    fi\n+fi\n+\n+AC_PROVIDE([$0])\n+AC_SUBST(ITCLLIB)\n+])\n+\n+\n+dnl ====================================================================\n+dnl Ok, lets find the itcl source trees so we can use the itcl_sh script\n+dnl the alternative search directory is involked by --with-itclinclude\n+AC_DEFUN(CYG_AC_PATH_ITCLSH, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_itcl=true\n+AC_MSG_CHECKING(for the itcl_sh script)\n+AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_itclsh,[\n+dnl first check to see if --with-itclinclude was specified\n+if test x\"${with_itclinclude}\" != x ; then\n+  if test -f ${with_itclinclude}/itcl_sh ; then\n+    ac_cv_c_itclsh=`(cd ${with_itclinclude}; pwd)`\n+  elif test -f ${with_itclinclude}/src/itcl_sh ; then\n+    ac_cv_c_itclsh=`(cd ${with_itclinclude}/src; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain itcl_sh])\n+  fi\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_itclsh}\" = x ; then\n+    dnl find the top level Itcl source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n+\t    itclpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Itcl source dir. We do it this way, cause there\n+    dnl might be multiple version of Itcl, and we want the most recent one.\n+    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n+        if test -f $i/src/itcl_sh ; then\n+          ac_cv_c_itclsh=`(cd $i/src; pwd)`/itcl_sh\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_itclsh}\" = x ; then\n+   AC_MSG_RESULT(none)\n+   AC_PATH_PROG(ac_cv_c_itclsh, itcl_sh)\n+else\n+   AC_MSG_RESULT(${ac_cv_c_itclsh})\n+fi\n+])\n+\n+if test x\"${ac_cv_c_itclsh}\" = x ; then\n+    AC_MSG_ERROR([Can't find the itcl_sh script])\n+fi\n+if test x\"${ac_cv_c_itclsh}\" != x ; then\n+    no_itcl=\"\"\n+    AC_MSG_RESULT(${ac_cv_c_itclsh})\n+    ITCLSH=\"${ac_cv_c_itclsh}\"\n+fi\n+AC_SUBST(ITCLSH)\n+])\n+\n+\n+dnl ====================================================================\n+dnl Ok, lets find the itcl source trees so we can use the itcl_sh script\n+dnl the alternative search directory is involked by --with-itclinclude\n+AC_DEFUN(CYG_AC_PATH_ITCLMKIDX, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_itcl=true\n+AC_MSG_CHECKING(for itcl_mkindex.tcl script)\n+AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_itclmkidx,[\n+dnl first check to see if --with-itclinclude was specified\n+if test x\"${with_itclinclude}\" != x ; then\n+  if test -f ${with_itclinclude}/itcl_sh ; then\n+    ac_cv_c_itclmkidx=`(cd ${with_itclinclude}; pwd)`\n+  elif test -f ${with_itclinclude}/src/itcl_sh ; then\n+    ac_cv_c_itclmkidx=`(cd ${with_itclinclude}/src; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain itcl_sh])\n+  fi\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n+    dnl find the top level Itcl source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n+\t    itclpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Itcl source dir. We do it this way, cause there\n+    dnl might be multiple version of Itcl, and we want the most recent one.\n+    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n+        if test -f $i/library/itcl_mkindex.tcl ; then\n+          ac_cv_c_itclmkidx=`(cd $i/library; pwd)`/itcl_mkindex.tcl\n+          break\n+        fi\n+    done\n+fi\n+if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n+    dnl Get the path to the compiler\n+    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/share\n+    dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n+    for i in `ls -dr $ccpath/itcl* 2>/dev/null ` ; do\n+        if test -f $i/itcl_mkindex.tcl ; then\n+            ac_cv_c_itclmkidx=`(cd $i; pwd)`/itcl_mkindex.tcl\n+            break\n+        fi\n+    done\n+fi\n+])\n+\n+if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n+    AC_MSG_ERROR([Can't find the itcl_mkindex.tcl script])\n+fi\n+if test x\"${ac_cv_c_itclmkidx}\" != x ; then\n+    no_itcl=\"\"\n+    AC_MSG_RESULT(${ac_cv_c_itclmkidx})\n+    ITCLMKIDX=\"${ac_cv_c_itclmkidx}\"\n+else\n+   AC_MSG_RESULT(none)\n+fi\n+AC_SUBST(ITCLMKIDX)\n+])\n+\n+dnl ====================================================================\n+dnl Ok, lets find the tix source trees so we can use the headers\n+dnl the alternative search directory is involked by --with-tixinclude\n+AC_DEFUN(CYG_AC_PATH_TIX, [\n+    CYG_AC_PATH_TIXH\n+    CYG_AC_PATH_TIXLIB\n+])\n+AC_DEFUN(CYG_AC_PATH_TIXH, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+no_tix=true\n+AC_MSG_CHECKING(for Tix headers in the source tree)\n+AC_ARG_WITH(tixinclude, [  --with-tixinclude       directory where tix headers are], with_tixinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_tixh,[\n+dnl first check to see if --with-tixinclude was specified\n+if test x\"${with_tixinclude}\" != x ; then\n+  if test -f ${with_tixinclude}/tix.h ; then\n+    ac_cv_c_tixh=`(cd ${with_tixinclude}; pwd)`\n+  elif test -f ${with_tixinclude}/generic/tix.h ; then\n+    ac_cv_c_tixh=`(cd ${with_tixinclude}/generic; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_tixinclude} directory doesn't contain headers])\n+  fi\n+fi\n+\n+dnl next check if it came with Tix configuration file\n+if test x\"${ac_cv_c_tixconfig}\" != x ; then\n+  for i in $dirlist; do\n+    if test -f $ac_cv_c_tixconfig/$i/generic/tix.h ; then\n+      ac_cv_c_tixh=`(cd $ac_cv_c_tixconfig/$i/generic; pwd)`\n+      break\n+    fi\n+  done\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_tixh}\" = x ; then\n+    dnl find the top level Tix source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/tix* 2>/dev/null`\" ; then\n+\t    tixpath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Tix source dir. We do it this way, cause there\n+    dnl might be multiple version of Tix, and we want the most recent one.\n+    for i in `ls -dr $tixpath/tix* 2>/dev/null ` ; do\n+        if test -f $i/generic/tix.h ; then\n+          ac_cv_c_tixh=`(cd $i/generic; pwd)`\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_tixh}\" = x ; then\n+    AC_MSG_RESULT(none)\n+    dnl Get the path to the compiler\n+\n+   dnl Get the path to the compiler. We do it this way instead of using\n+    dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.\n+    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n+    if test -f $ccpath/tix.h; then\n+\tac_cv_c_tixh=installed\n+    fi\n+else\n+   AC_MSG_RESULT(${ac_cv_c_tixh})\n+fi\n+])\n+if test x\"${ac_cv_c_tixh}\" = x ; then\n+    AC_MSG_ERROR([Can't find any Tix headers])\n+fi\n+if test x\"${ac_cv_c_tixh}\" != x ; then\n+    no_tix=\"\"\n+    AC_MSG_RESULT(${ac_cv_c_tixh})\n+    if test x\"${ac_cv_c_tixh}\" != x\"installed\" ; then\n+        TIXHDIR=\"-I${ac_cv_c_tixh}\"\n+    fi\n+fi\n+\n+AC_SUBST(TIXHDIR)\n+])\n+\n+AC_DEFUN(CYG_AC_PATH_TIXCONFIG, [\n+#\n+# Ok, lets find the tix configuration\n+# First, look for one uninstalled.  \n+# the alternative search directory is invoked by --with-tixconfig\n+#\n+\n+if test x\"${no_tix}\" = x ; then\n+  # we reset no_tix in case something fails here\n+  no_tix=true\n+  AC_ARG_WITH(tixconfig, [  --with-tixconfig           directory containing tix configuration (tixConfig.sh)],\n+         with_tixconfig=${withval})\n+  AC_MSG_CHECKING([for Tix configuration])\n+  AC_CACHE_VAL(ac_cv_c_tixconfig,[\n+\n+  # First check to see if --with-tixconfig was specified.\n+  if test x\"${with_tixconfig}\" != x ; then\n+    if test -f \"${with_tixconfig}/tixConfig.sh\" ; then\n+      ac_cv_c_tixconfig=`(cd ${with_tixconfig}; pwd)`\n+    else\n+      AC_MSG_ERROR([${with_tixconfig} directory doesn't contain tixConfig.sh])\n+    fi\n+  fi\n+\n+  # then check for a private Tix library\n+  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n+    for i in \\\n+\t\t../tix \\\n+\t\t`ls -dr ../tix[[4]]* 2>/dev/null` \\\n+\t\t../../tix \\\n+\t\t`ls -dr ../../tix[[4]]* 2>/dev/null` \\\n+\t\t../../../tix \\\n+\t\t`ls -dr ../../../tix[[4]]* 2>/dev/null` ; do\n+      if test -f \"$i/tixConfig.sh\" ; then\n+        ac_cv_c_tixconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few common install locations\n+  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n+      if test -f \"$i/tixConfig.sh\" ; then\n+        ac_cv_c_tkconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few other private locations\n+  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n+    for i in \\\n+\t\t${srcdir}/../tix \\\n+\t\t`ls -dr ${srcdir}/../tix[[4-9]]* 2>/dev/null` ; do\n+      if test -f \"$i/tixConfig.sh\" ; then\n+        ac_cv_c_tixconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  ])\n+  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n+    TIXCONFIG=\"# no Tix configs found\"\n+    AC_MSG_WARN(Can't find Tix configuration definitions)\n+  else\n+    no_tix=\n+    TIXCONFIG=${ac_cv_c_tixconfig}/tixConfig.sh\n+    AC_MSG_RESULT(found $TIXCONFIG)\n+  fi\n+fi\n+\n+])\n+\n+# Defined as a separate macro so we don't have to cache the values\n+# from PATH_TIXCONFIG (because this can also be cached).\n+AC_DEFUN(CYG_AC_LOAD_TIXCONFIG, [\n+    if test -f \"$TIXCONFIG\" ; then\n+      . $TIXCONFIG\n+    fi\n+\n+    AC_SUBST(TIX_BUILD_LIB_SPEC)\n+    AC_SUBST(TIX_LIB_FULL_PATH)\n+])\n+\n+AC_DEFUN(CYG_AC_PATH_ITCLCONFIG, [\n+#\n+# Ok, lets find the itcl configuration\n+# First, look for one uninstalled.  \n+# the alternative search directory is invoked by --with-itclconfig\n+#\n+\n+if test x\"${no_itcl}\" = x ; then\n+  # we reset no_itcl in case something fails here\n+  no_itcl=true\n+  AC_ARG_WITH(itclconfig, [  --with-itclconfig           directory containing itcl configuration (itclConfig.sh)],\n+         with_itclconfig=${withval})\n+  AC_MSG_CHECKING([for Itcl configuration])\n+  AC_CACHE_VAL(ac_cv_c_itclconfig,[\n+\n+  # First check to see if --with-itclconfig was specified.\n+  if test x\"${with_itclconfig}\" != x ; then\n+    if test -f \"${with_itclconfig}/itclConfig.sh\" ; then\n+      ac_cv_c_itclconfig=`(cd ${with_itclconfig}; pwd)`\n+    else\n+      AC_MSG_ERROR([${with_itclconfig} directory doesn't contain itclConfig.sh])\n+    fi\n+  fi\n+\n+  # then check for a private itcl library\n+  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n+    for i in \\\n+\t\t../itcl/itcl \\\n+\t\t`ls -dr ../itcl/itcl[[3]]* 2>/dev/null` \\\n+\t\t../../itcl/itcl \\\n+\t\t`ls -dr ../../itcl/itcl[[3]]* 2>/dev/null` \\\n+\t\t../../../itcl/itcl \\\n+\t\t`ls -dr ../../../itcl/itcl[[3]]* 2>/dev/null` ; do\n+      if test -f \"$i/itclConfig.sh\" ; then\n+        ac_cv_c_itclconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few common install locations\n+  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n+      if test -f \"$i/itclConfig.sh\" ; then\n+        ac_cv_c_itclconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few other private locations\n+  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n+    for i in \\\n+\t\t${srcdir}/../itcl/itcl \\\n+\t\t`ls -dr ${srcdir}/../itcl/itcl[[3]]* 2>/dev/null` ; do\n+      if test -f \"$i/itcl/itclConfig.sh\" ; then\n+        ac_cv_c_itclconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  ])\n+  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n+    ITCLCONFIG=\"# no itcl configs found\"\n+    AC_MSG_WARN(Can't find itcl configuration definitions)\n+  else\n+    no_itcl=\n+    ITCLCONFIG=${ac_cv_c_itclconfig}/itclConfig.sh\n+    AC_MSG_RESULT(found $ITCLCONFIG)\n+  fi\n+fi\n+\n+])\n+\n+# Defined as a separate macro so we don't have to cache the values\n+# from PATH_ITCLCONFIG (because this can also be cached).\n+AC_DEFUN(CYG_AC_LOAD_ITCLCONFIG, [\n+    if test -f \"$ITCLCONFIG\" ; then\n+      . $ITCLCONFIG\n+    fi\n+\n+    AC_SUBST(ITCL_BUILD_LIB_SPEC)\n+    AC_SUBST(ITCL_SH)\n+    AC_SUBST(ITCL_LIB_FILE)\n+    AC_SUBST(ITCL_LIB_FULL_PATH)\n+\n+])\n+\n+\n+AC_DEFUN(CYG_AC_PATH_ITKCONFIG, [\n+#\n+# Ok, lets find the itk configuration\n+# First, look for one uninstalled.  \n+# the alternative search directory is invoked by --with-itkconfig\n+#\n+\n+if test x\"${no_itk}\" = x ; then\n+  # we reset no_itk in case something fails here\n+  no_itk=true\n+  AC_ARG_WITH(itkconfig, [  --with-itkconfig           directory containing itk configuration (itkConfig.sh)],\n+         with_itkconfig=${withval})\n+  AC_MSG_CHECKING([for Itk configuration])\n+  AC_CACHE_VAL(ac_cv_c_itkconfig,[\n+\n+  # First check to see if --with-itkconfig was specified.\n+  if test x\"${with_itkconfig}\" != x ; then\n+    if test -f \"${with_itkconfig}/itkConfig.sh\" ; then\n+      ac_cv_c_itkconfig=`(cd ${with_itkconfig}; pwd)`\n+    else\n+      AC_MSG_ERROR([${with_itkconfig} directory doesn't contain itkConfig.sh])\n+    fi\n+  fi\n+\n+  # then check for a private itk library\n+  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n+    for i in \\\n+\t\t../itcl/itk \\\n+\t\t`ls -dr ../itcl/itk[[3]]* 2>/dev/null` \\\n+\t\t../../itcl/itk \\\n+\t\t`ls -dr ../../itcl/itk[[3]]* 2>/dev/null` \\\n+\t\t../../../itcl/itk \\\n+\t\t`ls -dr ../../../itcl/itk[[3]]* 2>/dev/null` ; do\n+      if test -f \"$i/itkConfig.sh\" ; then\n+        ac_cv_c_itkconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few common install locations\n+  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n+      if test -f \"$i/itcl/itkConfig.sh\" ; then\n+        ac_cv_c_itkconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  # check in a few other private locations\n+  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n+    for i in \\\n+\t\t${srcdir}/../itcl/itk \\\n+\t\t`ls -dr ${srcdir}/../itcl/itk[[3]]* 2>/dev/null` ; do\n+      if test -f \"$i/itkConfig.sh\" ; then\n+        ac_cv_c_itkconfig=`(cd $i; pwd)`\n+\tbreak\n+      fi\n+    done\n+  fi\n+  ])\n+  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n+    ITCLCONFIG=\"# no itk configs found\"\n+    AC_MSG_WARN(Can't find itk configuration definitions)\n+  else\n+    no_itk=\n+    ITKCONFIG=${ac_cv_c_itkconfig}/itkConfig.sh\n+    AC_MSG_RESULT(found $ITKCONFIG)\n+  fi\n+fi\n+\n+])\n+\n+# Defined as a separate macro so we don't have to cache the values\n+# from PATH_ITKCONFIG (because this can also be cached).\n+AC_DEFUN(CYG_AC_LOAD_ITKCONFIG, [\n+    if test -f \"$ITKCONFIG\" ; then\n+      . $ITKCONFIG\n+    fi\n+\n+    AC_SUBST(ITK_BUILD_LIB_SPEC)\n+    AC_SUBST(ITK_LIB_FILE)\n+    AC_SUBST(ITK_LIB_FULL_PATH)\n+])\n+\n+\n+dnl ====================================================================\n+dnl Ok, lets find the libgui source trees so we can use the headers\n+dnl the alternative search directory is involked by --with-libguiinclude\n+AC_DEFUN(CYG_AC_PATH_LIBGUI, [\n+    CYG_AC_PATH_LIBGUIH\n+    CYG_AC_PATH_LIBGUILIB\n+])\n+AC_DEFUN(CYG_AC_PATH_LIBGUIH, [\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..../../../../../../../../../../..\"\n+no_libgui=true\n+AC_MSG_CHECKING(for Libgui headers in the source tree)\n+AC_ARG_WITH(libguiinclude, [  --with-libguiinclude       directory where libgui headers are], with_libguiinclude=${withval})\n+AC_CACHE_VAL(ac_cv_c_libguih,[\n+dnl first check to see if --with-libguiinclude was specified\n+if test x\"${with_libguiinclude}\" != x ; then\n+  if test -f ${with_libguiinclude}/guitcl.h ; then\n+    ac_cv_c_libguih=`(cd ${with_libguiinclude}; pwd)`\n+  elif test -f ${with_libguiinclude}/src/guitcl.h ; then\n+    ac_cv_c_libguih=`(cd ${with_libguiinclude}/src; pwd)`\n+  else\n+    AC_MSG_ERROR([${with_libguiinclude} directory doesn't contain headers])\n+  fi\n+fi\n+\n+dnl next check if it came with Libgui configuration file\n+if test x\"${ac_cv_c_libguiconfig}\" != x ; then\n+  for i in $dirlist; do\n+    if test -f $ac_cv_c_libguiconfig/$i/src/guitcl.h ; then\n+      ac_cv_c_libguih=`(cd $ac_cv_c_libguiconfig/$i/src; pwd)`\n+      break\n+    fi\n+  done\n+fi\n+\n+dnl next check in private source directory\n+dnl since ls returns lowest version numbers first, reverse its output\n+if test x\"${ac_cv_c_libguih}\" = x ; then\n+    dnl find the top level Libgui source directory\n+    for i in $dirlist; do\n+        if test -n \"`ls -dr $srcdir/$i/libgui* 2>/dev/null`\" ; then\n+\t    libguipath=$srcdir/$i\n+\t    break\n+\tfi\n+    done\n+\n+    dnl find the exact Libgui source dir. We do it this way, cause there\n+    dnl might be multiple version of Libgui, and we want the most recent one.\n+    for i in `ls -dr $libguipath/libgui* 2>/dev/null ` ; do\n+        if test -f $i/src/guitcl.h ; then\n+          ac_cv_c_libguih=`(cd $i/src; pwd)`\n+          break\n+        fi\n+    done\n+fi\n+\n+dnl see if one is installed\n+if test x\"${ac_cv_c_libguih}\" = x ; then\n+   AC_MSG_RESULT(none)\n+   AC_CHECK_HEADER(guitcl.h, ac_cv_c_libguih=installed, ac_cv_c_libguih=\"\")\n+fi\n+])\n+LIBGUIHDIR=\"\"\n+if test x\"${ac_cv_c_libguih}\" = x ; then\n+    AC_MSG_WARN([Can't find any Libgui headers])\n+fi\n+if test x\"${ac_cv_c_libguih}\" != x ; then\n+    no_libgui=\"\"\n+    if test x\"${ac_cv_c_libguih}\" != x\"installed\" ; then\n+        LIBGUIHDIR=\"-I${ac_cv_c_libguih}\"\n+    fi\n+fi\n+AC_MSG_RESULT(${ac_cv_c_libguih})\n+AC_SUBST(LIBGUIHDIR)\n+])\n+\n+dnl ====================================================================\n+dnl find the GUI library\n+AC_DEFUN(CYG_AC_PATH_LIBGUILIB, [\n+AC_MSG_CHECKING(for GUI library  in the build tree)\n+dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n+dnl look for the library\n+AC_MSG_CHECKING(for GUI library)\n+AC_CACHE_VAL(ac_cv_c_libguilib,[\n+if test x\"${ac_cv_c_libguilib}\" = x ; then\n+    for i in $dirlist; do\n+      if test -f \"$i/libgui/src/Makefile\" ; then\n+        ac_cv_c_libguilib=`(cd $i/libgui/src; pwd)`\n+        break\n+      fi\n+    done\n+fi\n+]) \n+if test x\"${ac_cv_c_libguilib}\" != x ; then\n+     GUILIB=\"${GUILIB} -L${ac_cv_c_libguilib}\"\n+     LIBGUILIB=\"-lgui\"\n+     AC_MSG_RESULT(${ac_cv_c_libguilib})\n+else\n+     AC_MSG_RESULT(none)\n+fi\n+\n+AC_SUBST(GUILIB)\n+AC_SUBST(LIBGUILIB)\n+])"}, {"sha": "35cf2c8ee4e34dad2e7c444c15f4b139f8c68009", "filename": "config/mh-i370pic", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmh-i370pic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmh-i370pic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-i370pic?ref=117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "patch": "@@ -0,0 +1 @@\n+PICFLAG=-fPIC"}, {"sha": "d34b774b3f6891a546cd27c717158ae78ef055ef", "filename": "config/mt-d30v", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmt-d30v", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmt-d30v", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmt-d30v?ref=117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "patch": "@@ -0,0 +1,4 @@\n+# Build libraries optimizing for space, not speed.\n+# Turn off warnings about symbols named the same as registers\n+ CFLAGS_FOR_TARGET = -g -Os -Wa,-C\n+ CXXFLAGS_FOR_TARGET = -g -Os -Wa,-C"}, {"sha": "35b8c9e4dc2320bc8c12184a31e62df0afd07920", "filename": "config/mt-i370pic", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmt-i370pic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117c9b1c9ddc571a39b46c8151df72e50a2c41e0/config%2Fmt-i370pic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmt-i370pic?ref=117c9b1c9ddc571a39b46c8151df72e50a2c41e0", "patch": "@@ -0,0 +1 @@\n+PICFLAG_FOR_TARGET=-fPIC"}]}