{"sha": "3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjNDYyYzI5Y2Q5ZWMxMmY1YTc0YzRiMDhiYmQ2NDZlNjU4ZTRhMQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-06-16T10:15:31Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-16T10:15:31Z"}, "message": "cls_align_sint64.c, [...]: Fix printf format specifiers.\n\n2009-06-16  Andrew Haley  <aph@redhat.com>\n\n        * testsuite/libffi.call/cls_align_sint64.c,\n        testsuite/libffi.call/cls_align_uint64.c,\n        testsuite/libffi.call/cls_longdouble_va.c,\n        testsuite/libffi.call/cls_ulonglong.c,\n        testsuite/libffi.call/return_ll1.c,\n        testsuite/libffi.call/stret_medium2.c: Fix printf format\n        specifiers.\n        * testsuite/libffi.call/ffitest.h,\n        testsuite/libffi.special/ffitestcxx.h (PRIdLL, PRIuLL): Define.\n\nFrom-SVN: r148521", "tree": {"sha": "910c53bd890dfeed788f5c5b0cf6bc92b9017e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/910c53bd890dfeed788f5c5b0cf6bc92b9017e1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b26b801df0c37d2982a8c3667aea8b74d42c5c6"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "162470d8cb35d7cf14b7cd7d25f5d4143eb54f26", "filename": "libffi/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -1,3 +1,15 @@\n+2009-06-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/libffi.call/cls_align_sint64.c,\n+\ttestsuite/libffi.call/cls_align_uint64.c,\n+\ttestsuite/libffi.call/cls_longdouble_va.c,\n+\ttestsuite/libffi.call/cls_ulonglong.c,\n+\ttestsuite/libffi.call/return_ll1.c,\n+\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n+\tspecifiers.\n+\t* testsuite/libffi.call/ffitest.h,\n+\ttestsuite/libffi.special/ffitestcxx.h (PRIdLL, PRIuLL): Define.\n+\n 2009-06-15  Andrew Haley  <aph@redhat.com>\n \n \t* testsuite/libffi.call/err_bad_typedef.c: xfail everywhere."}, {"sha": "2b15c983886e81fc000f5868074bd23b04d0f073", "filename": "libffi/testsuite/libffi.call/cls_align_sint64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -22,7 +22,7 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n   result.b = a1.b + a2.b;\n   result.c = a1.c + a2.c;\n \n-  printf(\"%d %lld %d %d %lld %d: %d %lld %d\\n\", a1.a, a1.b, a1.c, a2.a, a2.b, a2.c, result.a, result.b, result.c);\n+  printf(\"%d %\" PRIdLL \" %d %d %\" PRIdLL \" %d: %d %\" PRIdLL \" %d\\n\", a1.a, a1.b, a1.c, a2.a, a2.b, a2.c, result.a, result.b, result.c);\n \n   return  result;\n }\n@@ -77,14 +77,14 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_align_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %lld %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %\" PRIdLL \" %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   CHECK(ffi_prep_closure_loc(pcl, &cif, cls_struct_align_gn, NULL, code) == FFI_OK);\n \n   res_dbl = ((cls_struct_align(*)(cls_struct_align, cls_struct_align))(code))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %lld %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %\" PRIdLL \" %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   exit(0);"}, {"sha": "215584f60a4918335aa11e936b5cc4d1a4f44bb7", "filename": "libffi/testsuite/libffi.call/cls_align_uint64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -23,7 +23,7 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n   result.b = a1.b + a2.b;\n   result.c = a1.c + a2.c;\n \n-  printf(\"%d %llu %d %d %llu %d: %d %llu %d\\n\", a1.a, a1.b, a1.c, a2.a, a2.b, a2.c, result.a, result.b, result.c);\n+  printf(\"%d %\" PRIdLL \" %d %d %\" PRIdLL \" %d: %d %\" PRIdLL \" %d\\n\", a1.a, a1.b, a1.c, a2.a, a2.b, a2.c, result.a, result.b, result.c);\n \n   return  result;\n }\n@@ -78,14 +78,14 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_align_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %llu %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %\" PRIdLL \" %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   CHECK(ffi_prep_closure_loc(pcl, &cif, cls_struct_align_gn, NULL, code) == FFI_OK);\n \n   res_dbl = ((cls_struct_align(*)(cls_struct_align, cls_struct_align))(code))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %llu %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %\" PRIdLL \" %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   exit(0);"}, {"sha": "3d725bd731a8b231b804d29e391a5cad84862160", "filename": "libffi/testsuite/libffi.call/cls_longdouble_va.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_longdouble_va.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_longdouble_va.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_longdouble_va.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -42,9 +42,9 @@ int main (void)\n \targs[2] = NULL;\n \n \tffi_call(&cif, FFI_FN(printf), &res, args);\n-\t// { dg-output \"7.0\" { xfail i*86-*-linux-* x86_64-*-linux-* sh*-*-linux-* } }\n+\t// { dg-output \"7.0\" { xfail i*86-*-linux-* x86_64-*-linux-* } }\n \tprintf(\"res: %d\\n\", (int) res);\n-\t// { dg-output \"\\nres: 4\" { xfail i*86-*-linux-* x86_64-*-linux-* sh*-*-linux-* } }\n+\t// { dg-output \"\\nres: 4\" { xfail i*86-*-linux-* x86_64-*-linux-* } }\n \n \tCHECK(ffi_prep_closure_loc(pcl, &cif, cls_longdouble_va_fn, NULL, code) == FFI_OK);\n "}, {"sha": "c3cf0d6ec017810a6e8fd4d9866df244e2347836", "filename": "libffi/testsuite/libffi.call/cls_ulonglong.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -12,7 +12,7 @@ static void cls_ret_ulonglong_fn(ffi_cif* cif __UNUSED__, void* resp,\n {\n   *(unsigned long long *)resp=  *(unsigned long long *)args[0];\n \n-  printf(\"%llu: %llu\\n\",*(unsigned long long *)args[0],\n+  printf(\"%\" PRIuLL \": %\" PRIuLL \"\\n\",*(unsigned long long *)args[0],\n \t *(unsigned long long *)(resp));\n }\n typedef unsigned long long (*cls_ret_ulonglong)(unsigned long long);\n@@ -34,12 +34,12 @@ int main (void)\n   CHECK(ffi_prep_closure_loc(pcl, &cif, cls_ret_ulonglong_fn, NULL, code)  == FFI_OK);\n   res = (*((cls_ret_ulonglong)code))(214LL);\n   /* { dg-output \"214: 214\" } */\n-  printf(\"res: %llu\\n\", res);\n+  printf(\"res: %\" PRIdLL \"\\n\", res);\n   /* { dg-output \"\\nres: 214\" } */\n \n   res = (*((cls_ret_ulonglong)code))(9223372035854775808LL);\n   /* { dg-output \"\\n9223372035854775808: 9223372035854775808\" } */\n-  printf(\"res: %llu\\n\", res);\n+  printf(\"res: %\" PRIdLL \"\\n\", res);\n   /* { dg-output \"\\nres: 9223372035854775808\" } */\n \n   exit(0);"}, {"sha": "c7cb76cb3b51c6a00a9ae2f086728302635b43ab", "filename": "libffi/testsuite/libffi.call/ffitest.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -45,6 +45,15 @@\n \n #endif\n \n+/* MinGW kludge.  */\n+#ifdef WIN64\n+#define PRIdLL \"PRId64\"\n+#define PRIuLL \"PRIu64\"\n+#else\n+#define PRIdLL \"lld\"\n+#define PRIuLL \"llu\"\n+#endif\n+\n #ifdef USING_MMAP\n static inline void *\n allocate_mmap (size_t size)"}, {"sha": "dad90c17ff3624026e96d1974603dd6785b2bf22", "filename": "libffi/testsuite/libffi.call/return_ll1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll1.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -36,7 +36,7 @@ int main (void)\n   ll2 = 11111111;\n \n   ffi_call(&cif, FFI_FN(return_ll), &rlonglong, values);\n-  printf(\"res: %lld, %lld\\n\", rlonglong, ll0 + ll1 + ll2);\n+  printf(\"res: %\" PRIdLL \", %\" PRIdLL \"\\n\", rlonglong, ll0 + ll1 + ll2);\n   /* { dg-output \"res: 11111133333222, 11111133333222\" } */\n   exit(0);\n }"}, {"sha": "a012f9e681389081e4450cfab15dddd88e6e7930", "filename": "libffi/testsuite/libffi.call/stret_medium2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fstret_medium2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.call%2Fstret_medium2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fstret_medium2.c?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -39,7 +39,7 @@ struct_72byte cls_struct_72byte_fn(\n \tresult.h = b0.h + b1.h + b2.h + b3.h;\n \tresult.i = b0.i + b1.i + b2.i + b3.i;\n \n-\tprintf(\"%g %g %g %g %g %g %g %g %lld\\n\", result.a, result.b, result.c,\n+\tprintf(\"%g %g %g %g %g %g %g %g %\" PRIdLL \"\\n\", result.a, result.b, result.c,\n \t\tresult.d, result.e, result.f, result.g, result.h, result.i);\n \n \treturn result;\n@@ -107,7 +107,7 @@ int main (void)\n \n \tffi_call(&cif, FFI_FN(cls_struct_72byte_fn), &res_dbl, args_dbl);\n \t/* { dg-output \"22 15 17 25 6 13 19 18 16\" } */\n-\tprintf(\"res: %g %g %g %g %g %g %g %g %lld\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n+\tprintf(\"res: %g %g %g %g %g %g %g %g %\" PRIdLL \"\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n \t\tres_dbl.d, res_dbl.e, res_dbl.f, res_dbl.g, res_dbl.h, res_dbl.i);\n \t/* { dg-output \"\\nres: 22 15 17 25 6 13 19 18 16\" } */\n \n@@ -116,7 +116,7 @@ int main (void)\n \tres_dbl = ((struct_72byte(*)(struct_72byte, struct_72byte,\n \t\tstruct_72byte, struct_72byte))(code))(e_dbl, f_dbl, g_dbl, h_dbl);\n \t/* { dg-output \"\\n22 15 17 25 6 13 19 18 16\" } */\n-\tprintf(\"res: %g %g %g %g %g %g %g %g %lld\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n+\tprintf(\"res: %g %g %g %g %g %g %g %g %\" PRIdLL \"\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n \t\tres_dbl.d, res_dbl.e, res_dbl.f, res_dbl.g, res_dbl.h, res_dbl.i);\n \t/* { dg-output \"\\nres: 22 15 17 25 6 13 19 18 16\" } */\n "}, {"sha": "92fb6568017226894d59980df29a3a2e3c9c6c79", "filename": "libffi/testsuite/libffi.special/ffitestcxx.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h?ref=3bc462c29cd9ec12f5a74c4b08bbd646e658e4a1", "patch": "@@ -43,6 +43,16 @@\n \n #endif\n \n+\n+/* MinGW kludge.  */\n+#ifdef WIN64\n+#define PRIdLL \"PRId64\"\n+#define PRIuLL \"PRIu64\"\n+#else\n+#define PRIdLL \"lld\"\n+#define PRIuLL \"llu\"\n+#endif\n+\n #ifdef USING_MMAP\n static inline void *\n allocate_mmap (size_t size)"}]}