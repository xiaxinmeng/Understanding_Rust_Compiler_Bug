{"sha": "0da87370fb10795b17f53aad3391f39f75c81817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRhODczNzBmYjEwNzk1YjE3ZjUzYWFkMzM5MWYzOWY3NWM4MTgxNw==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-01-16T16:45:57Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-01-16T16:45:57Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_index, [...]): Remove 'gfc'-prefix from local variable...\n\n* trans-intrinsic.c (gfc_conv_intrinsic_index,\ngfc_conv_intrinsic_scan, gfc_conv_intrinsic_verify): Remove\n'gfc'-prefix from local variable, remove dead code, use correct\ntype when inserting argument.\n\nFrom-SVN: r93731", "tree": {"sha": "0f7919cf4d625aab505419cd4a5ba94aab3f8d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f7919cf4d625aab505419cd4a5ba94aab3f8d64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0da87370fb10795b17f53aad3391f39f75c81817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da87370fb10795b17f53aad3391f39f75c81817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da87370fb10795b17f53aad3391f39f75c81817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da87370fb10795b17f53aad3391f39f75c81817/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e805a59940bf1d5627200c26771867f2f83cabc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e805a59940bf1d5627200c26771867f2f83cabc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e805a59940bf1d5627200c26771867f2f83cabc1"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "c11f54a78fa2e05646d96a1c6ee9045db46251ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da87370fb10795b17f53aad3391f39f75c81817/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da87370fb10795b17f53aad3391f39f75c81817/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0da87370fb10795b17f53aad3391f39f75c81817", "patch": "@@ -19,7 +19,12 @@\n \tgfc_conv_intrinsic_trim, gfc_conv_intrinsic_iargc): Use\n \t'build_int_cst' instead of converting 'integer_zero_node' or\n \t'integer_one_node' respectively.\n-\t\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_index,\n+\tgfc_conv_intrinsic_scan, gfc_conv_intrinsic_verify): Remove\n+\t'gfc'-prefix from local variable, remove dead code, use correct\n+\ttype when inserting argument.\n+\n 2005-01-16  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR 19168"}, {"sha": "b49479dbbbee428c923a0135671685973d947765", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da87370fb10795b17f53aad3391f39f75c81817/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da87370fb10795b17f53aad3391f39f75c81817/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=0da87370fb10795b17f53aad3391f39f75c81817", "patch": "@@ -1959,7 +1959,7 @@ gfc_conv_intrinsic_len_trim (gfc_se * se, gfc_expr * expr)\n static void\n gfc_conv_intrinsic_index (gfc_se * se, gfc_expr * expr)\n {\n-  tree gfc_logical4_type_node = gfc_get_logical_type (4);\n+  tree logical4_type_node = gfc_get_logical_type (4);\n   tree args;\n   tree back;\n   tree type;\n@@ -1970,14 +1970,14 @@ gfc_conv_intrinsic_index (gfc_se * se, gfc_expr * expr)\n   tmp = gfc_advance_chain (args, 3);\n   if (TREE_CHAIN (tmp) == NULL_TREE)\n     {\n-      back = convert (gfc_logical4_type_node, integer_one_node);\n-      back = tree_cons (NULL_TREE, integer_zero_node, NULL_TREE);\n+      back = tree_cons (NULL_TREE, build_int_cst (logical4_type_node, 0),\n+\t\t\tNULL_TREE);\n       TREE_CHAIN (tmp) = back;\n     }\n   else\n     {\n       back = TREE_CHAIN (tmp);\n-      TREE_VALUE (back) = convert (gfc_logical4_type_node, TREE_VALUE (back));\n+      TREE_VALUE (back) = convert (logical4_type_node, TREE_VALUE (back));\n     }\n \n   se->expr = gfc_build_function_call (gfor_fndecl_string_index, args);\n@@ -2276,7 +2276,7 @@ gfc_conv_associated (gfc_se *se, gfc_expr *expr)\n static void\n gfc_conv_intrinsic_scan (gfc_se * se, gfc_expr * expr)\n {\n-  tree gfc_logical4_type_node = gfc_get_logical_type (4);\n+  tree logical4_type_node = gfc_get_logical_type (4);\n   tree args;\n   tree back;\n   tree type;\n@@ -2287,14 +2287,14 @@ gfc_conv_intrinsic_scan (gfc_se * se, gfc_expr * expr)\n   tmp = gfc_advance_chain (args, 3);\n   if (TREE_CHAIN (tmp) == NULL_TREE)\n     {\n-      back = convert (gfc_logical4_type_node, integer_one_node);\n-      back = tree_cons (NULL_TREE, integer_zero_node, NULL_TREE);\n+      back = tree_cons (NULL_TREE, build_int_cst (logical4_type_node, 0),\n+\t\t\tNULL_TREE);\n       TREE_CHAIN (tmp) = back;\n     }\n   else\n     {\n       back = TREE_CHAIN (tmp);\n-      TREE_VALUE (back) = convert (gfc_logical4_type_node, TREE_VALUE (back));\n+      TREE_VALUE (back) = convert (logical4_type_node, TREE_VALUE (back));\n     }\n \n   se->expr = gfc_build_function_call (gfor_fndecl_string_scan, args);\n@@ -2309,7 +2309,7 @@ gfc_conv_intrinsic_scan (gfc_se * se, gfc_expr * expr)\n static void\n gfc_conv_intrinsic_verify (gfc_se * se, gfc_expr * expr)\n {\n-  tree gfc_logical4_type_node = gfc_get_logical_type (4);\n+  tree logical4_type_node = gfc_get_logical_type (4);\n   tree args;\n   tree back;\n   tree type;\n@@ -2320,14 +2320,14 @@ gfc_conv_intrinsic_verify (gfc_se * se, gfc_expr * expr)\n   tmp = gfc_advance_chain (args, 3);\n   if (TREE_CHAIN (tmp) == NULL_TREE)\n     {\n-      back = convert (gfc_logical4_type_node, integer_one_node);\n-      back = tree_cons (NULL_TREE, integer_zero_node, NULL_TREE);\n+      back = tree_cons (NULL_TREE, build_int_cst (logical4_type_node, 0),\n+\t\t\tNULL_TREE);\n       TREE_CHAIN (tmp) = back;\n     }\n   else\n     {\n       back = TREE_CHAIN (tmp);\n-      TREE_VALUE (back) = convert (gfc_logical4_type_node, TREE_VALUE (back));\n+      TREE_VALUE (back) = convert (logical4_type_node, TREE_VALUE (back));\n     }\n \n   se->expr = gfc_build_function_call (gfor_fndecl_string_verify, args);"}]}