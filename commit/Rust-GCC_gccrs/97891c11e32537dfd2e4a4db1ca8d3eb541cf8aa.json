{"sha": "97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4OTFjMTFlMzI1MzdkZmQyZTRhNGRiMWNhOGQzZWI1NDFjZjhhYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2014-04-25T11:21:40Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-04-25T11:21:40Z"}, "message": "Add clobber_reg\n\n2014-04-25  Tom de Vries  <tom@codesourcery.com>\n\n\t* expr.c (clobber_reg_mode): New function.\n\t* expr.h (clobber_reg): New function.\n\nFrom-SVN: r209800", "tree": {"sha": "f619c8dfb45013f73d3a208c27aae9880becdeda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f619c8dfb45013f73d3a208c27aae9880becdeda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/comments", "author": null, "committer": null, "parents": [{"sha": "3ee634fd7b20399a1470db1a1e18d423ab761cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee634fd7b20399a1470db1a1e18d423ab761cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ee634fd7b20399a1470db1a1e18d423ab761cf7"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "f0fc311dbc037adca31cacbc456639aa05ff307a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "patch": "@@ -1,3 +1,8 @@\n+2014-04-25  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* expr.c (clobber_reg_mode): New function.\n+\t* expr.h (clobber_reg): New function.\n+\n 2014-04-25  Tom de Vries  <tom@codesourcery.com>\n \n \t* rtlanal.c (find_all_hard_reg_sets): Note INSN_CALL_FUNCTION_USAGE"}, {"sha": "fec6194af1ff3ae4db29a0f1407eae1d9a8d159b", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "patch": "@@ -2396,6 +2396,18 @@ use_reg_mode (rtx *call_fusage, rtx reg, enum machine_mode mode)\n     = gen_rtx_EXPR_LIST (mode, gen_rtx_USE (VOIDmode, reg), *call_fusage);\n }\n \n+/* Add a CLOBBER expression for REG to the (possibly empty) list pointed\n+   to by CALL_FUSAGE.  REG must denote a hard register.  */\n+\n+void\n+clobber_reg_mode (rtx *call_fusage, rtx reg, enum machine_mode mode)\n+{\n+  gcc_assert (REG_P (reg) && REGNO (reg) < FIRST_PSEUDO_REGISTER);\n+\n+  *call_fusage\n+    = gen_rtx_EXPR_LIST (mode, gen_rtx_CLOBBER (VOIDmode, reg), *call_fusage);\n+}\n+\n /* Add USE expressions to *CALL_FUSAGE for each of NREGS consecutive regs,\n    starting at REGNO.  All of these registers must be hard registers.  */\n "}, {"sha": "1823febac2659aa1976b7386413cf59beb7c9dbb", "filename": "gcc/expr.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=97891c11e32537dfd2e4a4db1ca8d3eb541cf8aa", "patch": "@@ -346,6 +346,7 @@ extern void copy_blkmode_from_reg (rtx, rtx, tree);\n /* Mark REG as holding a parameter for the next CALL_INSN.\n    Mode is TYPE_MODE of the non-promoted parameter, or VOIDmode.  */\n extern void use_reg_mode (rtx *, rtx, enum machine_mode);\n+extern void clobber_reg_mode (rtx *, rtx, enum machine_mode);\n \n extern rtx copy_blkmode_to_reg (enum machine_mode, tree);\n \n@@ -356,6 +357,13 @@ use_reg (rtx *fusage, rtx reg)\n   use_reg_mode (fusage, reg, VOIDmode);\n }\n \n+/* Mark REG as clobbered by the call with FUSAGE as CALL_INSN_FUNCTION_USAGE.  */\n+static inline void\n+clobber_reg (rtx *fusage, rtx reg)\n+{\n+  clobber_reg_mode (fusage, reg, VOIDmode);\n+}\n+\n /* Mark NREGS consecutive regs, starting at REGNO, as holding parameters\n    for the next CALL_INSN.  */\n extern void use_regs (rtx *, int, int);"}]}