{"sha": "ce2e5191bc52312239c22129e84e0b97ab00994f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyZTUxOTFiYzUyMzEyMjM5YzIyMTI5ZTg0ZTBiOTdhYjAwOTk0Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-10-05T08:31:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-10-05T08:31:15Z"}, "message": "pt.c (tsubst_expr, [...]): Don't process if tsubsting fails.\n\n\t* pt.c (tsubst_expr, DECL_STMT case): Don't process if\n\ttsubsting fails.\n\nFrom-SVN: r36720", "tree": {"sha": "0d96c6d8f519c8b7e450b7d0d5d3d508a9c35710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d96c6d8f519c8b7e450b7d0d5d3d508a9c35710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce2e5191bc52312239c22129e84e0b97ab00994f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2e5191bc52312239c22129e84e0b97ab00994f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2e5191bc52312239c22129e84e0b97ab00994f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2e5191bc52312239c22129e84e0b97ab00994f/comments", "author": null, "committer": null, "parents": [{"sha": "79cc53125a0050fdd2390f2fd53e949e80fbfe1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cc53125a0050fdd2390f2fd53e949e80fbfe1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cc53125a0050fdd2390f2fd53e949e80fbfe1b"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "960f17d03098ccdf88309f69f34715710e361b45", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2e5191bc52312239c22129e84e0b97ab00994f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2e5191bc52312239c22129e84e0b97ab00994f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce2e5191bc52312239c22129e84e0b97ab00994f", "patch": "@@ -1,3 +1,8 @@\n+2000-10-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (tsubst_expr, DECL_STMT case): Don't process if\n+\ttsubsting fails.\t\n+\n 2000-10-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* spew.c (frob_id): New static function."}, {"sha": "171250e5757c46f7ba5a90b8f39f0a49ec6e4e36", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2e5191bc52312239c22129e84e0b97ab00994f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2e5191bc52312239c22129e84e0b97ab00994f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ce2e5191bc52312239c22129e84e0b97ab00994f", "patch": "@@ -7145,17 +7145,20 @@ tsubst_expr (t, args, complain, in_decl)\n \t    init = DECL_INITIAL (decl);\n \t    decl = tsubst (decl, args, complain, in_decl);\n \t    init = tsubst_expr (init, args, complain, in_decl);\n-\t    if (init)\n-\t      DECL_INITIAL (decl) = error_mark_node;\n-\t    /* By marking the declaration as instantiated, we avoid\n-\t       trying to instantiate it.  Since instantiate_decl can't\n-\t       handle local variables, and since we've already done\n-\t       all that needs to be done, that's the right thing to\n-\t       do.  */\n-\t    if (TREE_CODE (decl) == VAR_DECL)\n-\t      DECL_TEMPLATE_INSTANTIATED (decl) = 1;\n-\t    maybe_push_decl (decl);\n-\t    cp_finish_decl (decl, init, NULL_TREE, 0);\n+\t    if (decl != error_mark_node)\n+\t      {\n+\t        if (init)\n+\t          DECL_INITIAL (decl) = error_mark_node;\n+\t        /* By marking the declaration as instantiated, we avoid\n+\t           trying to instantiate it.  Since instantiate_decl can't\n+\t           handle local variables, and since we've already done\n+\t           all that needs to be done, that's the right thing to\n+\t           do.  */\n+\t        if (TREE_CODE (decl) == VAR_DECL)\n+\t          DECL_TEMPLATE_INSTANTIATED (decl) = 1;\n+\t        maybe_push_decl (decl);\n+\t        cp_finish_decl (decl, init, NULL_TREE, 0);\n+\t      }\n \t  }\n \treturn decl;\n       }"}]}