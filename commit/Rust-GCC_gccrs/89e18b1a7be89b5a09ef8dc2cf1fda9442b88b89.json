{"sha": "89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllMThiMWE3YmU4OWI1YTA5ZWY4ZGMyY2YxZmRhOTQ0MmI4OGI4OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-08-11T13:06:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-08-11T13:06:43Z"}, "message": "tree-sra.c (build_access_from_expr_1): Use more precise diagnostics for storage order barriers.\n\n\t* tree-sra.c (build_access_from_expr_1): Use more precise diagnostics\n\tfor storage order barriers.\n\nFrom-SVN: r251050", "tree": {"sha": "bf79a31ab918c22330a2c8995f0e9b84c5debf89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf79a31ab918c22330a2c8995f0e9b84c5debf89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89/comments", "author": null, "committer": null, "parents": [{"sha": "fe8a99d8cdcfacf14b603b99a7730d18ce0ccd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8a99d8cdcfacf14b603b99a7730d18ce0ccd1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8a99d8cdcfacf14b603b99a7730d18ce0ccd1f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "94fb7f805aaf804d6e7563054593dcb72a0f214c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "patch": "@@ -1,3 +1,8 @@\n+2017-08-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-sra.c (build_access_from_expr_1): Use more precise diagnostics\n+\tfor storage order barriers.\n+\n 2017-08-11  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-opt/79987"}, {"sha": "68edbce21b327589ddc8098a5f956f7f74ca77f1", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=89e18b1a7be89b5a09ef8dc2cf1fda9442b88b89", "patch": "@@ -1175,11 +1175,17 @@ build_access_from_expr_1 (tree expr, gimple *stmt, bool write)\n   else\n     partial_ref = false;\n \n+  if (storage_order_barrier_p (expr))\n+    {\n+      disqualify_base_of_expr (expr, \"storage order barrier.\");\n+      return NULL;\n+    }\n+\n   /* We need to dive through V_C_Es in order to get the size of its parameter\n      and not the result type.  Ada produces such statements.  We are also\n      capable of handling the topmost V_C_E but not any of those buried in other\n      handled components.  */\n-  if (TREE_CODE (expr) == VIEW_CONVERT_EXPR && !storage_order_barrier_p (expr))\n+  if (TREE_CODE (expr) == VIEW_CONVERT_EXPR)\n     expr = TREE_OPERAND (expr, 0);\n \n   if (contains_view_convert_expr_p (expr))"}]}