{"sha": "439f6027934708fe7ca592aba8db78dbdd698614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM5ZjYwMjc5MzQ3MDhmZTdjYTU5MmFiYThkYjc4ZGJkZDY5ODYxNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-19T15:09:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-19T15:09:34Z"}, "message": "(build_compound_expr): Use non_lvalue if value is 0.\n\nFrom-SVN: r3277", "tree": {"sha": "fe393e99fccf86aadb07c9e093855d8fd4017112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe393e99fccf86aadb07c9e093855d8fd4017112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/439f6027934708fe7ca592aba8db78dbdd698614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439f6027934708fe7ca592aba8db78dbdd698614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/439f6027934708fe7ca592aba8db78dbdd698614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439f6027934708fe7ca592aba8db78dbdd698614/comments", "author": null, "committer": null, "parents": [{"sha": "d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "d1f49a78804f878c18b9749134821cb36cb05d46", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/439f6027934708fe7ca592aba8db78dbdd698614/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/439f6027934708fe7ca592aba8db78dbdd698614/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=439f6027934708fe7ca592aba8db78dbdd698614", "patch": "@@ -3645,7 +3645,10 @@ build_compound_expr (list)\n \tlist = TREE_OPERAND (list, 0);\n #endif\n \n-\treturn TREE_VALUE (list);\n+      /* Don't let (0, 0) be null pointer constant.  */\n+      if (integer_zerop (TREE_VALUE (list)))\n+\treturn non_lvalue (TREE_VALUE (list));\n+      return TREE_VALUE (list);\n     }\n \n   if (TREE_CHAIN (list) != 0 && TREE_CHAIN (TREE_CHAIN (list)) == 0)"}]}