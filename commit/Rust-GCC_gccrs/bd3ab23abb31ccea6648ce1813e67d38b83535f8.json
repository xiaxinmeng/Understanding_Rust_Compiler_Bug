{"sha": "bd3ab23abb31ccea6648ce1813e67d38b83535f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQzYWIyM2FiYjMxY2NlYTY2NDhjZTE4MTNlNjdkMzhiODM1MzVmOA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2002-01-09T03:27:30Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2002-01-09T03:27:30Z"}, "message": "* config/c4x/c4x/md: Remove extraneous constraints from define_splits.\n\nFrom-SVN: r48670", "tree": {"sha": "7393961ce71f2090d0cc2960e400122fa9478903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7393961ce71f2090d0cc2960e400122fa9478903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd3ab23abb31ccea6648ce1813e67d38b83535f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3ab23abb31ccea6648ce1813e67d38b83535f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd3ab23abb31ccea6648ce1813e67d38b83535f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3ab23abb31ccea6648ce1813e67d38b83535f8/comments", "author": null, "committer": null, "parents": [{"sha": "21e16bd6bb7a838a70cad9f4f4c3f0fbdf824052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e16bd6bb7a838a70cad9f4f4c3f0fbdf824052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e16bd6bb7a838a70cad9f4f4c3f0fbdf824052"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "86dd6d6132707bc66ed9ad3daea91a1caf793aa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd3ab23abb31ccea6648ce1813e67d38b83535f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd3ab23abb31ccea6648ce1813e67d38b83535f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd3ab23abb31ccea6648ce1813e67d38b83535f8", "patch": "@@ -1,3 +1,7 @@\n+2002-01-09  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x/md: Remove extraneous constraints from define_splits.\n+\n 2002-01-08  Richard Henderson  <rth@redhat.com>\n \n \t* regrename.c (copy_value): Ignore overlapping copies."}, {"sha": "c365489aa9dcb6adfceeeaabbcdb4067c0bd986b", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd3ab23abb31ccea6648ce1813e67d38b83535f8/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd3ab23abb31ccea6648ce1813e67d38b83535f8/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=bd3ab23abb31ccea6648ce1813e67d38b83535f8", "patch": "@@ -3420,8 +3420,8 @@\n \n ; This can generate invalid stack slot displacements\n (define_split\n- [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] 12))]\n+ [(set (match_operand:QI 0 \"reg_operand\" \"\")\n+       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] 12))]\n   \"reload_completed\"\n   [(set (match_dup 3) (match_dup 1))\n    (set (match_dup 0) (match_dup 2))]\n@@ -3438,8 +3438,8 @@\n   [(set_attr \"type\" \"multi\")])\n \n (define_split\n- [(parallel [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] 12))\n+ [(parallel [(set (match_operand:QI 0 \"reg_operand\" \"\")\n+                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] 12))\n              (clobber (reg:CC 21))])]\n   \"reload_completed\"\n   [(set (mem:QF (pre_inc:QI (reg:QI 20)))\n@@ -3473,8 +3473,8 @@\n \n ; This can generate invalid stack slot displacements\n (define_split\n- [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] 11))]\n+ [(set (match_operand:QF 0 \"reg_operand\" \"\")\n+       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] 11))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (match_dup 3))]\n@@ -3491,8 +3491,8 @@\n   [(set_attr \"type\" \"multi\")])\n \n (define_split\n- [(parallel [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] 11))\n+ [(parallel [(set (match_operand:QF 0 \"reg_operand\" \"\")\n+                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] 11))\n              (clobber (reg:CC 21))])]\n   \"reload_completed\"\n   [(set (mem:QI (pre_inc:QI (reg:QI 20)))\n@@ -6428,8 +6428,8 @@\n   [(set_attr \"type\" \"multi\")])\n \n (define_split\n-  [(set (match_operand:HI 0 \"reg_operand\" \"=?dc\")\n-        (sign_extend:HI (match_operand:QI 1 \"src_operand\" \"rIm\")))\n+  [(set (match_operand:HI 0 \"reg_operand\" \"\")\n+        (sign_extend:HI (match_operand:QI 1 \"src_operand\" \"\")))\n    (clobber (reg:CC 21))]\n   \"reload_completed && TARGET_C3X\"\n   [(set (match_dup 2) (match_dup 1))\n@@ -6440,8 +6440,8 @@\n    operands[3] = c4x_operand_subword (operands[0], 1, 0, HImode);\")\n \n (define_split\n-  [(set (match_operand:HI 0 \"reg_operand\" \"=?dc\")\n-        (sign_extend:HI (match_operand:QI 1 \"src_operand\" \"rIm\")))\n+  [(set (match_operand:HI 0 \"reg_operand\" \"\")\n+        (sign_extend:HI (match_operand:QI 1 \"src_operand\" \"\")))\n    (clobber (reg:CC 21))]\n   \"reload_completed && ! TARGET_C3X\"\n   [(set (match_dup 2) (match_dup 1))\n@@ -6461,8 +6461,8 @@\n ; If operand0 and operand1 are the same register we don't need\n ; the first set.\n (define_split\n-  [(set (match_operand:HI 0 \"reg_operand\" \"=?dc\")\n-        (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"rIm\")))\n+  [(set (match_operand:HI 0 \"reg_operand\" \"\")\n+        (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"\")))\n    (clobber (reg:CC 21))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 1))"}]}