{"sha": "a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmZmU5YjZmNGQwZTJkZDk0OTNjNWJkNjY5ZmM1YTJlYTI0YTZmOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-01T15:40:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-01T15:49:31Z"}, "message": "libstdc++: Fix incorrect Docbook links\n\nThe <xref> element creates the link text automatically from the link\ntarget, rather than using the text node child of the element. This can\nbe changed by using an endterm attribute, but it's simpler to just use\nthe <link> element instead.\n\n\t* doc/xml/manual/containers.xml: Replace <xref> with <link>.\n\t* doc/xml/manual/evolution.xml: Likewise.\n\t* doc/html/manual/api.html: Regenerate.\n\t* doc/html/manual/containers.html: Regenerate.", "tree": {"sha": "a6d0a983040e0d0bc233040aa64e171915eef824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6d0a983040e0d0bc233040aa64e171915eef824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "261e7493d419426b4523df2135c95970f9f421d3", "filename": "libstdc++-v3/doc/html/manual/api.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html?ref=a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "patch": "@@ -298,7 +298,8 @@\n   Support for mathematical special functions (ISO/IEC 29124:2010) added.\n </p><p>\n   Assertions to check function preconditions can be enabled by defining the\n-  <a class=\"xref\" href=\"using_macros.html\" title=\"Macros\">Macros</a>.\n+  <a class=\"link\" href=\"using_macros.html\" title=\"Macros\"><span class=\"symbol\">_GLIBCXX_ASSERTIONS</span>\n+  macro</a>.\n   The initial set of assertions are a subset of the checks enabled by\n   the Debug Mode, but without the ABI changes and changes to algorithmic\n   complexity that are caused by enabling the full Debug Mode."}, {"sha": "7035a949074d9411cda55dd4851826e2ba6e5313", "filename": "libstdc++-v3/doc/html/manual/containers.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fcontainers.html?ref=a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "patch": "@@ -8,7 +8,8 @@\n   Containers\n   <a id=\"id-1.3.4.7.1.1.1\" class=\"indexterm\"></a>\n </h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"containers.html#std.containers.sequences\">Sequences</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"containers.html#containers.sequences.list\">list</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"containers.html#sequences.list.size\">list::size() is O(n)</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"associative.html\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"associative.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"section\"><a href=\"associative.html#containers.associative.bitset\">bitset</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"associative.html#associative.bitset.size_variable\">Size Variable</a></span></dt><dt><span class=\"section\"><a href=\"associative.html#associative.bitset.type_string\">Type String</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"unordered_associative.html\">Unordered Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"unordered_associative.html#containers.unordered.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"section\"><a href=\"unordered_associative.html#containers.unordered.hash\">Hash Code</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"unordered_associative.html#containers.unordered.cache\">Hash Code Caching Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"containers_and_c.html\">Interacting with C</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"containers_and_c.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></dd></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.containers.sequences\"></a>Sequences</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"containers.sequences.list\"></a>list</h3></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"sequences.list.size\"></a>list::size() is O(n)</h4></div></div></div><p>\n-     Yes it is, at least using the <a class=\"xref\" href=\"using_dual_abi.html\" title=\"Dual ABI\">Dual ABI</a>, and that's okay.  This is a decision that we preserved\n+     Yes it is, at least using the <a class=\"link\" href=\"using_dual_abi.html\" title=\"Dual ABI\">old\n+     ABI</a>, and that's okay.  This is a decision that we preserved\n      when we imported SGI's STL implementation.  The following is\n      quoted from <a class=\"link\" href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/FAQ.html\" target=\"_top\">their FAQ</a>:\n    </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>"}, {"sha": "6d568164b4730bcb4e991dd7ca47c83ed4a7f6cb", "filename": "libstdc++-v3/doc/xml/manual/containers.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml?ref=a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "patch": "@@ -25,8 +25,8 @@\n   <section xml:id=\"sequences.list.size\" xreflabel=\"list::size() is O(n)\"><info><title>list::size() is O(n)</title></info>\n     \n    <para>\n-     Yes it is, at least using the <xref linkend=\"manual.intro.using.abi\">old\n-     ABI</xref>, and that's okay.  This is a decision that we preserved\n+     Yes it is, at least using the <link linkend=\"manual.intro.using.abi\">old\n+     ABI</link>, and that's okay.  This is a decision that we preserved\n      when we imported SGI's STL implementation.  The following is\n      quoted from <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/FAQ.html\">their FAQ</link>:\n    </para>"}, {"sha": "ab04c1ad2724afb4b9a69710035013e4018e17f4", "filename": "libstdc++-v3/doc/xml/manual/evolution.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml?ref=a1ffe9b6f4d0e2dd9493c5bd669fc5a2ea24a6f9", "patch": "@@ -784,8 +784,8 @@ now defaults to zero.\n \n <para>\n   Assertions to check function preconditions can be enabled by defining the\n-  <xref linkend=\"manual.intro.using.macros\"><symbol>_GLIBCXX_ASSERTIONS</symbol>\n-  macro</xref>.\n+  <link linkend=\"manual.intro.using.macros\"><symbol>_GLIBCXX_ASSERTIONS</symbol>\n+  macro</link>.\n   The initial set of assertions are a subset of the checks enabled by\n   the Debug Mode, but without the ABI changes and changes to algorithmic\n   complexity that are caused by enabling the full Debug Mode."}]}