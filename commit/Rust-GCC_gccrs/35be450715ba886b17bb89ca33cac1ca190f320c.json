{"sha": "35be450715ba886b17bb89ca33cac1ca190f320c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzViZTQ1MDcxNWJhODg2YjE3YmI4OWNhMzNjYWMxY2ExOTBmMzIwYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:30:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:30:29Z"}, "message": "(init_reload): Don't initialize optabs here.\n\nFrom-SVN: r3926", "tree": {"sha": "42d9fc43eaa6f6d2a6e1d14e2f9b0cbabdaac5ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42d9fc43eaa6f6d2a6e1d14e2f9b0cbabdaac5ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35be450715ba886b17bb89ca33cac1ca190f320c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35be450715ba886b17bb89ca33cac1ca190f320c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35be450715ba886b17bb89ca33cac1ca190f320c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35be450715ba886b17bb89ca33cac1ca190f320c/comments", "author": null, "committer": null, "parents": [{"sha": "5d81dc5b888a4be79878b359cb29694c28c12e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d81dc5b888a4be79878b359cb29694c28c12e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d81dc5b888a4be79878b359cb29694c28c12e3e"}], "stats": {"total": 100, "additions": 0, "deletions": 100}, "files": [{"sha": "000b55b0fc56f753d41cb5335db7f947823e2a15", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35be450715ba886b17bb89ca33cac1ca190f320c/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35be450715ba886b17bb89ca33cac1ca190f320c/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=35be450715ba886b17bb89ca33cac1ca190f320c", "patch": "@@ -404,106 +404,6 @@ init_reload ()\n   /* Initialize obstack for our rtl allocation. */\n   gcc_obstack_init (&reload_obstack);\n   reload_firstobj = (char *) obstack_alloc (&reload_obstack, 0);\n-\n-#ifdef HAVE_SECONDARY_RELOADS\n-\n-  /* Initialize the optabs for doing special input and output reloads.  */\n-\n-  for (i = 0; i < NUM_MACHINE_MODES; i++)\n-    reload_in_optab[i] = reload_out_optab[i] = CODE_FOR_nothing;\n-\n-#ifdef HAVE_reload_inqi\n-  if (HAVE_reload_inqi)\n-    reload_in_optab[(int) QImode] = CODE_FOR_reload_inqi;\n-#endif\n-#ifdef HAVE_reload_inhi\n-  if (HAVE_reload_inhi)\n-    reload_in_optab[(int) HImode] = CODE_FOR_reload_inhi;\n-#endif\n-#ifdef HAVE_reload_insi\n-  if (HAVE_reload_insi)\n-    reload_in_optab[(int) SImode] = CODE_FOR_reload_insi;\n-#endif\n-#ifdef HAVE_reload_indi\n-  if (HAVE_reload_indi)\n-    reload_in_optab[(int) DImode] = CODE_FOR_reload_indi;\n-#endif\n-#ifdef HAVE_reload_inti\n-  if (HAVE_reload_inti)\n-    reload_in_optab[(int) TImode] = CODE_FOR_reload_inti;\n-#endif\n-#ifdef HAVE_reload_inqf\n-  if (HAVE_reload_inqf)\n-    reload_in_optab[(int) QFmode] = CODE_FOR_reload_inqf;\n-#endif\n-#ifdef HAVE_reload_inhf\n-  if (HAVE_reload_inhf)\n-    reload_in_optab[(int) HFmode] = CODE_FOR_reload_inhf;\n-#endif\n-#ifdef HAVE_reload_insf\n-  if (HAVE_reload_insf)\n-    reload_in_optab[(int) SFmode] = CODE_FOR_reload_insf;\n-#endif\n-#ifdef HAVE_reload_indf\n-  if (HAVE_reload_indf)\n-    reload_in_optab[(int) DFmode] = CODE_FOR_reload_indf;\n-#endif\n-#ifdef HAVE_reload_inxf\n-  if (HAVE_reload_inxf)\n-    reload_in_optab[(int) XFmode] = CODE_FOR_reload_inxf;\n-#endif\n-#ifdef HAVE_reload_intf\n-  if (HAVE_reload_intf)\n-    reload_in_optab[(int) TFmode] = CODE_FOR_reload_intf;\n-#endif\n-\n-#ifdef HAVE_reload_outqi\n-  if (HAVE_reload_outqi)\n-    reload_out_optab[(int) QImode] = CODE_FOR_reload_outqi;\n-#endif\n-#ifdef HAVE_reload_outhi\n-  if (HAVE_reload_outhi)\n-    reload_out_optab[(int) HImode] = CODE_FOR_reload_outhi;\n-#endif\n-#ifdef HAVE_reload_outsi\n-  if (HAVE_reload_outsi)\n-    reload_out_optab[(int) SImode] = CODE_FOR_reload_outsi;\n-#endif\n-#ifdef HAVE_reload_outdi\n-  if (HAVE_reload_outdi)\n-    reload_out_optab[(int) DImode] = CODE_FOR_reload_outdi;\n-#endif\n-#ifdef HAVE_reload_outti\n-  if (HAVE_reload_outti)\n-    reload_out_optab[(int) TImode] = CODE_FOR_reload_outti;\n-#endif\n-#ifdef HAVE_reload_outqf\n-  if (HAVE_reload_outqf)\n-    reload_out_optab[(int) QFmode] = CODE_FOR_reload_outqf;\n-#endif\n-#ifdef HAVE_reload_outhf\n-  if (HAVE_reload_outhf)\n-    reload_out_optab[(int) HFmode] = CODE_FOR_reload_outhf;\n-#endif\n-#ifdef HAVE_reload_outsf\n-  if (HAVE_reload_outsf)\n-    reload_out_optab[(int) SFmode] = CODE_FOR_reload_outsf;\n-#endif\n-#ifdef HAVE_reload_outdf\n-  if (HAVE_reload_outdf)\n-    reload_out_optab[(int) DFmode] = CODE_FOR_reload_outdf;\n-#endif\n-#ifdef HAVE_reload_outxf\n-  if (HAVE_reload_outxf)\n-    reload_out_optab[(int) XFmode] = CODE_FOR_reload_outxf;\n-#endif\n-#ifdef HAVE_reload_outtf\n-  if (HAVE_reload_outtf)\n-    reload_out_optab[(int) TFmode] = CODE_FOR_reload_outtf;\n-#endif\n-\n-#endif /* HAVE_SECONDARY_RELOADS */\n-\n }\n \n /* Main entry point for the reload pass."}]}