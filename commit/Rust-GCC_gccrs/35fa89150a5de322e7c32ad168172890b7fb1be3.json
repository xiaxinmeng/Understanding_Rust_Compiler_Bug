{"sha": "35fa89150a5de322e7c32ad168172890b7fb1be3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmYTg5MTUwYTVkZTMyMmU3YzMyYWQxNjgxNzI4OTBiN2ZiMWJlMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-06-21T21:27:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-06-21T21:27:19Z"}, "message": "re PR middle-end/28034 (section anchors break -fprofile-generate)\n\ngcc/\n\tPR middle-end/28034\n\t* coverage.c (coverage_counter_alloc): Leave the index type\n\tunspecified.\n\t(coverage_counter_alloc): Use null arguments for operands 2 and 3\n\tof the ARRAY_REF.\n\nFrom-SVN: r114870", "tree": {"sha": "5598b612246324c2682be76de3b7a9de31ea1f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5598b612246324c2682be76de3b7a9de31ea1f9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35fa89150a5de322e7c32ad168172890b7fb1be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fa89150a5de322e7c32ad168172890b7fb1be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fa89150a5de322e7c32ad168172890b7fb1be3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fa89150a5de322e7c32ad168172890b7fb1be3/comments", "author": null, "committer": null, "parents": [{"sha": "7691d0d3c9d60eb732e71be4c7a100ef2bb2ef82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7691d0d3c9d60eb732e71be4c7a100ef2bb2ef82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7691d0d3c9d60eb732e71be4c7a100ef2bb2ef82"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "b8cd0420f788196a58c5c7fbc3fa825d595068d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa89150a5de322e7c32ad168172890b7fb1be3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa89150a5de322e7c32ad168172890b7fb1be3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35fa89150a5de322e7c32ad168172890b7fb1be3", "patch": "@@ -1,3 +1,11 @@\n+2006-06-21  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tPR middle-end/28034\n+\t* coverage.c (coverage_counter_alloc): Leave the index type\n+\tunspecified.\n+\t(coverage_counter_alloc): Use null arguments for operands 2 and 3\n+\tof the ARRAY_REF.\n+\n 2006-06-21  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* doc/invoke.texi (-fopenmp) Move to \"Options Controlling C Dialect\""}, {"sha": "5eaf4888fe3e2827da31fbf90d567d5530813f0e", "filename": "gcc/coverage.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa89150a5de322e7c32ad168172890b7fb1be3/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa89150a5de322e7c32ad168172890b7fb1be3/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=35fa89150a5de322e7c32ad168172890b7fb1be3", "patch": "@@ -388,15 +388,13 @@ coverage_counter_alloc (unsigned counter, unsigned num)\n \n   if (!tree_ctr_tables[counter])\n     {\n-      /* Generate and save a copy of this so it can be shared.  */\n-      /* We don't know the size yet; make it big enough that nobody\n-\t will make any clever transformation on it.  */\n+      /* Generate and save a copy of this so it can be shared.  Leave\n+\t the index type unspecified for now; it will be set after all\n+\t functions have been compiled.  */\n       char buf[20];\n       tree gcov_type_node = get_gcov_type ();\n-      tree domain_tree\n-        = build_index_type (build_int_cst (NULL_TREE, 1000)); /* replaced later */\n       tree gcov_type_array_type\n-        = build_array_type (gcov_type_node, domain_tree);\n+        = build_array_type (gcov_type_node, NULL_TREE);\n       tree_ctr_tables[counter]\n         = build_decl (VAR_DECL, NULL_TREE, gcov_type_array_type);\n       TREE_STATIC (tree_ctr_tables[counter]) = 1;\n@@ -416,18 +414,13 @@ tree\n tree_coverage_counter_ref (unsigned counter, unsigned no)\n {\n   tree gcov_type_node = get_gcov_type ();\n-  tree domain_type = TYPE_DOMAIN (TREE_TYPE (tree_ctr_tables[counter]));\n \n   gcc_assert (no < fn_n_ctrs[counter] - fn_b_ctrs[counter]);\n   no += prg_n_ctrs[counter] + fn_b_ctrs[counter];\n \n   /* \"no\" here is an array index, scaled to bytes later.  */\n   return build4 (ARRAY_REF, gcov_type_node, tree_ctr_tables[counter],\n-\t\t fold_convert (domain_type,\n-\t\t\t       build_int_cst (NULL_TREE, no)),\n-\t\t TYPE_MIN_VALUE (domain_type),\n-\t\t size_binop (EXACT_DIV_EXPR, TYPE_SIZE_UNIT (gcov_type_node),\n-\t\t\t     size_int (TYPE_ALIGN_UNIT (gcov_type_node))));\n+\t\t build_int_cst (NULL_TREE, no), NULL, NULL);\n }\n \f\n /* Generate a checksum for a string.  CHKSUM is the current"}]}