{"sha": "c5589aa7e1e8bf1e56d3c46d952675e1087be311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU1ODlhYTdlMWU4YmYxZTU2ZDNjNDZkOTUyNjc1ZTEwODdiZTMxMQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2010-11-27T10:04:19Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2010-11-27T10:04:19Z"}, "message": "bitset (bitset<>::reference): Clean code, use normal reference type in experimental mode.\n\n2010-11-27  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n\n        * include/debug/bitset (bitset<>::reference): Clean code, use normal \n        reference type in experimental mode.\n        * testsuite/23_containers/bitset/debug/invalid/1.cc: Fix for\n        experimental mode.\n\nFrom-SVN: r167196", "tree": {"sha": "51c9f16d83787e6b8995211fdf3bf0b6897df020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51c9f16d83787e6b8995211fdf3bf0b6897df020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5589aa7e1e8bf1e56d3c46d952675e1087be311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5589aa7e1e8bf1e56d3c46d952675e1087be311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5589aa7e1e8bf1e56d3c46d952675e1087be311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5589aa7e1e8bf1e56d3c46d952675e1087be311/comments", "author": null, "committer": null, "parents": [{"sha": "a693d3a8f55ffcf432401f5890fa1a55fc86eaf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a693d3a8f55ffcf432401f5890fa1a55fc86eaf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a693d3a8f55ffcf432401f5890fa1a55fc86eaf1"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "c8318c6262e3c3b433652032a3683e162fc5be94", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c5589aa7e1e8bf1e56d3c46d952675e1087be311", "patch": "@@ -1,3 +1,10 @@\n+2010-11-27  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+\t* include/debug/bitset (bitset<>::reference): Clean code, use normal\n+\treference type in experimental mode.\n+\t* testsuite/23_containers/bitset/debug/invalid/1.cc: Fix for\n+\texperimental mode.\n+\n 2010-11-26  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n \n \t* testsuite/lib/libstdc++.exp ([check_v3_target_debug_mode]): Use"}, {"sha": "340bf1e9e1b24638fdd3d945b38c8b7a35260369", "filename": "libstdc++-v3/include/debug/bitset", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset?ref=c5589aa7e1e8bf1e56d3c46d952675e1087be311", "patch": "@@ -49,12 +49,16 @@ namespace __debug\n       typedef _GLIBCXX_STD_D::bitset<_Nb> _Base;\n \n     public:\n+      // In C++0x we rely on normal reference type to preserve the property\n+      // of bitset to be use as a literal.\n+      // TODO: Find an other solution.\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      typedef typename _Base::reference reference;\n+#else\n       // bit reference:\n       class reference\n       : private _Base::reference\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n         , public __gnu_debug::_Safe_iterator_base\n-#endif\n       {\n \ttypedef typename _Base::reference _Base_ref;\n \n@@ -64,79 +68,66 @@ namespace __debug\n \treference(const _Base_ref& __base,\n \t\t  bitset* __seq __attribute__((__unused__)))\n \t: _Base_ref(__base)\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t, _Safe_iterator_base(__seq, false)\n-#endif\n \t{ }\n \n       public:\n \treference(const reference& __x)\n \t: _Base_ref(__x)\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t, _Safe_iterator_base(__x, false)\n-#endif\n \t{ }\n \n \treference&\n \toperator=(bool __x)\n \t{\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  _GLIBCXX_DEBUG_VERIFY(! this->_M_singular(),\n \t\t\t      _M_message(__gnu_debug::__msg_bad_bitset_write)\n \t\t\t\t._M_iterator(*this));\n-#endif\n \t  *static_cast<_Base_ref*>(this) = __x;\n \t  return *this;\n \t}\n \n \treference&\n \toperator=(const reference& __x)\n \t{\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  _GLIBCXX_DEBUG_VERIFY(! __x._M_singular(),\n \t\t\t       _M_message(__gnu_debug::__msg_bad_bitset_read)\n \t\t\t\t._M_iterator(__x));\n \t  _GLIBCXX_DEBUG_VERIFY(! this->_M_singular(),\n \t\t\t      _M_message(__gnu_debug::__msg_bad_bitset_write)\n \t\t\t\t._M_iterator(*this));\n-#endif\n \t  *static_cast<_Base_ref*>(this) = __x;\n \t  return *this;\n \t}\n \n \tbool\n \toperator~() const\n \t{\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  _GLIBCXX_DEBUG_VERIFY(! this->_M_singular(),\n \t\t\t       _M_message(__gnu_debug::__msg_bad_bitset_read)\n \t\t\t\t._M_iterator(*this));\n-#endif\n \t  return ~(*static_cast<const _Base_ref*>(this));\n \t}\n \n \toperator bool() const\n \t{\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  _GLIBCXX_DEBUG_VERIFY(! this->_M_singular(),\n \t\t\t      _M_message(__gnu_debug::__msg_bad_bitset_read)\n \t\t\t\t._M_iterator(*this));\n-#endif\n \t  return *static_cast<const _Base_ref*>(this);\n \t}\n \n \treference&\n \tflip()\n \t{\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  _GLIBCXX_DEBUG_VERIFY(! this->_M_singular(),\n \t\t\t      _M_message(__gnu_debug::__msg_bad_bitset_flip)\n \t\t\t\t._M_iterator(*this));\n-#endif\n \t  _Base_ref::flip();\n \t  return *this;\n \t}\n       };\n+#endif\n \n       // 23.3.5.1 constructors:\n       _GLIBCXX_CONSTEXPR bitset() : _Base() { }\n@@ -269,7 +260,11 @@ namespace __debug\n       operator[](size_t __pos)\n       {\n \t__glibcxx_check_subscript(__pos);\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\treturn _M_base()[__pos];\n+#else\n \treturn reference(_M_base()[__pos], this);\n+#endif\n       }\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS"}, {"sha": "5959d5fffc5638de879773c7ee0f67d3013a7df1", "filename": "libstdc++-v3/testsuite/23_containers/bitset/debug/invalidation/1.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fdebug%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5589aa7e1e8bf1e56d3c46d952675e1087be311/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fdebug%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fdebug%2Finvalidation%2F1.cc?ref=c5589aa7e1e8bf1e56d3c46d952675e1087be311", "patch": "@@ -34,7 +34,9 @@ void test01()\n     i = new bitset<32>::reference(bs[7]);\n     VERIFY(*i);\n   }\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n   VERIFY(i->_M_singular());\n+#endif\n   delete i;\n }\n "}]}