{"sha": "d6ff22074126d38829f25981de9d6940cd2a234c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZmZjIyMDc0MTI2ZDM4ODI5ZjI1OTgxZGU5ZDY5NDBjZDJhMjM0Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-24T14:19:01Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-26T15:01:51Z"}, "message": "c++: Fix ICE with constexpr init and [[no_unique_address]] [PR93803]\n\nHere we crash when constexpr-initializing a class member of empty class\ntype with [[no_unique_address]].  Without the attribute we would have\na ctor (that initializes bar) of the form\n\n  { .D.2173 = { .x = {} } }\n\nbut with the attribute reduced_constant_expression_p gets\n\n  { .x = {} }\n\nThat means that \"idx != field\" is true for the latter and we see that\nfoo, the base class of bar, is an empty class, so we want to look at\nthe next initializable field (since empty class fields may not have an\ninitializer).  But in this case there are no more, therefore accessing\nDECL_CHAIN (field) crashes.  Long story short, we need to avoid a crash\non a null field when we're initializing a class that only contains an\nempty base class.\n\nWhile poking into this I discovered c++/93898, but that's a different\nproblem.\n\n2020-02-26  Marek Polacek  <polacek@redhat.com>\n\n\tPR c++/93803 - ICE with constexpr init and [[no_unique_address]].\n\t* constexpr.c (reduced_constant_expression_p): Don't crash on a null\n\tfield.\n\n\t* g++.dg/cpp2a/constexpr-init16.C: New test.\n\t* g++.dg/cpp2a/constexpr-init17.C: New test.", "tree": {"sha": "3667d1402d01145c09dccff8621a14b750f25fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3667d1402d01145c09dccff8621a14b750f25fd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6ff22074126d38829f25981de9d6940cd2a234c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ff22074126d38829f25981de9d6940cd2a234c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ff22074126d38829f25981de9d6940cd2a234c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ff22074126d38829f25981de9d6940cd2a234c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759bd406a2b900dd323571c3855a64f885e6b3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759bd406a2b900dd323571c3855a64f885e6b3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759bd406a2b900dd323571c3855a64f885e6b3b7"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "14894533f9b7e12b1541eb6f7147ce9d0b326188", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d6ff22074126d38829f25981de9d6940cd2a234c", "patch": "@@ -1,3 +1,9 @@\n+2020-02-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93803 - ICE with constexpr init and [[no_unique_address]].\n+\t* constexpr.c (reduced_constant_expression_p): Don't crash on a null\n+\tfield.\n+\n 2020-02-24  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/93804"}, {"sha": "3da1609cdaa968522e471e9f8bb37675f2070e41", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=d6ff22074126d38829f25981de9d6940cd2a234c", "patch": "@@ -2603,16 +2603,14 @@ reduced_constant_expression_p (tree t)\n \t     element.  */\n \t  if (!reduced_constant_expression_p (val))\n \t    return false;\n+\t  /* Empty class field may or may not have an initializer.  */\n+\t  for (; field && idx != field;\n+\t       field = next_initializable_field (DECL_CHAIN (field)))\n+\t    if (!is_really_empty_class (TREE_TYPE (field),\n+\t\t\t\t\t/*ignore_vptr*/false))\n+\t      return false;\n \t  if (field)\n-\t    {\n-\t      /* Empty class field may or may not have an initializer.  */\n-\t      for (; idx != field;\n-\t\t   field = next_initializable_field (DECL_CHAIN (field)))\n-\t\tif (!is_really_empty_class (TREE_TYPE (field),\n-\t\t\t\t\t    /*ignore_vptr*/false))\n-\t\t  return false;\n-\t      field = next_initializable_field (DECL_CHAIN (field));\n-\t    }\n+\t    field = next_initializable_field (DECL_CHAIN (field));\n \t}\n       /* There could be a non-empty field at the end.  */\n       for (; field; field = next_initializable_field (DECL_CHAIN (field)))"}, {"sha": "4f46c385403161266fa7178ad60b7d831b6f4e32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6ff22074126d38829f25981de9d6940cd2a234c", "patch": "@@ -1,3 +1,9 @@\n+2020-02-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93803 - ICE with constexpr init and [[no_unique_address]].\n+\t* g++.dg/cpp2a/constexpr-init16.C: New test.\n+\t* g++.dg/cpp2a/constexpr-init17.C: New test.\n+\n 2020-02-26  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/93843"}, {"sha": "16db2974f2a2c44618d58428b3be911170ed8e61", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-init16.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init16.C?ref=d6ff22074126d38829f25981de9d6940cd2a234c", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/93803 - ICE with constexpr init and [[no_unique_address]].\n+// { dg-do compile { target c++2a } }\n+\n+struct empty { };\n+\n+struct foo {\n+  [[no_unique_address]] empty x;\n+  constexpr foo() : x{} { }\n+};\n+\n+struct bar : foo {\n+  using foo::foo;\n+};\n+\n+constexpr bar a{};"}, {"sha": "34d9fe58ecb8e49b1136ced6c2b593b9795f773b", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-init17.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ff22074126d38829f25981de9d6940cd2a234c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-init17.C?ref=d6ff22074126d38829f25981de9d6940cd2a234c", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/93803 - ICE with constexpr init and [[no_unique_address]].\n+// { dg-do compile { target c++2a } }\n+\n+struct empty { };\n+\n+struct foo {\n+  [[no_unique_address]] empty x, x2, x3;\n+  constexpr foo() : x{}, x2{} { }\n+};\n+\n+struct bar : foo {\n+  using foo::foo;\n+};\n+\n+constexpr bar a{};"}]}