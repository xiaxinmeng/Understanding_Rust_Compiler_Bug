{"sha": "3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyY2VhOGM0NGY4ZTFlNDI4ZWRiNmYxN2ZlMTJjNjkzMDFjOGZlMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-11-24T17:57:41Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-11-24T17:57:41Z"}, "message": "re PR fortran/51218 (Potential optimization bug due to implicit_pure?)\n\n2011-11-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51218\n        * resolve.c (pure_subroutine): If called subroutine is\n        impure, unset implicit_pure.\n        (resolve_function): Move impure check to simplify code.\n\n2011-11-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51218\n        * gfortran.dg/implicit_pure_1.f90: New.\n\nFrom-SVN: r181698", "tree": {"sha": "ef5b6ae7f6d3f0ef6952e6842559e3697139a18e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5b6ae7f6d3f0ef6952e6842559e3697139a18e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "603518caa7ae818b427009c7caef1bf63894b3ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603518caa7ae818b427009c7caef1bf63894b3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603518caa7ae818b427009c7caef1bf63894b3ef"}], "stats": {"total": 74, "additions": 71, "deletions": 3}, "files": [{"sha": "18318421159ce860a6b32eacbbd5c25def9f3cbe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "patch": "@@ -1,3 +1,10 @@\n+2011-11-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51218\n+\t* resolve.c (pure_subroutine): If called subroutine is\n+\timpure, unset implicit_pure.\n+\t(resolve_function): Move impure check to simplify code.\n+\n 2011-11-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51207"}, {"sha": "6baeff44fa71529297f4a442209799c2fb17d3a6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "patch": "@@ -3191,10 +3191,10 @@ resolve_function (gfc_expr *expr)\n \t\t     \"procedure within a PURE procedure\", name, &expr->where);\n \t  t = FAILURE;\n \t}\n-    }\n \n-  if (!pure_function (expr, &name) && name && gfc_implicit_pure (NULL))\n-    gfc_current_ns->proc_name->attr.implicit_pure = 0;\n+      if (gfc_implicit_pure (NULL))\n+\tgfc_current_ns->proc_name->attr.implicit_pure = 0;\n+    }\n \n   /* Functions without the RECURSIVE attribution are not allowed to\n    * call themselves.  */\n@@ -3257,6 +3257,9 @@ pure_subroutine (gfc_code *c, gfc_symbol *sym)\n   else if (gfc_pure (NULL))\n     gfc_error (\"Subroutine call to '%s' at %L is not PURE\", sym->name,\n \t       &c->loc);\n+\n+  if (gfc_implicit_pure (NULL))\n+    gfc_current_ns->proc_name->attr.implicit_pure = 0;\n }\n \n "}, {"sha": "d56b2b7a01dea8bc45cdda0f9dbfe523fcb5dd55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "patch": "@@ -1,3 +1,8 @@\n+2011-11-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51218\n+\t* gfortran.dg/implicit_pure_1.f90: New.\n+\n 2011-11-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR testsuite/51258"}, {"sha": "d4a5a364e59bd6949ac4586f196e72939edfa43c", "filename": "gcc/testsuite/gfortran.dg/implicit_pure_1.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_1.f90?ref=3d2cea8c44f8e1e428edb6f17fe12c69301c8fe1", "patch": "@@ -0,0 +1,53 @@\n+! { dg-do run }\n+!\n+! PR fortran/51218\n+!\n+! Contributed by Harald Anlauf\n+!\n+\n+module a\n+  implicit none\n+  integer :: neval = 0\n+contains\n+  subroutine inc_eval\n+    neval = neval + 1\n+  end subroutine inc_eval\n+end module a\n+\n+module b\n+  use a\n+  implicit none\n+contains\n+  function f(x) ! Should be implicit pure\n+    real :: f\n+    real, intent(in) :: x\n+    f = x\n+  end function f\n+\n+  function g(x) ! Should NOT be implicit pure\n+    real :: g\n+    real, intent(in) :: x\n+    call inc_eval\n+    g = x\n+  end function g\n+end module b\n+\n+program gfcbug114a\n+  use a\n+  use b\n+  implicit none\n+  real :: x = 1, y = 1, t, u, v, w\n+  if (neval /= 0) call abort ()\n+  t = f(x)*f(y)\n+  if (neval /= 0) call abort ()\n+  u = f(x)*f(y) + f(x)*f(y)\n+  if (neval /= 0) call abort ()\n+  v = g(x)*g(y)\n+  if (neval /= 2) call abort ()\n+  w = g(x)*g(y) + g(x)*g(y)\n+  if (neval /= 6) call abort ()\n+  if (t /= 1.0 .or. u /= 2.0 .or. v /= 1.0 .or. w /= 2) call abort ()\n+end program gfcbug114a\n+\n+! { dg-final { scan-module \"b\" \"IMPLICIT_PURE\" } }\n+! { dg-final { cleanup-modules \"b\" } }"}]}