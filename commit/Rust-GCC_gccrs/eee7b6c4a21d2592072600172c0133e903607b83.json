{"sha": "eee7b6c4a21d2592072600172c0133e903607b83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlN2I2YzRhMjFkMjU5MjA3MjYwMDE3MmMwMTMzZTkwMzYwN2I4Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-09T11:47:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-09T11:47:31Z"}, "message": "genmatch.c (print_operand): Fix formatting.\n\n2015-10-09  Richard Biener  <rguenther@suse.de>\n\n\t* genmatch.c (print_operand): Fix formatting.\n\t(dt_node::append_simplify): Warn for multiple simplifiers\n\tthat match the same pattern.\n\t* match.pd (log (exp @0)): Remove duplicates.\n\nFrom-SVN: r228648", "tree": {"sha": "81a81f16a67ae4ce487035cc32f0dfeee9d84b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81a81f16a67ae4ce487035cc32f0dfeee9d84b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eee7b6c4a21d2592072600172c0133e903607b83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee7b6c4a21d2592072600172c0133e903607b83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee7b6c4a21d2592072600172c0133e903607b83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee7b6c4a21d2592072600172c0133e903607b83/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c063d603240a6a6f52cba0bf6a62d3ca14c8d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c063d603240a6a6f52cba0bf6a62d3ca14c8d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c063d603240a6a6f52cba0bf6a62d3ca14c8d16"}], "stats": {"total": 53, "additions": 33, "deletions": 20}, "files": [{"sha": "11c3b47b9d949acfb4ca6033fb231bd887ad249f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eee7b6c4a21d2592072600172c0133e903607b83", "patch": "@@ -1,3 +1,10 @@\n+2015-10-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* genmatch.c (print_operand): Fix formatting.\n+\t(dt_node::append_simplify): Warn for multiple simplifiers\n+\tthat match the same pattern.\n+\t* match.pd (log (exp @0)): Remove duplicates.\n+\n 2015-10-09  Richard Biener  <rguenth@suse.de>\n \n \tPR target/67366"}, {"sha": "b05760ec2ba10ef81e232a5c0fc6824c8aad7bea", "filename": "gcc/genmatch.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=eee7b6c4a21d2592072600172c0133e903607b83", "patch": "@@ -710,13 +710,9 @@ print_operand (operand *o, FILE *f = stderr, bool flattened = false)\n {\n   if (capture *c = dyn_cast<capture *> (o))\n     {\n-      fprintf (f, \"@%u\", c->where);\n       if (c->what && flattened == false)\n-\t{\n-\t  putc (':', f);\n-\t  print_operand (c->what, f, flattened);\n-\t  putc (' ', f);\n-\t}\n+\tprint_operand (c->what, f, flattened);\n+      fprintf (f, \"@%u\", c->where);\n     }\n \n   else if (predicate *p = dyn_cast<predicate *> (o))\n@@ -727,18 +723,22 @@ print_operand (operand *o, FILE *f = stderr, bool flattened = false)\n \n   else if (expr *e = dyn_cast<expr *> (o))\n     {\n-      fprintf (f, \"(%s\", e->operation->id);\n-\n-      if (flattened == false)\n+      if (e->ops.length () == 0)\n+\tfprintf (f, \"%s\", e->operation->id);\n+      else\n \t{\n-\t  putc (' ', f);\n-\t  for (unsigned i = 0; i < e->ops.length (); ++i)\n+\t  fprintf (f, \"(%s\", e->operation->id);\n+\n+\t  if (flattened == false)\n \t    {\n-\t      print_operand (e->ops[i], f, flattened);\n-\t      putc (' ', f);\n+\t      for (unsigned i = 0; i < e->ops.length (); ++i)\n+\t\t{\n+\t\t  putc (' ', f);\n+\t\t  print_operand (e->ops[i], f, flattened);\n+\t\t}\n \t    }\n+\t  putc (')', f);\n \t}\n-      putc (')', f);\n     }\n \n   else\n@@ -1563,6 +1563,14 @@ dt_node::append_simplify (simplify *s, unsigned pattern_no,\n \t\t\t  dt_operand **indexes)\n {\n   dt_simplify *n = new dt_simplify (s, pattern_no, indexes);\n+  for (unsigned i = 0; i < kids.length (); ++i)\n+    if (dt_simplify *s2 = dyn_cast <dt_simplify *> (kids[i]))\n+      {\n+\twarning_at (s->match->location, \"duplicate pattern\");\n+\twarning_at (s2->s->match->location, \"previous pattern defined here\");\n+\tprint_operand (s->match, stderr);\n+\tfprintf (stderr, \"\\n\");\n+      }\n   return append_node (n);\n }\n "}, {"sha": "170d73e9fa68a164b656af783263223ef8691dab", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee7b6c4a21d2592072600172c0133e903607b83/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=eee7b6c4a21d2592072600172c0133e903607b83", "patch": "@@ -2169,18 +2169,16 @@ along with GCC; see the file COPYING3.  If not see\n    (mult @0 (POW @1 (negate @2))))\n \n  /* Special case, optimize logN(expN(x)) = x.  */\n- (for logs (LOG LOG2 LOG10)\n-      exps (EXP EXP2 EXP10)\n+ (for logs (LOG LOG2 LOG10 LOG10)\n+      exps (EXP EXP2 EXP10 POW10)\n   (simplify\n    (logs (exps @0))\n     @0))\n  /* Optimize logN(func()) for various exponential functions.  We\n     want to determine the value \"x\" and the power \"exponent\" in\n     order to transform logN(x**exponent) into exponent*logN(x).  */\n- (for logs (LOG LOG LOG LOG\n-            LOG2 LOG2 LOG2 LOG2\n-\t    LOG10 LOG10 LOG10 LOG10)\n-      exps (EXP EXP2 EXP10 POW10)\n+ (for logs (LOG  LOG   LOG   LOG2 LOG2  LOG2  LOG10 LOG10)\n+      exps (EXP2 EXP10 POW10 EXP  EXP10 POW10 EXP   EXP2)\n   (simplify\n    (logs (exps @0))\n    (with {"}]}