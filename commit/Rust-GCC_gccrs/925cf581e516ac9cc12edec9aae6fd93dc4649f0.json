{"sha": "925cf581e516ac9cc12edec9aae6fd93dc4649f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1Y2Y1ODFlNTE2YWM5Y2MxMmVkZWM5YWFlNmZkOTNkYzQ2NDlmMA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-01T00:20:45Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-01T00:20:45Z"}, "message": "(*sf*, *df*, etc): Make all floating point patterns depend on ! TARGET_SOFT_FLOAT.\n\n(movsi, movdi, movsf, movdf): Add patterns for TARGET_SOFT_FLOAT.\n(SF and DF move): Use constraint 'E' instead of 'F'.\n\nFrom-SVN: r8846", "tree": {"sha": "596d826e2d5f95788f04a489c036d36c684ecc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/596d826e2d5f95788f04a489c036d36c684ecc13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/925cf581e516ac9cc12edec9aae6fd93dc4649f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925cf581e516ac9cc12edec9aae6fd93dc4649f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925cf581e516ac9cc12edec9aae6fd93dc4649f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925cf581e516ac9cc12edec9aae6fd93dc4649f0/comments", "author": null, "committer": null, "parents": [{"sha": "b36ade0ba685e17b444c909c93b04ae7ac9b9595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36ade0ba685e17b444c909c93b04ae7ac9b9595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36ade0ba685e17b444c909c93b04ae7ac9b9595"}], "stats": {"total": 184, "additions": 127, "deletions": 57}, "files": [{"sha": "57d97a228c17c479826831e28ef146b28fa1ef22", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 127, "deletions": 57, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/925cf581e516ac9cc12edec9aae6fd93dc4649f0/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/925cf581e516ac9cc12edec9aae6fd93dc4649f0/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=925cf581e516ac9cc12edec9aae6fd93dc4649f0", "patch": "@@ -357,7 +357,7 @@\n   [(set (reg:CCFP 0)\n \t(compare:CCFP (match_operand:SF 0 \"reg_or_0_operand\" \"\")\n \t\t      (match_operand:SF 1 \"reg_or_0_operand\" \"\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"\n {\n   hppa_compare_op0 = operands[0];\n@@ -370,7 +370,7 @@\n   [(set (reg:CCFP 0)\n       (compare:CCFP (match_operand:DF 0 \"reg_or_0_operand\" \"\")\n                     (match_operand:DF 1 \"reg_or_0_operand\" \"\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"\n {\n   hppa_compare_op0 = operands[0];\n@@ -384,7 +384,7 @@\n \t(match_operator:CCFP 2 \"comparison_operator\"\n \t\t\t     [(match_operand:SF 0 \"reg_or_0_operand\" \"fG\")\n \t\t\t      (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")]))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcmp,sgl,%Y2 %r0,%r1\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"fpcc\")])\n@@ -394,7 +394,7 @@\n \t(match_operator:CCFP 2 \"comparison_operator\"\n \t\t\t     [(match_operand:DF 0 \"reg_or_0_operand\" \"fG\")\n \t\t\t      (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")]))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcmp,dbl,%Y2 %r0,%r1\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"fpcc\")])\n@@ -1074,7 +1074,7 @@\n   [(set (pc) (if_then_else (ne (reg:CCFP 0) (const_int 0))\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))\n \t\t\t   (pc)))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"*\n {\n   if (INSN_ANNULLED_BRANCH_P (insn))\n@@ -1089,7 +1089,7 @@\n   [(set (pc) (if_then_else (ne (reg:CCFP 0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"*\n {\n   if (INSN_ANNULLED_BRANCH_P (insn))\n@@ -1161,8 +1161,9 @@\n \t\t\t\t\"=r,r,r,r,r,Q,*q,!f,f,*T\")\n \t(match_operand:SI 1 \"move_operand\"\n \t\t\t\t\"r,J,N,K,Q,rM,rM,!fM,*T,f\"))]\n-  \"register_operand (operands[0], SImode)\n-   || reg_or_0_operand (operands[1], SImode)\"\n+  \"(register_operand (operands[0], SImode)\n+    || reg_or_0_operand (operands[1], SImode))\n+   && ! TARGET_SOFT_FLOAT\"\n   \"@\n    copy %1,%0\n    ldi %1,%0\n@@ -1177,6 +1178,25 @@\n   [(set_attr \"type\" \"move,move,move,shift,load,store,move,fpalu,fpload,fpstore\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\"\n+\t\t\t\t\"=r,r,r,r,r,Q,*q\")\n+\t(match_operand:SI 1 \"move_operand\"\n+\t\t\t\t\"r,J,N,K,Q,rM,rM\"))]\n+  \"(register_operand (operands[0], SImode)\n+    || reg_or_0_operand (operands[1], SImode))\n+   && TARGET_SOFT_FLOAT\"\n+  \"@\n+   copy %1,%0\n+   ldi %1,%0\n+   ldil L'%1,%0\n+   zdepi %Z1,%0\n+   ldw%M1 %1,%0\n+   stw%M0 %r1,%0\n+   mtsar %r1\"\n+  [(set_attr \"type\" \"move,move,move,move,load,store,move\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4\")])\n+\n ;; Load indexed.  We don't use unscaled modes since they can't be used\n ;; unless we can tell which of the registers is the base and which is\n ;; the index, due to PA's idea of segment selection using the top bits\n@@ -1681,9 +1701,10 @@\n ;; to handle obscure reloading cases.\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=?r,f\")\n-\t(match_operand:DF 1 \"\" \"?E,m\"))]\n+\t(match_operand:DF 1 \"\" \"?F,m\"))]\n   \"GET_CODE (operands[1]) == CONST_DOUBLE\n-   && operands[1] != CONST0_RTX (DFmode)\"\n+   && operands[1] != CONST0_RTX (DFmode)\n+   && ! TARGET_SOFT_FLOAT\"\n   \"* return (which_alternative == 0 ? output_move_double (operands)\n \t\t\t\t    : \\\" fldds%F1 %1,%0\\\");\"\n   [(set_attr \"type\" \"move,fpload\")\n@@ -1737,8 +1758,9 @@\n \t\t\t  \"=f,*r,Q,?o,?Q,f,*&r,*&r\")\n \t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n \t\t\t  \"fG,*rG,f,*r,*r,Q,o,Q\"))]\n-  \"register_operand (operands[0], DFmode)\n-   || reg_or_0_operand (operands[1], DFmode)\"\n+  \"(register_operand (operands[0], DFmode)\n+    || reg_or_0_operand (operands[1], DFmode))\n+   && ! TARGET_SOFT_FLOAT\"\n   \"*\n {\n   if (FP_REG_P (operands[0]) || FP_REG_P (operands[1])\n@@ -1749,12 +1771,27 @@\n   [(set_attr \"type\" \"fpalu,move,fpstore,store,store,fpload,load,load\")\n    (set_attr \"length\" \"4,8,4,8,16,4,8,16\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"reg_or_nonsymb_mem_operand\"\n+\t\t\t  \"=r,?o,?Q,&r,&r\")\n+\t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n+\t\t\t  \"rG,r,r,o,Q\"))]\n+  \"(register_operand (operands[0], DFmode)\n+    || reg_or_0_operand (operands[1], DFmode))\n+   && TARGET_SOFT_FLOAT\"\n+  \"*\n+{\n+  return output_move_double (operands);\n+}\"\n+  [(set_attr \"type\" \"move,store,store,load,load\")\n+   (set_attr \"length\" \"8,8,16,8,16\")])\n+\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mem:DF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 8))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))))]\n-  \"! TARGET_DISABLE_INDEXING\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT\"\n   \"flddx,s %1(0,%2),%0\"\n   [(set_attr \"type\" \"fpload\")\n    (set_attr \"length\" \"4\")])\n@@ -1777,7 +1814,7 @@\n \t\t\t     (const_int 8))\n \t\t    (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\"))))]\n-  \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT && reload_in_progress\"\n   \"*\n {\n   if (GET_CODE (operands[3]) == CONST_INT)\n@@ -1793,7 +1830,7 @@\n \t\t\t\t  (const_int 8))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\")))\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"! TARGET_DISABLE_INDEXING\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT\"\n   \"fstdx,s %0,%1(0,%2)\"\n   [(set_attr \"type\" \"fpstore\")\n    (set_attr \"length\" \"4\")])\n@@ -1816,7 +1853,7 @@\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\")))\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT && reload_in_progress\"\n   \"*\n {\n   if (GET_CODE (operands[3]) == CONST_INT)\n@@ -1912,8 +1949,9 @@\n \t\t\t  \"=r,o,Q,&r,&r,&r,f,f,*T\")\n \t(match_operand:DI 1 \"general_operand\"\n \t\t\t  \"rM,r,r,o,Q,i,fM,*T,f\"))]\n-  \"register_operand (operands[0], DImode)\n-   || reg_or_0_operand (operands[1], DImode)\"\n+  \"(register_operand (operands[0], DImode)\n+    || reg_or_0_operand (operands[1], DImode))\n+   && ! TARGET_SOFT_FLOAT\"\n   \"*\n {\n   if (FP_REG_P (operands[0]) || FP_REG_P (operands[1])\n@@ -1924,6 +1962,21 @@\n   [(set_attr \"type\" \"move,store,store,load,load,multi,fpalu,fpload,fpstore\")\n    (set_attr \"length\" \"8,8,16,8,16,16,4,4,4\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"reg_or_nonsymb_mem_operand\"\n+\t\t\t  \"=r,o,Q,&r,&r,&r\")\n+\t(match_operand:DI 1 \"general_operand\"\n+\t\t\t  \"rM,r,r,o,Q,i\"))]\n+  \"(register_operand (operands[0], DImode)\n+    || reg_or_0_operand (operands[1], DImode))\n+   && TARGET_SOFT_FLOAT\"\n+  \"*\n+{\n+  return output_move_double (operands);\n+}\"\n+  [(set_attr \"type\" \"move,store,store,load,load,misc\")\n+   (set_attr \"length\" \"8,8,16,8,16,16\")])\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,&r\")\n \t(lo_sum:DI (match_operand:DI 1 \"register_operand\" \"0,r\")\n@@ -1953,9 +2006,10 @@\n ;; to handle obscure reloading cases.\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"general_operand\" \"=?r,f\")\n-\t(match_operand:SF 1 \"\" \"?E,m\"))]\n+\t(match_operand:SF 1 \"\" \"?F,m\"))]\n   \"GET_CODE (operands[1]) == CONST_DOUBLE\n-   && operands[1] != CONST0_RTX (SFmode)\"\n+   && operands[1] != CONST0_RTX (SFmode)\n+   && ! TARGET_SOFT_FLOAT\"\n   \"* return (which_alternative == 0 ? singlemove_string (operands)\n \t\t\t\t    : \\\" fldws%F1 %1,%0\\\");\"\n   [(set_attr \"type\" \"move,fpload\")\n@@ -2009,8 +2063,9 @@\n \t\t\t  \"=f,r,f,r,Q,Q\")\n \t(match_operand:SF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n \t\t\t  \"fG,rG,Q,Q,f,rG\"))]\n-  \"register_operand (operands[0], SFmode)\n-   || reg_or_0_operand (operands[1], SFmode)\"\n+  \"(register_operand (operands[0], SFmode)\n+    || reg_or_0_operand (operands[1], SFmode))\n+   && ! TARGET_SOFT_FLOAT\"\n   \"@\n    fcpy,sgl %r1,%0\n    copy %r1,%0\n@@ -2021,12 +2076,27 @@\n   [(set_attr \"type\" \"fpalu,move,fpload,load,fpstore,store\")\n    (set_attr \"length\" \"4,4,4,4,4,4\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"reg_or_nonsymb_mem_operand\"\n+\t\t\t  \"=r,r,Q\")\n+\t(match_operand:SF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n+\t\t\t  \"rG,Q,rG\"))]\n+  \"(register_operand (operands[0], SFmode)\n+    || reg_or_0_operand (operands[1], SFmode))\n+   && TARGET_SOFT_FLOAT\"\n+  \"@\n+   copy %r1,%0\n+   ldw%M1 %1,%0\n+   stw%M0 %r1,%0\"\n+  [(set_attr \"type\" \"move,load,store\")\n+   (set_attr \"length\" \"4,4,4\")])\n+\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mem:SF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 4))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))))]\n-  \"! TARGET_DISABLE_INDEXING\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT\"\n   \"fldwx,s %1(0,%2),%0\"\n   [(set_attr \"type\" \"fpload\")\n    (set_attr \"length\" \"4\")])\n@@ -2049,7 +2119,7 @@\n \t\t\t     (const_int 4))\n \t\t    (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\"))))]\n-  \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT && reload_in_progress\"\n   \"*\n {\n   if (GET_CODE (operands[3]) == CONST_INT)\n@@ -2065,7 +2135,7 @@\n \t\t\t\t  (const_int 4))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\")))\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"! TARGET_DISABLE_INDEXING\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT\"\n   \"fstwx,s %0,%1(0,%2)\"\n   [(set_attr \"type\" \"fpstore\")\n    (set_attr \"length\" \"4\")])\n@@ -2088,7 +2158,7 @@\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\")))\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n+  \"! TARGET_DISABLE_INDEXING && ! TARGET_SOFT_FLOAT && reload_in_progress\"\n   \"*\n {\n   if (GET_CODE (operands[3]) == CONST_INT)\n@@ -2166,7 +2236,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float_extend:DF\n \t (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvff,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2175,7 +2245,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvff,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2194,15 +2264,15 @@\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"const_int_operand\" \"m\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fldws %1,%0\\;fcnvxf,sgl,sgl %0,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"floatsisf2\"\n   [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvxf,sgl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2213,15 +2283,15 @@\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"const_int_operand\" \"m\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fldws %1,%0\\;fcnvxf,sgl,dbl %0,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"floatsidf2\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvxf,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2233,7 +2303,7 @@\n \t(const_int 0))\n    (set (match_operand:SF 0 \"general_operand\" \"\")\n \t(float:SF (match_dup 2)))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_expand \"floatunssidf2\"\n@@ -2243,21 +2313,21 @@\n \t(const_int 0))\n    (set (match_operand:DF 0 \"general_operand\" \"\")\n \t(float:DF (match_dup 2)))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_insn \"floatdisf2\"\n   [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n \t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"fcnvxf,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"fcnvxf,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2268,31 +2338,31 @@\n (define_insn \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n \t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvfxt,sgl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fcnvfxt,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"fcnvfxt,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n-  \"TARGET_SNAKE\"\n+  \"TARGET_SNAKE && ! TARGET_SOFT_FLOAT\"\n   \"fcnvfxt,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2432,7 +2502,7 @@\n   \"\"\n   \"\n {\n-  if (TARGET_SNAKE && ! TARGET_DISABLE_FPREGS)\n+  if (TARGET_SNAKE && ! TARGET_DISABLE_FPREGS && ! TARGET_SOFT_FLOAT)\n     {\n       rtx scratch = gen_reg_rtx (DImode);\n       operands[1] = force_reg (SImode, operands[1]);\n@@ -2450,7 +2520,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=f\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"f\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"f\"))))]\n-  \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS\"\n+  \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS && ! TARGET_SOFT_FLOAT\"\n   \"xmpyu %1,%2,%0\"\n   [(set_attr \"type\" \"fpmuldbl\")\n    (set_attr \"length\" \"4\")])\n@@ -2459,7 +2529,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=f\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"f\"))\n \t\t (match_operand:DI 2 \"uint32_operand\" \"f\")))]\n-  \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS\"\n+  \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS && ! TARGET_SOFT_FLOAT\"\n   \"xmpyu %1,%R2,%0\"\n   [(set_attr \"type\" \"fpmuldbl\")\n    (set_attr \"length\" \"4\")])\n@@ -2868,7 +2938,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(plus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fadd,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2877,7 +2947,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(plus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fadd,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2886,7 +2956,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t  (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsub,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2895,7 +2965,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t  (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsub,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n@@ -2904,7 +2974,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fmpy,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpmuldbl\")\n    (set_attr \"length\" \"4\")])\n@@ -2913,7 +2983,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fmpy,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpmulsgl\")\n    (set_attr \"length\" \"4\")])\n@@ -2922,7 +2992,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(div:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t(match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fdiv,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivdbl\")\n    (set_attr \"length\" \"4\")])\n@@ -2931,55 +3001,55 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t(match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fdiv,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivsgl\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsub,dbl 0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsub,sgl 0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fabs,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fabs,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsqrt,dbl %1,%0\"\n   [(set_attr \"type\" \"fpsqrtdbl\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(sqrt:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"\"\n+  \"! TARGET_SOFT_FLOAT\"\n   \"fsqrt,sgl %1,%0\"\n   [(set_attr \"type\" \"fpsqrtsgl\")\n    (set_attr \"length\" \"4\")])"}]}