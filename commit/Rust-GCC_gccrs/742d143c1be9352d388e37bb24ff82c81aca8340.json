{"sha": "742d143c1be9352d388e37bb24ff82c81aca8340", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyZDE0M2MxYmU5MzUyZDM4OGUzN2JiMjRmZjgyYzgxYWNhODM0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-20T11:09:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-20T11:09:54Z"}, "message": "re PR tree-optimization/45860 (ICE: verify_ssa failed: virtual SSA name for non-VOP decl at -O1)\n\n2010-10-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45860\n\t* tree-ssa-phiopt.c (cond_store_replacement): Do not do\n\tconditional store replacement for non-register type stores.\n\n\t* gcc.dg/torture/pr45860.c: New testcase.\n\nFrom-SVN: r165718", "tree": {"sha": "787b901537ce872da945a332f8791b8d5726a19e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/787b901537ce872da945a332f8791b8d5726a19e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/742d143c1be9352d388e37bb24ff82c81aca8340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742d143c1be9352d388e37bb24ff82c81aca8340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742d143c1be9352d388e37bb24ff82c81aca8340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742d143c1be9352d388e37bb24ff82c81aca8340/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d475ac5b42807b88d77b27bb3762459e6348693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d475ac5b42807b88d77b27bb3762459e6348693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d475ac5b42807b88d77b27bb3762459e6348693"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "4afbaecfd5278de68d18c996c77ba4ffa870cec7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=742d143c1be9352d388e37bb24ff82c81aca8340", "patch": "@@ -1,3 +1,9 @@\n+2010-10-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45860\n+\t* tree-ssa-phiopt.c (cond_store_replacement): Do not do\n+\tconditional store replacement for non-register type stores.\n+\n 2010-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* stor-layout.c (skip_simple_constant_arithmetic): New function."}, {"sha": "25fd7033b856e3024712be0ee7b93a4321a25767", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=742d143c1be9352d388e37bb24ff82c81aca8340", "patch": "@@ -1,3 +1,8 @@\n+2010-10-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45860\n+\t* gcc.dg/torture/pr45860.c: New testcase.\n+\n 2010-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/discr25.adb: New test."}, {"sha": "4a48bc5590e5cc72cf58c1731001527e0818a73b", "filename": "gcc/testsuite/gcc.dg/torture/pr45860.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45860.c?ref=742d143c1be9352d388e37bb24ff82c81aca8340", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+void\n+foo (char *str, int i)\n+{\n+  static const char text[] = \"\";\n+  str[i] = 0;\n+  if (i & 1)\n+    __builtin_strcpy (str + i, text);\n+}\n+"}, {"sha": "8555bc1ef6f48c88d44f7c13ffb2b1229ef57965", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742d143c1be9352d388e37bb24ff82c81aca8340/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=742d143c1be9352d388e37bb24ff82c81aca8340", "patch": "@@ -1204,10 +1204,11 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n       || TREE_CODE (TREE_OPERAND (lhs, 0)) != SSA_NAME)\n     return false;\n \n-  /* RHS is either a single SSA_NAME or a constant. */\n+  /* RHS is either a single SSA_NAME or a constant of register type. */\n   code = gimple_assign_rhs_code (assign);\n   if (get_gimple_rhs_class (code) != GIMPLE_SINGLE_RHS\n-      || (code != SSA_NAME && !is_gimple_min_invariant (rhs)))\n+      || (code != SSA_NAME && !is_gimple_min_invariant (rhs))\n+      || !is_gimple_reg_type (TREE_TYPE (lhs)))\n     return false;\n   /* Prove that we can move the store down.  We could also check\n      TREE_THIS_NOTRAP here, but in that case we also could move stores,\n@@ -1217,8 +1218,8 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n \n   /* Now we've checked the constraints, so do the transformation:\n      1) Remove the single store.  */\n-  mark_symbols_for_renaming (assign);\n   gsi = gsi_for_stmt (assign);\n+  unlink_stmt_vdef (assign);\n   gsi_remove (&gsi, true);\n \n   /* 2) Create a temporary where we can store the old content\n@@ -1237,7 +1238,6 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n   name = make_ssa_name (condstoretemp, new_stmt);\n   gimple_assign_set_lhs (new_stmt, name);\n   gimple_set_location (new_stmt, locus);\n-  mark_symbols_for_renaming (new_stmt);\n   gsi_insert_on_edge (e1, new_stmt);\n \n   /* 4) Create a PHI node at the join block, with one argument\n@@ -1249,7 +1249,6 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n \n   lhs = unshare_expr (lhs);\n   new_stmt = gimple_build_assign (lhs, PHI_RESULT (newphi));\n-  mark_symbols_for_renaming (new_stmt);\n \n   /* 5) Insert that PHI node.  */\n   gsi = gsi_after_labels (join_bb);"}]}