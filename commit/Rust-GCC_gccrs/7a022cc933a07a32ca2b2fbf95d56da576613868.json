{"sha": "7a022cc933a07a32ca2b2fbf95d56da576613868", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwMjJjYzkzM2EwN2EzMmNhMmIyZmJmOTVkNTZkYTU3NjYxMzg2OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-04-26T10:08:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:14Z"}, "message": "[Ada] universal_access equality and 'Access attributes\n\n2020-06-19  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb (Find_Equality_Types.Check_Access_Attribute): New.\n\t(Find_Equality_Types): Move universal_access related checks at\n\tthe end of the processing and add call to\n\tCheck_Access_Attribute.", "tree": {"sha": "56f5b6a45e93c8277cac2c300ab65af660789080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56f5b6a45e93c8277cac2c300ab65af660789080"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a022cc933a07a32ca2b2fbf95d56da576613868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a022cc933a07a32ca2b2fbf95d56da576613868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a022cc933a07a32ca2b2fbf95d56da576613868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a022cc933a07a32ca2b2fbf95d56da576613868/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5835f304466352bf180d851591df6975dcb42b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5835f304466352bf180d851591df6975dcb42b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5835f304466352bf180d851591df6975dcb42b8"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "0f59b40c62a0a56580c9b22b3542d2872ffcdec6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 49, "deletions": 14, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a022cc933a07a32ca2b2fbf95d56da576613868/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a022cc933a07a32ca2b2fbf95d56da576613868/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7a022cc933a07a32ca2b2fbf95d56da576613868", "patch": "@@ -6540,12 +6540,24 @@ package body Sem_Ch4 is\n       Op_Id : Entity_Id;\n       N     : Node_Id)\n    is\n-      Index : Interp_Index := 0;\n-      It    : Interp;\n-      Found : Boolean := False;\n-      I_F   : Interp_Index;\n-      T_F   : Entity_Id;\n-      Scop  : Entity_Id := Empty;\n+      Index               : Interp_Index := 0;\n+      It                  : Interp;\n+      Found               : Boolean := False;\n+      Is_Universal_Access : Boolean := False;\n+      I_F                 : Interp_Index;\n+      T_F                 : Entity_Id;\n+      Scop                : Entity_Id := Empty;\n+\n+      procedure Check_Access_Attribute (N : Node_Id);\n+      --  For any object, '[Unchecked_]Access of such object can never be\n+      --  passed as a parameter of a call to the Universal_Access equality\n+      --  operator.\n+      --  This is because the expected type for Obj'Access in a call to\n+      --  the Standard.\"=\" operator whose formals are of type\n+      --  Universal_Access is Universal_Integer, and Universal_Access\n+      --  doesn't have a designated type. For more detail see RM 6.4.1(3)\n+      --  and 3.10.2.\n+      --  This procedure assumes that the context is a universal_access.\n \n       function Check_Access_Object_Types\n         (N : Node_Id; Typ : Entity_Id) return Boolean;\n@@ -6574,6 +6586,23 @@ package body Sem_Ch4 is\n       --  and an error can be emitted now, after trying to disambiguate, i.e.\n       --  applying preference rules.\n \n+      ----------------------------\n+      -- Check_Access_Attribute --\n+      ----------------------------\n+\n+      procedure Check_Access_Attribute (N : Node_Id) is\n+      begin\n+         if Nkind (N) = N_Attribute_Reference\n+           and then Nam_In (Attribute_Name (N),\n+                            Name_Access,\n+                            Name_Unchecked_Access)\n+         then\n+            Error_Msg_N\n+              (\"access attribute cannot be used as actual for \"\n+               & \"universal_access equality\", N);\n+         end if;\n+      end Check_Access_Attribute;\n+\n       -------------------------------\n       -- Check_Access_Object_Types --\n       -------------------------------\n@@ -6867,14 +6896,6 @@ package body Sem_Ch4 is\n            and then (not Universal_Access\n                       or else Check_Access_Object_Types (R, T1))\n          then\n-            if Universal_Access\n-              and then Is_Access_Subprogram_Type (T1)\n-              and then Nkind (L) /= N_Null\n-              and then Nkind (R) /= N_Null\n-            then\n-               Check_Compatible_Profiles (R, T1);\n-            end if;\n-\n             if Found\n               and then Base_Type (T1) /= Base_Type (T_F)\n             then\n@@ -6887,12 +6908,14 @@ package body Sem_Ch4 is\n \n                else\n                   T_F := It.Typ;\n+                  Is_Universal_Access := Universal_Access;\n                end if;\n \n             else\n                Found := True;\n                T_F   := T1;\n                I_F   := Index;\n+               Is_Universal_Access := Universal_Access;\n             end if;\n \n             if not Analyzed (L) then\n@@ -6947,6 +6970,18 @@ package body Sem_Ch4 is\n             Get_Next_Interp (Index, It);\n          end loop;\n       end if;\n+\n+      if Is_Universal_Access then\n+         if Is_Access_Subprogram_Type (Etype (L))\n+           and then Nkind (L) /= N_Null\n+           and then Nkind (R) /= N_Null\n+         then\n+            Check_Compatible_Profiles (R, Etype (L));\n+         end if;\n+\n+         Check_Access_Attribute (R);\n+         Check_Access_Attribute (L);\n+      end if;\n    end Find_Equality_Types;\n \n    -------------------------"}]}