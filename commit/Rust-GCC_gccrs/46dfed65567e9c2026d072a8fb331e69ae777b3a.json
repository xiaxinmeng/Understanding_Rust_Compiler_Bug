{"sha": "46dfed65567e9c2026d072a8fb331e69ae777b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZkZmVkNjU1NjdlOWMyMDI2ZDA3MmE4ZmIzMzFlNjlhZTc3N2IzYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-11-14T03:18:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-11-14T03:18:17Z"}, "message": "re PR tree-optimization/59102 (ICE on valid code at -Os and above on x86_64-linux-gnu)\n\n\tPR tree-optimization/59102\n\t* gimple-ssa-isolate-paths.c\n\t(insert_trap_and_remove_trailing_statments): Ensure STMT is a\n\tgimple assignment before looking at gimple_assign_lhs.\n\n\tPR tree-optimization/59102\n\t* gcc.c-torture/compile/pr59102.c: New test.\n\nFrom-SVN: r204773", "tree": {"sha": "1544cfbc7012a5ff79694dce9e812f7babff6b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1544cfbc7012a5ff79694dce9e812f7babff6b8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46dfed65567e9c2026d072a8fb331e69ae777b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dfed65567e9c2026d072a8fb331e69ae777b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dfed65567e9c2026d072a8fb331e69ae777b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dfed65567e9c2026d072a8fb331e69ae777b3a/comments", "author": null, "committer": null, "parents": [{"sha": "41808d153aaa607fc16c243005d52319d6ef8030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41808d153aaa607fc16c243005d52319d6ef8030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41808d153aaa607fc16c243005d52319d6ef8030"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "6cb12486d7e03f730da61fa4baf15e4f11ade8a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46dfed65567e9c2026d072a8fb331e69ae777b3a", "patch": "@@ -1,3 +1,10 @@\n+2013-11-13  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/59102\n+\t* gimple-ssa-isolate-paths.c\n+\t(insert_trap_and_remove_trailing_statments): Ensure STMT is a\n+\tgimple assignment before looking at gimple_assign_lhs.\n+\n 2013-11-13  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira.c: Add comment about threads at the top of file."}, {"sha": "108b98e2917b990f5d02cb4038730c43fabdc5ea", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=46dfed65567e9c2026d072a8fb331e69ae777b3a", "patch": "@@ -74,9 +74,11 @@ insert_trap_and_remove_trailing_statements (gimple_stmt_iterator *si_p, tree op)\n      LHS will be a throw-away SSA_NAME and the RHS is the NULL dereference.\n \n      If the dereference is a store and we can easily transform the RHS,\n-     then simplify the RHS to enable more DCE.  */\n+     then simplify the RHS to enable more DCE.   Note that we require the\n+     statement to be a GIMPLE_ASSIGN which filters out calls on the RHS.  */\n   gimple stmt = gsi_stmt (*si_p);\n   if (walk_stmt_load_store_ops (stmt, (void *)op, NULL, check_loadstore)\n+      && is_gimple_assign (stmt)\n       && INTEGRAL_TYPE_P (TREE_TYPE (gimple_assign_lhs (stmt))))\n     {\n       /* We just need to turn the RHS into zero converted to the proper"}, {"sha": "7855d7313c3e91814fe70abc4d516d4ce510e3f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46dfed65567e9c2026d072a8fb331e69ae777b3a", "patch": "@@ -1,4 +1,9 @@\n-2013-11-14  Tom de Vries  <tom@codesourcery.com>\n+2013-11-13  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/59102\n+\t* gcc.c-torture/compile/pr59102.c: New test.\n+\t \n+2013-11-13  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/tail-merge-store.c: New test.\n \n@@ -7,7 +12,7 @@\n \t* testsuite/g++.dg/plugin/selfassign.c: Include gimple-iterator.h.\n \t* testsuite/gcc.dg/plugin/selfassign.c: Likewise.\n \n-2013-11-12  Jeff Law  <law@redhat.com>\n+2013-11-13  Jeff Law  <law@redhat.com>\n \n \t* PR middle-end/59119\n \t* gcc.c-torture/compile/pr59119.c: New test."}, {"sha": "495473322a5876296aeeefcd93acf294b13b59de", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59102.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59102.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfed65567e9c2026d072a8fb331e69ae777b3a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59102.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59102.c?ref=46dfed65567e9c2026d072a8fb331e69ae777b3a", "patch": "@@ -0,0 +1,28 @@\n+\n+int a, b, c, f;\n+\n+struct S\n+{\n+  int f0;\n+} d, *e;\n+\n+struct S\n+foo ()\n+{\n+  b = c = b || a == 0 || f % 11;\n+  return d;\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  if (b);\n+  else\n+    {\n+      struct S **g = &e;\n+      *g = 0;\n+      *e = foo ();\n+    }\n+  return 0;\n+}"}]}