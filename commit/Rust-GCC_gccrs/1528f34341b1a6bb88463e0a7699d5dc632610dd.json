{"sha": "1528f34341b1a6bb88463e0a7699d5dc632610dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyOGYzNDM0MWIxYTZiYjg4NDYzZTBhNzY5OWQ1ZGM2MzI2MTBkZA==", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-10-26T17:31:19Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-11-03T13:23:09Z"}, "message": "arm: Add vldN_lane_bf16 + vldNq_lane_bf16 intrisics\n\ngcc/ChangeLog\n\n2020-10-29  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* config/arm/arm_neon.h (vld2_lane_bf16, vld2q_lane_bf16)\n\t(vld3_lane_bf16, vld3q_lane_bf16, vld4_lane_bf16)\n\t(vld4q_lane_bf16): Add intrinsics.\n\t* config/arm/arm_neon_builtins.def: Touch for:\n\t__builtin_neon_vld2_lanev4bf, __builtin_neon_vld2_lanev8bf,\n\t__builtin_neon_vld3_lanev4bf, __builtin_neon_vld3_lanev8bf,\n\t__builtin_neon_vld4_lanev4bf, __builtin_neon_vld4_lanev8bf.\n\t* config/arm/iterators.md (VQ_HS): Add V8BF to the iterator.\n\ngcc/testsuite/ChangeLog\n\n2020-10-29  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_bf16_indices_1.c:\n\tRun it also for the arm backend.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/arm/simd/vldn_lane_bf16_1.c: New test.", "tree": {"sha": "e57d3d278dd72ca901627c16ffd18161d2e5c219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e57d3d278dd72ca901627c16ffd18161d2e5c219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1528f34341b1a6bb88463e0a7699d5dc632610dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1528f34341b1a6bb88463e0a7699d5dc632610dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1528f34341b1a6bb88463e0a7699d5dc632610dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1528f34341b1a6bb88463e0a7699d5dc632610dd/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6170a793b7f5b4658751fc3a5ca51c10d18651f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6170a793b7f5b4658751fc3a5ca51c10d18651f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6170a793b7f5b4658751fc3a5ca51c10d18651f9"}], "stats": {"total": 161, "additions": 148, "deletions": 13}, "files": [{"sha": "4fee128ce8d2649595c587bbce94079426b4fb9b", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -19721,6 +19721,68 @@ vst1q_lane_bf16 (bfloat16_t * __a, bfloat16x8_t __b, const int __c)\n   __builtin_neon_vst1_lanev8bf (__a, __b, __c);\n }\n \n+__extension__ extern __inline bfloat16x4x2_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld2_lane_bf16 (const bfloat16_t * __a, bfloat16x4x2_t __b, const int __c)\n+{\n+  union { bfloat16x4x2_t __i; __builtin_neon_ti __o; } __bu = { __b };\n+  union { bfloat16x4x2_t __i; __builtin_neon_ti __o; } __rv;\n+  __rv.__o = __builtin_neon_vld2_lanev4bf ( __a, __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n+__extension__ extern __inline bfloat16x8x2_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld2q_lane_bf16 (const bfloat16_t * __a, bfloat16x8x2_t __b, const int __c)\n+{\n+  union { bfloat16x8x2_t __i; __builtin_neon_oi __o; } __bu = { __b };\n+  union { bfloat16x8x2_t __i; __builtin_neon_oi __o; } __rv;\n+  __rv.__o = __builtin_neon_vld2_lanev8bf (__a, __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n+__extension__ extern __inline bfloat16x4x3_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld3_lane_bf16 (const bfloat16_t * __a, bfloat16x4x3_t __b, const int __c)\n+{\n+  union { bfloat16x4x3_t __i; __builtin_neon_ei __o; } __bu = { __b };\n+  union { bfloat16x4x3_t __i; __builtin_neon_ei __o; } __rv;\n+  __rv.__o = __builtin_neon_vld3_lanev4bf (__a, __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n+__extension__ extern __inline bfloat16x8x3_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld3q_lane_bf16 (const bfloat16_t * __a, bfloat16x8x3_t __b, const int __c)\n+{\n+  union { bfloat16x8x3_t __i; __builtin_neon_ci __o; } __bu = { __b };\n+  union { bfloat16x8x3_t __i; __builtin_neon_ci __o; } __rv;\n+  __rv.__o = __builtin_neon_vld3_lanev8bf (__a, __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n+__extension__ extern __inline bfloat16x4x4_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld4_lane_bf16 (const bfloat16_t * __a, bfloat16x4x4_t __b, const int __c)\n+{\n+  union { bfloat16x4x4_t __i; __builtin_neon_oi __o; } __bu = { __b };\n+  union { bfloat16x4x4_t __i; __builtin_neon_oi __o; } __rv;\n+  __rv.__o = __builtin_neon_vld4_lanev4bf (__a,\n+\t\t\t\t\t   __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n+__extension__ extern __inline bfloat16x8x4_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld4q_lane_bf16 (const bfloat16_t * __a, bfloat16x8x4_t __b, const int __c)\n+{\n+  union { bfloat16x8x4_t __i; __builtin_neon_xi __o; } __bu = { __b };\n+  union { bfloat16x8x4_t __i; __builtin_neon_xi __o; } __rv;\n+  __rv.__o = __builtin_neon_vld4_lanev8bf (__a,\n+\t\t\t\t\t   __bu.__o, __c);\n+  return __rv.__i;\n+}\n+\n #pragma GCC pop_options\n \n #ifdef __cplusplus"}, {"sha": "1cb8c8c23b43fa6d89e79bbb1bf545606975279f", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -324,26 +324,26 @@ VAR14 (STORE1LANE, vst1_lane,\n        v8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v2di, v4bf, v8bf)\n VAR13 (LOAD1, vld2,\n \tv8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n-VAR9 (LOAD1LANE, vld2_lane,\n-\tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n+VAR11 (LOAD1LANE, vld2_lane,\n+       v8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n VAR8 (LOAD1, vld2_dup, v8qi, v4hi, v4hf, v2si, v2sf, di, v4bf, v8bf)\n VAR13 (STORE1, vst2,\n \tv8qi, v4hi, v4hf, v4bf, v2si, v2sf, di, v16qi, v8hi, v8hf, v8bf, v4si, v4sf)\n VAR9 (STORE1LANE, vst2_lane,\n \tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n VAR13 (LOAD1, vld3,\n \tv8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n-VAR9 (LOAD1LANE, vld3_lane,\n-\tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n+VAR11 (LOAD1LANE, vld3_lane,\n+        v8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n VAR8 (LOAD1, vld3_dup, v8qi, v4hi, v4hf, v2si, v2sf, di, v4bf, v8bf)\n VAR13 (STORE1, vst3,\n \tv8qi, v4hi, v4hf, v4bf, v2si, v2sf, di, v16qi, v8hi, v8hf, v8bf, v4si, v4sf)\n VAR9 (STORE1LANE, vst3_lane,\n \tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n VAR13 (LOAD1, vld4,\n \tv8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n-VAR9 (LOAD1LANE, vld4_lane,\n-\tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n+VAR11 (LOAD1LANE, vld4_lane,\n+        v8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf, v4bf, v8bf)\n VAR8 (LOAD1, vld4_dup, v8qi, v4hi, v4hf, v2si, v2sf, di, v4bf, v8bf)\n VAR13 (STORE1, vst4,\n \tv8qi, v4hi, v4hf, v4bf, v2si, v2sf, di, v16qi, v8hi, v8hf, v8bf, v4si, v4sf)"}, {"sha": "592af35f038f48b5f4ac622a0ed944ffc2a140f2", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -116,7 +116,7 @@\n (define_mode_iterator VQ2BF [V16QI V8HI V8HF (V8BF \"TARGET_BF16_SIMD\") V4SI V4SF])\n \n ;; Quad-width vector modes with 16- or 32-bit elements\n-(define_mode_iterator VQ_HS [V8HI V8HF V4SI V4SF])\n+(define_mode_iterator VQ_HS [V8HI V8HF V4SI V4SF (V8BF \"TARGET_BF16_SIMD\")])\n \n ;; Quad-width vector modes plus 64-bit elements.\n (define_mode_iterator VQX [V16QI V8HI V8HF V8BF V4SI V4SF V2DI])"}, {"sha": "d568a26ba8a4abfce388a03de410d5af6e810521", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "b91f14a7d01064dea73c56694d467c240ee1edef", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "331abf42b3c3b23c0e5b1b2bd6a4e109a2cc561b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "1c52887aa67a3e2e0cadb53cd7f21fcffaa25833", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "3f486f94c25d6b8f202dd73052dad3b0b7385155", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "7159cd86651fd6c093f558d50ae5539b80ddd20b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_bf16_indices_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_bf16_indices_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n /* { dg-add-options arm_v8_2a_bf16_neon }  */"}, {"sha": "58153eddf6239c76be9a6da621a5836836085efa", "filename": "gcc/testsuite/gcc.target/arm/simd/vldn_lane_bf16_1.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvldn_lane_bf16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1528f34341b1a6bb88463e0a7699d5dc632610dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvldn_lane_bf16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvldn_lane_bf16_1.c?ref=1528f34341b1a6bb88463e0a7699d5dc632610dd", "patch": "@@ -0,0 +1,73 @@\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon } */\n+/* { dg-additional-options \"-save-temps -O2 -mfloat-abi=hard\" }  */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+\n+#include \"arm_neon.h\"\n+\n+/*\n+**test_vld2_lane_bf16:\n+**\tvld2.16\t{d0\\[2\\], d1\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x4x2_t\n+test_vld2_lane_bf16 (const bfloat16_t *a, bfloat16x4x2_t b)\n+{\n+  return vld2_lane_bf16 (a, b, 2);\n+}\n+\n+/*\n+**test_vld2q_lane_bf16:\n+**\tvld2.16\t{d0\\[2\\], d2\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x8x2_t\n+test_vld2q_lane_bf16 (const bfloat16_t *a, bfloat16x8x2_t b)\n+{\n+  return vld2q_lane_bf16 (a, b, 2);\n+}\n+\n+/*\n+**test_vld3_lane_bf16:\n+**\tvld3.16\t{d0\\[2\\], d1\\[2\\], d2\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x4x3_t\n+test_vld3_lane_bf16 (const bfloat16_t *a, bfloat16x4x3_t b)\n+{\n+  return vld3_lane_bf16 (a, b, 2);\n+}\n+\n+/*\n+**test_vld3q_lane_bf16:\n+**\tvld3.16\t{d0\\[2\\], d2\\[2\\], d4\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x8x3_t\n+test_vld3q_lane_bf16 (const bfloat16_t *a, bfloat16x8x3_t b)\n+{\n+  return vld3q_lane_bf16 (a, b, 2);\n+}\n+\n+/*\n+**test_vld4_lane_bf16:\n+**\tvld4.16\t{d0\\[2\\], d1\\[2\\], d2\\[2\\], d3\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x4x4_t\n+test_vld4_lane_bf16 (const bfloat16_t *a, bfloat16x4x4_t b)\n+{\n+  return vld4_lane_bf16 (a, b, 2);\n+}\n+\n+/*\n+**test_vld4q_lane_bf16:\n+**\tvld4.16\t{d0\\[2\\], d2\\[2\\], d4\\[2\\], d6\\[2\\]}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x8x4_t\n+test_vld4q_lane_bf16 (const bfloat16_t *a, bfloat16x8x4_t b)\n+{\n+  return vld4q_lane_bf16 (a, b, 2);\n+}"}]}