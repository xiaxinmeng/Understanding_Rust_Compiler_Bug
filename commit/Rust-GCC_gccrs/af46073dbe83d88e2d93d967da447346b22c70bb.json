{"sha": "af46073dbe83d88e2d93d967da447346b22c70bb", "node_id": "C_kwDOANBUbNoAKGFmNDYwNzNkYmU4M2Q4OGUyZDkzZDk2N2RhNDQ3MzQ2YjIyYzcwYmI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-23T10:05:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-23T12:51:57Z"}, "message": "Fix memory leak in if-conversion\n\nThe following fixes if-conversion failing to release data-references\nand the data-reference vector.\n\n\t* tree-if-conv.cc (tree_if_conversion): Properly manage\n\tmemory of refs and the contained data references.", "tree": {"sha": "c50d735b1951dc9c7ac3a1d03297a1c90f15ff4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50d735b1951dc9c7ac3a1d03297a1c90f15ff4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af46073dbe83d88e2d93d967da447346b22c70bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af46073dbe83d88e2d93d967da447346b22c70bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af46073dbe83d88e2d93d967da447346b22c70bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af46073dbe83d88e2d93d967da447346b22c70bb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31cc5821223a096ef61743bff520f4a0dbba5872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cc5821223a096ef61743bff520f4a0dbba5872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cc5821223a096ef61743bff520f4a0dbba5872"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f133102ad3350a0fd3a09ad836c68e840f316a0e", "filename": "gcc/tree-if-conv.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af46073dbe83d88e2d93d967da447346b22c70bb/gcc%2Ftree-if-conv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af46073dbe83d88e2d93d967da447346b22c70bb/gcc%2Ftree-if-conv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.cc?ref=af46073dbe83d88e2d93d967da447346b22c70bb", "patch": "@@ -3534,7 +3534,7 @@ tree_if_conversion (class loop *loop, vec<gimple *> *preds)\n   auto_vec <gassign *, 4> writes_to_lower;\n   bitmap exit_bbs;\n   edge pe;\n-  vec<data_reference_p> refs;\n+  auto_vec<data_reference_p, 10> refs;\n \n  again:\n   rloop = NULL;\n@@ -3544,7 +3544,6 @@ tree_if_conversion (class loop *loop, vec<gimple *> *preds)\n   need_to_predicate = false;\n   need_to_rewrite_undefined = false;\n   any_complicated_phi = false;\n-  refs.create (5);\n \n   /* Apply more aggressive if-conversion when loop or its outer loop were\n      marked with simd pragma.  When that's the case, we try to if-convert\n@@ -3701,8 +3700,10 @@ tree_if_conversion (class loop *loop, vec<gimple *> *preds)\n   data_reference_p dr;\n   unsigned int i;\n   for (i = 0; refs.iterate (i, &dr); i++)\n-    free (dr->aux);\n-\n+    {\n+      free (dr->aux);\n+      free_data_ref (dr);\n+    }\n   refs.truncate (0);\n \n   if (ifc_bbs)"}]}