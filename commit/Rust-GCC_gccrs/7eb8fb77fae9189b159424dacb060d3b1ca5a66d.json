{"sha": "7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ViOGZiNzdmYWU5MTg5YjE1OTQyNGRhY2IwNjBkM2IxY2E1YTY2ZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-01-13T14:11:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-01-13T14:11:15Z"}, "message": "gcc/\n\t* config/aarch64/aarch64.md (subsi3, *subsi3_uxtw, subdi3)\n\t(*sub_<optab><ALLX:mode>_<GPI:mode>, *sub_<optab><SHORT:mode>_si_uxtw)\n\t(*sub_<optab><ALLX:mode>_shft_<GPI:mode>)\n\t(*sub_<optab><SHORT:mode>_shft_si_uxtw, *sub_<optab><mode>_multp2)\n\t(*sub_<optab>si_multp2_uxtw, *sub_uxt<mode>_multp2)\n\t(*sub_uxtsi_multp2_uxtw): Add stack pointer sources.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/subsp.c: New test.\n\nFrom-SVN: r219533", "tree": {"sha": "b9648daad70b60e8f4066d427a94babd19640982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9648daad70b60e8f4066d427a94babd19640982"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f46bd52c5ef8a050b6547dd0f272dc14364d979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f46bd52c5ef8a050b6547dd0f272dc14364d979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f46bd52c5ef8a050b6547dd0f272dc14364d979"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "491a6379ed7273940e87491b310cc152f4e40e78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "patch": "@@ -1,3 +1,12 @@\n+2015-01-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.md (subsi3, *subsi3_uxtw, subdi3)\n+\t(*sub_<optab><ALLX:mode>_<GPI:mode>, *sub_<optab><SHORT:mode>_si_uxtw)\n+\t(*sub_<optab><ALLX:mode>_shft_<GPI:mode>)\n+\t(*sub_<optab><SHORT:mode>_shft_si_uxtw, *sub_<optab><mode>_multp2)\n+\t(*sub_<optab>si_multp2_uxtw, *sub_uxt<mode>_multp2)\n+\t(*sub_uxtsi_multp2_uxtw): Add stack pointer sources.\n+\n 2015-01-13  Andrew Pinski   <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.c (fusion_load_store): Check dest mode"}, {"sha": "fc729515910718a6e4792de92b543d4e2524d568", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "patch": "@@ -1889,8 +1889,8 @@\n \n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=rk\")\n-\t(minus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n+\t(minus:SI (match_operand:SI 1 \"register_operand\" \"rk\")\n+\t\t  (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n   [(set_attr \"type\" \"alu_sreg\")]\n@@ -1900,7 +1900,7 @@\n (define_insn \"*subsi3_uxtw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk\")\n \t(zero_extend:DI\n-         (minus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+         (minus:SI (match_operand:SI 1 \"register_operand\" \"rk\")\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n@@ -1909,8 +1909,8 @@\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk,w\")\n-\t(minus:DI (match_operand:DI 1 \"register_operand\" \"r,w\")\n-\t\t   (match_operand:DI 2 \"register_operand\" \"r,w\")))]\n+\t(minus:DI (match_operand:DI 1 \"register_operand\" \"rk,w\")\n+\t\t  (match_operand:DI 2 \"register_operand\" \"r,w\")))]\n   \"\"\n   \"@\n    sub\\\\t%x0, %x1, %x2\n@@ -2013,7 +2013,7 @@\n \n (define_insn \"*sub_<optab><ALLX:mode>_<GPI:mode>\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=rk\")\n-\t(minus:GPI (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t(minus:GPI (match_operand:GPI 1 \"register_operand\" \"rk\")\n \t\t   (ANY_EXTEND:GPI\n \t\t    (match_operand:ALLX 2 \"register_operand\" \"r\"))))]\n   \"\"\n@@ -2025,7 +2025,7 @@\n (define_insn \"*sub_<optab><SHORT:mode>_si_uxtw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk\")\n \t(zero_extend:DI\n-         (minus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+         (minus:SI (match_operand:SI 1 \"register_operand\" \"rk\")\n \t\t   (ANY_EXTEND:SI\n \t\t    (match_operand:SHORT 2 \"register_operand\" \"r\")))))]\n   \"\"\n@@ -2035,7 +2035,7 @@\n \n (define_insn \"*sub_<optab><ALLX:mode>_shft_<GPI:mode>\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=rk\")\n-\t(minus:GPI (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t(minus:GPI (match_operand:GPI 1 \"register_operand\" \"rk\")\n \t\t   (ashift:GPI (ANY_EXTEND:GPI\n \t\t\t\t(match_operand:ALLX 2 \"register_operand\" \"r\"))\n \t\t\t       (match_operand 3 \"aarch64_imm3\" \"Ui3\"))))]\n@@ -2048,7 +2048,7 @@\n (define_insn \"*sub_<optab><SHORT:mode>_shft_si_uxtw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk\")\n \t(zero_extend:DI\n-         (minus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+         (minus:SI (match_operand:SI 1 \"register_operand\" \"rk\")\n \t\t   (ashift:SI (ANY_EXTEND:SI\n \t\t\t       (match_operand:SHORT 2 \"register_operand\" \"r\"))\n \t\t\t      (match_operand 3 \"aarch64_imm3\" \"Ui3\")))))]\n@@ -2059,7 +2059,7 @@\n \n (define_insn \"*sub_<optab><mode>_multp2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=rk\")\n-\t(minus:GPI (match_operand:GPI 4 \"register_operand\" \"r\")\n+\t(minus:GPI (match_operand:GPI 4 \"register_operand\" \"rk\")\n \t\t   (ANY_EXTRACT:GPI\n \t\t    (mult:GPI (match_operand:GPI 1 \"register_operand\" \"r\")\n \t\t\t      (match_operand 2 \"aarch64_pwr_imm3\" \"Up3\"))\n@@ -2074,7 +2074,7 @@\n (define_insn \"*sub_<optab>si_multp2_uxtw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk\")\n \t(zero_extend:DI\n-         (minus:SI (match_operand:SI 4 \"register_operand\" \"r\")\n+         (minus:SI (match_operand:SI 4 \"register_operand\" \"rk\")\n \t\t   (ANY_EXTRACT:SI\n \t\t    (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t     (match_operand 2 \"aarch64_pwr_imm3\" \"Up3\"))\n@@ -2113,7 +2113,7 @@\n \n (define_insn \"*sub_uxt<mode>_multp2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=rk\")\n-\t(minus:GPI (match_operand:GPI 4 \"register_operand\" \"r\")\n+\t(minus:GPI (match_operand:GPI 4 \"register_operand\" \"rk\")\n \t\t   (and:GPI\n \t\t    (mult:GPI (match_operand:GPI 1 \"register_operand\" \"r\")\n \t\t\t      (match_operand 2 \"aarch64_pwr_imm3\" \"Up3\"))\n@@ -2130,7 +2130,7 @@\n (define_insn \"*sub_uxtsi_multp2_uxtw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=rk\")\n \t(zero_extend:DI\n-         (minus:SI (match_operand:SI 4 \"register_operand\" \"r\")\n+         (minus:SI (match_operand:SI 4 \"register_operand\" \"rk\")\n \t\t   (and:SI\n \t\t    (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t     (match_operand 2 \"aarch64_pwr_imm3\" \"Up3\"))"}, {"sha": "e13ef893e3893aa8da7a6eae7b3e0fd9c5ac0be5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "patch": "@@ -1,3 +1,7 @@\n+2015-01-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/subsp.c: New test.\n+\n 2015-01-13  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/aarch64/store-pair-1.c: New testcase."}, {"sha": "70d848c59d1f1e4df4314ca012c7a5d9d3b91ebc", "filename": "gcc/testsuite/gcc.target/aarch64/subsp.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb8fb77fae9189b159424dacb060d3b1ca5a66d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubsp.c?ref=7eb8fb77fae9189b159424dacb060d3b1ca5a66d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-O\" } */\n+\n+int foo (void *);\n+\n+int\n+f1 (int *x, long y)\n+{\n+  return foo (__builtin_alloca (y));\n+}\n+\n+int\n+f2 (int *x, int y)\n+{\n+  char a[y + 1][16];\n+  return foo (a);\n+}\n+\n+/* { dg-final { scan-assembler \"sub\\tsp, sp, x\\[0-9\\]*\\n\" } } */\n+/* { dg-final { scan-assembler \"sub\\tsp, sp, x\\[0-9\\]*, sxtw 4\\n\" } } */"}]}