{"sha": "fcda200251c29f9c6c574b9b1db0523021df9578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNkYTIwMDI1MWMyOWY5YzZjNTc0YjliMWRiMDUyMzAyMWRmOTU3OA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2005-04-21T00:22:54Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-04-21T00:22:54Z"}, "message": "gcj.texi: Fix typos and bogus example.\n\n2005-04-20  Bryce McKinlay  <mckinlay@redhat.com>\n\n   * gcj.texi: Fix typos and bogus example.\n\nFrom-SVN: r98478", "tree": {"sha": "1048d5a5f4309930cab33aaa85ad2b8f5054e048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1048d5a5f4309930cab33aaa85ad2b8f5054e048"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcda200251c29f9c6c574b9b1db0523021df9578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcda200251c29f9c6c574b9b1db0523021df9578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcda200251c29f9c6c574b9b1db0523021df9578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcda200251c29f9c6c574b9b1db0523021df9578/comments", "author": null, "committer": null, "parents": [{"sha": "ed187ee15b3645c0225bbf4f9910d297831de077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed187ee15b3645c0225bbf4f9910d297831de077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed187ee15b3645c0225bbf4f9910d297831de077"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "e7a814af80fd5c84093476d6f0aa5b7062ae5bb1", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcda200251c29f9c6c574b9b1db0523021df9578/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcda200251c29f9c6c574b9b1db0523021df9578/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=fcda200251c29f9c6c574b9b1db0523021df9578", "patch": "@@ -1,3 +1,7 @@\n+2005-04-20  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gcj.texi: Fix typos and bogus example.\n+\n 2005-04-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* except.c: Fix a comment typo."}, {"sha": "1af66900bce451b3ce65d9dae92e8b7523fe30f1", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcda200251c29f9c6c574b9b1db0523021df9578/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcda200251c29f9c6c574b9b1db0523021df9578/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=fcda200251c29f9c6c574b9b1db0523021df9578", "patch": "@@ -1546,7 +1546,7 @@ management, but this is invisible to the application, and the\n reference to the object points to the dispatch table pointer.)\n \n The fields are laid out in the same order, alignment, and size as in\n-C++.  Specifically, 8-bite and 16-bit native types (@code{byte},\n+C++.  Specifically, 8-bit and 16-bit native types (@code{byte},\n @code{short}, @code{char}, and @code{boolean}) are @emph{not} widened\n to 32 bits.  Note that the Java VM does extend 8-bit and 16-bit types\n to 32 bits when on the VM stack or temporary registers.\n@@ -1560,7 +1560,7 @@ public class Int\n @{\n   public int i;\n   public Integer (int i) @{ this.i = i; @}\n-  public static zero = new Integer(0);\n+  public static Int zero = new Int(0);\n @}\n @end example\n \n@@ -1630,7 +1630,7 @@ it is safe to leave it out).\n \n Accessing a static field also requires the class of the\n field to be initialized.  The Java compiler will generate code\n-to call @code{Jv_InitClass} before getting or setting the field.\n+to call @code{JvInitClass} before getting or setting the field.\n However, the C++ compiler will not generate this extra code,\n so it is your responsibility to make sure the class is\n initialized before you access a static field from C++."}]}