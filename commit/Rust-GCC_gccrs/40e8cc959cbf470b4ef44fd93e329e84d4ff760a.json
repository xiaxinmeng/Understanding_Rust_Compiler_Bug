{"sha": "40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBlOGNjOTU5Y2JmNDcwYjRlZjQ0ZmQ5M2UzMjllODRkNGZmNzYwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-08-24T20:39:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-24T20:39:11Z"}, "message": "dwarf2out.c (AT_flag, [...]): Abort on unsuitable input.\n\n        * dwarf2out.c (AT_flag, AT_int, AT_unsigned, AT_string, AT_ref,\n        AT_loc, AT_addr, AT_lbl): Abort on unsuitable input.\n        (get_AT_low_pc, get_AT_hi_pc, get_AT_string, get_AT_flag,\n        get_AT_unsigned, get_AT_ref): Don't call them if get_AT fails.\n\nFrom-SVN: r35953", "tree": {"sha": "3a2e192e5f61eaeec887199358a87766daf1c513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a2e192e5f61eaeec887199358a87766daf1c513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e8cc959cbf470b4ef44fd93e329e84d4ff760a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e2aa220c079f5915a1a5a7397bdfd4b4ae54750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2aa220c079f5915a1a5a7397bdfd4b4ae54750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2aa220c079f5915a1a5a7397bdfd4b4ae54750"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "29a0c03de9c6ded9ec6052599ef622a420ffd9c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e8cc959cbf470b4ef44fd93e329e84d4ff760a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e8cc959cbf470b4ef44fd93e329e84d4ff760a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "patch": "@@ -1,3 +1,10 @@\n+2000-08-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (AT_flag, AT_int, AT_unsigned, AT_string, AT_ref,\n+\tAT_loc, AT_addr, AT_lbl): Abort on unsuitable input.\n+\t(get_AT_low_pc, get_AT_hi_pc, get_AT_string, get_AT_flag, \n+\tget_AT_unsigned, get_AT_ref): Don't call them if get_AT fails.\n+\n 2000-08-24  Greg McGary  <greg@mcgary.org>\n \n \t* optabs.c (init_optabs): Initialize fixtab, fixtrunctab, floattab,"}, {"sha": "11e93026c97d95b798ad9b30fb0a007cdb967b4f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e8cc959cbf470b4ef44fd93e329e84d4ff760a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e8cc959cbf470b4ef44fd93e329e84d4ff760a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=40e8cc959cbf470b4ef44fd93e329e84d4ff760a", "patch": "@@ -4125,7 +4125,7 @@ AT_flag (a)\n   if (a && AT_class (a) == dw_val_class_flag)\n     return a->dw_attr_val.v.val_flag;\n \n-  return 0;\n+  abort ();\n }\n \n /* Add a signed integer attribute value to a DIE.  */\n@@ -4153,7 +4153,7 @@ AT_int (a)\n   if (a && AT_class (a) == dw_val_class_const)\n     return a->dw_attr_val.v.val_int;\n \n-  return 0;\n+  abort ();\n }\n \n /* Add an unsigned integer attribute value to a DIE.  */\n@@ -4181,7 +4181,7 @@ AT_unsigned (a)\n   if (a && AT_class (a) == dw_val_class_unsigned_const)\n     return a->dw_attr_val.v.val_unsigned;\n \n-  return 0;\n+  abort ();\n }\n \n /* Add an unsigned double integer attribute value to a DIE.  */\n@@ -4247,7 +4247,7 @@ AT_string (a)\n   if (a && AT_class (a) == dw_val_class_str)\n     return a->dw_attr_val.v.val_str;\n \n-  return NULL;\n+  abort ();\n }\n \n /* Add a DIE reference attribute value to a DIE.  */\n@@ -4275,7 +4275,7 @@ AT_ref (a)\n   if (a && AT_class (a) == dw_val_class_die_ref)\n     return a->dw_attr_val.v.val_die_ref;\n \n-  return NULL;\n+  abort ();\n }\n \n /* Add an FDE reference attribute value to a DIE.  */\n@@ -4320,7 +4320,7 @@ AT_loc (a)\n   if (a && AT_class (a) == dw_val_class_loc)\n     return a->dw_attr_val.v.val_loc;\n \n-  return NULL;\n+  abort ();\n }\n \n /* Add an address constant attribute value to a DIE.  */\n@@ -4348,7 +4348,7 @@ AT_addr (a)\n   if (a && AT_class (a) == dw_val_class_addr)\n     return a->dw_attr_val.v.val_addr;\n \n-  return NULL;\n+  abort ();\n }\n \n /* Add a label identifier attribute value to a DIE.  */\n@@ -4394,7 +4394,7 @@ AT_lbl (a)\n \t    || AT_class (a) == dw_val_class_lbl_offset))\n     return a->dw_attr_val.v.val_lbl_id;\n \n-  return NULL;\n+  abort ();\n }\n \n /* Get the attribute of type attr_kind.  */\n@@ -4436,7 +4436,7 @@ get_AT_low_pc (die)\n      register dw_die_ref die;\n {\n   register dw_attr_ref a = get_AT (die, DW_AT_low_pc);\n-  return AT_lbl (a);\n+  return a ? AT_lbl (a) : NULL;\n }\n \n /* Return the \"high pc\" attribute value, typically associated with\n@@ -4449,7 +4449,7 @@ get_AT_hi_pc (die)\n      register dw_die_ref die;\n {\n   register dw_attr_ref a = get_AT (die, DW_AT_high_pc);\n-  return AT_lbl (a);\n+  return a ? AT_lbl (a) : NULL;\n }\n \n /* Return the value of the string attribute designated by ATTR_KIND, or\n@@ -4461,7 +4461,7 @@ get_AT_string (die, attr_kind)\n      register enum dwarf_attribute attr_kind;\n {\n   register dw_attr_ref a = get_AT (die, attr_kind);\n-  return AT_string (a);\n+  return a ? AT_string (a) : NULL;\n }\n \n /* Return the value of the flag attribute designated by ATTR_KIND, or -1\n@@ -4473,7 +4473,7 @@ get_AT_flag (die, attr_kind)\n      register enum dwarf_attribute attr_kind;\n {\n   register dw_attr_ref a = get_AT (die, attr_kind);\n-  return AT_flag (a);\n+  return a ? AT_flag (a) : 0;\n }\n \n /* Return the value of the unsigned attribute designated by ATTR_KIND, or 0\n@@ -4485,7 +4485,7 @@ get_AT_unsigned (die, attr_kind)\n      register enum dwarf_attribute attr_kind;\n {\n   register dw_attr_ref a = get_AT (die, attr_kind);\n-  return AT_unsigned (a);\n+  return a ? AT_unsigned (a) : 0;\n }\n \n static inline dw_die_ref\n@@ -4494,7 +4494,7 @@ get_AT_ref (die, attr_kind)\n      register enum dwarf_attribute attr_kind;\n {\n   register dw_attr_ref a = get_AT (die, attr_kind);\n-  return AT_ref (a);\n+  return a ? AT_ref (a) : NULL;\n }\n \n static inline int"}]}