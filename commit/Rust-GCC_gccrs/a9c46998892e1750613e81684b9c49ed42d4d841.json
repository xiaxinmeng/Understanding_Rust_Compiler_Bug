{"sha": "a9c46998892e1750613e81684b9c49ed42d4d841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTljNDY5OTg4OTJlMTc1MDYxM2U4MTY4NGI5YzQ5ZWQ0MmQ0ZDg0MQ==", "commit": {"author": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2006-06-18T10:30:23Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2006-06-18T10:30:23Z"}, "message": "bfin.h (REG_CLASS_FROM_LETTER): Rename constraint 'B' to 'v', 'l' to 'u'.\n\n\t* config/bfin/bfin.h (REG_CLASS_FROM_LETTER): Rename constraint 'B'\n\tto 'v', 'l' to 'u'.\n\t* config/bfin/bfin.md: Change comment accordingly.\n\t(define_insn loop_end): Replace 'h' with 'v'.\n\t(lsetup_with_autoinit): Replace 'l' with 'u'. \n\t(lsetup_without_autoinit): Ditto.\n\t* md.texi: Record this change.\n\nFrom-SVN: r114756", "tree": {"sha": "efcb349f12c5433582d3e4c64b07b9942fd35048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efcb349f12c5433582d3e4c64b07b9942fd35048"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9c46998892e1750613e81684b9c49ed42d4d841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c46998892e1750613e81684b9c49ed42d4d841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9c46998892e1750613e81684b9c49ed42d4d841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c46998892e1750613e81684b9c49ed42d4d841/comments", "author": null, "committer": null, "parents": [{"sha": "40327e038eae1936afa50e84f02b25ef8f2d3b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40327e038eae1936afa50e84f02b25ef8f2d3b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40327e038eae1936afa50e84f02b25ef8f2d3b85"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "1631a3797e1a6e5efa9e39e61cf2c816f0796143", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=a9c46998892e1750613e81684b9c49ed42d4d841", "patch": "@@ -548,13 +548,13 @@ enum reg_class\n    (LETTER) == 'A' ? EVEN_AREGS : \t\\\n    (LETTER) == 'B' ? ODD_AREGS : \t\\\n    (LETTER) == 'b' ? IREGS :            \\\n-   (LETTER) == 'B' ? BREGS :            \\\n+   (LETTER) == 'v' ? BREGS :            \\\n    (LETTER) == 'f' ? MREGS : \t\t\\\n    (LETTER) == 'c' ? CIRCREGS :         \\\n    (LETTER) == 'C' ? CCREGS : \t\t\\\n    (LETTER) == 't' ? LT_REGS : \t\t\\\n    (LETTER) == 'k' ? LC_REGS : \t\t\\\n-   (LETTER) == 'l' ? LB_REGS : \t\t\\\n+   (LETTER) == 'u' ? LB_REGS : \t\t\\\n    (LETTER) == 'x' ? MOST_REGS :\t\\\n    (LETTER) == 'y' ? PROLOGUE_REGS :\t\\\n    (LETTER) == 'w' ? NON_A_CC_REGS :\t\\"}, {"sha": "c22663cf9716342848bf27f5c285e45d0987151b", "filename": "gcc/config/bfin/bfin.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fconfig%2Fbfin%2Fbfin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fconfig%2Fbfin%2Fbfin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.md?ref=a9c46998892e1750613e81684b9c49ed42d4d841", "patch": "@@ -46,12 +46,12 @@\n ;     e  (a0, a1)\n ;     b  (i0..i3)\n ;     f  (m0..m3)\n-;     B\n-;     c (i0..i3,m0..m3) CIRCREGS\n-;     C (CC)            CCREGS\n+;     v  (b0..b3)\n+;     c  (i0..i3,m0..m3) CIRCREGS\n+;     C  (CC)            CCREGS\n ;     t  (lt0,lt1)\n ;     k  (lc0,lc1)\n-;     l  (lb0,lb1)\n+;     u  (lb0,lb1)\n ;\n \n ;; Define constants for hard registers.\n@@ -1555,7 +1555,7 @@\n \n (define_insn \"loop_end\"\n   [(set (pc)\n-\t(if_then_else (ne (match_operand:SI 0 \"nonimmediate_operand\" \"+a*d,*b*h*f,m\")\n+\t(if_then_else (ne (match_operand:SI 0 \"nonimmediate_operand\" \"+a*d,*b*v*f,m\")\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))\n@@ -1597,7 +1597,7 @@\n (define_insn \"lsetup_with_autoinit\"\n   [(set (match_operand:SI 0 \"lt_register_operand\" \"=t\")\n \t(label_ref (match_operand 1 \"\" \"\")))\n-   (set (match_operand:SI 2 \"lb_register_operand\" \"=l\")\n+   (set (match_operand:SI 2 \"lb_register_operand\" \"=u\")\n \t(label_ref (match_operand 3 \"\" \"\")))\n    (set (match_operand:SI 4 \"lc_register_operand\" \"=k\")\n \t(match_operand:SI 5 \"register_operand\" \"a\"))]\n@@ -1608,7 +1608,7 @@\n (define_insn \"lsetup_without_autoinit\"\n   [(set (match_operand:SI 0 \"lt_register_operand\" \"=t\")\n \t(label_ref (match_operand 1 \"\" \"\")))\n-   (set (match_operand:SI 2 \"lb_register_operand\" \"=l\")\n+   (set (match_operand:SI 2 \"lb_register_operand\" \"=u\")\n \t(label_ref (match_operand 3 \"\" \"\")))\n    (use (match_operand:SI 4 \"lc_register_operand\" \"k\"))]\n   \"\""}, {"sha": "60ad8bc3f21047409fb24415b2160cade2895c3a", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c46998892e1750613e81684b9c49ed42d4d841/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=a9c46998892e1750613e81684b9c49ed42d4d841", "patch": "@@ -2172,7 +2172,7 @@ Odd-numbered accumulator register.\n @item b\n I register\n \n-@item B\n+@item v\n B register\n \n @item f\n@@ -2184,6 +2184,15 @@ Registers used for circular buffering, i.e. I, B, or L registers.\n @item C\n The CC register.\n \n+@item t\n+LT0 or LT1.\n+\n+@item k\n+LC0 or LC1.\n+\n+@item u\n+LB0 or LB1.\n+\n @item x\n Any D, P, B, M, I or L register.\n "}]}