{"sha": "334737afb7f669464b04246783ba48b777f1e809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0NzM3YWZiN2Y2Njk0NjRiMDQyNDY3ODNiYTQ4Yjc3N2YxZTgwOQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "andrew.stubbs@st.com", "date": "2006-11-30T17:05:45Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2006-11-30T17:05:45Z"}, "message": "re PR driver/29931 (following argv[0] symlink in process_command breaks symlinked-together toolchain)\n\ninclude:\n2006-05-03  Andrew Stubbs  <andrew.stubbs@st.com>\n            J\"orn Rennecke <joern.rennecke@st.com>\n\n\tPR driver/29931\n\t* libiberty.h (make_relative_prefix_ignore_links): Declare.\n\nlibiberty:\n2006-05-03  Andrew Stubbs  <andrew.stubbs@st.com>\n            J\"orn Rennecke <joern.rennecke@st.com>\n\n\tPR driver/29931\n\t* make-relative-prefix.c (make_relative_prefix_1): New function,\n\tbroken out of make_relative_prefix.  Make link resolution dependent\n\ton new parameter.\n\t(make_relative_prefix): Use make_relative_prefix_1.\n\t(make_relative_prefix_ignore_links): New function.\n\nCo-Authored-By: J\"orn Rennecke <joern.rennecke@st.com>\n\nFrom-SVN: r119366", "tree": {"sha": "dfab9db15a2a570a363138a02582f20e1f90f56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfab9db15a2a570a363138a02582f20e1f90f56b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/334737afb7f669464b04246783ba48b777f1e809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334737afb7f669464b04246783ba48b777f1e809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/334737afb7f669464b04246783ba48b777f1e809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334737afb7f669464b04246783ba48b777f1e809/comments", "author": null, "committer": null, "parents": [{"sha": "456cde303058f8e7a01ff00e12bddba44a1bac75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/456cde303058f8e7a01ff00e12bddba44a1bac75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/456cde303058f8e7a01ff00e12bddba44a1bac75"}], "stats": {"total": 72, "additions": 65, "deletions": 7}, "files": [{"sha": "017d3fd30b5cbeac948461bce84f096d245a4937", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334737afb7f669464b04246783ba48b777f1e809/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334737afb7f669464b04246783ba48b777f1e809/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=334737afb7f669464b04246783ba48b777f1e809", "patch": "@@ -1,3 +1,9 @@\n+2006-11-30  Andrew Stubbs  <andrew.stubbs@st.com>\n+            J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\tPR driver/29931\n+\t* libiberty.h (make_relative_prefix_ignore_links): Declare.\n+\n 2006-11-27  Bob Wilson  <bob.wilson@acm.org>\n \n \t* xtensa-config.h (XSHAL_ABI): New."}, {"sha": "27291c988681629ac25aeeff0199af1ecc25166f", "filename": "include/libiberty.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334737afb7f669464b04246783ba48b777f1e809/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334737afb7f669464b04246783ba48b777f1e809/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=334737afb7f669464b04246783ba48b777f1e809", "patch": "@@ -197,6 +197,13 @@ extern long get_run_time (void);\n extern char *make_relative_prefix (const char *, const char *,\n                                    const char *) ATTRIBUTE_MALLOC;\n \n+/* Generate a relocated path to some installation directory without\n+   attempting to follow any soft links.  Allocates\n+   return value using malloc.  */\n+\n+extern char *make_relative_prefix_ignore_links (const char *, const char *,\n+\t\t\t\t\t\tconst char *) ATTRIBUTE_MALLOC;\n+\n /* Choose a temporary directory to use for scratch files.  */\n \n extern char *choose_temp_base (void) ATTRIBUTE_MALLOC;"}, {"sha": "4b27eb05bacf84f9744d75b2b4a4a14c30da3246", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334737afb7f669464b04246783ba48b777f1e809/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334737afb7f669464b04246783ba48b777f1e809/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=334737afb7f669464b04246783ba48b777f1e809", "patch": "@@ -1,3 +1,13 @@\n+2006-11-30  Andrew Stubbs  <andrew.stubbs@st.com>\n+            J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\tPR driver/29931\n+\t* make-relative-prefix.c (make_relative_prefix_1): New function,\n+\tbroken out of make_relative_prefix.  Make link resolution dependent\n+\ton new parameter.\n+\t(make_relative_prefix): Use make_relative_prefix_1.\n+\t(make_relative_prefix_ignore_links): New function.\n+\n 2006-11-08  Vladimir Prus  <vladimir@codesourcery.com>\n \n \t* pex-win32.c (no_suffixes): Remove."}, {"sha": "4116ec9963fb3f6fb20c1889bc99e30ed2fed0ef", "filename": "libiberty/make-relative-prefix.c", "status": "modified", "additions": 42, "deletions": 7, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334737afb7f669464b04246783ba48b777f1e809/libiberty%2Fmake-relative-prefix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334737afb7f669464b04246783ba48b777f1e809/libiberty%2Fmake-relative-prefix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmake-relative-prefix.c?ref=334737afb7f669464b04246783ba48b777f1e809", "patch": "@@ -1,6 +1,6 @@\n /* Relative (relocatable) prefix support.\n    Copyright (C) 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2006 Free Software Foundation, Inc.\n \n This file is part of libiberty.\n \n@@ -217,9 +217,9 @@ free_split_directories (char **dirs)\n \n    If no relative prefix can be found, return NULL.  */\n \n-char *\n-make_relative_prefix (const char *progname,\n-                      const char *bin_prefix, const char *prefix)\n+static char *\n+make_relative_prefix_1 (const char *progname, const char *bin_prefix,\n+\t\t\tconst char *prefix, const int resolve_links)\n {\n   char **prog_dirs, **bin_dirs, **prefix_dirs;\n   int prog_num, bin_num, prefix_num;\n@@ -289,9 +289,14 @@ make_relative_prefix (const char *progname,\n \t}\n     }\n \n-  full_progname = lrealpath (progname);\n-  if (full_progname == NULL)\n-    return NULL;\n+  if ( resolve_links )\n+    {\n+      full_progname = lrealpath (progname);\n+      if (full_progname == NULL)\n+\treturn NULL;\n+    }\n+  else\n+    full_progname = strdup(progname);\n \n   prog_dirs = split_directories (full_progname, &prog_num);\n   bin_dirs = split_directories (bin_prefix, &bin_num);\n@@ -387,3 +392,33 @@ make_relative_prefix (const char *progname,\n \n   return ret;\n }\n+\n+\n+/* Do the full job, including symlink resolution.\n+   This path will find files installed in the same place as the\n+   program even when a soft link has been made to the program\n+   from somwhere else. */\n+\n+char *\n+make_relative_prefix (progname, bin_prefix, prefix)\n+     const char *progname;\n+     const char *bin_prefix;\n+     const char *prefix;\n+{\n+  return make_relative_prefix_1 (progname, bin_prefix, prefix, 1);\n+}\n+\n+/* Make the relative pathname without attempting to resolve any links.\n+   '..' etc may also be left in the pathname.\n+   This will find the files the user meant the program to find if the\n+   installation is patched together with soft links. */\n+\n+char *\n+make_relative_prefix_ignore_links (progname, bin_prefix, prefix)\n+     const char *progname;\n+     const char *bin_prefix;\n+     const char *prefix;\n+{\n+  return make_relative_prefix_1 (progname, bin_prefix, prefix, 0);\n+}\n+"}]}