{"sha": "016895178d73bf9e4b0dea6ed253adea4f9af4f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE2ODk1MTc4ZDczYmY5ZTRiMGRlYTZlZDI1M2FkZWE0ZjlhZjRmOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-24T18:47:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-24T18:47:20Z"}, "message": "re PR c++/60312 ([c++1y] ICE using auto as template parameter)\n\n\tPR c++/60312\n\t* parser.c (cp_parser_template_type_arg): Check for invalid 'auto'.\n\nFrom-SVN: r208092", "tree": {"sha": "e39f9bfa091be6b987210b666a42be5452f1d41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e39f9bfa091be6b987210b666a42be5452f1d41c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/016895178d73bf9e4b0dea6ed253adea4f9af4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016895178d73bf9e4b0dea6ed253adea4f9af4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016895178d73bf9e4b0dea6ed253adea4f9af4f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016895178d73bf9e4b0dea6ed253adea4f9af4f9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad43b47a25f5c4cf66b8604e37e696b7f94a4e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad43b47a25f5c4cf66b8604e37e696b7f94a4e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad43b47a25f5c4cf66b8604e37e696b7f94a4e0e"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "5369ee680cdf93a11d76baac039a9dac22f29c3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=016895178d73bf9e4b0dea6ed253adea4f9af4f9", "patch": "@@ -1,3 +1,8 @@\n+2014-02-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60312\n+\t* parser.c (cp_parser_template_type_arg): Check for invalid 'auto'.\n+\n 2014-02-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/58170"}, {"sha": "d99dff0265c35b29529aef82f596328d5ace1a21", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=016895178d73bf9e4b0dea6ed253adea4f9af4f9", "patch": "@@ -18005,6 +18005,11 @@ static tree cp_parser_template_type_arg (cp_parser *parser)\n     = G_(\"types may not be defined in template arguments\");\n   r = cp_parser_type_id_1 (parser, true, false);\n   parser->type_definition_forbidden_message = saved_message;\n+  if (cxx_dialect >= cxx1y && type_uses_auto (r))\n+    {\n+      error (\"invalid use of %<auto%> in template argument\");\n+      r = error_mark_node;\n+    }\n   return r;\n }\n "}, {"sha": "1bc3995ed07dd6328bd77dc137e5bae68401776a", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-neg1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/016895178d73bf9e4b0dea6ed253adea4f9af4f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-neg1.C?ref=016895178d73bf9e4b0dea6ed253adea4f9af4f9", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/60312\n+// { dg-options -std=c++1y }\n+\n+template<typename> struct A;\n+\n+template<> struct A<auto>\t// { dg-error \"auto|template argument\" }\n+{\n+  template<int> void foo();\n+};\n+\n+void bar()\n+{\n+  A<auto>().foo<0>();\t\t// { dg-error \"auto|template argument\" }\n+}\n+\n+// { dg-prune-output \"expected\" }"}]}