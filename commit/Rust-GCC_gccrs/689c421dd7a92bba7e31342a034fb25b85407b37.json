{"sha": "689c421dd7a92bba7e31342a034fb25b85407b37", "node_id": "C_kwDOANBUbNoAKDY4OWM0MjFkZDdhOTJiYmE3ZTMxMzQyYTAzNGZiMjViODU0MDdiMzc", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-27T09:10:51Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-02-28T17:00:02Z"}, "message": "parser: Parse external type item\n\nAdd the code to parse type item declaration within an extern block.\n\ngcc/rust/ChangeLog:\n\n\t* parse/rust-parse-impl.h (Parser::parse_external_type_item):\n\tAdd function to parser an external type item.\n\t(Parser::parse_external_item):\n\tAdd identification and parsing for external type items.\n\t* parse/rust-parse.h:\n\tAdd parser_external_type_item prototype.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "9e9a92f7040032e5b2622f350f3c59f24e3b8b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e9a92f7040032e5b2622f350f3c59f24e3b8b45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/689c421dd7a92bba7e31342a034fb25b85407b37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689c421dd7a92bba7e31342a034fb25b85407b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/689c421dd7a92bba7e31342a034fb25b85407b37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689c421dd7a92bba7e31342a034fb25b85407b37/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c2ed969a2d58217797cf2e938c0f833a50d7cb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2ed969a2d58217797cf2e938c0f833a50d7cb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2ed969a2d58217797cf2e938c0f833a50d7cb4"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "7988d12309d4f7718eb03c2847be74fee153ce09", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689c421dd7a92bba7e31342a034fb25b85407b37/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689c421dd7a92bba7e31342a034fb25b85407b37/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=689c421dd7a92bba7e31342a034fb25b85407b37", "patch": "@@ -3990,6 +3990,34 @@ Parser<ManagedTokenSource>::parse_lifetime ()\n     }\n }\n \n+template <typename ManagedTokenSource>\n+std::unique_ptr<AST::ExternalTypeItem>\n+Parser<ManagedTokenSource>::parse_external_type_item (AST::Visibility vis,\n+\t\t\t\t\t\t      AST::AttrVec outer_attrs)\n+{\n+  Location locus = lexer.peek_token ()->get_locus ();\n+  skip_token (TYPE);\n+\n+  const_TokenPtr alias_name_tok = expect_token (IDENTIFIER);\n+  if (alias_name_tok == nullptr)\n+    {\n+      Error error (lexer.peek_token ()->get_locus (),\n+\t\t   \"could not parse identifier in external opaque type\");\n+      add_error (std::move (error));\n+\n+      skip_after_semicolon ();\n+      return nullptr;\n+    }\n+\n+  if (!skip_token (SEMICOLON))\n+    return nullptr;\n+\n+  return std::unique_ptr<AST::ExternalTypeItem> (\n+    new AST::ExternalTypeItem (std::move (alias_name_tok->get_str ()),\n+\t\t\t       std::move (vis), std::move (outer_attrs),\n+\t\t\t       std::move (locus)));\n+}\n+\n // Parses a \"type alias\" (typedef) item.\n template <typename ManagedTokenSource>\n std::unique_ptr<AST::TypeAlias>\n@@ -6011,6 +6039,9 @@ Parser<ManagedTokenSource>::parse_external_item ()\n \t    std::move (variadic_attrs), std::move (vis),\n \t    std::move (outer_attrs), locus));\n       }\n+    case TYPE:\n+      return parse_external_type_item (std::move (vis),\n+\t\t\t\t       std::move (outer_attrs));\n     default:\n       // error\n       add_error ("}, {"sha": "42168e961e3d6f31311c2a5f7189df86fff9b945", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689c421dd7a92bba7e31342a034fb25b85407b37/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689c421dd7a92bba7e31342a034fb25b85407b37/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=689c421dd7a92bba7e31342a034fb25b85407b37", "patch": "@@ -273,6 +273,8 @@ template <typename ManagedTokenSource> class Parser\n   template <typename EndTokenPred>\n   std::vector<AST::Lifetime> parse_lifetime_bounds (EndTokenPred is_end_token);\n   AST::Lifetime parse_lifetime ();\n+  std::unique_ptr<AST::ExternalTypeItem>\n+  parse_external_type_item (AST::Visibility vis, AST::AttrVec outer_attrs);\n   std::unique_ptr<AST::TypeAlias> parse_type_alias (AST::Visibility vis,\n \t\t\t\t\t\t    AST::AttrVec outer_attrs);\n   std::unique_ptr<AST::Struct> parse_struct (AST::Visibility vis,"}]}