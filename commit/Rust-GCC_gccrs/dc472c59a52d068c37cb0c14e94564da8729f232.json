{"sha": "dc472c59a52d068c37cb0c14e94564da8729f232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM0NzJjNTlhNTJkMDY4YzM3Y2IwYzE0ZTk0NTY0ZGE4NzI5ZjIzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-09-30T02:41:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-09-30T02:41:39Z"}, "message": "re PR c++/33094 (ICE on valid C++ virtual template static member in anonymous namespace)\n\n        PR c++/33094\n        * decl.c (make_rtl_for_nonlocal_decl): It's ok for a member\n        constant to not have DECL_EXTERNAL if it's file-local.\n\nFrom-SVN: r128890", "tree": {"sha": "f1cf66738af3f8ec706bba8578e57a6acd9d6444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1cf66738af3f8ec706bba8578e57a6acd9d6444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc472c59a52d068c37cb0c14e94564da8729f232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc472c59a52d068c37cb0c14e94564da8729f232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc472c59a52d068c37cb0c14e94564da8729f232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc472c59a52d068c37cb0c14e94564da8729f232/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38b1c01c84ae8dfe52175cf11fce0534c8643af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b1c01c84ae8dfe52175cf11fce0534c8643af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b1c01c84ae8dfe52175cf11fce0534c8643af9"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "5609f1a16266596204ef395b727d4144e73d1381", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dc472c59a52d068c37cb0c14e94564da8729f232", "patch": "@@ -1,3 +1,9 @@\n+2007-09-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/33094\n+\t* decl.c (make_rtl_for_nonlocal_decl): It's ok for a member \n+\tconstant to not have DECL_EXTERNAL if it's file-local.\n+\n 2007-09-28  Ollie Wild  <aaw@google.com>\n \n \tRevert"}, {"sha": "bd9292a5565dc49884e5377b9a249bfb2e381449", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=dc472c59a52d068c37cb0c14e94564da8729f232", "patch": "@@ -3225,7 +3225,11 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n \n /* DECL_EXTERNAL must be set on a decl until the decl is actually emitted,\n    so that assemble_external will work properly.  So we have this flag to\n-   tell us whether the decl is really not external.  */\n+   tell us whether the decl is really not external.\n+\n+   This flag does not indicate whether or not the decl is defined in the\n+   current translation unit; it indicates whether or not we should emit the\n+   decl at the end of compilation if it is defined and needed.  */\n #define DECL_NOT_REALLY_EXTERN(NODE) \\\n   (DECL_LANG_SPECIFIC (NODE)->decl_flags.not_really_extern)\n "}, {"sha": "469e6b836ee33d88c7865a7568b7ae4be06a1eab", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=dc472c59a52d068c37cb0c14e94564da8729f232", "patch": "@@ -5092,7 +5092,7 @@ make_rtl_for_nonlocal_decl (tree decl, tree init, const char* asmspec)\n       /* An in-class declaration of a static data member should be\n \t external; it is only a declaration, and not a definition.  */\n       if (init == NULL_TREE)\n-\tgcc_assert (DECL_EXTERNAL (decl));\n+\tgcc_assert (DECL_EXTERNAL (decl) || !TREE_PUBLIC (decl));\n     }\n \n   /* We don't create any RTL for local variables.  */"}, {"sha": "ce5e52816edce7a2154c4c049e311d9e9df88c25", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=dc472c59a52d068c37cb0c14e94564da8729f232", "patch": "@@ -1314,6 +1314,9 @@ coerce_delete_type (tree type)\n   return type;\n }\n \f\n+/* DECL is a VAR_DECL for a vtable: walk through the entries in the vtable\n+   and mark them as needed.  */\n+\n static void\n mark_vtable_entries (tree decl)\n {"}, {"sha": "951de4964e4fa4bbd6c8b48e2b0afe1415f5491c", "filename": "gcc/testsuite/g++.dg/ext/visibility/anon6.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc472c59a52d068c37cb0c14e94564da8729f232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon6.C?ref=dc472c59a52d068c37cb0c14e94564da8729f232", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/33094\n+// { dg-final { scan-assembler \"1BIiE1cE\" } }\n+// { dg-final { scan-assembler-not \"globl.*1BIiE1cE\" } }\n+// { dg-final { scan-assembler-not \"1CIiE1cE\" } }\n+\n+// Test that B<int>::c is emitted as an internal symbol, and C<int>::c is\n+// not emitted.\n+\n+namespace\n+{\n+  template <typename T>\n+  class A\n+  {\n+    virtual T f1() { return c; }\n+    static const T c = 0;\n+  };\n+\n+  template <typename T>\n+  class B\n+  {\n+    static const T c = 0;\n+  };\n+\n+  template <typename T> const T B<T>::c;\n+\n+  template class A<int>;\n+  template class B<int>;\n+}"}]}