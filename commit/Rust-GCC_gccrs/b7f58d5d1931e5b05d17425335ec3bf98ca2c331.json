{"sha": "b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdmNThkNWQxOTMxZTViMDVkMTc0MjUzMzVlYzNiZjk4Y2EyYzMzMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-10-08T15:03:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-10-08T15:03:55Z"}, "message": "i386.md (*jcc_btdi_rex64): Clobber FLAGS_REG.\n\n\t* config/i386/i386.md (*jcc_btdi_rex64): Clobber FLAGS_REG.\n\t(*jcc_btdi_mask_rex64): Ditto.\n\t(*jcc_btsi): Ditto.\n\t(*jcc_btsi_mask): Ditto.\n\t(*jcc_btsi_1): Ditto.\n\t(*jcc_btsi_mask_1): Ditto.\n\nFrom-SVN: r140976", "tree": {"sha": "2f1cfbd343b964abcd3369ffcb1bb06474d8c12e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f1cfbd343b964abcd3369ffcb1bb06474d8c12e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f58d5d1931e5b05d17425335ec3bf98ca2c331/comments", "author": null, "committer": null, "parents": [{"sha": "a7e8c6529f38a95a89c7b3a19a309401ffa7b6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e8c6529f38a95a89c7b3a19a309401ffa7b6d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e8c6529f38a95a89c7b3a19a309401ffa7b6d4"}], "stats": {"total": 78, "additions": 43, "deletions": 35}, "files": [{"sha": "3894a24ec0168202ce50bd2a4fe88f3ae9f639ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f58d5d1931e5b05d17425335ec3bf98ca2c331/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f58d5d1931e5b05d17425335ec3bf98ca2c331/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "patch": "@@ -1,3 +1,12 @@\n+2008-10-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*jcc_btdi_rex64): Clobber FLAGS_REG.\n+\t(*jcc_btdi_mask_rex64): Ditto.\n+\t(*jcc_btsi): Ditto.\n+\t(*jcc_btsi_mask): Ditto.\n+\t(*jcc_btsi_1): Ditto.\n+\t(*jcc_btsi_mask_1): Ditto.\n+\n 2008-10-08  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/bpabi.h (ARM_FUNCTION_PROFILER): Define new EABI\n@@ -41,13 +50,15 @@\n 2008-10-07  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR rtl-optimization/37448\n-\talloc_pool_desc (elt_size): New field.\n-\talloc_pool_desc (created, allocated, current, peak): Make unsigned\n-\tlong.\n-\toutput_info (count): Renamed total_created and made unsigned long.\n-\toutput_info (size): Renamed total_allocated and made unsigned long.\n-\talloc-pool.c (create_alloc_pool, empty_alloc_pool, pool_alloc,\n-\tpool_free): Properly keep track of desc->size.\n+\t* alloc-pool.c (struct alloc_pool_descriptor) [elt_size]: New field.\n+\t(stuct alloc_pool_descriptor) [created, allocated, current, peak]:\n+\tMake unsigned long.\n+\t(struct output_info) [count]: Renamed total_created and made\n+\tunsigned long.\n+\t(struct output_info) [size]: Renamed total_allocated and made\n+\tunsigned long.\n+\t(create_alloc_pool, empty_alloc_pool, pool_alloc, pool_free):\n+\tProperly keep track of desc->size.\n \t(print_statistics, dump_alloc_pool_statistics): Enhance the\n \tprinting of statistics to print the number of elements and to use\n \tunsigned longs.\n@@ -273,8 +284,7 @@\n \t(print_operand_address): Always use output_addr_const for\n \tconstant pool addresses.\n \t(rs6000_output_addr_const_extra): New function.\n-\t(create_TOC_reference): Create an UNSPEC_TOCREL instead of\n-\ta MINUS.\n+\t(create_TOC_reference): Create an UNSPEC_TOCREL instead of a MINUS.\n \n 2008-10-06  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -376,10 +386,8 @@\n \t* config/rs6000/rs6000.c (USE_FP_FOR_ARG_P): Revert\n \tTARGET_DOUBLE_FLOAT, TARGET_SINGLE_FLOAT.\n \t(function_arg_advance): Condition on TARGET_DOUBLE_FLOAT,\n-\tTARGET_SINGLE_FLOAT.\n-\tRevert SCALAR_FLOAT_MODE_P condition.\n-\t(function_arg): Condition on TARGET_DOUBLE_FLOAT,\n-\tTARGET_SINGLE_FLOAT.\n+\tTARGET_SINGLE_FLOAT.  Revert SCALAR_FLOAT_MODE_P condition.\n+\t(function_arg): Condition on TARGET_DOUBLE_FLOAT, TARGET_SINGLE_FLOAT.\n \t(rs6000_function_value): Revert TARGET_DOUBLE_FLOAT,\n \tTARGET_SINGLE_FLOAT.\n \n@@ -419,8 +427,8 @@\n \t(vec_promote): Define.\n \n 2008-10-01  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n-            Yukishige Shibata  <shibata@rd.scei.sony.co.jp>\n-            Trevor Smigiel  <Trevor_Smigiel@playstation.sony.com>\n+\t    Yukishige Shibata  <shibata@rd.scei.sony.co.jp>\n+\t    Trevor Smigiel  <Trevor_Smigiel@playstation.sony.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add Cell\n \tAltivec intrinsics.\n@@ -1027,8 +1035,8 @@\n 2008-09-22  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.h (ISA_HAS_BADDU): New macro.\n-\t* config/mips/mips.md (*baddu_si_eb, *baddu_si_el,\n-\t*baddu_di<mode>): New patterns.\n+\t* config/mips/mips.md (*baddu_si_eb, *baddu_si_el, *baddu_di<mode>):\n+\tNew patterns.\n \n 2008-09-22  Richard Guenther  <rguenther@suse.de>\n \n@@ -1061,8 +1069,7 @@\n \tPR target/37528\t\n \t* config/i386/t-cygming (SHLIB_LC): Remove.\n \t(SHLIB_LINK): Don't add static objects to SHLIB_IMPLIB\n-\t* config/i386/t-cygwin (SHLIB_LC): Specify all required\n-\tlibraries.\n+\t* config/i386/t-cygwin (SHLIB_LC): Specify all required libraries.\n \n 2008-09-22  Hans-Peter Nilsson  <hp@axis.com>\n \n@@ -1122,8 +1129,7 @@\n \t(SSA Operands): Rename from 'Statement Operands'.\n \t* doc/generic.texi: New.\n \t* doc/gimple.texi: New.\n-\t* Makefile.in (TEXI_GCCINT_FILES): Add generic.texi and\n-\tgimple.texi.\n+\t* Makefile.in (TEXI_GCCINT_FILES): Add generic.texi and gimple.texi.\n \t* Makefile.in (TEXI_GCCINT_FILES):\n \t* gimple.c (gimple_copy_call_skip_args): Rename from\n \tgiple_copy_call_skip_args.  Update all users.\n@@ -1400,8 +1406,7 @@\n 2008-09-18  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR middle-end/37499\n-\t* sched-int.h (struct _haifa_insn_data): Remove unused field\n-\tref_count.\n+\t* sched-int.h (struct _haifa_insn_data): Remove unused field ref_count.\n \n \t* sched-rgn.c (ref_counts): Remove.\n \t(insn_referenced): New static variable.\n@@ -1415,8 +1420,7 @@\n \t* haifa-sched.c (dep_cost_1): Recognize the producer even if the\n \tconsumer is an asm.  Add comment why this is important.\n \t(choose_ready): Add comment to the \"INSN_CODE (insn) >= 0 ||\n-\trecog_memoized (insn) < 0\" assert.  Put ENABLE_CHECKING around\n-\tit.\n+\trecog_memoized (insn) < 0\" assert.  Put ENABLE_CHECKING around it.\n \n 2008-09-17  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -2725,10 +2729,8 @@\n \n \t* ira-emit.c (change_loop): Use all_allocnos.\n \n-\t* ira-build.c (create_loop_tree_nodes, finish_loop_tree_node):\n-\tDitto.\n-\t(ira_create_allocno): Set up all_allocnos bit for the created\n-\tallocno.\n+\t* ira-build.c (create_loop_tree_nodes, finish_loop_tree_node): Ditto.\n+\t(ira_create_allocno): Set up all_allocnos bit for the created allocno.\n \t(create_cap_allocno): Remove setting mentioned_allocnos.\n \t(create_insn_allocnos): Ditto.\n \t(remove_unnecessary_allocnos): Use all_allocnos."}, {"sha": "9d1a01a8e69cf9f33b2facfa5de0956bc07e85fd", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f58d5d1931e5b05d17425335ec3bf98ca2c331/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f58d5d1931e5b05d17425335ec3bf98ca2c331/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b7f58d5d1931e5b05d17425335ec3bf98ca2c331", "patch": "@@ -14334,7 +14334,8 @@\n \t\t\t     (match_operand:QI 2 \"register_operand\" \"r\")))\n \t\t\t (const_int 0)])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n-\t\t      (pc)))]\n+\t\t      (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && (TARGET_USE_BT || optimize_function_for_size_p (cfun))\"\n   \"#\"\n   \"&& 1\"\n@@ -14366,7 +14367,8 @@\n \t\t\t     (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t     (match_operand:SI 3 \"const_int_operand\" \"n\")))])\n \t\t      (label_ref (match_operand 4 \"\" \"\"))\n-\t\t      (pc)))]\n+\t\t      (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && (TARGET_USE_BT || optimize_function_for_size_p (cfun))\n    && (INTVAL (operands[3]) & 0x3f) == 0x3f\"\n   \"#\"\n@@ -14398,7 +14400,8 @@\n \t\t\t     (match_operand:QI 2 \"register_operand\" \"r\")))\n \t\t\t (const_int 0)])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n-\t\t      (pc)))]\n+\t\t      (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_BT || optimize_function_for_size_p (cfun)\"\n   \"#\"\n   \"&& 1\"\n@@ -14430,7 +14433,8 @@\n \t\t\t     (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t     (match_operand:SI 3 \"const_int_operand\" \"n\")))])\n \t\t      (label_ref (match_operand 4 \"\" \"\"))\n-\t\t      (pc)))]\n+\t\t      (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"(TARGET_USE_BT || optimize_function_for_size_p (cfun))\n    && (INTVAL (operands[3]) & 0x1f) == 0x1f\"\n   \"#\"\n@@ -14458,7 +14462,8 @@\n \t\t\t   (const_int 1))\n \t\t\t (const_int 0)])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n-\t\t      (pc)))]\n+\t\t      (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_BT || optimize_function_for_size_p (cfun)\"\n   \"#\"\n   \"&& 1\"\n@@ -14494,7 +14499,8 @@\n \t       (const_int 1))\n \t     (const_int 0)])\n \t  (label_ref (match_operand 4 \"\" \"\"))\n-\t  (pc)))]\n+\t  (pc)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"(TARGET_USE_BT || optimize_function_for_size_p (cfun))\n    && (INTVAL (operands[3]) & 0x1f) == 0x1f\"\n   \"#\""}]}