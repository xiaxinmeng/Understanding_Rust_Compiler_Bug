{"sha": "eaa5907034332649c918f0579da805b6e786aa47", "node_id": "C_kwDOANBUbNoAKGVhYTU5MDcwMzQzMzI2NDljOTE4ZjA1NzlkYTgwNWI2ZTc4NmFhNDc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-27T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-27T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "11b9800d0072118857bba697744b0907b84cf751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11b9800d0072118857bba697744b0907b84cf751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaa5907034332649c918f0579da805b6e786aa47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa5907034332649c918f0579da805b6e786aa47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa5907034332649c918f0579da805b6e786aa47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa5907034332649c918f0579da805b6e786aa47/comments", "author": null, "committer": null, "parents": [{"sha": "fd5b0488ad5e4f29b65238e06a2d65b7de120235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5b0488ad5e4f29b65238e06a2d65b7de120235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5b0488ad5e4f29b65238e06a2d65b7de120235"}], "stats": {"total": 153, "additions": 152, "deletions": 1}, "files": [{"sha": "d4a8ab0d3a84e41323f557bd9e72116be6603c68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1,3 +1,49 @@\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104239\n+\t* config/rs6000/emmintrin.h (_mm_sad_epu8): Use __asm__ instead of\n+\tasm.\n+\t* config/rs6000/smmintrin.h (_mm_minpos_epu16): Declare iterator\n+\tbefore for loop instead of for init clause.\n+\t* config/rs6000/bmi2intrin.h (_pext_u64): Likewise.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104239\n+\t* config/rs6000/bmiintrin.h: Test _X86GPRINTRIN_H_INCLUDED instead of\n+\t_X86INTRIN_H_INCLUDED and adjust #error wording.\n+\t* config/rs6000/bmi2intrin.h: Likewise.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/104194\n+\t* dwarf2out.cc (long_double_as_float128): New function.\n+\t(modified_type_die): For powerpc64le IEEE 754 quad long double\n+\tand complex long double emit those as DW_TAG_typedef to\n+\t_Float128 or complex _Float128 base type.\n+\n+2022-01-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR target/104213\n+\t* gimple-ssa-warn-access.cc (pass_waccess::warn_invalid_pointer): Don't\n+\twarn when the SSA_NAME_VAR of REF has supressed -Wuse-after-free.\n+\n+2022-01-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-modref-tree.cc (modref_access_node::update):\n+\tRemove \"--param param=foo\" with \"--param foo\".\n+\t(modref_access_node::insert): Likewise.\n+\t(modref_access_node::insert_kill): Likewise.\n+\t* ipa-modref-tree.h (struct modref_ref_node): Likewise.\n+\t(struct modref_base_node): Likewise.\n+\t(struct modref_tree): Likewise.\n+\n+2022-01-26  Raoni Fassina Firmino  <raoni@linux.ibm.com>\n+\n+\tPR target/94193\n+\t* builtins.cc (expand_builtin_feclear_feraise_except): Add op0\n+\tpredicate check.\n+\n 2022-01-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/104203"}, {"sha": "4e4f0c27ccf87ab72373d6d0e0dc89c08daee01d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1 +1 @@\n-20220126\n+20220127"}, {"sha": "fc4627bc111605647d49712a98e8bf8de896ee7b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1,3 +1,23 @@\n+2022-01-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104224\n+\t* region-model.cc (region_model::check_call_args): New.\n+\t(region_model::on_call_pre): Call it when ignoring stdio builtins.\n+\t* region-model.h (region_model::check_call_args): New decl\n+\n+2022-01-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/94362\n+\t* constraint-manager.cc (range::add_bound): Fix tests for\n+\tdiscarding redundant constraints.  Perform test for rejecting\n+\tunsatisfiable constraints earlier so that they don't update\n+\tthe object on failure.\n+\t(selftest::test_range): New.\n+\t(selftest::test_constant_comparisons): Add test coverage for\n+\texisting constraints becoming narrower until they are\n+\tunsatisfiable.\n+\t(selftest::run_constraint_manager_tests): Call test_range.\n+\n 2022-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104159"}, {"sha": "036b6b4f689f587d8d6e5de5852e054be503f960", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1,3 +1,34 @@\n+2022-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104206\n+\tPR c++/101072\n+\t* semantics.cc (finish_compound_literal): Restore VECTOR_TYPE check.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104226\n+\t* constexpr.cc (init_subob_ctx): For vector ctors containing\n+\tvector elements, ensure appending to the same ctor instead of\n+\tcreating another one.\n+\n+2022-01-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR target/104213\n+\t* decl.cc (finish_constructor_body): Suppress -Wuse-after-free.\n+\t(finish_destructor_body): Likewise.\n+\t* optimize.cc (build_delete_destructor_body): Likewise.\n+\n+2022-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104235\n+\t* parser.cc (cp_parser_template_name): Repeat lookup of USING_DECL.\n+\n+2022-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103057\n+\t* pt.cc (tsubst_aggr_type): Call tsubst for alias template\n+\tspecialization.\n+\n 2022-01-25  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/101532"}, {"sha": "6db5f1ed746f308fb67abfe3e6b04e72a4c7db6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1,3 +1,51 @@\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104239\n+\t* gcc.target/powerpc/pr104239-3.c: New test.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104239\n+\t* gcc.target/powerpc/pr104239-1.c: New test.\n+\t* gcc.target/powerpc/pr104239-2.c: New test.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104226\n+\t* g++.dg/cpp0x/constexpr-104226.C: New test.\n+\n+2022-01-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR target/104213\n+\t* g++.dg/warn/Wuse-after-free2.C: New test.\n+\t* g++.dg/warn/Wuse-after-free3.C: New test.\n+\n+2022-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104235\n+\t* g++.dg/parse/template-keyword2.C: New test.\n+\n+2022-01-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/modref-7.c: Update scanned patterns.\n+\t* gcc.dg/tree-ssa/modref-8.c: Likewise.\n+\n+2022-01-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104224\n+\t* gcc.dg/analyzer/pr104224.c: New test.\n+\n+2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104188\n+\t* gcc.target/i386/pr104188.c: Add dg-require-effective-target\n+\tsse2_runtime.  Add -msse2 to dg-options.\n+\n+2022-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103057\n+\t* g++.dg/cpp0x/alias-decl-void1.C: New test.\n+\n 2022-01-25  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/104227"}, {"sha": "bec97b4977fceeaea72750c464d5ad7ba0275972", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa5907034332649c918f0579da805b6e786aa47/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa5907034332649c918f0579da805b6e786aa47/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=eaa5907034332649c918f0579da805b6e786aa47", "patch": "@@ -1,3 +1,9 @@\n+2022-01-26  Francois-Xavier Coudert  <fxcoudert@gmail.com>\n+\n+\tPR libfortran/104233\n+\t* ieee/issignaling_fallback.h: Check GFC_REAL_16_IS_FLOAT128\n+\tinstead of __FLT128_IS_IEC_60559__.\n+\n 2022-01-25  Francois-Xavier Coudert  <fxcoudert@gmail.com>\n \n \t* ieee/issignaling_fallback.h: Fix GCC-specific preprocessor"}]}