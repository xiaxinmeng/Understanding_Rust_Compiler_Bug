{"sha": "e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxNDhiYzc0ZjNiYzMwNmQyOGNlMGZmZWU0N2YwODc2YWY5OWNjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-21T16:34:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:20Z"}, "message": "[Ada] ACATS 4.2Q - BDD2007\n\n2020-06-12  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* aspects.ads (Is_Representation_Aspect): New array.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Check\n\t13.1(9.2/5) for representation aspects.\n\ngcc/testsuite/\n\n\t* gnat.dg/rep_clause8.adb: Update error location.", "tree": {"sha": "6fb57a31d2c128c16a7ecd66747b1dcf1dde21ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb57a31d2c128c16a7ecd66747b1dcf1dde21ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f799de948ca5a5e51a2cc7a406cc93bea91735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f799de948ca5a5e51a2cc7a406cc93bea91735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f799de948ca5a5e51a2cc7a406cc93bea91735"}], "stats": {"total": 143, "additions": 141, "deletions": 2}, "files": [{"sha": "82bf5ca54b9ff8f931354a3f5e3aff77e7f9c0e7", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "patch": "@@ -425,6 +425,134 @@ package Aspects is\n       Boolean_Aspects                   => Optional_Expression,\n       Library_Unit_Aspects              => Optional_Expression);\n \n+   --  The following array indicates what aspects are representation aspects\n+\n+   Is_Representation_Aspect : constant array (Aspect_Id) of Boolean :=\n+     (No_Aspect                           => False,\n+      Aspect_Abstract_State               => False,\n+      Aspect_Address                      => True,\n+      Aspect_Alignment                    => True,\n+      Aspect_Annotate                     => False,\n+      Aspect_Async_Readers                => False,\n+      Aspect_Async_Writers                => False,\n+      Aspect_Attach_Handler               => False,\n+      Aspect_Bit_Order                    => True,\n+      Aspect_Component_Size               => True,\n+      Aspect_Constant_After_Elaboration   => False,\n+      Aspect_Constant_Indexing            => False,\n+      Aspect_Contract_Cases               => False,\n+      Aspect_Convention                   => True,\n+      Aspect_CPU                          => False,\n+      Aspect_Default_Component_Value      => False,\n+      Aspect_Default_Initial_Condition    => False,\n+      Aspect_Default_Iterator             => False,\n+      Aspect_Default_Storage_Pool         => True,\n+      Aspect_Default_Value                => False,\n+      Aspect_Depends                      => False,\n+      Aspect_Dimension                    => False,\n+      Aspect_Dimension_System             => False,\n+      Aspect_Dispatching_Domain           => False,\n+      Aspect_Dynamic_Predicate            => False,\n+      Aspect_Effective_Reads              => False,\n+      Aspect_Effective_Writes             => False,\n+      Aspect_Extensions_Visible           => False,\n+      Aspect_External_Name                => False,\n+      Aspect_External_Tag                 => False,\n+      Aspect_Ghost                        => False,\n+      Aspect_Global                       => False,\n+      Aspect_Implicit_Dereference         => False,\n+      Aspect_Initial_Condition            => False,\n+      Aspect_Initializes                  => False,\n+      Aspect_Input                        => False,\n+      Aspect_Interrupt_Priority           => False,\n+      Aspect_Invariant                    => False,\n+      Aspect_Iterable                     => False,\n+      Aspect_Iterator_Element             => False,\n+      Aspect_Link_Name                    => True,\n+      Aspect_Linker_Section               => True,\n+      Aspect_Machine_Radix                => True,\n+      Aspect_Max_Entry_Queue_Depth        => False,\n+      Aspect_Max_Entry_Queue_Length       => False,\n+      Aspect_Max_Queue_Length             => False,\n+      Aspect_No_Caching                   => False,\n+      Aspect_Object_Size                  => True,\n+      Aspect_Obsolescent                  => False,\n+      Aspect_Output                       => False,\n+      Aspect_Part_Of                      => False,\n+      Aspect_Post                         => False,\n+      Aspect_Postcondition                => False,\n+      Aspect_Pre                          => False,\n+      Aspect_Precondition                 => False,\n+      Aspect_Predicate                    => False,\n+      Aspect_Predicate_Failure            => False,\n+      Aspect_Priority                     => False,\n+      Aspect_Put_Image                    => False,\n+      Aspect_Read                         => False,\n+      Aspect_Refined_Depends              => False,\n+      Aspect_Refined_Global               => False,\n+      Aspect_Refined_Post                 => False,\n+      Aspect_Refined_State                => False,\n+      Aspect_Relative_Deadline            => False,\n+      Aspect_Scalar_Storage_Order         => True,\n+      Aspect_Secondary_Stack_Size         => True,\n+      Aspect_Simple_Storage_Pool          => True,\n+      Aspect_Size                         => True,\n+      Aspect_Small                        => True,\n+      Aspect_SPARK_Mode                   => False,\n+      Aspect_Static_Predicate             => False,\n+      Aspect_Storage_Pool                 => True,\n+      Aspect_Storage_Size                 => True,\n+      Aspect_Stream_Size                  => True,\n+      Aspect_Suppress                     => False,\n+      Aspect_Synchronization              => False,\n+      Aspect_Test_Case                    => False,\n+      Aspect_Type_Invariant               => False,\n+      Aspect_Unimplemented                => False,\n+      Aspect_Unsuppress                   => False,\n+      Aspect_Value_Size                   => True,\n+      Aspect_Variable_Indexing            => False,\n+      Aspect_Volatile_Function            => False,\n+      Aspect_Warnings                     => False,\n+      Aspect_Write                        => False,\n+\n+      Library_Unit_Aspects                => False,\n+\n+      Aspect_Asynchronous                 => True,\n+      Aspect_Atomic                       => True,\n+      Aspect_Atomic_Components            => True,\n+      Aspect_Disable_Controlled           => False,\n+      Aspect_Discard_Names                => True,\n+      Aspect_Export                       => True,\n+      Aspect_Favor_Top_Level              => False,\n+      Aspect_Independent                  => True,\n+      Aspect_Independent_Components       => True,\n+      Aspect_Import                       => True,\n+      Aspect_Inline                       => False,\n+      Aspect_Inline_Always                => False,\n+      Aspect_Interrupt_Handler            => False,\n+      Aspect_Lock_Free                    => False,\n+      Aspect_No_Inline                    => False,\n+      Aspect_No_Return                    => False,\n+      Aspect_No_Tagged_Streams            => False,\n+      Aspect_Pack                         => True,\n+      Aspect_Persistent_BSS               => True,\n+      Aspect_Preelaborable_Initialization => False,\n+      Aspect_Pure_Function                => False,\n+      Aspect_Remote_Access_Type           => False,\n+      Aspect_Shared                       => True,\n+      Aspect_Simple_Storage_Pool_Type     => True,\n+      Aspect_Suppress_Debug_Info          => False,\n+      Aspect_Suppress_Initialization      => False,\n+      Aspect_Thread_Local_Storage         => True,\n+      Aspect_Unchecked_Union              => True,\n+      Aspect_Universal_Aliasing           => False,\n+      Aspect_Unmodified                   => False,\n+      Aspect_Unreferenced                 => False,\n+      Aspect_Unreferenced_Objects         => False,\n+      Aspect_Volatile                     => True,\n+      Aspect_Volatile_Components          => True,\n+      Aspect_Volatile_Full_Access         => True);\n+\n    -----------------------------------------\n    -- Table Linking Names and Aspect_Id's --\n    -----------------------------------------"}, {"sha": "0f23cbb7930895b9593834356b44b66af3f045d3", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "patch": "@@ -2270,6 +2270,17 @@ package body Sem_Ch13 is\n                   end if;\n             end case;\n \n+            --  Check 13.1(9.2/5): A representation aspect of a subtype or type\n+            --  shall not be specified (whether by a representation item or an\n+            --  aspect_specification) before the type is completely defined\n+            --  (see 3.11.1).\n+\n+            if Is_Representation_Aspect (A_Id)\n+              and then Rep_Item_Too_Early (E, N)\n+            then\n+               goto Continue;\n+            end if;\n+\n             --  Processing based on specific aspect\n \n             case A_Id is"}, {"sha": "f886e37e2f68f50e22aee7b3f7a2d4a217507373", "filename": "gcc/testsuite/gnat.dg/rep_clause8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7148bc74f3bc306d28ce0ffee47f0876af99cc8/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause8.adb?ref=e7148bc74f3bc306d28ce0ffee47f0876af99cc8", "patch": "@@ -9,8 +9,8 @@ procedure Rep_Clause8 is\n    generic\n       type Formal_Root is new Root with private;\n    package Gen_Derived is\n-      type Deriv is new Formal_Root with null record\n-        with Size => 300; --  { dg-error \"representation item not allowed for generic type\" }\n+      type Deriv is new Formal_Root with null record --  { dg-error \"representation item not allowed for generic type\" }\n+        with Size => 300;\n    end Gen_Derived;\n \n    package Inst_Derived is new Gen_Derived (Root);"}]}