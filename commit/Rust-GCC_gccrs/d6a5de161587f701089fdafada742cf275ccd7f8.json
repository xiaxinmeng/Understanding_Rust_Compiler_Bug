{"sha": "d6a5de161587f701089fdafada742cf275ccd7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhNWRlMTYxNTg3ZjcwMTA4OWZkYWZhZGE3NDJjZjI3NWNjZDdmOA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-03-03T17:52:02Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-03-03T17:52:02Z"}, "message": "re PR fortran/54730 (ICE in gfc_typenode_for_spec, at fortran/trans-types.c:1066)\n\nfortran/\n\tPR fortran/54730\n\t* array.c (gfc_match_array_constructor): Set a checkpoint before\n\tmatching a typespec.  Drop it on success, restore it otherwise.\n\ntestsuite/\n\tPR fortran/54730\n\t* gfortran.dg/array_constructor_42.f90: New test.\n\nFrom-SVN: r196416", "tree": {"sha": "542b966e4ddfa5b7b5c9ccf60d29ed08c14b363b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/542b966e4ddfa5b7b5c9ccf60d29ed08c14b363b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a5de161587f701089fdafada742cf275ccd7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a5de161587f701089fdafada742cf275ccd7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a5de161587f701089fdafada742cf275ccd7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a5de161587f701089fdafada742cf275ccd7f8/comments", "author": null, "committer": null, "parents": [{"sha": "cb8a1637a9914fb25bfbc9604fc20ca5e6c0601e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8a1637a9914fb25bfbc9604fc20ca5e6c0601e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8a1637a9914fb25bfbc9604fc20ca5e6c0601e"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "c12dd98221934d5112d0c8e2a6178d2e39a315f8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d6a5de161587f701089fdafada742cf275ccd7f8", "patch": "@@ -1,3 +1,9 @@\n+2013-03-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/54730\n+\t* array.c (gfc_match_array_constructor): Set a checkpoint before\n+\tmatching a typespec.  Drop it on success, restore it otherwise.\n+\n 2013-03-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/54730"}, {"sha": "6ee292c2a76885d5d35ef942ffd5a10b818648e6", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=d6a5de161587f701089fdafada742cf275ccd7f8", "patch": "@@ -1046,6 +1046,7 @@ match\n gfc_match_array_constructor (gfc_expr **result)\n {\n   gfc_constructor_base head, new_cons;\n+  gfc_undo_change_set changed_syms;\n   gfc_expr *expr;\n   gfc_typespec ts;\n   locus where;\n@@ -1074,6 +1075,7 @@ gfc_match_array_constructor (gfc_expr **result)\n \n   /* Try to match an optional \"type-spec ::\"  */\n   gfc_clear_ts (&ts);\n+  gfc_new_undo_checkpoint (changed_syms);\n   if (gfc_match_decl_type_spec (&ts, 0) == MATCH_YES)\n     {\n       seen_ts = (gfc_match (\" ::\") == MATCH_YES);\n@@ -1082,19 +1084,28 @@ gfc_match_array_constructor (gfc_expr **result)\n \t{\n \t  if (gfc_notify_std (GFC_STD_F2003, \"Array constructor \"\n \t\t\t      \"including type specification at %C\") == FAILURE)\n-\t    goto cleanup;\n+\t    {\n+\t      gfc_restore_last_undo_checkpoint ();\n+\t      goto cleanup;\n+\t    }\n \n \t  if (ts.deferred)\n \t    {\n \t      gfc_error (\"Type-spec at %L cannot contain a deferred \"\n \t\t\t \"type parameter\", &where);\n+\t      gfc_restore_last_undo_checkpoint ();\n \t      goto cleanup;\n \t    }\n \t}\n     }\n \n-  if (! seen_ts)\n-    gfc_current_locus = where;\n+  if (seen_ts)\n+    gfc_drop_last_undo_checkpoint ();\n+  else\n+    {\n+      gfc_restore_last_undo_checkpoint ();\n+      gfc_current_locus = where;\n+    }\n \n   if (gfc_match (end_delim) == MATCH_YES)\n     {"}, {"sha": "c34cd0f4a74aab085282831d2fa4d6d9d27eb3e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6a5de161587f701089fdafada742cf275ccd7f8", "patch": "@@ -1,3 +1,8 @@\n+2013-03-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/54730\n+\t* gfortran.dg/array_constructor_42.f90: New test.\n+\n 2013-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/52688"}, {"sha": "676247cdd5d9c1f01ce5c5321e4e3d8a846c91dd", "filename": "gcc/testsuite/gfortran.dg/array_constructor_42.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_42.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a5de161587f701089fdafada742cf275ccd7f8/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_42.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_42.f90?ref=d6a5de161587f701089fdafada742cf275ccd7f8", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+!\n+! PR fortran/54730\n+! A symbol 'a' was created while attempting to parse a typespec in the array\n+! constructor.  That (invalid) symbol was kept until translation stage\n+! where it was leading to an ICE.\n+!\n+! Original testcase from Paul Kapinos <kapinos@rz.rwth-aachen.de>\n+!\n+\n+  subroutine s\n+    implicit none\n+    intrinsic :: real\n+    real :: vec(1:2)\n+    vec = (/ real(a = 1), 1. /)\n+  end subroutine s\n+\n+  program main\n+    implicit none\n+    intrinsic :: real\n+    print *,(/ real(a = 1) /)\n+  end"}]}