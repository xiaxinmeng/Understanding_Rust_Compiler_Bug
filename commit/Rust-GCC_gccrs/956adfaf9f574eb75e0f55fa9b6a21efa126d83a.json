{"sha": "956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU2YWRmYWY5ZjU3NGViNzVlMGY1NWZhOWI2YTIxZWZhMTI2ZDgzYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-01T15:10:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-01T15:10:25Z"}, "message": "re PR c++/38348 (ICE from c_finish_omp_for)\n\n\tPR c++/38348\n\t* c-omp.c (c_finish_omp_for): Only transform pointer\n\t++ or -- into MODIFY_EXPR if second argument is non-NULL.\n\n\t* g++.dg/gomp/for-19.C: New test.\n\n\t* testsuite/libgomp.c++/for-6.C: New test.\n\nFrom-SVN: r142318", "tree": {"sha": "d549d9aed6ba1fe9b773286c6c92016841748612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d549d9aed6ba1fe9b773286c6c92016841748612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "193a36816ed0d74599591208bd1520e6d201d9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193a36816ed0d74599591208bd1520e6d201d9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193a36816ed0d74599591208bd1520e6d201d9fa"}], "stats": {"total": 165, "additions": 164, "deletions": 1}, "files": [{"sha": "5d7f4f03b7c7f154e491f8ea7626d52283297b7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -1,5 +1,9 @@\n 2008-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/38348\n+\t* c-omp.c (c_finish_omp_for): Only transform pointer\n+\t++ or -- into MODIFY_EXPR if second argument is non-NULL.\n+\n \tPR rtl-optimization/38245\n \t* tree-vrp.c (abs_extent_range): New function.\n \t(extract_range_from_binary_expr): Compute range"}, {"sha": "3be3729a32c83905fcceb98263ffcdd7388ae058", "filename": "gcc/c-omp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-omp.c?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -357,7 +357,8 @@ c_finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t\tbreak;\n \n \t      incr_ok = true;\n-\t      if (POINTER_TYPE_P (TREE_TYPE (decl)))\n+\t      if (POINTER_TYPE_P (TREE_TYPE (decl))\n+\t\t  && TREE_OPERAND (incr, 1))\n \t\t{\n \t\t  tree t = fold_convert (sizetype, TREE_OPERAND (incr, 1));\n "}, {"sha": "1bc5714a64c497f994b248c9b0c18ef043ba5a79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -1,5 +1,8 @@\n 2008-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/38348\n+\t* g++.dg/gomp/for-19.C: New test.\n+\n \tPR rtl-optimization/38245\n \t* gcc.dg/pr38245-1.c: New test.\n \t* gcc.dg/pr38245-2.c: New test."}, {"sha": "1929e45f884808a8a2565c67a685404eaa2b2e12", "filename": "gcc/testsuite/g++.dg/gomp/for-19.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-19.C?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -0,0 +1,41 @@\n+// PR c++/38348\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+const char *p = \"abcde\";\n+\n+template <typename T>\n+void\n+f1 (void)\n+{\n+#pragma omp for\t\t// { dg-error \"forbids incrementing a pointer of type\" }\n+  for (void *q = (void *)p; q < (void *) (p + 4); q++)\t// { dg-error \"forbids incrementing a pointer of type\" }\n+    ;\n+}\n+\n+template <typename T>\n+void\n+f2 (void)\n+{\n+#pragma omp for\n+  for (const char *q = p; q < p + 4; q++)\n+    ;\n+}\n+\n+template <typename T>\n+void\n+f3 (void)\n+{\n+#pragma omp for\t\t// { dg-error \"forbids incrementing a pointer of type\" }\n+  for (T q = T (p); q < T (p + 4); q++)\n+    ;\n+}\n+\n+int\n+main (void)\n+{\n+  f1 <int> ();\t\t// { dg-message \"instantiated from here\" }\n+  f2 <int> ();\n+  f3 <const char *> ();\n+  f3 <void *> ();\t// { dg-message \"instantiated from here\" }\n+}"}, {"sha": "5576af2049cf1b997714d1be9be26dfdb7889e34", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -1,3 +1,8 @@\n+2008-12-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/38348\n+\t* testsuite/libgomp.c++/for-6.C: New test.\n+\n 2008-11-26  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/28870"}, {"sha": "0da21ce2fe5bf22f88b265a7ad0288da799d98d2", "filename": "libgomp/testsuite/libgomp.c++/for-6.C", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ffor-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956adfaf9f574eb75e0f55fa9b6a21efa126d83a/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ffor-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ffor-6.C?ref=956adfaf9f574eb75e0f55fa9b6a21efa126d83a", "patch": "@@ -0,0 +1,109 @@\n+// PR c++/38348\n+// { dg-do run }\n+\n+extern \"C\" void abort ();\n+int cnt;\n+\n+template <typename T>\n+void\n+f0 (T, int)\n+{\n+  abort ();\n+}\n+\n+template <>\n+void\n+f0<int> (int, int type)\n+{\n+  if (type != 0)\n+    abort ();\n+#pragma omp atomic\n+  cnt++;\n+}\n+\n+template <>\n+void\n+f0<const char *> (const char *, int type)\n+{\n+  if (type != 1)\n+    abort ();\n+#pragma omp atomic\n+  cnt++;\n+}\n+\n+template <typename T>\n+void\n+f1 ()\n+{\n+#pragma omp parallel for\n+  for (int i = 0; i < 10; i++)\n+    f0 (i, 0);\n+}\n+\n+template <typename T>\n+void\n+f2 ()\n+{\n+#pragma omp parallel for\n+  for (T i = T (0); i < T (10); i += T (1))\n+    f0 (i, 0);\n+}\n+\n+void\n+f3 ()\n+{\n+#pragma omp parallel for\n+  for (int i = 0; i < 10; i++)\n+    f0 (i, 0);\n+}\n+\n+const char *p = \"abcdefghij\";\n+\n+template <typename T>\n+void\n+f4 ()\n+{\n+#pragma omp parallel for\n+  for (const char *i = p; i < p + 10; i += 1)\n+    f0 (i, 1);\n+}\n+\n+template <typename T>\n+void\n+f5 ()\n+{\n+#pragma omp parallel for\n+  for (T i = T (p); i < T (p + 10); i += 1)\n+    f0 (i, 1);\n+}\n+\n+void\n+f6 ()\n+{\n+#pragma omp parallel for\n+  for (const char *i = p; i < p + 10; i++)\n+    f0 (i, 1);\n+}\n+\n+int\n+main ()\n+{\n+  f1<int> ();\n+  if (cnt != 10)\n+    abort ();\n+  f2<int> ();\n+  if (cnt != 20)\n+    abort ();\n+  f3 ();\n+  if (cnt != 30)\n+    abort ();\n+  f4<int> ();\n+  if (cnt != 40)\n+    abort ();\n+  f5<const char *> ();\n+  if (cnt != 50)\n+    abort ();\n+  f6 ();\n+  if (cnt != 60)\n+    abort ();\n+}"}]}