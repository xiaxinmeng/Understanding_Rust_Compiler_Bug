{"sha": "bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZlMjU1NGYwNTJiMTFlY2YwN2Q5M2NiMDQxMzdmM2ZjYTVjNmU2ZA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-04-18T13:45:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:49Z"}, "message": "[Ada] Fix the -gnatyr switch so it works in record rep clauses\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Record_Representation_Clause): Call\n\tSet_Entity_With_Checks instead of Set_Entity, so we perform the\n\tcheck for correct casing.\n\t* style.adb (Check_Identifier): Minor comment improvement.\n\tCleanup overly complicated code.", "tree": {"sha": "70618630087ce1243dded7734f4f8264f884cc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70618630087ce1243dded7734f4f8264f884cc3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a671959b7640b1b02c924292959f2cbe1574536a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a671959b7640b1b02c924292959f2cbe1574536a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a671959b7640b1b02c924292959f2cbe1574536a"}], "stats": {"total": 52, "additions": 23, "deletions": 29}, "files": [{"sha": "dcd5954851abd6a8b6d3e4db3f0da1bf53c51de2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "patch": "@@ -8561,7 +8561,7 @@ package body Sem_Ch13 is\n \n                      Generate_Reference\n                        (Comp, Component_Name (CC), Set_Ref => False);\n-                     Set_Entity (Component_Name (CC), Comp);\n+                     Set_Entity_With_Checks (Component_Name (CC), Comp);\n \n                      --  Update Fbit and Lbit to the actual bit number\n "}, {"sha": "1409cc61d197ad2e9ea5b9b95d7cd558b5f740c3", "filename": "gcc/ada/style.adb", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d/gcc%2Fada%2Fstyle.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe2554f052b11ecf07d93cb04137f3fca5c6e6d/gcc%2Fada%2Fstyle.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.adb?ref=bfe2554f052b11ecf07d93cb04137f3fca5c6e6d", "patch": "@@ -136,48 +136,42 @@ package body Style is\n             Tref := Source_Text (Get_Source_File_Index (Sref));\n             Tdef := Source_Text (Get_Source_File_Index (Sdef));\n \n-            --  Ignore operator name case completely. This also catches the\n-            --  case of where one is an operator and the other is not. This\n-            --  is a phenomenon from rewriting of operators as functions,\n-            --  and is to be ignored.\n+            --  Ignore case of operator names. This also catches the case\n+            --  where one is an operator and the other is not. This is a\n+            --  phenomenon from rewriting of operators as functions, and is\n+            --  to be ignored.\n \n             if Tref (Sref) = '\"' or else Tdef (Sdef) = '\"' then\n                return;\n \n             else\n-               while Tref (Sref) = Tdef (Sdef) loop\n+               loop\n+                  --  If end of identifiers, all done. Note that they are the\n+                  --  same length.\n \n-                  --  If end of identifier, all done\n+                  pragma Assert\n+                    (Identifier_Char (Tref (Sref)) =\n+                     Identifier_Char (Tdef (Sdef)));\n \n                   if not Identifier_Char (Tref (Sref)) then\n                      return;\n-\n-                  --  Otherwise loop continues\n-\n-                  else\n-                     Sref := Sref + 1;\n-                     Sdef := Sdef + 1;\n                   end if;\n-               end loop;\n \n-               --  Fall through loop when mismatch between identifiers\n-               --  If either identifier is not terminated, error.\n+                  --  Case mismatch\n \n-               if Identifier_Char (Tref (Sref))\n-                    or else\n-                  Identifier_Char (Tdef (Sdef))\n-               then\n-                  Error_Msg_Node_1 := Def;\n-                  Error_Msg_Sloc := Sloc (Def);\n-                  Error_Msg -- CODEFIX\n-                    (\"(style) bad casing of & declared#\", Sref, Ref);\n-                  return;\n+                  if Tref (Sref) /= Tdef (Sdef) then\n+                     Error_Msg_Node_1 := Def;\n+                     Error_Msg_Sloc := Sloc (Def);\n+                     Error_Msg -- CODEFIX\n+                       (\"(style) bad casing of & declared#\", Sref, Ref);\n+                     return;\n+                  end if;\n \n-               --  Else end of identifiers, and they match\n+                  Sref := Sref + 1;\n+                  Sdef := Sdef + 1;\n+               end loop;\n \n-               else\n-                  return;\n-               end if;\n+               pragma Assert (False);\n             end if;\n          end if;\n "}]}