{"sha": "5d5130ad5c396bd2dcde766c0c994855b815355b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1MTMwYWQ1YzM5NmJkMmRjZGU3NjZjMGM5OTQ4NTViODE1MzU1Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-02-02T18:21:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-02-02T19:07:30Z"}, "message": "fix memory leaks\n\nThis fixes various vec<> memory leaks as discovered compiling 521.wrf_r.\n\n2021-02-02  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-loop-interchange.cc (prepare_data_references):\n\tRelease vectors.\n\t* gimple-loop-jam.c (tree_loop_unroll_and_jam): Likewise.\n\t* tree-ssa-loop-im.c (hoist_memory_references): Likewise.\n\t* tree-vect-stmts.c (vectorizable_condition): Do not\n\tallocate vectors.\n\t(vectorizable_comparison): Likewise.", "tree": {"sha": "80e81b1783760c0d87e5b57cd9b2489d99b12728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e81b1783760c0d87e5b57cd9b2489d99b12728"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d5130ad5c396bd2dcde766c0c994855b815355b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5130ad5c396bd2dcde766c0c994855b815355b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d5130ad5c396bd2dcde766c0c994855b815355b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5130ad5c396bd2dcde766c0c994855b815355b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db53dd4f784d5d36c2119dd66a22ad40b5020b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db53dd4f784d5d36c2119dd66a22ad40b5020b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db53dd4f784d5d36c2119dd66a22ad40b5020b1c"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "f45b9364644413d0502ca1313a2fbf7e230d28d6", "filename": "gcc/gimple-loop-interchange.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Fgimple-loop-interchange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Fgimple-loop-interchange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-interchange.cc?ref=5d5130ad5c396bd2dcde766c0c994855b815355b", "patch": "@@ -1940,7 +1940,10 @@ prepare_data_references (class loop *loop, vec<data_reference_p> *datarefs)\n           delete bb_refs;\n         }\n       else if (bb_refs->is_empty ())\n-\tdelete bb_refs;\n+\t{\n+\t  bb_refs->release ();\n+\t  delete bb_refs;\n+\t}\n       else\n \tbb->aux = bb_refs;\n     }\n@@ -1954,7 +1957,10 @@ prepare_data_references (class loop *loop, vec<data_reference_p> *datarefs)\n \n       bb_refs = (vec<data_reference_p> *) bb->aux;\n       if (loop_nest && flow_bb_inside_loop_p (loop_nest, bb))\n-\tdatarefs->safe_splice (*bb_refs);\n+\t{\n+\t  datarefs->safe_splice (*bb_refs);\n+\t  bb_refs->release ();\n+\t}\n       else\n \tfree_data_refs (*bb_refs);\n "}, {"sha": "69dbaeb6cb9cabdb8900fd57a1b93fd716d30e46", "filename": "gcc/gimple-loop-jam.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Fgimple-loop-jam.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Fgimple-loop-jam.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-jam.c?ref=5d5130ad5c396bd2dcde766c0c994855b815355b", "patch": "@@ -505,15 +505,13 @@ tree_loop_unroll_and_jam (void)\n       if (!unroll_jam_possible_p (outer, loop))\n \tcontinue;\n \n-      vec<data_reference_p> datarefs;\n-      vec<ddr_p> dependences;\n+      vec<data_reference_p> datarefs = vNULL;\n+      vec<ddr_p> dependences = vNULL;\n       unsigned unroll_factor, profit_unroll, removed;\n       class tree_niter_desc desc;\n       bool unroll = false;\n \n       auto_vec<loop_p, 3> loop_nest;\n-      dependences.create (10);\n-      datarefs.create (10);\n       if (!compute_data_dependences_for_loop (outer, true, &loop_nest,\n \t\t\t\t\t      &datarefs, &dependences))\n \t{"}, {"sha": "8034cf68d276f45f1b2bccacb6d6122a31a03541", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=5d5130ad5c396bd2dcde766c0c994855b815355b", "patch": "@@ -2508,6 +2508,7 @@ hoist_memory_references (class loop *loop, bitmap mem_refs,\n       if (res != 1)\n \t{\n \t  bitmap_copy (refs_not_supported, mem_refs);\n+\t  seq.release ();\n \t  break;\n \t}\n       sms.safe_push (std::make_pair (e, seq));"}, {"sha": "5eb7b2d1d6e14151031b126dae82b27503443f8f", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5130ad5c396bd2dcde766c0c994855b815355b/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=5d5130ad5c396bd2dcde766c0c994855b815355b", "patch": "@@ -10085,14 +10085,6 @@ vectorizable_condition (vec_info *vinfo,\n \n   /* Transform.  */\n \n-  if (!slp_node)\n-    {\n-      vec_oprnds0.create (1);\n-      vec_oprnds1.create (1);\n-      vec_oprnds2.create (1);\n-      vec_oprnds3.create (1);\n-    }\n-\n   /* Handle def.  */\n   scalar_dest = gimple_assign_lhs (stmt);\n   if (reduction_type != EXTRACT_LAST_REDUCTION)\n@@ -10480,11 +10472,6 @@ vectorizable_comparison (vec_info *vinfo,\n     }\n \n   /* Transform.  */\n-  if (!slp_node)\n-    {\n-      vec_oprnds0.create (1);\n-      vec_oprnds1.create (1);\n-    }\n \n   /* Handle def.  */\n   lhs = gimple_assign_lhs (stmt);"}]}