{"sha": "5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwYTljN2NjMWZhNzIzMzY5ZGY2MTU5OGNkM2E4YWY0ZDIxZjVmZg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2019-02-27T20:14:55Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2019-02-27T20:14:55Z"}, "message": "re PR rtl-optimization/89490 (char array constant put in string merge section)\n\n2019-02-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR rtl-optimization/89490\n        * varasm.c (get_block_for_section): Bail out for mergeable sections.\n        (default_use_anchors_for_symbol_p, output_object_block): Assert the\n        block section is not mergeable.\n\nFrom-SVN: r269264", "tree": {"sha": "f04317d13c45be937219c3ba8330c8303fdec480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f04317d13c45be937219c3ba8330c8303fdec480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "867a4ad28e118776bedc3bb2571d91c898aa3398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867a4ad28e118776bedc3bb2571d91c898aa3398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867a4ad28e118776bedc3bb2571d91c898aa3398"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "d7e81db4a12c10e42a815f5abe5c05658d5eb167", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "patch": "@@ -1,3 +1,10 @@\n+2019-02-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR rtl-optimization/89490\n+\t* varasm.c (get_block_for_section): Bail out for mergeable sections.\n+\t(default_use_anchors_for_symbol_p, output_object_block): Assert the\n+\tblock section is not mergeable.\n+\n 2019-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70341"}, {"sha": "da10ba3c51004fdbab31a5e6d6669f5c1d2113d1", "filename": "gcc/varasm.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=5b0a9c7cc1fa723369df61598cd3a8af4d21f5ff", "patch": "@@ -363,7 +363,11 @@ use_object_blocks_p (void)\n \n /* Return the object_block structure for section SECT.  Create a new\n    structure if we haven't created one already.  Return null if SECT\n-   itself is null.  */\n+   itself is null.  Return also null for mergeable sections since\n+   section anchors can't be used in mergeable sections anyway,\n+   because the linker might move objects around, and using the\n+   object blocks infrastructure in that case is both a waste and a\n+   maintenance burden.  */\n \n static struct object_block *\n get_block_for_section (section *sect)\n@@ -373,6 +377,9 @@ get_block_for_section (section *sect)\n   if (sect == NULL)\n     return NULL;\n \n+  if (sect->common.flags & SECTION_MERGE)\n+    return NULL;\n+\n   object_block **slot\n     = object_block_htab->find_slot_with_hash (sect, hash_section (sect),\n \t\t\t\t\t      INSERT);\n@@ -7014,14 +7021,13 @@ default_asm_output_anchor (rtx symbol)\n bool\n default_use_anchors_for_symbol_p (const_rtx symbol)\n {\n-  section *sect;\n   tree decl;\n+  section *sect = SYMBOL_REF_BLOCK (symbol)->sect;\n \n-  /* Don't use anchors for mergeable sections.  The linker might move\n-     the objects around.  */\n-  sect = SYMBOL_REF_BLOCK (symbol)->sect;\n-  if (sect->common.flags & SECTION_MERGE)\n-    return false;\n+  /* This function should only be called with non-zero SYMBOL_REF_BLOCK,\n+     furthermore get_block_for_section should not create object blocks\n+     for mergeable sections.  */\n+  gcc_checking_assert (sect && !(sect->common.flags & SECTION_MERGE));\n \n   /* Don't use anchors for small data sections.  The small data register\n      acts as an anchor for such sections.  */\n@@ -7630,6 +7636,7 @@ output_object_block (struct object_block *block)\n   else\n     switch_to_section (block->sect);\n \n+  gcc_checking_assert (!(block->sect->common.flags & SECTION_MERGE));\n   assemble_align (block->alignment);\n \n   /* Define the values of all anchors relative to the current section"}]}