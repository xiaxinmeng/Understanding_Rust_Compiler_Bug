{"sha": "da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2MGI0NmIyM2VmN2YwYTdhMGU0N2JjOTMxYzRlOTIwM2IyNjkzYw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-11-23T22:49:20Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-11-23T22:49:20Z"}, "message": "lto.exp (lto_option_list): Rename from option_list.\n\n\t* lib/lto.exp (lto_option_list): Rename from option_list.\n\t* lib/compat.exp (compat_option_list): Rename from option_list.\n\nFrom-SVN: r154477", "tree": {"sha": "cf020e9b6807cdf57c5527ff8809ecd4760f8a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf020e9b6807cdf57c5527ff8809ecd4760f8a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/comments", "author": null, "committer": null, "parents": [{"sha": "3d0cc4ae1a09b01606dc4971487199356bfb4384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0cc4ae1a09b01606dc4971487199356bfb4384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0cc4ae1a09b01606dc4971487199356bfb4384"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "b88b856b4d9c20b32e522c1fa4fb56dbc356dfea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "patch": "@@ -1,3 +1,8 @@\n+2009-11-23  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/lto.exp (lto_option_list): Rename from option_list.\n+\t* lib/compat.exp (compat_option_list): Rename from option_list.\n+\n 2009-11-23  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \t* gcc-dg/raw-string-1.c: Require-effective-target wchar."}, {"sha": "84053f3ecbd7f99a01e11f1cb3a25f4de01f1c5e", "filename": "gcc/testsuite/lib/compat.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fcompat.exp?ref=da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "patch": "@@ -48,7 +48,7 @@ if ![info exists COMPAT_OPTIONS] {\n \t[list {} {}]]\n }\n \n-set option_list $COMPAT_OPTIONS\n+set compat_option_list $COMPAT_OPTIONS\n \n # Subsets of tests can be selectively disabled by members of this list:\n #  - ATTRIBUTE: disable all tests using the __attribute__ extension,\n@@ -245,7 +245,7 @@ proc compat-get-options { src } {\n #\n proc compat-execute { src1 sid use_alt } {\n     global srcdir tmpdir\n-    global option_list\n+    global compat_option_list\n     global tool\n     global verbose\n     global testcase\n@@ -328,7 +328,7 @@ proc compat-execute { src1 sid use_alt } {\n     # Loop through all of the option lists used for this test.\n \n     set count 0\n-    foreach option_pair $option_list {\n+    foreach option_pair $compat_option_list {\n \n \t# Pick out each set of options.\n \tset tst_option [lindex $option_pair 0]"}, {"sha": "1dd9c34df55ec325e2955c06a7cbb95811321d04", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da60b46b23ef7f0a7a0e47bc931c4e9203b2693c/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=da60b46b23ef7f0a7a0e47bc931c4e9203b2693c", "patch": "@@ -311,7 +311,7 @@ proc lto-get-options { src } {\n # SID identifies a test suite in the names of temporary files.\n proc lto-execute { src1 sid } {\n     global srcdir tmpdir\n-    global option_list\n+    global lto_option_list\n     global tool\n     global verbose\n     global testcase\n@@ -334,12 +334,12 @@ proc lto-execute { src1 sid } {\n     set compile_xfail(0) \"\" \n \n     # If the main file defines dg-options, those flags are used to\n-    # overwrite the default option_list taken from LTO_OPTIONS.\n+    # overwrite the default lto_option_list taken from LTO_OPTIONS.\n     if { [string length $extra_flags(0)] > 0 } {\n-\tset option_list $extra_flags(0)\n+\tset lto_option_list $extra_flags(0)\n \tset extra_flags(0) \"\"\n     } else {\n-\tset option_list $LTO_OPTIONS\n+\tset lto_option_list $LTO_OPTIONS\n     }\n \n     # Check whether this test is supported for this target.\n@@ -417,7 +417,7 @@ proc lto-execute { src1 sid } {\n \n     # Loop through all of the option lists used for this test.\n     set count 0\n-    foreach option $option_list {\n+    foreach option $lto_option_list {\n \tverbose \"Testing $testcase, $option\"\n \n \t# There's a unique name for each executable we generate."}]}