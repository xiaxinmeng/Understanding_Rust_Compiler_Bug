{"sha": "d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3NTdlNmE1ZDliNzQ2ZmI1OTk0M2NkY2VkYzk4ZjUwNzNiMmIzZQ==", "commit": {"author": {"name": "Christophe Jaillet", "email": "jaillet.christophe@caramail.com", "date": "1999-12-27T23:01:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-12-27T23:01:12Z"}, "message": "alias.c (nonlocal_reference_p): Add else for disjoint ifs.\n\n        * alias.c (nonlocal_reference_p): Add else for disjoint ifs.\n        * flow.c (find_use_as_address): Likewise.\n        * function.c (fixup_var_refs_1): Likewise.\n        (walk_fixup_memory_subreg, fixup_stack_1): Likewise.\n        * jump.c (invert_exp, redirect_exp): Likewise.\n        * loop.c (replace_call_address): Likewise.\n        (count_nonfixed_reads): Likewise.\n        * rtlanal.c (modified_between_p): Likewise.\n        (modified_in_p, volatile_insn_p, volatile_refs_p): Likewise.\n        (side_effects_p, replace_regs, jmp_uses_reg_or_mem): Likewise.\n        * unroll.c (remap_split_bivs): Likewise.\n\nFrom-SVN: r31103", "tree": {"sha": "b66449471702d5d138b11fe3f0f9762cf891239d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b66449471702d5d138b11fe3f0f9762cf891239d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/comments", "author": null, "committer": null, "parents": [{"sha": "0fadedb2df93bf24ffcdd52d3e86aa2ab0075325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fadedb2df93bf24ffcdd52d3e86aa2ab0075325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fadedb2df93bf24ffcdd52d3e86aa2ab0075325"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "ce1c44a5b139f676e4db31c3c8733f1aeccb9784", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -1,3 +1,17 @@\n+1999-12-27  Christophe Jaillet  <jaillet.christophe@caramail.com>\n+\n+\t* alias.c (nonlocal_reference_p): Add else for disjoint ifs.\n+\t* flow.c (find_use_as_address): Likewise.\n+\t* function.c (fixup_var_refs_1): Likewise.\n+\t(walk_fixup_memory_subreg, fixup_stack_1): Likewise.\n+\t* jump.c (invert_exp, redirect_exp): Likewise.\n+\t* loop.c (replace_call_address): Likewise.\n+\t(count_nonfixed_reads): Likewise.\n+\t* rtlanal.c (modified_between_p): Likewise.\n+\t(modified_in_p, volatile_insn_p, volatile_refs_p): Likewise.\n+\t(side_effects_p, replace_regs, jmp_uses_reg_or_mem): Likewise.\n+\t* unroll.c (remap_split_bivs): Likewise.\n+\n 1999-12-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* diagnostic.c (v_message_with_decl): Use .* format specifier"}, {"sha": "e08e6b9a09aae8fb2aa6ab70bbb0464cfdc075fb", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -1468,7 +1468,7 @@ nonlocal_reference_p (x)\n \t    if (nonlocal_reference_p (XEXP (x, i)))\n \t      return 1;\n \t  }\n-\tif (fmt[i] == 'E')\n+\telse if (fmt[i] == 'E')\n \t  {\n \t    register int j;\n \t    for (j = 0; j < XVECLEN (x, i); j++)"}, {"sha": "6d0ce0b1ce6d0bb0cda2a34b66fbf7d3076685b7", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -4881,7 +4881,7 @@ find_use_as_address (x, reg, plusconst)\n \t  else if (tem != 0)\n \t    return (rtx) (HOST_WIDE_INT) 1;\n \t}\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)"}, {"sha": "77b1941745ef1b2b9b23666eef6036e20d59df68", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -2324,7 +2324,7 @@ fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)\n     {\n       if (fmt[i] == 'e')\n \tfixup_var_refs_1 (var, promoted_mode, &XEXP (x, i), insn, replacements);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n@@ -2405,7 +2405,7 @@ walk_fixup_memory_subreg (x, insn, uncritical)\n     {\n       if (fmt[i] == 'e')\n \tXEXP (x, i) = walk_fixup_memory_subreg (XEXP (x, i), insn, uncritical);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n@@ -2468,7 +2468,7 @@ fixup_stack_1 (x, insn)\n     {\n       if (fmt[i] == 'e')\n \tXEXP (x, i) = fixup_stack_1 (XEXP (x, i), insn);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)"}, {"sha": "b6519643e10ad0abee97d7a29b5319900c0a5742", "filename": "gcc/jump.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -4646,7 +4646,7 @@ invert_exp (x, insn)\n       if (fmt[i] == 'e')\n \tif (! invert_exp (XEXP (x, i), insn))\n \t  return 0;\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n@@ -4795,7 +4795,7 @@ redirect_exp (loc, olabel, nlabel, insn)\n       if (fmt[i] == 'e')\n \tif (! redirect_exp (&XEXP (x, i), olabel, nlabel, insn))\n \t  return 0;\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)"}, {"sha": "be02b974348de7a04884178cfd103616f0a20da0", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -2322,7 +2322,7 @@ replace_call_address (x, reg, addr)\n     {\n       if (fmt[i] == 'e')\n \treplace_call_address (XEXP (x, i), reg, addr);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n@@ -2374,7 +2374,7 @@ count_nonfixed_reads (x)\n     {\n       if (fmt[i] == 'e')\n \tvalue += count_nonfixed_reads (XEXP (x, i));\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)"}, {"sha": "f264e8faf0310dcb5952e96db81871df74999ffd", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -612,7 +612,7 @@ modified_between_p (x, start, end)\n       if (fmt[i] == 'e' && modified_between_p (XEXP (x, i), start, end))\n \treturn 1;\n \n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n \t  if (modified_between_p (XVECEXP (x, i, j), start, end))\n \t    return 1;\n@@ -667,7 +667,7 @@ modified_in_p (x, insn)\n       if (fmt[i] == 'e' && modified_in_p (XEXP (x, i), insn))\n \treturn 1;\n \n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n \t  if (modified_in_p (XVECEXP (x, i, j), insn))\n \t    return 1;\n@@ -1519,7 +1519,7 @@ volatile_insn_p (x)\n \t    if (volatile_insn_p (XEXP (x, i)))\n \t      return 1;\n \t  }\n-\tif (fmt[i] == 'E')\n+\telse if (fmt[i] == 'E')\n \t  {\n \t    register int j;\n \t    for (j = 0; j < XVECLEN (x, i); j++)\n@@ -1585,7 +1585,7 @@ volatile_refs_p (x)\n \t    if (volatile_refs_p (XEXP (x, i)))\n \t      return 1;\n \t  }\n-\tif (fmt[i] == 'E')\n+\telse if (fmt[i] == 'E')\n \t  {\n \t    register int j;\n \t    for (j = 0; j < XVECLEN (x, i); j++)\n@@ -1660,7 +1660,7 @@ side_effects_p (x)\n \t    if (side_effects_p (XEXP (x, i)))\n \t      return 1;\n \t  }\n-\tif (fmt[i] == 'E')\n+\telse if (fmt[i] == 'E')\n \t  {\n \t    register int j;\n \t    for (j = 0; j < XVECLEN (x, i); j++)\n@@ -1959,7 +1959,7 @@ replace_regs (x, reg_map, nregs, replace_dest)\n     {\n       if (fmt[i] == 'e')\n \tXEXP (x, i) = replace_regs (XEXP (x, i), reg_map, nregs, replace_dest);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n@@ -2014,7 +2014,7 @@ jmp_uses_reg_or_mem (x)\n \t  && jmp_uses_reg_or_mem (XEXP (x, i)))\n \treturn 1;\n \n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \tfor (j = 0; j < XVECLEN (x, i); j++)\n \t  if (jmp_uses_reg_or_mem (XVECEXP (x, i, j)))\n \t    return 1;"}, {"sha": "360e024c3fc90609cb5386375acbd75f251f0f0e", "filename": "gcc/stupid.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -750,7 +750,7 @@ stupid_mark_refs (x, chain)\n     {\n       if (fmt[i] == 'e')\n \tstupid_mark_refs (XEXP (x, i), chain);\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)"}, {"sha": "85d7d11af198786b640e1062d8376cbe068b38f7", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4757e6a5d9b746fb59943cdcedc98f5073b2b3e/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=d4757e6a5d9b746fb59943cdcedc98f5073b2b3e", "patch": "@@ -4059,7 +4059,7 @@ remap_split_bivs (x)\n     {\n       if (fmt[i] == 'e')\n \tXEXP (x, i) = remap_split_bivs (XEXP (x, i));\n-      if (fmt[i] == 'E')\n+      else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)"}]}