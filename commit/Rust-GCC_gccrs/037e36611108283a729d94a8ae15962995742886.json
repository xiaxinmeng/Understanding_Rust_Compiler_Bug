{"sha": "037e36611108283a729d94a8ae15962995742886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM3ZTM2NjExMTA4MjgzYTcyOWQ5NGE4YWUxNTk2Mjk5NTc0Mjg4Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-12T08:51:03Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-12T08:51:03Z"}, "message": "Daily bump.", "tree": {"sha": "a99fb89bf60f7495111a678823bcc75ebdaa784c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99fb89bf60f7495111a678823bcc75ebdaa784c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/037e36611108283a729d94a8ae15962995742886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037e36611108283a729d94a8ae15962995742886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037e36611108283a729d94a8ae15962995742886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037e36611108283a729d94a8ae15962995742886/comments", "author": null, "committer": null, "parents": [{"sha": "229a6dbd9ef1680f1ca02d6ce63e8abdffaaeeba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229a6dbd9ef1680f1ca02d6ce63e8abdffaaeeba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229a6dbd9ef1680f1ca02d6ce63e8abdffaaeeba"}], "stats": {"total": 486, "additions": 485, "deletions": 1}, "files": [{"sha": "dd3e5db221cd1bc7baffcf4cb1fc94d4d8885548", "filename": "ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,41 @@\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* MAINTAINERS: Remove entries for removed\n+\tcomponents (HSA, BRIG, libhsail-rt).\n+\tMove Pekka to Write After Approval.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.def: Remove libhsail-rt.\n+\t* Makefile.in: Likewise.\n+\t* configure.ac: Likewise.\n+\t* configure: Regenerate.\n+\t* libhsail-rt/ChangeLog: Removed.\n+\t* libhsail-rt/Makefile.am: Removed.\n+\t* libhsail-rt/Makefile.in: Removed.\n+\t* libhsail-rt/README: Removed.\n+\t* libhsail-rt/aclocal.m4: Removed.\n+\t* libhsail-rt/configure: Removed.\n+\t* libhsail-rt/configure.ac: Removed.\n+\t* libhsail-rt/configure.tgt: Removed.\n+\t* libhsail-rt/include/internal/fibers.h: Removed.\n+\t* libhsail-rt/include/internal/phsa-queue-interface.h: Removed.\n+\t* libhsail-rt/include/internal/phsa-rt.h: Removed.\n+\t* libhsail-rt/include/internal/workitems.h: Removed.\n+\t* libhsail-rt/rt/arithmetic.c: Removed.\n+\t* libhsail-rt/rt/atomics.c: Removed.\n+\t* libhsail-rt/rt/bitstring.c: Removed.\n+\t* libhsail-rt/rt/fbarrier.c: Removed.\n+\t* libhsail-rt/rt/fibers.c: Removed.\n+\t* libhsail-rt/rt/fp16.c: Removed.\n+\t* libhsail-rt/rt/misc.c: Removed.\n+\t* libhsail-rt/rt/multimedia.c: Removed.\n+\t* libhsail-rt/rt/queue.c: Removed.\n+\t* libhsail-rt/rt/sat_arithmetic.c: Removed.\n+\t* libhsail-rt/rt/segment.c: Removed.\n+\t* libhsail-rt/rt/workitems.c: Removed.\n+\t* libhsail-rt/target-config.h.in: Removed.\n+\n 2021-05-04  Nick Clifton  <nickc@redhat.com>\n \n \t* configure.ac (AC_PROG_CC): Replace with AC_PROG_CC_C99."}, {"sha": "42e67d7a0839bfc038f78e6d0a2f37b9da0a60b8", "filename": "contrib/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,30 @@\n+2021-05-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Simplify needle lookup.\n+\t* gcc-changelog/git_update_version.py: Pass ref_name to\n+\tparse_git_revisions.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc_update: Remove libhsail-rt folder.\n+\t* update-copyright.py: Likewise.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_check_commit.py: Remove --non-strict-mode.\n+\t* gcc-changelog/git_commit.py: Remove strict mode.\n+\t* gcc-changelog/git_email.py: Likewise.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\t* gcc-changelog/test_email.py: Likewise.\n+\t* gcc-changelog/test_patches.txt: Update patches so that they\n+\tdon't contain a ChangeLog file changes.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Remove ChangeLog locations\n+\tbased on ref_name.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\n 2021-05-10  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_email.py: Remove newlines when --help"}, {"sha": "d0df5075ec7ff5058c54a38571e7fc562647c6ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,205 @@\n+2021-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100547\n+\t* rtl.h (rtvec_alloc): Make argument size_t.\n+\t* rtl.c (rtvec_alloc): Verify the count is less than INT_MAX.\n+\n+2021-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/100508\n+\t* cfgexpand.c (expand_debug_expr): For DEBUG_EXPR_DECL with vector\n+\ttype, don't reuse DECL_RTL if it has different mode, instead force\n+\tcreation of a new DEBUG_EXPR.\n+\n+2021-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/94589\n+\t* match.pd ((X & Y) == X -> (X & ~Y) == 0,\n+\t(X | Y) == Y -> (X & ~Y) == 0): New GIMPLE simplifications.\n+\n+2021-05-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/98218\n+\t* config/i386/i386-expand.c (ix86_expand_sse_movcc): Handle V2SF mode.\n+\t* config/i386/mmx.md (MMXMODE124): New mode iterator.\n+\t(V2FI): Ditto.\n+\t(mmxintvecmode): New mode attribute.\n+\t(mmxintvecmodelower): Ditto.\n+\t(*mmx_maskcmpv2sf3_comm): New insn pattern.\n+\t(*mmx_maskcmpv2sf3): Ditto.\n+\t(vec_cmpv2sfv2si): New expander.\n+\t(vcond<V2FI:mode>v2si): Ditto.\n+\t(mmx_vlendvps): New insn pattern.\n+\t(vcond<MMXMODE124:mode><MMXMODEI:mode>): Also handle V2SFmode.\n+\t(vcondu<MMXMODE124:mode><MMXMODEI:mode>): Ditto.\n+\t(vcond_mask_<mode><mmxintvecmodelower>): Ditto.\n+\n+2021-05-11  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/21433\n+\t* expr.c (expand_expr_real_1): Replace unreachable code with an assert.\n+\n+2021-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.c (gimple_fold_call): Do not call\n+\tmaybe_fold_reference on call arguments or the static chain.\n+\t(fold_stmt_1): Do not call maybe_fold_reference on GIMPLE_ASM\n+\tinputs.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* builtins.def (DEF_HSAIL_BUILTIN): Remove.\n+\t(DEF_HSAIL_ATOMIC_BUILTIN): Likewise.\n+\t(DEF_HSAIL_SAT_BUILTIN): Likewise.\n+\t(DEF_HSAIL_INTR_BUILTIN): Likewise.\n+\t(DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN): Likewise.\n+\t* doc/frontends.texi: Remove BRIG.\n+\t* doc/install.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/standards.texi: Likewise.\n+\t* brig-builtins.def: Removed.\n+\t* brig/ChangeLog: Removed.\n+\t* brig/Make-lang.in: Removed.\n+\t* brig/brig-builtins.h: Removed.\n+\t* brig/brig-c.h: Removed.\n+\t* brig/brig-lang.c: Removed.\n+\t* brig/brigfrontend/brig-arg-block-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-atomic-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-basic-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-branch-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-cmp-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-code-entry-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-code-entry-handler.h: Removed.\n+\t* brig/brigfrontend/brig-comment-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-control-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-copy-move-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-cvt-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-fbarrier-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-function-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-function.cc: Removed.\n+\t* brig/brigfrontend/brig-function.h: Removed.\n+\t* brig/brigfrontend/brig-inst-mod-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-label-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-lane-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-machine.c: Removed.\n+\t* brig/brigfrontend/brig-machine.h: Removed.\n+\t* brig/brigfrontend/brig-mem-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-module-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-queue-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-seg-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-signal-inst-handler.cc: Removed.\n+\t* brig/brigfrontend/brig-to-generic.cc: Removed.\n+\t* brig/brigfrontend/brig-to-generic.h: Removed.\n+\t* brig/brigfrontend/brig-util.cc: Removed.\n+\t* brig/brigfrontend/brig-util.h: Removed.\n+\t* brig/brigfrontend/brig-variable-handler.cc: Removed.\n+\t* brig/brigfrontend/hsa-brig-format.h: Removed.\n+\t* brig/brigfrontend/phsa.h: Removed.\n+\t* brig/brigspec.c: Removed.\n+\t* brig/config-lang.in: Removed.\n+\t* brig/gccbrig.texi: Removed.\n+\t* brig/lang-specs.h: Removed.\n+\t* brig/lang.opt: Removed.\n+\n+2021-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/100513\n+\t* ipa-param-manipulation.c\n+\t(ipa_param_body_adjustments::modify_call_stmt): Avoid\n+\taltering SSA_NAME_DEF_STMT by adjusting the calls LHS\n+\tvia gimple_call_lhs_ptr.\n+\n+2021-05-11  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99725\n+\t* config/arm/arm.c (cmse_nonsecure_call_inline_register_clear):\n+\tAvoid emitting CFA adjusts on the sp if we have the fp.\n+\n+2021-05-11  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/iterators.md (VMUL_CHANGE_NLANES): Delete.\n+\t(VMULD): New iterator.\n+\t(VCOND): Handle V4HF and V8HF.\n+\t(VCONQ): Fix entry for V2SF.\n+\t* config/aarch64/aarch64-simd.md (mul_lane<mode>3): Use VMULD\n+\tinstead of VMUL.  Use a 64-bit vector mode for the indexed operand.\n+\t(*aarch64_mul3_elt_<vswap_width_name><mode>): Merge with...\n+\t(mul_laneq<mode>3): ...this define_insn.  Use VMUL instead of VDQSF.\n+\tUse a 128-bit vector mode for the indexed operand.  Use stype for\n+\tthe scheduling type.\n+\n+2021-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.c (maybe_fold_reference): Only return\n+\tis_gimple_min_invariant values.\n+\n+2021-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100509\n+\t* gimple-fold.c (fold_gimple_assign): Only call\n+\tget_symbol_constant_value on register type symbols.\n+\n+2021-05-11  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\t    Joe Ramsay   <joe.ramsay@arm.com>\n+\n+\tPR target/100419\n+\t* config/arm/arm_mve.h (__arm_vstrwq_scatter_offset): Fix wrong arguments.\n+\t(__arm_vcmpneq): Remove duplicate definition.\n+\t(__arm_vstrwq_scatter_offset_p): Likewise.\n+\t(__arm_vmaxq_x): Likewise.\n+\t(__arm_vmlsdavaq): Likewise.\n+\t(__arm_vmlsdavaxq): Likewise.\n+\t(__arm_vmlsdavq_p): Likewise.\n+\t(__arm_vmlsdavxq_p): Likewise.\n+\t(__arm_vrmlaldavhaq): Likewise.\n+\t(__arm_vstrbq_p): Likewise.\n+\t(__arm_vstrbq_scatter_offset): Likewise.\n+\t(__arm_vstrbq_scatter_offset_p): Likewise.\n+\t(__arm_vstrdq_scatter_offset): Likewise.\n+\t(__arm_vstrdq_scatter_offset_p): Likewise.\n+\t(__arm_vstrdq_scatter_shifted_offset): Likewise.\n+\t(__arm_vstrdq_scatter_shifted_offset_p): Likewise.\n+\n+2021-05-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/100471\n+\t* omp-low.c (lower_omp_task_reductions): For OMP_TASKLOOP, if data\n+\tis 0, bypass the reduction loop including\n+\tGOMP_taskgroup_reduction_unregister call.\n+\n+2021-05-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (struct rs6000_cost_data): New member\n+\tcosting_for_scalar.\n+\t(rs6000_density_test): Early return if costing_for_scalar is true.\n+\t(rs6000_init_cost): Init costing_for_scalar of rs6000_cost_data.\n+\n+2021-05-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* doc/tm.texi: Regenerated.\n+\t* target.def (init_cost): Add new parameter costing_for_scalar.\n+\t* targhooks.c (default_init_cost): Adjust for new parameter.\n+\t* targhooks.h (default_init_cost): Likewise.\n+\t* tree-vect-loop.c (_loop_vec_info::_loop_vec_info): Likewise.\n+\t(vect_compute_single_scalar_iteration_cost): Likewise.\n+\t(vect_analyze_loop_2): Likewise.\n+\t* tree-vect-slp.c (_bb_vec_info::_bb_vec_info): Likewise.\n+\t(vect_bb_vectorization_profitable_p): Likewise.\n+\t* tree-vectorizer.h (init_cost): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_init_cost): Likewise.\n+\t* config/i386/i386.c (ix86_init_cost): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_init_cost): Likewise.\n+\n+2021-05-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_vect_nonmem): Renamed to\n+\tvect_nonmem and moved into...\n+\t(struct rs6000_cost_data): ...here.\n+\t(rs6000_init_cost): Use vect_nonmem of cost_data instead.\n+\t(rs6000_add_stmt_cost): Likewise.\n+\t(rs6000_finish_cost): Likewise.\n+\n 2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* range-op.cc (get_bool_state): Adjust head comment."}, {"sha": "d14314023a18d18d199ab922192c1d461e66f1aa", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1 +1 @@\n-20210511\n+20210512"}, {"sha": "4261aa6c91b347a2c23c54a4315815bcb07f18c4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,21 @@\n+2021-05-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/share/conf.py: Do not use binary mode.\n+\tDo not use u' literals as Python3 uses unicode by default.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/ada-tree.h (BUILT_IN_LIKELY): Use builtins\n+\tfrom COROUTINES.\n+\t(BUILT_IN_UNLIKELY): Likewise.\n+\n+2021-05-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnatvsn.adb (Version_String): Rename to...\n+\t(C_Version_String): ...this.\n+\t(Gnat_Version_String): Adjust to above renaming.\n+\t* version.c : Fix formatting glitches.\n+\n 2021-05-10  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/100506"}, {"sha": "386067720462869a681824b46e96c71896941375", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,7 @@\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-lex.c (interpret_float): Handle digit separators for C2X.\n+\n 2021-05-10  Martin Liska  <mliska@suse.cz>\n \n \t* c-ada-spec.c (print_destructor): Use startswith"}, {"sha": "80ea065a8d13f8751ff35e4dcff0187144ddc5e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,30 @@\n+2021-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100517\n+\t* typeck.c (build_reinterpret_cast_1): Check intype on\n+\tcast to vector.\n+\n+2021-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/51577\n+\t* name-lookup.c (maybe_save_operator_binding): Unconditionally\n+\tenable for all function templates, not just generic lambdas.\n+\tHandle compound-assignment operator expressions.\n+\t* typeck.c (build_x_compound_expr): Call maybe_save_operator_binding\n+\tin the type-dependent case.\n+\t(build_x_modify_expr): Likewise.  Move declaration of 'op' closer\n+\tto its first use.\n+\n+2021-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100138\n+\t* constraint.cc (tsubst_constraint): Set up cp_unevaluated.\n+\t(satisfy_atom): Set up iloc_sentinel before calling\n+\tcxx_constant_value.\n+\t* pt.c (tsubst_pack_expansion): When returning a rebuilt pack\n+\texpansion, carry over PACK_EXPANSION_LOCAL_P and\n+\tPACK_EXPANSION_SIZEOF_P from the original pack expansion.\n+\n 2021-05-10  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/100464"}, {"sha": "cc54ad44c727eeead8287faf97d977bfafa34bfe", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,7 @@\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* ja.po: Update.\n+\n 2021-04-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "fd12630c18212180a163806bcdf0c8ac18dab989", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,102 @@\n+2021-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/100508\n+\t* gcc.dg/gomp/pr100508.c: New test.\n+\n+2021-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/94589\n+\t* gcc.dg/tree-ssa/pr94589-1.c: New test.\n+\n+2021-05-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/98218\n+\t* g++.target/i386/pr98218-1.C: Ditto.\n+\t* gcc.target/i386/pr98218-4.c: New test.\n+\t* gcc.target/i386/pr98218-1.c: Correct PR number.\n+\t* gcc.target/i386/pr98218-1a.c: Ditto.\n+\t* gcc.target/i386/pr98218-2.c: Ditto.\n+\t* gcc.target/i386/pr98218-2a.c: Ditto.\n+\t* gcc.target/i386/pr98218-3.c: Ditto.\n+\t* gcc.target/i386/pr98218-3a.c: Ditto.\n+\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/cpp/c11-elifdef-1.c, gcc.dg/cpp/c2x-elifdef-1.c,\n+\tgcc.dg/cpp/c2x-elifdef-2.c: New tests.\n+\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* g++.dg/cpp1y/digit-sep-paste.C, gcc.dg/c2x-digit-separators-3.c:\n+\tNew tests.\n+\n+2021-05-11  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* gcc.dg/guality/pr43077-1.c: Align types of output and input\n+\toperands by lifting immediates to type long.\n+\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c11-digit-separators-1.c,\n+\tgcc.dg/c2x-digit-separators-1.c, gcc.dg/c2x-digit-separators-2.c:\n+\tNew tests.\n+\n+2021-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100517\n+\t* g++.dg/ext/vector41.C: New test.\n+\n+2021-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gfortran.dg/goacc/pr78027.f90: Remove -Wno-hsa option.\n+\t* brig.dg/README: Removed.\n+\t* brig.dg/dg.exp: Removed.\n+\t* brig.dg/test/gimple/alloca.hsail: Removed.\n+\t* brig.dg/test/gimple/atomics.hsail: Removed.\n+\t* brig.dg/test/gimple/branches.hsail: Removed.\n+\t* brig.dg/test/gimple/fbarrier.hsail: Removed.\n+\t* brig.dg/test/gimple/function_calls.hsail: Removed.\n+\t* brig.dg/test/gimple/internal-casts.hsail: Removed.\n+\t* brig.dg/test/gimple/kernarg.hsail: Removed.\n+\t* brig.dg/test/gimple/mem.hsail: Removed.\n+\t* brig.dg/test/gimple/mulhi.hsail: Removed.\n+\t* brig.dg/test/gimple/packed.hsail: Removed.\n+\t* brig.dg/test/gimple/priv-array-offset-access.hsail: Removed.\n+\t* brig.dg/test/gimple/smoke_test.hsail: Removed.\n+\t* brig.dg/test/gimple/variables.hsail: Removed.\n+\t* brig.dg/test/gimple/vector.hsail: Removed.\n+\t* lib/brig-dg.exp: Removed.\n+\t* lib/brig.exp: Removed.\n+\n+2021-05-11  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99725\n+\t* gcc.target/arm/cmse/pr99725.c: New test.\n+\n+2021-05-11  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/fmul_lane_1.c: New test.\n+\n+2021-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100509\n+\t* gcc.dg/pr100509.c: New testcase.\n+\n+2021-05-11  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/risbg-ll-3.c: Change match pattern.\n+\n+2021-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/51577\n+\t* g++.dg/lookup/operator-3.C: New test.\n+\n+2021-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100138\n+\t* g++.dg/cpp2a/concepts-ctad4.C: New test.\n+\n 2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/opt5.ads: New test."}, {"sha": "7b59b08d807a1f1c4ce2e24bea308a6acdcfa209", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,27 @@\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* include/cpplib.h (struct cpp_options): Add elifdef.\n+\t* init.c (struct lang_flags): Add elifdef.\n+\t(lang_defaults): Update to include elifdef initializers.\n+\t(cpp_set_lang): Set elifdef for pfile based on language.\n+\t* directives.c (STDC2X, ELIFDEF): New macros.\n+\t(EXTENSION): Increase value to 3.\n+\t(DIRECTIVE_TABLE): Add #elifdef and #elifndef.\n+\t(_cpp_handle_directive): Do not treat ELIFDEF directives as\n+\tdirectives for language versions without the #elifdef feature.\n+\t(do_elif): Handle #elifdef and #elifndef.\n+\t(do_elifdef, do_elifndef): New functions.\n+\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lex.c (cpp_avoid_paste): Do not allow pasting CPP_NUMBER with\n+\tCPP_CHAR.\n+\n+2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* init.c (lang_defaults): Enable digit separators for GNUC2X and\n+\tSTDC2X.\n+\n 2021-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/100450"}, {"sha": "7b7d2bf75f2d4e5df7b81833e04aef996046e076", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,11 @@\n+2021-05-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/100471\n+\t* taskloop.c (GOMP_taskloop): If GOMP_TASK_FLAG_REDUCTION and not\n+\tGOMP_TASK_FLAG_NOGROUP, when doing early return clear the task\n+\treduction pointer.\n+\t* testsuite/libgomp.c/task-reduction-4.c: New test.\n+\n 2021-05-07  Tobias Burnus  <tobias@codesourcery.com>\n \t    Tom de Vries  <tdevries@suse.de>\n "}, {"sha": "ea3089944f21dc35e8ff4f282986f80eff92ded3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037e36611108283a729d94a8ae15962995742886/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037e36611108283a729d94a8ae15962995742886/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=037e36611108283a729d94a8ae15962995742886", "patch": "@@ -1,3 +1,36 @@\n+2021-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* src/c++17/ryu/LOCAL_PATCHES: Update.\n+\t* src/c++17/ryu/ryu_generic_128.h: Remove extern \"C\".\n+\tRemove declarations for never-defined functions.\n+\t* testsuite/20_util/to_chars/4.cc: New test.\n+\n+2021-05-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/headers/memory/synopsis.cc: Define C++98\n+\talternative for macro.\n+\t* testsuite/20_util/shared_ptr/creation/99006.cc: Add effective\n+\ttarget keyword.\n+\t* testsuite/25_algorithms/copy/debug/99402.cc: Avoid C++11\n+\tsyntax.\n+\n+2021-05-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/allocator.h (allocator<void>) [C++20]: Add\n+\tmissing noexcept to constructor. Restore missing POCMA and\n+\tis_always_equal_traits.\n+\t[C++17]: Make construct and destroy members private and\n+\tdeclare allocator_traits as a friend.\n+\t* include/bits/memoryfwd.h (allocator_traits): Declare.\n+\t* include/ext/malloc_allocator.h (malloc_allocator::allocate):\n+\tAdd nodiscard attribute. Add static assertion for LWG 3307.\n+\t* include/ext/new_allocator.h (new_allocator::allocate): Add\n+\tstatic assertion for LWG 3307.\n+\t* testsuite/20_util/allocator/void.cc: Check that converting\n+\tconstructor is noexcept. Check for propagation traits and\n+\tsize_type and difference_type. Check that pointer and\n+\tconst_pointer are gone in C++20.\n+\n 2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/stop_token: Remove TODO comment."}]}