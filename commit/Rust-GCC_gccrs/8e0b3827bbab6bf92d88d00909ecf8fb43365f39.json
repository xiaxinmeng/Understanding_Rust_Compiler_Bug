{"sha": "8e0b3827bbab6bf92d88d00909ecf8fb43365f39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUwYjM4MjdiYmFiNmJmOTJkODhkMDA5MDllY2Y4ZmI0MzM2NWYzOQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-23T14:31:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-05T13:09:18Z"}, "message": "[Ada] Regenerate *.texi files with Sphinx 4.0.2\n\ngcc/ada/\n\n\t* gnat-style.texi, gnat_rm.texi, gnat_ugn.texi: Regenerate.", "tree": {"sha": "2d42892d7cdb05ef82d1adf24d9072804e920887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d42892d7cdb05ef82d1adf24d9072804e920887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e0b3827bbab6bf92d88d00909ecf8fb43365f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0b3827bbab6bf92d88d00909ecf8fb43365f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e0b3827bbab6bf92d88d00909ecf8fb43365f39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59748b7180590360d3608d30e707a27b0b2cb476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59748b7180590360d3608d30e707a27b0b2cb476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59748b7180590360d3608d30e707a27b0b2cb476"}], "stats": {"total": 4641, "additions": 2563, "deletions": 2078}, "files": [{"sha": "37ce6909d23b45cb6f071b0b2979d2d69b0bb418", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 1088, "deletions": 603, "changes": 1691, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=8e0b3827bbab6bf92d88d00909ecf8fb43365f39", "patch": "@@ -1,94 +1,71 @@\n \\input texinfo   @c -*-texinfo-*-\n @c %**start of header\n-\n-@c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n-@c                                                                            o\n-@c                           GNAT DOCUMENTATION                               o\n-@c                                                                            o\n-@c                     G N A T   C O D I N G   S T Y L E                      o\n-@c                                                                            o\n-@c                     Copyright (C) 1992-2012, AdaCore                       o\n-@c                                                                            o\n-@c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n-\n @setfilename gnat-style.info\n+@documentencoding UTF-8\n+@ifinfo\n+@*Generated by Sphinx 4.0.2.@*\n+@end ifinfo\n+@settitle GNAT Coding Style A Guide for GNAT Developers\n+@defindex ge\n+@paragraphindent 0\n+@exampleindent 4\n+@finalout\n+@dircategory GNU Ada Tools \n+@direntry\n+* gnat-style: (gnat-style.info). gnat-style\n+@end direntry\n \n-@copying\n-Copyright @copyright{} 1992-2012, AdaCore\n+@definfoenclose strong,`,'\n+@definfoenclose emph,`,'\n+@c %**end of header\n \n-Permission is granted to copy, distribute and/or modify this document\n-under the terms of the GNU Free Documentation License, Version 1.3 or\n-any later version published by the Free Software Foundation; with no\n-Invariant Sections, with no Front-Cover Texts and with no Back-Cover\n-Texts.  A copy of the license is included in the section entitled\n-``GNU Free Documentation License''.\n-@end copying\n+@copying\n+@quotation\n+GNAT Coding Style: A Guide for GNAT Developers , Jun 23, 2021\n \n-@settitle GNAT Coding Style\n-@setchapternewpage odd\n+AdaCore\n \n-@include gcc-common.texi\n+Copyright @copyright{} 2008-2021, Free Software Foundation\n+@end quotation\n \n-@dircategory Software development\n-@direntry\n-* gnat-style: (gnat-style).      GNAT Coding Style\n-@end direntry\n-\n-@macro syntax{element}\n-@t{\\element\\}\n-@end macro\n-@c %**end of header\n+@end copying\n \n @titlepage\n-@titlefont{GNAT Coding Style:}\n-@sp 1\n-@title A Guide for GNAT Developers\n-@subtitle GNAT, The GNU Ada Compiler\n-@versionsubtitle\n-@author Ada Core Technologies, Inc.\n-@page\n-@vskip 0pt plus 1filll\n-\n+@title GNAT Coding Style A Guide for GNAT Developers\n @insertcopying\n @end titlepage\n+@contents\n \n-@raisesections\n+@c %** start of user preamble\n \n-@node    Top,       General,         , (dir)\n-@comment node-name, next,    previous, up\n+@c %** end of user preamble\n \n @ifnottex\n-@noindent\n-GNAT Coding Style@*\n-A Guide for GNAT Developers\n-@sp 2\n-@noindent\n-GNAT, The GNU Ada Compiler@*\n-\n-@noindent\n+@node Top\n+@top GNAT Coding Style A Guide for GNAT Developers\n @insertcopying\n @end ifnottex\n \n-\n+@c %**start of body\n+@anchor{gnat-style doc}@anchor{0}\n @menu\n-* General::\n-* Lexical Elements::\n-* Declarations and Types::\n-* Expressions and Names::\n-* Statements::\n-* Subprograms::\n-* Packages::\n-* Program Structure::\n-* GNU Free Documentation License::\n-* Index::\n+* General:: \n+* Lexical Elements:: \n+* Declarations and Types:: \n+* Expressions and Names:: \n+* Statements:: \n+* Subprograms:: \n+* Packages and Visibility Rules:: \n+* Program Structure and Compilation Issues:: \n+* Index:: \n+\n @end menu\n \n-@c  -------------------------------------------------------------------------\n-@node    General, Lexical Elements, Top, Top\n-@section General\n-@c  -------------------------------------------------------------------------\n+@node General,Lexical Elements,Top,Top\n+@anchor{gnat-style general}@anchor{1}@anchor{gnat-style gnat-coding-style-a-guide-for-gnat-developers}@anchor{2}\n+@chapter General\n+\n \n-@noindent\n Most of GNAT is written in Ada using a consistent style to ensure\n readability of the code.  This document has been written to help\n maintain this consistent style, while having a large group of developers\n@@ -97,858 +74,1366 @@ work on the compiler.\n For the coding style in the C parts of the compiler and run time,\n see the GNU Coding Guidelines.\n \n-This document is structured after the @cite{Ada Reference Manual}.\n+This document is structured after the Ada Reference Manual.\n Those familiar with that document should be able to quickly\n lookup style rules for particular constructs.\n \n+@node Lexical Elements,Declarations and Types,General,Top\n+@anchor{gnat-style lexical-elements}@anchor{3}\n+@chapter Lexical Elements\n \n-@c  -------------------------------------------------------------------------\n-@node    Lexical Elements, Declarations and Types, General, Top\n-@section Lexical Elements\n-@c  -------------------------------------------------------------------------\n-@cindex Lexical elements\n-\n-@subsection Character Set and Separators\n-@c  -------------------------------------------------------------------------\n-@cindex Character set\n-@cindex ASCII\n-@cindex Separators\n-@cindex End-of-line\n-@cindex Line length\n-@cindex Indentation\n-\n-@itemize @bullet\n-@item\n-The character set used should be plain 7-bit ASCII@.\n+\n+@menu\n+* Character Set and Separators:: \n+* Identifiers:: \n+* Numeric Literals:: \n+* Reserved Words:: \n+* Comments:: \n+\n+@end menu\n+\n+@node Character Set and Separators,Identifiers,,Lexical Elements\n+@anchor{gnat-style character-set-and-separators}@anchor{4}\n+@section Character Set and Separators\n+\n+\n+@geindex Character set\n+\n+@geindex ASCII\n+\n+@geindex Separators\n+\n+@geindex End-of-line\n+\n+@geindex Line length\n+\n+@geindex Indentation\n+\n+\n+@itemize *\n+\n+@item \n+The character set used should be plain 7-bit ASCII.\n The only separators allowed are space and the end-of-line sequence.\n No other control character or format effector (such as @code{HT},\n-@code{VT}, @code{FF})\n+@code{VT}, @code{FF} )\n should be used.\n The normal end-of-line sequence is used, which may be\n @code{LF}, @code{CR/LF} or @code{CR},\n depending on the host system.  An optional @code{SUB}\n-(@code{16#1A#}) may be present as the\n+( @code{16#1A#} ) may be present as the\n last character in the file on hosts using that character as file terminator.\n \n-@item\n+@item \n Files that are checked in or distributed should be in host format.\n \n-@item\n+@item \n A line should never be longer than 79 characters, not counting the line\n separator.\n \n-@item\n+@item \n Lines must not have trailing blanks.\n \n-@item\n+@item \n Indentation is 3 characters per level for @code{if} statements, loops, and\n @code{case} statements.\n For exact information on required spacing between lexical\n-elements, see file @file{style.adb}.\n-@cindex @file{style.adb} file\n+elements, see file style.adb.\n+\n+@geindex style.adb file\n @end itemize\n \n+@node Identifiers,Numeric Literals,Character Set and Separators,Lexical Elements\n+@anchor{gnat-style identifiers}@anchor{5}\n+@section Identifiers\n+\n \n-@subsection Identifiers\n-@c  -------------------------------------------------------------------------\n-@itemize @bullet\n-@cindex Identifiers\n \n-@item\n+@itemize *\n+\n+@item \n Identifiers will start with an upper case letter, and each letter following\n an underscore will be upper case.\n-@cindex Casing (for identifiers)\n+\n+@geindex Casing (for identifiers)\n+\n Short acronyms may be all upper case.\n All other letters are lower case.\n An exception is for identifiers matching a foreign language.  In particular,\n-we use all lower case where appropriate for C@.\n+we use all lower case where appropriate for C.\n \n-@item\n+@item \n Use underscores to separate words in an identifier.\n-@cindex Underscores\n \n-@item Try to limit your use of abbreviations in identifiers.\n+@geindex Underscores\n+\n+@item \n+Try to limit your use of abbreviations in identifiers.\n It is ok to make a few abbreviations, explain what they mean, and then\n-use them frequently, but don't use lots of obscure abbreviations.  An\n+use them frequently, but don\u2019t use lots of obscure abbreviations.  An\n example is the @code{ALI} word which stands for Ada Library\n Information and is by convention always written in upper-case when\n used in entity names.\n \n-@smallexample @c adanocomment\n-       procedure Find_ALI_Files;\n-@end smallexample\n+@example\n+procedure Find_ALI_Files;\n+@end example\n \n-@item\n-Don't use the variable name @code{I}, use @code{J} instead; @code{I} is too\n-easily confused with @code{1} in some fonts.  Similarly don't use the\n+@item \n+Don\u2019t use the variable name @code{I}, use @code{J} instead; @code{I} is too\n+easily confused with @code{1} in some fonts.  Similarly don\u2019t use the\n variable @code{O}, which is too easily mistaken for the number @code{0}.\n @end itemize\n \n-@subsection Numeric Literals\n-@c  -------------------------------------------------------------------------\n-@cindex Numeric literals\n+@node Numeric Literals,Reserved Words,Identifiers,Lexical Elements\n+@anchor{gnat-style numeric-literals}@anchor{6}\n+@section Numeric Literals\n+\n+\n+\n+@itemize *\n \n-@itemize @bullet\n-@item\n+@item \n Numeric literals should include underscores where helpful for\n readability.\n-@cindex Underscores\n \n-@smallexample\n-      1_000_000\n-      16#8000_0000#\n-      3.14159_26535_89793_23846\n-@end smallexample\n+@geindex Underscores\n+\n+@example\n+1_000_000\n+16#8000_0000#\n+3.14159_26535_89793_23846\n+@end example\n @end itemize\n \n-@subsection Reserved Words\n-@c  -------------------------------------------------------------------------\n-@cindex Reserved words\n+@node Reserved Words,Comments,Numeric Literals,Lexical Elements\n+@anchor{gnat-style reserved-words}@anchor{7}\n+@section Reserved Words\n+\n+\n \n-@itemize @bullet\n-@item\n+@itemize *\n+\n+@item \n Reserved words use all lower case.\n-@cindex Casing (for reserved words)\n \n-@smallexample @c adanocomment\n-       return else\n-@end smallexample\n+@geindex Casing (for reserved words)\n+\n+@example\n+return else\n+@end example\n \n-@item\n+@item \n The words @code{Access}, @code{Delta} and @code{Digits} are\n-capitalized when used as @syntax{attribute_designator}.\n+capitalized when used as attribute_designator.\n @end itemize\n \n-@subsection Comments\n-@c  -------------------------------------------------------------------------\n-@cindex Comments\n+@node Comments,,Reserved Words,Lexical Elements\n+@anchor{gnat-style comments}@anchor{8}\n+@section Comments\n \n-@itemize @bullet\n-@item\n+\n+\n+@itemize *\n+\n+@item \n A comment starts with @code{--} followed by two spaces.\n-The only exception to this rule (i.e.@: one space is tolerated) is when the\n+The only exception to this rule (i.e. one space is tolerated) is when the\n comment ends with a single space followed by @code{--}.\n It is also acceptable to have only one space between @code{--} and the start\n of the comment when the comment is at the end of a line,\n after some Ada code.\n \n-@item\n+@item \n Every sentence in a comment should start with an upper-case letter (including\n the first letter of the comment).\n-@cindex Casing (in comments)\n \n-@item\n-When declarations are commented with ``hanging'' comments, i.e.@:\n+@geindex Casing (in comments)\n+\n+@item \n+When declarations are commented with \u2018hanging\u2019 comments, i.e.\n comments after the declaration, there is no blank line before the\n comment, and if it is absolutely necessary to have blank lines within\n the comments, e.g. to make paragraph separations within a single comment,\n these blank lines @emph{do} have a @code{--} (unlike the\n normal rule, which is to use entirely blank lines for separating\n comment paragraphs).  The comment starts at same level of indentation\n as code it is commenting.\n-@cindex Blank lines (in comments)\n-@cindex Indentation\n \n-@smallexample @c adanocomment\n-       z : Integer;\n-       --  Integer value for storing value of z\n-       --\n-       --  The previous line was a blank line.\n-@end smallexample\n+@geindex Blank lines (in comments)\n+\n+@geindex Indentation\n \n-@item\n+@example\n+z : Integer;\n+--  Integer value for storing value of z\n+--\n+--  The previous line was a blank line.\n+@end example\n+\n+@item \n Comments that are dubious or incomplete, or that comment on possibly\n-wrong or incomplete code, should be preceded or followed by @code{???}@.\n+wrong or incomplete code, should be preceded or followed by @code{???}.\n \n-@item\n+@item \n Comments in a subprogram body must generally be surrounded by blank lines.\n An exception is a comment that follows a line containing a single keyword\n-(@code{begin}, @code{else}, @code{loop}):\n+( @code{begin}, @code{else}, @code{loop} ):\n \n-@smallexample @c adanocomment\n-@group\n-       begin\n-          --  Comment for the next statement\n+@example\n+begin\n+   --  Comment for the next statement\n \n-          A := 5;\n+   A := 5;\n \n-          --  Comment for the B statement\n+   --  Comment for the B statement\n \n-          B := 6;\n-       end;\n-@end group\n-@end smallexample\n+   B := 6;\n+end;\n+@end example\n \n-@item\n+@item \n In sequences of statements, comments at the end of the lines should be\n aligned.\n-@cindex Alignment (in comments)\n \n-@smallexample @c adanocomment\n-        My_Identifier := 5;      --  First comment\n-        Other_Id := 6;           --  Second comment\n-@end smallexample\n+@geindex Alignment (in comments)\n+\n+@example\n+My_Identifier := 5;      --  First comment\n+Other_Id := 6;           --  Second comment\n+@end example\n \n-@item\n+@item \n Short comments that fit on a single line are @emph{not} ended with a\n period.  Comments taking more than a line are punctuated in the normal\n manner.\n \n-@item\n+@item \n Comments should focus on @emph{why} instead of @emph{what}.\n Descriptions of what subprograms do go with the specification.\n \n-@item\n+@item \n Comments describing a subprogram spec should specifically mention the\n formal argument names.  General rule: write a comment that does not\n depend on the names of things.  The names are supplementary, not\n sufficient, as comments.\n \n-@item\n+@item \n @emph{Do not} put two spaces after periods in comments.\n @end itemize\n \n-@c  -------------------------------------------------------------------------\n-@node    Declarations and Types, Expressions and Names, Lexical Elements,Top\n-@section Declarations and Types\n-@c  -------------------------------------------------------------------------\n-@cindex Declarations and Types\n+@node Declarations and Types,Expressions and Names,Lexical Elements,Top\n+@anchor{gnat-style declarations-and-types}@anchor{9}\n+@chapter Declarations and Types\n+\n+\n \n-@itemize @bullet\n-@item\n+@itemize *\n+\n+@item \n In entity declarations, colons must be surrounded by spaces.  Colons\n should be aligned.\n-@cindex Alignment (in declarations)\n \n-@smallexample @c adanocomment\n-        Entity1   : Integer;\n-        My_Entity : Integer;\n-@end smallexample\n+@geindex Alignment (in declarations)\n+\n+@example\n+Entity1   : Integer;\n+My_Entity : Integer;\n+@end example\n \n-@item\n+@item \n Declarations should be grouped in a logical order.\n Related groups of declarations may be preceded by a header comment.\n \n-@item\n+@item \n All local subprograms in a subprogram or package body should be declared\n before the first local subprogram body.\n \n-@item\n+@item \n Do not declare local entities that hide global entities.\n-@cindex Hiding of outer entities\n \n-@item\n+@geindex Hiding of outer entities\n+\n+@item \n Do not declare multiple variables in one declaration that spans lines.\n Start a new declaration on each line, instead.\n \n-@item\n-The @syntax{defining_identifier}s of global declarations serve as\n-comments of a sort.  So don't choose terse names, but look for names\n+@item \n+The defining_identifiers of global declarations serve as\n+comments of a sort.  So don\u2019t choose terse names, but look for names\n that give useful information instead.\n \n-@item\n+@item \n Local names can be shorter, because they are used only within\n one context, where comments explain their purpose.\n \n-@item\n+@item \n When starting an initialization or default expression on the line that follows\n the declaration line, use 2 characters for indentation.\n \n-@smallexample @c adanocomment\n-        Entity1 : Integer :=\n-          Function_Name (Parameters, For_Call);\n-@end smallexample\n+@example\n+Entity1 : Integer :=\n+  Function_Name (Parameters, For_Call);\n+@end example\n \n-@item\n+@item \n If an initialization or default expression needs to be continued on subsequent\n lines, the continuations should be indented from the start of the expression.\n \n-@smallexample @c adanocomment\n-        Entity1 : Integer := Long_Function_Name\n-                               (parameters for call);\n-@end smallexample\n-\n+@example\n+Entity1 : Integer := Long_Function_Name\n+                       (parameters for call);\n+@end example\n @end itemize\n \n+@node Expressions and Names,Statements,Declarations and Types,Top\n+@anchor{gnat-style expressions-and-names}@anchor{a}\n+@chapter Expressions and Names\n+\n \n-@c  -------------------------------------------------------------------------\n-@node    Expressions and Names, Statements, Declarations and Types, Top\n-@section Expressions and Names\n-@c  -------------------------------------------------------------------------\n-@cindex Expressions and names\n \n-@itemize @bullet\n+@itemize *\n \n-@item\n+@item \n Every operator must be surrounded by spaces. An exception is that\n this rule does not apply to the exponentiation operator, for which\n there are no specific layout rules. The reason for this exception\n is that sometimes it makes clearer reading to leave out the spaces\n around exponentiation.\n-@cindex Operators\n \n-@smallexample @c adanocomment\n-       E := A * B**2 + 3 * (C - D);\n-@end smallexample\n+@geindex Operators\n \n-@item\n+@example\n+E := A * B**2 + 3 * (C - D);\n+@end example\n+\n+@item \n Use parentheses where they clarify the intended association of operands\n with operators:\n-@cindex Parenthesization of expressions\n-@smallexample @c adanocomment\n-       (A / B) * C\n-@end smallexample\n+\n+@geindex Parenthesization of expressions\n+\n+@example\n+(A / B) * C\n+@end example\n @end itemize\n \n-@c  -------------------------------------------------------------------------\n-@node    Statements, Subprograms, Expressions and Names, Top\n-@section Statements\n-@c  -------------------------------------------------------------------------\n-@cindex Statements\n+@node Statements,Subprograms,Expressions and Names,Top\n+@anchor{gnat-style statements}@anchor{b}\n+@chapter Statements\n+\n+\n+@menu\n+* Simple and Compound Statements:: \n+* If Statements:: \n+* Case Statements:: \n+* Loop Statements:: \n+* Block Statements:: \n+\n+@end menu\n+\n+@node Simple and Compound Statements,If Statements,,Statements\n+@anchor{gnat-style simple-and-compound-statements}@anchor{c}\n+@section Simple and Compound Statements\n \n-@subsection Simple and Compound Statements\n-@c  -------------------------------------------------------------------------\n-@cindex Simple and compound statements\n \n-@itemize @bullet\n-@item\n+\n+@itemize *\n+\n+@item \n Use only one statement or label per line.\n-@item\n-A longer @syntax{sequence_of_statements} may be divided in logical\n+\n+@item \n+A longer sequence_of_statements may be divided in logical\n groups or separated from surrounding code using a blank line.\n @end itemize\n \n-@subsection If Statements\n-@c  -------------------------------------------------------------------------\n-@cindex @code{if} statement\n+@node If Statements,Case Statements,Simple and Compound Statements,Statements\n+@anchor{gnat-style if-statements}@anchor{d}\n+@section If Statements\n+\n \n-@itemize @bullet\n-@item\n+\n+@itemize *\n+\n+@item \n When the @code{if}, @code{elsif} or @code{else} keywords fit on the\n same line with the condition and the @code{then} keyword, then the\n statement is formatted as follows:\n-@cindex Alignment (in an @code{if} statement)\n-\n-@smallexample @c adanocomment\n-@group\n-        if @var{condition} then\n-           ...\n-        elsif @var{condition} then\n-           ...\n-        else\n-           ...\n-        end if;\n-@end group\n-@end smallexample\n-\n-@noindent\n+\n+@geindex Alignment (in an if statement)\n+\n+@example\n+if condition then\n+   ...\n+elsif condition then\n+   ...\n+else\n+   ...\n+end if;\n+@end example\n+\n When the above layout is not possible, @code{then} should be aligned\n with @code{if}, and conditions should preferably be split before an\n @code{and} or @code{or} keyword a follows:\n \n-@smallexample @c adanocomment\n-@group\n-        if @var{long_condition_that_has_to_be_split}\n-          and then @var{continued_on_the_next_line}\n-        then\n-           ...\n-        end if;\n-@end group\n-@end smallexample\n-\n-@noindent\n+@example\n+if long_condition_that_has_to_be_split\n+  and then continued_on_the_next_line\n+then\n+   ...\n+end if;\n+@end example\n+\n The @code{elsif}, @code{else} and @code{end if} always line up with\n the @code{if} keyword.  The preferred location for splitting the line\n is before @code{and} or @code{or}.  The continuation of a condition is\n indented with two spaces or as many as needed to make nesting clear.\n As an exception, if conditions are closely related either of the\n following is allowed:\n \n-@smallexample\n-@group\n-     if x = lakdsjfhlkashfdlkflkdsalkhfsalkdhflkjdsahf\n-          or else\n-        x = asldkjhalkdsjfhhfd\n-          or else\n-        x = asdfadsfadsf\n-     then\n-       ...\n-     end if;\n-@end group\n-\n-@group\n-     if x = lakdsjfhlkashfdlkflkdsalkhfsalkdhflkjdsahf or else\n-        x = asldkjhalkdsjfhhfd                         or else\n-        x = asdfadsfadsf\n-     then\n-       ...\n-     end if;\n-@end group\n-@end smallexample\n-\n-@item\n-Conditions should use short-circuit forms (@code{and then},\n-@code{or else}), except when the operands are boolean variables\n+@example\n+if x = lakdsjfhlkashfdlkflkdsalkhfsalkdhflkjdsahf\n+     or else\n+   x = asldkjhalkdsjfhhfd\n+     or else\n+   x = asdfadsfadsf\n+then\n+  ...\n+end if;\n+\n+if x = lakdsjfhlkashfdlkflkdsalkhfsalkdhflkjdsahf or else\n+   x = asldkjhalkdsjfhhfd                         or else\n+   x = asdfadsfadsf\n+then\n+  ...\n+end if;\n+@end example\n+\n+@item \n+Conditions should use short-circuit forms ( @code{and then},\n+@code{or else} ), except when the operands are boolean variables\n or boolean constants.\n-@cindex Short-circuit forms\n \n-@item\n+@geindex Short-circuit forms\n+\n+@item \n Complex conditions in @code{if} statements are indented two characters:\n-@cindex Indentation (in @code{if} statements)\n-\n-@smallexample @c adanocomment\n-@group\n-      if @var{this_complex_condition}\n-        and then @var{that_other_one}\n-        and then @var{one_last_one}\n-      then\n-         ...\n-      end if;\n-@end group\n-@end smallexample\n-\n-@noindent\n+\n+@geindex Indentation (in if statements)\n+\n+@example\n+if this_complex_condition\n+  and then that_other_one\n+  and then one_last_one\n+then\n+   ...\n+end if;\n+@end example\n+\n There are some cases where complex conditionals can be laid out\n in manners that do not follow these rules to preserve better\n parallelism between branches, e.g.\n \n-@smallexample @c adanocomment\n-@group\n-      if xyz.abc (gef) = 'c'\n-           or else\n-         xyz.abc (gef) = 'x'\n-      then\n-         ...\n-      end if;\n-@end group\n-@end smallexample\n+@example\n+if xyz.abc (gef) = 'c'\n+     or else\n+   xyz.abc (gef) = 'x'\n+then\n+   ...\n+end if;\n+@end example\n \n-\n-@item\n+@item \n Every @code{if} block is preceded and followed by a blank line, except\n-where it begins or ends a @syntax{sequence_of_statements}.\n-@cindex Blank lines (in an @code{if} statement)\n+where it begins or ends a sequence_of_statements.\n+\n+@geindex Blank lines (in an if statement)\n \n-@smallexample @c adanocomment\n-@group\n-        A := 5;\n+@example\n+A := 5;\n \n-        if A = 5 then\n-           null;\n-        end if;\n+if A = 5 then\n+   null;\n+end if;\n \n-        A := 6;\n-@end group\n-@end smallexample\n+A := 6;\n+@end example\n @end itemize\n \n-@subsection Case Statements\n-@cindex @code{case} statements\n+@node Case Statements,Loop Statements,If Statements,Statements\n+@anchor{gnat-style case-statements}@anchor{e}\n+@section Case Statements\n+\n+\n+\n+@itemize *\n \n-@itemize @bullet\n-@item\n+@item \n Layout is as below.  For long @code{case} statements, the extra indentation\n can be saved by aligning the @code{when} clauses with the opening @code{case}.\n \n-@smallexample @c adanocomment\n-@group\n-       case @var{expression} is\n-          when @var{condition} =>\n-             ...\n-          when @var{condition} =>\n-             ...\n-       end case;\n-@end group\n-@end smallexample\n+@example\n+case expression is\n+   when condition =>\n+      ...\n+   when condition =>\n+      ...\n+end case;\n+@end example\n @end itemize\n \n-@subsection Loop Statements\n-@cindex Loop statements\n+@node Loop Statements,Block Statements,Case Statements,Statements\n+@anchor{gnat-style loop-statements}@anchor{f}\n+@section Loop Statements\n+\n+\n \n-@itemize @bullet\n-@item\n+@itemize *\n+\n+@item \n When possible, have @code{for} or @code{while} on one line with the\n condition and the @code{loop} keyword.\n \n-@smallexample @c adanocomment\n-@group\n-       for J in S'Range loop\n-          ...\n-       end loop;\n-@end group\n-@end smallexample\n-\n-@noindent\n-If the condition is too long, split the condition (see ``If\n-statements'' above) and align @code{loop} with the @code{for} or\n+@example\n+for J in S'Range loop\n+   ...\n+end loop;\n+@end example\n+\n+If the condition is too long, split the condition (see \u2018If\n+statements\u2019 above) and align @code{loop} with the @code{for} or\n @code{while} keyword.\n-@cindex Alignment (in a loop statement)\n-\n-@smallexample @c adanocomment\n-@group\n-      while @var{long_condition_that_has_to_be_split}\n-        and then @var{continued_on_the_next_line}\n-      loop\n-         ...\n-      end loop;\n-@end group\n-@end smallexample\n-\n-@noindent\n-If the @syntax{loop_statement} has an identifier, it is laid out as follows:\n-\n-@smallexample @c adanocomment\n-@group\n-      Outer : while not @var{condition} loop\n-         ...\n-      end Outer;\n-@end group\n-@end smallexample\n+\n+@geindex Alignment (in a loop statement)\n+\n+@example\n+while long_condition_that_has_to_be_split\n+  and then continued_on_the_next_line\n+loop\n+   ...\n+end loop;\n+@end example\n+\n+If the loop_statement has an identifier, it is laid out as follows:\n+\n+@example\n+Outer : while not condition loop\n+   ...\n+end Outer;\n+@end example\n @end itemize\n \n-@subsection Block Statements\n-@cindex Block statement\n+@node Block Statements,,Loop Statements,Statements\n+@anchor{gnat-style block-statements}@anchor{10}\n+@section Block Statements\n+\n+\n+\n+@itemize *\n \n-@itemize @bullet\n-@item\n+@item \n The @code{declare} (optional), @code{begin} and @code{end} words\n-are aligned, except when the @syntax{block_statement} is named.  There\n+are aligned, except when the block_statement is named.  There\n is a blank line before the @code{begin} keyword:\n-@cindex Alignment (in a block statement)\n \n-@smallexample @c adanocomment\n-@group\n-      Some_Block : declare\n-         ...\n+@geindex Alignment (in a block statement)\n \n-      begin\n-         ...\n-      end Some_Block;\n-@end group\n-@end smallexample\n+@example\n+Some_Block : declare\n+   ...\n \n+begin\n+   ...\n+end Some_Block;\n+@end example\n @end itemize\n \n-@c  -------------------------------------------------------------------------\n-@node    Subprograms, Packages, Statements, Top\n-@section Subprograms\n-@c  -------------------------------------------------------------------------\n-@cindex Subprograms\n+@node Subprograms,Packages and Visibility Rules,Statements,Top\n+@anchor{gnat-style subprograms}@anchor{11}\n+@chapter Subprograms\n \n-@subsection Subprogram Declarations\n-@c  -------------------------------------------------------------------------\n-@itemize @bullet\n \n-@item\n+@menu\n+* Subprogram Declarations:: \n+* Subprogram Bodies:: \n+\n+@end menu\n+\n+@node Subprogram Declarations,Subprogram Bodies,,Subprograms\n+@anchor{gnat-style subprogram-declarations}@anchor{12}\n+@section Subprogram Declarations\n+\n+\n+\n+@itemize *\n+\n+@item \n Do not write the @code{in} for parameters.\n \n-@smallexample @c adanocomment\n-      function Length (S : String) return Integer;\n-@end smallexample\n+@example\n+function Length (S : String) return Integer;\n+@end example\n \n-@item\n+@item \n When the declaration line for a procedure or a function is too long to fit\n the entire declaration (including the keyword procedure or function) on a\n single line, then fold it, putting a single parameter on a line, aligning\n the colons, as in:\n \n-@smallexample @c adanocomment\n-@group\n-     procedure Set_Heading\n-       (Source : String;\n-        Count  : Natural;\n-        Pad    : Character := Space;\n-        Fill   : Boolean   := True);\n-@end group\n-@end smallexample\n-\n-@noindent\n+@example\n+procedure Set_Heading\n+  (Source : String;\n+   Count  : Natural;\n+   Pad    : Character := Space;\n+   Fill   : Boolean   := True);\n+@end example\n+\n In the case of a function, if the entire spec does not fit on one line, then\n the return may appear after the last parameter, as in:\n \n-@smallexample @c adanocomment\n-@group\n-      function Head\n-        (Source : String;\n-         Count  : Natural;\n-         Pad    : Character := Space) return String;\n-@end group\n-@end smallexample\n+@example\n+function Head\n+  (Source : String;\n+   Count  : Natural;\n+   Pad    : Character := Space) return String;\n+@end example\n \n-@noindent\n Or it may appear on its own as a separate line. This form is preferred when\n putting the return on the same line as the last parameter would result in\n an overlong line. The return type may optionally be aligned with the types\n of the parameters (usually we do this aligning if it results only in a small\n-number of extra spaces, and otherwise we don't attempt to align). So two\n+number of extra spaces, and otherwise we don\u2019t attempt to align). So two\n alternative forms for the above spec are:\n \n-@smallexample @c adanocomment\n-@group\n-      function Head\n-        (Source : String;\n-         Count  : Natural;\n-         Pad    : Character := Space)\n-         return   String;\n-\n-      function Head\n-        (Source : String;\n-         Count  : Natural;\n-         Pad    : Character := Space)\n-         return String;\n-@end group\n-@end smallexample\n-\n+@example\n+function Head\n+  (Source : String;\n+   Count  : Natural;\n+   Pad    : Character := Space)\n+   return   String;\n+\n+function Head\n+  (Source : String;\n+   Count  : Natural;\n+   Pad    : Character := Space)\n+   return String;\n+@end example\n @end itemize\n \n-@subsection Subprogram Bodies\n-@c  -------------------------------------------------------------------------\n-@cindex Subprogram bodies\n+@node Subprogram Bodies,,Subprogram Declarations,Subprograms\n+@anchor{gnat-style subprogram-bodies}@anchor{13}\n+@section Subprogram Bodies\n+\n+\n \n-@itemize @bullet\n-@item\n+@itemize *\n+\n+@item \n Function and procedure bodies should usually be sorted alphabetically. Do\n not attempt to sort them in some logical order by functionality. For a\n sequence of subprogram specs, a general alphabetical sorting is also\n usually appropriate, but occasionally it makes sense to group by major\n function, with appropriate headers.\n \n-@item\n+@item \n All subprograms have a header giving the function name, with the following\n format:\n \n-@smallexample @c adanocomment\n-@group\n-      -----------------\n-      -- My_Function --\n-      -----------------\n+@example\n+-----------------\n+-- My_Function --\n+-----------------\n \n-      procedure My_Function is\n-      begin\n-        ...\n-      end My_Function;\n-@end group\n-@end smallexample\n+procedure My_Function is\n+begin\n+  ...\n+end My_Function;\n+@end example\n \n-@noindent\n Note that the name in the header is preceded by a single space,\n not two spaces as for other comments. These headers are used on\n nested subprograms as well as outer level subprograms. They may\n also be used as headers for sections of comments, or collections\n of declarations that are related.\n \n-@item\n-Every subprogram body must have a preceding @syntax{subprogram_declaration},\n+@item \n+Every subprogram body must have a preceding subprogram_declaration,\n which includes proper client documentation so that you do not need to\n read the subprogram body in order to understand what the subprogram does and\n how to call it. All subprograms should be documented, without exceptions.\n \n-@item\n-@cindex Blank lines (in subprogram bodies)\n+@geindex Blank lines (in subprogram bodies)\n+\n+@item \n A sequence of declarations may optionally be separated from the following\n begin by a blank line.  Just as we optionally allow blank lines in general\n between declarations, this blank line should be present only if it improves\n readability. Generally we avoid this blank line if the declarative part is\n small (one or two lines) and the body has no blank lines, and we include it\n if the declarative part is long or if the body has blank lines.\n \n-@item\n+@item \n If the declarations in a subprogram contain at least one nested\n subprogram body, then just before the @code{begin} of the enclosing\n subprogram, there is a comment line and a blank line:\n \n-@smallexample @c adanocomment\n-@group\n-    --  Start of processing for @var{Enclosing_Subprogram}\n+@example\n+--  Start of processing for Enclosing_Subprogram\n \n-    begin\n-      ...\n-    end @var{Enclosing_Subprogram};\n-@end group\n-@end smallexample\n+begin\n+  ...\n+end Enclosing_Subprogram;\n+@end example\n \n-@item\n+@item \n When nested subprograms are present, variables that are referenced by any\n nested subprogram should precede the nested subprogram specs. For variables\n that are not referenced by nested procedures, the declarations can either also\n be before any of the nested subprogram specs (this is the old style, more\n generally used). Or then can come just before the begin, with a header. The\n following example shows the two possible styles:\n \n-@smallexample @c adanocomment\n-@group\n-    procedure Style1 is\n-       Var_Referenced_In_Nested      : Integer;\n-       Var_Referenced_Only_In_Style1 : Integer;\n-\n-       proc Nested;\n-       --  Comments ...\n-\n+@example\n+procedure Style1 is\n+   Var_Referenced_In_Nested      : Integer;\n+   Var_Referenced_Only_In_Style1 : Integer;\n \n-       ------------\n-       -- Nested --\n-       ------------\n+   proc Nested;\n+   --  Comments ...\n \n-       procedure Nested is\n-       begin\n-          ...\n-       end Nested;\n+   ------------\n+   -- Nested --\n+   ------------\n \n-    --  Start of processing for Style1\n-\n-    begin\n-       ...\n-    end Style1;\n+   procedure Nested is\n+   begin\n+      ...\n+   end Nested;\n \n-@end group\n+--  Start of processing for Style1\n \n-@group\n-    procedure Style2 is\n-       Var_Referenced_In_Nested : Integer;\n+begin\n+   ...\n+end Style1;\n \n-       proc Nested;\n-       --  Comments ...\n+procedure Style2 is\n+   Var_Referenced_In_Nested : Integer;\n \n-       ------------\n-       -- Nested --\n-       ------------\n+   proc Nested;\n+   --  Comments ...\n \n-       procedure Nested is\n-       begin\n-          ...\n-       end Nested;\n+   ------------\n+   -- Nested --\n+   ------------\n \n-       --  Local variables\n+   procedure Nested is\n+   begin\n+      ...\n+   end Nested;\n \n-       Var_Referenced_Only_In_Style2 : Integer;\n+   --  Local variables\n \n-    --  Start of processing for Style2\n+   Var_Referenced_Only_In_Style2 : Integer;\n \n-    begin\n-       ...\n-    end Style2;\n+--  Start of processing for Style2\n \n-@end group\n-@end smallexample\n+begin\n+   ...\n+end Style2;\n+@end example\n \n-@noindent\n For new code, we generally prefer Style2, but we do not insist on\n modifying all legacy occurrences of Style1, which is still much\n more common in the sources.\n-\n @end itemize\n \n+@node Packages and Visibility Rules,Program Structure and Compilation Issues,Subprograms,Top\n+@anchor{gnat-style packages-and-visibility-rules}@anchor{14}\n+@chapter Packages and Visibility Rules\n+\n \n-@c  -------------------------------------------------------------------------\n-@node    Packages, Program Structure, Subprograms, Top\n-@section Packages and Visibility Rules\n-@c  -------------------------------------------------------------------------\n-@cindex Packages\n \n-@itemize @bullet\n-@item\n+@itemize *\n+\n+@item \n All program units and subprograms have their name at the end:\n \n-@smallexample @c adanocomment\n-@group\n-      package P is\n-         ...\n-      end P;\n-@end group\n-@end smallexample\n+@example\n+package P is\n+   ...\n+end P;\n+@end example\n \n-@item\n-We will use the style of @code{use}-ing @code{with}-ed packages, with\n+@item \n+We will use the style of @code{use} -ing @code{with} -ed packages, with\n the context clauses looking like:\n-@cindex @code{use} clauses\n \n-@smallexample @c adanocomment\n-@group\n-      with A; use A;\n-      with B; use B;\n-@end group\n-@end smallexample\n+@geindex use clauses\n+\n+@example\n+with A; use A;\n+with B; use B;\n+@end example\n \n-@item\n+@item \n Names declared in the visible part of packages should be\n-unique, to prevent name clashes when the packages are @code{use}d.\n-@cindex Name clash avoidance\n-\n-@smallexample @c adanocomment\n-@group\n-      package Entity is\n-         type Entity_Kind is ...;\n-         ...\n-      end Entity;\n-@end group\n-@end smallexample\n-\n-@item\n+unique, to prevent name clashes when the packages are @code{use} d.\n+\n+@geindex Name clash avoidance\n+\n+@example\n+package Entity is\n+   type Entity_Kind is ...;\n+   ...\n+end Entity;\n+@end example\n+\n+@item \n After the file header comment, the context clause and unit specification\n-should be the first thing in a @syntax{program_unit}.\n+should be the first thing in a program_unit.\n \n-@item\n+@item \n Preelaborate, Pure and Elaborate_Body pragmas should be added right after the\n package name, indented an extra level and using the parameterless form:\n \n-@smallexample @c adanocomment\n-@group\n-      package Preelaborate_Package is\n-         pragma Preelaborate;\n-         ...\n-      end Preelaborate_Package;\n-@end group\n-@end smallexample\n-\n+@example\n+package Preelaborate_Package is\n+   pragma Preelaborate;\n+   ...\n+end Preelaborate_Package;\n+@end example\n @end itemize\n \n-@c  -------------------------------------------------------------------------\n-@node    Program Structure, GNU Free Documentation License, Packages, Top\n-@section Program Structure and Compilation Issues\n-@c  -------------------------------------------------------------------------\n-@cindex Program structure\n+@node Program Structure and Compilation Issues,Index,Packages and Visibility Rules,Top\n+@anchor{gnat-style program-structure-and-compilation-issues}@anchor{15}\n+@chapter Program Structure and Compilation Issues\n \n-@itemize @bullet\n-@item\n-Every GNAT source file must be compiled with the @option{-gnatg}\n+\n+\n+@itemize *\n+\n+@item \n+Every GNAT source file must be compiled with the @code{-gnatg}\n switch to check the coding style.\n (Note that you should look at\n-@file{style.adb} to see the lexical rules enforced by\n-@option{-gnatg}).\n-@cindex @option{-gnatg} option (to gcc)\n-@cindex @file{style.adb} file\n+style.adb to see the lexical rules enforced by @code{-gnatg} ).\n+\n+@geindex -gnatg option (to gcc)\n+\n+@geindex style.adb file\n \n-@item\n+@item \n Each source file should contain only one compilation unit.\n \n-@item\n+@item \n Filenames should be 8 or fewer characters, followed by the @code{.adb}\n extension for a body or @code{.ads} for a spec.\n-@cindex File name length\n \n-@item\n-Unit names should be distinct when ``krunch''ed to 8 characters\n-(see @file{krunch.ads}) and the filenames should match the unit name,\n+@geindex File name length\n+\n+@item \n+Unit names should be distinct when \u2018krunch\u2019ed to 8 characters\n+(see krunch.ads) and the filenames should match the unit name,\n except that they are all lower case.\n-@cindex @file{krunch.ads} file\n+\n+@geindex krunch.ads file\n @end itemize\n \n+@menu\n+* GNU Free Documentation License:: \n+\n+@end menu\n \n-@c **********************************\n-@c * GNU Free Documentation License *\n-@c **********************************\n-@node GNU Free Documentation License,Index, Program Structure, Top\n-@unnumberedsec GNU Free Documentation License\n-@set nodefaultgnufreedocumentationlicensenode\n-@include fdl.texi\n-@c GNU Free Documentation License\n-@cindex GNU Free Documentation License\n+@node GNU Free Documentation License,,,Program Structure and Compilation Issues\n+@anchor{share/gnu_free_documentation_license doc}@anchor{16}@anchor{share/gnu_free_documentation_license gnu-fdl}@anchor{17}@anchor{share/gnu_free_documentation_license gnu-free-documentation-license}@anchor{18}\n+@section GNU Free Documentation License\n+\n+\n+Version 1.3, 3 November 2008\n+\n+Copyright  2000, 2001, 2002, 2007, 2008  Free Software Foundation, Inc\n+@indicateurl{http://fsf.org/}\n+\n+Everyone is permitted to copy and distribute verbatim copies of this\n+license document, but changing it is not allowed.\n+\n+@strong{Preamble}\n+\n+The purpose of this License is to make a manual, textbook, or other\n+functional and useful document \u201cfree\u201d in the sense of freedom: to\n+assure everyone the effective freedom to copy and redistribute it,\n+with or without modifying it, either commercially or noncommercially.\n+Secondarily, this License preserves for the author and publisher a way\n+to get credit for their work, while not being considered responsible\n+for modifications made by others.\n+\n+This License is a kind of \u201ccopyleft\u201d, which means that derivative\n+works of the document must themselves be free in the same sense.  It\n+complements the GNU General Public License, which is a copyleft\n+license designed for free software.\n+\n+We have designed this License in order to use it for manuals for free\n+software, because free software needs free documentation: a free\n+program should come with manuals providing the same freedoms that the\n+software does.  But this License is not limited to software manuals;\n+it can be used for any textual work, regardless of subject matter or\n+whether it is published as a printed book.  We recommend this License\n+principally for works whose purpose is instruction or reference.\n+\n+@strong{1. APPLICABILITY AND DEFINITIONS}\n+\n+This License applies to any manual or other work, in any medium, that\n+contains a notice placed by the copyright holder saying it can be\n+distributed under the terms of this License.  Such a notice grants a\n+world-wide, royalty-free license, unlimited in duration, to use that\n+work under the conditions stated herein.  The @strong{Document}, below,\n+refers to any such manual or work.  Any member of the public is a\n+licensee, and is addressed as \u201c@strong{you}\u201d.  You accept the license if you\n+copy, modify or distribute the work in a way requiring permission\n+under copyright law.\n+\n+A \u201c@strong{Modified Version}\u201d of the Document means any work containing the\n+Document or a portion of it, either copied verbatim, or with\n+modifications and/or translated into another language.\n+\n+A \u201c@strong{Secondary Section}\u201d is a named appendix or a front-matter section of\n+the Document that deals exclusively with the relationship of the\n+publishers or authors of the Document to the Document\u2019s overall subject\n+(or to related matters) and contains nothing that could fall directly\n+within that overall subject.  (Thus, if the Document is in part a\n+textbook of mathematics, a Secondary Section may not explain any\n+mathematics.)  The relationship could be a matter of historical\n+connection with the subject or with related matters, or of legal,\n+commercial, philosophical, ethical or political position regarding\n+them.\n+\n+The \u201c@strong{Invariant Sections}\u201d are certain Secondary Sections whose titles\n+are designated, as being those of Invariant Sections, in the notice\n+that says that the Document is released under this License.  If a\n+section does not fit the above definition of Secondary then it is not\n+allowed to be designated as Invariant.  The Document may contain zero\n+Invariant Sections.  If the Document does not identify any Invariant\n+Sections then there are none.\n+\n+The \u201c@strong{Cover Texts}\u201d are certain short passages of text that are listed,\n+as Front-Cover Texts or Back-Cover Texts, in the notice that says that\n+the Document is released under this License.  A Front-Cover Text may\n+be at most 5 words, and a Back-Cover Text may be at most 25 words.\n+\n+A \u201c@strong{Transparent}\u201d copy of the Document means a machine-readable copy,\n+represented in a format whose specification is available to the\n+general public, that is suitable for revising the document\n+straightforwardly with generic text editors or (for images composed of\n+pixels) generic paint programs or (for drawings) some widely available\n+drawing editor, and that is suitable for input to text formatters or\n+for automatic translation to a variety of formats suitable for input\n+to text formatters.  A copy made in an otherwise Transparent file\n+format whose markup, or absence of markup, has been arranged to thwart\n+or discourage subsequent modification by readers is not Transparent.\n+An image format is not Transparent if used for any substantial amount\n+of text.  A copy that is not \u201cTransparent\u201d is called @strong{Opaque}.\n+\n+Examples of suitable formats for Transparent copies include plain\n+ASCII without markup, Texinfo input format, LaTeX input format, SGML\n+or XML using a publicly available DTD, and standard-conforming simple\n+HTML, PostScript or PDF designed for human modification.  Examples of\n+transparent image formats include PNG, XCF and JPG.  Opaque formats\n+include proprietary formats that can be read and edited only by\n+proprietary word processors, SGML or XML for which the DTD and/or\n+processing tools are not generally available, and the\n+machine-generated HTML, PostScript or PDF produced by some word\n+processors for output purposes only.\n+\n+The \u201c@strong{Title Page}\u201d means, for a printed book, the title page itself,\n+plus such following pages as are needed to hold, legibly, the material\n+this License requires to appear in the title page.  For works in\n+formats which do not have any title page as such, \u201cTitle Page\u201d means\n+the text near the most prominent appearance of the work\u2019s title,\n+preceding the beginning of the body of the text.\n+\n+The \u201c@strong{publisher}\u201d means any person or entity that distributes\n+copies of the Document to the public.\n+\n+A section \u201c@strong{Entitled XYZ}\u201d means a named subunit of the Document whose\n+title either is precisely XYZ or contains XYZ in parentheses following\n+text that translates XYZ in another language.  (Here XYZ stands for a\n+specific section name mentioned below, such as \u201c@strong{Acknowledgements}\u201d,\n+\u201c@strong{Dedications}\u201d, \u201c@strong{Endorsements}\u201d, or \u201c@strong{History}\u201d.)\n+To \u201c@strong{Preserve the Title}\u201d\n+of such a section when you modify the Document means that it remains a\n+section \u201cEntitled XYZ\u201d according to this definition.\n+\n+The Document may include Warranty Disclaimers next to the notice which\n+states that this License applies to the Document.  These Warranty\n+Disclaimers are considered to be included by reference in this\n+License, but only as regards disclaiming warranties: any other\n+implication that these Warranty Disclaimers may have is void and has\n+no effect on the meaning of this License.\n+\n+@strong{2. VERBATIM COPYING}\n+\n+You may copy and distribute the Document in any medium, either\n+commercially or noncommercially, provided that this License, the\n+copyright notices, and the license notice saying this License applies\n+to the Document are reproduced in all copies, and that you add no other\n+conditions whatsoever to those of this License.  You may not use\n+technical measures to obstruct or control the reading or further\n+copying of the copies you make or distribute.  However, you may accept\n+compensation in exchange for copies.  If you distribute a large enough\n+number of copies you must also follow the conditions in section 3.\n+\n+You may also lend copies, under the same conditions stated above, and\n+you may publicly display copies.\n+\n+@strong{3. COPYING IN QUANTITY}\n+\n+If you publish printed copies (or copies in media that commonly have\n+printed covers) of the Document, numbering more than 100, and the\n+Document\u2019s license notice requires Cover Texts, you must enclose the\n+copies in covers that carry, clearly and legibly, all these Cover\n+Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on\n+the back cover.  Both covers must also clearly and legibly identify\n+you as the publisher of these copies.  The front cover must present\n+the full title with all words of the title equally prominent and\n+visible.  You may add other material on the covers in addition.\n+Copying with changes limited to the covers, as long as they preserve\n+the title of the Document and satisfy these conditions, can be treated\n+as verbatim copying in other respects.\n+\n+If the required texts for either cover are too voluminous to fit\n+legibly, you should put the first ones listed (as many as fit\n+reasonably) on the actual cover, and continue the rest onto adjacent\n+pages.\n+\n+If you publish or distribute Opaque copies of the Document numbering\n+more than 100, you must either include a machine-readable Transparent\n+copy along with each Opaque copy, or state in or with each Opaque copy\n+a computer-network location from which the general network-using\n+public has access to download using public-standard network protocols\n+a complete Transparent copy of the Document, free of added material.\n+If you use the latter option, you must take reasonably prudent steps,\n+when you begin distribution of Opaque copies in quantity, to ensure\n+that this Transparent copy will remain thus accessible at the stated\n+location until at least one year after the last time you distribute an\n+Opaque copy (directly or through your agents or retailers) of that\n+edition to the public.\n+\n+It is requested, but not required, that you contact the authors of the\n+Document well before redistributing any large number of copies, to give\n+them a chance to provide you with an updated version of the Document.\n+\n+@strong{4. MODIFICATIONS}\n+\n+You may copy and distribute a Modified Version of the Document under\n+the conditions of sections 2 and 3 above, provided that you release\n+the Modified Version under precisely this License, with the Modified\n+Version filling the role of the Document, thus licensing distribution\n+and modification of the Modified Version to whoever possesses a copy\n+of it.  In addition, you must do these things in the Modified Version:\n+\n+\n+@enumerate A\n+\n+@item \n+Use in the Title Page (and on the covers, if any) a title distinct\n+from that of the Document, and from those of previous versions\n+(which should, if there were any, be listed in the History section\n+of the Document).  You may use the same title as a previous version\n+if the original publisher of that version gives permission.\n+\n+@item \n+List on the Title Page, as authors, one or more persons or entities\n+responsible for authorship of the modifications in the Modified\n+Version, together with at least five of the principal authors of the\n+Document (all of its principal authors, if it has fewer than five),\n+unless they release you from this requirement.\n+\n+@item \n+State on the Title page the name of the publisher of the\n+Modified Version, as the publisher.\n+\n+@item \n+Preserve all the copyright notices of the Document.\n+\n+@item \n+Add an appropriate copyright notice for your modifications\n+adjacent to the other copyright notices.\n+\n+@item \n+Include, immediately after the copyright notices, a license notice\n+giving the public permission to use the Modified Version under the\n+terms of this License, in the form shown in the Addendum below.\n+\n+@item \n+Preserve in that license notice the full lists of Invariant Sections\n+and required Cover Texts given in the Document\u2019s license notice.\n+\n+@item \n+Include an unaltered copy of this License.\n+\n+@item \n+Preserve the section Entitled \u201cHistory\u201d, Preserve its Title, and add\n+to it an item stating at least the title, year, new authors, and\n+publisher of the Modified Version as given on the Title Page.  If\n+there is no section Entitled \u201cHistory\u201d in the Document, create one\n+stating the title, year, authors, and publisher of the Document as\n+given on its Title Page, then add an item describing the Modified\n+Version as stated in the previous sentence.\n+\n+@item \n+Preserve the network location, if any, given in the Document for\n+public access to a Transparent copy of the Document, and likewise\n+the network locations given in the Document for previous versions\n+it was based on.  These may be placed in the \u201cHistory\u201d section.\n+You may omit a network location for a work that was published at\n+least four years before the Document itself, or if the original\n+publisher of the version it refers to gives permission.\n+\n+@item \n+For any section Entitled \u201cAcknowledgements\u201d or \u201cDedications\u201d,\n+Preserve the Title of the section, and preserve in the section all\n+the substance and tone of each of the contributor acknowledgements\n+and/or dedications given therein.\n+\n+@item \n+Preserve all the Invariant Sections of the Document,\n+unaltered in their text and in their titles.  Section numbers\n+or the equivalent are not considered part of the section titles.\n+\n+@item \n+Delete any section Entitled \u201cEndorsements\u201d.  Such a section\n+may not be included in the Modified Version.\n+\n+@item \n+Do not retitle any existing section to be Entitled \u201cEndorsements\u201d\n+or to conflict in title with any Invariant Section.\n+\n+@item \n+Preserve any Warranty Disclaimers.\n+@end enumerate\n+\n+If the Modified Version includes new front-matter sections or\n+appendices that qualify as Secondary Sections and contain no material\n+copied from the Document, you may at your option designate some or all\n+of these sections as invariant.  To do this, add their titles to the\n+list of Invariant Sections in the Modified Version\u2019s license notice.\n+These titles must be distinct from any other section titles.\n+\n+You may add a section Entitled \u201cEndorsements\u201d, provided it contains\n+nothing but endorsements of your Modified Version by various\n+parties\u2014for example, statements of peer review or that the text has\n+been approved by an organization as the authoritative definition of a\n+standard.\n+\n+You may add a passage of up to five words as a Front-Cover Text, and a\n+passage of up to 25 words as a Back-Cover Text, to the end of the list\n+of Cover Texts in the Modified Version.  Only one passage of\n+Front-Cover Text and one of Back-Cover Text may be added by (or\n+through arrangements made by) any one entity.  If the Document already\n+includes a cover text for the same cover, previously added by you or\n+by arrangement made by the same entity you are acting on behalf of,\n+you may not add another; but you may replace the old one, on explicit\n+permission from the previous publisher that added the old one.\n+\n+The author(s) and publisher(s) of the Document do not by this License\n+give permission to use their names for publicity for or to assert or\n+imply endorsement of any Modified Version.\n+\n+@strong{5. COMBINING DOCUMENTS}\n+\n+You may combine the Document with other documents released under this\n+License, under the terms defined in section 4 above for modified\n+versions, provided that you include in the combination all of the\n+Invariant Sections of all of the original documents, unmodified, and\n+list them all as Invariant Sections of your combined work in its\n+license notice, and that you preserve all their Warranty Disclaimers.\n+\n+The combined work need only contain one copy of this License, and\n+multiple identical Invariant Sections may be replaced with a single\n+copy.  If there are multiple Invariant Sections with the same name but\n+different contents, make the title of each such section unique by\n+adding at the end of it, in parentheses, the name of the original\n+author or publisher of that section if known, or else a unique number.\n+Make the same adjustment to the section titles in the list of\n+Invariant Sections in the license notice of the combined work.\n+\n+In the combination, you must combine any sections Entitled \u201cHistory\u201d\n+in the various original documents, forming one section Entitled\n+\u201cHistory\u201d; likewise combine any sections Entitled \u201cAcknowledgements\u201d,\n+and any sections Entitled \u201cDedications\u201d.  You must delete all sections\n+Entitled \u201cEndorsements\u201d.\n+\n+@strong{6. COLLECTIONS OF DOCUMENTS}\n+\n+You may make a collection consisting of the Document and other documents\n+released under this License, and replace the individual copies of this\n+License in the various documents with a single copy that is included in\n+the collection, provided that you follow the rules of this License for\n+verbatim copying of each of the documents in all other respects.\n+\n+You may extract a single document from such a collection, and distribute\n+it individually under this License, provided you insert a copy of this\n+License into the extracted document, and follow this License in all\n+other respects regarding verbatim copying of that document.\n+\n+@strong{7. AGGREGATION WITH INDEPENDENT WORKS}\n+\n+A compilation of the Document or its derivatives with other separate\n+and independent documents or works, in or on a volume of a storage or\n+distribution medium, is called an \u201caggregate\u201d if the copyright\n+resulting from the compilation is not used to limit the legal rights\n+of the compilation\u2019s users beyond what the individual works permit.\n+When the Document is included in an aggregate, this License does not\n+apply to the other works in the aggregate which are not themselves\n+derivative works of the Document.\n+\n+If the Cover Text requirement of section 3 is applicable to these\n+copies of the Document, then if the Document is less than one half of\n+the entire aggregate, the Document\u2019s Cover Texts may be placed on\n+covers that bracket the Document within the aggregate, or the\n+electronic equivalent of covers if the Document is in electronic form.\n+Otherwise they must appear on printed covers that bracket the whole\n+aggregate.\n+\n+@strong{8. TRANSLATION}\n+\n+Translation is considered a kind of modification, so you may\n+distribute translations of the Document under the terms of section 4.\n+Replacing Invariant Sections with translations requires special\n+permission from their copyright holders, but you may include\n+translations of some or all Invariant Sections in addition to the\n+original versions of these Invariant Sections.  You may include a\n+translation of this License, and all the license notices in the\n+Document, and any Warranty Disclaimers, provided that you also include\n+the original English version of this License and the original versions\n+of those notices and disclaimers.  In case of a disagreement between\n+the translation and the original version of this License or a notice\n+or disclaimer, the original version will prevail.\n+\n+If a section in the Document is Entitled \u201cAcknowledgements\u201d,\n+\u201cDedications\u201d, or \u201cHistory\u201d, the requirement (section 4) to Preserve\n+its Title (section 1) will typically require changing the actual\n+title.\n+\n+@strong{9. TERMINATION}\n+\n+You may not copy, modify, sublicense, or distribute the Document\n+except as expressly provided under this License.  Any attempt\n+otherwise to copy, modify, sublicense, or distribute it is void, and\n+will automatically terminate your rights under this License.\n+\n+However, if you cease all violation of this License, then your license\n+from a particular copyright holder is reinstated (a) provisionally,\n+unless and until the copyright holder explicitly and finally\n+terminates your license, and (b) permanently, if the copyright holder\n+fails to notify you of the violation by some reasonable means prior to\n+60 days after the cessation.\n+\n+Moreover, your license from a particular copyright holder is\n+reinstated permanently if the copyright holder notifies you of the\n+violation by some reasonable means, this is the first time you have\n+received notice of violation of this License (for any work) from that\n+copyright holder, and you cure the violation prior to 30 days after\n+your receipt of the notice.\n+\n+Termination of your rights under this section does not terminate the\n+licenses of parties who have received copies or rights from you under\n+this License.  If your rights have been terminated and not permanently\n+reinstated, receipt of a copy of some or all of the same material does\n+not give you any rights to use it.\n+\n+@strong{10. FUTURE REVISIONS OF THIS LICENSE}\n+\n+The Free Software Foundation may publish new, revised versions\n+of the GNU Free Documentation License from time to time.  Such new\n+versions will be similar in spirit to the present version, but may\n+differ in detail to address new problems or concerns.  See\n+@indicateurl{http://www.gnu.org/copyleft/}.\n+\n+Each version of the License is given a distinguishing version number.\n+If the Document specifies that a particular numbered version of this\n+License \u201cor any later version\u201d applies to it, you have the option of\n+following the terms and conditions either of that specified version or\n+of any later version that has been published (not as a draft) by the\n+Free Software Foundation.  If the Document does not specify a version\n+number of this License, you may choose any version ever published (not\n+as a draft) by the Free Software Foundation.  If the Document\n+specifies that a proxy can decide which future versions of this\n+License can be used, that proxy\u2019s public statement of acceptance of a\n+version permanently authorizes you to choose that version for the\n+Document.\n+\n+@strong{11. RELICENSING}\n+\n+\u201cMassive Multiauthor Collaboration Site\u201d (or \u201cMMC Site\u201d) means any\n+World Wide Web server that publishes copyrightable works and also\n+provides prominent facilities for anybody to edit those works.  A\n+public wiki that anybody can edit is an example of such a server.  A\n+\u201cMassive Multiauthor Collaboration\u201d (or \u201cMMC\u201d) contained in the\n+site means any set of copyrightable works thus published on the MMC\n+site.\n+\n+\u201cCC-BY-SA\u201d means the Creative Commons Attribution-Share Alike 3.0\n+license published by Creative Commons Corporation, a not-for-profit\n+corporation with a principal place of business in San Francisco,\n+California, as well as future copyleft versions of that license\n+published by that same organization.\n+\n+\u201cIncorporate\u201d means to publish or republish a Document, in whole or\n+in part, as part of another Document.\n+\n+An MMC is \u201celigible for relicensing\u201d if it is licensed under this\n+License, and if all works that were first published under this License\n+somewhere other than this MMC, and subsequently incorporated in whole\n+or in part into the MMC, (1) had no cover texts or invariant sections,\n+and (2) were thus incorporated prior to November 1, 2008.\n+\n+The operator of an MMC Site may republish an MMC contained in the site\n+under CC-BY-SA on the same site at any time before August 1, 2009,\n+provided the MMC is eligible for relicensing.\n+\n+@strong{ADDENDUM: How to use this License for your documents}\n+\n+To use this License in a document you have written, include a copy of\n+the License in the document and put the following copyright and\n+license notices just after the title page:\n+\n+@quotation\n+\n+Copyright \u00a9 YEAR  YOUR NAME.\n+Permission is granted to copy, distribute and/or modify this document\n+under the terms of the GNU Free Documentation License, Version 1.3\n+or any later version published by the Free Software Foundation;\n+with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n+A copy of the license is included in the section entitled \u201cGNU\n+Free Documentation License\u201d.\n+@end quotation\n \n-@node Index,,GNU Free Documentation License, Top\n-@unnumberedsec Index\n+If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,\n+replace the \u201cwith \u2026 Texts.\u201d line with this:\n \n-@printindex cp\n+@quotation\n+\n+with the Invariant Sections being LIST THEIR TITLES, with the\n+Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.\n+@end quotation\n+\n+If you have Invariant Sections without Cover Texts, or some other\n+combination of the three, merge those two alternatives to suit the\n+situation.\n+\n+If your document contains nontrivial examples of program code, we\n+recommend releasing these examples in parallel under your choice of\n+free software license, such as the GNU General Public License,\n+to permit their use in free software.\n+\n+@node Index,,Program Structure and Compilation Issues,Top\n+@unnumbered Index\n+\n+\n+@printindex ge\n \n-@contents\n \n+@c %**end of body\n @bye"}, {"sha": "14b03c4871450513ad4d3c5b0a3f225aaec6f750", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1020, "deletions": 1020, "changes": 2040, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=8e0b3827bbab6bf92d88d00909ecf8fb43365f39"}, {"sha": "713a66212ad6643b74303455e8675c929ce3d0fd", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 455, "deletions": 455, "changes": 910, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e0b3827bbab6bf92d88d00909ecf8fb43365f39/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=8e0b3827bbab6bf92d88d00909ecf8fb43365f39"}]}