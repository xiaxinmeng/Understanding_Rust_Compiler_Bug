{"sha": "9d7d6446562e305c085b89b792368301310f3bac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3ZDY0NDY1NjJlMzA1YzA4NWI4OWI3OTIzNjgzMDEzMTBmM2JhYw==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2015-12-11T15:53:24Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2015-12-11T15:53:24Z"}, "message": "avoid alignment of static variables affecting stack's\n\nFunction (or more narrow) scope static variables (as well as others not\nplaced on the stack) should also not have any effect on the stack\nalignment. I noticed the issue first with Linux'es dynamic_pr_debug()\nconstruct using an 8-byte aligned sub-file-scope local variable.\n\nAccording to my checking bad behavior started with 4.6.x (4.5.3 was\nstill okay), but generated code got quite a bit worse as of 4.9.0.\n\ngcc/\n2015-12-11  Jan Beulich  <jbeulich@suse.com>\n\n\t* cfgexpand.c (expand_one_var): Exit early for static and\n\texternal variables when adjusting stack alignment related.\n\ngcc/testsuite/\n2015-12-11  Jan Beulich  <jbeulich@suse.com>\n\n\t* gcc.c-torture/execute/stkalign.c: New.\n\nFrom-SVN: r231569", "tree": {"sha": "d77f563c2a5cfa28caccef30637717356cd82991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d77f563c2a5cfa28caccef30637717356cd82991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d7d6446562e305c085b89b792368301310f3bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d6446562e305c085b89b792368301310f3bac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7d6446562e305c085b89b792368301310f3bac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d6446562e305c085b89b792368301310f3bac/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34955216a7af430fddffff00d8f9a501f3786fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34955216a7af430fddffff00d8f9a501f3786fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34955216a7af430fddffff00d8f9a501f3786fcd"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "b52b9aae8d1f18d4bdc1435e9e9f1695b1d603da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d6446562e305c085b89b792368301310f3bac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d6446562e305c085b89b792368301310f3bac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d7d6446562e305c085b89b792368301310f3bac", "patch": "@@ -1,3 +1,8 @@\n+2015-12-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* cfgexpand.c (expand_one_var): Exit early for static and\n+\texternal variables when adjusting stack alignment related.\n+\n 2015-12-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_rtx_costs)"}, {"sha": "7f4eba2c226ea909d503908c34c5c6800de10abb", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=9d7d6446562e305c085b89b792368301310f3bac", "patch": "@@ -1550,6 +1550,9 @@ expand_one_var (tree var, bool toplevel, bool really_expand)\n \n   if (TREE_TYPE (var) != error_mark_node && TREE_CODE (var) == VAR_DECL)\n     {\n+      if (is_global_var (var))\n+\treturn 0;\n+\n       /* Because we don't know if VAR will be in register or on stack,\n \t we conservatively assume it will be on stack even if VAR is\n \t eventually put into register after RA pass.  For non-automatic"}, {"sha": "1372d841305427da3db5b1ca8a1ec8758cd078be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d7d6446562e305c085b89b792368301310f3bac", "patch": "@@ -1,3 +1,7 @@\n+2015-12-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* gcc.c-torture/execute/stkalign.c: New.\n+\n 2015-12-11  Tsvetkova Alexandra  <aleksandra.tsvetkova@intel.com>\n \n \t* gcc.target/i386/mpx/memmove-1.c: New test."}, {"sha": "e8761b936aaee438a960b8f254b0d95a8f5e0a04", "filename": "gcc/testsuite/gcc.c-torture/execute/stkalign.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d6446562e305c085b89b792368301310f3bac/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c?ref=9d7d6446562e305c085b89b792368301310f3bac", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-options \"-fno-inline\" } */\n+\n+#include <assert.h>\n+\n+#define ALIGNMENT 64\n+\n+unsigned test(unsigned n, unsigned p)\n+{\n+  static struct { char __attribute__((__aligned__(ALIGNMENT))) c; } s;\n+  unsigned x;\n+\n+  assert(__alignof__(s) == ALIGNMENT);\n+  asm (\"\" : \"=g\" (x), \"+m\" (s) : \"0\" (&x));\n+\n+  return n ? test(n - 1, x) : (x ^ p);\n+}\n+\n+int main (int argc, char *argv[] __attribute__((unused)))\n+{\n+  unsigned int x = test(argc, 0);\n+\n+  x |= test(argc + 1, 0);\n+  x |= test(argc + 2, 0);\n+\n+  return !(x & (ALIGNMENT - 1));\n+}"}]}