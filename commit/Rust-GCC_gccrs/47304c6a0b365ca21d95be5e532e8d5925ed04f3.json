{"sha": "47304c6a0b365ca21d95be5e532e8d5925ed04f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczMDRjNmEwYjM2NWNhMjFkOTViZTVlNTMyZThkNTkyNWVkMDRmMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-29T21:13:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-29T21:13:43Z"}, "message": "PR c++/81180 - ICE with C++17 deduction of member class template.\n\n\t* pt.c (build_deduction_guide): Correct member template handling.\n\nFrom-SVN: r249816", "tree": {"sha": "c1ead2d566ada6c866769d22ae8d566990fcc739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1ead2d566ada6c866769d22ae8d566990fcc739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47304c6a0b365ca21d95be5e532e8d5925ed04f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47304c6a0b365ca21d95be5e532e8d5925ed04f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47304c6a0b365ca21d95be5e532e8d5925ed04f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47304c6a0b365ca21d95be5e532e8d5925ed04f3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f990f3a3b68334b54faea6de0f4edfbd8f23b8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f990f3a3b68334b54faea6de0f4edfbd8f23b8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f990f3a3b68334b54faea6de0f4edfbd8f23b8f0"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "5549f720141f3cafef75074c3d2b1b79ed1b20c5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=47304c6a0b365ca21d95be5e532e8d5925ed04f3", "patch": "@@ -1,5 +1,8 @@\n 2017-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/81180 - ICE with C++17 deduction of member class template.\n+\t* pt.c (build_deduction_guide): Correct member template handling.\n+\n \tPR c++/81188 - matching decltype of member function call.\n \t* tree.c (cp_tree_equal): Remove COMPONENT_REF special case.\n "}, {"sha": "3ecacbd62de3ecfc859a7477a9d4b2c461b0f55a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=47304c6a0b365ca21d95be5e532e8d5925ed04f3", "patch": "@@ -25216,17 +25216,16 @@ build_deduction_guide (tree ctor, tree outer_args, tsubst_flags_t complain)\n     }\n   else\n     {\n+      ++processing_template_decl;\n+\n+      tree fn_tmpl\n+\t= (TREE_CODE (ctor) == TEMPLATE_DECL ? ctor\n+\t   : DECL_TI_TEMPLATE (ctor));\n       if (outer_args)\n-\tctor = tsubst (ctor, outer_args, complain, ctor);\n+\tfn_tmpl = tsubst (fn_tmpl, outer_args, complain, ctor);\n+      ctor = DECL_TEMPLATE_RESULT (fn_tmpl);\n+\n       type = DECL_CONTEXT (ctor);\n-      tree fn_tmpl;\n-      if (TREE_CODE (ctor) == TEMPLATE_DECL)\n-\t{\n-\t  fn_tmpl = ctor;\n-\t  ctor = DECL_TEMPLATE_RESULT (fn_tmpl);\n-\t}\n-      else\n-\tfn_tmpl = DECL_TI_TEMPLATE (ctor);\n \n       tparms = DECL_TEMPLATE_PARMS (fn_tmpl);\n       /* If type is a member class template, DECL_TI_ARGS (ctor) will have\n@@ -25248,7 +25247,6 @@ build_deduction_guide (tree ctor, tree outer_args, tsubst_flags_t complain)\n \t  /* For a member template constructor, we need to flatten the two\n \t     template parameter lists into one, and then adjust the function\n \t     signature accordingly.  This gets...complicated.  */\n-\t  ++processing_template_decl;\n \t  tree save_parms = current_template_parms;\n \n \t  /* For a member template we should have two levels of parms/args, one\n@@ -25309,8 +25307,8 @@ build_deduction_guide (tree ctor, tree outer_args, tsubst_flags_t complain)\n \t    ci = tsubst_constraint_info (ci, tsubst_args, complain, ctor);\n \n \t  current_template_parms = save_parms;\n-\t  --processing_template_decl;\n \t}\n+      --processing_template_decl;\n     }\n \n   if (!memtmpl)"}, {"sha": "eeffa69adf5d9121306480e50eed5064a06e9e18", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction40.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47304c6a0b365ca21d95be5e532e8d5925ed04f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C?ref=47304c6a0b365ca21d95be5e532e8d5925ed04f3", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/81180\n+// { dg-options -std=c++1z }\n+\n+template < int I > struct int_{};\n+\n+template < typename T >\n+struct A{\n+    template < typename U, int I >\n+    struct B{\n+        B(U u, int_< I >){}\n+    };\n+};\n+\n+\n+int main(){\n+    A< int >::B v(0, int_< 0 >());\n+    (void)v;\n+}\n+"}]}