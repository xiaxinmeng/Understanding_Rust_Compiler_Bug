{"sha": "9dc30a5f18d3827d10f118b1758e8453f7aca994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRjMzBhNWYxOGQzODI3ZDEwZjExOGIxNzU4ZTg0NTNmN2FjYTk5NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:51:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:51:47Z"}, "message": "[multiple changes]\n\n2014-07-16  Vincent Celier  <celier@adacore.com>\n\n\t* gnatls.adb: Get the target parameters only if -nostdinc was\n\tnot specified.\n\n2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Insert_Valid_Check): If the expression is a packed\n\tcomponent of a modular type of the right size the data is always\n\tvalid. This os particularly useful if the component is part of\n\ta volatile variable.\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi, sinfo.ads, freeze.adb, exp_aggr.adb: Minor reformatting\n\n2014-07-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.ads: Minor documentation fix.\n\nFrom-SVN: r212663", "tree": {"sha": "ec2a720219a4bc464450f1ff933fe2c4baf0d68e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec2a720219a4bc464450f1ff933fe2c4baf0d68e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dc30a5f18d3827d10f118b1758e8453f7aca994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc30a5f18d3827d10f118b1758e8453f7aca994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc30a5f18d3827d10f118b1758e8453f7aca994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc30a5f18d3827d10f118b1758e8453f7aca994/comments", "author": null, "committer": null, "parents": [{"sha": "2ffcbaa5969ea7f6ae55877df1b859f1369fdc2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ffcbaa5969ea7f6ae55877df1b859f1369fdc2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ffcbaa5969ea7f6ae55877df1b859f1369fdc2b"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "778550e602a884c0aaea1be5dc685cb1e7325361", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -1,3 +1,23 @@\n+2014-07-16  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatls.adb: Get the target parameters only if -nostdinc was\n+\tnot specified.\n+\n+2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Insert_Valid_Check): If the expression is a packed\n+\tcomponent of a modular type of the right size the data is always\n+\tvalid. This os particularly useful if the component is part of\n+\ta volatile variable.\n+\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi, sinfo.ads, freeze.adb, exp_aggr.adb: Minor reformatting\n+\n+2014-07-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.ads: Minor documentation fix.\n+\n 2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Find_Type_Name): Diagnose properly"}, {"sha": "ea1f1647aca8fc1a1e1ce3a633e9dbb64ef278ed", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -6444,6 +6444,17 @@ package body Checks is\n          return;\n       end if;\n \n+      --  If the expression is a packed component of a modular type of the\n+      --  right size, the data is always valid.\n+\n+      if Nkind (Expr) = N_Selected_Component\n+        and then Present (Component_Clause (Entity (Selector_Name (Expr))))\n+        and then Is_Modular_Integer_Type (Typ)\n+        and then Modulus (Typ) = 2 ** Esize (Entity (Selector_Name (Expr)))\n+      then\n+         return;\n+      end if;\n+\n       --  If we have a checked conversion, then validity check applies to\n       --  the expression inside the conversion, not the result, since if\n       --  the expression inside is valid, then so is the conversion result."}, {"sha": "44edd884a1cae410590bf3c71ac8c01f88f894a9", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -3049,8 +3049,7 @@ package body Exp_Aggr is\n       end loop;\n \n       if not Is_Empty_List (Init_Actions) then\n-         Comp_Stmt := Make_Compound_Statement (Loc,\n-                        Actions => Init_Actions);\n+         Comp_Stmt := Make_Compound_Statement (Loc, Actions => Init_Actions);\n          Insert_Action_After (Init_Node, Comp_Stmt);\n          Set_Initialization_Statements (Obj, Comp_Stmt);\n       end if;"}, {"sha": "6055ce0d42f919848a15a728b72b2a7aa54d6ee4", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -298,8 +298,8 @@ package Exp_Ch7 is\n    --  the top of the scope stack.\n \n    procedure Store_After_Actions_In_Scope (L : List_Id);\n-   --  Append the list L of actions to the beginning of the after-actions store\n-   --  in the top of the scope stack.\n+   --  Prepend the list L of actions to the beginning of the after-actions\n+   --  store in the top of the scope stack.\n \n    procedure Wrap_Transient_Declaration (N : Node_Id);\n    --  N is an object declaration. Expand the finalization calls after the"}, {"sha": "45175d7aa81b44efa19aad328d6cf0f5374ef714", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -1372,6 +1372,7 @@ package body Freeze is\n \n    procedure Explode_Initialization_Compound_Statement (E : Entity_Id) is\n       Init_Stmts : constant Node_Id := Initialization_Statements (E);\n+\n    begin\n       if Present (Init_Stmts)\n         and then Nkind (Init_Stmts) = N_Compound_Statement"}, {"sha": "50d034f214666dd0a4cbaf6336f2efe5308e6aa6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -19572,9 +19572,9 @@ Henry Spencer (and binary compatible with this C library).\n \n @noindent\n A unit to rewrite on-the-fly string occurrences in a stream of\n-data. The implementation has a very minimum memory footprint as the\n-full content to be processed is not loaded into memory. This makes\n-this implementation usable for large files or socket streams.\n+data. The implementation has a very minimal memory footprint as the\n+full content to be processed is not loaded into memory all at once. This makes\n+this interface usable for large files or socket streams.\n \n @node GNAT.Secondary_Stack_Info (g-sestin.ads)\n @section @code{GNAT.Secondary_Stack_Info} (@file{g-sestin.ads})"}, {"sha": "33f7682b651d31bc5abfe267599f5184862fbbc8", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -1622,10 +1622,16 @@ begin\n       First_Lib_Dir := First_Lib_Dir.Next;\n    end loop;\n \n-   --  Finally, add the default directories and obtain target parameters\n+   --  Finally, add the default directories\n \n    Osint.Add_Default_Search_Dirs;\n-   Get_Target_Parameters;\n+\n+   --  Get the target parameters to know if the target is OpenVMS, but only if\n+   --  switch -nostdinc was not specified.\n+\n+   if not Opt.No_Stdinc then\n+      Get_Target_Parameters;\n+   end if;\n \n    if Verbose_Mode then\n       Write_Eol;"}, {"sha": "3bae44d1a319a11f4aed87629f0d1d99c2e03cd8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc30a5f18d3827d10f118b1758e8453f7aca994/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=9dc30a5f18d3827d10f118b1758e8453f7aca994", "patch": "@@ -81,7 +81,7 @@ package Sinfo is\n    --  the utility program which creates the Treeprs spec (in file treeprs.ads)\n    --  must be updated appropriately, since it special cases expression fields.\n \n-   --  If a new tree node is added, then the following changes are made\n+   --  If a new tree node is added, then the following changes are made:\n \n    --    Add it to the documentation in the appropriate place\n    --    Add its fields to this documentation section\n@@ -487,6 +487,16 @@ package Sinfo is\n    --    they are set to Empty. This needs sorting out ??? It would be much\n    --    cleaner if they could always be set in the original node ???\n \n+   --  There are a few cases when ASIS has to use not the original, but the\n+   --  rewritten tree structures. This happens when because of some important\n+   --  technical reasons it is impossible or very hard to have the original\n+   --  structure properly decorated by semantic information, and the rewritten\n+   --  structure fully reproduces the original source. Below is the (incomplete\n+   --  for the moment) list of such exceptions:\n+   --\n+   --  * generic specifications and generic bodies;\n+   --  * function calls that use prefixed notation (Operand.Operation [(...)]);\n+\n    --  Representation Information\n \n    --    For the purposes of the data description annex, the representation\n@@ -7323,8 +7333,8 @@ package Sinfo is\n       --  entire list of actions to be moved around as a whole) appearing\n       --  in a sequence of statements.\n \n-      --  This is the statement counterpart to expression node N_Expression_\n-      --  With_Actions.\n+      --  This is the statement counterpart to the expression node\n+      --  N_Expression_With_Actions.\n \n       --  The required semantics is that the set of actions is executed in\n       --  the order in which it appears, as though they appeared by themselves"}]}