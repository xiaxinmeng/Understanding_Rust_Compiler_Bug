{"sha": "65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlZGUwMDUzMGJmODRhZDZmYjdhMDRmNmYxZmY5MmNiNWIwOTVkNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T09:59:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T09:59:42Z"}, "message": "[multiple changes]\n\n2014-06-13  Geert Bosch  <bosch@adacore.com>\n\n\t* gnat_rm.texi, s-tasinf-solaris.ads, sem_prag.adb, gnat_ugn.texi,\n\ts-tasinf-mingw.ads, s-tasinf.ads, s-tasinf-linux.ads,\n\ts-tasinf-vxworks.ads: Make Task_Info pragma and package obsolescent.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* s-tasini.adb, s-tarest.adb, s-taprob.adb: Minor reformatting.\n\nFrom-SVN: r211616", "tree": {"sha": "8d25ae428a994a05f19b96f57c26ab468dda19a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d25ae428a994a05f19b96f57c26ab468dda19a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/comments", "author": null, "committer": null, "parents": [{"sha": "c00b86e2c30d599d4f6893ac09fca13b17dde96c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c00b86e2c30d599d4f6893ac09fca13b17dde96c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c00b86e2c30d599d4f6893ac09fca13b17dde96c"}], "stats": {"total": 150, "additions": 85, "deletions": 65}, "files": [{"sha": "9abc47cf2c9097e44884941707f6d40d509ce894", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -1,3 +1,13 @@\n+2014-06-13  Geert Bosch  <bosch@adacore.com>\n+\n+\t* gnat_rm.texi, s-tasinf-solaris.ads, sem_prag.adb, gnat_ugn.texi,\n+\ts-tasinf-mingw.ads, s-tasinf.ads, s-tasinf-linux.ads,\n+\ts-tasinf-vxworks.ads: Make Task_Info pragma and package obsolescent.\n+\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-tasini.adb, s-tarest.adb, s-taprob.adb: Minor reformatting.\n+\n 2014-06-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* freeze.adb (Freeze_Entity): Remove the check concerning volatile"}, {"sha": "0ae2e21d48fda3896a1ae5e1da7f836a70808341", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 36, "deletions": 32, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -630,7 +630,6 @@ The GNAT Library\n * System.Restrictions (s-restri.ads)::\n * System.Rident (s-rident.ads)::\n * System.Strings.Stream_Ops (s-ststop.ads)::\n-* System.Task_Info (s-tasinf.ads)::\n * System.Unsigned_Types (s-unstyp.ads)::\n * System.Wch_Cnv (s-wchcnv.ads)::\n * System.Wch_Con (s-wchcon.ads)::\n@@ -1082,7 +1081,6 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Suppress_Debug_Info::\n * Pragma Suppress_Exception_Locations::\n * Pragma Suppress_Initialization::\n-* Pragma Task_Info::\n * Pragma Task_Name::\n * Pragma Task_Storage::\n * Pragma Test_Case::\n@@ -6870,27 +6868,6 @@ to apply to the base type and all its subtypes. If the pragma is given\n for other than a first subtype, then it applies only to the given subtype.\n The pragma may not be given after the type is frozen.\n \n-@node Pragma Task_Info\n-@unnumberedsec Pragma Task_Info\n-@findex Task_Info\n-@noindent\n-Syntax\n-\n-@smallexample @c ada\n-pragma Task_Info (EXPRESSION);\n-@end smallexample\n-\n-@noindent\n-This pragma appears within a task definition (like pragma\n-@code{Priority}) and applies to the task in which it appears.  The\n-argument must be of type @code{System.Task_Info.Task_Info_Type}.\n-The @code{Task_Info} pragma provides system dependent control over\n-aspects of tasking implementation, for example, the ability to map\n-tasks to specific processors.  For details on the facilities available\n-for the version of GNAT that you are using, see the documentation\n-in the spec of package System.Task_Info in the runtime\n-library.\n-\n @node Pragma Task_Name\n @unnumberedsec Pragma Task_Name\n @findex Task_Name\n@@ -19872,15 +19849,6 @@ It is intended primarily to support implicit use of such subprograms when\n stream attributes are applied to string types, but the subprograms in this\n package can be used directly by application programs.\n \n-@node System.Task_Info (s-tasinf.ads)\n-@section @code{System.Task_Info} (@file{s-tasinf.ads})\n-@cindex @code{System.Task_Info} (@file{s-tasinf.ads})\n-@cindex Task_Info pragma\n-\n-@noindent\n-This package provides target dependent functionality that is used\n-to support the @code{Task_Info} pragma\n-\n @node System.Unsigned_Types (s-unstyp.ads)\n @section @code{System.Unsigned_Types} (@file{s-unstyp.ads})\n @cindex @code{System.Unsigned_Types} (@file{s-unstyp.ads})\n@@ -22431,6 +22399,7 @@ compatibility purposes.\n * pragma No_Run_Time::\n * pragma Ravenscar::\n * pragma Restricted_Run_Time::\n+* pragma Task_Info::\n @end menu\n \n @node pragma No_Run_Time\n@@ -22459,6 +22428,41 @@ pragma @code{Profile (Restricted)}. The latter usage is\n preferred since the Ada 2005 pragma @code{Profile} is intended for\n this kind of implementation dependent addition.\n \n+@node pragma Task_Info\n+@section pragma Task_Info\n+\n+The functionality provided by pragma @code{Task_Info} is now part of the\n+Ada language. The @code{CPU} aspect and the package\n+@code{System.Multiprocessors} offer a less system-dependent way to specify\n+task affinity or to query the number of processsors.\n+\n+@noindent\n+Syntax\n+\n+@smallexample @c ada\n+pragma Task_Info (EXPRESSION);\n+@end smallexample\n+\n+@noindent\n+This pragma appears within a task definition (like pragma\n+@code{Priority}) and applies to the task in which it appears.  The\n+argument must be of type @code{System.Task_Info.Task_Info_Type}.\n+The @code{Task_Info} pragma provides system dependent control over\n+aspects of tasking implementation, for example, the ability to map\n+tasks to specific processors.  For details on the facilities available\n+for the version of GNAT that you are using, see the documentation\n+in the spec of package System.Task_Info in the runtime\n+library.\n+\n+@node package System.Task_Info (s-tasinf.ads)\n+@section package System.Task_Info (@file{s-tasinf.ads})\n+\n+@noindent\n+This package provides target dependent functionality that is used\n+to support the @code{Task_Info} pragma. The predefined Ada package\n+ @code{System.Multiprocessors} and the @code{CPU} aspect now provide a\n+standard replacement for GNAT's @code{Task_Info} functionality.\n+\n @include fdl.texi\n @c GNU Free Documentation License\n "}, {"sha": "d9c960c88ecdf68136d68e28ce5250b883c9ed85", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -22873,14 +22873,7 @@ stack overflow.) On OpenVMS Alpha systems, if the pragma\n area is created. In the absence of a pragma @code{TASK_STORAGE},\n a default guard area is created.\n \n-GNAT supplies the following task-related pragmas:\n-\n-@itemize @bullet\n-@item  @code{TASK_INFO}\n-\n-This pragma appears within a task definition and\n-applies to the task in which it appears. The argument\n-must be of type @code{SYSTEM.TASK_INFO.TASK_INFO_TYPE}.\n+GNAT supplies the following task-related pragma:\n \n @item  @code{TASK_STORAGE}\n \n@@ -23075,8 +23068,6 @@ following:\n \n @item  @code{SOURCE_REFERENCE}\n \n-@item  @code{TASK_INFO}\n-\n @item  @code{UNCHECKED_UNION}\n \n @item  @code{UNIMPLEMENTED_UNIT}"}, {"sha": "755b772260a6f74e2a455ccaad2f7afd240db9ff", "filename": "gcc/ada/s-taprob.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-taprob.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-taprob.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprob.adb?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -31,17 +31,19 @@\n ------------------------------------------------------------------------------\n \n pragma Polling (Off);\n---  Turn off polling, we do not want ATC polling to take place during\n---  tasking operations. It causes infinite loops and other problems.\n+--  Turn off polling, we do not want ATC polling to take place during tasking\n+--  operations. It causes infinite loops and other problems.\n \n with System.Task_Primitives.Operations;\n with System.Parameters;\n with System.Traces;\n with System.Soft_Links.Tasking;\n-with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+\n+with System.Secondary_Stack;\n+pragma Elaborate_All (System.Secondary_Stack);\n pragma Unreferenced (System.Secondary_Stack);\n --  Make sure the body of Secondary_Stack is elaborated before calling\n---  Init_Tasking_Soft_Links.\n+--  Init_Tasking_Soft_Links. See comments for this routine for explanation.\n \n package body System.Tasking.Protected_Objects is\n "}, {"sha": "1436f2a01aaef9bfb1ae1f64ab275425954a1f44", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -49,9 +49,10 @@ with System.Task_Primitives.Operations;\n with System.Soft_Links.Tasking;\n with System.Storage_Elements;\n \n-with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+with System.Secondary_Stack;\n+pragma Elaborate_All (System.Secondary_Stack);\n --  Make sure the body of Secondary_Stack is elaborated before calling\n---  Init_Tasking_Soft_Links.\n+--  Init_Tasking_Soft_Links. See comments for this routine for explanation.\n \n with System.Soft_Links;\n --  Used for the non-tasking routines (*_NT) that refer to global data. They"}, {"sha": "94bcac1a638e8545f921096a41a430f49e2098f1", "filename": "gcc/ada/s-tasinf-linux.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-linux.ads?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2007-2012, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2007-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,14 +36,15 @@\n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n+--  The functionality in this unit is now provided by the predefined package\n+--  System.Multiprocessors and the CPU aspect. This package is obsolescent.\n \n --  This is the GNU/Linux version of this module\n \n with System.OS_Interface;\n \n package System.Task_Info is\n+   pragma Obsolescent (Task_Info, \"use System.Multiprocessors and CPU aspect\");\n    pragma Preelaborate;\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed"}, {"sha": "f4892d76a26504a6818d9ab075bee4f2aa63ebb0", "filename": "gcc/ada/s-tasinf-mingw.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-mingw.ads?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2007-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 2007-2014, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,14 +36,15 @@\n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n+--  The functionality in this unit is now provided by the predefined package\n+--  System.Multiprocessors and the CPU aspect. This package is obsolescent.\n \n --  This is the Windows (native) version of this module\n \n with System.Win32;\n \n package System.Task_Info is\n+   pragma Obsolescent (Task_Info, \"use System.Multiprocessors and CPU aspect\");\n    pragma Preelaborate;\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed"}, {"sha": "2b457bc68ec21007edf04688906f76046d3f92d8", "filename": "gcc/ada/s-tasinf-solaris.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-solaris.ads?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,14 +36,15 @@\n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n+--  The functionality in this unit is now provided by the predefined package\n+--  System.Multiprocessors and the CPU aspect. This package is obsolescent.\n \n --  This is the Solaris (native) version of this module\n \n with System.OS_Interface;\n \n package System.Task_Info is\n+   pragma Obsolescent (Task_Info, \"use System.Multiprocessors and CPU aspect\");\n    pragma Preelaborate;\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed"}, {"sha": "2c57c2b22e7cb21eb0d5d494632f8fd5b715fc23", "filename": "gcc/ada/s-tasinf-vxworks.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-vxworks.ads?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,14 +36,15 @@\n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n+--  The functionality in this unit is now provided by the predefined package\n+--  System.Multiprocessors and the CPU aspect. This package is obsolescent.\n \n --  This is the VxWorks version of this package\n \n with Interfaces.C;\n \n package System.Task_Info is\n+   pragma Obsolescent (Task_Info, \"use System.Multiprocessors and CPU aspect\");\n    pragma Preelaborate;\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed"}, {"sha": "adad387f2dac22e8bc205521c8d3cbe46ad55be4", "filename": "gcc/ada/s-tasinf.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf.ads?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,10 +36,11 @@\n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n+--  The functionality in this unit is now provided by the predefined package\n+--  System.Multiprocessors and the CPU aspect. This package is obsolescent.\n \n package System.Task_Info is\n+   pragma Obsolescent (Task_Info, \"use System.Multiprocessors and CPU aspect\");\n    pragma Preelaborate;\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed"}, {"sha": "45c99cdadce1a56b2d015a468d528a0b13208ba6", "filename": "gcc/ada/s-tasini.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.adb?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -47,10 +47,11 @@ with System.Soft_Links.Tasking;\n with System.Tasking.Debug;\n with System.Parameters;\n \n-with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+with System.Secondary_Stack;\n+pragma Elaborate_All (System.Secondary_Stack);\n pragma Unreferenced (System.Secondary_Stack);\n --  Make sure the body of Secondary_Stack is elaborated before calling\n---  Init_Tasking_Soft_Links.\n+--  Init_Tasking_Soft_Links. See comments for this routine for explanation.\n \n package body System.Tasking.Initialization is\n "}, {"sha": "797840ff977ab546f22a6e8a8138d3d911f0555d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "patch": "@@ -20519,6 +20519,12 @@ package body Sem_Prag is\n          begin\n             GNAT_Pragma;\n \n+            if Warn_On_Obsolescent_Feature then\n+               Error_Msg_N\n+                 (\"'G'N'A'T pragma Task_Info is now obsolete, use 'C'P'U \"\n+                  & \"instead?j?\", N);\n+            end if;\n+\n             if Nkind (P) /= N_Task_Definition then\n                Error_Pragma (\"pragma% must appear in task definition\");\n             end if;"}]}