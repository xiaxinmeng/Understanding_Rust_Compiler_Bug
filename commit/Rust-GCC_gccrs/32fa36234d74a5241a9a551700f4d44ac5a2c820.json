{"sha": "32fa36234d74a5241a9a551700f4d44ac5a2c820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmYTM2MjM0ZDc0YTUyNDFhOWE1NTE3MDBmNGQ0NGFjNWEyYzgyMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-20T13:06:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-20T13:06:58Z"}, "message": "re PR tree-optimization/80113 (ICE in set_var_live_on_entry at tree-ssa-live.c:1018)\n\n2017-03-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80113\n\t* graphite-isl-ast-to-gimple.c (copy_loop_phi_nodes): Do not\n\tallocate extra SSA name for PHI def.\n\t(add_close_phis_to_outer_loops): Likewise.\n\t(add_close_phis_to_merge_points): Likewise.\n\t(copy_loop_close_phi_args): Likewise.\n\t(copy_cond_phi_nodes): Likewise.\n\nFrom-SVN: r246277", "tree": {"sha": "5c96c40c0be8d27d1c1f675c935905d49eb5747b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c96c40c0be8d27d1c1f675c935905d49eb5747b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32fa36234d74a5241a9a551700f4d44ac5a2c820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fa36234d74a5241a9a551700f4d44ac5a2c820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fa36234d74a5241a9a551700f4d44ac5a2c820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fa36234d74a5241a9a551700f4d44ac5a2c820/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "243e28bfb984e4cd2f0008e5096d9e5d6941e622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e28bfb984e4cd2f0008e5096d9e5d6941e622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243e28bfb984e4cd2f0008e5096d9e5d6941e622"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "f8b56a2807fffcedaab47b93d7f9c604aeadc5f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fa36234d74a5241a9a551700f4d44ac5a2c820/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fa36234d74a5241a9a551700f4d44ac5a2c820/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32fa36234d74a5241a9a551700f4d44ac5a2c820", "patch": "@@ -1,3 +1,13 @@\n+2017-03-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80113\n+\t* graphite-isl-ast-to-gimple.c (copy_loop_phi_nodes): Do not\n+\tallocate extra SSA name for PHI def.\n+\t(add_close_phis_to_outer_loops): Likewise.\n+\t(add_close_phis_to_merge_points): Likewise.\n+\t(copy_loop_close_phi_args): Likewise.\n+\t(copy_cond_phi_nodes): Likewise.\n+\n 2017-03-20  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/79753"}, {"sha": "3f082da76996b842ba90eaec97f9797d301a265e", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fa36234d74a5241a9a551700f4d44ac5a2c820/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fa36234d74a5241a9a551700f4d44ac5a2c820/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=32fa36234d74a5241a9a551700f4d44ac5a2c820", "patch": "@@ -1891,7 +1891,7 @@ copy_loop_phi_nodes (basic_block bb, basic_block new_bb)\n       if (is_gimple_reg (res) && scev_analyzable_p (res, region->region))\n \tcontinue;\n \n-      gphi *new_phi = create_phi_node (SSA_NAME_VAR (res), new_bb);\n+      gphi *new_phi = create_phi_node (NULL_TREE, new_bb);\n       tree new_res = create_new_def_for (res, new_phi,\n \t\t\t\t\t gimple_phi_result_ptr (new_phi));\n       set_rename (res, new_res);\n@@ -1991,7 +1991,7 @@ add_close_phis_to_outer_loops (tree last_merge_name, edge last_e,\n   if (!bb_contains_loop_close_phi_nodes (bb) || !single_succ_p (bb))\n     bb = split_edge (e);\n \n-  gphi *close_phi = create_phi_node (SSA_NAME_VAR (last_merge_name), bb);\n+  gphi *close_phi = create_phi_node (NULL_TREE, bb);\n   tree res = create_new_def_for (last_merge_name, close_phi,\n \t\t\t\t gimple_phi_result_ptr (close_phi));\n   set_rename (old_close_phi_name, res);\n@@ -2036,7 +2036,7 @@ add_close_phis_to_merge_points (gphi *old_close_phi, gphi *new_close_phi,\n       last_merge_name = add_close_phis_to_outer_loops (last_merge_name, merge_e,\n \t\t\t\t\t\t       old_close_phi);\n \n-      gphi *merge_phi = create_phi_node (SSA_NAME_VAR (old_close_phi_name), new_merge_bb);\n+      gphi *merge_phi = create_phi_node (NULL_TREE, new_merge_bb);\n       tree merge_res = create_new_def_for (old_close_phi_name, merge_phi,\n \t\t\t\t\t   gimple_phi_result_ptr (merge_phi));\n       set_rename (old_close_phi_name, merge_res);\n@@ -2089,7 +2089,7 @@ copy_loop_close_phi_args (basic_block old_bb, basic_block new_bb, bool postpone)\n \t/* Loop close phi nodes should not be scev_analyzable_p.  */\n \tgcc_unreachable ();\n \n-      gphi *new_close_phi = create_phi_node (SSA_NAME_VAR (res), new_bb);\n+      gphi *new_close_phi = create_phi_node (NULL_TREE, new_bb);\n       tree new_res = create_new_def_for (res, new_close_phi,\n \t\t\t\t\t gimple_phi_result_ptr (new_close_phi));\n       set_rename (res, new_res);\n@@ -2472,7 +2472,7 @@ copy_cond_phi_nodes (basic_block bb, basic_block new_bb, vec<tree> iv_map)\n       if (virtual_operand_p (res))\n \tcontinue;\n \n-      gphi *new_phi = create_phi_node (SSA_NAME_VAR (res), new_bb);\n+      gphi *new_phi = create_phi_node (NULL_TREE, new_bb);\n       tree new_res = create_new_def_for (res, new_phi,\n \t\t\t\t\t gimple_phi_result_ptr (new_phi));\n       set_rename (res, new_res);"}]}