{"sha": "ebf417348808be4608fd44ba3b2863b735b4324e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJmNDE3MzQ4ODA4YmU0NjA4ZmQ0NGJhM2IyODYzYjczNWI0MzI0ZQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-12-07T10:14:58Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-12-07T10:14:58Z"}, "message": "re PR middle-end/78691 (ICE compiling Linux boot code)\n\n\tPR tree-optimization/78691\n\t* match.pd ((convert1 (minmax ((convert2 (x) c)))) -> minmax (x c)):\n\tRequire integral type for the outer expression.\n\tgcc/testsuite\n\tPR tree-optimization/78691\n\t* gcc.target/i386/pr78691-i386.c: New test.\n\t* gcc.target/powerpc/pr78691-ppc.c: New test.\n\nFrom-SVN: r243335", "tree": {"sha": "9cea72e97f3641dd7b37c8e0b7ddbb4091e51a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cea72e97f3641dd7b37c8e0b7ddbb4091e51a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebf417348808be4608fd44ba3b2863b735b4324e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf417348808be4608fd44ba3b2863b735b4324e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf417348808be4608fd44ba3b2863b735b4324e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf417348808be4608fd44ba3b2863b735b4324e/comments", "author": null, "committer": null, "parents": [{"sha": "81a58ffbb7d6dd26bf13a09d293e6082aceda520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a58ffbb7d6dd26bf13a09d293e6082aceda520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a58ffbb7d6dd26bf13a09d293e6082aceda520"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "4f7657050268c3781928865a761bc73d57aa61aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebf417348808be4608fd44ba3b2863b735b4324e", "patch": "@@ -1,3 +1,9 @@\n+2016-12-07  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/78691\n+\t* match.pd ((convert1 (minmax ((convert2 (x) c)))) -> minmax (x c)):\n+\tRequire integral type for the outer expression.\n+\n 2016-12-07  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n \n \t* config/aarch64/aarch64.c"}, {"sha": "feaa4a14478c0a682f07240b706dfe072eea6e9f", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=ebf417348808be4608fd44ba3b2863b735b4324e", "patch": "@@ -1378,7 +1378,8 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for minmax (min max)\n  (simplify\n   (convert (minmax@0 (convert @1) INTEGER_CST@2))\n-  (if (types_match (@1, type) && int_fits_type_p (@2, type)\n+  (if (INTEGRAL_TYPE_P (type)\n+       && types_match (@1, type) && int_fits_type_p (@2, type)\n        && TYPE_SIGN (TREE_TYPE (@0)) == TYPE_SIGN (type)\n        && TYPE_PRECISION (TREE_TYPE (@0)) > TYPE_PRECISION (type))\n    (minmax @1 (convert @2)))))"}, {"sha": "eeeae2ec16df8f42c5a5db6d68487ca5287dd7e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebf417348808be4608fd44ba3b2863b735b4324e", "patch": "@@ -1,3 +1,9 @@\n+2016-12-07  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/78691\n+\t* gcc.target/i386/pr78691-i386.c: New test.\n+\t* gcc.target/powerpc/pr78691-ppc.c: New test.\n+\n 2016-12-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.target/i386/pr70322-1.c: Add -mno-stackrealign to dg-options."}, {"sha": "f4b88559bc3e9fd40b4af6b76ae1cf4432b8fe41", "filename": "gcc/testsuite/gcc.target/i386/pr78691-i386.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78691-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78691-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78691-i386.c?ref=ebf417348808be4608fd44ba3b2863b735b4324e", "patch": "@@ -0,0 +1,14 @@\n+/* PR tree-optimization/78691 */\n+/* { dg-options \"-Os -m16\" } */\n+\n+int fn1(char *p1, char *p2) {\n+  int a;\n+  for (;;)\n+    switch (*p2) {\n+    case 'c':\n+      while (--a > 0)\n+        *p1++ = ' ';\n+      p1++;\n+      a--;\n+    }\n+}"}, {"sha": "73e3c876f9f0af9fab6b23fb304dba6880e9df4c", "filename": "gcc/testsuite/gcc.target/powerpc/pr78691-ppc.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78691-ppc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf417348808be4608fd44ba3b2863b735b4324e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78691-ppc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78691-ppc.c?ref=ebf417348808be4608fd44ba3b2863b735b4324e", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/78691 */\n+/* { dg-options \"-Os -m32\" } */\n+\n+int *b;\n+int fn1() {\n+  char *c;\n+  int a;\n+  for (;;)\n+    switch (*b) {\n+    case 'c':\n+      while (--a > 0)\n+        *c++ = ' ';\n+      c++;\n+      if (a)\n+        a = sizeof(void *);\n+    }\n+}\n+"}]}