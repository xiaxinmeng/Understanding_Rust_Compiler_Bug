{"sha": "f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRjOGQ0NGUyN2U5MGU2ZDgyMmQwMmY0ODUzZTNmNmFiODAzODJmZg==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2019-10-18T15:00:32Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2019-10-18T15:00:32Z"}, "message": "[Arm] Fix multilibs for Armv7-R\n\nThis patch maps multilibs using -march=armv7-r+vfpv3-d16-fp16 and\n-march=armv7-r+vfpv3-d16-fp16+idiv to v7+fp.  This patch also adds a new\nmultilib for armv7-r+fp.sp and maps -march=armv7-r+fp.sp+idiv,\n-march=armv7-r+vfpv3xd-fp16 and -march=armv7-r+vfpv3xd-fp16+idiv to it.\n\nThis patch also makes it so that the generated multilib header file is\nregenerated if changes have been made to either t-multilib, t-aprofile or\nt-rmprofile when doing incremental builds.\n\ngcc/ChangeLog:\n2019-10-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/arm/t-multilib: Add rule to regenerate mutlilib header file\n\twith any change to t-multilib, t-aprofile and t-rmprofile.  Also add\n\tnew multilib variants and new mappings.\n\ngcc/testsuite/ChangeLog:\n2019-10-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc.target/arm/multilib.exp: Add extra tests.\n\nFrom-SVN: r277156", "tree": {"sha": "91c92e77d772e8edebb661d2dae3baa7a99dadab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91c92e77d772e8edebb661d2dae3baa7a99dadab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "638ba8121dd2042469c4b0051539c6bb8d3a5845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638ba8121dd2042469c4b0051539c6bb8d3a5845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638ba8121dd2042469c4b0051539c6bb8d3a5845"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "dda2718a7a04f6839e8c37e2911556f20f3eefe3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "patch": "@@ -1,3 +1,9 @@\n+2019-10-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/arm/t-multilib: Add rule to regenerate mutlilib header file\n+\twith any change to t-multilib, t-aprofile and t-rmprofile.  Also add\n+\tnew multilib variants and new mappings.\n+\n 2019-10-18  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/86040"}, {"sha": "dc97c8f09fb0b7f53520432e1a174adfce1bf6af", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "patch": "@@ -24,6 +24,8 @@\n # values during the configure step.  We enforce this during the\n # top-level configury.\n \n+s-mlib: $(srcdir)/config/arm/t-multilib $(srcdir)/config/arm/t-aprofile $(srcdir)/config/arm/t-rmprofile\n+\n MULTILIB_OPTIONS     =\n MULTILIB_DIRNAMES    =\n MULTILIB_EXCEPTIONS  =\n@@ -63,6 +65,8 @@ all_early_arch\t\t:= armv5tej armv6 armv6j armv6k armv6z armv6kz \\\n v7_a_arch_variants\t:= $(call all_feat_combs, mp sec)\n v7_a_nosimd_variants\t:= +fp +vfpv3 +vfpv3-d16-fp16 +vfpv3-fp16 +vfpv4-d16 +vfpv4\n v7_a_simd_variants\t:= +simd +neon-fp16 +neon-vfpv4\n+v7_r_sp_variants\t:= +fp.sp +fp.sp+idiv +vfpv3xd-fp16 +vfpv3xd-fp16+idiv\n+v7_r_dp_variants\t:= +fp +fp+idiv +vfpv3-d16-fp16 +vfpv3-d16-fp16+idiv\n v7ve_nosimd_variants\t:= +vfpv3-d16 +vfpv3 +vfpv3-d16-fp16 +vfpv3-fp16 +fp +vfpv4\n v7ve_vfpv3_simd_variants := +neon +neon-fp16\n v7ve_vfpv4_simd_variants := +simd\n@@ -86,8 +90,8 @@ SEP := $(and $(HAS_APROFILE),$(HAS_RMPROFILE),/)\n MULTILIB_OPTIONS\t+= marm/mthumb\n MULTILIB_DIRNAMES\t+= arm thumb\n \n-MULTILIB_OPTIONS\t+= march=armv5te+fp/march=armv7/march=armv7+fp/$(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)\n-MULTILIB_DIRNAMES\t+= v5te v7 v7+fp $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)\n+MULTILIB_OPTIONS\t+= march=armv5te+fp/march=armv7/march=armv7+fp/march=armv7-r+fp.sp/$(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)\n+MULTILIB_DIRNAMES\t+= v5te v7 v7+fp v7-r+fp.sp $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)\n \n MULTILIB_OPTIONS\t+= mfloat-abi=soft/mfloat-abi=softfp/mfloat-abi=hard\n MULTILIB_DIRNAMES\t+= nofp softfp hard\n@@ -100,22 +104,31 @@ MULTILIB_REQUIRED\t+= mthumb/march=armv7/mfloat-abi=soft\n MULTILIB_REQUIRED\t+= mthumb/march=armv7+fp/mfloat-abi=softfp\n MULTILIB_REQUIRED\t+= mthumb/march=armv7+fp/mfloat-abi=hard\n \n-# Map v7-r down onto common v7 code.\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-r+fp.sp/mfloat-abi=softfp\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-r+fp.sp/mfloat-abi=hard\n+\n+# Map v7-r with double precision down onto common v7 code.\n MULTILIB_MATCHES\t+= march?armv7=march?armv7-r\n MULTILIB_MATCHES\t+= march?armv7=march?armv7-r+idiv\n-MULTILIB_MATCHES\t+= march?armv7+fp=march?armv7-r+fp\n-MULTILIB_MATCHES\t+= march?armv7+fp=march?armv7-r+fp+idiv\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v7_r_dp_variants), \\\n+\t\t\t     march?armv7+fp=march?armv7-r$(ARCH))\n+\n+# Map v7-r single precision variants to v7-r with single precision.\n+MULTILIB_MATCHES\t+= $(foreach ARCH, \\\n+\t\t\t     $(filter-out +fp.sp, $(v7_r_sp_variants)), \\\n+\t\t\t     march?armv7-r+fp.sp=march?armv7-r$(ARCH))\n \n MULTILIB_MATCHES\t+= $(foreach ARCH, $(all_early_arch), \\\n \t\t\t     march?armv5te+fp=march?$(ARCH)+fp)\n-# Map v8-r down onto common v7 code.\n+# Map v8-r down onto common v7 code or v7-r sp.\n MULTILIB_MATCHES\t+= march?armv7=march?armv8-r\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_r_nosimd_variants), \\\n \t\t\t     march?armv7=march?armv8-r$(ARCH))\n MULTILIB_MATCHES\t+= $(foreach ARCH,+simd +crypto, \\\n \t\t\t     march?armv7+fp=march?armv8-r$(ARCH) \\\n \t\t\t     march?armv7+fp=march?armv8-r+crc$(ARCH))\n-\n+MULTILIB_MATCHES\t+= march?armv7-r+fp.sp=march?armv8-r+fp.sp\n+MULTILIB_MATCHES\t+= march?armv7-r+fp.sp=march?armv8-r+crc+fp.sp\n \n ifeq (,$(HAS_APROFILE))\n # Map all v7-a\n@@ -177,7 +190,7 @@ MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_5_a_simd_variants), \\\n MULTILIB_REUSE\t\t+= mthumb/march.armv7/mfloat-abi.soft=marm/march.armv7/mfloat-abi.soft\n \n MULTILIB_REUSE\t\t+= $(foreach ABI, hard softfp, \\\n-\t\t\t     $(foreach ARCH, armv7+fp, \\\n+\t\t\t     $(foreach ARCH, armv7+fp armv7-r+fp\\.sp, \\\n \t\t\t       mthumb/march.$(ARCH)/mfloat-abi.$(ABI)=marm/march.$(ARCH)/mfloat-abi.$(ABI)))\n \n # Softfp but no FP, use the soft-float libraries."}, {"sha": "7d427a96d6df688cf2a5013fd2d5f6c963090f05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "patch": "@@ -1,3 +1,7 @@\n+2019-10-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc.target/arm/multilib.exp: Add extra tests.\n+\n 2019-10-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/91586"}, {"sha": "dcea829965eb15e372401e6389df5a1403393ecb", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c8d44e27e90e6d822d02f4853e3f6ab80382ff/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=f4c8d44e27e90e6d822d02f4853e3f6ab80382ff", "patch": "@@ -753,6 +753,28 @@ if {[multilib_config \"rmprofile\"] } {\n \t{-march=armv8-m.main+fp.dp -mfpu=fpv5-d16 -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n \t{-march=armv8-m.main+fp+dsp -mfpu=fpv5-d16 -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n \t{-march=armv8-m.main+fp.dp+dsp -mfpu=fpv5-d16 -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n+\t{-march=armv7-r+fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-r+fp -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-r+fp+idiv -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-r+fp+idiv -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-r+vfpv3-d16-fp16 -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-r+vfpv3-d16-fp16 -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-r+vfpv3-d16-fp16+idiv -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-r+vfpv3-d16-fp16+idiv -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-r+fp.sp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv7-r+fp.sp -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv7-r+fp.sp+idiv -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv7-r+fp.sp+idiv -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv7-r+vfpv3xd -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv7-r+vfpv3xd -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv7-r+vfpv3xd+idiv -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv7-r+vfpv3xd+idiv -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv7-r+vfpv3xd-fp16+idiv -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv7-r+vfpv3xd-fp16+idiv -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv8-r+fp.sp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv8-r+fp.sp -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv8-r+crc+fp.sp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n+\t{-march=armv8-r+crc+fp.sp -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n     } {\n \tcheck_multi_dir $opts $dir\n     }"}]}