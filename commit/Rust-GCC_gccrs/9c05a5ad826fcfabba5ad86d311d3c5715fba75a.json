{"sha": "9c05a5ad826fcfabba5ad86d311d3c5715fba75a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMwNWE1YWQ4MjZmY2ZhYmJhNWFkODZkMzExZDNjNTcxNWZiYTc1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-05T19:25:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-05T19:25:31Z"}, "message": "(PREFERRED_RELOAD_CLASS): FP constants rejected by 'G' are OK for\nclass FP_REGS.\n\nFrom-SVN: r8395", "tree": {"sha": "028c3d78f07c6b5c0ef6b04c5a50ca625b2e2ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/028c3d78f07c6b5c0ef6b04c5a50ca625b2e2ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c05a5ad826fcfabba5ad86d311d3c5715fba75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c05a5ad826fcfabba5ad86d311d3c5715fba75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c05a5ad826fcfabba5ad86d311d3c5715fba75a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c05a5ad826fcfabba5ad86d311d3c5715fba75a/comments", "author": null, "committer": null, "parents": [{"sha": "db907e7b328c592615f5d553467938d120bba9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db907e7b328c592615f5d553467938d120bba9c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db907e7b328c592615f5d553467938d120bba9c6"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "28a8ac3f23a3c3ab463e7a892747c27d44437ef5", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c05a5ad826fcfabba5ad86d311d3c5715fba75a/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c05a5ad826fcfabba5ad86d311d3c5715fba75a/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=9c05a5ad826fcfabba5ad86d311d3c5715fba75a", "patch": "@@ -677,8 +677,9 @@ extern enum reg_class regno_reg_class[];\n    On the 68000 series, use a data reg if possible when the\n    value is a constant in the range where moveq could be used\n    and we ensure that QImodes are reloaded into data regs.\n-   Also, if a floating constant needs reloading, put it in memory\n-   if possible.  */\n+   Also, if a floating constant needs reloading, put it in memory.\n+   Don't do this for !G constants, since all patterns in the md file\n+   expect them to be loaded into a register via fpmovecr.  See above.  */\n \n #define PREFERRED_RELOAD_CLASS(X,CLASS)  \\\n   ((GET_CODE (X) == CONST_INT\t\t\t\\\n@@ -689,7 +690,9 @@ extern enum reg_class regno_reg_class[];\n    ? DATA_REGS\t\t\t\t\t\\\n    : (GET_CODE (X) == CONST_DOUBLE\t\t\\\n       && GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT) \\\n-   ? NO_REGS\t\t\t\t\t\\\n+   ? (! CONST_DOUBLE_OK_FOR_LETTER_P (X, 'G')\t\\\n+      && CLASS == FP_REGS\t\t\t\\\n+      ? FP_REGS : NO_REGS)\t\t\t\\\n    : (CLASS))\n \n /* Return the maximum number of consecutive registers"}]}