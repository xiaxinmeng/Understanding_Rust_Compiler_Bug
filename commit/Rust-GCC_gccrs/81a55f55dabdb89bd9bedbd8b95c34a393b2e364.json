{"sha": "81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhNTVmNTVkYWJkYjg5YmQ5YmVkYmQ4Yjk1YzM0YTM5M2IyZTM2NA==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-11-03T03:20:30Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-11-03T03:20:30Z"}, "message": "ifcvt.c (noce_emit_cmove, [...]): Allow CC mode if HAVE_cbranchcc4.\n\n2014-11-03  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* ifcvt.c (noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n\tAllow CC mode if HAVE_cbranchcc4.\n\nFrom-SVN: r217026", "tree": {"sha": "963276b41d6c1074dc9c30b6baeecfdd8d362756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/963276b41d6c1074dc9c30b6baeecfdd8d362756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a55f55dabdb89bd9bedbd8b95c34a393b2e364/comments", "author": null, "committer": null, "parents": [{"sha": "afc449e82cb99424361f95190cec4381e4da11f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc449e82cb99424361f95190cec4381e4da11f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc449e82cb99424361f95190cec4381e4da11f8"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "cdf55e13a36a81197906e97b91aedb50d5fb5bca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a55f55dabdb89bd9bedbd8b95c34a393b2e364/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a55f55dabdb89bd9bedbd8b95c34a393b2e364/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "patch": "@@ -1,3 +1,8 @@\n+2014-11-03  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* ifcvt.c (noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n+\tAllow CC mode if HAVE_cbranchcc4.\n+\n 2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/arc/arc.c (write_ext_corereg_1): Delete."}, {"sha": "f8ea467111b2c6b1a1d29082cf21e5a26732eb97", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a55f55dabdb89bd9bedbd8b95c34a393b2e364/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a55f55dabdb89bd9bedbd8b95c34a393b2e364/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=81a55f55dabdb89bd9bedbd8b95c34a393b2e364", "patch": "@@ -1448,10 +1448,17 @@ noce_emit_cmove (struct noce_if_info *if_info, rtx x, enum rtx_code code,\n       end_sequence ();\n     }\n \n-  /* Don't even try if the comparison operands are weird.  */\n+  /* Don't even try if the comparison operands are weird\n+     except that the target supports cbranchcc4.  */\n   if (! general_operand (cmp_a, GET_MODE (cmp_a))\n       || ! general_operand (cmp_b, GET_MODE (cmp_b)))\n-    return NULL_RTX;\n+    {\n+#if HAVE_cbranchcc4\n+      if (GET_MODE_CLASS (GET_MODE (cmp_a)) != MODE_CC\n+\t  || cmp_b != const0_rtx)\n+#endif\n+\treturn NULL_RTX;\n+    }\n \n #if HAVE_conditional_move\n   unsignedp = (code == LTU || code == GEU\n@@ -1777,6 +1784,11 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n   rtx cond, set;\n   rtx_insn *insn;\n   int reverse;\n+  int allow_cc_mode = false;\n+#if HAVE_cbranchcc4\n+  allow_cc_mode = true;\n+#endif\n+\n \n   /* If target is already mentioned in the known condition, return it.  */\n   if (reg_mentioned_p (target, if_info->cond))\n@@ -1898,7 +1910,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n     }\n \n   cond = canonicalize_condition (if_info->jump, cond, reverse,\n-\t\t\t\t earliest, target, false, true);\n+\t\t\t\t earliest, target, allow_cc_mode, true);\n   if (! cond || ! reg_mentioned_p (target, cond))\n     return NULL;\n \n@@ -2354,6 +2366,10 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n {\n   rtx cond, set, tmp;\n   bool reverse;\n+  int allow_cc_mode = false;\n+#if HAVE_cbranchcc4\n+  allow_cc_mode = true;\n+#endif\n \n   if (! any_condjump_p (jump))\n     return NULL_RTX;\n@@ -2390,7 +2406,7 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n   /* Otherwise, fall back on canonicalize_condition to do the dirty\n      work of manipulating MODE_CC values and COMPARE rtx codes.  */\n   tmp = canonicalize_condition (jump, cond, reverse, earliest,\n-\t\t\t\tNULL_RTX, false, true);\n+\t\t\t\tNULL_RTX, allow_cc_mode, true);\n \n   /* We don't handle side-effects in the condition, like handling\n      REG_INC notes and making sure no duplicate conditions are emitted.  */"}]}