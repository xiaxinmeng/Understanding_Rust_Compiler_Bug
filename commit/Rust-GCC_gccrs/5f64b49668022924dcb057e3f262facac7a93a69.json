{"sha": "5f64b49668022924dcb057e3f262facac7a93a69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2NGI0OTY2ODAyMjkyNGRjYjA1N2UzZjI2MmZhY2FjN2E5M2E2OQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:26:09Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:26:09Z"}, "message": "AVX-512. 62/n. Add vpmaddubsw,vdbpsadbw insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_c_enum \"unspec\"): Add UNSPEC_DBPSADBW, UNSPEC_PMADDUBSW512.\n\t(define_insn \"avx512bw_pmaddubsw512<mode><mask_name>\"): New.\n\t(define_insn \"<mask_codefor>avx512bw_dbpsadbw<mode><mask_name>\"):\n\tDitto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216180", "tree": {"sha": "3590133ebca85d5a0bdb665685c8c34d3420cf53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3590133ebca85d5a0bdb665685c8c34d3420cf53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f64b49668022924dcb057e3f262facac7a93a69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f64b49668022924dcb057e3f262facac7a93a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f64b49668022924dcb057e3f262facac7a93a69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f64b49668022924dcb057e3f262facac7a93a69/comments", "author": null, "committer": null, "parents": [{"sha": "26358fb6a0c566c2cdca5107ff60d249abfc028b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26358fb6a0c566c2cdca5107ff60d249abfc028b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26358fb6a0c566c2cdca5107ff60d249abfc028b"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "ff14980dd31e43a4584a19598313cbae18bae56a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f64b49668022924dcb057e3f262facac7a93a69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f64b49668022924dcb057e3f262facac7a93a69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f64b49668022924dcb057e3f262facac7a93a69", "patch": "@@ -1,3 +1,18 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_c_enum \"unspec\"): Add UNSPEC_DBPSADBW, UNSPEC_PMADDUBSW512.\n+\t(define_insn \"avx512bw_pmaddubsw512<mode><mask_name>\"): New.\n+\t(define_insn \"<mask_codefor>avx512bw_dbpsadbw<mode><mask_name>\"):\n+\tDitto.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "a71f969535c58d077a48efae3ec5523dc494d37c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f64b49668022924dcb057e3f262facac7a93a69/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f64b49668022924dcb057e3f262facac7a93a69/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5f64b49668022924dcb057e3f262facac7a93a69", "patch": "@@ -130,6 +130,8 @@\n   UNSPEC_SHA256RNDS2\n \n   ;; For AVX512BW support\n+  UNSPEC_DBPSADBW\n+  UNSPEC_PMADDUBSW512\n   UNSPEC_PSHUFHW\n   UNSPEC_PSHUFLW\n \n@@ -13236,6 +13238,20 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n+;; The correct representation for this is absolutely enormous, and\n+;; surely not generally useful.\n+(define_insn \"avx512bw_pmaddubsw512<mode><mask_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+          (unspec:VI2_AVX512VL\n+            [(match_operand:<dbpsadbwmode> 1 \"register_operand\" \"v\")\n+             (match_operand:<dbpsadbwmode> 2 \"nonimmediate_operand\" \"vm\")]\n+             UNSPEC_PMADDUBSW512))]\n+   \"TARGET_AVX512BW\"\n+   \"vpmaddubsw\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\";\n+  [(set_attr \"type\" \"sseiadd\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"XI\")])\n+\n (define_insn \"ssse3_pmaddubsw128\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V8HI\n@@ -17902,6 +17918,23 @@\n    [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n+;; The correct representation for this is absolutely enormous, and\n+;; surely not generally useful.\n+(define_insn \"<mask_codefor>avx512bw_dbpsadbw<mode><mask_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI2_AVX512VL\n+\t  [(match_operand:<dbpsadbwmode> 1 \"register_operand\" \"v\")\n+\t   (match_operand:<dbpsadbwmode> 2 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\")]\n+\t  UNSPEC_DBPSADBW))]\n+   \"TARGET_AVX512BW\"\n+  \"vdbpsadbw\\t{%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"avx\")\n+   (set_attr \"type\" \"sselog1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"clz<mode>2<mask_name>\"\n   [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v\")\n \t(clz:VI48_AVX512VL"}]}