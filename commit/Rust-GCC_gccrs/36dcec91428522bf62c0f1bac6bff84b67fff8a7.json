{"sha": "36dcec91428522bf62c0f1bac6bff84b67fff8a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkY2VjOTE0Mjg1MjJiZjYyYzBmMWJhYzZiZmY4NGI2N2ZmZjhhNw==", "commit": {"author": {"name": "Christopher D. Rickett", "email": "crickett@lanl.gov", "date": "2007-10-17T06:57:06Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-10-17T06:57:06Z"}, "message": "re PR fortran/33760 (Bind(C): Using C_PTR as structure constructor gives an ICE)\n\n2007-10-17 Christopher D. Rickett <crickett@lanl.gov>\n\n        PR fortran/33760\n        * symbol.c (gen_special_c_interop_ptr): Remove code to create\n        constructor for c_null_ptr and c_null_funptr with value of 0.\n        * expr.c (check_init_expr): Prevent check on constructors for\n        iso_c_binding derived types.\n        * resolve.c (resolve_structure_cons): Verify that the user isn't\n        trying to invoke a structure constructor for one of the\n        iso_c_binding derived types.\n\n\n2007-10-17 Christopher D. Rickett <crickett@lanl.gov>\n\n        PR fortran/33760\n        * gfortran.dg/c_ptr_tests_13.f03: New test case.\n\nFrom-SVN: r129402", "tree": {"sha": "307e0d5eee45a46ff1b87c1776386eb09dffa7f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/307e0d5eee45a46ff1b87c1776386eb09dffa7f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36dcec91428522bf62c0f1bac6bff84b67fff8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dcec91428522bf62c0f1bac6bff84b67fff8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36dcec91428522bf62c0f1bac6bff84b67fff8a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dcec91428522bf62c0f1bac6bff84b67fff8a7/comments", "author": null, "committer": null, "parents": [{"sha": "aa46c8a3df0de8053cd0f3b43dbe7fd47a8c8aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa46c8a3df0de8053cd0f3b43dbe7fd47a8c8aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa46c8a3df0de8053cd0f3b43dbe7fd47a8c8aff"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "7b05fb53eebdbb8bc8dd85e33e6cef5a83282e24", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -1,3 +1,14 @@\n+2007-10-17 Christopher D. Rickett <crickett@lanl.gov>\n+\n+\tPR fortran/33760\n+\t* symbol.c (gen_special_c_interop_ptr): Remove code to create\n+\tconstructor for c_null_ptr and c_null_funptr with value of 0.\n+\t* expr.c (check_init_expr): Prevent check on constructors for\n+\tiso_c_binding derived types.\n+\t* resolve.c (resolve_structure_cons): Verify that the user isn't\n+\ttrying to invoke a structure constructor for one of the\n+\tiso_c_binding derived types.\n+\n 2007-10-15 Christopher D. Rickett <crickett@lanl.gov>\n \n \tPR fortran/32600"}, {"sha": "2edf7ad322f1033abf86e7542042bcfcd6862e30", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -2249,7 +2249,10 @@ check_init_expr (gfc_expr *e)\n       break;\n \n     case EXPR_STRUCTURE:\n-      t = gfc_check_constructor (e, check_init_expr);\n+      if (e->ts.is_iso_c)\n+\tt = SUCCESS;\n+      else\n+\tt = gfc_check_constructor (e, check_init_expr);\n       break;\n \n     case EXPR_ARRAY:"}, {"sha": "f16fe281772b085c7153a296e1b374f493691ea2", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -728,6 +728,16 @@ resolve_structure_cons (gfc_expr *expr)\n   else\n     comp = expr->ts.derived->components;\n \n+  /* See if the user is trying to invoke a structure constructor for one of\n+     the iso_c_binding derived types.  */\n+  if (expr->ts.derived && expr->ts.derived->ts.is_iso_c && cons\n+      && cons->expr != NULL)\n+    {\n+      gfc_error (\"Components of structure constructor '%s' at %L are PRIVATE\",\n+\t\t expr->ts.derived->name, &(expr->where));\n+      return FAILURE;\n+    }\n+\n   for (; comp; comp = comp->next, cons = cons->next)\n     {\n       if (!cons->expr)"}, {"sha": "b0c2825a76dd9d844eb15da67dd765eee1d9c8f4", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -3354,10 +3354,10 @@ gen_special_c_interop_ptr (int ptr_id, const char *ptr_name,\n   tmp_sym->value->expr_type = EXPR_STRUCTURE;\n   tmp_sym->value->ts.type = BT_DERIVED;\n   tmp_sym->value->ts.derived = tmp_sym->ts.derived;\n+  /* Create a constructor with no expr, that way we can recognize if the user\n+     tries to call the structure constructor for one of the iso_c_binding\n+     derived types during resolution (resolve_structure_cons).  */\n   tmp_sym->value->value.constructor = gfc_get_constructor ();\n-  /* This line will initialize the c_null_ptr/c_null_funptr\n-     c_address field to NULL.  */\n-  tmp_sym->value->value.constructor->expr = gfc_int_expr (0);\n   /* Must declare c_null_ptr and c_null_funptr as having the\n      PARAMETER attribute so they can be used in init expressions.  */\n   tmp_sym->attr.flavor = FL_PARAMETER;"}, {"sha": "32e22f2d561ef87e033330b99ff7720054e64534", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -1,3 +1,8 @@\n+2007-10-17  Christopher D. Rickett <crickett@lanl.gov>\n+\n+\tPR fortran/33760\n+\t* gfortran.dg/c_ptr_tests_13.f03: New test case.\n+\n 2007-10-16  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/28639"}, {"sha": "c7a603bcce6c6424210a0e0afc0bf2ee354009b5", "filename": "gcc/testsuite/gfortran.dg/c_ptr_tests_13.f03", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_13.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dcec91428522bf62c0f1bac6bff84b67fff8a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_13.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_13.f03?ref=36dcec91428522bf62c0f1bac6bff84b67fff8a7", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! Ensure that the user cannot call the structure constructor for one of \n+! the iso_c_binding derived types.\n+!\n+! PR fortran/33760\n+!\n+program main\n+   use ISO_C_BINDING\n+   implicit none\n+   integer(C_INTPTR_T) p\n+   type(C_PTR) cptr\n+   p = 0\n+   cptr = C_PTR(p+1) ! { dg-error \"Components of structure constructor\" }\n+   cptr = C_PTR(1) ! { dg-error \"Components of structure constructor\" } \n+end program main"}]}