{"sha": "8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFiMzhmNmNiYzE2MDI1NTE1NTcxY2Q0MGYwZjBkODcyZDM5YzViYQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-10-06T15:29:04Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-10-06T15:29:04Z"}, "message": "Add std::copy_n istreambuf_iterator specialization\n\n\t* include/bits/stl_algo.h\n\t(__copy_n_a(_IIte, _Size, _OIte)): New.\n\t(__copy_n_a(istreambuf_iterator<>, _Size, _CharT*)): New declaration.\n\t(__copy_n(_IIte, _Size, _OIte, input_iterator_tag)): Adapt to use\n\tlatter.\n\t* include/bits/streambuf_iterator.h (istreambuf_iterator<>): Declare\n\tstd::__copy_n_a friend.\n\t(__copy_n_a(istreambuf_iterator<>, _Size, _CharT*)): New.\n\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/1.cc: New.\n\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/1_neg.cc: New.\n\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/2_neg.cc: New.\n\nFrom-SVN: r276638", "tree": {"sha": "347b3844ba6d144b3295a26fef1558ee4bec7c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/347b3844ba6d144b3295a26fef1558ee4bec7c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/comments", "author": null, "committer": null, "parents": [{"sha": "6e556303102ebadb15bf8b7b16f6693d8ffde371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e556303102ebadb15bf8b7b16f6693d8ffde371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e556303102ebadb15bf8b7b16f6693d8ffde371"}], "stats": {"total": 191, "additions": 190, "deletions": 1}, "files": [{"sha": "e0d3fd5f3a9e8462d404e3389da0b6ef10ec40b2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -1,5 +1,17 @@\n 2019-10-06  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n+\t* include/bits/stl_algo.h\n+\t(__copy_n_a(_IIte, _Size, _OIte)): New.\n+\t(__copy_n_a(istreambuf_iterator<>, _Size, _CharT*)): New declaration.\n+\t(__copy_n(_IIte, _Size, _OIte, input_iterator_tag)): Adapt to use\n+\tlatter.\n+\t* include/bits/streambuf_iterator.h (istreambuf_iterator<>): Declare\n+\tstd::__copy_n_a friend.\n+\t(__copy_n_a(istreambuf_iterator<>, _Size, _CharT*)): New.\n+\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/1.cc: New.\n+\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/1_neg.cc: New.\n+\t* testsuite/25_algorithms/copy_n/istreambuf_iterator/2_neg.cc: New.\n+\n \t* include/bits/stl_iterator_base_types.h (__iterator_category_t): Define\n \tfor C++11.\n \t(_RequireInputIte): Likewise and use __enable_if_t."}, {"sha": "187c732d30487580b5109547d089e08cb8e451a6", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -880,7 +880,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);\n     }\n-#endif\n+#endif // C++11\n \n   template<typename _ForwardIterator, typename _Predicate>\n     _GLIBCXX20_CONSTEXPR"}, {"sha": "e3e8736e7682f1b900423296354a3828152063ac", "filename": "libstdc++-v3/include/bits/streambuf_iterator.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -80,6 +80,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__copy_move_a2(istreambuf_iterator<_CharT2>,\n \t\t       istreambuf_iterator<_CharT2>, _CharT2*);\n \n+#if __cplusplus >= 201103L\n+      template<typename _CharT2, typename _Size>\n+\tfriend __enable_if_t<__is_char<_CharT2>::__value, _CharT2*>\n+\t__copy_n_a(istreambuf_iterator<_CharT2>, _Size, _CharT2*);\n+#endif\n+\n       template<typename _CharT2>\n \tfriend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,\n \t\t\t\t    istreambuf_iterator<_CharT2> >::__type\n@@ -367,6 +373,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __result;\n     }\n \n+#if __cplusplus >= 201103L\n+  template<typename _CharT, typename _Size>\n+    __enable_if_t<__is_char<_CharT>::__value, _CharT*>\n+    __copy_n_a(istreambuf_iterator<_CharT> __it, _Size __n, _CharT* __result)\n+    {\n+      if (__n == 0)\n+\treturn __result;\n+\n+      __glibcxx_requires_cond(__it._M_sbuf,\n+\t\t\t      _M_message(__gnu_debug::__msg_inc_istreambuf)\n+\t\t\t      ._M_iterator(__it));\n+      _CharT* __beg = __result;\n+      __result += __it._M_sbuf->sgetn(__beg, __n);\n+      __glibcxx_requires_cond(__result - __beg == __n,\n+\t\t\t      _M_message(__gnu_debug::__msg_inc_istreambuf)\n+\t\t\t      ._M_iterator(__it));\n+      return __result;\n+    }\n+#endif // C++11\n+\n   template<typename _CharT>\n     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,\n \t\t  \t\t    istreambuf_iterator<_CharT> >::__type"}, {"sha": "87d37b6b9cac2fbed1999b81b2700de66fc56a9d", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_n/istreambuf_iterator/1.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1.cc?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -0,0 +1,73 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <algorithm>\n+#include <sstream>\n+#include <iterator>\n+\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  std::stringstream ss(\"12345\");\n+\n+  std::string ostr(5, '0');\n+  typedef std::istreambuf_iterator<char> istrb_ite;\n+  auto res = std::copy_n(istrb_ite(ss), 0, ostr.begin());\n+  VERIFY( res == ostr.begin() );\n+  VERIFY( ostr.front() == '0' );\n+\n+  res = std::copy_n(istrb_ite(ss), 2, ostr.begin());\n+  VERIFY( res == ostr.begin() + 2 );\n+  VERIFY( ostr == \"12000\" );\n+\n+  res = std::copy_n(istrb_ite(ss), 3, ostr.begin() + 2);\n+  VERIFY( res == ostr.begin() + 5 );\n+  VERIFY( ostr == \"12345\" );\n+}\n+\n+void test02()\n+{\n+  std::stringstream ss(\"12345\");\n+\n+  std::string ostr(5, '0');\n+  typedef std::istreambuf_iterator<char> istrb_ite;\n+\n+  istrb_ite ibfit(ss);\n+  auto res = std::copy_n(ibfit, 3, std::copy_n(ibfit, 2, ostr.begin()));\n+  VERIFY( res == ostr.begin() + 5 );\n+  VERIFY( ostr == \"12345\" );\n+}\n+\n+void test03()\n+{\n+  std::string ostr(5, '0');\n+  typedef std::istreambuf_iterator<char> istrb_ite;\n+\n+  auto res = std::copy_n(istrb_ite(), 0, ostr.begin());\n+  VERIFY( res == ostr.begin() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+  return 0;\n+}"}, {"sha": "42bc5b6430656aeb60a83cdbe75b56b3745b8255", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_n/istreambuf_iterator/1_neg.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F1_neg.cc?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 xfail *-*-* } }\n+// { dg-require-debug-mode { } }\n+\n+#include <algorithm>\n+#include <sstream>\n+#include <iterator>\n+\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  std::stringstream ss(\"12345\");\n+\n+  std::string ostr(10, '0');\n+  typedef std::istreambuf_iterator<char> istrb_ite;\n+  std::copy_n(istrb_ite(ss), 10, ostr.begin());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "cede27a248db4627507bb49e3d6ade8dfbe1aaf1", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_n/istreambuf_iterator/2_neg.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab38f6cbc16025515571cd40f0f0d872d39c5ba/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2Fistreambuf_iterator%2F2_neg.cc?ref=8ab38f6cbc16025515571cd40f0f0d872d39c5ba", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 xfail *-*-* } }\n+// { dg-require-debug-mode { } }\n+\n+#include <algorithm>\n+#include <sstream>\n+#include <iterator>\n+\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  std::string ostr(10, '0');\n+  typedef std::istreambuf_iterator<char> istrb_ite;\n+  std::copy_n(istrb_ite(), 10, ostr.begin());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}