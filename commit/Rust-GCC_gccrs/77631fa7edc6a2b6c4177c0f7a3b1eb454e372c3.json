{"sha": "77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2MzFmYTdlZGM2YTJiNmM0MTc3YzBmN2EzYjFlYjQ1NGUzNzJjMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-10-14T21:09:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-14T21:09:25Z"}, "message": "re PR c++/7176 (g++ confused by friend and static member with same name)\n\n\tPR c++/7176\n\t* g++.dg/parse/friend1.C: New test.\n\t* g++.old-deja/g++.pt/memtemp64.C: Adjust.\n\n\tPR c++/7176\n\t* lex.c (do_identifier): Add another option for the parsing\n\tparameter.\n\t* parse.y (do_id): Use it.\n\nFrom-SVN: r58135", "tree": {"sha": "7142d32b87fe2af1def71461c8e942143c3586f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7142d32b87fe2af1def71461c8e942143c3586f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/comments", "author": null, "committer": null, "parents": [{"sha": "f5204e6cb8ccfb786d254836ca4c06d3787b6c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5204e6cb8ccfb786d254836ca4c06d3787b6c59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5204e6cb8ccfb786d254836ca4c06d3787b6c59"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "e5c7356e5afe8261a30b27ed083e8d4a22c60311", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -1,3 +1,10 @@\n+2002-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/7176\n+\t* lex.c (do_identifier): Add another option for the parsing\n+\tparameter.\n+\t* parse.y (do_id): Use it.\n+\n 2002-10-11  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \tPRs C++/6803, C++/7721 and C++/7803"}, {"sha": "bab29888e8b8c626d1442d48885912a43109899c", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -1135,7 +1135,7 @@ do_identifier (token, parsing, args)\n      tree args;\n {\n   register tree id;\n-  int lexing = (parsing == 1);\n+  int lexing = (parsing == 1 || parsing == 3);\n \n   if (! lexing)\n     id = lookup_name (token, 0);\n@@ -1157,7 +1157,7 @@ do_identifier (token, parsing, args)\n \n   /* Remember that this name has been used in the class definition, as per\n      [class.scope0] */\n-  if (id && parsing)\n+  if (id && parsing && parsing != 3)\n     maybe_note_name_used_in_class (token, id);\n \n   if (id == error_mark_node)"}, {"sha": "78cf991f1924d20a26656f867bf23252e9f2d80b", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -1516,7 +1516,7 @@ do_id:\n \t\t     do_identifier; we only do that for unqualified\n \t\t     identifiers.  */\n \t          if (!lastiddecl || !BASELINK_P (lastiddecl))\n-\t\t    $$ = do_identifier ($<ttype>-1, 1, NULL_TREE);\n+\t\t    $$ = do_identifier ($<ttype>-1, 3, NULL_TREE);\n \t\t  else\n \t\t    $$ = $<ttype>-1;\n \t\t}"}, {"sha": "5b1374cc043847384d623467d6a494f78cdd2a2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -1,3 +1,9 @@\n+2002-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/7176\n+\t* g++.dg/parse/friend1.C: New test.\n+\t* g++.old-deja/g++.pt/memtemp64.C: Adjust.\n+\n 2002-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20021014-1.c: New test."}, {"sha": "f19dc9c628b9aeff5e195cea2ce811d218572892", "filename": "gcc/testsuite/g++.dg/parse/friend1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend1.C?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -0,0 +1,9 @@\n+namespace N {\n+  template <typename T>\n+  static void f ();\n+\n+  struct S {\n+    friend void N::f<int> ();\n+    static void f (int);\n+  };\n+}"}, {"sha": "6185d3d60583b11bf6dcf0f1ae1518fa758820b4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp64.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C?ref=77631fa7edc6a2b6c4177c0f7a3b1eb454e372c3", "patch": "@@ -4,7 +4,7 @@ template <class T>\n struct S1 {};\n \n template <class T>\n-void f(T); // ERROR - original declaration.\n+void f(T);\n \n template <class C>\n struct S2"}]}