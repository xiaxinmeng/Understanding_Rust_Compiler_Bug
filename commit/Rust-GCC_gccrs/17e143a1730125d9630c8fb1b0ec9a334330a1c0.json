{"sha": "17e143a1730125d9630c8fb1b0ec9a334330a1c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdlMTQzYTE3MzAxMjVkOTYzMGM4ZmIxYjBlYzlhMzM0MzMwYTFjMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-18T19:49:17Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T19:49:17Z"}, "message": "m68k.md (movsf_cf_hard): Use fsmove instead of f%$smove and f%$move.\n\ngcc/\n\t* config/m68k/m68k.md (movsf_cf_hard): Use fsmove instead of\n\tf%$smove and f%$move.\n\t(movdf_cf_hard): Use fdmove for cases 0 and 3 and fmove for case 1.\n\t(extendsfdf2_cf): Use fdmove instead of f%&move.\n\t(truncdfsf2_cf): Use fsmove instead of f%$smove.\n\t(add<mode>3_cf, sub<mode>3_cf): Use <FP:prec> instead of <FP:round>.\n\nFrom-SVN: r120924", "tree": {"sha": "fb7fba72f202290451478fc41f45a8942c8697ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb7fba72f202290451478fc41f45a8942c8697ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17e143a1730125d9630c8fb1b0ec9a334330a1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e143a1730125d9630c8fb1b0ec9a334330a1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e143a1730125d9630c8fb1b0ec9a334330a1c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e143a1730125d9630c8fb1b0ec9a334330a1c0/comments", "author": null, "committer": null, "parents": [{"sha": "bb017fc18e6e94e3d33ca6ee54db7a54d436d3dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb017fc18e6e94e3d33ca6ee54db7a54d436d3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb017fc18e6e94e3d33ca6ee54db7a54d436d3dd"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "4f4801b7826b8d2b89ae71d5f33e965815d90c97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17e143a1730125d9630c8fb1b0ec9a334330a1c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17e143a1730125d9630c8fb1b0ec9a334330a1c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17e143a1730125d9630c8fb1b0ec9a334330a1c0", "patch": "@@ -1,3 +1,12 @@\n+2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.md (movsf_cf_hard): Use fsmove instead of\n+\tf%$smove and f%$move.\n+\t(movdf_cf_hard): Use fdmove for cases 0 and 3 and fmove for case 1.\n+\t(extendsfdf2_cf): Use fdmove instead of f%&move.\n+\t(truncdfsf2_cf): Use fsmove instead of f%$smove.\n+\t(add<mode>3_cf, sub<mode>3_cf): Use <FP:prec> instead of <FP:round>.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k.md (movdf_cf_hard): Use output_move_double for"}, {"sha": "35f944c790bec9289865289f51b4ee702d191f1e", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17e143a1730125d9630c8fb1b0ec9a334330a1c0/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17e143a1730125d9630c8fb1b0ec9a334330a1c0/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=17e143a1730125d9630c8fb1b0ec9a334330a1c0", "patch": "@@ -891,12 +891,10 @@\n   if (FP_REG_P (operands[0]))\n     {\n       if (ADDRESS_REG_P (operands[1]))\n-        return \"move%.l %1,%-;f%$smove%.s %+,%0\";\n+        return \"move%.l %1,%-;fsmove%.s %+,%0\";\n       if (FP_REG_P (operands[1]))\n-        return \"f%$move%.d %1,%0\";\n-      if (GET_CODE (operands[1]) == CONST_DOUBLE)\n-        return output_move_const_single (operands);\n-      return \"f%$move%.s %f1,%0\";\n+        return \"fsmove%.d %1,%0\";\n+      return \"fsmove%.s %f1,%0\";\n     }\n   if (FP_REG_P (operands[1]))\n     {\n@@ -1008,11 +1006,13 @@\n   switch (which_alternative)\n     {\n     default:\n+      return \"fdmove%.d %1,%0\";\n+    case 1:\n       return \"fmove%.d %1,%0\";\n     case 2:\n       return \"fmove%.d %1,%-;move%.l %+,%0;move%.l %+,%R0\";\n     case 3:\n-      return \"move%.l %R1,%-;move%.l %1,%-;f%&move%.d %+,%0\";\n+      return \"move%.l %R1,%-;move%.l %1,%-;fdmove%.d %+,%0\";\n     case 4: case 5: case 6:\n       return output_move_double (operands);\n     case 7:\n@@ -1627,9 +1627,9 @@\n \t  cc_status = cc_prev_status;\n \t  return \"\";\n \t}\n-      return \"f%&move%.d %1,%0\";\n+      return \"fdmove%.d %1,%0\";\n     }\n-  return \"f%&move%.s %f1,%0\";\n+  return \"fdmove%.s %f1,%0\";\n })\n \n ;; This cannot output into an f-reg because there is no way to be\n@@ -1659,7 +1659,7 @@\n \t  (match_operand:DF 1 \"general_operand\" \"<Q>U,f\")))]\n   \"TARGET_COLDFIRE_FPU\"\n   \"@\n-  f%$move%.d %1,%0\n+  fsmove%.d %1,%0\n   fmove%.s %1,%0\")\n \n (define_insn \"\"\n@@ -2354,8 +2354,8 @@\n   \"TARGET_COLDFIRE_FPU\"\n {\n   if (FP_REG_P (operands[2]))\n-    return \"f<FP:round>add%.d %2,%0\";\n-  return \"f<FP:round>add%.<FP:prec> %2,%0\";\n+    return \"f<FP:prec>add%.d %2,%0\";\n+  return \"f<FP:prec>add%.<FP:prec> %2,%0\";\n })\n \f\n ;; subtract instructions\n@@ -2563,8 +2563,8 @@\n   \"TARGET_COLDFIRE_FPU\"\n {\n   if (FP_REG_P (operands[2]))\n-    return \"f<FP:round>sub%.d %2,%0\";\n-  return \"f<FP:round>sub%.<FP:prec> %2,%0\";\n+    return \"f<FP:prec>sub%.d %2,%0\";\n+  return \"f<FP:prec>sub%.<FP:prec> %2,%0\";\n })\n \f\n ;; multiply instructions"}]}