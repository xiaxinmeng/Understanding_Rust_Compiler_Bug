{"sha": "a502e67779b2a1291343b6cd2655bfacbae9207b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwMmU2Nzc3OWIyYTEyOTEzNDNiNmNkMjY1NWJmYWNiYWU5MjA3Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-29T12:48:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-29T12:48:34Z"}, "message": "tree-dfa.c (find_vars_r): Do not call add_referenced_vars for globals.\n\n2012-05-29  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-dfa.c (find_vars_r): Do not call add_referenced_vars\n\tfor globals.\n\t(add_referenced_var_1): Re-organize.  Assert we are not\n\tcalled for globals.\n\t(remove_referenced_var): Likewise.\n\t* varpool.c (add_new_static_var): Use create_tmp_var_raw.\n\t* tree-mudflap.c (execute_mudflap_function_ops): Do not\n\tcall add_referenced_var on globals.\n\t* matrix-reorg.c (transform_access_sites): Likewise.\n\nFrom-SVN: r187955", "tree": {"sha": "a14fb2aa71ea28c1801fca31518dc9b62e83ce77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a14fb2aa71ea28c1801fca31518dc9b62e83ce77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a502e67779b2a1291343b6cd2655bfacbae9207b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a502e67779b2a1291343b6cd2655bfacbae9207b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a502e67779b2a1291343b6cd2655bfacbae9207b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a502e67779b2a1291343b6cd2655bfacbae9207b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ff3c7caa816f14eac43fdf220ce6e7ccb0e84a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ff3c7caa816f14eac43fdf220ce6e7ccb0e84a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ff3c7caa816f14eac43fdf220ce6e7ccb0e84a6"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "6099b8f91e9706f6a5b55c4e0f03755256bb8be7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a502e67779b2a1291343b6cd2655bfacbae9207b", "patch": "@@ -1,3 +1,15 @@\n+2012-05-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-dfa.c (find_vars_r): Do not call add_referenced_vars\n+\tfor globals.\n+\t(add_referenced_var_1): Re-organize.  Assert we are not\n+\tcalled for globals.\n+\t(remove_referenced_var): Likewise.\n+\t* varpool.c (add_new_static_var): Use create_tmp_var_raw.\n+\t* tree-mudflap.c (execute_mudflap_function_ops): Do not\n+\tcall add_referenced_var on globals.\n+\t* matrix-reorg.c (transform_access_sites): Likewise.\n+\n 2012-05-29  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* alias.c (reg_known_value): Make this a VEC."}, {"sha": "8395dd2beae882578f421786c37a942943728932", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=a502e67779b2a1291343b6cd2655bfacbae9207b", "patch": "@@ -1914,7 +1914,6 @@ transform_access_sites (void **slot, void *data ATTRIBUTE_UNUSED)\n \t      num_elements =\n \t\tfold_build2 (MULT_EXPR, sizetype, fold_convert (sizetype, acc_info->index),\n \t\t\t    fold_convert (sizetype, d_size));\n-\t      add_referenced_var (d_size);\n \t      gsi = gsi_for_stmt (acc_info->stmt);\n \t      tmp1 = force_gimple_operand_gsi (&gsi, num_elements, true,\n \t\t\t\t\t       NULL, true, GSI_SAME_STMT);"}, {"sha": "fe477ff5ee5c83a537490ccd841676b641131c21", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=a502e67779b2a1291343b6cd2655bfacbae9207b", "patch": "@@ -430,7 +430,10 @@ find_vars_r (tree *tp, int *walk_subtrees, void *data)\n \n   /* If T is a regular variable that the optimizers are interested\n      in, add it to the list of variables.  */\n-  else if (SSA_VAR_P (*tp))\n+  else if ((TREE_CODE (*tp) == VAR_DECL\n+\t    && !is_global_var (*tp))\n+\t   || TREE_CODE (*tp) == PARM_DECL\n+\t   || TREE_CODE (*tp) == RESULT_DECL)\n     add_referenced_var_1 (*tp, fn);\n \n   /* Type, _DECL and constant nodes have no interesting children.\n@@ -560,22 +563,24 @@ add_referenced_var_1 (tree var, struct function *fn)\n \t\t       || TREE_CODE (var) == PARM_DECL\n \t\t       || TREE_CODE (var) == RESULT_DECL);\n \n-  if (!(TREE_CODE (var) == VAR_DECL\n-\t&& VAR_DECL_IS_VIRTUAL_OPERAND (var))\n-      && is_global_var (var))\n-    return false;\n+  gcc_checking_assert ((TREE_CODE (var) == VAR_DECL\n+\t\t\t&& VAR_DECL_IS_VIRTUAL_OPERAND (var))\n+\t\t       || !is_global_var (var));\n \n-  if (!*DECL_VAR_ANN_PTR (var))\n-    *DECL_VAR_ANN_PTR (var) = ggc_alloc_cleared_var_ann_d ();\n-\n-  /* Insert VAR into the referenced_vars hash table if it isn't present.  */\n+  /* Insert VAR into the referenced_vars hash table if it isn't present\n+     and allocate its var-annotation.  */\n   if (referenced_var_check_and_insert (var, fn))\n-    return true;\n+    {\n+      gcc_checking_assert (!*DECL_VAR_ANN_PTR (var));\n+      *DECL_VAR_ANN_PTR (var) = ggc_alloc_cleared_var_ann_d ();\n+      return true;\n+    }\n \n   return false;\n }\n \n-/* Remove VAR from the list.  */\n+/* Remove VAR from the list of referenced variables and clear its\n+   var-annotation.  */\n \n void\n remove_referenced_var (tree var)\n@@ -585,14 +590,16 @@ remove_referenced_var (tree var)\n   void **loc;\n   unsigned int uid = DECL_UID (var);\n \n-  /* Preserve var_anns of globals.  */\n-  if (!is_global_var (var)\n-      && (v_ann = var_ann (var)))\n-    {\n-      ggc_free (v_ann);\n-      *DECL_VAR_ANN_PTR (var) = NULL;\n-    }\n-  gcc_assert (DECL_P (var));\n+  gcc_checking_assert (TREE_CODE (var) == VAR_DECL\n+\t\t       || TREE_CODE (var) == PARM_DECL\n+\t\t       || TREE_CODE (var) == RESULT_DECL);\n+\n+  gcc_checking_assert (!is_global_var (var));\n+\n+  v_ann = var_ann (var);\n+  ggc_free (v_ann);\n+  *DECL_VAR_ANN_PTR (var) = NULL;\n+\n   in.uid = uid;\n   loc = htab_find_slot_with_hash (gimple_referenced_vars (cfun), &in, uid,\n \t\t\t\t  NO_INSERT);"}, {"sha": "dfb0ae1ee7d0e8f5125576caffec298ce4ed0f46", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=a502e67779b2a1291343b6cd2655bfacbae9207b", "patch": "@@ -427,10 +427,6 @@ execute_mudflap_function_ops (void)\n \n   push_gimplify_context (&gctx);\n \n-  add_referenced_var (mf_cache_array_decl);\n-  add_referenced_var (mf_cache_shift_decl);\n-  add_referenced_var (mf_cache_mask_decl);\n-\n   /* In multithreaded mode, don't cache the lookup cache parameters.  */\n   if (! flag_mudflap_threads)\n     mf_decl_cache_locals ();"}, {"sha": "bcd0a063a7909ca1b83bc77cf9221c891780fc03", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502e67779b2a1291343b6cd2655bfacbae9207b/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=a502e67779b2a1291343b6cd2655bfacbae9207b", "patch": "@@ -449,7 +449,7 @@ add_new_static_var (tree type)\n   tree new_decl;\n   struct varpool_node *new_node;\n \n-  new_decl = create_tmp_var (type, NULL);\n+  new_decl = create_tmp_var_raw (type, NULL);\n   DECL_NAME (new_decl) = create_tmp_var_name (NULL);\n   TREE_READONLY (new_decl) = 0;\n   TREE_STATIC (new_decl) = 1;"}]}