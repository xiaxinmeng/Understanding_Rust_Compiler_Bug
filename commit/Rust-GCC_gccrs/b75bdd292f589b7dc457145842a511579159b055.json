{"sha": "b75bdd292f589b7dc457145842a511579159b055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1YmRkMjkyZjU4OWI3ZGM0NTcxNDU4NDJhNTExNTc5MTU5YjA1NQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-05-15T18:41:11Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-05-15T18:41:11Z"}, "message": "tree.h (ctor_to_list): Delete.\n\n\t* tree.h (ctor_to_list): Delete.\n\t* tree.c (ctor_to_list): Delete.\n\nFrom-SVN: r159437", "tree": {"sha": "b48cfa0ebdf01ed4d5b4df36c9cce38a425d24fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b48cfa0ebdf01ed4d5b4df36c9cce38a425d24fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b75bdd292f589b7dc457145842a511579159b055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75bdd292f589b7dc457145842a511579159b055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75bdd292f589b7dc457145842a511579159b055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75bdd292f589b7dc457145842a511579159b055/comments", "author": null, "committer": null, "parents": [{"sha": "ade41c1df254ba66f8aaf543973352df35013e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade41c1df254ba66f8aaf543973352df35013e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade41c1df254ba66f8aaf543973352df35013e56"}], "stats": {"total": 28, "additions": 5, "deletions": 23}, "files": [{"sha": "05a01ab95efa27d90c3947656d5bb7758aaf80dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75bdd292f589b7dc457145842a511579159b055/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75bdd292f589b7dc457145842a511579159b055/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b75bdd292f589b7dc457145842a511579159b055", "patch": "@@ -1,3 +1,8 @@\n+2010-05-15  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.h (ctor_to_list): Delete.\n+\t* tree.c (ctor_to_list): Delete.\n+\n 2010-05-15  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-reference.c: Include toplev.h"}, {"sha": "9dbd08450cdc630a415e14dedb390afd7185406f", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75bdd292f589b7dc457145842a511579159b055/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75bdd292f589b7dc457145842a511579159b055/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b75bdd292f589b7dc457145842a511579159b055", "patch": "@@ -2124,25 +2124,6 @@ tree_cons_stat (tree purpose, tree value, tree chain MEM_STAT_DECL)\n   return node;\n }\n \n-/* Return the elements of a CONSTRUCTOR as a TREE_LIST.  */\n-\n-tree\n-ctor_to_list (tree ctor)\n-{\n-  tree list = NULL_TREE;\n-  tree *p = &list;\n-  unsigned ix;\n-  tree purpose, val;\n-\n-  FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (ctor), ix, purpose, val)\n-    {\n-      *p = build_tree_list (purpose, val);\n-      p = &TREE_CHAIN (*p);\n-    }\n-\n-  return list;\n-}\n-\n /* Return the values of the elements of a CONSTRUCTOR as a vector of\n    trees.  */\n "}, {"sha": "c5747b59541e841614b7fc75e9c81531dc2d7121", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75bdd292f589b7dc457145842a511579159b055/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75bdd292f589b7dc457145842a511579159b055/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b75bdd292f589b7dc457145842a511579159b055", "patch": "@@ -4475,10 +4475,6 @@ extern tree first_field (const_tree);\n \n extern bool initializer_zerop (const_tree);\n \n-/* Given a CONSTRUCTOR CTOR, return the elements as a TREE_LIST.  */\n-\n-extern tree ctor_to_list (tree);\n-\n /* Given a CONSTRUCTOR CTOR, return the element values as a vector.  */\n \n extern VEC(tree,gc) *ctor_to_vec (tree);"}]}