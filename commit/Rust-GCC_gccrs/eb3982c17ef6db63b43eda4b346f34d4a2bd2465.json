{"sha": "eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzOTgyYzE3ZWY2ZGI2M2I0M2VkYTRiMzQ2ZjM0ZDRhMmJkMjQ2NQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-07-23T21:19:07Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-07-23T21:19:07Z"}, "message": "jit: supply MULTILIB_DEFAULTS as arguments when invoking driver\n\ngcc/jit/ChangeLog:\n\t* jit-playback.c (invoke_driver): Convert local \"argvec\"\n\tto an auto_argvec, so that it owns copies of the strings,\n\trather than borrows them, updating ADD_ARG to use xstrdup\n\tand special-casing the NULL terminator to avoid\n\txstrdup (NULL).  Call add_multilib_driver_arguments at the front\n\tof the arguments.\n\t(MULTILIB_DEFAULTS): Provide a default definition.\n\t(multilib_defaults_raw): New constant array.\n\t(gcc::jit::playback::context::add_multilib_driver_arguments): New\n\tmethod.\n\t* jit-playback.h\n\t(gcc::jit::playback::context::add_multilib_driver_arguments): New\n\tmethod.\n\t* docs/internals/test-hello-world.exe.log.txt: Update.\n\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n\nFrom-SVN: r226126", "tree": {"sha": "d51fc6b3cfd7debaae8e1e52fb0624a8de2c0bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d51fc6b3cfd7debaae8e1e52fb0624a8de2c0bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d37f946ace661906c628b482a0f9d5bfb40d3064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37f946ace661906c628b482a0f9d5bfb40d3064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d37f946ace661906c628b482a0f9d5bfb40d3064"}], "stats": {"total": 113, "additions": 81, "deletions": 32}, "files": [{"sha": "f38143d02e471285e4a61c730a537fe269bfc8ab", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "patch": "@@ -1,3 +1,21 @@\n+2015-07-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit-playback.c (invoke_driver): Convert local \"argvec\"\n+\tto an auto_argvec, so that it owns copies of the strings,\n+\trather than borrows them, updating ADD_ARG to use xstrdup\n+\tand special-casing the NULL terminator to avoid\n+\txstrdup (NULL).  Call add_multilib_driver_arguments at the front\n+\tof the arguments.\n+\t(MULTILIB_DEFAULTS): Provide a default definition.\n+\t(multilib_defaults_raw): New constant array.\n+\t(gcc::jit::playback::context::add_multilib_driver_arguments): New\n+\tmethod.\n+\t* jit-playback.h\n+\t(gcc::jit::playback::context::add_multilib_driver_arguments): New\n+\tmethod.\n+\t* docs/internals/test-hello-world.exe.log.txt: Update.\n+\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n+\n 2015-07-16  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/internals/index.rst (Overview of code structure): Add note"}, {"sha": "88df0ad9440d4e0a9ed72d0b3d9041a610458d22", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "patch": "@@ -19,7 +19,7 @@\n \n @copying\n @quotation\n-libgccjit 6.0.0 (experimental 20150716), July 16, 2015\n+libgccjit 6.0.0 (experimental 20150723), July 23, 2015\n \n David Malcolm\n \n@@ -14680,7 +14680,7 @@ via @pxref{5b,,gcc_jit_context_set_logfile()}.  Here is an example of a log\n generated via this call:\n \n @example\n-JIT: libgccjit (GCC) version 5.0.0 20150123 (experimental) (x86_64-unknown-linux-gnu)\n+JIT: libgccjit (GCC) version 6.0.0 20150723 (experimental) (x86_64-unknown-linux-gnu)\n JIT:\tcompiled by GNU C version 4.8.3 20140911 (Red Hat 4.8.3-7), GMP version 5.1.2, MPFR version 3.1.2, MPC version 1.0.1\n JIT: entering: gcc_jit_context_set_str_option\n JIT:  GCC_JIT_STR_OPTION_PROGNAME: \"./test-hello-world.c.exe\"\n@@ -14746,6 +14746,7 @@ JIT:   GCC_JIT_BOOL_OPTION_DUMP_SUMMARY: false\n JIT:   GCC_JIT_BOOL_OPTION_DUMP_EVERYTHING: false\n JIT:   GCC_JIT_BOOL_OPTION_SELFCHECK_GC: true\n JIT:   GCC_JIT_BOOL_OPTION_KEEP_INTERMEDIATES: false\n+JIT:   gcc_jit_context_set_bool_allow_unreachable_blocks: false\n JIT:   entering: void gcc::jit::recording::context::validate()\n JIT:   exiting: void gcc::jit::recording::context::validate()\n JIT:   entering: gcc::jit::playback::context::context(gcc::jit::recording::context*)\n@@ -14797,12 +14798,6 @@ JIT:      exiting: void gcc::jit::playback::function::postprocess()\n JIT:      entering: void gcc::jit::playback::function::postprocess()\n JIT:      exiting: void gcc::jit::playback::function::postprocess()\n JIT:     exiting: void gcc::jit::playback::context::replay()\n-JIT:     entering: void jit_langhook_write_globals()\n-JIT:      entering: void gcc::jit::playback::context::write_global_decls_1()\n-JIT:      exiting: void gcc::jit::playback::context::write_global_decls_1()\n-JIT:      entering: void gcc::jit::playback::context::write_global_decls_2()\n-JIT:      exiting: void gcc::jit::playback::context::write_global_decls_2()\n-JIT:     exiting: void jit_langhook_write_globals()\n JIT:    exiting: toplev::main\n JIT:    entering: void gcc::jit::playback::context::extract_any_requested_dumps(vec<gcc::jit::recording::requested_dump>*)\n JIT:    exiting: void gcc::jit::playback::context::extract_any_requested_dumps(vec<gcc::jit::recording::requested_dump>*)\n@@ -14811,13 +14806,16 @@ JIT:    exiting: toplev::finalize\n JIT:    entering: virtual void gcc::jit::playback::compile_to_memory::postprocess(const char*)\n JIT:     entering: void gcc::jit::playback::context::convert_to_dso(const char*)\n JIT:      entering: void gcc::jit::playback::context::invoke_driver(const char*, const char*, const char*, timevar_id_t, bool, bool)\n-JIT:       argv[0]: x86_64-unknown-linux-gnu-gcc-5.0.0\n-JIT:       argv[1]: -shared\n-JIT:       argv[2]: /tmp/libgccjit-CKq1M9/fake.s\n-JIT:       argv[3]: -o\n-JIT:       argv[4]: /tmp/libgccjit-CKq1M9/fake.so\n-JIT:       argv[5]: -fno-use-linker-plugin\n-JIT:       argv[6]: (null)\n+JIT:       entering: void gcc::jit::playback::context::add_multilib_driver_arguments(vec<char*>*)\n+JIT:       exiting: void gcc::jit::playback::context::add_multilib_driver_arguments(vec<char*>*)\n+JIT:       argv[0]: x86_64-unknown-linux-gnu-gcc-6.0.0\n+JIT:       argv[1]: -m64\n+JIT:       argv[2]: -shared\n+JIT:       argv[3]: /tmp/libgccjit-CKq1M9/fake.s\n+JIT:       argv[4]: -o\n+JIT:       argv[5]: /tmp/libgccjit-CKq1M9/fake.so\n+JIT:       argv[6]: -fno-use-linker-plugin\n+JIT:       argv[7]: (null)\n JIT:      exiting: void gcc::jit::playback::context::invoke_driver(const char*, const char*, const char*, timevar_id_t, bool, bool)\n JIT:     exiting: void gcc::jit::playback::context::convert_to_dso(const char*)\n JIT:     entering: gcc::jit::result* gcc::jit::playback::context::dlopen_built_dso()"}, {"sha": "d82038be864743ea28238d262c7baa39b95d4f20", "filename": "gcc/jit/docs/internals/test-hello-world.exe.log.txt", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt?ref=eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "patch": "@@ -1,4 +1,4 @@\n-JIT: libgccjit (GCC) version 5.0.0 20150123 (experimental) (x86_64-unknown-linux-gnu)\n+JIT: libgccjit (GCC) version 6.0.0 20150723 (experimental) (x86_64-unknown-linux-gnu)\n JIT:\tcompiled by GNU C version 4.8.3 20140911 (Red Hat 4.8.3-7), GMP version 5.1.2, MPFR version 3.1.2, MPC version 1.0.1\n JIT: entering: gcc_jit_context_set_str_option\n JIT:  GCC_JIT_STR_OPTION_PROGNAME: \"./test-hello-world.c.exe\"\n@@ -64,6 +64,7 @@ JIT:   GCC_JIT_BOOL_OPTION_DUMP_SUMMARY: false\n JIT:   GCC_JIT_BOOL_OPTION_DUMP_EVERYTHING: false\n JIT:   GCC_JIT_BOOL_OPTION_SELFCHECK_GC: true\n JIT:   GCC_JIT_BOOL_OPTION_KEEP_INTERMEDIATES: false\n+JIT:   gcc_jit_context_set_bool_allow_unreachable_blocks: false\n JIT:   entering: void gcc::jit::recording::context::validate()\n JIT:   exiting: void gcc::jit::recording::context::validate()\n JIT:   entering: gcc::jit::playback::context::context(gcc::jit::recording::context*)\n@@ -115,12 +116,6 @@ JIT:      exiting: void gcc::jit::playback::function::postprocess()\n JIT:      entering: void gcc::jit::playback::function::postprocess()\n JIT:      exiting: void gcc::jit::playback::function::postprocess()\n JIT:     exiting: void gcc::jit::playback::context::replay()\n-JIT:     entering: void jit_langhook_write_globals()\n-JIT:      entering: void gcc::jit::playback::context::write_global_decls_1()\n-JIT:      exiting: void gcc::jit::playback::context::write_global_decls_1()\n-JIT:      entering: void gcc::jit::playback::context::write_global_decls_2()\n-JIT:      exiting: void gcc::jit::playback::context::write_global_decls_2()\n-JIT:     exiting: void jit_langhook_write_globals()\n JIT:    exiting: toplev::main\n JIT:    entering: void gcc::jit::playback::context::extract_any_requested_dumps(vec<gcc::jit::recording::requested_dump>*)\n JIT:    exiting: void gcc::jit::playback::context::extract_any_requested_dumps(vec<gcc::jit::recording::requested_dump>*)\n@@ -129,13 +124,16 @@ JIT:    exiting: toplev::finalize\n JIT:    entering: virtual void gcc::jit::playback::compile_to_memory::postprocess(const char*)\n JIT:     entering: void gcc::jit::playback::context::convert_to_dso(const char*)\n JIT:      entering: void gcc::jit::playback::context::invoke_driver(const char*, const char*, const char*, timevar_id_t, bool, bool)\n-JIT:       argv[0]: x86_64-unknown-linux-gnu-gcc-5.0.0\n-JIT:       argv[1]: -shared\n-JIT:       argv[2]: /tmp/libgccjit-CKq1M9/fake.s\n-JIT:       argv[3]: -o\n-JIT:       argv[4]: /tmp/libgccjit-CKq1M9/fake.so\n-JIT:       argv[5]: -fno-use-linker-plugin\n-JIT:       argv[6]: (null)\n+JIT:       entering: void gcc::jit::playback::context::add_multilib_driver_arguments(vec<char*>*)\n+JIT:       exiting: void gcc::jit::playback::context::add_multilib_driver_arguments(vec<char*>*)\n+JIT:       argv[0]: x86_64-unknown-linux-gnu-gcc-6.0.0\n+JIT:       argv[1]: -m64\n+JIT:       argv[2]: -shared\n+JIT:       argv[3]: /tmp/libgccjit-CKq1M9/fake.s\n+JIT:       argv[4]: -o\n+JIT:       argv[5]: /tmp/libgccjit-CKq1M9/fake.so\n+JIT:       argv[6]: -fno-use-linker-plugin\n+JIT:       argv[7]: (null)\n JIT:      exiting: void gcc::jit::playback::context::invoke_driver(const char*, const char*, const char*, timevar_id_t, bool, bool)\n JIT:     exiting: void gcc::jit::playback::context::convert_to_dso(const char*)\n JIT:     entering: gcc::jit::result* gcc::jit::playback::context::dlopen_built_dso()"}, {"sha": "c46986327dc5b2194948409f043855ede922eb4b", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "patch": "@@ -2382,14 +2382,16 @@ invoke_driver (const char *ctxt_progname,\n      TV_ASSEMBLE.  */\n   auto_timevar assemble_timevar (tv_id);\n   const char *errmsg;\n-  auto_vec <const char *> argvec;\n-#define ADD_ARG(arg) argvec.safe_push (arg)\n+  auto_argvec argvec;\n+#define ADD_ARG(arg) argvec.safe_push (xstrdup (arg))\n   int exit_status = 0;\n   int err = 0;\n   const char *gcc_driver_name = GCC_DRIVER_NAME;\n \n   ADD_ARG (gcc_driver_name);\n \n+  add_multilib_driver_arguments (&argvec);\n+\n   if (shared)\n     ADD_ARG (\"-shared\");\n \n@@ -2410,7 +2412,7 @@ invoke_driver (const char *ctxt_progname,\n   ADD_ARG (\"-fno-use-linker-plugin\");\n \n   /* pex argv arrays are NULL-terminated.  */\n-  ADD_ARG (NULL);\n+  argvec.safe_push (NULL);\n \n   /* pex_one's error-handling requires pname to be non-NULL.  */\n   gcc_assert (ctxt_progname);\n@@ -2451,6 +2453,36 @@ invoke_driver (const char *ctxt_progname,\n #undef ADD_ARG\n }\n \n+/* Extract the target-specific MULTILIB_DEFAULTS to\n+   multilib_defaults_raw for use by\n+   playback::context::add_multilib_driver_arguments ().  */\n+\n+#ifndef MULTILIB_DEFAULTS\n+#define MULTILIB_DEFAULTS { \"\" }\n+#endif\n+\n+static const char *const multilib_defaults_raw[] = MULTILIB_DEFAULTS;\n+\n+/* Helper function for playback::context::invoke_driver ().\n+\n+   32-bit and 64-bit multilib peer builds of libgccjit.so may share\n+   a driver binary.  We need to pass in options to the shared driver\n+   to get the appropriate assembler/linker options for this multilib\n+   peer.  */\n+\n+void\n+playback::context::\n+add_multilib_driver_arguments (vec <char *> *argvec)\n+{\n+  JIT_LOG_SCOPE (get_logger ());\n+\n+  /* Add copies of the arguments in multilib_defaults_raw to argvec,\n+     prepending each with a \"-\".  */\n+  for (size_t i = 0; i < ARRAY_SIZE (multilib_defaults_raw); i++)\n+    if (multilib_defaults_raw[i][0])\n+      argvec->safe_push (concat (\"-\", multilib_defaults_raw[i], NULL));\n+}\n+\n /* Dynamically-link the built DSO file into this process, using dlopen.\n    Wrap it up within a jit::result *, and return that.\n    Return NULL if any errors occur, reporting them on this context.  */"}, {"sha": "1d7de17ca1c9cf19b39b59c54f4a229c41d53044", "filename": "gcc/jit/jit-playback.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fjit-playback.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3982c17ef6db63b43eda4b346f34d4a2bd2465/gcc%2Fjit%2Fjit-playback.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.h?ref=eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "patch": "@@ -272,6 +272,9 @@ class context : public log_user\n \t\t bool shared,\n \t\t bool run_linker);\n \n+  void\n+  add_multilib_driver_arguments (vec <char *> *argvec);\n+\n   result *\n   dlopen_built_dso ();\n "}]}