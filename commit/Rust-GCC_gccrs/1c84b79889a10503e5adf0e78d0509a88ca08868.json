{"sha": "1c84b79889a10503e5adf0e78d0509a88ca08868", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM4NGI3OTg4OWExMDUwM2U1YWRmMGU3OGQwNTA5YTg4Y2EwODg2OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2016-10-05T00:21:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-10-05T00:21:41Z"}, "message": "explow.c (allocate_dynamic_stack_space): Call do_pending_stack_adjust before handling flag_split_stack.\n\ngcc/:\n\t* explow.c (allocate_dynamic_stack_space): Call\n\tdo_pending_stack_adjust before handling flag_split_stack.\ngcc/testsuite/:\n\t* gcc.dg/split-7.c: New test.\n\nFrom-SVN: r240764", "tree": {"sha": "1df0d6db5233fa5a6ba52470ad20c18f235ae817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1df0d6db5233fa5a6ba52470ad20c18f235ae817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c84b79889a10503e5adf0e78d0509a88ca08868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c84b79889a10503e5adf0e78d0509a88ca08868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c84b79889a10503e5adf0e78d0509a88ca08868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c84b79889a10503e5adf0e78d0509a88ca08868/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f8d78e683ec17dec93629aa57307cdd6fc4d085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8d78e683ec17dec93629aa57307cdd6fc4d085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8d78e683ec17dec93629aa57307cdd6fc4d085"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "ad08f0f771f8bd8c66eddac707e15a84cef3669d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c84b79889a10503e5adf0e78d0509a88ca08868", "patch": "@@ -1,3 +1,8 @@\n+2016-10-04  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* explow.c (allocate_dynamic_stack_space): Call\n+\tdo_pending_stack_adjust before handling flag_split_stack.\n+\n 2016-10-04  David Malcolm  <dmalcolm@redhat.com>\n \n \t* genattrtab.c (make_internal_attr): Supply dummy column number to"}, {"sha": "b56aea694773e7f7be68c5fc8a671c765b71ef63", "filename": "gcc/explow.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=1c84b79889a10503e5adf0e78d0509a88ca08868", "patch": "@@ -1357,6 +1357,8 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \tcurrent_function_has_unbounded_dynamic_stack_size = 1;\n     }\n \n+  do_pending_stack_adjust ();\n+\n   final_label = NULL;\n   final_target = NULL_RTX;\n \n@@ -1414,8 +1416,6 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n       emit_label (available_label);\n     }\n \n-  do_pending_stack_adjust ();\n-\n  /* We ought to be called always on the toplevel and stack ought to be aligned\n     properly.  */\n   gcc_assert (!(stack_pointer_delta"}, {"sha": "17259812b48c66933c57bac093dba45d2ef107e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c84b79889a10503e5adf0e78d0509a88ca08868", "patch": "@@ -1,3 +1,7 @@\n+2016-10-04  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* gcc.dg/split-7.c: New test.\n+\n 2016-10-04  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/tree-ssa/builtin-sprintf-warn-1.c: Cast int argument to"}, {"sha": "4933e9cfb2ab1bf10649a05eb4d5c3f4805644c5", "filename": "gcc/testsuite/gcc.dg/split-7.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Ftestsuite%2Fgcc.dg%2Fsplit-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c84b79889a10503e5adf0e78d0509a88ca08868/gcc%2Ftestsuite%2Fgcc.dg%2Fsplit-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsplit-7.c?ref=1c84b79889a10503e5adf0e78d0509a88ca08868", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target split_stack } */\n+/* { dg-options \"-fsplit-stack -O2\" } */\n+/* { dg-options \"-fsplit-stack -O2 -mno-accumulate-outgoing-args\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n+/* A case that used to fail on 32-bit x86 when optimizing and not\n+   using -maccumulate-args.  The stack adjustment of the alloca got\n+   mixed up with the arguments pushed on the stack to the function\n+   before the call of alloca.  */\n+\n+#include <stdlib.h>\n+\n+typedef struct { const char* s; int l; } s;\n+\n+typedef unsigned long long align16 __attribute__ ((aligned(16)));\n+\n+s gobats (const void *, int) __attribute__ ((noinline));\n+\n+s\n+gobats (const void* p __attribute__ ((unused)),\n+\tint l __attribute__ ((unused)))\n+{\n+  s v;\n+  v.s = 0;\n+  v.l = 0;\n+  return v;\n+}\n+\n+void check_aligned (void *p) __attribute__ ((noinline));\n+\n+void\n+check_aligned (void *p)\n+{\n+  if (((__SIZE_TYPE__) p & 0xf) != 0)\n+    abort ();\n+}\n+\n+void gap (void *) __attribute__ ((noinline));\n+\n+void gap (void *p)\n+{\n+  align16 a;\n+  check_aligned (&a);\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  s *space;\n+  gobats(0, 16);\n+  space = (s *) alloca(sizeof(s) + 1);\n+  *space = (s){0, 16};\n+  gap(space);\n+  return 0;\n+}"}]}