{"sha": "dd6296cffed6943de1cde7baead9177404323c4d", "node_id": "C_kwDOANBUbNoAKGRkNjI5NmNmZmVkNjk0M2RlMWNkZTdiYWVhZDkxNzc0MDQzMjNjNGQ", "commit": {"author": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-10-28T15:49:29Z"}, "committer": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-11-04T12:48:48Z"}, "message": "ast: Dump add proper `line_trailing` argument to `visit_items_as_block`\n\nSigned-off-by: Jakub Dupak <dev@jakubdupak.com>", "tree": {"sha": "3ba5d0e7e24f91534742fc22fa02f5d79cf1382a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ba5d0e7e24f91534742fc22fa02f5d79cf1382a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd6296cffed6943de1cde7baead9177404323c4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6296cffed6943de1cde7baead9177404323c4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd6296cffed6943de1cde7baead9177404323c4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6296cffed6943de1cde7baead9177404323c4d/comments", "author": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7486d6cda4205fd6df47caf5e9a9451f7d9f7705"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "191e328b134c172a45ecfbf47f7608141e62a722", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6296cffed6943de1cde7baead9177404323c4d/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6296cffed6943de1cde7baead9177404323c4d/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=dd6296cffed6943de1cde7baead9177404323c4d", "patch": "@@ -101,7 +101,8 @@ Dump::visit_items_as_lines (T &collection, const std::string &trailing)\n \n template <typename T>\n void\n-Dump::visit_items_as_block (T &collection, char left_brace, char right_brace)\n+Dump::visit_items_as_block (T &collection, const std::string &line_trailing,\n+\t\t\t    char left_brace, char right_brace)\n {\n   if (collection.empty ())\n     {\n@@ -112,7 +113,7 @@ Dump::visit_items_as_block (T &collection, char left_brace, char right_brace)\n       stream << left_brace << '\\n';\n \n       indentation.increment ();\n-      visit_items_as_lines (collection, \",\");\n+      visit_items_as_lines (collection, line_trailing);\n       indentation.decrement ();\n \n       stream << indentation << right_brace << '\\n';\n@@ -944,7 +945,7 @@ Dump::visit (StructStruct &struct_item)\n \n   // FIXME: where-clause\n \n-  visit_items_as_block (struct_item.get_fields ());\n+  visit_items_as_block (struct_item.get_fields (), \",\");\n }\n \n void\n@@ -979,7 +980,7 @@ void\n Dump::visit (EnumItemStruct &item)\n {\n   stream << item.get_identifier ();\n-  visit_items_as_block (item.get_struct_fields ());\n+  visit_items_as_block (item.get_struct_fields (), \",\");\n }\n \n void\n@@ -998,7 +999,7 @@ Dump::visit (Enum &enum_item)\n \n   // FIXME: where-clause\n \n-  visit_items_as_block (enum_item.get_variants ());\n+  visit_items_as_block (enum_item.get_variants (), \",\");\n }\n \n void\n@@ -1010,7 +1011,7 @@ Dump::visit (Union &union_item)\n \n   // FIXME: where-clause\n \n-  visit_items_as_block (union_item.get_variants ());\n+  visit_items_as_block (union_item.get_variants (), \",\");\n }\n \n void\n@@ -1114,7 +1115,7 @@ Dump::visit (Trait &trait)\n       stream << \">\";\n     }\n \n-  visit_items_as_block (trait.get_trait_items ());\n+  visit_items_as_block (trait.get_trait_items (), \"\");\n }\n \n void\n@@ -1129,7 +1130,7 @@ Dump::visit (InherentImpl &impl)\n   // FIXME: Handle where-clause\n   // FIXME: Handle inner attributes\n \n-  visit_items_as_block (impl.get_impl_items ());\n+  visit_items_as_block (impl.get_impl_items (), \"\");\n }\n \n void\n@@ -1182,7 +1183,7 @@ Dump::visit (ExternBlock &block)\n   if (block.has_abi ())\n     stream << \"\\\"\" << block.get_abi () << \"\\\" \";\n \n-  visit_items_as_block (block.get_extern_items ());\n+  visit_items_as_block (block.get_extern_items (), \";\");\n }\n \n static std::pair<char, char>\n@@ -1277,7 +1278,7 @@ Dump::visit (MacroRulesDefinition &rules_def)\n \n   stream << \"macro_rules! \" << rules_def.get_rule_name ();\n \n-  visit_items_as_block (rules_def.get_rules ());\n+  visit_items_as_block (rules_def.get_rules (), \";\");\n }\n \n void"}, {"sha": "13c92123ea9b6d9f20173a0330663efbd972c3c8", "filename": "gcc/rust/ast/rust-ast-dump.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6296cffed6943de1cde7baead9177404323c4d/gcc%2Frust%2Fast%2Frust-ast-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6296cffed6943de1cde7baead9177404323c4d/gcc%2Frust%2Fast%2Frust-ast-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.h?ref=dd6296cffed6943de1cde7baead9177404323c4d", "patch": "@@ -112,8 +112,8 @@ class Dump : public ASTVisitor\n    * collection to print only the delimiters with no new line inside.\n    */\n   template <typename T>\n-  void visit_items_as_block (T &collection, char left_brace = '{',\n-\t\t\t     char right_brace = '}');\n+  void visit_items_as_block (T &collection, const std::string &line_trailing,\n+\t\t\t     char left_brace = '{', char right_brace = '}');\n \n   /**\n    * Visit common items of functions: Parameters, return type, block"}]}