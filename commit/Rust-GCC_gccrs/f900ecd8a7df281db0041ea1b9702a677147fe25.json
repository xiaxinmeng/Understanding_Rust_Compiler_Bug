{"sha": "f900ecd8a7df281db0041ea1b9702a677147fe25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwMGVjZDhhN2RmMjgxZGIwMDQxZWExYjk3MDJhNjc3MTQ3ZmUyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-02-24T11:45:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-02-24T11:45:36Z"}, "message": "errors.c (internal_error, [...]): New functions.\n\n\t* errors.c (internal_error, trim_filename): New functions.\n\t(fancy_abort): Call internal_error.\n\t* errors.h (internal_error, trim_filename): New declarations.\n\nFrom-SVN: r40037", "tree": {"sha": "237515354deb20334a68d9bffe4d16c8e58568e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/237515354deb20334a68d9bffe4d16c8e58568e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f900ecd8a7df281db0041ea1b9702a677147fe25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f900ecd8a7df281db0041ea1b9702a677147fe25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f900ecd8a7df281db0041ea1b9702a677147fe25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f900ecd8a7df281db0041ea1b9702a677147fe25/comments", "author": null, "committer": null, "parents": [{"sha": "1db87931be17a9d52768a5e5b3f76002f0642b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db87931be17a9d52768a5e5b3f76002f0642b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db87931be17a9d52768a5e5b3f76002f0642b2b"}], "stats": {"total": 74, "additions": 67, "deletions": 7}, "files": [{"sha": "eb5f49f294cf316b81872b04dfcb19a90fabf78d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f900ecd8a7df281db0041ea1b9702a677147fe25", "patch": "@@ -1,3 +1,9 @@\n+Sat Feb 24 06:45:21 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* errors.c (internal_error, trim_filename): New functions.\n+\t(fancy_abort): Call internal_error.\n+\t* errors.h (internal_error, trim_filename): New declarations.\n+\n 2001-02-24  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/mn10300/mn10300.h (DBX_REGISTER_NUMBER): Reverted"}, {"sha": "e1a3f13a8fd4c912f9b22fe22828cc6113666d37", "filename": "gcc/errors.c", "status": "modified", "additions": 53, "deletions": 2, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.c?ref=f900ecd8a7df281db0041ea1b9702a677147fe25", "patch": "@@ -1,5 +1,5 @@\n /* Basic error reporting routines.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -105,6 +105,57 @@ fatal VPARAMS ((const char *format, ...))\n   exit (FATAL_EXIT_CODE);\n }\n \n+/* Similar, but say we got an internal error.  */\n+\n+void\n+internal_error VPARAMS ((const char *format, ...))\n+{\n+#ifndef ANSI_PROTOTYPES\n+  const char *format;\n+#endif\n+  va_list ap;\n+\n+  VA_START (ap, format);\n+\n+#ifndef ANSI_PROTOTYPES\n+  format = va_arg (ap, const char *);\n+#endif\n+\n+  fprintf (stderr, \"%s: Internal error\", progname);\n+  vfprintf (stderr, format, ap);\n+  va_end (ap);\n+  fputc ('\\n', stderr);\n+  exit (FATAL_EXIT_CODE);\n+}\n+\n+/* Given a partial pathname as input, return another pathname that\n+   shares no directory elements with the pathname of __FILE__.  This\n+   is used by fancy_abort() to print `Internal compiler error in expr.c'\n+   instead of `Internal compiler error in ../../GCC/gcc/expr.c'.  This\n+   version if for the gen* programs and so neededn't handle subdirectories.  */\n+\n+const char *\n+trim_filename (name)\n+     const char *name;\n+{\n+  static const char this_file[] = __FILE__;\n+  const char *p = name, *q = this_file;\n+\n+  /* Skip any parts the two filenames have in common.  */\n+  while (*p == *q && *p != 0 && *q != 0)\n+    p++, q++;\n+\n+  /* Now go backwards until the previous directory separator.  */\n+  while (p > name && p[-1] != DIR_SEPARATOR\n+#ifdef DIR_SEPARATOR_2\n+\t && p[-1] != DIR_SEPARATOR_2\n+#endif\n+\t )\n+    p--;\n+\n+  return p;\n+}\n+\n /* \"Fancy\" abort.  Reports where in the compiler someone gave up.\n    This file is used only by build programs, so we're not as polite as\n    the version in diagnostic.c.  */\n@@ -114,5 +165,5 @@ fancy_abort (file, line, func)\n      int line;\n      const char *func;\n {\n-  fatal (\"ICE in %s, at %s:%d\", func, file, line);\n+  internal_error (\"abort in %s, at %s:%d\", func, file, line);\n }"}, {"sha": "d9988f6525645fc2c03bb6fea41b4f4916c04561", "filename": "gcc/errors.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2Ferrors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f900ecd8a7df281db0041ea1b9702a677147fe25/gcc%2Ferrors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.h?ref=f900ecd8a7df281db0041ea1b9702a677147fe25", "patch": "@@ -1,5 +1,5 @@\n /* Basic error reporting routines.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -25,11 +25,14 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __GCC_ERRORS_H__\n #define __GCC_ERRORS_H__\n \n-extern void warning PARAMS ((const char *format, ...)) ATTRIBUTE_PRINTF_1;\n-extern void error   PARAMS ((const char *format, ...)) ATTRIBUTE_PRINTF_1;\n-extern void fatal   PARAMS ((const char *format, ...))\n+extern void warning PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+extern void error   PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+extern void fatal   PARAMS ((const char *, ...))\n     ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n-extern void fancy_abort PARAMS ((const char *file, int line, const char *func))\n+extern void internal_error   PARAMS ((const char *, ...))\n+    ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+extern const char *trim_filename   PARAMS ((const char *));\n+extern void fancy_abort PARAMS ((const char *, int, const char *))\n     ATTRIBUTE_NORETURN;\n \n extern int have_error;"}]}