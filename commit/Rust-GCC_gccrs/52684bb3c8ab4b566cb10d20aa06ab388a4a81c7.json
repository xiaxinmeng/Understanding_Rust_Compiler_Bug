{"sha": "52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI2ODRiYjNjOGFiNGI1NjZjYjEwZDIwYWEwNmFiMzg4YTRhODFjNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-03-13T18:34:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-13T18:34:47Z"}, "message": "regex.c (bzero): Define without coma expression.\n\n\t* regex.c (bzero) [!_LIBC]: Define without coma expression.\n\t(regerror): Cast the call to memcpy to (void) to avoid unused\n\tvalue warnings.\n\nFrom-SVN: r208553", "tree": {"sha": "2dc7556dcdb84e7f893b0e8128ed3894d6fe16a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dc7556dcdb84e7f893b0e8128ed3894d6fe16a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdc6e1ae29dbca4e3a51f6c06373f0425c239814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc6e1ae29dbca4e3a51f6c06373f0425c239814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc6e1ae29dbca4e3a51f6c06373f0425c239814"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "9dab384ccf289e58acbe56a13d07bf3c763771e1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "patch": "@@ -1,3 +1,9 @@\n+2014-03-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* regex.c (bzero) [!_LIBC]: Define without coma expression.\n+\t(regerror): Cast the call to memcpy to (void) to avoid unused\n+\tvalue warnings.\n+\n 2014-01-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* cp-demangle.c (d_demangle_callback): Put an abort call in place,"}, {"sha": "cc9acdc2380c09fa02cfc271a87df568190d2243", "filename": "libiberty/regex.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7/libiberty%2Fregex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52684bb3c8ab4b566cb10d20aa06ab388a4a81c7/libiberty%2Fregex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fregex.c?ref=52684bb3c8ab4b566cb10d20aa06ab388a4a81c7", "patch": "@@ -151,7 +151,7 @@ char *realloc ();\n #    include <string.h>\n #    ifndef bzero\n #     ifndef _LIBC\n-#      define bzero(s, n)\t(memset (s, '\\0', n), (s))\n+#      define bzero(s, n)\tmemset (s, '\\0', n)\n #     else\n #      define bzero(s, n)\t__bzero (s, n)\n #     endif\n@@ -8093,12 +8093,12 @@ regerror (int errcode, const regex_t *preg ATTRIBUTE_UNUSED,\n #if defined HAVE_MEMPCPY || defined _LIBC\n \t  *((char *) mempcpy (errbuf, msg, errbuf_size - 1)) = '\\0';\n #else\n-          memcpy (errbuf, msg, errbuf_size - 1);\n+          (void) memcpy (errbuf, msg, errbuf_size - 1);\n           errbuf[errbuf_size - 1] = 0;\n #endif\n         }\n       else\n-        memcpy (errbuf, msg, msg_size);\n+        (void) memcpy (errbuf, msg, msg_size);\n     }\n \n   return msg_size;"}]}