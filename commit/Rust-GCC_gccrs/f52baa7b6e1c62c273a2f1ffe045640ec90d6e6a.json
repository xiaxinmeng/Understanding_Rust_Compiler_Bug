{"sha": "f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUyYmFhN2I2ZTFjNjJjMjczYTJmMWZmZTA0NTY0MGVjOTBkNmU2YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-12-17T11:48:33Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-12-17T11:48:33Z"}, "message": "re PR middle-end/63568 (Missed optimization (a & ~mask) | (b & mask) = a ^ ((a ^ b) & mask))\n\n\tPR middle-end/63568\n\t* match.pd: Add (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x pattern.\n\n\t* gcc.dg/pr63568.c: New test.\n\nFrom-SVN: r218816", "tree": {"sha": "2e29b1533f3226e100e504279cc9c7425fa26b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e29b1533f3226e100e504279cc9c7425fa26b14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c57980f9d30e6947025424536eeed42bf6e1239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c57980f9d30e6947025424536eeed42bf6e1239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c57980f9d30e6947025424536eeed42bf6e1239"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "7b3c4aa6f75e141f47f057f99b497ec0db3fb1f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "patch": "@@ -1,3 +1,8 @@\n+2014-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/63568\n+\t* match.pd: Add (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x pattern.\n+\n 2014-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/64322"}, {"sha": "4d4bc9fac8e50498274690058309c89fe85475ff", "filename": "gcc/match.pd", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "patch": "@@ -382,6 +382,13 @@ along with GCC; see the file COPYING3.  If not see\n   (bit_not (bit_not @0))\n   @0)\n \n+/* (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x */\n+(simplify\n+  (bit_ior:c (bit_and:c@3 @0 (bit_not @2)) (bit_and:c@4 @1 @2))\n+  (if ((TREE_CODE (@3) != SSA_NAME || has_single_use (@3))\n+\t&& (TREE_CODE (@4) != SSA_NAME || has_single_use (@4)))\n+   (bit_xor (bit_and (bit_xor @0 @1) @2) @0)))\n+\n \n /* Associate (p +p off1) +p off2 as (p +p (off1 + off2)).  */\n (simplify"}, {"sha": "7049260ccad2883abd336814d61e9f3ad4fa00e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "patch": "@@ -1,3 +1,8 @@\n+2014-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/63568\n+\t* gcc.dg/pr63568.c: New test.\n+\n 2014-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/64322"}, {"sha": "fb42bea6fcf773b685d7735a8e0fa8213d7b0cb8", "filename": "gcc/testsuite/gcc.dg/pr63568.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63568.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63568.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63568.c?ref=f52baa7b6e1c62c273a2f1ffe045640ec90d6e6a", "patch": "@@ -0,0 +1,54 @@\n+/* PR middle-end/63568 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int\n+fn1 (int a, int b, int m)\n+{\n+  return (a & ~m) | (b & m);\n+}\n+\n+int\n+fn2 (int a, int b, int m)\n+{\n+  return (a & ~m) | (m & b);\n+}\n+\n+int\n+fn3 (int a, int b, int m)\n+{\n+  return (~m & a) | (m & b);\n+}\n+\n+int\n+fn4 (int a, int b, int m)\n+{\n+  return (~m & a) | (b & m);\n+}\n+\n+int\n+fn5 (int a, int b, int m)\n+{\n+  return (b & m) | (a & ~m);\n+}\n+\n+int\n+fn6 (int a, int b, int m)\n+{\n+  return (m & b) | (a & ~m);\n+}\n+\n+int\n+fn7 (int a, int b, int m)\n+{\n+  return (m & b) | (~m & a);\n+}\n+\n+int\n+fn8 (int a, int b, int m)\n+{\n+  return (b & m) | (~m & a);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}