{"sha": "bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "node_id": "C_kwDOANBUbNoAKGJkNWM1ZDJlYWYxYmFlY2FjNzNkMjEzNTBmYzI1N2FhNWY1MGY4YmQ", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-08T20:56:15Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T07:14:58Z"}, "message": "RISC-V: Add vmsbc C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vmsbc-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-4.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-5.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-6.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-7.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc-8.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vv-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vv-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vv-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vvm-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vvm-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vvm-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vx_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-3.c: New test.", "tree": {"sha": "663af936b8f457d4eb2f1b9f4273a63035c9d1f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/663af936b8f457d4eb2f1b9f4273a63035c9d1f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8c7b4b32d86ecf5f8768a5c162484ac2a6b0130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c7b4b32d86ecf5f8768a5c162484ac2a6b0130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c7b4b32d86ecf5f8768a5c162484ac2a6b0130"}], "stats": {"total": 5694, "additions": 5694, "deletions": 0}, "files": [{"sha": "019f03636a3b9ddb275bfc9fce24d51cf18e745c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f1 (void * in, void *out)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vvm_i32m1_b32 (v2, v2, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f2 (void * in, void *out)\n+{\n+  vbool32_t mask = *(vbool32_t*)in;\n+  asm volatile (\"\":::\"memory\");\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tumu (mask, v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vvm_i32m1_b32 (v2, v2, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-not {vmv} } } */"}, {"sha": "c24b387cfc0f08eac2695ee620af75b8a17aa758", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-2.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f1 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vxm_i32m1_b32 (v2, 0, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f2 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vxm_i32m1_b32 (v2, 15, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f3 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vxm_i32m1_b32 (v2, -17, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f4 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vxm_i32m1_b32 (v2, 16, mask, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 3 } } */"}, {"sha": "d189a6124a4d6a3283b1c9fbb1c4ed7489e29e91", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-3.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,77 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 15, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 15, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, -17, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, -17, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 16, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 16, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0xAAAAAAAA, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0xAAAAAAAA, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0xAAAAAAAAAAAAAAAA, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, x, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, x, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 12 } } */"}, {"sha": "f8fe611bb93f337f4b8233d6d61973a33ab3c230", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-4.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-4.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,78 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 15, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 15, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, -17, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, -17, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 16, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 16, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0xAAAAAAA, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0xAAAAAAA, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, 0xAAAAAAAAAAAAAAAA, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vxm_i64m1_b64 (v2, x, mask, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vxm_i64m1_b64 (v, x, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 8 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 4 } } */"}, {"sha": "436f48dc17652e59098301a668cd1a9d980efce1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-5.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-5.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f1 (void * in, void *out)\n+{\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vv_i32m1_b32 (v2, v2, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f2 (void * in, void *out)\n+{\n+  vbool32_t mask = *(vbool32_t*)in;\n+  asm volatile (\"\":::\"memory\");\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tumu (mask, v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vv_i32m1_b32 (v2, v2, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-not {vmv} } } */"}, {"sha": "b062ed44f5223a49abc7406dcbe32492f59d8a10", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-6.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-6.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f1 (void * in, void *out, int32_t x)\n+{\n+  \n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vx_i32m1_b32 (v2, 0, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f2 (void * in, void *out, int32_t x)\n+{\n+  \n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vx_i32m1_b32 (v2, 15, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f3 (void * in, void *out, int32_t x)\n+{\n+  \n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vx_i32m1_b32 (v2, -17, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+void f4 (void * in, void *out, int32_t x)\n+{\n+  \n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vbool32_t v3 = __riscv_vmsbc_vx_i32m1_b32 (v2, 16, 4);\n+  __riscv_vsm_v_b32 (out, v3, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero} 1 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 3 } } */"}, {"sha": "7b56b1a8e14f24403a8d8ebb0395eade3a183137", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-7.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-7.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,84 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 15, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 15, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, -17, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, -17, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 16, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 16, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0xAAAAAAAA, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0xAAAAAAAA, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0xAAAAAAAAAAAAAAAA, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0xAAAAAAAAAAAAAAAA, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, x, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, x, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 12 } } */"}, {"sha": "7b56b1a8e14f24403a8d8ebb0395eade3a183137", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc-8.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc-8.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,84 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 15, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 15, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, -17, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, -17, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 16, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 16, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0xAAAAAAAA, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0xAAAAAAAA, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, 0xAAAAAAAAAAAAAAAA, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, 0xAAAAAAAAAAAAAAAA, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  \n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vbool64_t v3 = __riscv_vmsbc_vx_i64m1_b64 (v2, x, 4);\n+  vbool64_t v4 = __riscv_vmsbc_vx_i64m1_b64 (v, x, 4);\n+  __riscv_vsm_v_b64 (out + 200, v3, 4);\n+  __riscv_vsm_v_b64 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 12 } } */"}, {"sha": "17bd98d2316667962970372442d6dc413fe7c914", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vv-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vv_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i8m1_b8(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i8m2_b4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i8m4_b2(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_i8m8_b1(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i16m1_b16(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i16m2_b8(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i16m4_b4(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i16m8_b2(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i32m1_b32(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i32m2_b16(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i32m4_b8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i32m8_b4(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i64m1_b64(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i64m2_b32(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i64m4_b16(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i64m8_b8(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m8_b8(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m8_b8(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "957ada837adaf96f640bb81d7aafb30bd88f2f2d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vv-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vv_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i8m1_b8(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i8m2_b4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i8m4_b2(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_i8m8_b1(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i16m1_b16(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i16m2_b8(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i16m4_b4(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i16m8_b2(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i32m1_b32(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i32m2_b16(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i32m4_b8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i32m8_b4(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i64m1_b64(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i64m2_b32(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i64m4_b16(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i64m8_b8(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m8_b8(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m8_b8(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "085522e8e43a88497d0d1d951ca5c9d1c6995f8d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vv-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vv_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i8m1_b8(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i8m2_b4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i8m4_b2(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_i8m8_b1(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i16m1_b16(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i16m2_b8(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i16m4_b4(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_i16m8_b2(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i32m1_b32(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i32m2_b16(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i32m4_b8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_i32m8_b4(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_i64m1_b64(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_i64m2_b32(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_i64m4_b16(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_i64m8_b8(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_i64m8_b8(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vv_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vv_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vv_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vv_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vv_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vv_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vv_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vv_u64m8_b8(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "dd84f1ed64aa56284ab6baced65fc126366debcf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vvm-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vvm_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i8m1_b8(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i8m2_b4(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i8m4_b2(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_i8m8_b1(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i16m1_b16(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i16m2_b8(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i16m4_b4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i16m8_b2(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i32m1_b32(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i32m2_b16(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i32m4_b8(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i32m8_b4(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i64m1_b64(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i64m2_b32(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i64m4_b16(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i64m8_b8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "1722006dc7997eb0b3633dc9bd4154a493ecdd7a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vvm-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vvm_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i8m1_b8(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i8m2_b4(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i8m4_b2(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_i8m8_b1(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i16m1_b16(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i16m2_b8(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i16m4_b4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i16m8_b2(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i32m1_b32(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i32m2_b16(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i32m4_b8(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i32m8_b4(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i64m1_b64(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i64m2_b32(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i64m4_b16(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i64m8_b8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "80bc5df1422bdb167d6603de27b8e17b757db0f6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vvm-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vvm_i8mf8_b64(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i8mf4_b32(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i8mf2_b16(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i8m1_b8(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i8m2_b4(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i8m4_b2(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_i8m8_b1(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i16mf4_b64(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i16mf2_b32(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i16m1_b16(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i16m2_b8(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i16m4_b4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_i16m8_b2(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i32mf2_b64(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i32m1_b32(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i32m2_b16(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i32m4_b8(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_i32m8_b4(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_i64m1_b64(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_i64m2_b32(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_i64m4_b16(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_i64m8_b8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_i64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u8mf8_b64(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u8mf4_b32(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u8mf2_b16(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u8m1_b8(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u8m2_b4(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u8m4_b2(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vvm_u8m8_b1(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u16mf4_b64(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u16mf2_b32(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u16m1_b16(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u16m2_b8(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u16m4_b4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vvm_u16m8_b2(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u32mf2_b64(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u32m1_b32(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u32m2_b16(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u32m4_b8(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vvm_u32m8_b4(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vvm_u64m1_b64(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vvm_u64m2_b32(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vvm_u64m4_b16(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vvm_u64m8_b8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vvm_u64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "627832989763e601dac3b6ae0da0c9494f6768a3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "036c9e7f02d1796a39492dac7c4b94eff3889b78", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "d5d583726c8a95c386085cf6610cb3d2fafc8e43", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "1fe2715021d5a377101a3f9a1e1f9a6a7ef06b51", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "496a6cc9487f654cdb94c014906e68048c0dea48", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "9ae14fff2542a78b76acb6245113d51687a21b1b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vx_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vx_i8mf8_b64(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i8mf4_b32(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i8mf2_b16(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i8m1_b8(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i8m2_b4(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i8m4_b2(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_i8m8_b1(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i16mf4_b64(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i16mf2_b32(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i16m1_b16(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i16m2_b8(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i16m4_b4(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_i16m8_b2(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i32mf2_b64(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i32m1_b32(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i32m2_b16(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i32m4_b8(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_i32m8_b4(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_i64m1_b64(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_i64m2_b32(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_i64m4_b16(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_i64m8_b8(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_i64m8_b8(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf8_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf4_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8mf2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u8m1_b8(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m1_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u8m2_b4(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m2_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u8m4_b2(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m4_b2(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vx_u8m8_b1(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u8m8_b1(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf4_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16mf2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u16m1_b16(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m1_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u16m2_b8(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m2_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u16m4_b4(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m4_b4(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vx_u16m8_b2(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u16m8_b2(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32mf2_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u32m1_b32(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m1_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u32m2_b16(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m2_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u32m4_b8(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m4_b8(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vx_u32m8_b4(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u32m8_b4(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vx_u64m1_b64(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m1_b64(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vx_u64m2_b32(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m2_b32(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vx_u64m4_b16(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m4_b16(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vx_u64m8_b8(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc_vx_u64m8_b8(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "f4ab93479127a1412d06bb1ea5181073fec5dbae", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "ad6f86efc9bbe6e00171c2be8183ef69b412f930", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "c5846349f853e563200e8a1cafc4f4c09d246b84", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "959e90db334faa376709aba39fa99a5e5d1477ba", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "458aa3a7901a9bfa8d1e3efa4ccee0ca3fce3588", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "6d2cb483bff4de402a2d62bab0f5c778e05db8ae", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmsbc_vxm_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.c?ref=bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc_vxm_i8mf8_b64(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i8mf4_b32(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i8mf2_b16(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i8m1_b8(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i8m2_b4(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i8m4_b2(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_i8m8_b1(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i16mf4_b64(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i16mf2_b32(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i16m1_b16(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i16m2_b8(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i16m4_b4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_i16m8_b2(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i32mf2_b64(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i32m1_b32(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i32m2_b16(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i32m4_b8(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_i32m8_b4(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_i64m1_b64(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_i64m2_b32(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_i64m4_b16(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_i64m8_b8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_i64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u8mf8_b64(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf8_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u8mf4_b32(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf4_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u8mf2_b16(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8mf2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u8m1_b8(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m1_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u8m2_b4(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m2_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u8m4_b2(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m4_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc_vxm_u8m8_b1(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u8m8_b1(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u16mf4_b64(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf4_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u16mf2_b32(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16mf2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u16m1_b16(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m1_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u16m2_b8(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m2_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u16m4_b4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m4_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc_vxm_u16m8_b2(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u16m8_b2(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u32mf2_b64(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32mf2_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u32m1_b32(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m1_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u32m2_b16(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m2_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u32m4_b8(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m4_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc_vxm_u32m8_b4(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u32m8_b4(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc_vxm_u64m1_b64(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m1_b64(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc_vxm_u64m2_b32(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m2_b32(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc_vxm_u64m4_b16(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m4_b16(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc_vxm_u64m8_b8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc_vxm_u64m8_b8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}]}