{"sha": "d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhYTBlYjFjNDZhODFiNGRhYTlkNjEwNzUwNGU0NDY0YTA1MTE2ZQ==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2007-09-24T20:57:06Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-09-24T20:57:06Z"}, "message": "* gcc/final.c (final_scan_insn): Remove accidentally duplicated code.\n\nFrom-SVN: r128726", "tree": {"sha": "bd14d158e6fc26f457cedf27d54bbcd5da361880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd14d158e6fc26f457cedf27d54bbcd5da361880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5aa0eb1c46a81b4daa9d6107504e4464a05116e/comments", "author": null, "committer": null, "parents": [{"sha": "7a20d68989dac61d98b12b5d32404f04021d211f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a20d68989dac61d98b12b5d32404f04021d211f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a20d68989dac61d98b12b5d32404f04021d211f"}], "stats": {"total": 39, "additions": 4, "deletions": 35}, "files": [{"sha": "72834124268a76f8f9cafd654674e9b51e9290f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa0eb1c46a81b4daa9d6107504e4464a05116e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa0eb1c46a81b4daa9d6107504e4464a05116e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "patch": "@@ -1,3 +1,7 @@\n+2007-09-24  Roman Zippel <zippel@linux-m68k.org>\n+\n+\t* gcc/final.c (final_scan_insn): Remove accidentally duplicated code.\n+\n 2007-09-24  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config.gcc (powerpc*-*-*): --with-cpu=cell is a 64bit CPU."}, {"sha": "b59a222001130f3a7d331329f445184f9a1a7509", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5aa0eb1c46a81b4daa9d6107504e4464a05116e/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5aa0eb1c46a81b4daa9d6107504e4464a05116e/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=d5aa0eb1c46a81b4daa9d6107504e4464a05116e", "patch": "@@ -2387,41 +2387,6 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t      INSN_CODE (insn) = -1;\n \t  }\n \n-\t/* If this is a conditional trap, maybe modify it if the cc's\n-\t   are in a nonstandard state so that it accomplishes the same\n-\t   thing that it would do straightforwardly if the cc's were\n-\t   set up normally.  */\n-\tif (cc_status.flags != 0\n-\t    && NONJUMP_INSN_P (insn)\n-\t    && GET_CODE (body) == TRAP_IF\n-\t    && COMPARISON_P (TRAP_CONDITION (body))\n-\t    && XEXP (TRAP_CONDITION (body), 0) == cc0_rtx)\n-\t  {\n-\t    /* This function may alter the contents of its argument\n-\t       and clear some of the cc_status.flags bits.\n-\t       It may also return 1 meaning condition now always true\n-\t       or -1 meaning condition now always false\n-\t       or 2 meaning condition nontrivial but altered.  */\n-\t    int result = alter_cond (TRAP_CONDITION (body));\n-\n-\t    /* If TRAP_CONDITION has become always false, delete the\n-\t       instruction.  */\n-\t    if (result == -1)\n-\t      {\n-\t\tdelete_insn (insn);\n-\t\tbreak;\n-\t      }\n-\n-\t    /* If TRAP_CONDITION has become always true, replace\n-\t       TRAP_CONDITION with const_true_rtx.  */\n-\t    if (result == 1)\n-\t      TRAP_CONDITION (body) = const_true_rtx;\n-\n-\t    /* Rerecognize the instruction if it has changed.  */\n-\t    if (result != 0)\n-\t      INSN_CODE (insn) = -1;\n-\t  }\n-\n \t/* Make same adjustments to instructions that examine the\n \t   condition codes without jumping and instructions that\n \t   handle conditional moves (if this machine has either one).  */"}]}