{"sha": "096daf41db55827292c1d70cd937b4e97de8043a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk2ZGFmNDFkYjU1ODI3MjkyYzFkNzBjZDkzN2I0ZTk3ZGU4MDQzYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-02-16T22:10:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-02-16T22:10:10Z"}, "message": "c-typeck.c (build_c_cast): Fold constant variables into initial values.\n\n\t* c-typeck.c (build_c_cast):  Fold constant variables into\n\tinitial values.\n\n\t* gcc.dg/c90-const-expr-3.c (DZERO): New static variable\n\t(foo): Add few extra tests\n\t* gcc.dg/c99-const-expr-3.c: Likewise.\n\t* gcc.c-torture/execute/20030216-1.c: New.\n\nFrom-SVN: r62987", "tree": {"sha": "c0995f241340b5f698925d91af5ffa83db5f4b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0995f241340b5f698925d91af5ffa83db5f4b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/096daf41db55827292c1d70cd937b4e97de8043a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096daf41db55827292c1d70cd937b4e97de8043a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096daf41db55827292c1d70cd937b4e97de8043a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096daf41db55827292c1d70cd937b4e97de8043a/comments", "author": null, "committer": null, "parents": [{"sha": "35113fde34664bf86a7cee2deb8d94a5537a8a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35113fde34664bf86a7cee2deb8d94a5537a8a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35113fde34664bf86a7cee2deb8d94a5537a8a29"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "6fc6b3996f8f2be073109a88296df1bc8c3e3feb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -1,3 +1,8 @@\n+Sun Feb 16 23:07:52 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* c-typeck.c (build_c_cast):  Fold constant variables into\n+\tinitial values.\n+\n 2003-02-16  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/install.texi (Specific): Fix link for m68k-att-sysv."}, {"sha": "f3b6bb96fbce821339a9fe4976c12991206ad8c3", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -3765,8 +3765,11 @@ build_c_cast (type, expr)\n \t\t    get_alias_set (TREE_TYPE (type))))\n \t    warning (\"dereferencing type-punned pointer will break strict-aliasing rules\");\n \t}\n-      \n+\n       ovalue = value;\n+      /* Replace a nonvolatile const static variable with its value.  */\n+      if (optimize && TREE_CODE (value) == VAR_DECL)\n+\tvalue = decl_constant_value (value);\n       value = convert (type, value);\n \n       /* Ignore any integer overflow caused by the cast.  */"}, {"sha": "0356de92d986845cbec61b3a3022e84a467aa61d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -1,3 +1,10 @@\n+Sun Feb 16 23:08:19 CET 2003  Jan HUbicka  <jh@suse.cz>\n+\n+\t* gcc.dg/c90-const-expr-3.c (DZERO): New static variable\n+\t(foo): Add few extra tests\n+\t* gcc.dg/c99-const-expr-3.c: Likewise.\n+\t* gcc.c-torture/execute/20030216-1.c: New.\n+\n 2003-02-16  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/9459"}, {"sha": "2153bfdd71fea508aeedf55a285924c4d304cf8b", "filename": "gcc/testsuite/gcc.c-torture/execute/20030216-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -0,0 +1,10 @@\n+void link_error (void);\n+const double one=1.0;\n+main ()\n+{\n+#ifdef __OPTIMIZE__\n+  if ((int) one != 1)\n+    link_error ();\n+#endif\n+  return 0;\n+}"}, {"sha": "4a0eb105ef503253a40c82feddeede20a176f617", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-3.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -6,6 +6,7 @@\n    to give the correct behavior to conforming programs.  */\n \n static const int ZERO = 0;\n+static const double DZERO = 0;\n \n int *a;\n int b;\n@@ -36,4 +37,9 @@ foo (void)\n   ASSERT_NOT_NPC ((char) ZERO);\n   ASSERT_NPC ((int) 0);\n   ASSERT_NOT_NPC ((int) ZERO);\n+  ASSERT_NPC ((int) 0.0);\n+  ASSERT_NOT_NPC ((int) DZERO);\n+  ASSERT_NOT_NPC ((int) +0.0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((int) (0.0+0.0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((int) (double)0.0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n }"}, {"sha": "096825eb8f5785757aaa9cebb99b2b1553ddeb04", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-3.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096daf41db55827292c1d70cd937b4e97de8043a/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c?ref=096daf41db55827292c1d70cd937b4e97de8043a", "patch": "@@ -6,6 +6,7 @@\n    to give the correct behavior to conforming programs.  */\n \n static const int ZERO = 0;\n+static const double DZERO = 0;\n \n int *a;\n int b;\n@@ -36,4 +37,9 @@ foo (void)\n   ASSERT_NOT_NPC ((char) ZERO);\n   ASSERT_NPC ((int) 0);\n   ASSERT_NOT_NPC ((int) ZERO);\n+  ASSERT_NPC ((int) 0.0);\n+  ASSERT_NOT_NPC ((int) DZERO);\n+  ASSERT_NOT_NPC ((int) +0.0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((int) (0.0+0.0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n+  ASSERT_NOT_NPC ((int) (double)0.0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n }"}]}