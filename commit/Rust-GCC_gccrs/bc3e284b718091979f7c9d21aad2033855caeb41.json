{"sha": "bc3e284b718091979f7c9d21aad2033855caeb41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzZTI4NGI3MTgwOTE5NzlmN2M5ZDIxYWFkMjAzMzg1NWNhZWI0MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-09T17:53:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-09T17:53:24Z"}, "message": "* pt.c (invalid_nontype_parm_type_p): Avoid printing \"<type error>\".\n\nFrom-SVN: r181220", "tree": {"sha": "0825fc6c3dbe77f71df1d622946be2e8079c0d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0825fc6c3dbe77f71df1d622946be2e8079c0d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc3e284b718091979f7c9d21aad2033855caeb41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3e284b718091979f7c9d21aad2033855caeb41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3e284b718091979f7c9d21aad2033855caeb41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3e284b718091979f7c9d21aad2033855caeb41/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ecf658592bd49b71fd6579f3da8122df9e27504f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf658592bd49b71fd6579f3da8122df9e27504f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf658592bd49b71fd6579f3da8122df9e27504f"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "03ffecec7bff7403cc60b06753aaad21b14c47ad", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -1,5 +1,7 @@\n 2011-11-09  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (invalid_nontype_parm_type_p): Avoid printing \"<type error>\".\n+\n \t* pt.c (convert_nontype_argument): Only integral arguments\n \tget early folding.\n "}, {"sha": "71a98b0de19f79750ba26b7223e0d12066841689", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -18976,7 +18976,13 @@ invalid_nontype_parm_type_p (tree type, tsubst_flags_t complain)\n     return 0;\n \n   if (complain & tf_error)\n-    error (\"%q#T is not a valid type for a template constant parameter\", type);\n+    {\n+      if (type == error_mark_node)\n+\tinform (input_location, \"invalid template non-type parameter\");\n+      else\n+\terror (\"%q#T is not a valid type for a template non-type parameter\",\n+\t       type);\n+    }\n   return 1;\n }\n "}, {"sha": "ef4b175d4d745e919eff21e276d5563f3fc9a421", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -1,3 +1,9 @@\n+2011-11-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/variadic74.C: Adjust diags.\n+\t* g++.dg/template/crash53.C: Likewise.\n+\t* g++.dg/template/void9.C: Likewise.\n+\n 2011-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51045"}, {"sha": "5b502b974ccb19ec6e053a21a67579ec5d11d34d", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic74.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic74.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic74.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic74.C?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -1,8 +1,8 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile { target c++11 } }\n template <class... Types> class A\n {\n public:\n-  template <Types... Values> class X { /* ... */ }; // { dg-error \"not a valid type for a template constant parameter\" }\n+  template <Types... Values> class X { /* ... */ }; // { dg-error \"not a valid type for a template non-type parameter\" }\n };\n \n template<class... Types> class B"}, {"sha": "a8d7c1110bfa76c19fb3dcaaad129621ae3a5f55", "filename": "gcc/testsuite/g++.dg/template/crash53.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash53.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash53.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash53.C?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -5,7 +5,7 @@ template<int> struct A {};\n \n template<typename T> struct B\n {\n-  template<T I> B(A<I>);  // { dg-error \"template constant parameter\" }\n+  template<T I> B(A<I>);  // { dg-error \"template non-type parameter\" }\n };\n \n B<double> a=A<0>();  // { dg-error \"non-scalar type\" }"}, {"sha": "319a684fa435c82bf484e219404f46a43aedaf69", "filename": "gcc/testsuite/g++.dg/template/void9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e284b718091979f7c9d21aad2033855caeb41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid9.C?ref=bc3e284b718091979f7c9d21aad2033855caeb41", "patch": "@@ -1,4 +1,4 @@\n //PR c++/28738\n \n template<int,void> struct A {};    // { dg-error \"not a valid type\" }\n-template<int N> struct A<N,0> {};  // { dg-error \"not a valid type\" }\n+template<int N> struct A<N,0> {};  // { dg-message \"invalid\" }"}]}