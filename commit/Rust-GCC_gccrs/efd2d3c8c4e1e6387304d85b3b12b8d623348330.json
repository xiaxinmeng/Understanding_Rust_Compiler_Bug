{"sha": "efd2d3c8c4e1e6387304d85b3b12b8d623348330", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZkMmQzYzhjNGUxZTYzODczMDRkODViM2IxMmI4ZDYyMzM0ODMzMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-02-20T14:56:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-02-20T14:56:27Z"}, "message": "tree-cfg.c (replace_uses_by): Mark altered BBs before doing the substitution.\n\n2014-02-20  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (replace_uses_by): Mark altered BBs before\n\tdoing the substitution.\n\t(verify_gimple_assign_single): Also verify bare MEM_REFs\n\ton the lhs.\n\nFrom-SVN: r207958", "tree": {"sha": "aa3934efa281a2d3b58e4b7bfb04d00879d857f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa3934efa281a2d3b58e4b7bfb04d00879d857f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efd2d3c8c4e1e6387304d85b3b12b8d623348330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd2d3c8c4e1e6387304d85b3b12b8d623348330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd2d3c8c4e1e6387304d85b3b12b8d623348330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd2d3c8c4e1e6387304d85b3b12b8d623348330/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f238107464c0a36d65d52689b01ac3c0cc8be9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f238107464c0a36d65d52689b01ac3c0cc8be9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f238107464c0a36d65d52689b01ac3c0cc8be9cb"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "f4cb359b0eab8ec78513f9e1bf34805192770d9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efd2d3c8c4e1e6387304d85b3b12b8d623348330/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efd2d3c8c4e1e6387304d85b3b12b8d623348330/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efd2d3c8c4e1e6387304d85b3b12b8d623348330", "patch": "@@ -1,3 +1,10 @@\n+2014-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (replace_uses_by): Mark altered BBs before\n+\tdoing the substitution.\n+\t(verify_gimple_assign_single): Also verify bare MEM_REFs\n+\ton the lhs.\n+\n 2014-02-20  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/55260"}, {"sha": "325285c8dadcea4b7dad988ee50208a66c88c82a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efd2d3c8c4e1e6387304d85b3b12b8d623348330/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efd2d3c8c4e1e6387304d85b3b12b8d623348330/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=efd2d3c8c4e1e6387304d85b3b12b8d623348330", "patch": "@@ -1677,6 +1677,11 @@ replace_uses_by (tree name, tree val)\n \n   FOR_EACH_IMM_USE_STMT (stmt, imm_iter, name)\n     {\n+      /* Mark the block if we change the last stmt in it.  */\n+      if (cfgcleanup_altered_bbs\n+\t  && stmt_ends_bb_p (stmt))\n+\tbitmap_set_bit (cfgcleanup_altered_bbs, gimple_bb (stmt)->index);\n+\n       FOR_EACH_IMM_USE_ON_STMT (use, imm_iter)\n         {\n \t  replace_exp (use, val);\n@@ -1701,11 +1706,6 @@ replace_uses_by (tree name, tree val)\n \t  gimple orig_stmt = stmt;\n \t  size_t i;\n \n-\t  /* Mark the block if we changed the last stmt in it.  */\n-\t  if (cfgcleanup_altered_bbs\n-\t      && stmt_ends_bb_p (stmt))\n-\t    bitmap_set_bit (cfgcleanup_altered_bbs, gimple_bb (stmt)->index);\n-\n \t  /* FIXME.  It shouldn't be required to keep TREE_CONSTANT\n \t     on ADDR_EXPRs up-to-date on GIMPLE.  Propagation will\n \t     only change sth from non-invariant to invariant, and only\n@@ -3986,7 +3986,9 @@ verify_gimple_assign_single (gimple stmt)\n       return true;\n     }\n \n-  if (handled_component_p (lhs))\n+  if (handled_component_p (lhs)\n+      || TREE_CODE (lhs) == MEM_REF\n+      || TREE_CODE (lhs) == TARGET_MEM_REF)\n     res |= verify_types_in_gimple_reference (lhs, true);\n \n   /* Special codes we cannot handle via their class.  */"}]}