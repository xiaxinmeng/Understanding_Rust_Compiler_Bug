{"sha": "2c641f8b3a3059353ac6f8798d10d2f5c611109b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2NDFmOGIzYTMwNTkzNTNhYzZmODc5OGQxMGQyZjVjNjExMTA5Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-09-06T15:28:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-09-06T15:28:02Z"}, "message": "toplev.c (output_stack_usage): Be prepared for suffixes created by the compiler in the function names.\n\n\t* toplev.c (output_stack_usage): Be prepared for suffixes created by\n\tthe compiler in the function names.\n\nFrom-SVN: r202339", "tree": {"sha": "a2dc3968bfecca8999f0978eb3c9d4b7086dd505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2dc3968bfecca8999f0978eb3c9d4b7086dd505"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c641f8b3a3059353ac6f8798d10d2f5c611109b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c641f8b3a3059353ac6f8798d10d2f5c611109b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c641f8b3a3059353ac6f8798d10d2f5c611109b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c641f8b3a3059353ac6f8798d10d2f5c611109b/comments", "author": null, "committer": null, "parents": [{"sha": "a81b0a3dbb7fa136464e2ce2d1e6702856791f9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a81b0a3dbb7fa136464e2ce2d1e6702856791f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a81b0a3dbb7fa136464e2ce2d1e6702856791f9d"}], "stats": {"total": 70, "additions": 59, "deletions": 11}, "files": [{"sha": "cbaf4c40f9920d2f7b0bd998709d40a2b23ae136", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c641f8b3a3059353ac6f8798d10d2f5c611109b", "patch": "@@ -1,3 +1,8 @@\n+2013-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* toplev.c (output_stack_usage): Be prepared for suffixes created by\n+\tthe compiler in the function names.\n+\n 2013-09-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/58094\n@@ -8,8 +13,8 @@\n \n 2013-09-06  Jan Hubicka  <jh@suse.cz>\n \n-\t* i386.c (ix86_hard_regno_mode_ok): AVX modes are valid only when\t\n-\tAVX is enabled.\n+\t* config/i386/i386.c (ix86_hard_regno_mode_ok): AVX modes are valid\n+\tonly when AVX is enabled.\n \n 2013-09-06  James Greenhalgh  <james.greenhalgh@arm.com>\n "}, {"sha": "b51e5cef988b0592fac54d7aac1d09ec562b2548", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c641f8b3a3059353ac6f8798d10d2f5c611109b", "patch": "@@ -1,3 +1,7 @@\n+2013-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/stack_usage2.adb: New test.\n+\n 2013-09-06  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/table-intrinsics.c"}, {"sha": "d458a929037da7732aa572a3618f996c29541eb7", "filename": "gcc/testsuite/gnat.dg/stack_usage2.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_usage2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_usage2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_usage2.adb?ref=2c641f8b3a3059353ac6f8798d10d2f5c611109b", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2 -fstack-usage\" }\n+\n+with System;\n+\n+procedure Stack_Usage2 is\n+\n+   Sink : System.Address;\n+   pragma Import (Ada, Sink);\n+\n+   procedure Transmit_Data (Branch : Integer) is\n+      pragma No_Inline (Transmit_Data);\n+      X : Integer;\n+   begin\n+      case Branch is\n+         when 1 => Sink := X'Address;\n+         when others => null;\n+      end case;\n+   end;\n+\n+begin\n+   Transmit_Data (Branch => 1);\n+end;\n+\n+-- { dg-final { scan-stack-usage-not \":Constprop\" } }\n+-- { dg-final { cleanup-stack-usage } }"}, {"sha": "3473211efb15aca25feb757eabd8fa99329bb193", "filename": "gcc/toplev.c", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c641f8b3a3059353ac6f8798d10d2f5c611109b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2c641f8b3a3059353ac6f8798d10d2f5c611109b", "patch": "@@ -1017,22 +1017,35 @@ output_stack_usage (void)\n     {\n       expanded_location loc\n \t= expand_location (DECL_SOURCE_LOCATION (current_function_decl));\n-      const char *raw_id, *id;\n-\n-      /* Strip the scope prefix if any.  */\n-      raw_id = lang_hooks.decl_printable_name (current_function_decl, 2);\n-      id = strrchr (raw_id, '.');\n-      if (id)\n-\tid++;\n+      /* We don't want to print the full qualified name because it can be long,\n+\t so we strip the scope prefix, but we may need to deal with the suffix\n+\t created by the compiler.  */\n+      const char *suffix\n+\t= strchr (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)), '.');\n+      const char *name\n+\t= lang_hooks.decl_printable_name (current_function_decl, 2);\n+      if (suffix)\n+\t{\n+\t  const char *dot = strchr (name, '.');\n+\t  while (dot && strcasecmp (dot, suffix) != 0)\n+\t    {\n+\t      name = dot + 1;\n+\t      dot = strchr (name, '.');\n+\t    }\n+\t}\n       else\n-\tid = raw_id;\n+\t{\n+\t  const char *dot = strrchr (name, '.');\n+\t  if (dot)\n+\t    name = dot + 1;\n+\t}\n \n       fprintf (stack_usage_file,\n \t       \"%s:%d:%d:%s\\t\"HOST_WIDE_INT_PRINT_DEC\"\\t%s\\n\",\n \t       lbasename (loc.file),\n \t       loc.line,\n \t       loc.column,\n-\t       id,\n+\t       name,\n \t       stack_usage,\n \t       stack_usage_kind_str[stack_usage_kind]);\n     }"}]}