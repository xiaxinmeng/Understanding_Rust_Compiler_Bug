{"sha": "ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3Y2NlNjlkNTFjZDkyNDBjMGZjYjRlMDM3OWE2NzBmZGMxYWQ3Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:49:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:49:41Z"}, "message": "2005-06-14  Arnaud Charlet  <charlet@adacore.com>\n\t    Jose Ruiz  <ruiz@adacore.com>\n\n\t* s-tposen.adb, s-tpobop.adb\n\t(Exceptional_Complete_Rendezvous): Save the occurrence and not only\n\tthe exception id.\n\t(PO_Do_Or_Queue): Before queuing a task on an entry queue we check that\n\tthere is no violation of the Max_Entry_Queue_Length restriction (if it\n\thas been set); Program_Error is raised otherwise.\n\t(Requeue_Call): Before requeuing the task on the target entry queue we\n\tcheck that there is no violation of the Max_Entry_Queue_Length\n\trestriction (if it has been set); Program_Error is raised otherwise.\n\nFrom-SVN: r101064", "tree": {"sha": "2d9b75be7503d9bbf33c7b08d5d0176e1e7f3cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d9b75be7503d9bbf33c7b08d5d0176e1e7f3cf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73/comments", "author": null, "committer": null, "parents": [{"sha": "f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5"}], "stats": {"total": 119, "additions": 97, "deletions": 22}, "files": [{"sha": "057b60d0dc76d4c45a4ebf7c59b6a93fe1360462", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 72, "deletions": 7, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "patch": "@@ -1,8 +1,9 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n --                                                                          --\n---                SYSTEM.TASKING.PROTECTED_OBJECTS.OPERATIONS               --\n+--     S Y S T E M . T A S K I N G . P R O T E C T E D _ O B J E C T S .    --\n+--                             O P E R A T I O N S                          --\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n@@ -93,6 +94,9 @@ with System.Parameters;\n with System.Traces.Tasking;\n --  used for Send_Trace_Info\n \n+with System.Restrictions;\n+--  used for Run_Time_Restrictions\n+\n package body System.Tasking.Protected_Objects.Operations is\n \n    package STPO renames System.Task_Primitives.Operations;\n@@ -102,6 +106,8 @@ package body System.Tasking.Protected_Objects.Operations is\n    use Ada.Exceptions;\n    use Entries;\n \n+   use System.Restrictions;\n+   use System.Restrictions.Rident;\n    use System.Traces;\n    use System.Traces.Tasking;\n \n@@ -265,6 +271,11 @@ package body System.Tasking.Protected_Objects.Operations is\n      (Object : Protection_Entries_Access;\n       Ex     : Ada.Exceptions.Exception_Id)\n    is\n+      procedure Transfer_Occurrence\n+        (Target : Ada.Exceptions.Exception_Occurrence_Access;\n+         Source : Ada.Exceptions.Exception_Occurrence);\n+      pragma Import (C, Transfer_Occurrence, \"__gnat_transfer_occurrence\");\n+\n       Entry_Call : constant Entry_Call_Link := Object.Call_In_Progress;\n    begin\n       pragma Debug\n@@ -278,6 +289,12 @@ package body System.Tasking.Protected_Objects.Operations is\n \n          Entry_Call.Exception_To_Raise := Ex;\n \n+         if Ex /= Ada.Exceptions.Null_Id then\n+            Transfer_Occurrence\n+              (Entry_Call.Self.Common.Compiler_Data.Current_Excep'Access,\n+               STPO.Self.Common.Compiler_Data.Current_Excep);\n+         end if;\n+\n          --  Wakeup_Entry_Caller will be called from PO_Do_Or_Queue or\n          --  PO_Service_Entries on return.\n       end if;\n@@ -352,9 +369,32 @@ package body System.Tasking.Protected_Objects.Operations is\n       elsif Entry_Call.Mode /= Conditional_Call\n         or else not With_Abort\n       then\n-         Queuing.Enqueue (Object.Entry_Queues (E), Entry_Call);\n-         Update_For_Queue_To_PO (Entry_Call, With_Abort);\n \n+         if Run_Time_Restrictions.Set (Max_Entry_Queue_Length)\n+              and then\n+            Run_Time_Restrictions.Value (Max_Entry_Queue_Length) <=\n+              Queuing.Count_Waiting (Object.Entry_Queues (E))\n+         then\n+            --  This violates the Max_Entry_Queue_Length restriction,\n+            --  raise Program_Error.\n+\n+            Entry_Call.Exception_To_Raise := Program_Error'Identity;\n+\n+            if Single_Lock then\n+               STPO.Lock_RTS;\n+            end if;\n+\n+            STPO.Write_Lock (Entry_Call.Self);\n+            Initialization.Wakeup_Entry_Caller (Self_ID, Entry_Call, Done);\n+            STPO.Unlock (Entry_Call.Self);\n+\n+            if Single_Lock then\n+               STPO.Unlock_RTS;\n+            end if;\n+         else\n+            Queuing.Enqueue (Object.Entry_Queues (E), Entry_Call);\n+            Update_For_Queue_To_PO (Entry_Call, With_Abort);\n+         end if;\n       else\n          --  Conditional_Call and With_Abort\n \n@@ -734,9 +774,34 @@ package body System.Tasking.Protected_Objects.Operations is\n               or else Entry_Call.Mode /= Conditional_Call\n             then\n                E := Protected_Entry_Index (Entry_Call.E);\n-               Queuing.Enqueue\n-                 (New_Object.Entry_Queues (E), Entry_Call);\n-               Update_For_Queue_To_PO (Entry_Call, With_Abort);\n+\n+               if Run_Time_Restrictions.Set (Max_Entry_Queue_Length)\n+                    and then\n+                  Run_Time_Restrictions.Value (Max_Entry_Queue_Length) <=\n+                    Queuing.Count_Waiting (Object.Entry_Queues (E))\n+               then\n+                  --  This violates the Max_Entry_Queue_Length restriction,\n+                  --  raise Program_Error.\n+\n+                  Entry_Call.Exception_To_Raise := Program_Error'Identity;\n+\n+                  if Single_Lock then\n+                     STPO.Lock_RTS;\n+                  end if;\n+\n+                  STPO.Write_Lock (Entry_Call.Self);\n+                  Initialization.Wakeup_Entry_Caller\n+                    (Self_Id, Entry_Call, Done);\n+                  STPO.Unlock (Entry_Call.Self);\n+\n+                  if Single_Lock then\n+                     STPO.Unlock_RTS;\n+                  end if;\n+               else\n+                  Queuing.Enqueue\n+                    (New_Object.Entry_Queues (E), Entry_Call);\n+                  Update_For_Queue_To_PO (Entry_Call, With_Abort);\n+               end if;\n \n             else\n                PO_Do_Or_Queue (Self_Id, New_Object, Entry_Call, With_Abort);"}, {"sha": "23fdd1443a6f38e546ca585e0151e8f334e0728a", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=ff7cce69d51cd9240c0fcb4e0379a670fdc1ad73", "patch": "@@ -1,10 +1,11 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---               GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                  --\n --                                                                          --\n---              SYSTEM.TASKING.PROTECTED_OBJECTS.SINGLE_ENTRY               --\n+--     S Y S T E M . T A S K I N G . P R O T E C T E D _ O B J E C T S .    --\n+--                          S I N G L E _ E N T R Y                         --\n --                                                                          --\n---                                  B o d y                                 --\n+--                                B o d y                                   --\n --                                                                          --\n --         Copyright (C) 1998-2005, Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -37,16 +38,16 @@ pragma Style_Checks (All_Checks);\n \n --  This package provides an optimized version of Protected_Objects.Operations\n --  and Protected_Objects.Entries making the following assumptions:\n---\n---  PO have only one entry\n---  There is only one caller at a time (No_Entry_Queue)\n---  There is no dynamic priority support (No_Dynamic_Priorities)\n---  No Abort Statements\n---    (No_Abort_Statements, Max_Asynchronous_Select_Nesting => 0)\n---  PO are at library level\n---  No Requeue\n---  None of the tasks will terminate (no need for finalization)\n---\n+\n+--    PO has only one entry\n+--    There is only one caller at a time (No_Entry_Queue)\n+--    There is no dynamic priority support (No_Dynamic_Priorities)\n+--    No Abort Statements\n+--     (No_Abort_Statements, Max_Asynchronous_Select_Nesting => 0)\n+--    PO are at library level\n+--    No Requeue\n+--    None of the tasks will terminate (no need for finalization)\n+\n --  This interface is intended to be used in the ravenscar and restricted\n --  profiles, the compiler is responsible for ensuring that the conditions\n --  mentioned above are respected, except for the No_Entry_Queue restriction\n@@ -492,7 +493,17 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n          end if;\n \n       elsif Entry_Call.Mode /= Conditional_Call then\n-         Object.Entry_Queue := Entry_Call;\n+         if Object.Entry_Queue /= null then\n+\n+            --  This violates the No_Entry_Queue restriction, send\n+            --  Program_Error to the caller.\n+\n+            Send_Program_Error (Self_Id, Entry_Call);\n+            return;\n+         else\n+            Object.Entry_Queue := Entry_Call;\n+         end if;\n+\n       else\n          --  Conditional_Call\n \n@@ -755,7 +766,6 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n \n             Object.Owner := Null_Task;\n \n-\n             Self_Id.Common.Protected_Action_Nesting :=\n               Self_Id.Common.Protected_Action_Nesting - 1;\n          end;"}]}