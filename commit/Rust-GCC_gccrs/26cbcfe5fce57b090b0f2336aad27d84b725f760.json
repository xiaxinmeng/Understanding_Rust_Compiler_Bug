{"sha": "26cbcfe5fce57b090b0f2336aad27d84b725f760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjYmNmZTVmY2U1N2IwOTBiMGYyMzM2YWFkMjdkODRiNzI1Zjc2MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-18T15:28:08Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-18T15:28:08Z"}, "message": "Fix libgomp.oacc-fortran/atomic_capture-1.f90\n\n2020-03-18  Julian Brown <julian@codesourcery.com>\n            Tobias Burnus  <tobias@codesourcery.com>\n\n        * testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Really make\n        it work concurrently.", "tree": {"sha": "7ccb797dfa77979eea4797176a72581d30d931f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ccb797dfa77979eea4797176a72581d30d931f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26cbcfe5fce57b090b0f2336aad27d84b725f760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cbcfe5fce57b090b0f2336aad27d84b725f760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26cbcfe5fce57b090b0f2336aad27d84b725f760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cbcfe5fce57b090b0f2336aad27d84b725f760/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "884d914111228eed977d794f38e4cc88bf132a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884d914111228eed977d794f38e4cc88bf132a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884d914111228eed977d794f38e4cc88bf132a58"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "9a1065fef4e8e5eb467c2c41e690ca466762e3fc", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26cbcfe5fce57b090b0f2336aad27d84b725f760/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26cbcfe5fce57b090b0f2336aad27d84b725f760/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=26cbcfe5fce57b090b0f2336aad27d84b725f760", "patch": "@@ -1,3 +1,9 @@\n+2020-03-18  Julian Brown <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Really make\n+\tit work concurrently.\n+\n 2020-03-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c++/firstprivate-mappings-1.C: Add"}, {"sha": "536b3f0030c0b2fa61f4db4d40aa1d7169c1d387", "filename": "libgomp/testsuite/libgomp.oacc-fortran/atomic_capture-1.f90", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26cbcfe5fce57b090b0f2336aad27d84b725f760/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26cbcfe5fce57b090b0f2336aad27d84b725f760/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90?ref=26cbcfe5fce57b090b0f2336aad27d84b725f760", "patch": "@@ -275,8 +275,9 @@ program main\n   if (ltmp .neqv. .not. lexp) STOP 33\n   if (lgot .neqv. lexp) STOP 34\n \n-  igot = 1\n+  igot = 0\n   iexp = N\n+  iarr = -42\n \n   !$acc parallel loop copy (igot, itmp)\n     do i = 1, N\n@@ -287,13 +288,24 @@ program main\n     end do\n   !$acc end parallel loop\n \n+  if (igot /= N) stop 107\n+  itmp = 0\n+  do i = 1, N\n+     if (iarr(i) == 0) then\n+       itmp = i\n+       exit\n+     end if\n+  end do\n+  ! At most one iarr element can be 0.\n   do i = 1, N\n-     if (.not. (1 <= iarr(i) .and. iarr(i) < iexp)) STOP 35\n+     if ((iarr(i) == 0 .and. i /= itmp) &\n+         .or. iarr(i) < 0 .or. iarr(i) >= N) STOP 35\n   end do\n   if (igot /= iexp) STOP 36\n \n-  igot = N\n+  igot = N + 1\n   iexp = 1\n+  iarr = -42\n \n   !$acc parallel loop copy (igot, itmp)\n     do i = 1, N\n@@ -304,8 +316,18 @@ program main\n     end do\n   !$acc end parallel loop\n \n+  if (igot /= 1) stop 108\n+  itmp = N + 1\n+  ! At most one iarr element can be N+1.\n+  do i = 1, N\n+     if (iarr(i) == N + 1) then\n+       itmp = i\n+       exit\n+     end if\n+  end do\n   do i = 1, N\n-     if (.not. (iarr(i) == 1 .or. iarr(i) == N)) STOP 37\n+     if ((iarr(i) == N + 1 .and. i /= itmp) &\n+         .or. iarr(i) <= 0 .or. iarr(i) > N + 1) STOP 37\n   end do\n   if (igot /= iexp) STOP 38\n "}]}