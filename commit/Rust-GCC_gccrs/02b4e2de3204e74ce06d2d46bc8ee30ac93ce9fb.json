{"sha": "02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "node_id": "C_kwDOANBUbNoAKDAyYjRlMmRlMzIwNGU3NGNlMDZkMmQ0NmJjOGVlMzBhYzkzY2U5ZmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-09T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-09T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "658dcdddb32e4787092f712dbdc604a81a1a5c91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/658dcdddb32e4787092f712dbdc604a81a1a5c91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/comments", "author": null, "committer": null, "parents": [{"sha": "e8ed26c2ac38ab1f6ed5a627d9089a9243e06a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ed26c2ac38ab1f6ed5a627d9089a9243e06a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ed26c2ac38ab1f6ed5a627d9089a9243e06a0c"}], "stats": {"total": 128, "additions": 127, "deletions": 1}, "files": [{"sha": "118cfe0954f111a7952dbee6debabafe96207496", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1,3 +1,37 @@\n+2022-06-08  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR middle-end/105874\n+\t* expr.cc (expand_expr_real_1) <normal_inner_ref>:  New local\n+\tvariable tem_modifier for calculating the expand_modifier enum to\n+\tuse for expanding tem.  If tem is a VAR_DECL, use EXPAND_MEMORY.\n+\n+2022-06-08  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/105879\n+\t* config/xtensa/xtensa.md (movdi): Rename 'first' and 'second'\n+\tto 'lowpart' and 'highpart' so that they match 'gen_lowpart' and\n+\t'gen_highpart' bitwise semantics and fix order of highpart and\n+\tlowpart depending on target endianness.\n+\n+2022-06-08  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/arm/arm-cpus.in (star-mc1): New cpu.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* doc/invoke.texi: Update docs.\n+\n+2022-06-08  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/105513\n+\tPR target/105504\n+\t* config/i386/i386.md (*movsi_internal): Change alternative\n+\tfrom *v to ?v.\n+\t(*movdi_internal): Ditto.\n+\t* config/i386/sse.md (vec_set<mode>_0): Change alternative *r\n+\tto ?r.\n+\t(*vec_extractv4sf_mem): Ditto.\n+\t(*vec_extracthf): Ditto.\n+\n 2022-06-07  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/105090"}, {"sha": "2b282de2e7df4802d0c755cc6a05160265935f66", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1 +1 @@\n-20220608\n+20220609"}, {"sha": "08b8d284018f57efbbd1814d571b1f594c6514a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1,3 +1,50 @@\n+2022-06-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105852\n+\t* decl.cc (duplicate_decls): Change non-templated friend\n+\tcheck to an assert.\n+\t* pt.cc\t(tsubst_function_decl): Don't set DECL_TEMPLATE_INFO\n+\ton non-templated friends.\n+\t(tsubst_friend_function): Adjust.\n+\n+2022-06-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105852\n+\tPR c++/105761\n+\t* decl.cc (duplicate_decls): Avoid copying template info\n+\tfrom non-templated friend even if newdecl isn't a definition.\n+\tCorrect handling of DECL_UNIQUE_FRIEND_P on templates.\n+\t* pt.cc (non_templated_friend_p): New.\n+\t* cp-tree.h (non_templated_friend_p): Declare it.\n+\n+2022-06-08  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl2.cc (struct priority_info_s, priority_info): Delete.\n+\t(priority_map_traits, priority_map_t): New.\n+\t(static_init_fini_fns): New.\n+\t(INITIALIZE_P_IDENTIFIER, PRIORITY_IDENTIFIER): Delete.\n+\t(initialize_p_decl, priority_decl): Delete.\n+\t(ssdf_decls, priority_info_map): Delete.\n+\t(start_static_storage_duration_function): Rename to ...\n+\t(start_partial_init_fini_fn): ... here. Create a void arg fn.\n+\tAdd it to the slot in the appropriate static_init_fini_fns\n+\thash table.\n+\t(finish_static_storage_duration_function): Rename to ...\n+\t(finish_partial_init_fini_fn): ... here.\n+\t(get_priority_info): Delete.\n+\t(one_static_initialization_or_destruction): Assert not\n+\ttrivial dtor.\n+\t(do_static_initialization_or_destruction): Rename to ...\n+\t(emit_partial_init_fini_fn) ... here.  Start & finish the fn.\n+\tSimply init/fini each var.\n+\t(partition_vars_for_init_fini): Partition vars according to\n+\tpriority and add to init and/or fini list.\n+\t(generate_ctor_or_dtor_function): Start and finish the function.\n+\tDo santitizer calls here.\n+\t(generate_ctor_and_dtor_functions_for_priority): Delete.\n+\t(c_parse_final_cleanups): Reimplement global init/fini\n+\tprocessing.\n+\n 2022-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.cc (cp_parser_omp_clause_linear): Parse OpenMP 5.2"}, {"sha": "27d445a9175205d283950228ff4c96a93fcf5de1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1,3 +1,8 @@\n+2022-06-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.cc (gfc_match_omp_clauses): Check also parent namespace\n+\tfor 'requires reverse_offload'.\n+\n 2022-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-openmp.cc (gfc_trans_omp_clauses): Set"}, {"sha": "0d77679980211c7caa65ec2b8cfebf7b5aeffdaf", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1,3 +1,8 @@\n+2022-06-08  Yang Yujie  <yangyujie@loongson.cn>\n+\n+\t* Make-lang.in: only link objects from $(EXTRA_GCC_OBJS)\n+\tthat's not in $(EXTRA_OBJS) into libgccjit.\n+\n 2022-05-23  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit-recording.h: Add \"final\" and \"override\" to all vfunc"}, {"sha": "443e1c8dd2bea5a53e2cba9f94fe5cc068beed0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "patch": "@@ -1,3 +1,38 @@\n+2022-06-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105852\n+\tPR c++/105761\n+\t* g++.dg/modules/tpl-friend-2_a.C: Adjust expected dump.\n+\t* g++.dg/template/friend74.C: New test.\n+\n+2022-06-08  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR middle-end/105874\n+\t* g++.dg/opt/pr105874.C: New test case.\n+\n+2022-06-08  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/init/static-cdtor1.C: New.\n+\n+2022-06-08  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/i386/xop-pcmov3.c: Add -mno-avx512vl to dg-options.\n+\n+2022-06-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/target-device-ancestor-5.f90: New test.\n+\n+2022-06-08  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr105513-1.c: New test.\n+\t* gcc.target/i386/extract-insert-combining.c: Add new\n+\tscan-assembler-not for spill.\n+\n+2022-06-08  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/105854\n+\t* gcc.target/i386/pr105854.c: Add target int128 and dfp.\n+\n 2022-06-07  liuhongt  <hongtao.liu@intel.com>\n \n \t* gcc.target/i386/pr105854.c: New test."}]}