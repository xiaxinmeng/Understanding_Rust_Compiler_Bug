{"sha": "a901343aa314eb08b362fc6878456d12f96e49b7", "node_id": "C_kwDOANBUbNoAKGE5MDEzNDNhYTMxNGViMDhiMzYyZmM2ODc4NDU2ZDEyZjk2ZTQ5Yjc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-11T15:22:40Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-12T06:48:59Z"}, "message": "Add an frange(type) constructor analogous to the irange version.\n\ngcc/ChangeLog:\n\n\t* value-range.h (frange::frange): Add constructor taking type.", "tree": {"sha": "7c14e20744ca14b18dda32a83c61efd65d608378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c14e20744ca14b18dda32a83c61efd65d608378"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a901343aa314eb08b362fc6878456d12f96e49b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a901343aa314eb08b362fc6878456d12f96e49b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a901343aa314eb08b362fc6878456d12f96e49b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a901343aa314eb08b362fc6878456d12f96e49b7/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb00d0974ebe66ca9dc6621e68498396cd542b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb00d0974ebe66ca9dc6621e68498396cd542b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb00d0974ebe66ca9dc6621e68498396cd542b28"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "9d630e40f78a8ae92fd3e384cd18cad77105522e", "filename": "gcc/value-range.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a901343aa314eb08b362fc6878456d12f96e49b7/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a901343aa314eb08b362fc6878456d12f96e49b7/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=a901343aa314eb08b362fc6878456d12f96e49b7", "patch": "@@ -281,6 +281,7 @@ class frange : public vrange\n   frange ();\n   frange (const frange &);\n   frange (tree, tree, value_range_kind = VR_RANGE);\n+  frange (tree type);\n   frange (tree type, const REAL_VALUE_TYPE &min, const REAL_VALUE_TYPE &max,\n \t  value_range_kind = VR_RANGE);\n   static bool supports_p (const_tree type)\n@@ -1059,6 +1060,13 @@ frange::frange (const frange &src)\n   *this = src;\n }\n \n+inline\n+frange::frange (tree type)\n+{\n+  m_discriminator = VR_FRANGE;\n+  set_varying (type);\n+}\n+\n // frange constructor from REAL_VALUE_TYPE endpoints.\n \n inline"}]}