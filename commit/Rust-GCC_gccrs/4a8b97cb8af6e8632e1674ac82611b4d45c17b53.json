{"sha": "4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE4Yjk3Y2I4YWY2ZTg2MzJlMTY3NGFjODI2MTFiNGQ0NWMxN2I1Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-12T07:07:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-12T07:07:33Z"}, "message": "re PR tree-optimization/77929 (ICE: verify_gimple failed (error: non-trivial conversion at assignment))\n\n\tPR tree-optimization/77929\n\t* tree-ssa-reassoc.c (optimize_range_tests_var_bound): Handle\n\t(*ops)[ranges[i].idx]->op != ranges[i].exp case.\n\n\t* gcc.c-torture/compile/pr77929.c: New test.\n\nFrom-SVN: r241019", "tree": {"sha": "0f4472b112485841833a6fc41665c3fd3b1003ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f4472b112485841833a6fc41665c3fd3b1003ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83d3ca284984623383cb03d7d0b05d0865b3442c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d3ca284984623383cb03d7d0b05d0865b3442c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d3ca284984623383cb03d7d0b05d0865b3442c"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "f64bc62ed83b7c394b12007150a3252212da56b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "patch": "@@ -1,3 +1,9 @@\n+2016-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77929\n+\t* tree-ssa-reassoc.c (optimize_range_tests_var_bound): Handle\n+\t(*ops)[ranges[i].idx]->op != ranges[i].exp case.\n+\n 2016-10-12  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n \tPR target/77934"}, {"sha": "5605a3e972dd17f94d2e5c7659ddaacadd02c6dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "patch": "@@ -1,5 +1,8 @@\n 2016-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/77929\n+\t* gcc.c-torture/compile/pr77929.c: New test.\n+\n \t* c-c++-common/Wimplicit-fallthrough-25.c: New test.\n \t* c-c++-common/Wimplicit-fallthrough-26.c: New test.\n \t* c-c++-common/Wimplicit-fallthrough-27.c: New test."}, {"sha": "bbcb04bd4f426ecf7f4f94951bd95a6a68bae95d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr77929.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77929.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77929.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77929.c?ref=4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/77929 */\n+\n+void bar (void);\n+\n+void\n+foo (int x, unsigned short int y)\n+{\n+  int a = 0;\n+  int b = (y != 0) ? (x < y) : (a < 0);\n+\n+  if (x >= 0 & b)\n+    bar ();\n+}"}, {"sha": "7b844ddd83d54fbb49777abd125c5d22698d3806", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8b97cb8af6e8632e1674ac82611b4d45c17b53/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=4a8b97cb8af6e8632e1674ac82611b4d45c17b53", "patch": "@@ -2994,12 +2994,26 @@ optimize_range_tests_var_bound (enum tree_code opcode, int first, int length,\n \t}\n       else\n \t{\n-\t  g = gimple_build_assign (make_ssa_name (TREE_TYPE (ranges[i].exp)),\n-\t\t\t\t   ccode, rhs1, rhs2);\n+\t  operand_entry *oe = (*ops)[ranges[i].idx];\n+\t  tree ctype = oe->op ? TREE_TYPE (oe->op) : boolean_type_node;\n+\t  if (!INTEGRAL_TYPE_P (ctype)\n+\t      || (TREE_CODE (ctype) != BOOLEAN_TYPE\n+\t\t  && TYPE_PRECISION (ctype) != 1))\n+\t    ctype = boolean_type_node;\n+\t  g = gimple_build_assign (make_ssa_name (ctype), ccode, rhs1, rhs2);\n \t  gimple_set_uid (g, uid);\n \t  gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n+\t  if (oe->op && ctype != TREE_TYPE (oe->op))\n+\t    {\n+\t      g = gimple_build_assign (make_ssa_name (TREE_TYPE (oe->op)),\n+\t\t\t\t       NOP_EXPR, gimple_assign_lhs (g));\n+\t      gimple_set_uid (g, uid);\n+\t      gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n+\t    }\n \t  ranges[i].exp = gimple_assign_lhs (g);\n-\t  (*ops)[ranges[i].idx]->op = ranges[i].exp;\n+\t  oe->op = ranges[i].exp;\n+\t  ranges[i].low = build_zero_cst (TREE_TYPE (ranges[i].exp));\n+\t  ranges[i].high = ranges[i].low;\n \t}\n       ranges[i].strict_overflow_p = false;\n       operand_entry *oe = (*ops)[ranges[*idx].idx];"}]}