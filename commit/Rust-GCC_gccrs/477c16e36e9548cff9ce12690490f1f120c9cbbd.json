{"sha": "477c16e36e9548cff9ce12690490f1f120c9cbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc3YzE2ZTM2ZTk1NDhjZmY5Y2UxMjY5MDQ5MGYxZjEyMGM5Y2JiZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T11:07:51Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T11:07:51Z"}, "message": "({div,mod}[sd]i3): Only for VMS.\n\n(fp operations): Add modifiers for multiple floating-point formats.\n(call patterns): Handle new calling sequence for VMS.\n(tablejump): Make new pattern for VMS.\n(nonlocal_goto_receiver, arg_home): New patterns.\n\nFrom-SVN: r13185", "tree": {"sha": "796fe5a055c0089195331398f481ceaa5fc3dccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/796fe5a055c0089195331398f481ceaa5fc3dccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/477c16e36e9548cff9ce12690490f1f120c9cbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477c16e36e9548cff9ce12690490f1f120c9cbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477c16e36e9548cff9ce12690490f1f120c9cbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477c16e36e9548cff9ce12690490f1f120c9cbbd/comments", "author": null, "committer": null, "parents": [{"sha": "e5958492a23a325cc3587a214e5fb6d6ae27f6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5958492a23a325cc3587a214e5fb6d6ae27f6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5958492a23a325cc3587a214e5fb6d6ae27f6ca"}], "stats": {"total": 314, "additions": 249, "deletions": 65}, "files": [{"sha": "178634bbf4f4d1fc0b827f2426ed01d6c5104825", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 249, "deletions": 65, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477c16e36e9548cff9ce12690490f1f120c9cbbd/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477c16e36e9548cff9ce12690490f1f120c9cbbd/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=477c16e36e9548cff9ce12690490f1f120c9cbbd", "patch": "@@ -633,7 +633,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"udivsi3\"\n@@ -646,7 +646,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"modsi3\"\n@@ -659,7 +659,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"umodsi3\"\n@@ -672,7 +672,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"divdi3\"\n@@ -685,7 +685,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"udivdi3\"\n@@ -698,7 +698,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"moddi3\"\n@@ -711,7 +711,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_expand \"umoddi3\"\n@@ -724,7 +724,7 @@\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"\")\n \n (define_insn \"\"\n@@ -733,7 +733,7 @@\n \t\t\t[(reg:SI 24) (reg:SI 25)]))\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"%E1 $24,$25,$27\"\n   [(set_attr \"type\" \"isubr\")])\n \n@@ -743,7 +743,7 @@\n \t\t\t[(reg:DI 24) (reg:DI 25)]))\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n-  \"\"\n+  \"!TARGET_OPEN_VMS\"\n   \"%E1 $24,$25,$27\"\n   [(set_attr \"type\" \"isubr\")])\n \f\n@@ -1394,7 +1394,7 @@\n \t(plus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"adds%)%& %R1,%R2,%0\"\n+  \"add%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1403,7 +1403,7 @@\n \t(plus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"adds%)%& %R1,%R2,%0\"\n+  \"add%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1412,7 +1412,7 @@\n \t(plus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"addt%)%& %R1,%R2,%0\"\n+  \"add%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1421,7 +1421,7 @@\n \t(plus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"addt%)%& %R1,%R2,%0\"\n+  \"add%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1431,7 +1431,7 @@\n \t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"addt%)%& %R1,%R2,%0\"\n+  \"add%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1442,46 +1442,46 @@\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"addt%)%& %R1,%R2,%0\"\n+  \"add%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"cvttqc %R1,%0\"\n+  \"cvt%-qc %R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (float_extend:DF\n \t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n-  \"cvttqc %R1,%0\"\n+  \"cvt%-qc %R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"floatdisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP\"\n-  \"cvtqs%+%& %1,%0\"\n+  \"cvtq%,%+%& %1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"cvtqt%+%& %1,%0\"\n+  \"cvtq%-%+%& %1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP\"\n-  \"cvtqt%+%& %1,%0\"\n+  \"cvtq%-%+%& %1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1499,7 +1499,7 @@\n \n   DONE;\n }\")\n-\n+;; FIXME\n (define_insn \"extendsfdf2_tp\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(float_extend:DF (match_operand:SF 1 \"register_operand\" \"f\")))]\n@@ -1513,24 +1513,24 @@\n \t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,m\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n   \"@\n-   addt%)%& $f31,%1,%0\n-   lds %0,%1\"\n+   add%-%)%& $f31,%1,%0\n+   ld%, %0,%1\"\n   [(set_attr \"type\" \"fadd,ld\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n \t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"cvtts%)%& %R1,%0\"\n+  \"cvt%-%,%)%& %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"cvtts%)%& %R1,%0\"\n+  \"cvt%-%,%)%& %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1539,7 +1539,7 @@\n \t(div:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t(match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"divs%)%& %R1,%R2,%0\"\n+  \"div%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivs\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1548,7 +1548,7 @@\n \t(div:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t(match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"divs%)%& %R1,%R2,%0\"\n+  \"div%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivs\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1557,7 +1557,7 @@\n \t(div:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"divt%)%& %R1,%R2,%0\"\n+  \"div%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivt\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1566,7 +1566,7 @@\n \t(div:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"divt%)%& %R1,%R2,%0\"\n+  \"div%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivt\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1575,7 +1575,7 @@\n \t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n \t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"divt%)%& %R1,%R2,%0\"\n+  \"div%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivt\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1585,7 +1585,7 @@\n \t\t(float_extend:DF\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"divt%)%& %R1,%R2,%0\"\n+  \"div%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivt\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1594,7 +1594,7 @@\n \t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n \t\t(float_extend:DF (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"divt%)%& %R1,%R2,%0\"\n+  \"div%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdivt\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1603,7 +1603,7 @@\n \t(mult:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"muls%)%& %R1,%R2,%0\"\n+  \"mul%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1612,7 +1612,7 @@\n \t(mult:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"muls%)%& %R1,%R2,%0\"\n+  \"mul%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1621,7 +1621,7 @@\n \t(mult:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"mult%)%& %R1,%R2,%0\"\n+  \"mul%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1630,7 +1630,7 @@\n \t(mult:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"mult%)%& %R1,%R2,%0\"\n+  \"mul%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1640,7 +1640,7 @@\n \t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"mult%)%& %R1,%R2,%0\"\n+  \"mul%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1651,7 +1651,7 @@\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"mult%)%& %R1,%R2,%0\"\n+  \"mul%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1660,7 +1660,7 @@\n \t(minus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"subs%)%& %R1,%R2,%0\"\n+  \"sub%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1669,7 +1669,7 @@\n \t(minus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"subs%)%& %R1,%R2,%0\"\n+  \"sub%,%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1678,7 +1678,7 @@\n \t(minus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"subt%)%& %R1,%R2,%0\"\n+  \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1687,7 +1687,7 @@\n \t(minus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n-  \"subt%)%& %R1,%R2,%0\"\n+  \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1697,7 +1697,7 @@\n \t\t   (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"subt%)%& %R1,%R2,%0\"\n+  \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1707,7 +1707,7 @@\n \t\t  (float_extend:DF\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"subt%)%& %R1,%R2,%0\"\n+  \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -1718,7 +1718,7 @@\n \t\t  (float_extend:DF\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"subt%)%& %R1,%R2,%0\"\n+  \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \f\n@@ -2136,7 +2136,7 @@\n \t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n-  \"cmpt%C1%' %R2,%R3,%0\"\n+  \"cmp%-%C1%' %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -2146,7 +2146,7 @@\n \t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"cmpt%C1%' %R2,%R3,%0\"\n+  \"cmp%-%C1%' %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -2157,7 +2157,7 @@\n \t\t\t     (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"cmpt%C1%' %R2,%R3,%0\"\n+  \"cmp%-%C1%' %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -2168,7 +2168,7 @@\n \t\t\t    (float_extend:DF\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"cmpt%C1%' %R2,%R3,%0\"\n+  \"cmp%-%C1%' %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -2180,7 +2180,7 @@\n \t\t\t    (float_extend:DF\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n-  \"cmpt%C1%' %R2,%R3,%0\"\n+  \"cmp%-%C1%' %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n@@ -2981,11 +2981,15 @@\n \n (define_expand \"call\"\n   [(use (match_operand:DI 0 \"\" \"\"))\n-   (use (match_operand 1 \"\" \"\"))]\n+   (use (match_operand 1 \"\" \"\"))\n+   (use (match_operand 2 \"\" \"\"))\n+   (use (match_operand 3 \"\" \"\"))]\n   \"\"\n   \"\n { if (TARGET_WINDOWS_NT)\n     emit_call_insn (gen_call_nt (operands[0], operands[1]));\n+  else if (TARGET_OPEN_VMS)\n+    emit_call_insn (gen_call_vms (operands[0], operands[2]));\n   else\n     emit_call_insn (gen_call_osf (operands[0], operands[1]));\n \n@@ -3032,14 +3036,71 @@\n     }\n }\")\n \n+;;\n+;; call openvms/alpha\n+;; op 0: symbol ref for called function\n+;; op 1: next_arg_reg (argument information value for R25)\n+;;\n+(define_expand \"call_vms\"\n+  [(parallel [(call (mem:DI (match_operand 0 \"\" \"\"))\n+\t\t    (match_operand 1 \"\" \"\"))\n+\t      (use (match_dup 2))\n+\t      (use (reg:DI 25))\n+\t      (use (reg:DI 26))\n+\t      (clobber (reg:DI 27))])]\n+  \"\"\n+  \"\n+{ if (GET_CODE (operands[0]) != MEM)\n+    abort ();\n+\n+  operands[0] = XEXP (operands[0], 0);\n+\n+  /* Always load AI with argument information, then handle symbolic and\n+     indirect call differently.  Load RA and set operands[2] to PV in\n+     both cases.  */\n+\n+  emit_move_insn (gen_rtx (REG, DImode, 25), operands[1]);\n+  if (GET_CODE (operands[0]) == SYMBOL_REF)\n+    {\n+      extern char *savealloc ();\n+      char *symbol = XSTR (operands[0], 0);\n+      char *linksym = savealloc (strlen (symbol) + 5);\n+      rtx linkage;\n+\n+      alpha_need_linkage (symbol, 0);\n+\n+      strcpy (linksym, symbol);\n+      strcat (linksym, \\\"..lk\\\");\n+      linkage = gen_rtx (SYMBOL_REF, Pmode, linksym);\n+\n+      emit_move_insn (gen_rtx (REG, Pmode, 26), gen_rtx (MEM, Pmode, linkage));\n+\n+      operands[2]\n+\t= validize_mem (gen_rtx (MEM, Pmode, plus_constant (linkage, 8)));\n+    }\n+  else\n+    {\n+      emit_move_insn (gen_rtx (REG, Pmode, 26),\n+\t\t      gen_rtx (MEM, Pmode, plus_constant (operands[0], 8)));\n+\n+      operands[2] = operands[0];\n+    }\n+\n+}\")\n+\n (define_expand \"call_value\"\n   [(use (match_operand 0 \"\" \"\"))\n    (use (match_operand:DI 1 \"\" \"\"))\n-   (use (match_operand 2 \"\" \"\"))]\n+   (use (match_operand 2 \"\" \"\"))\n+   (use (match_operand 3 \"\" \"\"))\n+   (use (match_operand 4 \"\" \"\"))]\n   \"\"\n   \"\n { if (TARGET_WINDOWS_NT)\n     emit_call_insn (gen_call_value_nt (operands[0], operands[1], operands[2]));\n+  else if (TARGET_OPEN_VMS)\n+    emit_call_insn (gen_call_value_vms (operands[0], operands[1],\n+\t\t\t\t\toperands[3]));\n   else\n     emit_call_insn (gen_call_value_osf (operands[0], operands[1],\n \t\t\t\t\toperands[2]));\n@@ -3088,12 +3149,58 @@\n     }\n }\")\n \n+(define_expand \"call_value_vms\"\n+  [(parallel [(set (match_operand 0 \"\" \"\")\n+\t\t   (call (mem:DI (match_operand:DI 1 \"\" \"\"))\n+\t\t\t (match_operand 2 \"\" \"\")))\n+\t      (use (match_dup 3))\n+\t      (use (reg:DI 25))\n+\t      (use (reg:DI 26))\n+\t      (clobber (reg:DI 27))])]\n+  \"\"\n+  \"\n+{ if (GET_CODE (operands[1]) != MEM)\n+    abort ();\n+\n+  operands[1] = XEXP (operands[1], 0);\n+\n+  /* Always load AI with argument information, then handle symbolic and\n+     indirect call differently.  Load RA and set operands[3] to PV in\n+     both cases.  */\n+\n+  emit_move_insn (gen_rtx (REG, DImode, 25), operands[2]);\n+  if (GET_CODE (operands[1]) == SYMBOL_REF)\n+    {\n+      extern char *savealloc ();\n+      char *symbol = XSTR (operands[1], 0);\n+      char *linksym = savealloc (strlen (symbol) + 5);\n+      rtx linkage;\n+\n+      alpha_need_linkage (symbol, 0);\n+      strcpy (linksym, symbol);\n+      strcat (linksym, \\\"..lk\\\");\n+      linkage = gen_rtx (SYMBOL_REF, Pmode, linksym);\n+\n+      emit_move_insn (gen_rtx (REG, Pmode, 26), gen_rtx (MEM, Pmode, linkage));\n+\n+      operands[3]\n+\t= validize_mem (gen_rtx (MEM, Pmode, plus_constant (linkage, 8)));\n+    }\n+  else\n+    {\n+      emit_move_insn (gen_rtx (REG, Pmode, 26),\n+\t\t      gen_rtx (MEM, Pmode, plus_constant (operands[1], 8)));\n+\n+      operands[3] = operands[1];\n+    }\n+}\")\n+\n (define_insn \"\"\n   [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"r,R,i\"))\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n-  \"! TARGET_WINDOWS_NT && alpha_tp == ALPHA_TP_INSN\"\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && alpha_tp == ALPHA_TP_INSN\"\n   \"@\n    jsr $26,($27),0\\;trapb\\;ldgp $29,4($26)\n    bsr $26,%0..ng\\;trapb\n@@ -3105,7 +3212,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n-  \"! TARGET_WINDOWS_NT\"\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\"\n   \"@\n    jsr $26,($27),0\\;ldgp $29,0($26)\n    bsr $26,%0..ng\n@@ -3122,13 +3229,26 @@\n    bsr $26,%0\"\n   [(set_attr \"type\" \"jsr\")])\n       \n+(define_insn \"\"\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"r,i\"))\n+\t (match_operand 1 \"\" \"\"))\n+   (use (match_operand:DI 2 \"general_operand\" \"r,m\"))\n+   (use (reg:DI 25))\n+   (use (reg:DI 26))\n+   (clobber (reg:DI 27))]\n+  \"TARGET_OPEN_VMS\"\n+  \"@\n+   bis %2,%2,$27\\;jsr $26,0\\;ldq $27,0($29)\n+   ldq $27,%2\\;jsr $26,%0\\;ldq $27,0($29)\"\n+  [(set_attr \"type\" \"jsr\")])\n+\n (define_insn \"\"\n   [(set (match_operand 0 \"register_operand\" \"=rf,rf,rf\")\n \t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n-  \"! TARGET_WINDOWS_NT && alpha_tp == ALPHA_TP_INSN\"\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && alpha_tp == ALPHA_TP_INSN\"\n   \"@\n    jsr $26,($27),0\\;trapb\\;ldgp $29,4($26)\n    bsr $26,%1..ng\\;trapb\n@@ -3141,7 +3261,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n-  \"! TARGET_WINDOWS_NT\"\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\"\n   \"@\n    jsr $26,($27),0\\;ldgp $29,0($26)\n    bsr $26,%1..ng\n@@ -3159,6 +3279,20 @@\n    bsr $26,%1\"\n   [(set_attr \"type\" \"jsr\")])\n \n+(define_insn \"\"\n+  [(set (match_operand 0 \"register_operand\" \"\")\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,i\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (use (match_operand:DI 3 \"general_operand\" \"r,m\"))\n+   (use (reg:DI 25))\n+   (use (reg:DI 26))\n+   (clobber (reg:DI 27))]\n+  \"TARGET_OPEN_VMS\"\n+  \"@\n+   bis %3,%3,$27\\;jsr $26,0\\;ldq $27,0($29)\n+   ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\"\n+  [(set_attr \"type\" \"jsr\")])\n+\n ;; Call subroutine returning any type.\n \n (define_expand \"untyped_call\"\n@@ -3229,6 +3363,8 @@\n {\n   if (TARGET_WINDOWS_NT)\n     emit_jump_insn (gen_tablejump_nt (operands[0], operands[1]));\n+  else if (TARGET_OPEN_VMS)\n+    emit_jump_insn (gen_tablejump_vms (operands[0], operands[1]));\n   else\n     emit_jump_insn (gen_tablejump_osf (operands[0], operands[1]));\n \n@@ -3256,12 +3392,27 @@\n   \"\n { operands[3] = gen_reg_rtx (DImode); }\")\n \n+;;\n+;; tablejump, openVMS way\n+;; op 0: offset\n+;; op 1: label preceding jump-table\n+;;\n+(define_expand \"tablejump_vms\"\n+  [(set (match_dup 2)\n+      (match_operand:DI 0 \"register_operand\" \"\"))\n+        (set (pc)\n+\t(plus:DI (match_dup 2)\n+\t\t(label_ref:DI (match_operand 1 \"\" \"\"))))]\n+  \"\"\n+  \"\n+{ operands[2] = gen_reg_rtx (DImode); }\")\n+\n (define_insn \"\"\n   [(set (pc)\n \t(plus:DI (match_operand:DI 0 \"register_operand\" \"r\")\n \t\t (label_ref:DI (match_operand 1 \"\" \"\"))))\n    (clobber (match_scratch:DI 2 \"=r\"))]\n-  \"! TARGET_WINDOWS_NT && next_active_insn (insn) != 0\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && next_active_insn (insn) != 0\n    && GET_CODE (PATTERN (next_active_insn (insn))) == ADDR_DIFF_VEC\n    && PREV_INSN (next_active_insn (insn)) == operands[1]\"\n   \"*\n@@ -3343,6 +3494,19 @@\n }\"\n   [(set_attr \"type\" \"ibr\")])\n \n+;;\n+;; op 0 is table offset\n+;; op 1 is table label\n+;;\n+\n+(define_insn \"\"\n+  [(set (pc)\n+\t(plus:DI (match_operand 0 \"register_operand\" \"r\")\n+\t\t(label_ref (match_operand 1 \"\" \"\"))))]\n+  \"TARGET_OPEN_VMS\"\n+  \"jmp $31,(%0),0\"\n+  [(set_attr \"type\" \"ibr\")])\n+\n ;; Cache flush.  Used by INITIALIZE_TRAMPOLINE.  0x86 is PAL_imb, but we don't\n ;; want to have to include pal.h in our .s file.\n (define_insn \"\"\n@@ -3366,8 +3530,8 @@\n    stl %r1,%0\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\n-   lds %0,%1\n-   sts %R1,%0\"\n+   ld%, %0,%1\n+   st%, %R1,%0\"\n   [(set_attr \"type\" \"ilog,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_insn \"\"\n@@ -3381,8 +3545,8 @@\n    stq %r1,%0\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\n-   ldt %0,%1\n-   stt %R1,%0\"\n+   ld%- %0,%1\n+   st%- %R1,%0\"\n   [(set_attr \"type\" \"ilog,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_expand \"movsf\"\n@@ -3410,8 +3574,9 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,f,f,f,m\")\n \t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,m,rJ,f,J,m,fG\"))]\n-  \"! TARGET_WINDOWS_NT && (register_operand (operands[0], SImode)\n-\t\t\t   || reg_or_0_operand (operands[1], SImode))\"\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\n+   && (register_operand (operands[0], SImode)\n+       || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n    bis %1,%1,%0\n    bis $31,$31,%0\n@@ -3429,7 +3594,8 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,m\")\n \t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,m,fG\"))]\n-  \"TARGET_WINDOWS_NT && (register_operand (operands[0], SImode)\n+  \"(TARGET_WINDOWS_NT || TARGET_OPEN_VMS)\n+\t&& (register_operand (operands[0], SImode)\n \t\t\t || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n    bis %1,%1,%0\n@@ -4183,3 +4349,21 @@\n       DONE;\n     }\n }\")\n+\n+(define_expand \"nonlocal_goto_receiver\"\n+  [(unspec_volatile [(const_int 0)] 1)\n+   (set (reg:DI 27) (mem:DI (reg:DI 29)))\n+   (unspec_volatile [(const_int 0)] 1)\n+   (use (reg:DI 27))]\n+  \"TARGET_OPEN_VMS\"\n+  \"\")\n+\n+(define_insn \"arg_home\"\n+  [(unspec [(const_int 0)] 0)\n+   (use (reg:DI 1))\n+   (use (reg:DI 25))\n+   (clobber (reg:DI 24))\n+   (clobber (reg:DI 25))\n+   (clobber (reg:DI 0))]\n+  \"TARGET_OPEN_VMS\"\n+  \"lda $0,ots$home_args\\;ldq $0,8($0)\\;jsr $0,ots$home_args\")"}]}