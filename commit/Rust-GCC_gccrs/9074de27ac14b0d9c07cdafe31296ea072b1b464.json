{"sha": "9074de27ac14b0d9c07cdafe31296ea072b1b464", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3NGRlMjdhYzE0YjBkOWMwN2NkYWZlMzEyOTZlYTA3MmIxYjQ2NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-18T19:13:01Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-18T19:13:01Z"}, "message": "(store_field): Typo in last change.\n\nFrom-SVN: r2510", "tree": {"sha": "5bf054d772b17a643a82034517d58c4a723bc509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf054d772b17a643a82034517d58c4a723bc509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9074de27ac14b0d9c07cdafe31296ea072b1b464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9074de27ac14b0d9c07cdafe31296ea072b1b464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9074de27ac14b0d9c07cdafe31296ea072b1b464", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9074de27ac14b0d9c07cdafe31296ea072b1b464/comments", "author": null, "committer": null, "parents": [{"sha": "c575213d96da59a3b05244445ec948ebf0f36394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c575213d96da59a3b05244445ec948ebf0f36394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c575213d96da59a3b05244445ec948ebf0f36394"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6808c9b90ce1f30b4c7662dab9808e248dd97498", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9074de27ac14b0d9c07cdafe31296ea072b1b464/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9074de27ac14b0d9c07cdafe31296ea072b1b464/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9074de27ac14b0d9c07cdafe31296ea072b1b464", "patch": "@@ -2703,7 +2703,7 @@ store_field (target, bitsize, bitpos, mode, exp, value_mode,\n \t  if (width_mask != 0\n \t      && ! (GET_CODE (target) == MEM && MEM_VOLATILE_P (target)))\n \t    {\n-\t      rtx count;\n+\t      tree count;\n \t      enum machine_mode tmode;\n \t      if (unsignedp)\n \t\treturn expand_and (temp, GEN_INT (width_mask), NULL_RTX);"}]}