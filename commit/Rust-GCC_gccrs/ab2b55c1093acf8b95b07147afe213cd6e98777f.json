{"sha": "ab2b55c1093acf8b95b07147afe213cd6e98777f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIyYjU1YzEwOTNhY2Y4Yjk1YjA3MTQ3YWZlMjEzY2Q2ZTk4Nzc3Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-07-26T14:07:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-07-26T14:07:05Z"}, "message": "re PR tree-optimization/72517 (436.cactusADM: More than 40% regression in O3 and Ofast on AMD bdver4 m/c.)\n\n2016-07-26  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/72517\n\t* expmed.c (extract_bit_field_1): Constrain the vector mode\n\twith element size matching the extraction mode size when\n\tchoosing a better vector mode to do the extraction from.\n\nFrom-SVN: r238756", "tree": {"sha": "4d5d06e95d4bb2abc5611fa96df7c04afb7662f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d5d06e95d4bb2abc5611fa96df7c04afb7662f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab2b55c1093acf8b95b07147afe213cd6e98777f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2b55c1093acf8b95b07147afe213cd6e98777f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab2b55c1093acf8b95b07147afe213cd6e98777f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2b55c1093acf8b95b07147afe213cd6e98777f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b7937cf8a06c2d05dc1a5f357ef818f0c736cfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7937cf8a06c2d05dc1a5f357ef818f0c736cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7937cf8a06c2d05dc1a5f357ef818f0c736cfa"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "dff649d567981c6ea25a03029580e00e16dcdbff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab2b55c1093acf8b95b07147afe213cd6e98777f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab2b55c1093acf8b95b07147afe213cd6e98777f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab2b55c1093acf8b95b07147afe213cd6e98777f", "patch": "@@ -1,3 +1,10 @@\n+2016-07-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/72517\n+\t* expmed.c (extract_bit_field_1): Constrain the vector mode\n+\twith element size matching the extraction mode size when\n+\tchoosing a better vector mode to do the extraction from.\n+\n 2016-07-26  Richard Biener  <rguenther@suse.de>\n \t    Prathamesh Kulkarni <prathamesh.kulkarni@linaro.org>\n "}, {"sha": "7af0c612200c69aadf53088c1c8309c1cb0f1623", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab2b55c1093acf8b95b07147afe213cd6e98777f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab2b55c1093acf8b95b07147afe213cd6e98777f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=ab2b55c1093acf8b95b07147afe213cd6e98777f", "patch": "@@ -1581,6 +1581,7 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \n       for (; new_mode != VOIDmode ; new_mode = GET_MODE_WIDER_MODE (new_mode))\n \tif (GET_MODE_SIZE (new_mode) == GET_MODE_SIZE (GET_MODE (op0))\n+\t    && GET_MODE_UNIT_SIZE (new_mode) == GET_MODE_SIZE (tmode)\n \t    && targetm.vector_mode_supported_p (new_mode))\n \t  break;\n       if (new_mode != VOIDmode)"}]}