{"sha": "500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwYjljYTEwZDUwZDlkODEwY2M3ZDcxMjc2MWZhMGMyOTVjMmZmOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-10-20T22:59:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-10-20T22:59:13Z"}, "message": "re PR debug/37020 (FAIL: gcc.dg/debug/dwarf2/dwarf-die3.c scan-assembler-not DW_AT_inline)\n\n\tPR debug/37020\n\t* c-decl.c (merge_decls): Don't call outlining_inline_function hook.\n\nFrom-SVN: r141253", "tree": {"sha": "69ae2273b21bfda82dcfcc65ee1f37e620389784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69ae2273b21bfda82dcfcc65ee1f37e620389784"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500b9ca10d50d9d810cc7d712761fa0c295c2ff9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "658344f2e5175f55c61e47a005a06c26e5432315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658344f2e5175f55c61e47a005a06c26e5432315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658344f2e5175f55c61e47a005a06c26e5432315"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "de16de058fe4f1ab3387ed441ba12ea1185675fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500b9ca10d50d9d810cc7d712761fa0c295c2ff9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500b9ca10d50d9d810cc7d712761fa0c295c2ff9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "patch": "@@ -6,6 +6,9 @@\n \t* gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from\n \tINTEGER_CSTs.\n \n+\tPR debug/37020\n+\t* c-decl.c (merge_decls): Don't call outlining_inline_function hook.\n+\n 2008-10-20  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant"}, {"sha": "eba616199b64d9056db5b08230858f83ed644d8a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500b9ca10d50d9d810cc7d712761fa0c295c2ff9/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500b9ca10d50d9d810cc7d712761fa0c295c2ff9/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=500b9ca10d50d9d810cc7d712761fa0c295c2ff9", "patch": "@@ -1775,17 +1775,8 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n \t throw it away, in case it was inlined into a function that\n \t hasn't been written out yet.  */\n       if (new_is_definition && DECL_INITIAL (olddecl))\n-\t{\n-\t  if (TREE_USED (olddecl)\n-\t      /* We never inline re-defined extern inline functions.\n-\t\t FIXME: This would be better handled by keeping both functions\n-\t\t as separate declarations.  */\n-\t      && cgraph_function_possibly_inlined_p (olddecl))\n-\t    (*debug_hooks->outlining_inline_function) (olddecl);\n-\n-\t  /* The new defn must not be inline.  */\n-\t  DECL_UNINLINABLE (newdecl) = 1;\n-\t}\n+\t/* The new defn must not be inline.  */\n+\tDECL_UNINLINABLE (newdecl) = 1;\n       else\n \t{\n \t  /* If either decl says `inline', this fn is inline, unless"}]}