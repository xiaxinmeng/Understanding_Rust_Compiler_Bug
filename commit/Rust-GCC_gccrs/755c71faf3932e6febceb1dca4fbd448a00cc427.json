{"sha": "755c71faf3932e6febceb1dca4fbd448a00cc427", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1YzcxZmFmMzkzMmU2ZmViY2ViMWRjYTRmYmQ0NDhhMDBjYzQyNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-06-29T17:45:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-06-29T17:45:34Z"}, "message": "re PR ada/63310 (Ada bootstrap error with -fcompare-debug)\n\n\tPR ada/63310\n\t* gcc-interface/utils.c (gnat_write_global_declarations): Always\n\tbuild the dummy global variable if code was generated.\n\nFrom-SVN: r225139", "tree": {"sha": "35b3840e2994d048f7e161ff88c943ccadca7a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35b3840e2994d048f7e161ff88c943ccadca7a03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/755c71faf3932e6febceb1dca4fbd448a00cc427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755c71faf3932e6febceb1dca4fbd448a00cc427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755c71faf3932e6febceb1dca4fbd448a00cc427", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755c71faf3932e6febceb1dca4fbd448a00cc427/comments", "author": null, "committer": null, "parents": [{"sha": "94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f11af109ae0862ffd6eb16309ddea8b5c8e1a9"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "db7942043306013bc4d3bfc060b4846fbbb1c37e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755c71faf3932e6febceb1dca4fbd448a00cc427/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755c71faf3932e6febceb1dca4fbd448a00cc427/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=755c71faf3932e6febceb1dca4fbd448a00cc427", "patch": "@@ -1,3 +1,9 @@\n+2015-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/63310\n+\t* gcc-interface/utils.c (gnat_write_global_declarations): Always\n+\tbuild the dummy global variable if code was generated.\n+\n 2015-06-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR fortran/66605"}, {"sha": "a02dc67a30546f0771dd93a3890ea6db85ce62c4", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755c71faf3932e6febceb1dca4fbd448a00cc427/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755c71faf3932e6febceb1dca4fbd448a00cc427/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=755c71faf3932e6febceb1dca4fbd448a00cc427", "patch": "@@ -5202,8 +5202,9 @@ gnat_write_global_declarations (void)\n   tree iter;\n \n   /* If we have declared types as used at the global level, insert them in\n-     the global hash table.  We use a dummy variable for this purpose.  */\n-  if (types_used_by_cur_var_decl && !types_used_by_cur_var_decl->is_empty ())\n+     the global hash table.  We use a dummy variable for this purpose, but\n+     we need to build it unconditionally to avoid -fcompare-debug issues.  */\n+  if (first_global_object_name)\n     {\n       struct varpool_node *node;\n       char *label;\n@@ -5218,11 +5219,12 @@ gnat_write_global_declarations (void)\n       node->definition = 1;\n       node->force_output = 1;\n \n-      while (!types_used_by_cur_var_decl->is_empty ())\n-\t{\n-\t  tree t = types_used_by_cur_var_decl->pop ();\n-\t  types_used_by_var_decl_insert (t, dummy_global);\n-\t}\n+      if (types_used_by_cur_var_decl)\n+\twhile (!types_used_by_cur_var_decl->is_empty ())\n+\t  {\n+\t    tree t = types_used_by_cur_var_decl->pop ();\n+\t    types_used_by_var_decl_insert (t, dummy_global);\n+\t  }\n     }\n \n   /* Output debug information for all global type declarations first.  This"}]}