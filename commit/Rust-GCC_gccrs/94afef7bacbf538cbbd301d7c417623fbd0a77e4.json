{"sha": "94afef7bacbf538cbbd301d7c417623fbd0a77e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRhZmVmN2JhY2JmNTM4Y2JiZDMwMWQ3YzQxNzYyM2ZiZDBhNzdlNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-05-27T16:09:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-05-27T16:09:15Z"}, "message": "c++config: Remove extern template use when in debug mode, disable for non-weak systems.\n\n\n2005-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/c++config: Remove extern template use when in debug\n\tmode, disable for non-weak systems.\n\nFrom-SVN: r100261", "tree": {"sha": "ea33e468657fe6efde6ed68a4cf991c221a48906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea33e468657fe6efde6ed68a4cf991c221a48906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94afef7bacbf538cbbd301d7c417623fbd0a77e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94afef7bacbf538cbbd301d7c417623fbd0a77e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94afef7bacbf538cbbd301d7c417623fbd0a77e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94afef7bacbf538cbbd301d7c417623fbd0a77e4/comments", "author": null, "committer": null, "parents": [{"sha": "f879d298f449561a9033da4498b61340e79b2f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879d298f449561a9033da4498b61340e79b2f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f879d298f449561a9033da4498b61340e79b2f49"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "5f9ccce4414301b6a04ce52fedc663220a887c7c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94afef7bacbf538cbbd301d7c417623fbd0a77e4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94afef7bacbf538cbbd301d7c417623fbd0a77e4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=94afef7bacbf538cbbd301d7c417623fbd0a77e4", "patch": "@@ -1,3 +1,8 @@\n+2005-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/c++config: Remove extern template use when in debug\n+\tmode, disable for non-weak systems.\n+\t\n 2005-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/20534 "}, {"sha": "16c3194ba67ba19856f40daec0f94dc900891af0", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94afef7bacbf538cbbd301d7c417623fbd0a77e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94afef7bacbf538cbbd301d7c417623fbd0a77e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=94afef7bacbf538cbbd301d7c417623fbd0a77e4", "patch": "@@ -1,6 +1,6 @@\n // Predefined symbols and macros -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,27 +34,6 @@\n // Pick up any OS-specific definitions.\n #include <bits/os_defines.h>\n \n-// Allow use of \"export template.\" This is currently not a feature\n-// that g++ supports.\n-// #define _GLIBCXX_EXPORT_TEMPLATE 1\n-\n-// Allow use of the GNU syntax extension, \"extern template.\" This\n-// extension is fully documented in the g++ manual, but in a nutshell,\n-// it inhibits all implicit instantiations and is used throughout the\n-// library to avoid multiple weak definitions for required types that\n-// are already explicitly instantiated in the library binary. This\n-// substantially reduces the binary size of resulting executables.\n-#ifndef _GLIBCXX_EXTERN_TEMPLATE\n-# define _GLIBCXX_EXTERN_TEMPLATE 1\n-#endif\n-\n-// Certain function definitions that are meant to be overridable from\n-// user code are decorated with this macro.  For some targets, this\n-// macro causes these definitions to be weak.\n-#ifndef _GLIBCXX_WEAK_DEFINITION\n-# define _GLIBCXX_WEAK_DEFINITION\n-#endif\n-\n // Debug mode support. Debug mode basic_string is not allowed to be\n // associated with std, because of locale and exception link\n // dependence.\n@@ -66,7 +45,10 @@ namespace __gnu_debug\n }\n \n #ifdef _GLIBCXX_DEBUG\n-# define _GLIBCXX_STD __gnu_norm\n+# if __GXX_WEAK__\n+#  define _GLIBCXX_STD __gnu_norm\n+#  define _GLIBCXX_EXTERN_TEMPLATE 0\n+\n namespace __gnu_norm \n { \n   using namespace std; \n@@ -75,10 +57,33 @@ namespace std\n {\n   using namespace __gnu_debug_def __attribute__ ((strong));\n }\n+# else\n+#  warning debug mode disabled due to lack of weak symbol support\n+# endif\n #else\n # define _GLIBCXX_STD std\n #endif\n \n+// Allow use of \"export template.\" This is currently not a feature\n+// that g++ supports.\n+// #define _GLIBCXX_EXPORT_TEMPLATE 1\n+\n+// Allow use of the GNU syntax extension, \"extern template.\" This\n+// extension is fully documented in the g++ manual, but in a nutshell,\n+// it inhibits all implicit instantiations and is used throughout the\n+// library to avoid multiple weak definitions for required types that\n+// are already explicitly instantiated in the library binary. This\n+// substantially reduces the binary size of resulting executables.\n+#ifndef _GLIBCXX_EXTERN_TEMPLATE\n+# define _GLIBCXX_EXTERN_TEMPLATE 1\n+#endif\n+\n+// Certain function definitions that are meant to be overridable from\n+// user code are decorated with this macro.  For some targets, this\n+// macro causes these definitions to be weak.\n+#ifndef _GLIBCXX_WEAK_DEFINITION\n+# define _GLIBCXX_WEAK_DEFINITION\n+#endif\n \n // The remainder of the prewritten config is automatic; all the\n // user hooks are listed above."}]}