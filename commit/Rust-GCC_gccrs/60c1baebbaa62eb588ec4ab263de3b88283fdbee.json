{"sha": "60c1baebbaa62eb588ec4ab263de3b88283fdbee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjMWJhZWJiYWE2MmViNTg4ZWM0YWIyNjNkZTNiODgyODNmZGJlZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-07-17T23:38:35Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-07-18T16:00:41Z"}, "message": "testsuite: fix goacc/finalize-1.f \"original\" regex for 32 bits.\n\nThe \"bias\" portion of the regex for \"original\" expects\n\nbias: (integer(kind=<N>) parm.0.data - (integer(kind=<N>)) del_f_p.data\n\n(or cpo_f_p.data)\n\non 32 bit platforms, the dump file can show (signed int) instead of\n(integer(kind=8)... .  This patch adjusts the regex to allow any content\ncontaining the word int between the parentheses.\n\n2020-07-18  David Edelsohn  <dje.gcc@gmail.com>\n\ngcc/testsuite/ChangeLog\n\n\t* gfortran.dg/goacc/finalize-1.f: Adjust regex for 32 bits.", "tree": {"sha": "d27cb939a8f2918dcf264e51a7009677f3c98ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27cb939a8f2918dcf264e51a7009677f3c98ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60c1baebbaa62eb588ec4ab263de3b88283fdbee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c1baebbaa62eb588ec4ab263de3b88283fdbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c1baebbaa62eb588ec4ab263de3b88283fdbee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c1baebbaa62eb588ec4ab263de3b88283fdbee/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aa22a8f1a5cd7f79d6bdd8b56ef7ab89a43bce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa22a8f1a5cd7f79d6bdd8b56ef7ab89a43bce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa22a8f1a5cd7f79d6bdd8b56ef7ab89a43bce3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a77885808199357530440abfd877261ae96b25e1", "filename": "gcc/testsuite/gfortran.dg/goacc/finalize-1.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c1baebbaa62eb588ec4ab263de3b88283fdbee/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c1baebbaa62eb588ec4ab263de3b88283fdbee/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f?ref=60c1baebbaa62eb588ec4ab263de3b88283fdbee", "patch": "@@ -20,7 +20,7 @@ SUBROUTINE f\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:del_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n \n !$ACC EXIT DATA FINALIZE DELETE (del_f_p(2:5))\n-! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.0\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:del_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) del_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(integer\\\\(kind=.\\\\)\\\\) parm\\\\.0\\\\.data - \\\\(integer\\\\(kind=.\\\\)\\\\) del_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.0\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:del_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) del_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(.*int.*\\\\) parm\\\\.0\\\\.data - \\\\(.*int.*\\\\) del_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:MEM\\\\\\[\\\\(c_char \\\\*\\\\)\\[^\\\\\\]\\]+\\\\\\] \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:del_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:del_f_p\\\\.data \\\\\\[pointer assign, bias: \\[^\\\\\\]\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n \n !$ACC EXIT DATA COPYOUT (cpo_r)\n@@ -32,6 +32,6 @@ SUBROUTINE f\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(force_from:cpo_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n \n !$ACC EXIT DATA COPYOUT (cpo_f_p(4:10)) FINALIZE\n-! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.1\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:cpo_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) cpo_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(integer\\\\(kind=.\\\\)\\\\) parm\\\\.1\\\\.data - \\\\(integer\\\\(kind=.\\\\)\\\\) cpo_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.1\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:cpo_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) cpo_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(.*int.*\\\\) parm\\\\.1\\\\.data - \\\\(.*int.*\\\\) cpo_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(force_from:MEM\\\\\\[\\\\(c_char \\\\*\\\\)\\[^\\\\\\]\\]+\\\\\\] \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:cpo_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:cpo_f_p\\\\.data \\\\\\[pointer assign, bias: \\[^\\\\\\]\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n       END SUBROUTINE f"}]}