{"sha": "52792faa0c8510b7bfc2c184c9f67d4a87f83215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI3OTJmYWEwYzg1MTBiN2JmYzJjMTg0YzlmNjdkNGE4N2Y4MzIxNQ==", "commit": {"author": {"name": "Kamlesh Kumar", "email": "kamleshbhalui@gmail.com", "date": "2019-09-03T20:13:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-09-03T20:13:22Z"}, "message": "re PR tree-optimization/91504 (Inlining misses some logical operation folding)\n\n\tPR tree-optimization/91504\n\t* match.pd: Add ((~a & b) ^a) --> (a | b).\n\n        PR tree-optimization/91504\n\tgcc.dg/tree-ssa/pr91504.c: New test.\n\nFrom-SVN: r275354", "tree": {"sha": "3c5f5a01416ec909271f3aa44d5c8d2a1c7a462e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c5f5a01416ec909271f3aa44d5c8d2a1c7a462e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52792faa0c8510b7bfc2c184c9f67d4a87f83215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52792faa0c8510b7bfc2c184c9f67d4a87f83215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52792faa0c8510b7bfc2c184c9f67d4a87f83215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52792faa0c8510b7bfc2c184c9f67d4a87f83215/comments", "author": {"login": "kamleshbhalui", "id": 22392991, "node_id": "MDQ6VXNlcjIyMzkyOTkx", "avatar_url": "https://avatars.githubusercontent.com/u/22392991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamleshbhalui", "html_url": "https://github.com/kamleshbhalui", "followers_url": "https://api.github.com/users/kamleshbhalui/followers", "following_url": "https://api.github.com/users/kamleshbhalui/following{/other_user}", "gists_url": "https://api.github.com/users/kamleshbhalui/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamleshbhalui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamleshbhalui/subscriptions", "organizations_url": "https://api.github.com/users/kamleshbhalui/orgs", "repos_url": "https://api.github.com/users/kamleshbhalui/repos", "events_url": "https://api.github.com/users/kamleshbhalui/events{/privacy}", "received_events_url": "https://api.github.com/users/kamleshbhalui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42bf58bb137992b876be37f8b2e683c49bc2abed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bf58bb137992b876be37f8b2e683c49bc2abed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42bf58bb137992b876be37f8b2e683c49bc2abed"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "abbbf16781f307f2bf5c6618c36d755cdcfb896f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52792faa0c8510b7bfc2c184c9f67d4a87f83215", "patch": "@@ -1,3 +1,8 @@\n+2019-09-03  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\tPR tree-optimization/91504\n+\t* match.pd: Add ((~a & b) ^a) --> (a | b).\n+\n 2019-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/91604"}, {"sha": "1d13543a6159dc94ce1ff1112c0bfc6b0d588638", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=52792faa0c8510b7bfc2c184c9f67d4a87f83215", "patch": "@@ -831,6 +831,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (bit_xor:c (bit_and:cs @0 (bit_not @1)) (bit_not @0))\n  (bit_not (bit_and @0 @1)))\n \n+/* (~a & b) ^ a  -->   (a | b)   */\n+(simplify\n+ (bit_xor:c (bit_and:cs (bit_not @0) @1) @0)\n+ (bit_ior @0 @1))\n+\n /* (a | b) & ~(a ^ b)  -->  a & b  */\n (simplify\n  (bit_and:c (bit_ior @0 @1) (bit_not (bit_xor:c @0 @1)))"}, {"sha": "4cf3e9b1ec411b1e9f800fbb50d49ce9acd5faf0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52792faa0c8510b7bfc2c184c9f67d4a87f83215", "patch": "@@ -1,3 +1,8 @@\n+2019-09-03  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+        PR tree-optimization/91504\n+\tgcc.dg/tree-ssa/pr91504.c: New test.\n+\n 2019-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/91604"}, {"sha": "a52dea490e554ddc885d73c49cfc73836defa87e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr91504.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91504.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52792faa0c8510b7bfc2c184c9f67d4a87f83215/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91504.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91504.c?ref=52792faa0c8510b7bfc2c184c9f67d4a87f83215", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized-raw\" } */\n+\n+static inline unsigned deposit32(unsigned value, int start, int length,\n+                                 unsigned fieldval)\n+{\n+    unsigned mask = (~0U >> (32 - length)) << start;\n+    return (value & ~mask) | ((fieldval << start) & mask);\n+}\n+\n+unsigned foo(unsigned value)\n+{\n+   return deposit32(value, 10, 1, 1);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"bit_and_expr\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"bit_xor_expr\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"bit_not_expr\" \"optimized\" } } */"}]}