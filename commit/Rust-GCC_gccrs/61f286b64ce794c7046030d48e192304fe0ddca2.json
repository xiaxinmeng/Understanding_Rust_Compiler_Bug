{"sha": "61f286b64ce794c7046030d48e192304fe0ddca2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmMjg2YjY0Y2U3OTRjNzA0NjAzMGQ0OGUxOTIzMDRmZTBkZGNhMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2000-06-12T14:40:24Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2000-06-12T14:40:24Z"}, "message": "flow.c (mark_used_regs): Revert last change.\n\n* flow.c (mark_used_regs): Revert last change.\n(life_analysis): Remove PROP_AUTOINC if running after reload.\n(propagate_one_insn): PROP_AUTOINC is always off after reload.\n\nFrom-SVN: r34499", "tree": {"sha": "0d7a6b7c56890345315c9c2b8994347399761da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d7a6b7c56890345315c9c2b8994347399761da3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61f286b64ce794c7046030d48e192304fe0ddca2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f286b64ce794c7046030d48e192304fe0ddca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f286b64ce794c7046030d48e192304fe0ddca2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f286b64ce794c7046030d48e192304fe0ddca2/comments", "author": null, "committer": null, "parents": [{"sha": "1565e32cd30536a3551cc45600ed00451f748101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1565e32cd30536a3551cc45600ed00451f748101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1565e32cd30536a3551cc45600ed00451f748101"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "09d6e0cdd8ab6d0983cb67ade0ed284ccb523207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f286b64ce794c7046030d48e192304fe0ddca2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f286b64ce794c7046030d48e192304fe0ddca2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61f286b64ce794c7046030d48e192304fe0ddca2", "patch": "@@ -1,3 +1,9 @@\n+2000-06-12  Richard Earnshaw <rearnsha@arm.com>\n+\n+\t* flow.c (mark_used_regs): Revert last change.\n+\t(life_analysis): Remove PROP_AUTOINC if running after reload.\n+\t(propagate_one_insn): PROP_AUTOINC is always off after reload.\n+\n 2000-06-11  Richard Earnshaw <rearnsha@arm.com>\n \n \t* flow.c (mark_used_regs): Don't call find_auto_inc after reload"}, {"sha": "0b6e78fecbf64d6cfbac8cb736264523ee42b0e8", "filename": "gcc/flow.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f286b64ce794c7046030d48e192304fe0ddca2/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f286b64ce794c7046030d48e192304fe0ddca2/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=61f286b64ce794c7046030d48e192304fe0ddca2", "patch": "@@ -2606,9 +2606,13 @@ life_analysis (f, file, flags)\n      Otherwise offsets and such may be incorrect.\n \n      Reload will make some registers as live even though they do not\n-     appear in the rtl.  */\n+     appear in the rtl.  \n+\n+     We don't want to create new auto-incs after reload, since they\n+     are unlikely to be useful and can cause problems with shared\n+     stack slots.  */\n   if (reload_completed)\n-    flags &= ~PROP_REG_INFO;\n+    flags &= ~(PROP_REG_INFO | PROP_AUTOINC);\n \n   /* We want alias analysis information for local dead store elimination.  */\n   if (flags & PROP_SCAN_DEAD_CODE)\n@@ -3466,8 +3470,7 @@ propagate_one_insn (pbi, insn)\n     register rtx x = single_set (insn);\n \n     /* Does this instruction increment or decrement a register?  */\n-    if (!reload_completed\n-\t&& (flags & PROP_AUTOINC)\n+    if ((flags & PROP_AUTOINC)\n \t&& x != 0\n \t&& GET_CODE (SET_DEST (x)) == REG\n \t&& (GET_CODE (SET_SRC (x)) == PLUS\n@@ -5254,7 +5257,7 @@ mark_used_regs (pbi, x, cond, insn)\n \t}\n \n #ifdef AUTO_INC_DEC\n-      if (! reload_completed && (flags & PROP_AUTOINC))\n+      if (flags & PROP_AUTOINC)\n         find_auto_inc (pbi, x, insn);\n #endif\n       break;\n@@ -5287,7 +5290,7 @@ mark_used_regs (pbi, x, cond, insn)\n \tif (GET_CODE (testreg) == MEM)\n \t  {\n #ifdef AUTO_INC_DEC\n-\t    if (! reload_completed && (flags & PROP_AUTOINC))\n+\t    if (flags & PROP_AUTOINC)\n \t      find_auto_inc (pbi, testreg, insn);\n #endif\n \t    mark_used_regs (pbi, XEXP (testreg, 0), cond, insn);"}]}