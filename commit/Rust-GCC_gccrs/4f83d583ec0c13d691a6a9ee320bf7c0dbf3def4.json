{"sha": "4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4M2Q1ODNlYzBjMTNkNjkxYTZhOWVlMzIwYmY3YzBkYmYzZGVmNA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2014-03-27T22:21:35Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2014-03-27T22:21:35Z"}, "message": "re PR fortran/60522 (WHERE construct causes an ICE in gfc_trans_where_2)\n\n2014-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/60522\n\t* frontend-passes.c (cfe_code):  Do not walk subtrees\n\tfor WHERE.\n\n2014-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/60522\n\t* gfortran.dg/where_4.f90:  New test case.\n\nFrom-SVN: r208883", "tree": {"sha": "cebb84214434f32beb6ba833206c3ebc26b7ad9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cebb84214434f32beb6ba833206c3ebc26b7ad9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/comments", "author": null, "committer": null, "parents": [{"sha": "6788164be4fa931697fa68ffd016cbe1876c959a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6788164be4fa931697fa68ffd016cbe1876c959a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6788164be4fa931697fa68ffd016cbe1876c959a"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "cc683ca4bcc3ad97bace17bc243590e1a71194e8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "patch": "@@ -1,3 +1,9 @@\n+2014-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/60522\n+\t* frontend-passes.c (cfe_code):  Do not walk subtrees\n+\tfor WHERE.\n+\n 2014-03-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/58880"}, {"sha": "6c67e66108bb63a99c882cb253f2c324c4fac247", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "patch": "@@ -627,12 +627,35 @@ cfe_expr_0 (gfc_expr **e, int *walk_subtrees,\n    to insert statements as needed.  */\n \n static int\n-cfe_code (gfc_code **c, int *walk_subtrees ATTRIBUTE_UNUSED,\n-\t  void *data ATTRIBUTE_UNUSED)\n+cfe_code (gfc_code **c, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n {\n   current_code = c;\n   inserted_block = NULL;\n   changed_statement = NULL;\n+\n+  /* Do not do anything inside a WHERE statement; scalar assignments, BLOCKs\n+     and allocation on assigment are prohibited inside WHERE, and finally\n+     masking an expression would lead to wrong-code when replacing\n+\n+     WHERE (a>0)\n+       b = sum(foo(a) + foo(a))\n+     END WHERE\n+\n+     with\n+\n+     WHERE (a > 0)\n+       tmp = foo(a)\n+       b = sum(tmp + tmp)\n+     END WHERE\n+*/\n+\n+  if ((*c)->op == EXEC_WHERE)\n+    {\n+      *walk_subtrees = 0;\n+      return 0;\n+    }\n+  \n+\n   return 0;\n }\n "}, {"sha": "8cfbfc3c7fc72924635d033692a45fca477f22ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "patch": "@@ -1,3 +1,8 @@\n+2014-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/60522\n+\t* gfortran.dg/where_4.f90:  New test case.\n+\n 2014-03-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/58880"}, {"sha": "1ff2e4ca31abe5f347b8f375b5d4239fe1455ac3", "filename": "gcc/testsuite/gfortran.dg/where_4.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_4.f90?ref=4f83d583ec0c13d691a6a9ee320bf7c0dbf3def4", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! PR 60522 - this used to ICE.\n+! Original test case Roger Ferrer Ibanez\n+subroutine foo(a, b)\n+   implicit none\n+   integer, dimension(:), intent(inout) :: a\n+   integer, dimension(:), intent(in) :: b\n+\n+   where (b(:) > 0)\n+      where (b(:) > 100)\n+         a(lbound(a, 1):ubound(a, 1)) = b(lbound(b, 1):ubound(b, 1)) * b(lbound(b, 1):ubound(b, 1)) - 100\n+      elsewhere\n+         a(lbound(a, 1):ubound(a, 1)) = b(lbound(b, 1):ubound(b, 1)) * b(lbound(b, 1):ubound(b, 1))\n+      end where\n+   elsewhere\n+      a(lbound(a, 1):ubound(a, 1)) = - b(lbound(b, 1):ubound(b, 1)) * b(lbound(b, 1):ubound(b, 1))\n+   end where\n+end subroutine foo"}]}