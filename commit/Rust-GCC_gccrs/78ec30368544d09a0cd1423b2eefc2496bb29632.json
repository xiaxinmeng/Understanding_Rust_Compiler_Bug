{"sha": "78ec30368544d09a0cd1423b2eefc2496bb29632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhlYzMwMzY4NTQ0ZDA5YTBjZDE0MjNiMmVlZmMyNDk2YmIyOTYzMg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-11-15T17:05:37Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-11-15T17:05:37Z"}, "message": "[AArch64] Remove simd_type\n\ngcc/\n\t* config/aarch64/aarch64-simd.md: Remove simd_type from all\n\tpatterns.\n\t* config/aarch64/aarch64.md: Likewise, correct \"type\" attribute\n\twhere it is incorrect or missing.\n\nFrom-SVN: r204852", "tree": {"sha": "4e296ee76db324c8f3a6f84d3db640345462f3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e296ee76db324c8f3a6f84d3db640345462f3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78ec30368544d09a0cd1423b2eefc2496bb29632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ec30368544d09a0cd1423b2eefc2496bb29632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78ec30368544d09a0cd1423b2eefc2496bb29632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ec30368544d09a0cd1423b2eefc2496bb29632/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3aaaa651a9c0090cb79a3258df6705d6204626db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aaaa651a9c0090cb79a3258df6705d6204626db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aaaa651a9c0090cb79a3258df6705d6204626db"}], "stats": {"total": 1016, "additions": 226, "deletions": 790}, "files": [{"sha": "89a7f75b063d3e0e1f3545bb588691df0c523854", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78ec30368544d09a0cd1423b2eefc2496bb29632", "patch": "@@ -1,3 +1,10 @@\n+2013-11-15  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md: Remove simd_type from all\n+\tpatterns.\n+\t* config/aarch64/aarch64.md: Likewise, correct \"type\" attribute\n+\twhere it is incorrect or missing.\n+\n 2013-11-15  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* dwarf2out.c (gen_enumeration_type_die): Remove unnecessary"}, {"sha": "b9ebdf54431fcdaac6161a774bfe4d38fb52a44b", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 202, "deletions": 759, "changes": 961, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=78ec30368544d09a0cd1423b2eefc2496bb29632", "patch": "@@ -18,226 +18,6 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-\n-; Main data types used by the insntructions\n-\n-(define_attr \"simd_mode\" \"unknown,none,V8QI,V16QI,V4HI,V8HI,V2SI,V4SI,V2DI,V2SF,V4SF,V2DF,OI,CI,XI,DI,DF,SI,SF,HI,QI\"\n-  (const_string \"unknown\"))\n-\n-\n-; Classification of AdvSIMD instructions for scheduling purposes.\n-; Do not set this attribute and the \"v8type\" attribute together in\n-; any instruction pattern.\n-\n-; simd_abd              integer absolute difference and accumulate.\n-; simd_abdl             integer absolute difference and accumulate (long).\n-; simd_adal             integer add and accumulate (long).\n-; simd_add              integer addition/subtraction.\n-; simd_addl             integer addition/subtraction (long).\n-; simd_addlv            across lanes integer sum (long).\n-; simd_addn             integer addition/subtraction (narrow).\n-; simd_addn2            integer addition/subtraction (narrow, high).\n-; simd_addv             across lanes integer sum.\n-; simd_cls              count leading sign/zero bits.\n-; simd_cmp              compare / create mask.\n-; simd_cnt              population count.\n-; simd_dup              duplicate element.\n-; simd_dupgp            duplicate general purpose register.\n-; simd_ext              bitwise extract from pair.\n-; simd_fabd             floating point absolute difference.\n-; simd_fadd             floating point add/sub.\n-; simd_fcmp             floating point compare.\n-; simd_fcvti            floating point convert to integer.\n-; simd_fcvtl            floating-point convert upsize.\n-; simd_fcvtn            floating-point convert downsize (narrow).\n-; simd_fcvtn2           floating-point convert downsize (narrow, high).\n-; simd_fdiv             floating point division.\n-; simd_fminmax          floating point min/max.\n-; simd_fminmaxv         across lanes floating point min/max.\n-; simd_fmla             floating point multiply-add.\n-; simd_fmla_elt         floating point multiply-add (by element).\n-; simd_fmul             floating point multiply.\n-; simd_fmul_elt         floating point multiply (by element).\n-; simd_fnegabs          floating point neg/abs.\n-; simd_frecpe            floating point reciprocal estimate.\n-; simd_frecps            floating point reciprocal step.\n-; simd_frecpx            floating point reciprocal exponent.\n-; simd_frint            floating point round to integer.\n-; simd_fsqrt            floating point square root.\n-; simd_icvtf            integer convert to floating point.\n-; simd_ins              insert element.\n-; simd_insgp            insert general purpose register.\n-; simd_load1            load multiple structures to one register (LD1).\n-; simd_load1r           load single structure to all lanes of one register (LD1R).\n-; simd_load1s           load single structure to one lane of one register (LD1 [index]).\n-; simd_load2            load multiple structures to two registers (LD1, LD2).\n-; simd_load2r           load single structure to all lanes of two registers (LD1R, LD2R).\n-; simd_load2s           load single structure to one lane of two registers (LD2 [index]).\n-; simd_load3            load multiple structures to three registers (LD1, LD3).\n-; simd_load3r           load single structure to all lanes of three registers (LD3R).\n-; simd_load3s           load single structure to one lane of three registers (LD3 [index]).\n-; simd_load4            load multiple structures to four registers (LD1, LD2, LD4).\n-; simd_load4r           load single structure to all lanes of four registers (LD4R).\n-; simd_load4s           load single structure to one lane of four registers (LD4 [index]).\n-; simd_logic            logical operation.\n-; simd_logic_imm        logcial operation (immediate).\n-; simd_minmax           integer min/max.\n-; simd_minmaxv          across lanes integer min/max,\n-; simd_mla              integer multiply-accumulate.\n-; simd_mla_elt          integer multiply-accumulate (by element).\n-; simd_mlal             integer multiply-accumulate (long).\n-; simd_mlal_elt         integer multiply-accumulate (by element, long).\n-; simd_move             move register.\n-; simd_move_imm         move immediate.\n-; simd_movgp            move element to general purpose register.\n-; simd_mul              integer multiply.\n-; simd_mul_elt          integer multiply (by element).\n-; simd_mull             integer multiply (long).\n-; simd_mull_elt         integer multiply (by element, long).\n-; simd_negabs           integer negate/absolute.\n-; simd_rbit             bitwise reverse.\n-; simd_rcpe             integer reciprocal estimate.\n-; simd_rcps             integer reciprocal square root.\n-; simd_rev              element reverse.\n-; simd_sat_add          integer saturating addition/subtraction.\n-; simd_sat_mlal         integer saturating multiply-accumulate (long).\n-; simd_sat_mlal_elt     integer saturating multiply-accumulate (by element, long).\n-; simd_sat_mul          integer saturating multiply.\n-; simd_sat_mul_elt      integer saturating multiply (by element).\n-; simd_sat_mull         integer saturating multiply (long).\n-; simd_sat_mull_elt     integer saturating multiply (by element, long).\n-; simd_sat_negabs       integer saturating negate/absolute.\n-; simd_sat_shift        integer saturating shift.\n-; simd_sat_shift_imm    integer saturating shift (immediate).\n-; simd_sat_shiftn_imm   integer saturating shift (narrow, immediate).\n-; simd_sat_shiftn2_imm  integer saturating shift (narrow, high, immediate).\n-; simd_shift            shift register/vector.\n-; simd_shift_acc        shift accumulate.\n-; simd_shift_imm        shift immediate.\n-; simd_shift_imm_acc    shift immediate and accumualte.\n-; simd_shiftl           shift register/vector (long).\n-; simd_shiftl_imm       shift register/vector (long, immediate).\n-; simd_shiftn_imm       shift register/vector (narrow, immediate).\n-; simd_shiftn2_imm      shift register/vector (narrow, high, immediate).\n-; simd_store1           store multiple structures from one register (ST1).\n-; simd_store1s          store single structure from one lane of one register (ST1 [index]).\n-; simd_store2           store multiple structures from two registers (ST1, ST2).\n-; simd_store2s          store single structure from one lane of two registers (ST2 [index]).\n-; simd_store3           store multiple structures from three registers (ST1, ST3).\n-; simd_store3s          store single structure from one lane of three register (ST3 [index]).\n-; simd_store4           store multiple structures from four registers (ST1, ST2, ST4).\n-; simd_store4s          store single structure from one lane for four registers (ST4 [index]).\n-; simd_tbl              table lookup.\n-; simd_trn              transpose.\n-; simd_uzp              unzip.\n-; simd_zip              zip.\n-\n-(define_attr \"simd_type\"\n-   \"simd_abd,\\\n-   simd_abdl,\\\n-   simd_adal,\\\n-   simd_add,\\\n-   simd_addl,\\\n-   simd_addlv,\\\n-   simd_addn,\\\n-   simd_addn2,\\\n-   simd_addv,\\\n-   simd_cls,\\\n-   simd_cmp,\\\n-   simd_cnt,\\\n-   simd_dup,\\\n-   simd_dupgp,\\\n-   simd_ext,\\\n-   simd_fabd,\\\n-   simd_fadd,\\\n-   simd_fcmp,\\\n-   simd_fcvti,\\\n-   simd_fcvtl,\\\n-   simd_fcvtn,\\\n-   simd_fcvtn2,\\\n-   simd_fdiv,\\\n-   simd_fminmax,\\\n-   simd_fminmaxv,\\\n-   simd_fmla,\\\n-   simd_fmla_elt,\\\n-   simd_fmul,\\\n-   simd_fmul_elt,\\\n-   simd_fnegabs,\\\n-   simd_frecpe,\\\n-   simd_frecps,\\\n-   simd_frecpx,\\\n-   simd_frint,\\\n-   simd_fsqrt,\\\n-   simd_icvtf,\\\n-   simd_ins,\\\n-   simd_insgp,\\\n-   simd_load1,\\\n-   simd_load1r,\\\n-   simd_load1s,\\\n-   simd_load2,\\\n-   simd_load2r,\\\n-   simd_load2s,\\\n-   simd_load3,\\\n-   simd_load3r,\\\n-   simd_load3s,\\\n-   simd_load4,\\\n-   simd_load4r,\\\n-   simd_load4s,\\\n-   simd_logic,\\\n-   simd_logic_imm,\\\n-   simd_minmax,\\\n-   simd_minmaxv,\\\n-   simd_mla,\\\n-   simd_mla_elt,\\\n-   simd_mlal,\\\n-   simd_mlal_elt,\\\n-   simd_movgp,\\\n-   simd_move,\\\n-   simd_move_imm,\\\n-   simd_mul,\\\n-   simd_mul_elt,\\\n-   simd_mull,\\\n-   simd_mull_elt,\\\n-   simd_negabs,\\\n-   simd_rbit,\\\n-   simd_rcpe,\\\n-   simd_rcps,\\\n-   simd_rev,\\\n-   simd_sat_add,\\\n-   simd_sat_mlal,\\\n-   simd_sat_mlal_elt,\\\n-   simd_sat_mul,\\\n-   simd_sat_mul_elt,\\\n-   simd_sat_mull,\\\n-   simd_sat_mull_elt,\\\n-   simd_sat_negabs,\\\n-   simd_sat_shift,\\\n-   simd_sat_shift_imm,\\\n-   simd_sat_shiftn_imm,\\\n-   simd_sat_shiftn2_imm,\\\n-   simd_shift,\\\n-   simd_shift_acc,\\\n-   simd_shift_imm,\\\n-   simd_shift_imm_acc,\\\n-   simd_shiftl,\\\n-   simd_shiftl_imm,\\\n-   simd_shiftn_imm,\\\n-   simd_shiftn2_imm,\\\n-   simd_store1,\\\n-   simd_store1s,\\\n-   simd_store2,\\\n-   simd_store2s,\\\n-   simd_store3,\\\n-   simd_store3s,\\\n-   simd_store4,\\\n-   simd_store4s,\\\n-   simd_tbl,\\\n-   simd_trn,\\\n-   simd_uzp,\\\n-   simd_zip,\\\n-   none\"\n-  (const_string \"none\"))\n-\n (define_expand \"mov<mode>\"\n   [(set (match_operand:VALL 0 \"aarch64_simd_nonimmediate_operand\" \"\")\n \t(match_operand:VALL 1 \"aarch64_simd_general_operand\" \"\"))]\n@@ -268,19 +48,15 @@\n   \"@\n    dup\\\\t%0.<Vtype>, %<vw>1\n    dup\\\\t%0.<Vtype>, %1.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_dupgp, simd_dup\")\n-   (set_attr \"type\" \"neon_from_gp<q>, neon_dup<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_from_gp<q>, neon_dup<q>\")]\n )\n \n (define_insn \"aarch64_simd_dup<mode>\"\n   [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n         (vec_duplicate:VDQF (match_operand:<VEL> 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"dup\\\\t%0.<Vtype>, %1.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_dup\")\n-   (set_attr \"type\" \"neon_dup<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_dup<q>\")]\n )\n \n (define_insn \"aarch64_dup_lane<mode>\"\n@@ -292,9 +68,7 @@\n           )))]\n   \"TARGET_SIMD\"\n   \"dup\\\\t%0.<Vtype>, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_dup\")\n-   (set_attr \"type\" \"neon_dup<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_dup<q>\")]\n )\n \n (define_insn \"aarch64_dup_lane_<vswap_width_name><mode>\"\n@@ -306,9 +80,7 @@\n           )))]\n   \"TARGET_SIMD\"\n   \"dup\\\\t%0.<Vtype>, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_dup\")\n-   (set_attr \"type\" \"neon_dup<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_dup<q>\")]\n )\n \n (define_insn \"*aarch64_simd_mov<mode>\"\n@@ -334,11 +106,9 @@\n      default: gcc_unreachable ();\n      }\n }\n-  [(set_attr \"simd_type\" \"simd_load1,simd_store1,simd_move,simd_movgp,simd_insgp,simd_move,simd_move_imm\")\n-   (set_attr \"type\" \"neon_load1_1reg<q>, neon_store1_1reg<q>,\\\n+  [(set_attr \"type\" \"neon_load1_1reg<q>, neon_store1_1reg<q>,\\\n                      neon_logic<q>, neon_to_gp<q>, neon_from_gp<q>,\\\n-                     mov_reg, neon_move<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+                     mov_reg, neon_move<q>\")]\n )\n \n (define_insn \"*aarch64_simd_mov<mode>\"\n@@ -368,11 +138,9 @@\n \tgcc_unreachable ();\n     }\n }\n-  [(set_attr \"simd_type\" \"simd_load1,simd_store1,simd_move,simd_movgp,simd_insgp,simd_move,simd_move_imm\")\n-   (set_attr \"type\" \"neon_load1_1reg<q>, neon_store1_1reg<q>,\\\n+  [(set_attr \"type\" \"neon_load1_1reg<q>, neon_store1_1reg<q>,\\\n                      neon_logic<q>, multiple, multiple, multiple,\\\n                      neon_move<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n    (set_attr \"length\" \"4,4,4,8,8,8,4\")]\n )\n \n@@ -451,9 +219,7 @@\n           (match_operand:VQ 2 \"vect_par_cnst_lo_half\" \"\")))]\n   \"TARGET_SIMD && reload_completed\"\n   \"umov\\t%0, %1.d[0]\"\n-  [(set_attr \"simd_type\" \"simd_movgp\")\n-   (set_attr \"type\" \"neon_to_gp<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n+  [(set_attr \"type\" \"neon_to_gp<q>\")\n    (set_attr \"length\" \"4\")\n   ])\n \n@@ -464,9 +230,7 @@\n           (match_operand:VQ 2 \"vect_par_cnst_hi_half\" \"\")))]\n   \"TARGET_SIMD && reload_completed\"\n   \"umov\\t%0, %1.d[1]\"\n-  [(set_attr \"simd_type\" \"simd_movgp\")\n-   (set_attr \"type\" \"neon_to_gp<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n+  [(set_attr \"type\" \"neon_to_gp<q>\")\n    (set_attr \"length\" \"4\")\n   ])\n \n@@ -476,9 +240,7 @@\n \t\t(match_operand:VDQ 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"orn\\t%0.<Vbtype>, %2.<Vbtype>, %1.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"bic<mode>3\"\n@@ -487,9 +249,7 @@\n \t\t(match_operand:VDQ 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"bic\\t%0.<Vbtype>, %2.<Vbtype>, %1.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"add<mode>3\"\n@@ -498,9 +258,7 @@\n \t\t  (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"add\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_add<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_add<q>\")]\n )\n \n (define_insn \"sub<mode>3\"\n@@ -509,9 +267,7 @@\n \t\t   (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"sub\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_sub<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sub<q>\")]\n )\n \n (define_insn \"mul<mode>3\"\n@@ -520,9 +276,7 @@\n \t\t   (match_operand:VDQM 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"mul\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mul\")\n-   (set_attr \"type\" \"neon_mul_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mul_<Vetype><q>\")]\n )\n \n (define_insn \"*aarch64_mul3_elt<mode>\"\n@@ -535,9 +289,7 @@\n       (match_operand:VMUL 3 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"<f>mul\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_<f>mul_elt\")\n-   (set_attr \"type\" \"neon<fp>_mul_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon<fp>_mul_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_mul3_elt_<vswap_width_name><mode>\"\n@@ -550,9 +302,7 @@\n       (match_operand:VMUL_CHANGE_NLANES 3 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"<f>mul\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_<f>mul_elt\")\n-   (set_attr \"type\" \"neon<fp>_mul_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon<fp>_mul_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_mul3_elt_to_128df\"\n@@ -563,9 +313,7 @@\n       (match_operand:V2DF 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"fmul\\\\t%0.2d, %1.2d, %2.d[0]\"\n-  [(set_attr \"simd_type\" \"simd_fmul_elt\")\n-   (set_attr \"type\" \"neon_fp_mul_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mul_d_scalar_q\")]\n )\n \n (define_insn \"*aarch64_mul3_elt_to_64v2df\"\n@@ -577,29 +325,23 @@\n        (match_operand:DF 3 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"fmul\\\\t%0.2d, %3.2d, %1.d[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmul_elt\")\n-   (set_attr \"type\" \"neon_fp_mul_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mul_d_scalar_q\")]\n )\n \n (define_insn \"neg<mode>2\"\n   [(set (match_operand:VDQ 0 \"register_operand\" \"=w\")\n \t(neg:VDQ (match_operand:VDQ 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"neg\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_negabs\")\n-   (set_attr \"type\" \"neon_neg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_neg<q>\")]\n )\n \n (define_insn \"abs<mode>2\"\n   [(set (match_operand:VDQ 0 \"register_operand\" \"=w\")\n         (abs:VDQ (match_operand:VDQ 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"abs\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_negabs\")\n-   (set_attr \"type\" \"neon_abs<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_abs<q>\")]\n )\n \n (define_insn \"abd<mode>_3\"\n@@ -609,9 +351,7 @@\n \t\t       (match_operand:VDQ_BHSI 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"sabd\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_abd\")\n-   (set_attr \"type\" \"neon_abd<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_abd<q>\")]\n )\n \n (define_insn \"aba<mode>_3\"\n@@ -622,9 +362,7 @@\n \t\t       (match_operand:VDQ_BHSI 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"saba\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_abd\")\n-   (set_attr \"type\" \"neon_arith_acc<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_arith_acc<q>\")]\n )\n \n (define_insn \"fabd<mode>_3\"\n@@ -634,9 +372,7 @@\n \t\t   (match_operand:VDQF 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"fabd\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fabd\")\n-   (set_attr \"type\" \"neon_fp_abd_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_abd_<Vetype><q>\")]\n )\n \n (define_insn \"*fabd_scalar<mode>3\"\n@@ -646,9 +382,7 @@\n                  (match_operand:GPF 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"fabd\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"simd_type\" \"simd_fabd\")\n-   (set_attr \"type\" \"neon_fp_abd_<Vetype><q>\")\n-   (set_attr \"mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_abd_<Vetype><q>\")]\n )\n \n (define_insn \"and<mode>3\"\n@@ -657,9 +391,7 @@\n \t\t (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"and\\t%0.<Vbtype>, %1.<Vbtype>, %2.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"ior<mode>3\"\n@@ -668,9 +400,7 @@\n \t\t (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"orr\\t%0.<Vbtype>, %1.<Vbtype>, %2.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"xor<mode>3\"\n@@ -679,19 +409,15 @@\n \t\t (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"eor\\t%0.<Vbtype>, %1.<Vbtype>, %2.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"one_cmpl<mode>2\"\n   [(set (match_operand:VDQ 0 \"register_operand\" \"=w\")\n         (not:VDQ (match_operand:VDQ 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"not\\t%0.<Vbtype>, %1.<Vbtype>\"\n-  [(set_attr \"simd_type\" \"simd_logic\")\n-   (set_attr \"type\" \"neon_logic<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"aarch64_simd_vec_set<mode>\"\n@@ -705,9 +431,7 @@\n   \"@\n    ins\\t%0.<Vetype>[%p2], %w1\n    ins\\\\t%0.<Vetype>[%p2], %1.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_insgp, simd_ins\")\n-   (set_attr \"type\" \"neon_from_gp<q>, neon_ins<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_from_gp<q>, neon_ins<q>\")]\n )\n \n (define_insn \"aarch64_simd_lshr<mode>\"\n@@ -716,9 +440,7 @@\n \t\t     (match_operand:VDQ  2 \"aarch64_simd_rshift_imm\" \"Dr\")))]\n  \"TARGET_SIMD\"\n  \"ushr\\t%0.<Vtype>, %1.<Vtype>, %2\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"aarch64_simd_ashr<mode>\"\n@@ -727,9 +449,7 @@\n \t\t     (match_operand:VDQ  2 \"aarch64_simd_rshift_imm\" \"Dr\")))]\n  \"TARGET_SIMD\"\n  \"sshr\\t%0.<Vtype>, %1.<Vtype>, %2\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"aarch64_simd_imm_shl<mode>\"\n@@ -738,9 +458,7 @@\n \t\t   (match_operand:VDQ  2 \"aarch64_simd_lshift_imm\" \"Dl\")))]\n  \"TARGET_SIMD\"\n   \"shl\\t%0.<Vtype>, %1.<Vtype>, %2\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"aarch64_simd_reg_sshl<mode>\"\n@@ -749,9 +467,7 @@\n \t\t   (match_operand:VDQ 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"sshl\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"type\" \"neon_shift_reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_insn \"aarch64_simd_reg_shl<mode>_unsigned\"\n@@ -761,9 +477,7 @@\n \t\t   UNSPEC_ASHIFT_UNSIGNED))]\n  \"TARGET_SIMD\"\n  \"ushl\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"type\" \"neon_shift_reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_insn \"aarch64_simd_reg_shl<mode>_signed\"\n@@ -773,9 +487,7 @@\n \t\t   UNSPEC_ASHIFT_SIGNED))]\n  \"TARGET_SIMD\"\n  \"sshl\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"type\" \"neon_shift_reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_expand \"ashl<mode>3\"\n@@ -983,9 +695,7 @@\n   \"@\n    ins\\t%0.d[%p2], %1\n    ins\\\\t%0.d[%p2], %1.d[0]\"\n-  [(set_attr \"simd_type\" \"simd_insgp, simd_ins\")\n-   (set_attr \"type\" \"neon_from_gp, neon_ins_q\")\n-   (set_attr \"simd_mode\" \"V2DI\")]\n+  [(set_attr \"type\" \"neon_from_gp, neon_ins_q\")]\n )\n \n (define_expand \"vec_setv2di\"\n@@ -1010,9 +720,7 @@\n \t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_SIMD\"\n   \"ins\\t%0.<Vetype>[%p2], %1.<Vetype>[0]\";\n-  [(set_attr \"simd_type\" \"simd_ins\")\n-   (set_attr \"type\" \"neon_ins<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_ins<q>\")]\n )\n \n (define_expand \"vec_set<mode>\"\n@@ -1036,9 +744,7 @@\n \t\t  (match_operand:VQ_S 1 \"register_operand\" \"0\")))]\n  \"TARGET_SIMD\"\n  \"mla\\t%0.<Vtype>, %2.<Vtype>, %3.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype><q>\")]\n )\n \n (define_insn \"*aarch64_mla_elt<mode>\"\n@@ -1053,9 +759,7 @@\n \t (match_operand:VDQHS 4 \"register_operand\" \"0\")))]\n  \"TARGET_SIMD\"\n  \"mla\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_mla_elt_<vswap_width_name><mode>\"\n@@ -1070,9 +774,7 @@\n \t (match_operand:VDQHS 4 \"register_operand\" \"0\")))]\n  \"TARGET_SIMD\"\n  \"mla\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"aarch64_mls<mode>\"\n@@ -1082,9 +784,7 @@\n \t\t\t      (match_operand:VQ_S 3 \"register_operand\" \"w\"))))]\n  \"TARGET_SIMD\"\n  \"mls\\t%0.<Vtype>, %2.<Vtype>, %3.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype><q>\")]\n )\n \n (define_insn \"*aarch64_mls_elt<mode>\"\n@@ -1099,9 +799,7 @@\n \t   (match_operand:VDQHS 3 \"register_operand\" \"w\"))))]\n  \"TARGET_SIMD\"\n  \"mls\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_mls_elt_<vswap_width_name><mode>\"\n@@ -1116,9 +814,7 @@\n \t   (match_operand:VDQHS 3 \"register_operand\" \"w\"))))]\n  \"TARGET_SIMD\"\n  \"mls\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_mla\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_scalar<q>\")]\n )\n \n ;; Max/Min operations.\n@@ -1128,9 +824,7 @@\n \t\t    (match_operand:VQ_S 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"<su><maxmin>\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_minmax\")\n-   (set_attr \"type\" \"neon_minmax<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_minmax<q>\")]\n )\n \n ;; Move into low-half clearing high half to 0.\n@@ -1145,10 +839,7 @@\n    dup\\\\t%d0, %1.d[0]\n    fmov\\\\t%d0, %1\n    dup\\\\t%d0, %1\"\n-  [(set_attr \"v8type\" \"*,fmov,*\")\n-   (set_attr \"type\" \"neon_dup<q>,fmov,neon_dup<q>\")\n-   (set_attr \"simd_type\" \"simd_dup,*,simd_dup\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n+  [(set_attr \"type\" \"neon_dup<q>,fmov,neon_dup<q>\")\n    (set_attr \"simd\" \"yes,*,yes\")\n    (set_attr \"fp\" \"*,yes,*\")\n    (set_attr \"length\" \"4\")]\n@@ -1167,9 +858,7 @@\n   \"@\n    ins\\\\t%0.d[1], %1.d[0]\n    ins\\\\t%0.d[1], %1\"\n-  [(set_attr \"simd_type\" \"simd_ins,simd_ins\")\n-   (set_attr \"type\" \"neon_ins\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n+  [(set_attr \"type\" \"neon_ins\")\n    (set_attr \"length\" \"4\")]\n )\n \n@@ -1192,9 +881,7 @@\n        (truncate:<VNARROWQ> (match_operand:VQN 1 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"xtn\\\\t%0.<Vntype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_shiftn_imm\")\n-   (set_attr \"type\" \"neon_shift_imm_narrow_q\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm_narrow_q\")]\n )\n \n (define_expand \"vec_pack_trunc_<mode>\"\n@@ -1220,9 +907,7 @@\n \t (truncate:<VNARROWQ> (match_operand:VQN 2 \"register_operand\" \"w\"))))]\n  \"TARGET_SIMD\"\n  \"xtn\\\\t%0.<Vntype>, %1.<Vtype>\\;xtn2\\\\t%0.<V2ntype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_shiftn2_imm\")\n-   (set_attr \"type\" \"multiple\")\n-   (set_attr \"simd_mode\" \"<MODE>\")\n+  [(set_attr \"type\" \"multiple\")\n    (set_attr \"length\" \"8\")]\n )\n \n@@ -1236,9 +921,7 @@\n \t\t\t    )))]\n   \"TARGET_SIMD\"\n   \"<su>shll %0.<Vwtype>, %1.<Vhalftype>, 0\"\n-  [(set_attr \"simd_type\" \"simd_shiftl_imm\")\n-   (set_attr \"type\" \"neon_shift_imm_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_insn \"aarch64_simd_vec_unpack<su>_hi_<mode>\"\n@@ -1249,9 +932,7 @@\n \t\t\t    )))]\n   \"TARGET_SIMD\"\n   \"<su>shll2 %0.<Vwtype>, %1.<Vtype>, 0\"\n-  [(set_attr \"simd_type\" \"simd_shiftl_imm\")\n-   (set_attr \"type\" \"neon_shift_imm_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_expand \"vec_unpack<su>_hi_<mode>\"\n@@ -1293,9 +974,7 @@\n           (match_operand:<VWIDE> 1 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"<su>mlal\\t%0.<Vwtype>, %2.<Vhalftype>, %4.<Vhalftype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"*aarch64_<su>mlal_hi<mode>\"\n@@ -1311,9 +990,7 @@\n           (match_operand:<VWIDE> 1 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"<su>mlal2\\t%0.<Vwtype>, %2.<Vtype>, %4.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"*aarch64_<su>mlsl_lo<mode>\"\n@@ -1329,9 +1006,7 @@\n                  (match_dup 3))))))]\n   \"TARGET_SIMD\"\n   \"<su>mlsl\\t%0.<Vwtype>, %2.<Vhalftype>, %4.<Vhalftype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"*aarch64_<su>mlsl_hi<mode>\"\n@@ -1347,9 +1022,7 @@\n                  (match_dup 3))))))]\n   \"TARGET_SIMD\"\n   \"<su>mlsl2\\t%0.<Vwtype>, %2.<Vtype>, %4.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"*aarch64_<su>mlal<mode>\"\n@@ -1363,9 +1036,7 @@\n           (match_operand:<VWIDE> 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"<su>mlal\\t%0.<Vwtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"*aarch64_<su>mlsl<mode>\"\n@@ -1379,9 +1050,7 @@\n               (match_operand:VDW 3 \"register_operand\" \"w\")))))]\n   \"TARGET_SIMD\"\n   \"<su>mlsl\\t%0.<Vwtype>, %2.<Vtype>, %3.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mlal\")\n-   (set_attr \"type\" \"neon_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n )\n \n (define_insn \"aarch64_simd_vec_<su>mult_lo_<mode>\"\n@@ -1394,9 +1063,7 @@\n                            (match_dup 3)))))]\n   \"TARGET_SIMD\"\n   \"<su>mull\\\\t%0.<Vwtype>, %1.<Vhalftype>, %2.<Vhalftype>\"\n-  [(set_attr \"simd_type\" \"simd_mull\")\n-   (set_attr \"type\" \"neon_mul_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mul_<Vetype>_long\")]\n )\n \n (define_expand \"vec_widen_<su>mult_lo_<mode>\"\n@@ -1423,9 +1090,7 @@\n \t\t\t    (match_dup 3)))))]\n   \"TARGET_SIMD\"\n   \"<su>mull2\\\\t%0.<Vwtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mull\")\n-   (set_attr \"type\" \"neon_mul_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mul_<Vetype>_long\")]\n )\n \n (define_expand \"vec_widen_<su>mult_hi_<mode>\"\n@@ -1474,9 +1139,7 @@\n \t\t  (match_operand:VDQF 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fadd\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fadd\")\n-   (set_attr \"type\" \"neon_fp_addsub_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_addsub_<Vetype><q>\")]\n )\n \n (define_insn \"sub<mode>3\"\n@@ -1485,9 +1148,7 @@\n \t\t   (match_operand:VDQF 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fsub\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fadd\")\n-   (set_attr \"type\" \"neon_fp_addsub_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_addsub_<Vetype><q>\")]\n )\n \n (define_insn \"mul<mode>3\"\n@@ -1496,9 +1157,7 @@\n \t\t  (match_operand:VDQF 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fmul\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fmul\")\n-   (set_attr \"type\" \"neon_fp_mul_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mul_<Vetype><q>\")]\n )\n \n (define_insn \"div<mode>3\"\n@@ -1507,29 +1166,23 @@\n \t\t (match_operand:VDQF 2 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fdiv\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fdiv\")\n-   (set_attr \"type\" \"neon_fp_div_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_div_<Vetype><q>\")]\n )\n \n (define_insn \"neg<mode>2\"\n  [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n        (neg:VDQF (match_operand:VDQF 1 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fneg\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fnegabs\")\n-   (set_attr \"type\" \"neon_fp_neg_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_neg_<Vetype><q>\")]\n )\n \n (define_insn \"abs<mode>2\"\n  [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n        (abs:VDQF (match_operand:VDQF 1 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"fabs\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fnegabs\")\n-   (set_attr \"type\" \"neon_fp_abs_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_abs_<Vetype><q>\")]\n )\n \n (define_insn \"fma<mode>4\"\n@@ -1539,9 +1192,7 @@\n                 (match_operand:VDQF 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n  \"fmla\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fmla\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype><q>\")]\n )\n \n (define_insn \"*aarch64_fma4_elt<mode>\"\n@@ -1555,9 +1206,7 @@\n       (match_operand:VDQF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmla\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_fma4_elt_<vswap_width_name><mode>\"\n@@ -1571,9 +1220,7 @@\n       (match_operand:VDQSF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmla\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_fma4_elt_to_128df\"\n@@ -1585,9 +1232,7 @@\n       (match_operand:V2DF 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmla\\\\t%0.2d, %2.2d, %1.2d[0]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mla_d_scalar_q\")]\n )\n \n (define_insn \"*aarch64_fma4_elt_to_64v2df\"\n@@ -1600,9 +1245,7 @@\n       (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmla\\\\t%0.2d, %3.2d, %1.2d[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mla_d_scalar_q\")]\n )\n \n (define_insn \"fnma<mode>4\"\n@@ -1614,9 +1257,7 @@\n \t  (match_operand:VDQF 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n  \"fmls\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fmla\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype><q>\")]\n )\n \n (define_insn \"*aarch64_fnma4_elt<mode>\"\n@@ -1631,9 +1272,7 @@\n       (match_operand:VDQF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmls\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_fnma4_elt_<vswap_width_name><mode>\"\n@@ -1648,9 +1287,7 @@\n       (match_operand:VDQSF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmls\\\\t%0.<Vtype>, %3.<Vtype>, %1.<Vtype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"*aarch64_fnma4_elt_to_128df\"\n@@ -1663,9 +1300,7 @@\n       (match_operand:V2DF 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmls\\\\t%0.2d, %2.2d, %1.2d[0]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mla_d_scalar_q\")]\n )\n \n (define_insn \"*aarch64_fnma4_elt_to_64v2df\"\n@@ -1679,9 +1314,7 @@\n       (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmls\\\\t%0.2d, %3.2d, %1.2d[%2]\"\n-  [(set_attr \"simd_type\" \"simd_fmla_elt\")\n-   (set_attr \"type\" \"neon_fp_mla_d_scalar_q\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_mla_d_scalar_q\")]\n )\n \n ;; Vector versions of the floating-point frint patterns.\n@@ -1692,9 +1325,7 @@\n \t\t      FRINT))]\n   \"TARGET_SIMD\"\n   \"frint<frint_suffix>\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_frint\")\n-   (set_attr \"type\" \"neon_fp_round_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_round_<Vetype><q>\")]\n )\n \n ;; Vector versions of the fcvt standard patterns.\n@@ -1706,9 +1337,7 @@\n \t\t\t       FCVT)))]\n   \"TARGET_SIMD\"\n   \"fcvt<frint_suffix><su>\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fcvti\")\n-   (set_attr \"type\" \"neon_fp_to_int_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_to_int_<Vetype><q>\")]\n )\n \n (define_expand \"<optab><VDQF:mode><fcvt_target>2\"\n@@ -1740,9 +1369,7 @@\n \t  (match_operand:<FCVT_TARGET> 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"<su_optab>cvtf\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_icvtf\")\n-   (set_attr \"type\" \"neon_int_to_fp_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_int_to_fp_<Vetype><q>\")]\n )\n \n ;; Conversions between vectors of floats and doubles.\n@@ -1760,9 +1387,7 @@\n \t  )))]\n   \"TARGET_SIMD\"\n   \"fcvtl\\\\t%0.2d, %1.2s\"\n-  [(set_attr \"simd_type\" \"simd_fcvtl\")\n-   (set_attr \"type\" \"neon_fp_cvt_widen_s\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_widen_s\")]\n )\n \n (define_insn \"aarch64_float_extend_lo_v2df\"\n@@ -1771,9 +1396,7 @@\n \t  (match_operand:V2SF 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"fcvtl\\\\t%0.2d, %1.2s\"\n-  [(set_attr \"simd_type\" \"simd_fcvtl\")\n-   (set_attr \"type\" \"neon_fp_cvt_widen_s\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_widen_s\")]\n )\n \n (define_insn \"vec_unpacks_hi_v4sf\"\n@@ -1785,9 +1408,7 @@\n \t  )))]\n   \"TARGET_SIMD\"\n   \"fcvtl2\\\\t%0.2d, %1.4s\"\n-  [(set_attr \"simd_type\" \"simd_fcvtl\")\n-   (set_attr \"type\" \"neon_fp_cvt_widen_s\")\n-   (set_attr \"simd_mode\" \"V2DF\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_widen_s\")]\n )\n \n ;; Float narrowing operations.\n@@ -1798,9 +1419,7 @@\n \t(match_operand:V2DF 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"fcvtn\\\\t%0.2s, %1.2d\"\n-  [(set_attr \"simd_type\" \"simd_fcvtl\")\n-   (set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")\n-   (set_attr \"simd_mode\" \"V2SF\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")]\n )\n \n (define_insn \"aarch64_float_truncate_hi_v4sf\"\n@@ -1811,9 +1430,7 @@\n \t(match_operand:V2DF 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"fcvtn2\\\\t%0.4s, %2.2d\"\n-  [(set_attr \"simd_type\" \"simd_fcvtl\")\n-   (set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")\n-   (set_attr \"simd_mode\" \"V4SF\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")]\n )\n \n (define_expand \"vec_pack_trunc_v2df\"\n@@ -1859,9 +1476,7 @@\n \t\t\t      (match_operand:VDQF 3 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n  \"fmls\\\\t%0.<Vtype>, %2.<Vtype>, %3.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fmla\")\n-   (set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_mla_<Vetype>_scalar<q>\")]\n )\n \n ;; FP Max/Min\n@@ -1884,9 +1499,7 @@\n \t\t   (match_operand:VDQF 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"f<maxmin>nm\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fminmax\")\n-   (set_attr \"type\" \"neon_fp_minmax_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_minmax_<Vetype><q>\")]\n )\n \n (define_insn \"<maxmin_uns><mode>3\"\n@@ -1896,9 +1509,7 @@\n \t\t    FMAXMIN_UNS))]\n   \"TARGET_SIMD\"\n   \"<maxmin_uns_op>\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fminmax\")\n-   (set_attr \"type\" \"neon_fp_minmax_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_minmax_<Vetype><q>\")]\n )\n \n ;; 'across lanes' add.\n@@ -1909,9 +1520,7 @@\n \t\t    SUADDV))]\n  \"TARGET_SIMD\"\n  \"addv\\\\t%<Vetype>0, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addv\")\n-   (set_attr \"type\" \"neon_reduc_add<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_reduc_add<q>\")]\n )\n \n (define_insn \"reduc_<sur>plus_v2di\"\n@@ -1920,9 +1529,7 @@\n \t\t    SUADDV))]\n  \"TARGET_SIMD\"\n  \"addp\\\\t%d0, %1.2d\"\n-  [(set_attr \"simd_type\" \"simd_addv\")\n-   (set_attr \"type\" \"neon_reduc_add_q\")\n-   (set_attr \"simd_mode\" \"V2DI\")]\n+  [(set_attr \"type\" \"neon_reduc_add_q\")]\n )\n \n (define_insn \"reduc_<sur>plus_v2si\"\n@@ -1931,9 +1538,7 @@\n \t\t    SUADDV))]\n  \"TARGET_SIMD\"\n  \"addp\\\\t%0.2s, %1.2s, %1.2s\"\n-  [(set_attr \"simd_type\" \"simd_addv\")\n-   (set_attr \"type\" \"neon_reduc_add\")\n-   (set_attr \"simd_mode\" \"V2SI\")]\n+  [(set_attr \"type\" \"neon_reduc_add\")]\n )\n \n (define_insn \"reduc_<sur>plus_<mode>\"\n@@ -1942,9 +1547,7 @@\n \t\t    SUADDV))]\n  \"TARGET_SIMD\"\n  \"faddp\\\\t%<Vetype>0, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fadd\")\n-   (set_attr \"type\" \"neon_fp_reduc_add_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_reduc_add_<Vetype><q>\")]\n )\n \n (define_insn \"aarch64_addpv4sf\"\n@@ -1953,9 +1556,7 @@\n \t\t    UNSPEC_FADDV))]\n  \"TARGET_SIMD\"\n  \"faddp\\\\t%0.4s, %1.4s, %1.4s\"\n-  [(set_attr \"simd_type\" \"simd_fadd\")\n-   (set_attr \"type\" \"neon_fp_reduc_add_s_q\")\n-   (set_attr \"simd_mode\" \"V4SF\")]\n+  [(set_attr \"type\" \"neon_fp_reduc_add_s_q\")]\n )\n \n (define_expand \"reduc_<sur>plus_v4sf\"\n@@ -1975,9 +1576,7 @@\n        (clz:VDQ_BHSI (match_operand:VDQ_BHSI 1 \"register_operand\" \"w\")))]\n  \"TARGET_SIMD\"\n  \"clz\\\\t%0.<Vtype>, %1.<Vtype>\"\n- [(set_attr \"simd_type\" \"simd_cls\")\n-  (set_attr \"type\" \"neon_cls<q>\")\n-  (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_cls<q>\")]\n )\n \n ;; 'across lanes' max and min ops.\n@@ -1988,9 +1587,7 @@\n \t\t    MAXMINV))]\n  \"TARGET_SIMD\"\n  \"<maxmin_uns_op>v\\\\t%<Vetype>0, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_minmaxv\")\n-   (set_attr \"type\" \"neon_reduc_minmax<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_reduc_minmax<q>\")]\n )\n \n (define_insn \"reduc_<maxmin_uns>_v2di\"\n@@ -1999,9 +1596,7 @@\n \t\t    MAXMINV))]\n  \"TARGET_SIMD\"\n  \"<maxmin_uns_op>p\\\\t%d0, %1.2d\"\n-  [(set_attr \"simd_type\" \"simd_minmaxv\")\n-   (set_attr \"type\" \"neon_reduc_minmax_q\")\n-   (set_attr \"simd_mode\" \"V2DI\")]\n+  [(set_attr \"type\" \"neon_reduc_minmax_q\")]\n )\n \n (define_insn \"reduc_<maxmin_uns>_v2si\"\n@@ -2010,9 +1605,7 @@\n \t\t    MAXMINV))]\n  \"TARGET_SIMD\"\n  \"<maxmin_uns_op>p\\\\t%0.2s, %1.2s, %1.2s\"\n-  [(set_attr \"simd_type\" \"simd_minmaxv\")\n-   (set_attr \"type\" \"neon_reduc_minmax\")\n-   (set_attr \"simd_mode\" \"V2SI\")]\n+  [(set_attr \"type\" \"neon_reduc_minmax\")]\n )\n \n (define_insn \"reduc_<maxmin_uns>_<mode>\"\n@@ -2021,9 +1614,7 @@\n \t\t    FMAXMINV))]\n  \"TARGET_SIMD\"\n  \"<maxmin_uns_op>p\\\\t%<Vetype>0, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fminmaxv\")\n-   (set_attr \"type\" \"neon_fp_reduc_minmax_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_reduc_minmax_<Vetype><q>\")]\n )\n \n (define_insn \"reduc_<maxmin_uns>_v4sf\"\n@@ -2032,9 +1623,7 @@\n \t\t    FMAXMINV))]\n  \"TARGET_SIMD\"\n  \"<maxmin_uns_op>v\\\\t%s0, %1.4s\"\n-  [(set_attr \"simd_type\" \"simd_fminmaxv\")\n-   (set_attr \"type\" \"neon_fp_reduc_minmax_s_q\")\n-   (set_attr \"simd_mode\" \"V4SF\")]\n+  [(set_attr \"type\" \"neon_fp_reduc_minmax_s_q\")]\n )\n \n ;; aarch64_simd_bsl may compile to any of bsl/bif/bit depending on register\n@@ -2069,8 +1658,7 @@\n   bsl\\\\t%0.<Vbtype>, %2.<Vbtype>, %3.<Vbtype>\n   bit\\\\t%0.<Vbtype>, %2.<Vbtype>, %1.<Vbtype>\n   bif\\\\t%0.<Vbtype>, %3.<Vbtype>, %1.<Vbtype>\"\n-  [(set_attr \"simd_mode\" \"<MODE>\")\n-   (set_attr \"type\" \"neon_bsl<q>\")]\n+  [(set_attr \"type\" \"neon_bsl<q>\")]\n )\n \n (define_expand \"aarch64_simd_bsl<mode>\"\n@@ -2435,9 +2023,7 @@\n \t    (parallel [(match_operand:SI 2 \"immediate_operand\" \"i\")]))))]\n   \"TARGET_SIMD\"\n   \"smov\\\\t%<GPI:w>0, %1.<VDQQH:Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_movgp\")\n-   (set_attr \"type\" \"neon_to_gp<q>\")\n-   (set_attr \"simd_mode\" \"<VDQQH:MODE>\")]\n+  [(set_attr \"type\" \"neon_to_gp<q>\")]\n )\n \n (define_insn \"*aarch64_get_lane_zero_extendsi<mode>\"\n@@ -2448,9 +2034,7 @@\n \t    (parallel [(match_operand:SI 2 \"immediate_operand\" \"i\")]))))]\n   \"TARGET_SIMD\"\n   \"umov\\\\t%w0, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_movgp\")\n-   (set_attr \"type\" \"neon_to_gp<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_to_gp<q>\")]\n )\n \n ;; Lane extraction of a value, neither sign nor zero extension\n@@ -2464,9 +2048,7 @@\n   \"@\n    umov\\\\t%<vwcore>0, %1.<Vetype>[%2]\n    dup\\\\t%<Vetype>0, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_movgp, simd_dup\")\n-   (set_attr \"type\" \"neon_to_gp<q>, neon_dup<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_to_gp<q>, neon_dup<q>\")]\n )\n \n (define_expand \"aarch64_get_lanedi\"\n@@ -2589,9 +2171,7 @@\n \t   (match_operand:VDIC 2 \"aarch64_simd_imm_zero\" \"Dz\")))]\n   \"TARGET_SIMD\"\n   \"mov\\\\t%0.8b, %1.8b\"\n-  [(set_attr \"simd_type\" \"simd_move\")\n-   (set_attr \"type\" \"neon_move<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_move<q>\")]\n )\n \n (define_insn_and_split \"aarch64_combine<mode>\"\n@@ -2634,9 +2214,7 @@\n \t\t\t   (match_dup 3)))))]\n   \"TARGET_SIMD\"\n   \"<ANY_EXTEND:su><ADDSUB:optab>l2\\t%0.<Vwtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addl\")\n-   (set_attr \"type\" \"neon_<ADDSUB:optab>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<ADDSUB:optab>_long\")]\n )\n \n (define_insn \"aarch64_<ANY_EXTEND:su><ADDSUB:optab>l<mode>_lo_internal\"\n@@ -2649,9 +2227,7 @@\n                            (match_dup 3)))))]\n   \"TARGET_SIMD\"\n   \"<ANY_EXTEND:su><ADDSUB:optab>l\\t%0.<Vwtype>, %1.<Vhalftype>, %2.<Vhalftype>\"\n-  [(set_attr \"simd_type\" \"simd_addl\")\n-   (set_attr \"type\" \"neon_<ADDSUB:optab>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<ADDSUB:optab>_long\")]\n )\n \n \n@@ -2711,9 +2287,7 @@\n \t\t\t   (match_operand:VDW 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"<ANY_EXTEND:su><ADDSUB:optab>l %0.<Vwtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addl\")\n-   (set_attr \"type\" \"neon_<ADDSUB:optab>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<ADDSUB:optab>_long\")]\n )\n \n ;; <su><addsub>w<q>.\n@@ -2725,9 +2299,7 @@\n \t\t\t  (match_operand:VDW 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n   \"<ANY_EXTEND:su><ADDSUB:optab>w\\\\t%0.<Vwtype>, %1.<Vwtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addl\")\n-   (set_attr \"type\" \"neon_<ADDSUB:optab>_widen\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<ADDSUB:optab>_widen\")]\n )\n \n (define_insn \"aarch64_<ANY_EXTEND:su><ADDSUB:optab>w2<mode>_internal\"\n@@ -2739,9 +2311,7 @@\n \t\t\t   (match_operand:VQW 3 \"vect_par_cnst_hi_half\" \"\")))))]\n   \"TARGET_SIMD\"\n   \"<ANY_EXTEND:su><ADDSUB:optab>w2\\\\t%0.<Vwtype>, %1.<Vwtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addl\")\n-   (set_attr \"type\" \"neon_<ADDSUB:optab>_widen\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<ADDSUB:optab>_widen\")]\n )\n \n (define_expand \"aarch64_saddw2<mode>\"\n@@ -2802,9 +2372,7 @@\n \t\t     HADDSUB))]\n   \"TARGET_SIMD\"\n   \"<sur>h<addsub>\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_<addsub>_halve<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<addsub>_halve<q>\")]\n )\n \n ;; <r><addsub>hn<q>.\n@@ -2816,9 +2384,7 @@\n                            ADDSUBHN))]\n   \"TARGET_SIMD\"\n   \"<sur><addsub>hn\\\\t%0.<Vntype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addn\")\n-   (set_attr \"type\" \"neon_<addsub>_halve_narrow_q\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<addsub>_halve_narrow_q\")]\n )\n \n (define_insn \"aarch64_<sur><addsub>hn2<mode>\"\n@@ -2829,9 +2395,7 @@\n                             ADDSUBHN2))]\n   \"TARGET_SIMD\"\n   \"<sur><addsub>hn2\\\\t%0.<V2ntype>, %2.<Vtype>, %3.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_addn2\")\n-   (set_attr \"type\" \"neon_<addsub>_halve_narrow_q\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<addsub>_halve_narrow_q\")]\n )\n \n ;; pmul.\n@@ -2843,9 +2407,7 @@\n \t\t   UNSPEC_PMUL))]\n  \"TARGET_SIMD\"\n  \"pmul\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_mul\")\n-   (set_attr \"type\" \"neon_mul_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_mul_<Vetype><q>\")]\n )\n \n ;; <su>q<addsub>\n@@ -2856,9 +2418,7 @@\n \t\t\t  (match_operand:VSDQ_I 2 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"<su_optab><optab>\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_<optab><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<optab><q>\")]\n )\n \n ;; suqadd and usqadd\n@@ -2870,9 +2430,7 @@\n \t\t       USSUQADD))]\n   \"TARGET_SIMD\"\n   \"<sur>qadd\\\\t%<v>0<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_add\")\n-   (set_attr \"type\" \"neon_qadd<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_qadd<q>\")]\n )\n \n ;; sqmovun\n@@ -2883,9 +2441,7 @@\n                             UNSPEC_SQXTUN))]\n    \"TARGET_SIMD\"\n    \"sqxtun\\\\t%<vn2>0<Vmntype>, %<v>1<Vmtype>\"\n-   [(set_attr \"simd_type\" \"simd_sat_shiftn_imm\")\n-    (set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")\n-    (set_attr \"simd_mode\" \"<MODE>\")]\n+   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n  )\n \n ;; sqmovn and uqmovn\n@@ -2896,9 +2452,7 @@\n                             SUQMOVN))]\n   \"TARGET_SIMD\"\n   \"<sur>qxtn\\\\t%<vn2>0<Vmntype>, %<v>1<Vmtype>\"\n-   [(set_attr \"simd_type\" \"simd_sat_shiftn_imm\")\n-    (set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")\n-    (set_attr \"simd_mode\" \"<MODE>\")]\n+   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n  )\n \n ;; <su>q<absneg>\n@@ -2909,9 +2463,7 @@\n \t  (match_operand:VSDQ_I_BHSI 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"s<optab>\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_negabs\")\n-   (set_attr \"type\" \"neon_<optab><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_<optab><q>\")]\n )\n \n ;; sq<r>dmulh.\n@@ -2924,9 +2476,7 @@\n \t VQDMULH))]\n   \"TARGET_SIMD\"\n   \"sq<r>dmulh\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype><q>\")]\n )\n \n ;; sq<r>dmulh_lane\n@@ -2943,9 +2493,7 @@\n   \"*\n    aarch64_simd_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<VCOND>mode));\n    return \\\"sq<r>dmulh\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vetype>[%3]\\\";\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"aarch64_sq<r>dmulh_laneq<mode>\"\n@@ -2960,9 +2508,7 @@\n   \"*\n    aarch64_simd_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<VCONQ>mode));\n    return \\\"sq<r>dmulh\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vetype>[%3]\\\";\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")]\n )\n \n (define_insn \"aarch64_sq<r>dmulh_lane<mode>\"\n@@ -2977,9 +2523,7 @@\n   \"*\n    aarch64_simd_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<VCONQ>mode));\n    return \\\"sq<r>dmulh\\\\t%<v>0, %<v>1, %2.<v>[%3]\\\";\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar<q>\")]\n )\n \n ;; vqdml[sa]l\n@@ -2997,9 +2541,7 @@\n \t      (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %<v>3<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_long\")]\n )\n \n ;; vqdml[sa]l_lane\n@@ -3021,9 +2563,7 @@\n \t    (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %3.<Vetype>[%4]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n (define_insn \"aarch64_sqdml<SBINQOPS:as>l_lane<mode>_internal\"\n@@ -3042,9 +2582,7 @@\n \t    (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %3.<Vetype>[%4]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmlal_lane<mode>\"\n@@ -3123,9 +2661,7 @@\n \t      (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %3.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n ;; sqdml[as]l2\n@@ -3147,9 +2683,7 @@\n              (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l2\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %<v>3<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmlal2<mode>\"\n@@ -3199,9 +2733,7 @@\n \t      (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l2\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %3.<Vetype>[%4]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmlal2_lane<mode>\"\n@@ -3284,9 +2816,7 @@\n \t    (const_int 1))))]\n   \"TARGET_SIMD\"\n   \"sqdml<SBINQOPS:as>l2\\\\t%<vw2>0<Vmwtype>, %<v>2<Vmtype>, %3.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mlal\")\n-   (set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mla_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmlal2_n<mode>\"\n@@ -3330,9 +2860,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_long\")]\n )\n \n ;; vqdmull_lane\n@@ -3352,9 +2880,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %2.<Vetype>[%3]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n (define_insn \"aarch64_sqdmull_lane<mode>_internal\"\n@@ -3371,9 +2897,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %2.<Vetype>[%3]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmull_lane<mode>\"\n@@ -3417,9 +2941,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %2.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n ;; vqdmull2\n@@ -3442,9 +2964,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull2\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmull2<mode>\"\n@@ -3478,9 +2998,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull2\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %2.<Vetype>[%3]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmull2_lane<mode>\"\n@@ -3530,9 +3048,7 @@\n \t     (const_int 1)))]\n   \"TARGET_SIMD\"\n   \"sqdmull2\\\\t%<vw2>0<Vmwtype>, %<v>1<Vmtype>, %2.<Vetype>[0]\"\n-  [(set_attr \"simd_type\" \"simd_sat_mul\")\n-   (set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_mul_<Vetype>_scalar_long\")]\n )\n \n (define_expand \"aarch64_sqdmull2_n<mode>\"\n@@ -3557,9 +3073,7 @@\n          VSHL))]\n   \"TARGET_SIMD\"\n   \"<sur>shl\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\";\n-  [(set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"type\" \"neon_shift_reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n \n@@ -3573,9 +3087,7 @@\n          VQSHL))]\n   \"TARGET_SIMD\"\n   \"<sur>q<r>shl\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\";\n-  [(set_attr \"simd_type\" \"simd_sat_shift\")\n-   (set_attr \"type\" \"neon_sat_shift_reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_shift_reg<q>\")]\n )\n \n ;; vshll_n\n@@ -3596,9 +3108,7 @@\n   else {\n     return \\\"<sur>shll\\\\t%0.<Vwtype>, %1.<Vtype>, %2\\\";\n   }\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n ;; vshll_high_n\n@@ -3619,9 +3129,7 @@\n   else {\n     return \\\"<sur>shll2\\\\t%0.<Vwtype>, %1.<Vtype>, %2\\\";\n   }\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm_long\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n ;; vrshr_n\n@@ -3636,9 +3144,7 @@\n   int bit_width = GET_MODE_UNIT_SIZE (<MODE>mode) * BITS_PER_UNIT;\n   aarch64_simd_const_bounds (operands[2], 1, bit_width + 1);\n   return \\\"<sur>shr\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %2\\\";\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_sat_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n ;; v(r)sra_n\n@@ -3654,9 +3160,7 @@\n   int bit_width = GET_MODE_UNIT_SIZE (<MODE>mode) * BITS_PER_UNIT;\n   aarch64_simd_const_bounds (operands[3], 1, bit_width + 1);\n   return \\\"<sur>sra\\\\t%<v>0<Vmtype>, %<v>2<Vmtype>, %3\\\";\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm_acc\")\n-   (set_attr \"type\" \"neon_shift_acc<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_acc<q>\")]\n )\n \n ;; vs<lr>i_n\n@@ -3673,9 +3177,7 @@\n   aarch64_simd_const_bounds (operands[3], 1 - <VSLRI:offsetlr>,\n                              bit_width - <VSLRI:offsetlr> + 1);\n   return \\\"s<lr>i\\\\t%<v>0<Vmtype>, %<v>2<Vmtype>, %3\\\";\"\n-  [(set_attr \"simd_type\" \"simd_shift_imm\")\n-   (set_attr \"type\" \"neon_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n ;; vqshl(u)\n@@ -3690,9 +3192,7 @@\n   int bit_width = GET_MODE_UNIT_SIZE (<MODE>mode) * BITS_PER_UNIT;\n   aarch64_simd_const_bounds (operands[2], 0, bit_width);\n   return \\\"<sur>qshl<u>\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %2\\\";\"\n-  [(set_attr \"simd_type\" \"simd_sat_shift_imm\")\n-   (set_attr \"type\" \"neon_sat_shift_imm<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n \n@@ -3708,9 +3208,7 @@\n   int bit_width = GET_MODE_UNIT_SIZE (<MODE>mode) * BITS_PER_UNIT;\n   aarch64_simd_const_bounds (operands[2], 1, bit_width + 1);\n   return \\\"<sur>q<r>shr<u>n\\\\t%<vn2>0<Vmntype>, %<v>1<Vmtype>, %2\\\";\"\n-  [(set_attr \"simd_type\" \"simd_sat_shiftn_imm\")\n-   (set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n \n@@ -3729,9 +3227,7 @@\n   \"@\n   cm<n_optab>\\t%<v>0<Vmtype>, %<v><cmp_1><Vmtype>, %<v><cmp_2><Vmtype>\n   cm<optab>\\t%<v>0<Vmtype>, %<v>1<Vmtype>, #0\"\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_compare<q>, neon_compare_zero<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_compare<q>, neon_compare_zero<q>\")]\n )\n \n (define_insn_and_split \"aarch64_cm<optab>di\"\n@@ -3760,9 +3256,7 @@\n     emit_insn (gen_cstoredi_neg (operands[0], comparison, cc_reg));\n     DONE;\n   }\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_compare, neon_compare_zero, multiple\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+  [(set_attr \"type\" \"neon_compare, neon_compare_zero, multiple\")]\n )\n \n ;; cm(hs|hi)\n@@ -3776,9 +3270,7 @@\n \t  )))]\n   \"TARGET_SIMD\"\n   \"cm<n_optab>\\t%<v>0<Vmtype>, %<v><cmp_1><Vmtype>, %<v><cmp_2><Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_compare<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_compare<q>\")]\n )\n \n (define_insn_and_split \"aarch64_cm<optab>di\"\n@@ -3806,9 +3298,7 @@\n     emit_insn (gen_cstoredi_neg (operands[0], comparison, cc_reg));\n     DONE;\n   }\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_compare, neon_compare_zero\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+  [(set_attr \"type\" \"neon_compare, neon_compare_zero\")]\n )\n \n ;; cmtst\n@@ -3823,9 +3313,7 @@\n \t    (vec_duplicate:<V_cmp_result> (const_int 0)))))]\n   \"TARGET_SIMD\"\n   \"cmtst\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_tst<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_tst<q>\")]\n )\n \n (define_insn_and_split \"aarch64_cmtstdi\"\n@@ -3855,9 +3343,7 @@\n     emit_insn (gen_cstoredi_neg (operands[0], comparison, cc_reg));\n     DONE;\n   }\n-  [(set_attr \"simd_type\" \"simd_cmp\")\n-   (set_attr \"type\" \"neon_tst\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+  [(set_attr \"type\" \"neon_tst\")]\n )\n \n ;; fcm(eq|ge|gt|le|lt)\n@@ -3873,9 +3359,7 @@\n   \"@\n   fcm<n_optab>\\t%<v>0<Vmtype>, %<v><cmp_1><Vmtype>, %<v><cmp_2><Vmtype>\n   fcm<optab>\\t%<v>0<Vmtype>, %<v>1<Vmtype>, 0\"\n-  [(set_attr \"simd_type\" \"simd_fcmp\")\n-   (set_attr \"type\" \"neon_fp_compare_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_compare_<Vetype><q>\")]\n )\n \n ;; fac(ge|gt)\n@@ -3891,9 +3375,7 @@\n   )))]\n   \"TARGET_SIMD\"\n   \"fac<n_optab>\\t%<v>0<Vmtype>, %<v><cmp_1><Vmtype>, %<v><cmp_2><Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_fcmp\")\n-   (set_attr \"type\" \"neon_fp_compare_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_compare_<Vetype><q>\")]\n )\n \n ;; addp\n@@ -3906,9 +3388,7 @@\n           UNSPEC_ADDP))]\n   \"TARGET_SIMD\"\n   \"addp\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_reduc_add<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_reduc_add<q>\")]\n )\n \n (define_insn \"aarch64_addpdi\"\n@@ -3918,9 +3398,7 @@\n           UNSPEC_ADDP))]\n   \"TARGET_SIMD\"\n   \"addp\\t%d0, %1.2d\"\n-  [(set_attr \"simd_type\" \"simd_add\")\n-   (set_attr \"type\" \"neon_reduc_add\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+  [(set_attr \"type\" \"neon_reduc_add\")]\n )\n \n ;; sqrt\n@@ -3930,9 +3408,7 @@\n         (sqrt:VDQF (match_operand:VDQF 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n   \"fsqrt\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_fsqrt\")\n-   (set_attr \"type\" \"neon_fp_sqrt_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_sqrt_<Vetype><q>\")]\n )\n \n ;; Patterns for vector struct loads and stores.\n@@ -3944,9 +3420,8 @@\n \t\t   UNSPEC_LD2))]\n   \"TARGET_SIMD\"\n   \"ld2\\\\t{%S0.<Vtype> - %T0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load2\")\n-   (set_attr \"type\" \"neon_load2_2reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load2_2reg<q>\")]\n+)\n \n (define_insn \"vec_store_lanesoi<mode>\"\n   [(set (match_operand:OI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -3955,9 +3430,8 @@\n                    UNSPEC_ST2))]\n   \"TARGET_SIMD\"\n   \"st2\\\\t{%S1.<Vtype> - %T1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store2\")\n-   (set_attr \"type\" \"neon_store2_2reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store2_2reg<q>\")]\n+)\n \n (define_insn \"vec_load_lanesci<mode>\"\n   [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n@@ -3966,9 +3440,8 @@\n \t\t   UNSPEC_LD3))]\n   \"TARGET_SIMD\"\n   \"ld3\\\\t{%S0.<Vtype> - %U0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load3\")\n-   (set_attr \"type\" \"neon_load3_3reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n+)\n \n (define_insn \"vec_store_lanesci<mode>\"\n   [(set (match_operand:CI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -3977,9 +3450,8 @@\n                    UNSPEC_ST3))]\n   \"TARGET_SIMD\"\n   \"st3\\\\t{%S1.<Vtype> - %U1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store3\")\n-   (set_attr \"type\" \"neon_store3_3reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store3_3reg<q>\")]\n+)\n \n (define_insn \"vec_load_lanesxi<mode>\"\n   [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n@@ -3988,9 +3460,8 @@\n \t\t   UNSPEC_LD4))]\n   \"TARGET_SIMD\"\n   \"ld4\\\\t{%S0.<Vtype> - %V0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load4\")\n-   (set_attr \"type\" \"neon_load4_4reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n+)\n \n (define_insn \"vec_store_lanesxi<mode>\"\n   [(set (match_operand:XI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -3999,9 +3470,8 @@\n                    UNSPEC_ST4))]\n   \"TARGET_SIMD\"\n   \"st4\\\\t{%S1.<Vtype> - %V1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store4\")\n-   (set_attr \"type\" \"neon_store4_4reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store4_4reg<q>\")]\n+)\n \n ;; Reload patterns for AdvSIMD register list operands.\n \n@@ -4033,11 +3503,10 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"simd_type\" \"simd_move,simd_store<nregs>,simd_load<nregs>\")\n-   (set_attr \"type\" \"neon_move,neon_store<nregs>_<nregs>reg_q,\\\n+  [(set_attr \"type\" \"neon_move,neon_store<nregs>_<nregs>reg_q,\\\n                      neon_load<nregs>_<nregs>reg_q\")\n-   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))]\n+)\n \n (define_split\n   [(set (match_operand:OI 0 \"register_operand\" \"\")\n@@ -4119,9 +3588,8 @@\n \t     (vec_duplicate:VD (const_int 0)))) 0))]\n   \"TARGET_SIMD\"\n   \"ld2\\\\t{%S0.<Vtype> - %T0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load2\")\n-   (set_attr \"type\" \"neon_load2_2reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load2_2reg<q>\")]\n+)\n \n (define_insn \"aarch64_ld2<mode>_dreg\"\n   [(set (match_operand:OI 0 \"register_operand\" \"=w\")\n@@ -4137,9 +3605,8 @@\n \t     (const_int 0))) 0))]\n   \"TARGET_SIMD\"\n   \"ld1\\\\t{%S0.1d - %T0.1d}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load2\")\n-   (set_attr \"type\" \"neon_load1_2reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load1_2reg<q>\")]\n+)\n \n (define_insn \"aarch64_ld3<mode>_dreg\"\n   [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n@@ -4160,9 +3627,8 @@\n \t     (vec_duplicate:VD (const_int 0)))) 0))]\n   \"TARGET_SIMD\"\n   \"ld3\\\\t{%S0.<Vtype> - %U0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load3\")\n-   (set_attr \"type\" \"neon_load3_3reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n+)\n \n (define_insn \"aarch64_ld3<mode>_dreg\"\n   [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n@@ -4183,9 +3649,8 @@\n \t     (const_int 0))) 0))]\n   \"TARGET_SIMD\"\n   \"ld1\\\\t{%S0.1d - %U0.1d}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load3\")\n-   (set_attr \"type\" \"neon_load1_3reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load1_3reg<q>\")]\n+)\n \n (define_insn \"aarch64_ld4<mode>_dreg\"\n   [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n@@ -4211,9 +3676,8 @@\n \t       (vec_duplicate:VD (const_int 0))))) 0))]\n   \"TARGET_SIMD\"\n   \"ld4\\\\t{%S0.<Vtype> - %V0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load4\")\n-   (set_attr \"type\" \"neon_load4_4reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n+)\n \n (define_insn \"aarch64_ld4<mode>_dreg\"\n   [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n@@ -4239,9 +3703,8 @@\n \t       (const_int 0)))) 0))]\n   \"TARGET_SIMD\"\n   \"ld1\\\\t{%S0.1d - %V0.1d}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load4\")\n-   (set_attr \"type\" \"neon_load1_4reg<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load1_4reg<q>\")]\n+)\n \n (define_expand \"aarch64_ld<VSTRUCT:nregs><VDC:mode>\"\n  [(match_operand:VSTRUCT 0 \"register_operand\" \"=w\")\n@@ -4355,9 +3818,7 @@\n \t\t   UNSPEC_TBL))]\n   \"TARGET_SIMD\"\n   \"tbl\\\\t%0.<Vtype>, {%1.16b}, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_tbl\")\n-   (set_attr \"type\" \"neon_tbl1<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_tbl1<q>\")]\n )\n \n ;; Two source registers.\n@@ -4369,9 +3830,7 @@\n \t\t      UNSPEC_TBL))]\n   \"TARGET_SIMD\"\n   \"tbl\\\\t%0.16b, {%S1.16b - %T1.16b}, %2.16b\"\n-  [(set_attr \"simd_type\" \"simd_tbl\")\n-   (set_attr \"type\" \"neon_tbl2_q\")\n-   (set_attr \"simd_mode\" \"V16QI\")]\n+  [(set_attr \"type\" \"neon_tbl2_q\")]\n )\n \n (define_insn_and_split \"aarch64_combinev16qi\"\n@@ -4397,9 +3856,7 @@\n \t\t       PERMUTE))]\n   \"TARGET_SIMD\"\n   \"<PERMUTE:perm_insn><PERMUTE:perm_hilo>\\\\t%0.<Vtype>, %1.<Vtype>, %2.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_<PERMUTE:perm_insn>\")\n-   (set_attr \"type\" \"neon_permute<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_permute<q>\")]\n )\n \n (define_insn \"aarch64_st2<mode>_dreg\"\n@@ -4409,9 +3866,8 @@\n                    UNSPEC_ST2))]\n   \"TARGET_SIMD\"\n   \"st2\\\\t{%S1.<Vtype> - %T1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store2\")\n-   (set_attr \"type\" \"neon_store2_2reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store2_2reg\")]\n+)\n \n (define_insn \"aarch64_st2<mode>_dreg\"\n   [(set (match_operand:TI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -4420,9 +3876,8 @@\n                    UNSPEC_ST2))]\n   \"TARGET_SIMD\"\n   \"st1\\\\t{%S1.1d - %T1.1d}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store2\")\n-   (set_attr \"type\" \"neon_store1_2reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store1_2reg\")]\n+)\n \n (define_insn \"aarch64_st3<mode>_dreg\"\n   [(set (match_operand:EI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -4431,9 +3886,8 @@\n                    UNSPEC_ST3))]\n   \"TARGET_SIMD\"\n   \"st3\\\\t{%S1.<Vtype> - %U1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store3\")\n-   (set_attr \"type\" \"neon_store3_3reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store3_3reg\")]\n+)\n \n (define_insn \"aarch64_st3<mode>_dreg\"\n   [(set (match_operand:EI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -4442,9 +3896,8 @@\n                    UNSPEC_ST3))]\n   \"TARGET_SIMD\"\n   \"st1\\\\t{%S1.1d - %U1.1d}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store3\")\n-   (set_attr \"type\" \"neon_store1_3reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store1_3reg\")]\n+)\n \n (define_insn \"aarch64_st4<mode>_dreg\"\n   [(set (match_operand:OI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -4453,9 +3906,8 @@\n                    UNSPEC_ST4))]\n   \"TARGET_SIMD\"\n   \"st4\\\\t{%S1.<Vtype> - %V1.<Vtype>}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store4\")\n-   (set_attr \"type\" \"neon_store4_4reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store4_4reg\")]\n+)\n \n (define_insn \"aarch64_st4<mode>_dreg\"\n   [(set (match_operand:OI 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n@@ -4464,9 +3916,8 @@\n                    UNSPEC_ST4))]\n   \"TARGET_SIMD\"\n   \"st1\\\\t{%S1.1d - %V1.1d}, %0\"\n-  [(set_attr \"simd_type\" \"simd_store4\")\n-   (set_attr \"type\" \"neon_store1_4reg\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_store1_4reg\")]\n+)\n \n (define_expand \"aarch64_st<VSTRUCT:nregs><VDC:mode>\"\n  [(match_operand:DI 0 \"register_operand\" \"r\")\n@@ -4544,19 +3995,16 @@\n \t  (match_operand:<VEL> 1 \"aarch64_simd_struct_operand\" \"Utv\")))]\n   \"TARGET_SIMD\"\n   \"ld1r\\\\t{%0.<Vtype>}, %1\"\n-  [(set_attr \"simd_type\" \"simd_load1r\")\n-   (set_attr \"type\" \"neon_load1_all_lanes\")\n-   (set_attr \"simd_mode\" \"<MODE>\")])\n+  [(set_attr \"type\" \"neon_load1_all_lanes\")]\n+)\n \n (define_insn \"aarch64_frecpe<mode>\"\n   [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n \t(unspec:VDQF [(match_operand:VDQF 1 \"register_operand\" \"w\")]\n \t\t    UNSPEC_FRECPE))]\n   \"TARGET_SIMD\"\n   \"frecpe\\\\t%0.<Vtype>, %1.<Vtype>\"\n-  [(set_attr \"simd_type\" \"simd_frecpe\")\n-   (set_attr \"type\" \"neon_fp_recpe_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_recpe_<Vetype><q>\")]\n )\n \n (define_insn \"aarch64_frecp<FRECP:frecp_suffix><mode>\"\n@@ -4565,9 +4013,7 @@\n \t\t    FRECP))]\n   \"TARGET_SIMD\"\n   \"frecp<FRECP:frecp_suffix>\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"simd_type\" \"simd_frecp<FRECP:frecp_suffix>\")\n-   (set_attr \"type\" \"neon_fp_recp<FRECP:frecp_suffix>_<GPF:Vetype><GPF:q>\")\n-   (set_attr \"mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_recp<FRECP:frecp_suffix>_<GPF:Vetype><GPF:q>\")]\n )\n \n (define_insn \"aarch64_frecps<mode>\"\n@@ -4577,9 +4023,7 @@\n \t\t    UNSPEC_FRECPS))]\n   \"TARGET_SIMD\"\n   \"frecps\\\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>2<Vmtype>\"\n-  [(set_attr \"simd_type\" \"simd_frecps\")\n-   (set_attr \"type\" \"neon_fp_recps_<Vetype><q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_fp_recps_<Vetype><q>\")]\n )\n \n ;; Standard pattern name vec_extract<mode>.\n@@ -4594,7 +4038,6 @@\n   umov\\\\t%<vw>0, %1.<Vetype>[%2]\n   dup\\\\t%<Vetype>0, %1.<Vetype>[%2]\n   st1\\\\t{%1.<Vetype>}[%2], %0\"\n-  [(set_attr \"simd_type\" \"simd_movgp, simd_dup, simd_store1s\")\n-   (set_attr \"type\" \"neon_to_gp<q>, neon_dup<q>, neon_store1_one_lane<q>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+  [(set_attr \"type\" \"neon_to_gp<q>, neon_dup<q>, neon_store1_one_lane<q>\")]\n )\n+"}, {"sha": "47f3eb3f653dd199890db35f2ab4a3c56c3a1631", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 17, "deletions": 31, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ec30368544d09a0cd1423b2eefc2496bb29632/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=78ec30368544d09a0cd1423b2eefc2496bb29632", "patch": "@@ -793,11 +793,10 @@\n      }\n }\n   [(set_attr \"v8type\" \"move,alu,alu,load1,load1,store1,store1,*,*,*\")\n-   (set_attr \"type\" \"mov_reg,mov_imm,mov_imm,load1,load1,store1,store1,*,*,*\")\n-   (set_attr \"simd_type\" \"*,*,simd_move_imm,*,*,*,*,simd_movgp,simd_dupgp,simd_dup\")\n+   (set_attr \"type\" \"mov_reg,mov_imm,mov_imm,load1,load1,store1,store1,\\\n+                     neon_from_gp<q>,neon_from_gp<q>, neon_dup\")\n    (set_attr \"simd\" \"*,*,yes,*,*,*,*,yes,yes,yes\")\n-   (set_attr \"mode\" \"<MODE>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+   (set_attr \"mode\" \"<MODE>\")]\n )\n \n (define_expand \"mov<mode>\"\n@@ -912,13 +911,13 @@\n    str\\\\t%q1, %0\"\n   [(set_attr \"v8type\" \"move2,fmovi2f,fmovf2i,*, \\\n \t\t       load2,store2,store2,fpsimd_load,fpsimd_store\")\n-   (set_attr \"type\" \"multiple,f_mcr,f_mrc,*, \\\n+   (set_attr \"type\" \"multiple,f_mcr,f_mrc,neon_logic_q, \\\n \t\t             load2,store2,store2,f_loadd,f_stored\")\n-   (set_attr \"simd_type\" \"*,*,*,simd_move,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,TI,DI,DI,DI,TI,TI\")\n    (set_attr \"length\" \"8,8,8,4,4,4,4,4,4\")\n-   (set_attr \"fp\" \"*,*,*,*,*,*,*,yes,yes\")\n-   (set_attr \"simd\" \"*,*,*,yes,*,*,*,*,*\")])\n+   (set_attr \"simd\" \"*,*,*,yes,*,*,*,*,*\")\n+   (set_attr \"fp\" \"*,*,*,*,*,*,*,yes,yes\")]\n+)\n \n ;; Split a TImode register-register or register-immediate move into\n ;; its component DImode pieces, taking care to handle overlapping\n@@ -2119,11 +2118,9 @@\n    neg\\\\t%<w>0, %<w>1\n    neg\\\\t%<rtn>0<vas>, %<rtn>1<vas>\"\n   [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n-   (set_attr \"simd_type\" \"*,simd_negabs\")\n+   (set_attr \"type\" \"alu_reg, neon_neg<q>\")\n    (set_attr \"simd\" \"*,yes\")\n-   (set_attr \"mode\" \"<MODE>\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n+   (set_attr \"mode\" \"<MODE>\")]\n )\n \n ;; zero_extend version of above\n@@ -3203,10 +3200,8 @@\n    ushl\\t%<rtn>0<vas>, %<rtn>1<vas>, %<rtn>2<vas>\n    lsl\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"simd_type\" \"simd_shift_imm,simd_shift,*\")\n-   (set_attr \"simd_mode\" \"<MODE>,<MODE>,*\")\n    (set_attr \"v8type\" \"*,*,shift\")\n-   (set_attr \"type\" \"*,*,shift_reg\")\n+   (set_attr \"type\" \"neon_shift_imm<q>, neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n \n@@ -3222,10 +3217,8 @@\n    #\n    lsr\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"simd_type\" \"simd_shift_imm,simd_shift,*\")\n-   (set_attr \"simd_mode\" \"<MODE>,<MODE>,*\")\n    (set_attr \"v8type\" \"*,*,shift\")\n-   (set_attr \"type\" \"*,*,shift_reg\")\n+   (set_attr \"type\" \"neon_shift_imm<q>,neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n \n@@ -3267,10 +3260,8 @@\n    #\n    asr\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"simd_type\" \"simd_shift_imm,simd_shift,*\")\n-   (set_attr \"simd_mode\" \"<MODE>,<MODE>,*\")\n    (set_attr \"v8type\" \"*,*,shift\")\n-   (set_attr \"type\" \"*,*,shift_reg\")\n+   (set_attr \"type\" \"neon_shift_imm<q>,neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n \n@@ -3308,8 +3299,7 @@\n   \"TARGET_SIMD\"\n   \"ushl\\t%d0, %d1, %d2\"\n   [(set_attr \"simd\" \"yes\")\n-   (set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+   (set_attr \"type\" \"neon_shift_reg\")]\n )\n \n (define_insn \"*aarch64_ushl_2s\"\n@@ -3320,8 +3310,7 @@\n   \"TARGET_SIMD\"\n   \"ushl\\t%0.2s, %1.2s, %2.2s\"\n   [(set_attr \"simd\" \"yes\")\n-   (set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+   (set_attr \"type\" \"neon_shift_reg\")]\n )\n \n (define_insn \"*aarch64_sisd_sshl\"\n@@ -3332,8 +3321,7 @@\n   \"TARGET_SIMD\"\n   \"sshl\\t%d0, %d1, %d2\"\n   [(set_attr \"simd\" \"yes\")\n-   (set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+   (set_attr \"type\" \"neon_shift_reg\")]\n )\n \n (define_insn \"*aarch64_sshl_2s\"\n@@ -3344,8 +3332,7 @@\n   \"TARGET_SIMD\"\n   \"sshl\\t%0.2s, %1.2s, %2.2s\"\n   [(set_attr \"simd\" \"yes\")\n-   (set_attr \"simd_type\" \"simd_shift\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+   (set_attr \"type\" \"neon_shift_reg\")]\n )\n \n (define_insn \"*aarch64_sisd_neg_qi\"\n@@ -3355,8 +3342,7 @@\n   \"TARGET_SIMD\"\n   \"neg\\t%d0, %d1\"\n   [(set_attr \"simd\" \"yes\")\n-   (set_attr \"simd_type\" \"simd_negabs\")\n-   (set_attr \"simd_mode\" \"QI\")]\n+   (set_attr \"type\" \"neon_neg\")]\n )\n \n ;; Rotate right"}]}