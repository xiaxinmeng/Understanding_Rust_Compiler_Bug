{"sha": "1cfd6c3a597923e35835256a0fb373ecb7e82966", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmZDZjM2E1OTc5MjNlMzU4MzUyNTZhMGZiMzczZWNiN2U4Mjk2Ng==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@gnat.com", "date": "2004-10-27T13:56:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:56:03Z"}, "message": "2004-10-26  Vincent Celier  <celier@gnat.com>\n\n\t* a-dirval.ads, a-dirval.adb, a-dirval-vms.adb, a-dirval-mingw.adb\n\t(Is_Path_Name_Case_Sensitive): New function\n\n\t* a-direct.adb (To_Lower_If_Case_Insensitive): New procedure\n\t(Base_Name, Simple_Name, Current_Directory, Compose,\n\tContaining_Directory, Full_Name): Call To_Lower_If_Case_Insensitive on\n\tthe result.\n\nFrom-SVN: r89677", "tree": {"sha": "85eb479edf65adc3407f725706587f5f34cd16b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85eb479edf65adc3407f725706587f5f34cd16b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cfd6c3a597923e35835256a0fb373ecb7e82966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cfd6c3a597923e35835256a0fb373ecb7e82966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cfd6c3a597923e35835256a0fb373ecb7e82966", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cfd6c3a597923e35835256a0fb373ecb7e82966/comments", "author": null, "committer": null, "parents": [{"sha": "04061aa5af34837ef99383b2a481aaff033cbc4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04061aa5af34837ef99383b2a481aaff033cbc4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04061aa5af34837ef99383b2a481aaff033cbc4c"}], "stats": {"total": 84, "additions": 63, "deletions": 21}, "files": [{"sha": "33562f11fb89a95c1583dd6cde1dc06abfb93aac", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=1cfd6c3a597923e35835256a0fb373ecb7e82966", "patch": "@@ -34,6 +34,7 @@\n with Ada.Directories.Validity; use Ada.Directories.Validity;\n with Ada.Strings.Unbounded;    use Ada.Strings.Unbounded;\n with Ada.Unchecked_Deallocation;\n+with Ada.Characters.Handling;  use Ada.Characters.Handling;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.OS_Lib;               use GNAT.OS_Lib;\n@@ -67,15 +68,20 @@ package body Ada.Directories is\n    --  Get the next entry in a directory, setting Entry_Fetched if successful\n    --  or resetting Is_Valid if not.\n \n+   procedure To_Lower_If_Case_Insensitive (S : in out String);\n+   --  Put S in lower case if file and path names are case-insensitive\n+\n    ---------------\n    -- Base_Name --\n    ---------------\n \n    function Base_Name (Name : String) return String is\n-      Simple : constant String := Simple_Name (Name);\n+      Simple : String := Simple_Name (Name);\n       --  Simple'First is guaranteed to be 1\n \n    begin\n+      To_Lower_If_Case_Insensitive (Simple);\n+\n       --  Look for the last dot in the file name and return the part of the\n       --  file name preceding this last dot. If the first dot is the first\n       --  character of the file name, the base name is the empty string.\n@@ -147,6 +153,7 @@ package body Ada.Directories is\n             Last := Last + Extension'Length;\n          end if;\n \n+         To_Lower_If_Case_Insensitive (Result (1 .. Last));\n          return Result (1 .. Last);\n       end if;\n    end Compose;\n@@ -186,6 +193,7 @@ package body Ada.Directories is\n                return Get_Current_Dir;\n \n             else\n+               To_Lower_If_Case_Insensitive (Result (1 .. Last));\n                return Result (1 .. Last);\n             end if;\n          end;\n@@ -333,9 +341,11 @@ package body Ada.Directories is\n \n       --  The implementation uses GNAT.Directory_Operations.Get_Current_Dir\n \n-      Cur : constant String := Get_Current_Dir;\n+      Cur : String := Normalize_Pathname (Get_Current_Dir);\n \n    begin\n+      To_Lower_If_Case_Insensitive (Cur);\n+\n       if Cur'Length > 1 and then Cur (Cur'Last) = Dir_Separator then\n          return Cur (1 .. Cur'Last - 1);\n       else\n@@ -609,12 +619,11 @@ package body Ada.Directories is\n          --  Use GNAT.OS_Lib.Normalize_Pathname\n \n          declare\n-            Value : constant String := Normalize_Pathname (Name);\n-            Result : String (1 .. Value'Length);\n+            Value : String := Normalize_Pathname (Name);\n+            subtype Result is String (1 .. Value'Length);\n          begin\n-            Result := Value;\n-            return Result;\n-            --  Should use subtype conversion, not junk copy ???\n+            To_Lower_If_Case_Insensitive (Value);\n+            return Result (Value);\n          end;\n       end if;\n    end Full_Name;\n@@ -719,7 +728,6 @@ package body Ada.Directories is\n    begin\n       --  First, the invalid cases\n \n-\n       if not (Is_Regular_File (Name) or else Is_Directory (Name)) then\n          raise Name_Error;\n \n@@ -836,13 +844,11 @@ package body Ada.Directories is\n          --  The implementation uses GNAT.Directory_Operations.Base_Name\n \n          declare\n-            Value  : constant String :=\n-                       GNAT.Directory_Operations.Base_Name (Name);\n-            Result : String (1 .. Value'Length);\n+            Value  : String := GNAT.Directory_Operations.Base_Name (Name);\n+            subtype Result is String (1 .. Value'Length);\n          begin\n-            Result := Value;\n-            return Result;\n-            --  Should use subtype conversion instead of junk copy ???\n+            To_Lower_If_Case_Insensitive (Value);\n+            return Result (Value);\n          end;\n       end if;\n    end Simple_Name;\n@@ -943,5 +949,17 @@ package body Ada.Directories is\n       Search.Value.Is_Valid := True;\n    end Start_Search;\n \n-end Ada.Directories;\n+   ----------------------------------\n+   -- To_Lower_If_Case_Insensitive --\n+   ----------------------------------\n \n+   procedure To_Lower_If_Case_Insensitive (S : in out String) is\n+   begin\n+      if not Is_Path_Name_Case_Sensitive then\n+         for J in S'Range loop\n+            S (J) := To_Lower (S (J));\n+         end loop;\n+      end if;\n+   end To_Lower_If_Case_Insensitive;\n+\n+end Ada.Directories;"}, {"sha": "da36471b93b87032edd89da72eca3e62220bbde5", "filename": "gcc/ada/a-dirval-mingw.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-mingw.adb?ref=1cfd6c3a597923e35835256a0fb373ecb7e82966", "patch": "@@ -45,6 +45,15 @@ package body Ada.Directories.Validity is\n                           DEL .. NBSP           => True,\n                           others                => False);\n \n+   ---------------------------------\n+   -- Is_Path_Name_Case_Sensitive --\n+   ---------------------------------\n+\n+   function Is_Path_Name_Case_Sensitive return Boolean is\n+   begin\n+      return False;\n+   end Is_Path_Name_Case_Sensitive;\n+\n    ------------------------\n    -- Is_Valid_Path_Name --\n    ------------------------\n@@ -145,4 +154,3 @@ package body Ada.Directories.Validity is\n    end Is_Valid_Simple_Name;\n \n end Ada.Directories.Validity;\n-"}, {"sha": "a7f2d24242ca1b21ca405d66939365f753de0f82", "filename": "gcc/ada/a-dirval-vms.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-vms.adb?ref=1cfd6c3a597923e35835256a0fb373ecb7e82966", "patch": "@@ -45,6 +45,15 @@ package body Ada.Directories.Validity is\n                           '_' | '$' | '-' | '.' => False,\n                           others => True);\n \n+   ---------------------------------\n+   -- Is_Path_Name_Case_Sensitive --\n+   ---------------------------------\n+\n+   function Is_Path_Name_Case_Sensitive return Boolean is\n+   begin\n+      return False;\n+   end Is_Path_Name_Case_Sensitive;\n+\n    ------------------------\n    -- Is_Valid_Path_Name --\n    ------------------------\n@@ -172,4 +181,3 @@ package body Ada.Directories.Validity is\n    end Is_Valid_Simple_Name;\n \n end Ada.Directories.Validity;\n-"}, {"sha": "ef643d5b4e1684721167c9f9df2149f7c154d731", "filename": "gcc/ada/a-dirval.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.adb?ref=1cfd6c3a597923e35835256a0fb373ecb7e82966", "patch": "@@ -36,6 +36,15 @@\n \n package body Ada.Directories.Validity is\n \n+   ---------------------------------\n+   -- Is_Path_Name_Case_Sensitive --\n+   ---------------------------------\n+\n+   function Is_Path_Name_Case_Sensitive return Boolean is\n+   begin\n+      return True;\n+   end Is_Path_Name_Case_Sensitive;\n+\n    ------------------------\n    -- Is_Valid_Path_Name --\n    ------------------------\n@@ -86,5 +95,3 @@ package body Ada.Directories.Validity is\n    end Is_Valid_Simple_Name;\n \n end Ada.Directories.Validity;\n-\n-"}, {"sha": "a9ab3f4fbb716bbce7ec7319fbfc5fa039713084", "filename": "gcc/ada/a-dirval.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cfd6c3a597923e35835256a0fb373ecb7e82966/gcc%2Fada%2Fa-dirval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.ads?ref=1cfd6c3a597923e35835256a0fb373ecb7e82966", "patch": "@@ -42,6 +42,7 @@ private package Ada.Directories.Validity is\n    function Is_Valid_Path_Name (Name : String) return Boolean;\n    --  Returns True if Name is a valid path name\n \n-end Ada.Directories.Validity;\n-\n+   function Is_Path_Name_Case_Sensitive return Boolean;\n+   --  Returns True if file and path names are case-sensitive\n \n+end Ada.Directories.Validity;"}]}