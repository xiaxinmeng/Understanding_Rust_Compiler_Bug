{"sha": "13b562c502e92a602bf18e851c20fadfc2f4bfe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNiNTYyYzUwMmU5MmE2MDJiZjE4ZTg1MWMyMGZhZGZjMmY0YmZlOQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-02-10T14:09:05Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-02-10T14:09:05Z"}, "message": "re PR tree-optimization/68021 (ice in rewrite_use_nonlinear_expr with -O3)\n\n\n\tPR tree-optimization/68021\n\t* tree-ssa-loop-ivopts.c (get_computation_aff): Set ratio to 1 if\n\twhen computing the value of biv cand by itself.\n\n\tgcc/testsuite/ChangeLog\n\tPR tree-optimization/68021\n\t* gcc.dg/tree-ssa/pr68021.c: New test.\n\nFrom-SVN: r233269", "tree": {"sha": "0e86553ae1799439c262ed251c08bab100f3fd5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e86553ae1799439c262ed251c08bab100f3fd5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13b562c502e92a602bf18e851c20fadfc2f4bfe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b562c502e92a602bf18e851c20fadfc2f4bfe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b562c502e92a602bf18e851c20fadfc2f4bfe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b562c502e92a602bf18e851c20fadfc2f4bfe9/comments", "author": null, "committer": null, "parents": [{"sha": "00a8574af2b7df89e82dab3c415de8b7cb48a333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00a8574af2b7df89e82dab3c415de8b7cb48a333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00a8574af2b7df89e82dab3c415de8b7cb48a333"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "092797cbfa5c775a0d5a24719cf21fc95e43def1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13b562c502e92a602bf18e851c20fadfc2f4bfe9", "patch": "@@ -1,3 +1,9 @@\n+2016-02-10  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/68021\n+\t* tree-ssa-loop-ivopts.c (get_computation_aff): Set ratio to 1 if\n+\twhen computing the value of biv cand by itself.\n+\n 2016-02-10  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (cortexa53_tunings): Enable AES fusion."}, {"sha": "2c8be050e4835be0d7b1b12eca051244ad63d573", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13b562c502e92a602bf18e851c20fadfc2f4bfe9", "patch": "@@ -1,3 +1,8 @@\n+2016-02-10  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/68021\n+\t* gcc.dg/tree-ssa/pr68021.c: New test.\n+\n 2016-02-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69726"}, {"sha": "f60b1ff1ac3726d873aaa831b2f71d9db0471f93", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr68021.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68021.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68021.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68021.c?ref=13b562c502e92a602bf18e851c20fadfc2f4bfe9", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+char a;\n+void fn1 (char *p1, int p2, int p3)\n+{\n+  int i, x;\n+  for (i = 0; i < 10; i++)\n+    {\n+      for (x = 0; x < p3; x++)\n+\t{\n+\t  *p1 = a;\n+\t  p1--;\n+\t}\n+      p1 += p2;\n+    }\n+}"}, {"sha": "5302edf928427e6f07392c6424254c22de7b7c36", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b562c502e92a602bf18e851c20fadfc2f4bfe9/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=13b562c502e92a602bf18e851c20fadfc2f4bfe9", "patch": "@@ -3741,7 +3741,19 @@ get_computation_aff (struct loop *loop,\n       var = fold_convert (uutype, var);\n     }\n \n-  if (!constant_multiple_of (ustep, cstep, &rat))\n+  /* Ratio is 1 when computing the value of biv cand by itself.\n+     We can't rely on constant_multiple_of in this case because the\n+     use is created after the original biv is selected.  The call\n+     could fail because of inconsistent fold behavior.  See PR68021\n+     for more information.  */\n+  if (cand->pos == IP_ORIGINAL && cand->incremented_at == use->stmt)\n+    {\n+      gcc_assert (is_gimple_assign (use->stmt));\n+      gcc_assert (use->iv->ssa_name == cand->var_after);\n+      gcc_assert (gimple_assign_lhs (use->stmt) == cand->var_after);\n+      rat = 1;\n+    }\n+  else if (!constant_multiple_of (ustep, cstep, &rat))\n     return false;\n \n   /* In case both UBASE and CBASE are shortened to UUTYPE from some common"}]}