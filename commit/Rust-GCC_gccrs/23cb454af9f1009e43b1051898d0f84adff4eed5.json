{"sha": "23cb454af9f1009e43b1051898d0f84adff4eed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjYjQ1NGFmOWYxMDA5ZTQzYjEwNTE4OThkMGY4NGFkZmY0ZWVkNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-12-16T15:43:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-12-16T15:43:55Z"}, "message": "* expmed.c (expand_mult): Write REG_EQUAL note with proper mode.\n\nFrom-SVN: r38306", "tree": {"sha": "f038cfee770b1c497ce8981dc1822218658b02ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f038cfee770b1c497ce8981dc1822218658b02ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cb454af9f1009e43b1051898d0f84adff4eed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cb454af9f1009e43b1051898d0f84adff4eed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cb454af9f1009e43b1051898d0f84adff4eed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cb454af9f1009e43b1051898d0f84adff4eed5/comments", "author": null, "committer": null, "parents": [{"sha": "3244472df9f0cfbb7eb7385025a718170b521606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3244472df9f0cfbb7eb7385025a718170b521606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3244472df9f0cfbb7eb7385025a718170b521606"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "3a5637adf769bcbf9d9c3411a8bb1ac326186693", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb454af9f1009e43b1051898d0f84adff4eed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb454af9f1009e43b1051898d0f84adff4eed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23cb454af9f1009e43b1051898d0f84adff4eed5", "patch": "@@ -1,3 +1,7 @@\n+Sat Dec 16 10:41:11 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expmed.c (expand_mult): Write REG_EQUAL note with proper mode.\n+\n 2000-12-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * tradcpp.c: T_WARNING: New."}, {"sha": "351dfe4e7ffe002cd109f5a55c3b521caa91bb67", "filename": "gcc/expmed.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb454af9f1009e43b1051898d0f84adff4eed5/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb454af9f1009e43b1051898d0f84adff4eed5/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=23cb454af9f1009e43b1051898d0f84adff4eed5", "patch": "@@ -2401,6 +2401,7 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \t  /* We found something cheaper than a multiply insn.  */\n \t  int opno;\n \t  rtx accum, tem;\n+\t  enum machine_mode nmode;\n \n \t  op0 = protect_from_queue (op0, 0);\n \n@@ -2505,12 +2506,21 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \t\t}\n \n \t      /* Write a REG_EQUAL note on the last insn so that we can cse\n-\t\t multiplication sequences.  */\n+\t\t multiplication sequences.  Note that if ACCUM is a SUBREG,\n+\t\t we've set the inner register and must properly indicate\n+\t\t that.  */\n+\n+\t      tem = op0, nmode = mode;\n+\t      if (GET_CODE (accum) == SUBREG)\n+\t\t{\n+\t\t  nmode = GET_MODE (SUBREG_REG (accum));\n+\t\t  tem = gen_lowpart (nmode, op0);\n+\t\t}\n \n \t      insn = get_last_insn ();\n \t      set_unique_reg_note (insn, \n \t      \t\t\t   REG_EQUAL,\n-\t\t\t\t   gen_rtx_MULT (mode, op0, \n+\t\t\t\t   gen_rtx_MULT (nmode, tem,\n \t\t\t\t   \t         GEN_INT (val_so_far)));\n \t    }\n "}]}