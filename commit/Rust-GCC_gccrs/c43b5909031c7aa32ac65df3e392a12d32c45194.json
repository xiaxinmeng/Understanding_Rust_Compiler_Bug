{"sha": "c43b5909031c7aa32ac65df3e392a12d32c45194", "node_id": "C_kwDOANBUbNoAKGM0M2I1OTA5MDMxYzdhYTMyYWM2NWRmM2UzOTJhMTJkMzJjNDUxOTQ", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-01-02T12:36:51Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-01-03T11:26:05Z"}, "message": "d: Merge upstream dmd 001bfd97b, druntime 759e6023, phobos 468788323.\n\nD front-end changes:\n\n    - Import latest changes to mainline.\n    - Fix bad format specifiers in front-end errors (PR103840).\n    - Refactoring of some leaf modules to the dmd/root package.\n    - Updating copyright notice dates and urls.\n\nPhobos changes:\n\n    - Import latest changes to mainline.\n\ngcc/d/ChangeLog:\n\n\tPR d/103840\n\t* dmd/MERGE: Merge upstream dmd 001bfd97b.\n\t* Make-lang.in (D_FRONTEND_OBJS): Rename d/complex.o to\n\td/root-complex.o, and d/utf.o to d/root/utf.o.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/MERGE: Merge upstream druntime 759e6023.\n\t* src/MERGE: Merge upstream phobos 468788323.", "tree": {"sha": "b7ef2e344e36132f68816e197e39c58bd39e9ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7ef2e344e36132f68816e197e39c58bd39e9ac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c43b5909031c7aa32ac65df3e392a12d32c45194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43b5909031c7aa32ac65df3e392a12d32c45194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c43b5909031c7aa32ac65df3e392a12d32c45194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43b5909031c7aa32ac65df3e392a12d32c45194/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd5b0fca54341545ecf83f6775fc471f6f174142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5b0fca54341545ecf83f6775fc471f6f174142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5b0fca54341545ecf83f6775fc471f6f174142"}], "stats": {"total": 1361, "additions": 711, "deletions": 650}, "files": [{"sha": "6c90657d65f6cccaa1b9596553d49b97a48bfd44", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -93,7 +93,6 @@ D_FRONTEND_OBJS = \\\n \td/common-outbuffer.o \\\n \td/common-string.o \\\n \td/compiler.o \\\n-\td/complex.o \\\n \td/cond.o \\\n \td/constfold.o \\\n \td/cparse.o \\\n@@ -157,6 +156,7 @@ D_FRONTEND_OBJS = \\\n \td/root-aav.o \\\n \td/root-array.o \\\n \td/root-bitarray.o \\\n+\td/root-complex.o \\\n \td/root-ctfloat.o \\\n \td/root-file.o \\\n \td/root-filename.o \\\n@@ -170,6 +170,7 @@ D_FRONTEND_OBJS = \\\n \td/root-speller.o \\\n \td/root-string.o \\\n \td/root-stringtable.o \\\n+\td/root-utf.o \\\n \td/safe.o \\\n \td/sapply.o \\\n \td/semantic2.o \\\n@@ -188,7 +189,6 @@ D_FRONTEND_OBJS = \\\n \td/transitivevisitor.o \\\n \td/typesem.o \\\n \td/typinf.o \\\n-\td/utf.o \\\n \td/utils.o \\\n \td/visitor.o\n "}, {"sha": "5915706af11dc32180fadc30efca143d90fc0f90", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,4 +1,4 @@\n-ad8412530e607ffebec36f2dbdff1a6f2798faf7\n+001bfd97b0e75423970260dac54f453be9b57f4c\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "6b91e22e3e5ad35208cb4d2f88726ee38e5b7130", "filename": "gcc/d/dmd/README.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FREADME.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FREADME.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FREADME.md?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,12 +2,12 @@\n \n This is the source code to the DMD compiler\n for the D Programming Language defined in the documents at\n-http://dlang.org/\n+https://dlang.org/\n \n These sources are free, they are redistributable and modifiable\n under the terms of the Boost Software License, Version 1.0.\n The terms of this license are in the file boostlicense.txt,\n-or see http://www.boost.org/LICENSE_1_0.txt.\n+or see https://www.boost.org/LICENSE_1_0.txt.\n \n If a particular file has a different license in it, that overrides\n this license for that file.\n@@ -247,12 +247,9 @@ Note: many other utilities are in [dmd/root](https://github.com/dlang/dmd/tree/m\n \n | File                                                                              | Purpose                                           |\n |-----------------------------------------------------------------------------------|---------------------------------------------------|\n-| [env.d](https://github.com/dlang/dmd/blob/master/src/dmd/env.d)                   | Modify environment variables                      |\n | [console.d](https://github.com/dlang/dmd/blob/master/src/dmd/console.d)           | Print error messages in color                     |\n-| [utf.d](https://github.com/dlang/dmd/blob/master/src/dmd/utf.d)                   | Encoding/decoding Unicode text                    |\n | [file_manager.d](https://github.com/dlang/dmd/blob/master/src/dmd/file_manager.d) | Keep file contents in memory                      |\n | [utils.d](https://github.com/dlang/dmd/blob/master/src/dmd/utils.d)               | Utility functions related to files and file paths |\n-| [complex.d](https://github.com/dlang/dmd/blob/master/src/dmd/complex.d)           | A complex number type                             |\n \n | File                                                                            | Purpose                                                       |\n |---------------------------------------------------------------------------------|---------------------------------------------------------------|"}, {"sha": "0aa03f4b61ab844a5e6caeabf28679dbdf686102", "filename": "gcc/d/dmd/VERSION", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FVERSION", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2FVERSION", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FVERSION?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1 +1 @@\n-v2.098.1-beta.1\n+v2.098.1"}, {"sha": "51ef049f8608051a38c1f85f706b0f826d240ded", "filename": "gcc/d/dmd/access.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faccess.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faccess.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faccess.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/attribute.html#visibility_attributes, Visibility Attributes)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/access.d, _access.d)\n  * Documentation:  https://dlang.org/phobos/dmd_access.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/access.d"}, {"sha": "1add36a02995bb50b248a9541957b622511106d5", "filename": "gcc/d/dmd/aggregate.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faggregate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faggregate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faggregate.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4,9 +4,9 @@\n  * Specification: $(LINK2 https://dlang.org/spec/struct.html, Structs, Unions),\n  *                $(LINK2 https://dlang.org/spec/class.html, Class).\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/aggregate.d, _aggregate.d)\n  * Documentation:  https://dlang.org/phobos/dmd_aggregate.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/aggregate.d"}, {"sha": "796144ac81046bc028e9e386c1a20edfc68e3785", "filename": "gcc/d/dmd/aggregate.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faggregate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faggregate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faggregate.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/aggregate.h\n  */\n "}, {"sha": "458e8217409355d8cb3d71adf02abd4d3d74a7b8", "filename": "gcc/d/dmd/aliasthis.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faliasthis.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faliasthis.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/class.html#alias-this, Alias This)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/aliasthis.d, _aliasthis.d)\n  * Documentation:  https://dlang.org/phobos/dmd_aliasthis.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/aliasthis.d"}, {"sha": "3b67903c4d08d55706c77a33b2b96314e423e8b8", "filename": "gcc/d/dmd/aliasthis.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faliasthis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Faliasthis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2009-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 2009-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/aliasthis.h\n  */\n "}, {"sha": "75b4af1f1d814dc7f9806b5df9fcb6e180f9fd08", "filename": "gcc/d/dmd/apply.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fapply.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fapply.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fapply.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * A depth-first visitor for expressions.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/apply.d, _apply.d)\n  * Documentation:  https://dlang.org/phobos/dmd_apply.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/apply.d"}, {"sha": "e82413f4c704937d74ea3ef3874d950750ba4c8f", "filename": "gcc/d/dmd/arrayop.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farrayop.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farrayop.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farrayop.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/arrays.html#array-operations, Array Operations)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/arrayop.d, _arrayop.d)\n  * Documentation:  https://dlang.org/phobos/dmd_arrayop.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/arrayop.d"}, {"sha": "ffbaf95029d4d112532e68fd6bc67f86f50d8bfc", "filename": "gcc/d/dmd/arraytypes.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farraytypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farraytypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farraytypes.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provide aliases for arrays of certain declarations or statements.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/arraytypes.d, _arraytypes.d)\n  * Documentation:  https://dlang.org/phobos/dmd_arraytypes.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/arraytypes.d"}, {"sha": "d7dfa0baeffcc4d2e732f69d393778be502b8573", "filename": "gcc/d/dmd/arraytypes.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farraytypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Farraytypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farraytypes.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2006-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 2006-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/arraytypes.h\n  */\n "}, {"sha": "843cc02373568883127ea8563a9500dabbd36fea", "filename": "gcc/d/dmd/ast_node.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fast_node.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fast_node.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fast_node.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Defines the base class for all nodes which are part of the AST.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/ast_node.d, _ast_node.d)\n  * Documentation:  https://dlang.org/phobos/dmd_ast_node.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/ast_node.d"}, {"sha": "0e04e38f7281886cc30722937b31bad47566db22", "filename": "gcc/d/dmd/ast_node.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fast_node.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fast_node.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fast_node.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/ast_node.h\n  */\n "}, {"sha": "3e86cfa130e01144d3da24c228bec7b6a0c825bb", "filename": "gcc/d/dmd/astenums.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fastenums.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fastenums.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fastenums.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,8 +1,8 @@\n /**\n  * Defines enums common to dmd and dmd as parse library.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/astenums.d, _astenums.d)\n  * Documentation:  https://dlang.org/phobos/dmd_astenums.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/astenums.d"}, {"sha": "5d44760caadb69d327ffbfe24bde907ff8de4ece", "filename": "gcc/d/dmd/attrib.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fattrib.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fattrib.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -14,9 +14,9 @@\n  * - Protection (`private`, `public`)\n  * - Deprecated declarations (`@deprecated`)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/attrib.d, _attrib.d)\n  * Documentation:  https://dlang.org/phobos/dmd_attrib.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/attrib.d"}, {"sha": "812729b3f270f933892fea9327b751250ae2ecce", "filename": "gcc/d/dmd/attrib.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fattrib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fattrib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/attrib.h\n  */\n "}, {"sha": "c4a95777e0324e4dd5a40575bed61ac0222fbf77", "filename": "gcc/d/dmd/blockexit.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fblockexit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fblockexit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fblockexit.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Find out in what ways control flow can exit a statement block.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/blockexit.d, _blockexit.d)\n  * Documentation:  https://dlang.org/phobos/dmd_blockexit.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/blockexit.d"}, {"sha": "06db97bf8f4d5199879bb39a2efc6109fdeb0031", "filename": "gcc/d/dmd/builtin.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fbuiltin.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fbuiltin.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fbuiltin.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Currently includes functions from `std.math`, `core.math` and `core.bitop`.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/builtin.d, _builtin.d)\n  * Documentation:  https://dlang.org/phobos/dmd_builtin.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/builtin.d"}, {"sha": "e6eb0ace2ee0be17900b45a136d8ee2cf6b9d28c", "filename": "gcc/d/dmd/canthrow.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcanthrow.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcanthrow.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcanthrow.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/function.html#nothrow-functions, Nothrow Functions)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/canthrow.d, _canthrow.d)\n  * Documentation:  https://dlang.org/phobos/dmd_canthrow.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/canthrow.d"}, {"sha": "a3f3bc4f14105669afb38c4de3a840912e697f0d", "filename": "gcc/d/dmd/chkformat.d", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fchkformat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fchkformat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fchkformat.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Check the arguments to `printf` and `scanf` against the `format` string.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/chkformat.d, _chkformat.d)\n  * Documentation:  https://dlang.org/phobos/dmd_chkformat.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/chkformat.d\n@@ -57,7 +57,7 @@ import dmd.target;\n  *      `true` if errors occurred\n  * References:\n  * C99 7.19.6.1\n- * http://www.cplusplus.com/reference/cstdio/printf/\n+ * https://www.cplusplus.com/reference/cstdio/printf/\n  */\n bool checkPrintfFormat(ref const Loc loc, scope const char[] format, scope Expression[] args, bool isVa_list)\n {\n@@ -331,7 +331,7 @@ bool checkPrintfFormat(ref const Loc loc, scope const char[] format, scope Expre\n  *      `true` if errors occurred\n  * References:\n  * C99 7.19.6.2\n- * http://www.cplusplus.com/reference/cstdio/scanf/\n+ * https://www.cplusplus.com/reference/cstdio/scanf/\n  */\n bool checkScanfFormat(ref const Loc loc, scope const char[] format, scope Expression[] args, bool isVa_list)\n {\n@@ -955,7 +955,7 @@ Format parseGenericFormatSpecifier(scope const char[] format,\n         case 'm':\n             if (useGNUExts)\n             {\n-                // http://www.gnu.org/software/libc/manual/html_node/Other-Output-Conversions.html\n+                // https://www.gnu.org/software/libc/manual/html_node/Other-Output-Conversions.html\n                 specifier = Format.GNU_m;\n                 break;\n             }"}, {"sha": "1a143cb8c7f1e0599e2ea030c73e999a1875026c", "filename": "gcc/d/dmd/clone.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fclone.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fclone.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fclone.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,9 +2,9 @@\n  * Builds struct member functions if needed and not defined by the user.\n  * Includes `opEquals`, `opAssign`, post blit, copy constructor and destructor.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/clone.d, _clone.d)\n  * Documentation:  https://dlang.org/phobos/dmd_clone.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/clone.d"}, {"sha": "e4483d5f9477945ef0b8c344251f170204996c06", "filename": "gcc/d/dmd/common/file.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4,9 +4,9 @@\n  * Functions and objects dedicated to file I/O and management. TODO: Move here artifacts\n  * from places such as root/ so both the frontend and the backend have access to them.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/common/file.d, common/_file.d)\n  * Documentation: https://dlang.org/phobos/dmd_common_file.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/common/file.d"}, {"sha": "e5cc43b9d12dcb3587b471f612cd5459e27b7ea6", "filename": "gcc/d/dmd/common/outbuffer.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * An expandable buffer in which you can write text or binary data.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/outbuffer.d, root/_outbuffer.d)\n  * Documentation: https://dlang.org/phobos/dmd_root_outbuffer.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/outbuffer.d"}, {"sha": "fed25c0d03000d0938475ed3e7b40dcc54e49aac", "filename": "gcc/d/dmd/common/outbuffer.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/common/outbuffer.h\n  */\n "}, {"sha": "d3bc24f2667d4c37a1686823a9763d7e6d20dced", "filename": "gcc/d/dmd/common/string.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Common string functions including filename manipulation.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/common/string.d, common/_string.d)\n  * Documentation: https://dlang.org/phobos/dmd_common_string.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/common/string.d"}, {"sha": "dd26d40ff39dfedab19bf202a3a320de6b9119d0", "filename": "gcc/d/dmd/compiler.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcompiler.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcompiler.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcompiler.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Describes a back-end compiler and implements compiler-specific actions.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/compiler.d, _compiler.d)\n  * Documentation:  https://dlang.org/phobos/dmd_compiler.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/compiler.d"}, {"sha": "e8b7704b0430e39b5609b77f304b72b5c3abdc34", "filename": "gcc/d/dmd/compiler.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcompiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcompiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcompiler.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/compiler.h\n  */\n "}, {"sha": "dee0a1795749656fa7db8d55bfecd1582ef18d53", "filename": "gcc/d/dmd/cond.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcond.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcond.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/version.html, Conditional Compilation)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/cond.d, _cond.d)\n  * Documentation:  https://dlang.org/phobos/dmd_cond.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/cond.d"}, {"sha": "d69c13e81014491465b45995d349834e4c4adae7", "filename": "gcc/d/dmd/cond.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcond.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcond.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/cond.h\n  */\n "}, {"sha": "76e1d7fbaf2d89c15b678f0ef32aa6f4a723f119", "filename": "gcc/d/dmd/constfold.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fconstfold.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5,9 +5,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/float.html#fp_const_folding, Floating Point Constant Folding)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/constfold.d, _constfold.d)\n  * Documentation:  https://dlang.org/phobos/dmd_constfold.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/constfold.d\n@@ -19,21 +19,21 @@ import core.stdc.string;\n import core.stdc.stdio;\n import dmd.arraytypes;\n import dmd.astenums;\n-import dmd.complex;\n import dmd.ctfeexpr;\n import dmd.declaration;\n import dmd.dstruct;\n import dmd.errors;\n import dmd.expression;\n import dmd.globals;\n import dmd.mtype;\n+import dmd.root.complex;\n import dmd.root.ctfloat;\n import dmd.root.port;\n import dmd.root.rmem;\n+import dmd.root.utf;\n import dmd.sideeffect;\n import dmd.target;\n import dmd.tokens;\n-import dmd.utf;\n \n private enum LOG = false;\n "}, {"sha": "8d3f3b33ead51d8146ce320834feebeb66525c43", "filename": "gcc/d/dmd/cparse.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcparse.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: C11\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/cparse.d, _cparse.d)\n  * Documentation:  https://dlang.org/phobos/dmd_cparse.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/cparse.d"}, {"sha": "7cb2092b72313886b3f5254fa0c0290b1a142e03", "filename": "gcc/d/dmd/cppmangle.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcppmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fcppmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcppmangle.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4,9 +4,9 @@\n  * This is the POSIX side of the implementation.\n  * It exports two functions to C++, `toCppMangleItanium` and `cppTypeInfoMangleItanium`.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors: Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors: Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/cppmangle.d, _cppmangle.d)\n  * Documentation:  https://dlang.org/phobos/dmd_cppmangle.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/cppmangle.d"}, {"sha": "5979aa70e4155d5b22ef15f78e3b5cae8c80bad4", "filename": "gcc/d/dmd/ctfe.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctfe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctfe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfe.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/ctfe.h\n  */\n "}, {"sha": "43dce4ba6d2e6f82bceffdd7eaccd94934c47f7b", "filename": "gcc/d/dmd/ctfeexpr.d", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctfeexpr.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctfeexpr.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfeexpr.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * CTFE for expressions involving pointers, slices, array concatenation etc.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/ctfeexpr.d, _ctfeexpr.d)\n  * Documentation:  https://dlang.org/phobos/dmd_ctfeexpr.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/ctfeexpr.d\n@@ -16,7 +16,6 @@ import core.stdc.stdlib;\n import core.stdc.string;\n import dmd.arraytypes;\n import dmd.astenums;\n-import dmd.complex;\n import dmd.constfold;\n import dmd.compiler;\n import dmd.dclass;\n@@ -29,6 +28,7 @@ import dmd.expression;\n import dmd.func;\n import dmd.globals;\n import dmd.mtype;\n+import dmd.root.complex;\n import dmd.root.ctfloat;\n import dmd.root.port;\n import dmd.root.rmem;\n@@ -1362,6 +1362,15 @@ private int ctfeRawCmp(const ref Loc loc, Expression e1, Expression e2, bool ide\n         mem.xfree(used);\n         return 0;\n     }\n+    else if (e1.op == EXP.assocArrayLiteral && e2.op == EXP.null_)\n+    {\n+        return e1.isAssocArrayLiteralExp.keys.dim != 0;\n+    }\n+    else if (e1.op == EXP.null_ && e2.op == EXP.assocArrayLiteral)\n+    {\n+        return e2.isAssocArrayLiteralExp.keys.dim != 0;\n+    }\n+\n     error(loc, \"CTFE internal error: bad compare of `%s` and `%s`\", e1.toChars(), e2.toChars());\n     assert(0);\n }\n@@ -1553,7 +1562,7 @@ Expression ctfeIndex(UnionExp* pue, const ref Loc loc, Type type, Expression e1,\n     {\n         if (indx >= es1.len)\n         {\n-            error(loc, \"string index %llu is out of bounds `[0 .. %zu]`\", indx, es1.len);\n+            error(loc, \"string index %llu is out of bounds `[0 .. %llu]`\", indx, cast(ulong)es1.len);\n             return CTFEExp.cantexp;\n         }\n         emplaceExp!IntegerExp(pue, loc, es1.charAt(indx), type);\n@@ -1564,7 +1573,7 @@ Expression ctfeIndex(UnionExp* pue, const ref Loc loc, Type type, Expression e1,\n     {\n         if (indx >= ale.elements.dim)\n         {\n-            error(loc, \"array index %llu is out of bounds `%s[0 .. %zu]`\", indx, e1.toChars(), ale.elements.dim);\n+            error(loc, \"array index %llu is out of bounds `%s[0 .. %llu]`\", indx, e1.toChars(), cast(ulong)ale.elements.dim);\n             return CTFEExp.cantexp;\n         }\n         Expression e = (*ale.elements)[cast(size_t)indx];"}, {"sha": "cc251b0b29fbb3cb44801d41d6b8dfd77e644bb5", "filename": "gcc/d/dmd/ctorflow.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctorflow.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fctorflow.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctorflow.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Manage flow analysis for constructors.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/ctorflow.d, _ctorflow.d)\n  * Documentation:  https://dlang.org/phobos/dmd_ctorflow.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/ctorflow.d"}, {"sha": "4a80d17c8ed1af2442bf4499704f9c7dc3bff480", "filename": "gcc/d/dmd/dcast.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdcast.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdcast.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdcast.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Semantic analysis for cast-expressions.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dcast.d, _dcast.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dcast.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dcast.d\n@@ -40,9 +40,9 @@ import dmd.opover;\n import dmd.root.ctfloat;\n import dmd.common.outbuffer;\n import dmd.root.rmem;\n+import dmd.root.utf;\n import dmd.tokens;\n import dmd.typesem;\n-import dmd.utf;\n import dmd.visitor;\n \n enum LOG = false;"}, {"sha": "1fb477901d1a5ceb05926c1cfb29b7c6a2c36fc6", "filename": "gcc/d/dmd/dclass.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdclass.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdclass.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdclass.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/class.html, Classes)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dclass.d, _dclass.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dclass.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dclass.d"}, {"sha": "aa143d4369f4a69a1d6923f6c3a2a9d2b25bf919", "filename": "gcc/d/dmd/declaration.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,9 +2,9 @@\n  * Miscellaneous declarations, including typedef, alias, variable declarations including the\n  * implicit this declaration, type tuples, ClassInfo, ModuleInfo and various TypeInfos.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/declaration.d, _declaration.d)\n  * Documentation:  https://dlang.org/phobos/dmd_declaration.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/declaration.d"}, {"sha": "353d36ce43f22573bead57d1fe1a16f57a4b1ab0", "filename": "gcc/d/dmd/declaration.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/declaration.h\n  */\n "}, {"sha": "77e09bcc573d83973a394022b4b7ea19eaa2d597", "filename": "gcc/d/dmd/delegatize.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdelegatize.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdelegatize.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdelegatize.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/function.html#lazy-params, Lazy Parameters)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/delegatize.d, _delegatize.d)\n  * Documentation:  https://dlang.org/phobos/dmd_delegatize.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/delegatize.d"}, {"sha": "dd6dd41abade54f9407f45908b43ab397a496190", "filename": "gcc/d/dmd/denum.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdenum.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdenum.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdenum.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/enum.html, Enums)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/denum.d, _denum.d)\n  * Documentation:  https://dlang.org/phobos/dmd_denum.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/denum.d"}, {"sha": "156cce214c1890f13661c308645a1aaf98e31881", "filename": "gcc/d/dmd/dimport.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdimport.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdimport.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdimport.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * A `Dsymbol` representing a renamed import.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dimport.d, _dimport.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dimport.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dimport.d"}, {"sha": "fb8ed9b260530348d568646adaa2fb66a5b51692", "filename": "gcc/d/dmd/dinterpret.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdinterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdinterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: ($LINK2 https://dlang.org/spec/function.html#interpretation, Compile Time Function Execution (CTFE))\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dinterpret.d, _dinterpret.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dinterpret.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dinterpret.d\n@@ -46,9 +46,9 @@ import dmd.root.array;\n import dmd.root.ctfloat;\n import dmd.root.region;\n import dmd.root.rootobject;\n+import dmd.root.utf;\n import dmd.statement;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.visitor;\n \n /*************************************"}, {"sha": "0e891fb3b79f883bac7eff81c8432da9826d34c7", "filename": "gcc/d/dmd/dmacro.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmacro.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmacro.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmacro.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Text macro processor for Ddoc.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dmacro.d, _dmacro.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dmacro.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dmacro.d"}, {"sha": "78d17b2238c925c22dad8304458cbadb90fac1cb", "filename": "gcc/d/dmd/dmangle.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmangle.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/abi.html#name_mangling, Name Mangling)\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors: Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors: Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dmangle.d, _dmangle.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dmangle.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dmangle.d\n@@ -143,9 +143,9 @@ import dmd.common.outbuffer;\n import dmd.root.aav;\n import dmd.root.string;\n import dmd.root.stringtable;\n+import dmd.root.utf;\n import dmd.target;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.visitor;\n \n private immutable char[TMAX] mangleChar ="}, {"sha": "46e89d0f806fac79e5260902cc0c05ad43b22ebf", "filename": "gcc/d/dmd/dmodule.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmodule.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdmodule.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmodule.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/module.html, Modules)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dmodule.d, _dmodule.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dmodule.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dmodule.d\n@@ -837,7 +837,7 @@ extern (C++) final class Module : Package\n         if (buf.length >= 2)\n         {\n             /* Convert all non-UTF-8 formats to UTF-8.\n-             * BOM : http://www.unicode.org/faq/utf_bom.html\n+             * BOM : https://www.unicode.org/faq/utf_bom.html\n              * 00 00 FE FF  UTF-32BE, big-endian\n              * FF FE 00 00  UTF-32LE, little-endian\n              * FE FF        UTF-16BE, big-endian"}, {"sha": "d03b5bb639898ed53d220adc7f53e660578061ec", "filename": "gcc/d/dmd/doc.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdoc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdoc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/ddoc.html, Documentation Generator)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/doc.d, _doc.d)\n  * Documentation:  https://dlang.org/phobos/dmd_doc.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/doc.d\n@@ -49,8 +49,8 @@ import dmd.common.outbuffer;\n import dmd.root.port;\n import dmd.root.rmem;\n import dmd.root.string;\n+import dmd.root.utf;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.utils;\n import dmd.visitor;\n "}, {"sha": "8dc2d9f659c8abd9e1ce353b3fd441a77fae2ae2", "filename": "gcc/d/dmd/doc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdoc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdoc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/doc.h\n  */\n "}, {"sha": "07ebc27a69b1d765c452e3eec578f1b1d0e961fd", "filename": "gcc/d/dmd/dscope.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdscope.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdscope.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdscope.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Not to be confused with the `scope` storage class.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dscope.d, _dscope.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dscope.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dscope.d"}, {"sha": "de5f1453c9a9cd194abecbc7127a0e257f3d5002", "filename": "gcc/d/dmd/dstruct.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdstruct.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdstruct.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdstruct.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/struct.html, Structs, Unions)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dstruct.d, _dstruct.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dstruct.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dstruct.d"}, {"sha": "c4b3380e3aa1a56406fec71e90ea8cd575903f2d", "filename": "gcc/d/dmd/dsymbol.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbol.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbol.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * The base class for a D symbol, which can be a module, variable, function, enum, etc.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dsymbol.d, _dsymbol.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dsymbol.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dsymbol.d"}, {"sha": "a6bd999ac0b47becc6178d15d42d192851231e17", "filename": "gcc/d/dmd/dsymbol.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/dsymbol.h\n  */\n "}, {"sha": "387dfe330988b25716e5d6f57f4add7252966aea", "filename": "gcc/d/dmd/dsymbolsem.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbolsem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,9 +2,9 @@\n  * Does the semantic 1 pass on the AST, which looks at symbol declarations but not initializers\n  * or function bodies.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dsymbolsem.d, _dsymbolsem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dsymbolsem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dsymbolsem.d\n@@ -60,13 +60,13 @@ import dmd.root.filename;\n import dmd.common.outbuffer;\n import dmd.root.rmem;\n import dmd.root.rootobject;\n+import dmd.root.utf;\n import dmd.semantic2;\n import dmd.semantic3;\n import dmd.sideeffect;\n import dmd.statementsem;\n import dmd.staticassert;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.utils;\n import dmd.statement;\n import dmd.target;"}, {"sha": "c0d17f744be8703ad2e107aa99308e88ac4a6dd0", "filename": "gcc/d/dmd/dtemplate.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdtemplate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdtemplate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtemplate.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -28,9 +28,9 @@\n  *   arguments, and uses it if found.\n  * - Otherwise, the rest of semantic is run on the `TemplateInstance`.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dtemplate.d, _dtemplate.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dtemplate.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dtemplate.d"}, {"sha": "dbc21b3b6dd73091cdd9236b2c5506591b84a4d1", "filename": "gcc/d/dmd/dtoh.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdtoh.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdtoh.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtoh.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,9 +2,9 @@\n  * This module contains the implementation of the C++ header generation available through\n  * the command line switch -Hc.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dtohd, _dtoh.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dtoh.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dtoh.d"}, {"sha": "94753bb8a82b646105c387ce006176c3dff1d093", "filename": "gcc/d/dmd/dversion.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdversion.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fdversion.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdversion.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4,9 +4,9 @@\n  * Specification: $(LINK2 https://dlang.org/spec/version.html#version-specification, Version Specification),\n  *                $(LINK2 https://dlang.org/spec/version.html#debug_specification, Debug Specification).\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/dversion.d, _dversion.d)\n  * Documentation:  https://dlang.org/phobos/dmd_dversion.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/dversion.d"}, {"sha": "ef2fdef02f469c7635ca90a841f7c6a57f2624d0", "filename": "gcc/d/dmd/entity.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fentity.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fentity.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fentity.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification $(LINK2 https://dlang.org/spec/entity.html, Named Character Entities)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/entity.d, _entity.d)\n  * Documentation:  https://dlang.org/phobos/dmd_entity.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/entity.d\n@@ -36,8 +36,8 @@ private:\n /*********************************************\n  * Convert from named entity to its encoding.\n  * For reference:\n- *      http://www.htmlhelp.com/reference/html40/entities/\n- *      http://www.w3.org/2003/entities/2007/w3centities-f.ent\n+ *      https://www.htmlhelp.com/reference/html40/entities/\n+ *      https://www.w3.org/2003/entities/2007/w3centities-f.ent\n  */\n struct NameId\n {"}, {"sha": "ab80c8b907324dc263454a552423c0b5835e04c3", "filename": "gcc/d/dmd/enum.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fenum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fenum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fenum.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/enum.h\n  */\n "}, {"sha": "114bd44e32c97dfc521d8c3bb3489d64105da016", "filename": "gcc/d/dmd/errors.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ferrors.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ferrors.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrors.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Functions for raising errors.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/errors.d, _errors.d)\n  * Documentation:  https://dlang.org/phobos/dmd_errors.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/errors.d"}, {"sha": "000242ce49fe838c7bff9bf8fada0f3f4cc7a867", "filename": "gcc/d/dmd/errors.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ferrors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ferrors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrors.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/errors.h\n  */\n "}, {"sha": "e60ee9c8f54365f046d5afb0d150bd1b0b45e6cd", "filename": "gcc/d/dmd/escape.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fescape.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fescape.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fescape.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Most of the logic to implement scoped pointers and scoped references is here.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/escape.d, _escape.d)\n  * Documentation:  https://dlang.org/phobos/dmd_escape.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/escape.d"}, {"sha": "523015e1a684c5260759ff5103fbe06af888964e", "filename": "gcc/d/dmd/expression.d", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpression.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpression.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: ($LINK2 https://dlang.org/spec/expression.html, Expressions)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/expression.d, _expression.d)\n  * Documentation:  https://dlang.org/phobos/dmd_expression.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/expression.d\n@@ -26,7 +26,6 @@ import dmd.astenums;\n import dmd.ast_node;\n import dmd.gluelayer;\n import dmd.canthrow;\n-import dmd.complex;\n import dmd.constfold;\n import dmd.ctfeexpr;\n import dmd.ctorflow;\n@@ -57,19 +56,20 @@ import dmd.nspace;\n import dmd.objc;\n import dmd.opover;\n import dmd.optimize;\n+import dmd.root.complex;\n import dmd.root.ctfloat;\n import dmd.root.filename;\n import dmd.common.outbuffer;\n import dmd.root.optional;\n import dmd.root.rmem;\n import dmd.root.rootobject;\n import dmd.root.string;\n+import dmd.root.utf;\n import dmd.safe;\n import dmd.sideeffect;\n import dmd.target;\n import dmd.tokens;\n import dmd.typesem;\n-import dmd.utf;\n import dmd.visitor;\n \n enum LOGSEMANTIC = false;\n@@ -659,7 +659,7 @@ enum WANTvalue  = 0;    // default\n enum WANTexpand = 1;    // expand const/immutable variables if possible\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#expression\n+ * https://dlang.org/spec/expression.html#expression\n  */\n extern (C++) abstract class Expression : ASTNode\n {\n@@ -2262,7 +2262,7 @@ extern (C++) final class DsymbolExp : Expression\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#this\n+ * https://dlang.org/spec/expression.html#this\n  */\n extern (C++) class ThisExp : Expression\n {\n@@ -2318,7 +2318,7 @@ extern (C++) class ThisExp : Expression\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#super\n+ * https://dlang.org/spec/expression.html#super\n  */\n extern (C++) final class SuperExp : ThisExp\n {\n@@ -2334,7 +2334,7 @@ extern (C++) final class SuperExp : ThisExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#null\n+ * https://dlang.org/spec/expression.html#null\n  */\n extern (C++) final class NullExp : Expression\n {\n@@ -2380,7 +2380,7 @@ extern (C++) final class NullExp : Expression\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#string_literals\n+ * https://dlang.org/spec/expression.html#string_literals\n  */\n extern (C++) final class StringExp : Expression\n {\n@@ -2904,7 +2904,7 @@ extern (C++) final class TupleExp : Expression\n /***********************************************************\n  * [ e1, e2, e3, ... ]\n  *\n- * http://dlang.org/spec/expression.html#array_literals\n+ * https://dlang.org/spec/expression.html#array_literals\n  */\n extern (C++) final class ArrayLiteralExp : Expression\n {\n@@ -3069,7 +3069,7 @@ extern (C++) final class ArrayLiteralExp : Expression\n /***********************************************************\n  * [ key0 : value0, key1 : value1, ... ]\n  *\n- * http://dlang.org/spec/expression.html#associative_array_literals\n+ * https://dlang.org/spec/expression.html#associative_array_literals\n  */\n extern (C++) final class AssocArrayLiteralExp : Expression\n {\n@@ -5423,7 +5423,7 @@ extern (C++) final class VectorArrayExp : UnaExp\n /***********************************************************\n  * e1 [lwr .. upr]\n  *\n- * http://dlang.org/spec/expression.html#slice_expressions\n+ * https://dlang.org/spec/expression.html#slice_expressions\n  */\n extern (C++) final class SliceExp : UnaExp\n {\n@@ -5506,7 +5506,7 @@ extern (C++) final class ArrayLengthExp : UnaExp\n /***********************************************************\n  * e1 [ a0, a1, a2, a3 ,... ]\n  *\n- * http://dlang.org/spec/expression.html#index_expressions\n+ * https://dlang.org/spec/expression.html#index_expressions\n  */\n extern (C++) final class ArrayExp : UnaExp\n {\n@@ -6208,7 +6208,7 @@ extern (C++) final class CatDcharAssignExp : CatAssignExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#add_expressions\n+ * https://dlang.org/spec/expression.html#add_expressions\n  */\n extern (C++) final class AddExp : BinExp\n {\n@@ -6239,7 +6239,7 @@ extern (C++) final class MinExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#cat_expressions\n+ * https://dlang.org/spec/expression.html#cat_expressions\n  */\n extern (C++) final class CatExp : BinExp\n {\n@@ -6262,7 +6262,7 @@ extern (C++) final class CatExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#mul_expressions\n+ * https://dlang.org/spec/expression.html#mul_expressions\n  */\n extern (C++) final class MulExp : BinExp\n {\n@@ -6278,7 +6278,7 @@ extern (C++) final class MulExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#mul_expressions\n+ * https://dlang.org/spec/expression.html#mul_expressions\n  */\n extern (C++) final class DivExp : BinExp\n {\n@@ -6294,7 +6294,7 @@ extern (C++) final class DivExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#mul_expressions\n+ * https://dlang.org/spec/expression.html#mul_expressions\n  */\n extern (C++) final class ModExp : BinExp\n {\n@@ -6310,7 +6310,7 @@ extern (C++) final class ModExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#pow_expressions\n+ * https://dlang.org/spec/expression.html#pow_expressions\n  */\n extern (C++) final class PowExp : BinExp\n {\n@@ -6416,8 +6416,8 @@ extern (C++) final class XorExp : BinExp\n }\n \n /***********************************************************\n- * http://dlang.org/spec/expression.html#andand_expressions\n- * http://dlang.org/spec/expression.html#oror_expressions\n+ * https://dlang.org/spec/expression.html#andand_expressions\n+ * https://dlang.org/spec/expression.html#oror_expressions\n  */\n extern (C++) final class LogicalExp : BinExp\n {\n@@ -6437,7 +6437,7 @@ extern (C++) final class LogicalExp : BinExp\n  * `op` is one of:\n  *      EXP.lessThan, EXP.lessOrEqual, EXP.greaterThan, EXP.greaterOrEqual\n  *\n- * http://dlang.org/spec/expression.html#relation_expressions\n+ * https://dlang.org/spec/expression.html#relation_expressions\n  */\n extern (C++) final class CmpExp : BinExp\n {\n@@ -6490,7 +6490,7 @@ extern (C++) final class RemoveExp : BinExp\n  *\n  * EXP.equal and EXP.notEqual\n  *\n- * http://dlang.org/spec/expression.html#equality_expressions\n+ * https://dlang.org/spec/expression.html#equality_expressions\n  */\n extern (C++) final class EqualExp : BinExp\n {\n@@ -6511,7 +6511,7 @@ extern (C++) final class EqualExp : BinExp\n  *\n  * EXP.identity and EXP.notIdentity\n  *\n- *  http://dlang.org/spec/expression.html#identity_expressions\n+ *  https://dlang.org/spec/expression.html#identity_expressions\n  */\n extern (C++) final class IdentityExp : BinExp\n {\n@@ -6530,7 +6530,7 @@ extern (C++) final class IdentityExp : BinExp\n /***********************************************************\n  * `econd ? e1 : e2`\n  *\n- * http://dlang.org/spec/expression.html#conditional_expressions\n+ * https://dlang.org/spec/expression.html#conditional_expressions\n  */\n extern (C++) final class CondExp : BinExp\n {"}, {"sha": "f848cce72a97614223146031a465a591661eaabf", "filename": "gcc/d/dmd/expression.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpression.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpression.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,22 +1,22 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/expression.h\n  */\n \n #pragma once\n \n #include \"ast_node.h\"\n-#include \"complex_t.h\"\n #include \"globals.h\"\n #include \"arraytypes.h\"\n #include \"visitor.h\"\n #include \"tokens.h\"\n \n+#include \"root/complex_t.h\"\n #include \"root/dcompat.h\"\n #include \"root/optional.h\"\n "}, {"sha": "100860612dcd16005d22dfc1d61d25e8acef1b89", "filename": "gcc/d/dmd/expressionsem.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: ($LINK2 https://dlang.org/spec/expression.html, Expressions)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/expressionsem.d, _expressionsem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_expressionsem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/expressionsem.d\n@@ -67,6 +67,7 @@ import dmd.root.filename;\n import dmd.common.outbuffer;\n import dmd.root.rootobject;\n import dmd.root.string;\n+import dmd.root.utf;\n import dmd.semantic2;\n import dmd.semantic3;\n import dmd.sideeffect;\n@@ -76,7 +77,6 @@ import dmd.tokens;\n import dmd.traits;\n import dmd.typesem;\n import dmd.typinf;\n-import dmd.utf;\n import dmd.utils;\n import dmd.visitor;\n \n@@ -5980,7 +5980,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n         /* Be wary of CWE-22: Improper Limitation of a Pathname to a Restricted Directory\n          * ('Path Traversal') attacks.\n-         * http://cwe.mitre.org/data/definitions/22.html\n+         * https://cwe.mitre.org/data/definitions/22.html\n          */\n \n         if (FileName.absolute(namez))\n@@ -6013,7 +6013,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n                 const attr = FileName.exists(path);\n                 const(char)* err = attr == 2 ? \"\" :\n                     (attr == 1 ? \" (not a directory)\" : \" (path not found)\");\n-                e.errorSupplemental(\"[%zu]: `%s`%s\", idx, path, err);\n+                e.errorSupplemental(\"[%llu]: `%s`%s\", cast(ulong)idx, path, err);\n             }\n             return setError();\n         }\n@@ -13108,7 +13108,7 @@ private bool fit(StructDeclaration sd, const ref Loc loc, Scope* sc, Expressions\n                 // CTFE sometimes creates null as hidden pointer; we'll allow this.\n                 continue;\n             }\n-                .error(loc, \"more initializers than fields (%zu) of `%s`\", nfields, sd.toChars());\n+                .error(loc, \"more initializers than fields (%llu) of `%s`\", cast(ulong)nfields, sd.toChars());\n             return false;\n         }\n         VarDeclaration v = sd.fields[i];"}, {"sha": "0ca756eb58ac15e0970dffdbf48337ae36816f19", "filename": "gcc/d/dmd/file_manager.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffile_manager.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffile_manager.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffile_manager.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,8 +1,8 @@\n /**\n  * Read a file from disk and store it in memory.\n  *\n- * Copyright: Copyright (C) 1999-2020 by The D Language Foundation, All Rights Reserved\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/file_manager.d, _file_manager.d)\n  * Documentation:  https://dlang.org/phobos/dmd_file_manager.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/file_manager.d"}, {"sha": "6705f24301f3be0150753cff57369433dee7e234", "filename": "gcc/d/dmd/file_manager.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffile_manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffile_manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffile_manager.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/file_manager.h\n  */\n "}, {"sha": "b779eaeeeee5ee15d3a6e8415464c45717a5e655", "filename": "gcc/d/dmd/foreachvar.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fforeachvar.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fforeachvar.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fforeachvar.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Utility to visit every variable in an expression.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/foreachvar.d, _foreachvar.d)\n  * Documentation:  https://dlang.org/phobos/dmd_foreachvar.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/foreachvar.d"}, {"sha": "b5148be30bd5547a98083532095f8453ca0c0e56", "filename": "gcc/d/dmd/func.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffunc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ffunc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffunc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -8,9 +8,9 @@\n  * - `invariant`\n  * - `unittest`\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/func.d, _func.d)\n  * Documentation:  https://dlang.org/phobos/dmd_func.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/func.d"}, {"sha": "22ccdddc0298fd307921fd7d4ce322c4df955a02", "filename": "gcc/d/dmd/globals.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fglobals.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fglobals.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Stores command line options and contains other miscellaneous declarations.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/globals.d, _globals.d)\n  * Documentation:  https://dlang.org/phobos/dmd_globals.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/globals.d\n@@ -126,7 +126,7 @@ extern (C++) struct Param\n     bool stackstomp;            // add stack stomping code\n     bool useUnitTests;          // generate unittest code\n     bool useInline = false;     // inline expand functions\n-    FeatureState useDIP25;  // implement http://wiki.dlang.org/DIP25\n+    FeatureState useDIP25;  // implement https://wiki.dlang.org/DIP25\n     FeatureState useDIP1000; // implement https://dlang.org/spec/memory-safe-d.html#scope-return-params\n     bool useDIP1021;        // implement https://github.com/dlang/DIPs/blob/master/DIPs/accepted/DIP1021.md\n     bool release;           // build release version\n@@ -162,7 +162,7 @@ extern (C++) struct Param\n                             // https://issues.dlang.org/show_bug.cgi?id=14246\n     bool fieldwise;         // do struct equality testing field-wise rather than by memcmp()\n     bool rvalueRefParam;    // allow rvalues to be arguments to ref parameters\n-                            // http://dconf.org/2019/talks/alexandrescu.html\n+                            // https://dconf.org/2019/talks/alexandrescu.html\n                             // https://gist.github.com/andralex/e5405a5d773f07f73196c05f8339435a\n                             // https://digitalmars.com/d/archives/digitalmars/D/Binding_rvalues_to_ref_parameters_redux_325087.html\n                             // Implementation: https://github.com/dlang/dmd/pull/9817\n@@ -303,7 +303,7 @@ extern (C++) struct Global\n {\n     const(char)[] inifilename; /// filename of configuration file as given by `-conf=`, or default value\n \n-    string copyright = \"Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\";\n+    string copyright = \"Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\";\n     string written = \"written by Walter Bright\";\n \n     Array!(const(char)*)* path;         /// Array of char*'s which form the import lookup path\n@@ -655,7 +655,7 @@ enum PINLINE : ubyte\n     always,   /// always inline\n }\n \n-alias StorageClass = uinteger_t;\n+alias StorageClass = ulong;\n \n /// Collection of global state\n extern (C++) __gshared Global global;"}, {"sha": "4e76967ee224435c8e92df557f831d8133732487", "filename": "gcc/d/dmd/globals.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fglobals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fglobals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/globals.h\n  */\n \n@@ -115,7 +115,7 @@ struct Param\n     bool stackstomp;    // add stack stomping code\n     bool useUnitTests;  // generate unittest code\n     bool useInline;     // inline expand functions\n-    FeatureState useDIP25;      // implement http://wiki.dlang.org/DIP25\n+    FeatureState useDIP25;      // implement https://wiki.dlang.org/DIP25\n     FeatureState useDIP1000; // implement https://dlang.org/spec/memory-safe-d.html#scope-return-params\n     bool useDIP1021;    // implement https://github.com/dlang/DIPs/blob/master/DIPs/accepted/DIP1021.md\n     bool release;       // build release version"}, {"sha": "73a1f00f77617d103a49b80cdbee5d6cb76906d4", "filename": "gcc/d/dmd/gluelayer.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fgluelayer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fgluelayer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fgluelayer.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * This 'glues' either the DMC or GCC back-end to the front-end.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/gluelayer.d, _gluelayer.d)\n  * Documentation:  https://dlang.org/phobos/dmd_gluelayer.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/gluelayer.d"}, {"sha": "6fc86c382a11d62bfa344c2f86de31c8d6c4baa9", "filename": "gcc/d/dmd/hdrgen.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fhdrgen.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fhdrgen.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Also used to convert AST nodes to D code in general, e.g. for error messages or `printf` debugging.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/hdrgen.d, _hdrgen.d)\n  * Documentation:  https://dlang.org/phobos/dmd_hdrgen.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/hdrgen.d\n@@ -21,7 +21,6 @@ import dmd.aliasthis;\n import dmd.arraytypes;\n import dmd.astenums;\n import dmd.attrib;\n-import dmd.complex;\n import dmd.cond;\n import dmd.ctfeexpr;\n import dmd.dclass;\n@@ -43,6 +42,7 @@ import dmd.init;\n import dmd.mtype;\n import dmd.nspace;\n import dmd.parse;\n+import dmd.root.complex;\n import dmd.root.ctfloat;\n import dmd.common.outbuffer;\n import dmd.root.rootobject;"}, {"sha": "0488c51b9e6bd6c004a4aa6dd4591544216a1f25", "filename": "gcc/d/dmd/hdrgen.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fhdrgen.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fhdrgen.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Dave Fladebo\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/hdrgen.h\n  */\n "}, {"sha": "29aca3ef34edf71cc2210e660af664766bd5b2f0", "filename": "gcc/d/dmd/iasm.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fiasm.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fiasm.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasm.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/iasm.html, Inline Assembler)\n  *\n- *              Copyright (C) 2018-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ *              Copyright (C) 2018-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/iasm.d, _iasm.d)\n  * Documentation:  https://dlang.org/phobos/dmd_iasm.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/iasm.d"}, {"sha": "495126de54f0f5982a3021eebb62896562974c20", "filename": "gcc/d/dmd/iasmgcc.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fiasmgcc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fiasmgcc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasmgcc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Inline assembler for the GCC D compiler.\n  *\n- *              Copyright (C) 2018-2021 by The D Language Foundation, All Rights Reserved\n+ *              Copyright (C) 2018-2022 by The D Language Foundation, All Rights Reserved\n  * Authors:     Iain Buclaw\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/iasmgcc.d, _iasmgcc.d)\n  * Documentation:  https://dlang.org/phobos/dmd_iasmgcc.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/iasmgcc.d"}, {"sha": "cef1b8e80ec0b5ea34ffae4bcb54052badf9bb32", "filename": "gcc/d/dmd/id.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fid.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Contains the `Id` struct with a list of predefined symbols the compiler knows about.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/id.d, _id.d)\n  * Documentation:  https://dlang.org/phobos/dmd_id.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/id.d"}, {"sha": "984c20313ceebbbcf89b3672e75063496ed6a7f2", "filename": "gcc/d/dmd/id.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fid.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2017-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 2017-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/id.h\n  */\n "}, {"sha": "b42b4a16b88bb44fc2b6e6a47cb76256e6bad464", "filename": "gcc/d/dmd/identifier.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fidentifier.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fidentifier.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Defines an identifier, which is the name of a `Dsymbol`.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/identifier.d, _identifier.d)\n  * Documentation:  https://dlang.org/phobos/dmd_identifier.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/identifier.d\n@@ -20,8 +20,8 @@ import dmd.common.outbuffer;\n import dmd.root.rootobject;\n import dmd.root.string;\n import dmd.root.stringtable;\n+import dmd.root.utf;\n import dmd.tokens;\n-import dmd.utf;\n \n \n /***********************************************************"}, {"sha": "4c748beb5d8b4c3f7942df1014bc969f6f911203", "filename": "gcc/d/dmd/identifier.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fidentifier.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fidentifier.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/identifier.h\n  */\n "}, {"sha": "ab46f5eebbdaa9b8d25b77acf2b88c4572f8c7fc", "filename": "gcc/d/dmd/impcnvtab.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimpcnvtab.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimpcnvtab.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimpcnvtab.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -6,9 +6,9 @@\n  * Specification: $(LINK2 https://dlang.org/spec/type.html#integer-promotions, Integer Promotions),\n  *   $(LINK2 https://dlang.org/spec/type.html#usual-arithmetic-conversions, Usual Arithmetic Conversions).\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/impcnvtab.d, _impcnvtab.d)\n  * Documentation:  https://dlang.org/phobos/dmd_impcnvtab.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/impcnvtab.d"}, {"sha": "f03113dc657a566648193c5894c8c1d5fd4d2684", "filename": "gcc/d/dmd/imphint.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimphint.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimphint.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimphint.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * For example, prompt to `import std.stdio` when using `writeln`.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/imphint.d, _imphint.d)\n  * Documentation:  https://dlang.org/phobos/dmd_imphint.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/imphint.d"}, {"sha": "5e7550e16ec7dceeba8d69119c2bdab5f49d2468", "filename": "gcc/d/dmd/import.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimport.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/import.h\n  */\n "}, {"sha": "1b92386c328103bb4feca0633a3e30f0beccdfde", "filename": "gcc/d/dmd/importc.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimportc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fimportc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimportc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: C11\n  *\n- * Copyright:   Copyright (C) 2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 2021-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/importc.d, _importc.d)\n  * Documentation:  https://dlang.org/phobos/dmd_importc.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/importc.d"}, {"sha": "179e0b6a5ab40000f186bd99c3b6c1ea1adf4c9e", "filename": "gcc/d/dmd/init.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Defines initializers of variables, e.g. the array literal in `int[3] x = [0, 1, 2]`.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/init.d, _init.d)\n  * Documentation:  https://dlang.org/phobos/dmd_init.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/init.d"}, {"sha": "c6c8c626a3a30acdfe82cf38b3bca74e24e49035", "filename": "gcc/d/dmd/init.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/init.h\n  */\n "}, {"sha": "6b10ace4e01c37be1c080acc2500f0cd55eaabed", "filename": "gcc/d/dmd/initsem.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finitsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finitsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finitsem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Semantic analysis of initializers.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/initsem.d, _initsem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_initsem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/initsem.d"}, {"sha": "25982a696c20a044de22ade5dc2b4f7e8250ee02", "filename": "gcc/d/dmd/inline.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finline.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Finline.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finline.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4,9 +4,9 @@\n  * The AST is traversed, and every function call is considered for inlining using `inlinecost.d`.\n  * The function call is then inlined if this cost is below a threshold.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/inline.d, _inline.d)\n  * Documentation:  https://dlang.org/phobos/dmd_inline.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/inline.d"}, {"sha": "d0206b6ff971e3023e9248706dd4cf498083f249", "filename": "gcc/d/dmd/intrange.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fintrange.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fintrange.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fintrange.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Implement $(LINK2 https://digitalmars.com/articles/b62.html, Value Range Propagation).\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/intrange.d, _intrange.d)\n  * Documentation:  https://dlang.org/phobos/dmd_intrange.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/intrange.d\n@@ -255,7 +255,7 @@ struct SignExtendedNumber\n         uinteger_t v = copySign(value, negative);\n \n         // compute base-2 log of 'v' to determine the maximum allowed bits to shift.\n-        // Ref: http://graphics.stanford.edu/~seander/bithacks.html#IntegerLog\n+        // Ref: https://graphics.stanford.edu/~seander/bithacks.html#IntegerLog\n \n         // Why is this a size_t? Looks like a bug.\n         size_t r, s;"}, {"sha": "ba2dd1794233bd34eec0cfd2afcdcf2b80e1b2b2", "filename": "gcc/d/dmd/json.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fjson.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fjson.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Code for generating .json descriptions of the module when passing the `-X` flag to dmd.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/json.d, _json.d)\n  * Documentation:  https://dlang.org/phobos/dmd_json.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/json.d"}, {"sha": "979440cd3086438d6f32bd16e7d13418a65165fe", "filename": "gcc/d/dmd/json.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fjson.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fjson.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/json.h\n  */\n "}, {"sha": "91df9cc9f255fce0446df041a8df058b373c1ef4", "filename": "gcc/d/dmd/lambdacomp.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Flambdacomp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Flambdacomp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Flambdacomp.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5,9 +5,9 @@\n  * The serialization is a string which contains the type of the parameters and the string\n  * represantation of the lambda expression.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/lamdbacomp.d, _lambdacomp.d)\n  * Documentation:  https://dlang.org/phobos/dmd_lambdacomp.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/lambdacomp.d"}, {"sha": "e74b19217608057b2fd49aa82c9d26d5425ff8bf", "filename": "gcc/d/dmd/lexer.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Flexer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Flexer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Flexer.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/lex.html, Lexical)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/lexer.d, _lexer.d)\n  * Documentation:  https://dlang.org/phobos/dmd_lexer.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/lexer.d\n@@ -32,8 +32,8 @@ import dmd.common.outbuffer;\n import dmd.root.port;\n import dmd.root.rmem;\n import dmd.root.string;\n+import dmd.root.utf;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.utils;\n \n nothrow:"}, {"sha": "512184ae9aab6aeb6cc0fd071e0d19d64b277e18", "filename": "gcc/d/dmd/mangle.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmangle.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/mangle.h\n  */\n "}, {"sha": "f020bfdb5a315bbe8e36255b82c20a4c1966903c", "filename": "gcc/d/dmd/module.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmodule.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmodule.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmodule.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/module.h\n  */\n "}, {"sha": "0257faa65b76507a87c352b45f9d218c70e2c567", "filename": "gcc/d/dmd/mtype.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmtype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmtype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Defines a D type.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/mtype.d, _mtype.d)\n  * Documentation:  https://dlang.org/phobos/dmd_mtype.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/mtype.d"}, {"sha": "fde5027e8b8e77a3c7b2f7bca23947f3215c8a1f", "filename": "gcc/d/dmd/mtype.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmtype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fmtype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/mtype.h\n  */\n "}, {"sha": "ed3f83227080ac081a88cf09f5dea6f65893c534", "filename": "gcc/d/dmd/nogc.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnogc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnogc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnogc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/function.html#nogc-functions, No-GC Functions)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/nogc.d, _nogc.d)\n  * Documentation:  https://dlang.org/phobos/dmd_nogc.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/nogc.d"}, {"sha": "29f920aaa4ce21a3124e5c8b44dde8eac7f0b552", "filename": "gcc/d/dmd/nspace.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnspace.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnspace.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnspace.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -36,9 +36,9 @@\n  * are valid D identifier.\n  *\n  * See_Also:    https://github.com/dlang/dmd/pull/10031\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/nspace.d, _nspace.d)\n  * Documentation:  https://dlang.org/phobos/dmd_nspace.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/nspace.d"}, {"sha": "7d6f65d5fa697bcb5cbfd8898fd21224b8456190", "filename": "gcc/d/dmd/nspace.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnspace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fnspace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnspace.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/nspace.h\n  */\n "}, {"sha": "c2594fe0138a80a2b929eb806325fdbf3b5b4a9f", "filename": "gcc/d/dmd/ob.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fob.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fob.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fob.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Flow analysis for Ownership/Borrowing\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/ob.d, _ob.d)\n  * Documentation:  https://dlang.org/phobos/dmd_escape.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/ob.d"}, {"sha": "6d283e17cc6f81490946db2d2ed7c5fe9d57b015", "filename": "gcc/d/dmd/objc.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fobjc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fobjc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fobjc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/objc_interface.html, Interfacing to Objective-C)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/objc.d, _objc.d)\n  * Documentation:  https://dlang.org/phobos/dmd_objc.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/objc.d"}, {"sha": "a03015489a432ef530c7f01c443cb13d6befd42b", "filename": "gcc/d/dmd/objc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fobjc.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2015-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 2015-2022 by The D Language Foundation, All Rights Reserved\n  * written by Michel Fortin\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/objc.h\n  */\n "}, {"sha": "c932d043dbc538226f69d632f9dd5ccc3d80144d", "filename": "gcc/d/dmd/opover.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fopover.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fopover.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fopover.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/operatoroverloading.html, Operator Overloading)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/opover.d, _opover.d)\n  * Documentation:  https://dlang.org/phobos/dmd_opover.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/opover.d"}, {"sha": "5864fa2af8ed18dad874d11c09daed12d8bd117c", "filename": "gcc/d/dmd/optimize.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Foptimize.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Foptimize.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Foptimize.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Perform constant folding.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/optimize.d, _optimize.d)\n  * Documentation:  https://dlang.org/phobos/dmd_optimize.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/optimize.d"}, {"sha": "700f3c5792135cb3bec377fa3e3eca7a3a0c750a", "filename": "gcc/d/dmd/parse.d", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/grammar.html, D Grammar)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/parse.d, _parse.d)\n  * Documentation:  https://dlang.org/phobos/dmd_parse.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/parse.d\n@@ -6081,7 +6081,19 @@ LagainStc:\n                 check(TOK.leftParenthesis);\n                 param = parseAssignCondition();\n                 condition = parseExpression();\n-                check(TOK.rightParenthesis);\n+                if (token.value != TOK.rightParenthesis && condition)\n+                {\n+                    error(\"missing closing `)` after `if (%s`\", param ? \"declaration\".ptr : condition.toChars());\n+                }\n+                else\n+                    check(TOK.rightParenthesis);\n+                if (token.value == TOK.rightParenthesis)\n+                {\n+                    if (condition) // if not an error in condition\n+                        error(\"extra `)` after `if (%s)`\", param ? \"declaration\".ptr : condition.toChars());\n+                    nextToken();\n+                }\n+\n                 {\n                     const lookingForElseSave = lookingForElse;\n                     lookingForElse = loc;"}, {"sha": "61331453ebcb55a42febe3416272d02cae14684f", "filename": "gcc/d/dmd/printast.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fprintast.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fprintast.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fprintast.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provides an AST printer for debugging.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/printast.d, _printast.d)\n  * Documentation:  https://dlang.org/phobos/dmd_printast.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/printast.d"}, {"sha": "b393c123da1dd324cdf18ccf4647147ef9b5e3f5", "filename": "gcc/d/dmd/root/README.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2FREADME.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2FREADME.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2FREADME.md?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5,7 +5,9 @@\n | [aav.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/aav.d)                 | An associative array implementation                                                        |\n | [array.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/array.d)             | A dynamic array implementation                                                             |\n | [bitarray.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/bitarray.d)       | A compact array of bits                                                                    |\n+| [complex.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/complex.d)         | A complex number type                                                                      |\n | [ctfloat.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/ctfloat.d)         | A floating point type for compile-time calculations                                        |\n+| [env.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/env.d)                 | Modify environment variables                                                               |\n | [file.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/file.d)               | Read a file from disk and store it in memory                                               |\n | [filename.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/filename.d)       | Encapsulate path and file names                                                            |\n | [hash.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/hash.d)               | Calculate a hash for a byte array                                                          |\n@@ -19,4 +21,5 @@\n | [speller.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/speller.d)         | Try to detect typos in identifiers                                                         |\n | [string.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/string.d)           | Various string related functions                                                           |\n | [stringtable.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/stringtable.d) | Specialized associative array with string keys stored in a variable length structure       |\n-| [strtold.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/strtold.d)         | D implementation of the standard C function `strtold` (String to long double)               |\n+| [strtold.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/strtold.d)         | D implementation of the standard C function `strtold` (String to long double)              |\n+| [utf.d](https://github.com/dlang/dmd/blob/master/src/dmd/root/utf.d)                 | Encoding/decoding Unicode text                                                             |"}, {"sha": "5b8cc82e5ebbe6c858e27e3bb8e687257c87d08e", "filename": "gcc/d/dmd/root/aav.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Faav.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Faav.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Faav.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Associative array implementation.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/aav.d, root/_aav.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_aav.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/aav.d"}, {"sha": "cd2d7096d3dbec1355654e69e695f83b2a238825", "filename": "gcc/d/dmd/root/array.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Farray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Farray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Farray.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2,9 +2,9 @@\n /**\n  * Dynamic array implementation.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/array.d, root/_array.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_array.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/array.d"}, {"sha": "866b952d587436e74520092b9b0c44f55548913a", "filename": "gcc/d/dmd/root/array.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Farray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Farray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Farray.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,8 +1,8 @@\n-/* Copyright (C) 2011-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 2011-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/array.h\n  */\n "}, {"sha": "42c09fa96ceeffca3f9b6e5611327fcbd29b9ce3", "filename": "gcc/d/dmd/root/bitarray.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Implementation of a bit array.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/bitarray.d, root/_bitarray.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_array.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/bitarray.d"}, {"sha": "c5c5d3a94bb91fe76756fecffe26794bbfc8376a", "filename": "gcc/d/dmd/root/bitarray.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fbitarray.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,8 +1,8 @@\n-/* Copyright (C) 2011-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 2011-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/bitarray.h\n  */\n "}, {"sha": "d9a396d9677b7885c532cc77ba102c168d1c97e5", "filename": "gcc/d/dmd/root/complex.d", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fcomplex.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fcomplex.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fcomplex.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,15 +1,15 @@\n /**\n  * Implements a complex number type.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n- * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/complex.d, _complex.d)\n- * Documentation:  https://dlang.org/phobos/dmd_complex.html\n- * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/complex.d\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/complex.d, _complex.d)\n+ * Documentation:  https://dlang.org/phobos/dmd_root_complex.html\n+ * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/complex.d\n  */\n \n-module dmd.complex;\n+module dmd.root.complex;\n \n import dmd.root.ctfloat;\n ", "previous_filename": "gcc/d/dmd/complex.d"}, {"sha": "c384848e9ec847bd9344919116a4ab7748d4c03b", "filename": "gcc/d/dmd/root/complex_t.h", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fcomplex_t.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fcomplex_t.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fcomplex_t.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,16 +1,16 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n- * https://github.com/dlang/dmd/blob/master/src/dmd/complex_t.h\n+ * https://www.boost.org/LICENSE_1_0.txt\n+ * https://github.com/dlang/dmd/blob/master/src/dmd/root/complex_t.h\n  */\n \n #pragma once\n \n-#include \"root/ctfloat.h\"\n+#include \"ctfloat.h\"\n \n /* Roll our own complex type for compilers that don't support complex\n  */", "previous_filename": "gcc/d/dmd/complex_t.h"}, {"sha": "5ccc7bf8e8c0d3a50d3fa8ed6fc0a0b8caa0303d", "filename": "gcc/d/dmd/root/ctfloat.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Collects functions for compile-time floating-point calculations.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/ctfloat.d, root/_ctfloat.d)\n  * Documentation: https://dlang.org/phobos/dmd_root_ctfloat.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/ctfloat.d"}, {"sha": "6b83dbf1bbf9b8faea2b0d28ae7b300f15997920", "filename": "gcc/d/dmd/root/ctfloat.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/ctfloat.h\n  */\n "}, {"sha": "5823e7c48864ecb5acfcc0107869478a142ca86f", "filename": "gcc/d/dmd/root/dcompat.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/dcompat.h\n  */\n "}, {"sha": "6331a6297f1f0bc0397c74c3f75a254d65a611d4", "filename": "gcc/d/dmd/root/file.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffile.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Read a file from disk and store it in memory.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/file.d, root/_file.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_file.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/file.d"}, {"sha": "44ca024d1057049966323dc9db144bb925d396e8", "filename": "gcc/d/dmd/root/file.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffile.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/file.h\n  */\n "}, {"sha": "292fccfb110df3d874f502653139243aba5ac9d5", "filename": "gcc/d/dmd/root/filename.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffilename.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffilename.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffilename.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Encapsulate path and file names.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/filename.d, root/_filename.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_filename.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/filename.d"}, {"sha": "419a4c9ae6864b7c67becc899411e83b6d0f99d7", "filename": "gcc/d/dmd/root/filename.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/filename.h\n  */\n "}, {"sha": "fe97c421ab6443780e6d70e46f081b87c9db27ed", "filename": "gcc/d/dmd/root/hash.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fhash.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fhash.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fhash.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Hash functions for arbitrary binary data.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Martin Nowak, Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Martin Nowak, Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/hash.d, root/_hash.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_hash.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/hash.d"}, {"sha": "609e7633cbef0f30225079d2581c0a9497e31fee", "filename": "gcc/d/dmd/root/object.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fobject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fobject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fobject.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/object.h\n  */\n "}, {"sha": "bb8150f904b2577b5f2781dfeba91a948aeb71eb", "filename": "gcc/d/dmd/root/optional.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Foptional.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Foptional.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Foptional.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Optional implementation.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/optional.d, root/_optional.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_optional.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/optional.d"}, {"sha": "e4a41a061008b46f3d1c2a0a97ed86102a40b9b2", "filename": "gcc/d/dmd/root/optional.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Foptional.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Foptional.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Foptional.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n /**\n  * Optional implementation.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/optional.h, root/_optional.h)\n  * Documentation:  https://dlang.org/phobos/dmd_root_optional.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/optional.h"}, {"sha": "0c8088cdd776481e8e7abf75c88b70bdb45812b5", "filename": "gcc/d/dmd/root/port.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fport.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fport.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fport.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Portable routines for functions that have different implementations on different platforms.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/port.d, root/_port.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_port.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/port.d"}, {"sha": "069a365addf2f589de5b704db3bf10935c9f166c", "filename": "gcc/d/dmd/root/port.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fport.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/port.h\n  */\n "}, {"sha": "1e86f32fa60b599631214ed79d97e5c7f18d7e76", "filename": "gcc/d/dmd/root/region.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fregion.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fregion.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fregion.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Region storage allocator implementation.\n  *\n- * Copyright:   Copyright (C) 2019-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 2019-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/region.d, root/_region.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_region.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/region.d"}, {"sha": "ffe5ee10fef95fe929a9a3e97f2ad40a19bf5e56", "filename": "gcc/d/dmd/root/rmem.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frmem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frmem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frmem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Allocate memory using `malloc` or the GC depending on the configuration.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/rmem.d, root/_rmem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_rmem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/rmem.d"}, {"sha": "1338d7c6e46096fb613f0342af29f8b384c1220f", "filename": "gcc/d/dmd/root/rmem.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frmem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frmem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frmem.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n-/* Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+/* Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/root/rmem.h\n  */\n "}, {"sha": "7390d07cacc3b7c89d9b70942fe705e844652afc", "filename": "gcc/d/dmd/root/rootobject.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frootobject.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Frootobject.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frootobject.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provide the root object that classes in dmd inherit from.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/rootobject.d, root/_rootobject.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_rootobject.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/rootobject.d"}, {"sha": "b3e59f5182e00deb64482e7cd3aee8621faaf379", "filename": "gcc/d/dmd/root/speller.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fspeller.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fspeller.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fspeller.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Does not have any dependencies on the rest of DMD.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/speller.d, root/_speller.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_speller.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/speller.d"}, {"sha": "0c7cad0b3909a360cfa4fe7002c839deaee83cba", "filename": "gcc/d/dmd/root/string.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fstring.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Contains various string related functions.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/string.d, root/_string.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_string.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/string.d"}, {"sha": "884a9f146a6eb46ce945f778daecbd2e1530e687", "filename": "gcc/d/dmd/root/stringtable.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * A specialized associative array with string keys stored in a variable length structure.\n  *\n- * Copyright: Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:   Walter Bright, http://www.digitalmars.com\n- * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright: Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Walter Bright, https://www.digitalmars.com\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:    $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/stringtable.d, root/_stringtable.d)\n  * Documentation:  https://dlang.org/phobos/dmd_root_stringtable.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/stringtable.d\n@@ -284,7 +284,7 @@ private:\n     size_t findSlot(hash_t hash, scope const(char)[] str) const @nogc nothrow pure\n     {\n         // quadratic probing using triangular numbers\n-        // http://stackoverflow.com/questions/2348187/moving-from-linear-probing-to-quadratic-probing-hash-collisons/2349774#2349774\n+        // https://stackoverflow.com/questions/2348187/moving-from-linear-probing-to-quadratic-probing-hash-collisons/2349774#2349774\n         for (size_t i = hash & (table.length - 1), j = 1;; ++j)\n         {\n             const(StringValue!T)* sv;"}, {"sha": "15838e9a068932f5bf9408ef58364a0c978ec69c", "filename": "gcc/d/dmd/root/utf.d", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Futf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Froot%2Futf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Futf.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,15 +1,15 @@\n /**\n  * Functions related to UTF encoding.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n- * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/utf.d, _utf.d)\n- * Documentation:  https://dlang.org/phobos/dmd_utf.html\n- * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/utf.d\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/root/utf.d, _utf.d)\n+ * Documentation:  https://dlang.org/phobos/dmd_root_utf.html\n+ * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/root/utf.d\n  */\n \n-module dmd.utf;\n+module dmd.root.utf;\n \n nothrow pure @nogc:\n ", "previous_filename": "gcc/d/dmd/utf.d"}, {"sha": "bad071e34a5007e08add4db6c1a4da55900adc85", "filename": "gcc/d/dmd/safe.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsafe.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsafe.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsafe.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/function.html#function-safety, Function Safety)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/safe.d, _safe.d)\n  * Documentation:  https://dlang.org/phobos/dmd_safe.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/safe.d"}, {"sha": "7314d5b5a0e33122fbec568b7f1496cf1baa0116", "filename": "gcc/d/dmd/sapply.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsapply.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsapply.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsapply.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provides a depth-first statement visitor.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/sparse.d, _sparse.d)\n  * Documentation:  https://dlang.org/phobos/dmd_sapply.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/sapply.d"}, {"sha": "a163e7577a25b34685afc4695fde076036f73d23", "filename": "gcc/d/dmd/scope.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fscope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fscope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fscope.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/scope.h\n  */\n "}, {"sha": "f36cdc9c4bc5b044eaaa7cd187866bd721c2f3f2", "filename": "gcc/d/dmd/semantic2.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsemantic2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsemantic2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsemantic2.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Performs the semantic2 stage, which deals with initializer expressions.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/semantic2.d, _semantic2.d)\n  * Documentation:  https://dlang.org/phobos/dmd_semantic2.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/semantic2.d\n@@ -56,11 +56,11 @@ import dmd.root.filename;\n import dmd.common.outbuffer;\n import dmd.root.rmem;\n import dmd.root.rootobject;\n+import dmd.root.utf;\n import dmd.sideeffect;\n import dmd.statementsem;\n import dmd.staticassert;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.statement;\n import dmd.target;\n import dmd.templateparamsem;"}, {"sha": "7bcb7ec1dc010f33d272d72144f5e365b1e0c4d3", "filename": "gcc/d/dmd/semantic3.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsemantic3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsemantic3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsemantic3.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Performs the semantic3 stage, which deals with function bodies.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/semantic3.d, _semantic3.d)\n  * Documentation:  https://dlang.org/phobos/dmd_semantic3.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/semantic3.d\n@@ -58,11 +58,11 @@ import dmd.root.filename;\n import dmd.common.outbuffer;\n import dmd.root.rmem;\n import dmd.root.rootobject;\n+import dmd.root.utf;\n import dmd.sideeffect;\n import dmd.statementsem;\n import dmd.staticassert;\n import dmd.tokens;\n-import dmd.utf;\n import dmd.semantic2;\n import dmd.statement;\n import dmd.target;"}, {"sha": "d36504948c0fa7ca68b5afc29daa2f9b509df33e", "filename": "gcc/d/dmd/sideeffect.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsideeffect.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fsideeffect.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsideeffect.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Find side-effects of expressions.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/sideeffect.d, _sideeffect.d)\n  * Documentation:  https://dlang.org/phobos/dmd_sideeffect.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/sideeffect.d"}, {"sha": "be568f58135120e466b53df8b21c1d246d913675", "filename": "gcc/d/dmd/statement.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/statement.html, Statements)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/statement.d, _statement.d)\n  * Documentation:  https://dlang.org/phobos/dmd_statement.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/statement.d\n@@ -72,7 +72,7 @@ TypeIdentifier getException()\n }\n \n /***********************************************************\n- * Specification: http://dlang.org/spec/statement.html\n+ * Specification: https://dlang.org/spec/statement.html\n  */\n extern (C++) abstract class Statement : ASTNode\n {"}, {"sha": "dfb65a1847d337e5b1e1dc891483b6d16b15315e", "filename": "gcc/d/dmd/statement.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/statement.h\n  */\n "}, {"sha": "b1f659d33efee56c0377ec3d5f02f89c3aaf9d8f", "filename": "gcc/d/dmd/statement_rewrite_walker.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement_rewrite_walker.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatement_rewrite_walker.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement_rewrite_walker.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provides a visitor for statements that allows rewriting the currently visited node.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/statement_rewrite_walker.d, _statement_rewrite_walker.d)\n  * Documentation:  https://dlang.org/phobos/dmd_statement_rewrite_walker.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/statement_rewrite_walker.d"}, {"sha": "faeba11446a1eee2dd8a087f8fbed3596c269a17", "filename": "gcc/d/dmd/statementsem.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatementsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstatementsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/statement.html, Statements)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/statementsem.d, _statementsem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_statementsem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/statementsem.d"}, {"sha": "7daf7cdcec151628705509763ab57566f1904ddc", "filename": "gcc/d/dmd/staticassert.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticassert.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticassert.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticassert.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/version.html#static-assert, Static Assert)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/staticassert.d, _staticassert.d)\n  * Documentation:  https://dlang.org/phobos/dmd_staticassert.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/staticassert.d"}, {"sha": "5c00b464f64670801c91b008b98ca1e66da7267e", "filename": "gcc/d/dmd/staticassert.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticassert.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/staticassert.h\n  */\n "}, {"sha": "6ff166a44e6cd730532ae39609b0d58239650f2e", "filename": "gcc/d/dmd/staticcond.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticcond.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstaticcond.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticcond.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Lazily evaluate static conditions for `static if`, `static assert` and template constraints.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/staticcond.d, _staticcond.d)\n  * Documentation:  https://dlang.org/phobos/dmd_staticcond.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/staticcond.d"}, {"sha": "3e26b8f9bd5bdecd69beffc4967c6d2dd912a0e1", "filename": "gcc/d/dmd/stmtstate.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstmtstate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fstmtstate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstmtstate.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Used to help transform statement AST into flow graph.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/stmtstate.d, _stmtstate.d)\n  * Documentation: https://dlang.org/phobos/dmd_stmtstate.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/stmtstate.d"}, {"sha": "619304db9278525ad3b7ca9eaaa9e163cb9ed780", "filename": "gcc/d/dmd/target.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftarget.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftarget.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftarget.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -15,9 +15,9 @@\n  * - $(LINK2 https://github.com/ldc-developers/ldc, LDC repository)\n  * - $(LINK2 https://github.com/D-Programming-GDC/gcc, GDC repository)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/target.d, _target.d)\n  * Documentation:  https://dlang.org/phobos/dmd_target.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/target.d\n@@ -74,7 +74,7 @@ extern (C++) struct Target\n         /* These are mutually exclusive; one and only one is set.\n          * Match spelling and casing of corresponding version identifiers\n          */\n-        Freestanding = 0,\n+        none         = 0,\n         linux        = 1,\n         Windows      = 2,\n         OSX          = 4,"}, {"sha": "9c879de293acc752ffa2c0f01d2c7a8deecd74d6", "filename": "gcc/d/dmd/target.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftarget.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2013-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 2013-2022 by The D Language Foundation, All Rights Reserved\n  * written by Iain Buclaw\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/target.h\n  */\n "}, {"sha": "95cd349639c183476dd2cad948c5a6d51a6a6376", "filename": "gcc/d/dmd/template.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftemplate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftemplate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftemplate.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/template.h\n  */\n "}, {"sha": "e093260adc7ad5d01a7353d65b76e76066d2b183", "filename": "gcc/d/dmd/templateparamsem.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftemplateparamsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftemplateparamsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftemplateparamsem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Semantic analysis of template parameters.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/templateparamsem.d, _templateparamsem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_templateparamsem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/templateparamsem.d"}, {"sha": "5830dbbf9437635c1e7bdebfb292ae44ef467c61", "filename": "gcc/d/dmd/tokens.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftokens.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftokens.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftokens.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/lex.html#tokens, Tokens)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/tokens.d, _tokens.d)\n  * Documentation:  https://dlang.org/phobos/dmd_tokens.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/tokens.d\n@@ -21,7 +21,7 @@ import dmd.identifier;\n import dmd.root.ctfloat;\n import dmd.common.outbuffer;\n import dmd.root.rmem;\n-import dmd.utf;\n+import dmd.root.utf;\n \n enum TOK : ubyte\n {"}, {"sha": "0a00ae7fc980e96a86e97f6db1d85aba584d6264", "filename": "gcc/d/dmd/tokens.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftokens.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftokens.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftokens.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/tokens.h\n  */\n "}, {"sha": "ae8ab9b49fb60037359fbb9df16cd09ea5445ae9", "filename": "gcc/d/dmd/traits.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftraits.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,9 +3,9 @@\n  *\n  * Specification: $(LINK2 https://dlang.org/spec/traits.html, Traits)\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/traits.d, _traits.d)\n  * Documentation:  https://dlang.org/phobos/dmd_traits.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/traits.d"}, {"sha": "34b363da6877d200f7b0bebdf7d1db9264ea8e75", "filename": "gcc/d/dmd/typesem.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftypesem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftypesem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftypesem.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Semantic analysis for D types.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/typesem.d, _typesem.d)\n  * Documentation:  https://dlang.org/phobos/dmd_typesem.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/typesem.d\n@@ -22,7 +22,6 @@ import dmd.arrayop;\n import dmd.arraytypes;\n import dmd.astcodegen;\n import dmd.astenums;\n-import dmd.complex;\n import dmd.dcast;\n import dmd.dclass;\n import dmd.declaration;\n@@ -52,6 +51,7 @@ import dmd.mtype;\n import dmd.objc;\n import dmd.opover;\n import dmd.parse;\n+import dmd.root.complex;\n import dmd.root.ctfloat;\n import dmd.root.rmem;\n import dmd.common.outbuffer;\n@@ -161,7 +161,7 @@ private void resolveTupleIndex(const ref Loc loc, Scope* sc, Dsymbol s, out Expr\n     const(uinteger_t) d = eindex.toUInteger();\n     if (d >= tup.objects.dim)\n     {\n-        .error(loc, \"tuple index `%llu` exceeds length %zu\", d, tup.objects.dim);\n+        .error(loc, \"tuple index `%llu` exceeds length %llu\", d, cast(ulong)tup.objects.dim);\n         pt = Type.terror;\n         return;\n     }"}, {"sha": "21447ae9a3d437df62525e3dab54513448d24f91", "filename": "gcc/d/dmd/typinf.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftypinf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Ftypinf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftypinf.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Generate `TypeInfo` objects, which are needed for run-time introspection of types.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/typeinf.d, _typeinf.d)\n  * Documentation:  https://dlang.org/phobos/dmd_typinf.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/typinf.d"}, {"sha": "f8e7e48365f4600ff2ce8b697220be3e8060365c", "filename": "gcc/d/dmd/utils.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Futils.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Futils.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Futils.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * This module defines some utility functions for DMD.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/utils.d, _utils.d)\n  * Documentation:  https://dlang.org/phobos/dmd_utils.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/utils.d"}, {"sha": "afc455784aaec6563296d104b55e29e90e27e6aa", "filename": "gcc/d/dmd/version.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fversion.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,10 +1,10 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n+ * Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n  * written by Walter Bright\n- * http://www.digitalmars.com\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/version.h\n  */\n "}, {"sha": "e6dfa1173cf3b9f28fdfe9d8be4f1b58e52d56c3", "filename": "gcc/d/dmd/visitor.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fvisitor.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fvisitor.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fvisitor.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n /**\n  * Provides a visitor class visiting all AST nodes present in the compiler.\n  *\n- * Copyright:   Copyright (C) 1999-2021 by The D Language Foundation, All Rights Reserved\n- * Authors:     $(LINK2 http://www.digitalmars.com, Walter Bright)\n- * License:     $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Copyright:   Copyright (C) 1999-2022 by The D Language Foundation, All Rights Reserved\n+ * Authors:     $(LINK2 https://www.digitalmars.com, Walter Bright)\n+ * License:     $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n  * Source:      $(LINK2 https://github.com/dlang/dmd/blob/master/src/dmd/visitor.d, _visitor.d)\n  * Documentation:  https://dlang.org/phobos/dmd_visitor.html\n  * Coverage:    https://codecov.io/gh/dlang/dmd/src/master/src/dmd/visitor.d"}, {"sha": "5bad56b701753e24f0dbf542d86a5dc54d630d06", "filename": "gcc/d/dmd/visitor.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fvisitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Fd%2Fdmd%2Fvisitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fvisitor.h?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,9 @@\n \n /* Compiler implementation of the D programming language\n- * Copyright (C) 2013-2021 by The D Language Foundation, All Rights Reserved\n- * http://www.digitalmars.com\n+ * Copyright (C) 2013-2022 by The D Language Foundation, All Rights Reserved\n+ * https://www.digitalmars.com\n  * Distributed under the Boost Software License, Version 1.0.\n- * http://www.boost.org/LICENSE_1_0.txt\n+ * https://www.boost.org/LICENSE_1_0.txt\n  * https://github.com/dlang/dmd/blob/master/src/dmd/visitor.h\n  */\n "}, {"sha": "5341a49f7665bab97d76dfbe5eb8c1aedf6e2418", "filename": "gcc/testsuite/gdc.test/compilable/99bottles.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,5 +1,5 @@\n // written by Don Clugston:\n-//    http://www.digitalmars.com/d/archives/digitalmars/D/announce/4374.html\n+//    https://www.digitalmars.com/d/archives/digitalmars/D/announce/4374.html\n //    http://www.99-bottles-of-beer.net/language-d-1212.html\n \n // Generates the \"99 bottles of beer\" song at compile time,"}, {"sha": "dfffe7745acd8608399da62fa722eb08449d7a74", "filename": "gcc/testsuite/gdc.test/compilable/art4769.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,4 +1,4 @@\n-// http://www.digitalmars.com/webnews/newsgroups.php?art_group=digitalmars.D.bugs&article_id=4769\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/4769.html\n \n // COMPILED_IMPORTS: imports/art4769a.d imports/art4769b.d\n // PERMUTE_ARGS:"}, {"sha": "395a49f791296131b762ed90b25787ff677a3797", "filename": "gcc/testsuite/gdc.test/compilable/test69.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest69.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest69.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest69.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,7 +1,7 @@\n // PERMUTE_ARGS:\n \n // ICE(expression.c) DMD 0.110\n-// http://www.digitalmars.com/d/archives/digitalmars/D/bugs/2966.html\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/2966.html\n \n string str255() { return \"\\255\"; }\n void fromFail49()"}, {"sha": "9a5a815afcdf900c3f4b69fe7233fd18cafb48b2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail11.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5,7 +5,7 @@ fail_compilation/fail11.d(12): Error: `int*` has no effect\n ---\n */\n \n-// http://forum.dlang.org/thread/c738o9$1p7i$1@digitaldaemon.com\n+// https://forum.dlang.org/thread/c738o9$1p7i$1@digitaldaemon.com\n \n void main()\n {"}, {"sha": "cd184851f00e8a7311b0fbed1fac126f9e7acb88", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail15.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -6,7 +6,7 @@ fail_compilation/fail15.d(24): Error: cannot use `[]` operator on expression of\n */\n /*\n Segfault on DMD 0.095\n-http://www.digitalmars.com/d/archives/digitalmars/D/bugs/926.html\n+https://www.digitalmars.com/d/archives/digitalmars/D/bugs/926.html\n */\n module test;\n "}, {"sha": "4f47a62d4a069b0595b087bad7c4347d6ad0f926", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail35.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail35.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail35.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail35.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5,7 +5,7 @@ fail_compilation/fail35.d(15): Error: variable `t` cannot be read at compile tim\n ---\n */\n \n-// http://www.digitalmars.com/d/archives/digitalmars/D/bugs/2372.html\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/2372.html\n // allegedly crashes, but cannot reproduce\n \n void main()"}, {"sha": "024220172056bb749c347b072d745b875830bbf9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail73.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail73.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail73.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail73.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -6,7 +6,7 @@ fail_compilation/fail73.d(20): Error: `case` not in `switch` statement\n */\n \n // segfault DMD 0.120\n-// http://www.digitalmars.com/d/archives/digitalmars/D/bugs/4634.html\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/4634.html\n \n void main()\n {"}, {"sha": "22cf39241f88b1899321f78946db91b81c08123c", "filename": "gcc/testsuite/gdc.test/fail_compilation/misc_parser_err_cov1.d", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fmisc_parser_err_cov1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fmisc_parser_err_cov1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fmisc_parser_err_cov1.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -15,14 +15,18 @@ fail_compilation/misc_parser_err_cov1.d(35): Error: `key:value` expected for ass\n fail_compilation/misc_parser_err_cov1.d(36): Error: basic type expected, not `;`\n fail_compilation/misc_parser_err_cov1.d(36): Error: `{ members }` expected for anonymous class\n fail_compilation/misc_parser_err_cov1.d(38): Error: template argument expected following `!`\n-fail_compilation/misc_parser_err_cov1.d(38): Error: found `if` when expecting `)`\n-fail_compilation/misc_parser_err_cov1.d(38): Error: found `)` instead of statement\n+fail_compilation/misc_parser_err_cov1.d(38): Error: missing closing `)` after `if (parseShift!()`\n+fail_compilation/misc_parser_err_cov1.d(38): Error: found `)` when expecting `(`\n+fail_compilation/misc_parser_err_cov1.d(39): Error: missing closing `)` after `if (`\n fail_compilation/misc_parser_err_cov1.d(39): Error: identifier expected following `(type)`.\n fail_compilation/misc_parser_err_cov1.d(39): Error: expression expected, not `;`\n fail_compilation/misc_parser_err_cov1.d(40): Error: semicolon expected following auto declaration, not `auto`\n fail_compilation/misc_parser_err_cov1.d(40): Error: identifier or `new` expected following `.`, not `+`\n-fail_compilation/misc_parser_err_cov1.d(41): Error: declaration expected, not `(`\n-fail_compilation/misc_parser_err_cov1.d(42): Error: unrecognized declaration\n+fail_compilation/misc_parser_err_cov1.d(41): Error: identifier or new keyword expected following `(...)`.\n+fail_compilation/misc_parser_err_cov1.d(41): Error: found `.` when expecting `;` following statement\n+fail_compilation/misc_parser_err_cov1.d(41): Error: expression expected, not `;`\n+fail_compilation/misc_parser_err_cov1.d(42): Error: found `}` when expecting `;` following statement\n+fail_compilation/misc_parser_err_cov1.d(43): Error: found `End of File` when expecting `}` following compound statement\n ---\n */\n module misc_parser_err_cov1;"}, {"sha": "c9c4288243809d1d9d82be4a905519f62f456e08", "filename": "gcc/testsuite/gdc.test/fail_compilation/parseStc.d", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2FparseStc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2FparseStc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2FparseStc.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,9 +1,10 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/parseStc.d(11): Error: found `;` when expecting `)`\n-fail_compilation/parseStc.d(11): Error: found `)` when expecting `;` following statement\n-fail_compilation/parseStc.d(12): Error: redundant attribute `const`\n+fail_compilation/parseStc.d(12): Error: missing closing `)` after `if (x`\n+fail_compilation/parseStc.d(12): Error: use `{ }` for an empty statement, not `;`\n+fail_compilation/parseStc.d(12): Error: found `)` when expecting `;` following statement\n+fail_compilation/parseStc.d(13): Error: redundant attribute `const`\n ---\n */\n void test1()\n@@ -15,9 +16,9 @@ void test1()\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/parseStc.d(25): Error: redundant attribute `const`\n fail_compilation/parseStc.d(26): Error: redundant attribute `const`\n-fail_compilation/parseStc.d(27): Error: conflicting attribute `immutable`\n+fail_compilation/parseStc.d(27): Error: redundant attribute `const`\n+fail_compilation/parseStc.d(28): Error: conflicting attribute `immutable`\n ---\n */\n void test2()\n@@ -30,8 +31,8 @@ void test2()\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/parseStc.d(37): Error: redundant attribute `const`\n fail_compilation/parseStc.d(38): Error: redundant attribute `const`\n+fail_compilation/parseStc.d(39): Error: redundant attribute `const`\n ---\n */\n struct S3 { const const test3() {} }"}, {"sha": "c981334a5b1017114b0e58a5f6c797f39688a5cb", "filename": "gcc/testsuite/gdc.test/runnable/mars1.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1923,7 +1923,7 @@ void test20050()\n \n ////////////////////////////////////////////////////////////////////////\n \n-// http://github.com/dlang/dmd/pull/11238\n+// https://github.com/dlang/dmd/pull/11238\n \n int testCpStatic1(int y)\n {\n@@ -1960,7 +1960,7 @@ void test7()\n \n ////////////////////////////////////////////////////////////////////////\n \n-// http://github.com/dlang/dmd/pull/11388\n+// https://github.com/dlang/dmd/pull/11388\n \n ushort byteswap(ushort x) pure\n {"}, {"sha": "ed237d867320fe41cb39ec11fa4e91124025ba56", "filename": "gcc/testsuite/gdc.test/runnable/template1.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate1.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1554,7 +1554,7 @@ void test64()\n }\n \n /******************************************/\n-// http://www.digitalmars.com/d/archives/28052.html\n+// https://www.digitalmars.com/d/archives/28052.html\n \n alias int value_type;\n \n@@ -1923,7 +1923,7 @@ specialization:: first int\n \n \n /******************************************/\n-// http://www.digitalmars.com/pnews/read.php?server=news.digitalmars.com&group=digitalmars.D.bugs&artnum=2117\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/2117.html\n \n class Conversion(T,U){\n         alias char Small;"}, {"sha": "234cb71400a5f10a6b8f7ba6976621fc55922314", "filename": "gcc/testsuite/gdc.test/runnable/template2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,5 +1,5 @@\n // original post to the D newsgroup:\n-//    http://www.digitalmars.com/pnews/read.php?server=news.digitalmars.com&group=D&artnum=10554&header\n+//    https://www.digitalmars.com/d/archives/10510.html#N10554\n // Test to manipulate 3D vectors, in D!\n // by Sean L Palmer (seanpalmer@directvinternet.com)\n // This code is released without any warranty.  Use at your own risk."}, {"sha": "cb3de5bc6f0a5164cc3c0bfc49d2b7ec44952146", "filename": "gcc/testsuite/gdc.test/runnable/template9.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -4706,7 +4706,7 @@ void test14735()\n {\n     char[64] buf;\n \n-    // Supported from 2.063: (http://dlang.org/changelog#implicitarraycast)\n+    // Supported from 2.063: (https://dlang.org/changelog/2.063.html#implicitarraycast)\n     assert(indexOf14735a(buf[0..32], '\\0') == 2);\n     assert(indexOf14735b(buf[0..32], '\\0') == 2);\n "}, {"sha": "01c74863937bffed6d9945a213f7f966d2fd0814", "filename": "gcc/testsuite/gdc.test/runnable/test12.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -832,7 +832,7 @@ void test38()\n \n \n /**************************************/\n-// http://www.digitalmars.com/d/archives/digitalmars/D/bugs/2409.html\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/2409.html\n \n class C39\n {"}, {"sha": "70e3a8255e5d62abdd79a6c9dc547f05ad4d8635", "filename": "gcc/testsuite/gdc.test/runnable/test15.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -515,7 +515,7 @@ void test30()\n \n \n /************************************/\n-// http://www.digitalmars.com/d/archives/18204.html\n+// https://www.digitalmars.com/d/archives/18204.html\n // DMD0.050 also failed with alias.\n \n alias int recls_bool_t;"}, {"sha": "30152fe3914eca32f10a35d1c9c09cc3a21532fd", "filename": "gcc/testsuite/gdc.test/runnable/test20855.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20855.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20855.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20855.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,3 +1,4 @@\n+// PERMUTE_ARGS: -O\n // https://issues.dlang.org/show_bug.cgi?id=20855\n \n string exp()"}, {"sha": "38a9cc367e522b158d811f4331379809f5cce4b0", "filename": "gcc/testsuite/gdc.test/runnable/test22.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -16,7 +16,7 @@ extern(C)\n \n /*************************************/\n \n-// http://www.digitalmars.com/d/archives/digitalmars/D/bugs/4766.html\n+// https://www.digitalmars.com/d/archives/digitalmars/D/bugs/4766.html\n // Only with -O\n \n real randx()"}, {"sha": "02bf77177e713ba43a706e525a7ab35f3e90bb19", "filename": "gcc/testsuite/gdc.test/runnable/testarray.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestarray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestarray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestarray.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -3,7 +3,7 @@\n \n import core.memory;\n \n-// see http://forum.dlang.org/thread/4BB6296E.6050506@digitalmars.com for more info\n+// see https://forum.dlang.org/thread/4BB6296E.6050506@digitalmars.com for more info\n \n // failure case for bug fixed by druntime rev 282\n // how it works:"}, {"sha": "ba0dc69b9d08a5b043839ee1e6b139c97eefc4d8", "filename": "gcc/testsuite/gdc.test/runnable/testcontracts.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -239,7 +239,7 @@ void test6()\n /*******************************************/\n \n /+\n-// http://d.puremagic.com/issues/show_bug.cgi?id=3722\n+// https://issues.dlang.org/show_bug.cgi?id=3722\n \n class Bug3722A\n {"}, {"sha": "11813a017b2896ff271ae716e8485c053988399f", "filename": "gcc/testsuite/gdc.test/runnable/testsafe.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsafe.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsafe.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsafe.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,6 +1,6 @@\n // PERMUTE_ARGS:\n \n-//http://d.puremagic.com/issues/show_bug.cgi?id=5415\n+//https://issues.dlang.org/show_bug.cgi?id=5415\n \n @safe\n void pointercast()\n@@ -31,7 +31,7 @@ void pointercast2()\n \n @safe\n void pointerarithmetic()\n-{//http://d.puremagic.com/issues/show_bug.cgi?id=4132\n+{//https://issues.dlang.org/show_bug.cgi?id=4132\n     void* a;\n     int b;\n \n@@ -273,7 +273,7 @@ void use__gshared()\n \n @safe\n void voidinitializers()\n-{//http://d.puremagic.com/issues/show_bug.cgi?id=4885\n+{//https://issues.dlang.org/show_bug.cgi?id=4885\n     static assert(!__traits(compiles, () @safe { uint* ptr = void; } ));\n     static assert( __traits(compiles, () @safe { uint i = void; } ));\n     static assert( __traits(compiles, () @safe { uint[2] a = void; } ));\n@@ -290,14 +290,14 @@ void voidinitializers()\n \n @safe\n void pointerindex()\n-{//http://d.puremagic.com/issues/show_bug.cgi?id=9195\n+{//https://issues.dlang.org/show_bug.cgi?id=9195\n     static assert(!__traits(compiles, () @safe { int* p; auto a = p[30]; }));\n     static assert( __traits(compiles, () @safe{ int* p; auto a = p[0]; }));\n }\n \n @safe\n void basiccast()\n-{//http://d.puremagic.com/issues/show_bug.cgi?id=5088\n+{//https://issues.dlang.org/show_bug.cgi?id=5088\n     auto a = cast(int)cast(const int)1;\n     auto b = cast(real)cast(const int)1;\n     auto c = cast(real)cast(const real)2.0;"}, {"sha": "bea85115ae69762d4eff6690ac496d5b366d5d4b", "filename": "gcc/testsuite/gdc.test/runnable/traits_child.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits_child.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits_child.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits_child.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -64,7 +64,7 @@ alias cm = C.m;\n alias cmset = C.m.set;\n \n \n-// adapted from http://thecybershadow.net/d/dconf2017/#/21\n+// adapted from https://thecybershadow.net/d/dconf2017/#/21\n struct S { string a, b, c; }\n \n static string printField(alias field)()"}, {"sha": "a66e00f0c5d1dc696564d07cbeda376fec6b3f98", "filename": "gcc/testsuite/gdc.test/runnable/xtest46.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5063,7 +5063,7 @@ class Bar6847 : Foo6847\n }\n \n /***************************************************/\n-// http://d.puremagic.com/issues/show_bug.cgi?id=6488\n+// https://issues.dlang.org/show_bug.cgi?id=6488\n \n struct TickDuration\n {\n@@ -6727,22 +6727,22 @@ void test9477()\n     static bool isEq (T1, T2)(T1 s1, T2 s2) { return s1 == s2; }\n     static bool isNeq(T1, T2)(T1 s1, T2 s2) { return s1 != s2; }\n \n-    // Must be outside the loop due to http://d.puremagic.com/issues/show_bug.cgi?id=9748\n+    // Must be outside the loop due to https://issues.dlang.org/show_bug.cgi?id=9748\n     int order;\n-    // Must be outside the loop due to http://d.puremagic.com/issues/show_bug.cgi?id=9756\n+    // Must be outside the loop due to https://issues.dlang.org/show_bug.cgi?id=9756\n     auto checkOrder(bool dyn, uint expected)()\n     {\n         assert(order==expected);\n         order++;\n-        // Use temporary (\"v\") to work around http://d.puremagic.com/issues/show_bug.cgi?id=9402\n+        // Use temporary (\"v\") to work around https://issues.dlang.org/show_bug.cgi?id=9402\n         auto v = cast(Select9477!(dyn, string, char[1]))\"a\";\n         return v;\n     }\n \n     foreach (b1; Tuple9477!(false, true))\n         foreach (b2; Tuple9477!(false, true))\n         {\n-            version (D_PIC) {} else version (D_PIE) {}  else // Work around http://d.puremagic.com/issues/show_bug.cgi?id=9754\n+            version (D_PIC) {} else version (D_PIE) {}  else // Work around https://issues.dlang.org/show_bug.cgi?id=9754\n             {\n                 assert( isEq (cast(Select9477!(b1, string, char[0]))\"\" , cast(Select9477!(b2, string, char[0]))\"\"  ));\n                 assert(!isNeq(cast(Select9477!(b1, string, char[0]))\"\" , cast(Select9477!(b2, string, char[0]))\"\"  ));"}, {"sha": "3aa798a543ca5139d77db9b63dfd032c6594bc50", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,4 +1,4 @@\n-fd9a45448244fb9dd4326520ad8526c540895eb0\n+759e60231a12482a1e1df5f891964e270dae0a1b\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "b60fa170c4c35f0eef1aa7e0eebe096bae6c96e5", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1,4 +1,4 @@\n-495e835c2da47606142ff24c85de707e3b955a9a\n+4687883231eba3bda7691321f2af107fdb3d0a44\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "b0e77076812850fc0a551562d585c50ecd86a0dc", "filename": "libphobos/src/std/algorithm/mutation.d", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Falgorithm%2Fmutation.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Falgorithm%2Fmutation.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Falgorithm%2Fmutation.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -866,6 +866,9 @@ if (isInputRange!InputRange\n Initializes all elements of `range` with their `.init` value.\n Assumes that the elements of the range are uninitialized.\n \n+This function is unavailable if `T` is a `struct` and  `T.this()` is annotated\n+with `@disable`.\n+\n Params:\n         range = An\n                 $(REF_ALTTEXT input range, isInputRange, std,range,primitives)\n@@ -874,10 +877,11 @@ Params:\n \n See_Also:\n         $(LREF fill)\n-        $(LREF uninitializeFill)\n+        $(LREF uninitializedFill)\n  */\n void initializeAll(Range)(Range range)\n-if (isInputRange!Range && hasLvalueElements!Range && hasAssignableElements!Range)\n+if (isInputRange!Range && hasLvalueElements!Range && hasAssignableElements!Range\n+    && __traits(compiles, { static ElementType!Range _; }))\n {\n     import core.stdc.string : memset, memcpy;\n     import std.traits : hasElaborateAssign, isDynamicArray;\n@@ -1037,6 +1041,18 @@ if (is(Range == char[]) || is(Range == wchar[]))\n     assert(xs[1].x == 3);\n }\n \n+// https://issues.dlang.org/show_bug.cgi?id=22105\n+@system unittest\n+{\n+    struct NoDefaultCtor\n+    {\n+        @disable this();\n+    }\n+\n+    NoDefaultCtor[1] array = void;\n+    static assert(!__traits(compiles, array[].initializeAll));\n+}\n+\n // move\n /**\n Moves `source` into `target`, via a destructive copy when necessary."}, {"sha": "08f9ead196ee2d804a3b02633f83f5c57129604d", "filename": "libphobos/src/std/container/array.d", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fcontainer%2Farray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fcontainer%2Farray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fcontainer%2Farray.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -428,8 +428,6 @@ if (!is(immutable T == immutable bool))\n \n         @property void length(size_t newLength)\n         {\n-            import std.algorithm.mutation : initializeAll;\n-\n             if (length >= newLength)\n             {\n                 // shorten\n@@ -440,10 +438,22 @@ if (!is(immutable T == immutable bool))\n                 _payload = _payload.ptr[0 .. newLength];\n                 return;\n             }\n-            immutable startEmplace = length;\n-            reserve(newLength);\n-            initializeAll(_payload.ptr[startEmplace .. newLength]);\n-            _payload = _payload.ptr[0 .. newLength];\n+\n+            static if (__traits(compiles, { static T _; }))\n+            {\n+                import std.algorithm.mutation : initializeAll;\n+\n+                immutable startEmplace = length;\n+                reserve(newLength);\n+                initializeAll(_payload.ptr[startEmplace .. newLength]);\n+                _payload = _payload.ptr[0 .. newLength];\n+            }\n+            else\n+            {\n+                assert(0, \"Cannot add elements to array because `\" ~\n+                    fullyQualifiedName!T ~ \".this()` is annotated with \" ~\n+                    \"`@disable`.\");\n+            }\n         }\n \n         @property size_t capacity() const\n@@ -901,12 +911,16 @@ if (!is(immutable T == immutable bool))\n     /**\n      * Sets the number of elements in the array to `newLength`. If `newLength`\n      * is greater than `length`, the new elements are added to the end of the\n-     * array and initialized with `T.init`.\n+     * array and initialized with `T.init`. If `T` is a `struct` whose default\n+     * constructor is annotated with `@disable`, `newLength` must be lower than\n+     * or equal to `length`.\n      *\n      * Complexity:\n      * Guaranteed $(BIGOH abs(length - newLength)) if `capacity >= newLength`.\n      * If `capacity < newLength` the worst case is $(BIGOH newLength).\n      *\n+     * Precondition: `__traits(compiles, { static T _; }) || newLength <= length`\n+     *\n      * Postcondition: `length == newLength`\n      */\n     @property void length(size_t newLength)\n@@ -1708,6 +1722,23 @@ if (!is(immutable T == immutable bool))\n     assert(equal(a[], [1,2,3,4,5,6,7,8]));\n }\n \n+// https://issues.dlang.org/show_bug.cgi?id=22105\n+@system unittest\n+{\n+    import core.exception : AssertError;\n+    import std.exception : assertThrown, assertNotThrown;\n+\n+    struct NoDefaultCtor\n+    {\n+        int i;\n+        @disable this();\n+        this(int j) { i = j; }\n+    }\n+\n+    auto array = Array!NoDefaultCtor([NoDefaultCtor(1), NoDefaultCtor(2)]);\n+    assertNotThrown!AssertError(array.length = 1);\n+    assertThrown!AssertError(array.length = 5);\n+}\n \n ////////////////////////////////////////////////////////////////////////////////\n // Array!bool"}, {"sha": "98df7fd1ccf53b40643940c9d38368b33947ef8d", "filename": "libphobos/src/std/conv.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fconv.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fconv.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fconv.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -2377,7 +2377,7 @@ Throws:\n     A $(LREF ConvException) If an overflow occurred during conversion or\n     if no character of the input was meaningfully converted.\n */\n-auto parse(Target, Source, Flag!\"doCount\" doCount = No.doCount)(ref Source s)\n+auto parse(Target, Source, Flag!\"doCount\" doCount = No.doCount)(ref scope Source s)\n if (isSomeChar!(ElementType!Source) &&\n     isIntegral!Target && !is(Target == enum))\n {\n@@ -2482,7 +2482,7 @@ if (isSomeChar!(ElementType!Source) &&\n                 v = -v;\n \n             static if (isNarrowString!Source)\n-                s = cast(Source) source;\n+                s = s[$-source.length..$];\n \n             static if (doCount)\n             {"}, {"sha": "9130499081c1eeb1c5da7f7928d229671cd34093", "filename": "libphobos/src/std/format/internal/read.d", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fformat%2Finternal%2Fread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fformat%2Finternal%2Fread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fformat%2Finternal%2Fread.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -228,26 +228,8 @@ if (isInputRange!Range && is(StringTypeOf!T) && !isAggregateType!T && !is(T == e\n }\n \n T unformatValueImpl(T, Range, Char)(ref Range input, scope const ref FormatSpec!Char fmt)\n-if (isInputRange!Range && isArray!T && !is(StringTypeOf!T) && !isAggregateType!T\n-    && !is(T == enum))\n-{\n-    import std.conv : parse, text;\n-    import std.format : enforceFmt;\n-\n-    const spec = fmt.spec;\n-    if (spec == '(')\n-    {\n-        return unformatRange!T(input, fmt);\n-    }\n-\n-    enforceFmt(spec == 's',\n-               text(\"Wrong unformat specifier '%\", spec , \"' for \", T.stringof));\n-\n-    return parse!T(input);\n-}\n-\n-T unformatValueImpl(T, Range, Char)(ref Range input, scope const ref FormatSpec!Char fmt)\n-if (isInputRange!Range && isAssociativeArray!T && !is(T == enum))\n+if (isInputRange!Range && !is(StringTypeOf!T) && !isAggregateType!T\n+    && (isArray!T || isAssociativeArray!T || is(T == enum)))\n {\n     import std.conv : parse, text;\n     import std.format : enforceFmt;"}, {"sha": "b3d8d1f6c3f3b8e9d468292e91815d5b5c60fbe4", "filename": "libphobos/src/std/format/read.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fformat%2Fread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fformat%2Fread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fformat%2Fread.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -719,3 +719,16 @@ T unformatValue(T, Range, Char)(ref Range input, scope const ref FormatSpec!Char\n     int b;\n     assertThrown(formattedRead(str, \"%s %d-%s\", &a, &b, &c));\n }\n+\n+// https://issues.dlang.org/show_bug.cgi?id=18051\n+@safe pure unittest\n+{\n+    import std.format : format;\n+\n+    enum Op { lt, gt, eq }\n+\n+    auto s = format!\"%s\"(Op.lt);\n+    Op op;\n+    assert(formattedRead!\"%s\"(s, op) == 1);\n+    assert(op == Op.lt);\n+}"}, {"sha": "658fd3847842725c6a07c423a190fe02c9de1e50", "filename": "libphobos/src/std/sumtype.d", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fsumtype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fsumtype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fsumtype.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1700,7 +1700,6 @@ template match(handlers...)\n  * Throws:\n  *   [MatchException], if the currently-held type has no matching handler.\n  *\n- * See_Also: `std.variant.tryVisit`\n  * See_Also: $(REF tryVisit, std,variant)\n  */\n version (D_Exceptions)"}, {"sha": "192b6fd2b2db954221f84dbd987b7b004a44d436", "filename": "libphobos/src/std/uni/package.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -5798,7 +5798,7 @@ if (is(Char1 : dchar) && is(Char2 : dchar))\n // Utilities for compression of Unicode code point sets\n //============================================================================\n \n-@safe void compressTo(uint val, ref ubyte[] arr) pure nothrow\n+@safe void compressTo(uint val, ref scope ubyte[] arr) pure nothrow\n {\n     // not optimized as usually done 1 time (and not public interface)\n     if (val < 128)\n@@ -5817,7 +5817,7 @@ if (is(Char1 : dchar) && is(Char2 : dchar))\n     }\n }\n \n-@safe uint decompressFrom(const(ubyte)[] arr, ref size_t idx) pure\n+@safe uint decompressFrom(scope const(ubyte)[] arr, ref size_t idx) pure\n {\n     import std.exception : enforce;\n     immutable first = arr[idx++];\n@@ -8412,7 +8412,7 @@ int hangulSyllableIndex(dchar ch) pure nothrow @nogc @safe\n }\n \n // internal helper: compose hangul syllables leaving dchar.init in holes\n-void hangulRecompose(dchar[] seq) pure nothrow @nogc @safe\n+void hangulRecompose(scope dchar[] seq) pure nothrow @nogc @safe\n {\n     for (size_t idx = 0; idx + 1 < seq.length; )\n     {\n@@ -8695,7 +8695,7 @@ inout(C)[] normalize(NormalizationForm norm=NFC, C)(return scope inout(C)[] inpu\n }\n \n // canonically recompose given slice of code points, works in-place and mutates data\n-private size_t recompose(size_t start, dchar[] input, ubyte[] ccc) pure nothrow @safe\n+private size_t recompose(size_t start, scope dchar[] input, scope ubyte[] ccc) pure nothrow @safe\n {\n     assert(input.length == ccc.length);\n     int accumCC = -1;// so that it's out of 0 .. 255 range"}, {"sha": "a29025a179a6e53fccef30f05e56127f2c7c9022", "filename": "libphobos/src/std/utf.d", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Futf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Futf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Futf.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -1168,7 +1168,7 @@ do\n \n /// ditto\n dchar decode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S)(\n-auto ref S str, ref size_t index) @trusted pure\n+auto ref scope S str, ref size_t index) @trusted pure\n if (isSomeString!S)\n in\n {\n@@ -1274,7 +1274,7 @@ do\n \n /// ditto\n dchar decodeFront(UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S)(\n-ref S str, out size_t numCodeUnits) @trusted pure\n+ref scope S str, out size_t numCodeUnits) @trusted pure\n if (isSomeString!S)\n in\n {\n@@ -2541,14 +2541,12 @@ size_t encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n         `UTFException` if `c` is not a valid UTF code point.\n   +/\n void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n-    ref char[] str, dchar c) @safe pure\n+    ref scope char[] str, dchar c) @safe pure\n {\n-    char[] r = str;\n-\n     if (c <= 0x7F)\n     {\n         assert(isValidDchar(c));\n-        r ~= cast(char) c;\n+        str ~= cast(char) c;\n     }\n     else\n     {\n@@ -2589,9 +2587,8 @@ void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n             c = _utfException!useReplacementDchar(\"Encoding an invalid code point in UTF-8\", c);\n             goto L3;\n         }\n-        r ~= buf[0 .. L];\n+        str ~= buf[0 .. L];\n     }\n-    str = r;\n }\n \n ///\n@@ -2666,18 +2663,16 @@ void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n \n /// ditto\n void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n-    ref wchar[] str, dchar c) @safe pure\n+    ref scope wchar[] str, dchar c) @safe pure\n {\n-    wchar[] r = str;\n-\n     if (c <= 0xFFFF)\n     {\n         if (0xD800 <= c && c <= 0xDFFF)\n             c = _utfException!useReplacementDchar(\"Encoding an isolated surrogate code point in UTF-16\", c);\n \n         assert(isValidDchar(c));\n     L1:\n-        r ~= cast(wchar) c;\n+        str ~= cast(wchar) c;\n     }\n     else if (c <= 0x10FFFF)\n     {\n@@ -2686,16 +2681,14 @@ void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n         assert(isValidDchar(c));\n         buf[0] = cast(wchar)((((c - 0x10000) >> 10) & 0x3FF) + 0xD800);\n         buf[1] = cast(wchar)(((c - 0x10000) & 0x3FF) + 0xDC00);\n-        r ~= buf;\n+        str ~= buf;\n     }\n     else\n     {\n         assert(!isValidDchar(c));\n         c = _utfException!useReplacementDchar(\"Encoding an invalid code point in UTF-16\", c);\n         goto L1;\n     }\n-\n-    str = r;\n }\n \n @safe unittest\n@@ -2727,7 +2720,7 @@ void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n \n /// ditto\n void encode(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(\n-    ref dchar[] str, dchar c) @safe pure\n+    ref scope dchar[] str, dchar c) @safe pure\n {\n     if ((0xD800 <= c && c <= 0xDFFF) || 0x10FFFF < c)\n         c = _utfException!useReplacementDchar(\"Encoding an invalid code point in UTF-32\", c);"}, {"sha": "fdfdc3f70abfa45cea510ed8ca5605cb06982ad4", "filename": "libphobos/src/std/xml.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fxml.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43b5909031c7aa32ac65df3e392a12d32c45194/libphobos%2Fsrc%2Fstd%2Fxml.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fxml.d?ref=c43b5909031c7aa32ac65df3e392a12d32c45194", "patch": "@@ -433,7 +433,7 @@ enum DecodeMode\n  * writefln(decode(\"a &gt; b\")); // writes \"a > b\"\n  * --------------\n  */\n-string decode(return scope string s, DecodeMode mode=DecodeMode.LOOSE) @safe pure\n+string decode(string s, DecodeMode mode=DecodeMode.LOOSE) @safe pure\n {\n     import std.algorithm.searching : startsWith;\n "}]}