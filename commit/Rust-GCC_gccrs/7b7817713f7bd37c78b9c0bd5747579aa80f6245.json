{"sha": "7b7817713f7bd37c78b9c0bd5747579aa80f6245", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I3ODE3NzEzZjdiZDM3Yzc4YjljMGJkNTc0NzU3OWFhODBmNjI0NQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-12-10T18:28:57Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-12-10T18:28:57Z"}, "message": "re PR target/64180 (PowerPC carry bit improvements)\n\n\tPR target/64180\n\t* config/rs6000/rs6000.c (TARGET_MD_ASM_CLOBBERS): Define.\n\t(rs6000_md_asm_clobbers): New function.\n\nFrom-SVN: r218589", "tree": {"sha": "acf16700f6bcfdf6c5bd51706c70bc16c550935e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acf16700f6bcfdf6c5bd51706c70bc16c550935e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b7817713f7bd37c78b9c0bd5747579aa80f6245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7817713f7bd37c78b9c0bd5747579aa80f6245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7817713f7bd37c78b9c0bd5747579aa80f6245", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7817713f7bd37c78b9c0bd5747579aa80f6245/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29df5715c0a1817ba3ad76dd3e10c7fb6e235254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29df5715c0a1817ba3ad76dd3e10c7fb6e235254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29df5715c0a1817ba3ad76dd3e10c7fb6e235254"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "2d4a8f99d78ec9471b232bfd4714720ad0419d71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7817713f7bd37c78b9c0bd5747579aa80f6245/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7817713f7bd37c78b9c0bd5747579aa80f6245/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b7817713f7bd37c78b9c0bd5747579aa80f6245", "patch": "@@ -1,3 +1,9 @@\n+2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/64180\n+\t* config/rs6000/rs6000.c (TARGET_MD_ASM_CLOBBERS): Define.\n+\t(rs6000_md_asm_clobbers): New function.\n+\n 2014-12-10  Felix Yang  <felix.yang@huawei.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_function_profiler): Remove"}, {"sha": "1c2070bd3058828d465c4a25423ef8769b0795d2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7817713f7bd37c78b9c0bd5747579aa80f6245/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7817713f7bd37c78b9c0bd5747579aa80f6245/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7b7817713f7bd37c78b9c0bd5747579aa80f6245", "patch": "@@ -1556,6 +1556,9 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #undef TARGET_ASM_LOOP_ALIGN_MAX_SKIP\n #define TARGET_ASM_LOOP_ALIGN_MAX_SKIP rs6000_loop_align_max_skip\n \n+#undef TARGET_MD_ASM_CLOBBERS\n+#define TARGET_MD_ASM_CLOBBERS rs6000_md_asm_clobbers\n+\n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE rs6000_option_override\n \n@@ -3146,6 +3149,19 @@ rs6000_builtin_mask_calculate (void)\n \t  | ((TARGET_LONG_DOUBLE_128)\t    ? RS6000_BTM_LDBL128 : 0));\n }\n \n+/* Implement TARGET_MD_ASM_CLOBBERS.  All asm statements are considered\n+   to clobber the XER[CA] bit because clobbering that bit without telling\n+   the compiler worked just fine with versions of GCC before GCC 5, and\n+   breaking a lot of older code in ways that are hard to track down is\n+   not such a great idea.  */\n+\n+static tree\n+rs6000_md_asm_clobbers (tree, tree, tree clobbers)\n+{\n+  tree s = build_string (strlen (reg_names[CA_REGNO]), reg_names[CA_REGNO]);\n+  return tree_cons (NULL_TREE, s, clobbers);\n+}\n+\n /* Override command line options.  Mostly we process the processor type and\n    sometimes adjust other TARGET_ options.  */\n "}]}