{"sha": "87d4d0ee2504d5350b1b355366cff7ea095b10fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkNGQwZWUyNTA0ZDUzNTBiMWIzNTUzNjZjZmY3ZWEwOTViMTBmYw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-08-12T14:18:17Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-12T14:18:17Z"}, "message": "Measure time spent in DD analysis and in code gen.\n\n2009-08-05  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (gloog): Add time to TV_GRAPHITE_CODE_GEN.\n\t* graphite-dependences.c (graphite_legal_transform): Add time to\n\tTV_GRAPHITE_DATA_DEPS.\n\t(dependency_between_pbbs_p): Same.\n\t* timevar.def (TV_GRAPHITE_DATA_DEPS, TV_GRAPHITE_CODE_GEN): New.\n\nFrom-SVN: r150683", "tree": {"sha": "6b171a09f1f0e1fe21c1ad4c5fc567c8569f70fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b171a09f1f0e1fe21c1ad4c5fc567c8569f70fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d4d0ee2504d5350b1b355366cff7ea095b10fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d4d0ee2504d5350b1b355366cff7ea095b10fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d4d0ee2504d5350b1b355366cff7ea095b10fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d4d0ee2504d5350b1b355366cff7ea095b10fc/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c7af939453060ac5129e08c7a527556500620b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7af939453060ac5129e08c7a527556500620b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7af939453060ac5129e08c7a527556500620b6"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "6b72bfd7a4e0a3734fc4f5d1378422a2ce7c3cc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -1,3 +1,11 @@\n+2009-08-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (gloog): Add time to TV_GRAPHITE_CODE_GEN.\n+\t* graphite-dependences.c (graphite_legal_transform): Add time to\n+\tTV_GRAPHITE_DATA_DEPS.\n+\t(dependency_between_pbbs_p): Same.\n+\t* timevar.def (TV_GRAPHITE_DATA_DEPS, TV_GRAPHITE_CODE_GEN): New.\n+\n 2009-08-12  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/41033"}, {"sha": "3762a0b6261eecf37e298c34e4166546be7f6ec9", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -1,3 +1,15 @@\n+2009-08-05  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (gloog): Add time to TV_GRAPHITE_CODE_GEN.\n+\t* graphite-dependences.c (graphite_legal_transform): Add time to\n+\tTV_GRAPHITE_DATA_DEPS.\n+\t(dependency_between_pbbs_p): Same.\n+\t* timevar.def (TV_GRAPHITE_DATA_DEPS, TV_GRAPHITE_CODE_GEN): New.\n+\n+2009-08-03  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Merge from mainline (r149952:150372).\n+\n 2009-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* ChangeLog.graphite: Fix indenting, white spaces and 80 columns."}, {"sha": "133bc524d7f22845aa9b36d20b292f6aff018728", "filename": "gcc/common.opt", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -571,12 +571,10 @@ fgraphite\n Common Report Var(flag_graphite)\n Enable in and out of Graphite representation\n \n-; This option is not documented as it does not perform any useful optimization.\n fgraphite-identity\n Common Report Var(flag_graphite_identity) Optimization\n Enable Graphite Identity transformation\n \n-; This option is not documented as it will be removed\n floop-parallelize-all\n Common Report Var(flag_loop_parallelize_all) Optimization\n Mark all loops as parallel"}, {"sha": "5da15e06659e1ca5b9f55e726cc559459ac47035", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -1160,7 +1160,11 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n   sese region = SCOP_REGION (scop);\n   ifsese if_region = NULL;\n   htab_t rename_map, newivs_index;\n-  cloog_prog_clast pc = scop_to_clast (scop);\n+  cloog_prog_clast pc;\n+\n+  timevar_push (TV_GRAPHITE_CODE_GEN);\n+\n+  pc = scop_to_clast (scop);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -1206,6 +1210,8 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n   VEC_free (tree, heap, newivs);\n   cloog_clast_free (pc.stmt);\n   cloog_program_free (pc.prog);\n+  timevar_pop (TV_GRAPHITE_CODE_GEN);\n+\n   return true;\n }\n "}, {"sha": "ed2f92e2950e8cc178bacc6219a1f7b57c6324b2", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -556,11 +556,17 @@ graphite_legal_transform (scop_p scop)\n   int i, j;\n   poly_bb_p pbb1, pbb2;\n \n+  timevar_push (TV_GRAPHITE_DATA_DEPS);\n+\n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       if (!graphite_legal_transform_bb (pbb1, pbb2))\n-\treturn false;\n+\t{\n+\t  timevar_pop (TV_GRAPHITE_DATA_DEPS);\n+\t  return false;\n+\t}\n \n+  timevar_pop (TV_GRAPHITE_DATA_DEPS);\n   return true;\n }\n \n@@ -681,11 +687,17 @@ dependency_between_pbbs_p (poly_bb_p pbb1, poly_bb_p pbb2, int level)\n   int i, j;\n   poly_dr_p pdr1, pdr2;\n \n+  timevar_push (TV_GRAPHITE_DATA_DEPS);\n+\n   for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), i, pdr1); i++)\n     for (j = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), j, pdr2); j++)\n       if (graphite_carried_dependence_level_k (pdr1, pdr2, level))\n-\treturn true;\n+\t{\n+\t  timevar_pop (TV_GRAPHITE_DATA_DEPS);\n+\t  return true;\n+\t}\n \n+  timevar_pop (TV_GRAPHITE_DATA_DEPS);\n   return false;\n }\n "}, {"sha": "0e704cb27b809a113361a65a20389fd1f5ea3e78", "filename": "gcc/timevar.def", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -122,7 +122,9 @@ DEFTIMEVAR (TV_COMPLETE_UNROLL       , \"complete unrolling\")\n DEFTIMEVAR (TV_TREE_PARALLELIZE_LOOPS, \"tree parallelize loops\")\n DEFTIMEVAR (TV_TREE_VECTORIZATION    , \"tree vectorization\")\n DEFTIMEVAR (TV_TREE_SLP_VECTORIZATION, \"tree slp vectorization\")\n-DEFTIMEVAR (TV_GRAPHITE_TRANSFORMS   , \"GRAPHITE loop transforms\")\n+DEFTIMEVAR (TV_GRAPHITE_TRANSFORMS   , \"Graphite loop transforms\")\n+DEFTIMEVAR (TV_GRAPHITE_DATA_DEPS    , \"Graphite data dep analysis\")\n+DEFTIMEVAR (TV_GRAPHITE_CODE_GEN     , \"Graphite code generation\")\n DEFTIMEVAR (TV_TREE_LINEAR_TRANSFORM , \"tree loop linear\")\n DEFTIMEVAR (TV_TREE_LOOP_DISTRIBUTION, \"tree loop distribution\")\n DEFTIMEVAR (TV_CHECK_DATA_DEPS       , \"tree check data dependences\")"}, {"sha": "9b9ac758dc2e102fb68635452b6743d870a4954e", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d4d0ee2504d5350b1b355366cff7ea095b10fc/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=87d4d0ee2504d5350b1b355366cff7ea095b10fc", "patch": "@@ -1801,6 +1801,11 @@ parallelize_loops (void)\n     {\n       htab_empty (reduction_list);\n \n+      /* If we use autopar in graphite pass, we use it's marked dependency\n+      checking results.  */\n+      if (flag_loop_parallelize_all && !loop->can_be_parallel)\n+\tcontinue;\n+\n       /* FIXME: Only consider innermost loops with just one exit.  */\n       if (loop->inner || !single_dom_exit (loop))\n \tcontinue;\n@@ -1811,19 +1816,22 @@ parallelize_loops (void)\n \t  /* FIXME: the check for vector phi nodes could be removed.  */\n \t  || loop_has_vector_phi_nodes (loop))\n \tcontinue;\n-     \n-        if (/* Do not bother with loops in cold areas.  */\n-\t    optimize_loop_nest_for_size_p (loop)\n-\t    /* Or loops that roll too little.  */\n-\t    || expected_loop_iterations (loop) <= n_threads)\n+\n+      /* FIXME: Bypass this check as graphite doesn't update the\n+      count and frequency correctly now.  */\n+      if (!flag_loop_parallelize_all\n+\t  && (expected_loop_iterations (loop) <= n_threads\n+\t      /* Do not bother with loops in cold areas.  */\n+\t      || optimize_loop_nest_for_size_p (loop)))\n \tcontinue;\n+\n       if (!try_get_loop_niter (loop, &niter_desc))\n \tcontinue;\n \n       if (!try_create_reduction_list (loop, reduction_list))\n \tcontinue;\n \n-      if (!loop_parallel_p (loop))\n+      if (!flag_loop_parallelize_all && !loop_parallel_p (loop))\n \tcontinue;\n \n       changed = true;"}]}