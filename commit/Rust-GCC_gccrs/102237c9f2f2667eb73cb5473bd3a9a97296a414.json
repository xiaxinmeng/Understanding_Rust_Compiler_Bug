{"sha": "102237c9f2f2667eb73cb5473bd3a9a97296a414", "node_id": "C_kwDOANBUbNoAKDEwMjIzN2M5ZjJmMjY2N2ViNzNjYjU0NzNiZDNhOWE5NzI5NmE0MTQ", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-04-28T07:30:06Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-05-18T02:56:35Z"}, "message": "recognize bzhi pattern when there's zero_extendsidi.\n\nbackend has\n\n16550(define_insn \"*bmi2_bzhi_<mode>3_2\"\n16551  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n16552        (and:SWI48\n16553          (plus:SWI48\n16554            (ashift:SWI48 (const_int 1)\n16555                          (match_operand:QI 2 \"register_operand\" \"r\"))\n16556            (const_int -1))\n16557          (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")))\n16558   (clobber (reg:CC FLAGS_REG))]\n16559  \"TARGET_BMI2\"\n16560  \"bzhi\\t{%<k>2, %1, %0|%0, %1, %<k>2}\"\n16561  [(set_attr \"type\" \"bitmanip\")\n16562   (set_attr \"prefix\" \"vex\")\n16563   (set_attr \"mode\" \"<MODE>\")])\n\nBut there's extra zero_extend in pattern match.\n\n424Failed to match this instruction:\n425(parallel [\n426        (set (reg:DI 90)\n427            (zero_extend:DI (and:SI (plus:SI (ashift:SI (const_int 1 [0x1])\n428                            (subreg:QI (reg:SI 98) 0))\n429                        (const_int -1 [0xffffffffffffffff]))\n430                    (subreg:SI (reg:DI 95) 0))))\n431        (clobber (reg:CC 17 flags))\n432    ])\n\nAdd new define_insn for it.\n\ngcc/ChangeLog:\n\n\tPR target/104375\n\t* config/i386/i386.md (*bmi2_bzhi_zero_extendsidi_4): New\n\tdefine_insn.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr104375.c: New test.", "tree": {"sha": "ee8852976fdd32aac827579af440bf4bcaa6e3f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8852976fdd32aac827579af440bf4bcaa6e3f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/102237c9f2f2667eb73cb5473bd3a9a97296a414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102237c9f2f2667eb73cb5473bd3a9a97296a414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102237c9f2f2667eb73cb5473bd3a9a97296a414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102237c9f2f2667eb73cb5473bd3a9a97296a414/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "850a13d754497faae91afabc6958780f1d63a574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/850a13d754497faae91afabc6958780f1d63a574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/850a13d754497faae91afabc6958780f1d63a574"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "80fc6c903ebca37e76da05888978f825fa816ad9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102237c9f2f2667eb73cb5473bd3a9a97296a414/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102237c9f2f2667eb73cb5473bd3a9a97296a414/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=102237c9f2f2667eb73cb5473bd3a9a97296a414", "patch": "@@ -16652,6 +16652,22 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*bmi2_bzhi_zero_extendsidi_4\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t  (and:SI\n+\t    (plus:SI\n+\t      (ashift:SI (const_int 1)\n+\t\t\t (match_operand:QI 2 \"register_operand\" \"r\"))\n+\t      (const_int -1))\n+\t    (match_operand:SI 1 \"nonimmediate_operand\" \"rm\"))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_64BIT && TARGET_BMI2\"\n+  \"bzhi\\t{%q2, %q1, %q0|%q0, %q1, %q2}\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"DI\")])\n+\n (define_insn \"bmi2_pdep_<mode>3\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n         (unspec:SWI48 [(match_operand:SWI48 1 \"register_operand\" \"r\")"}, {"sha": "5c9f511da5c5f133d421f928f91604c3222e0607", "filename": "gcc/testsuite/gcc.target/i386/pr104375.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102237c9f2f2667eb73cb5473bd3a9a97296a414/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104375.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102237c9f2f2667eb73cb5473bd3a9a97296a414/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104375.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104375.c?ref=102237c9f2f2667eb73cb5473bd3a9a97296a414", "patch": "@@ -0,0 +1,9 @@\n+#/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mbmi2 -O2\" } */\n+/* { dg-final { scan-assembler-times {(?n)shrx[\\t ]+} 1 } } */\n+/* { dg-final { scan-assembler-times {(?n)bzhi[\\t ]+} 1 } } */\n+\n+unsigned long long bextr_u64(unsigned long long w, unsigned off, unsigned int len)\n+{\n+    return (w >> off) & ((1U << len) - 1U);\n+}"}]}