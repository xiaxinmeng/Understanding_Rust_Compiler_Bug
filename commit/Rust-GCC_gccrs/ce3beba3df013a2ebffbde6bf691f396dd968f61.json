{"sha": "ce3beba3df013a2ebffbde6bf691f396dd968f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzYmViYTNkZjAxM2EyZWJmZmJkZTZiZjY5MWYzOTZkZDk2OGY2MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-08-19T17:00:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-08-19T17:00:51Z"}, "message": "re PR middle-end/45307 (Stores expanding to no RTL not removed by tree optimizers, Empty ctors/dtors not eliminated)\n\n\tPR c++/45307\n\t* gimplify.c (gimplify_init_constructor): Just return GS_UNHANDLED\n\tif ctor is empty.\n\t(gimplify_modify_expr_rhs): Adjust.\n\nFrom-SVN: r163380", "tree": {"sha": "07707b32a91d6054569c09547fee746ce8b65038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07707b32a91d6054569c09547fee746ce8b65038"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3beba3df013a2ebffbde6bf691f396dd968f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3beba3df013a2ebffbde6bf691f396dd968f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3beba3df013a2ebffbde6bf691f396dd968f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3beba3df013a2ebffbde6bf691f396dd968f61/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c5df20f2ee3af837efdcf9a384a5fb600791050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5df20f2ee3af837efdcf9a384a5fb600791050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5df20f2ee3af837efdcf9a384a5fb600791050"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "f7461ba8907a77a4d9730e157eb2b798e926cd00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -1,3 +1,10 @@\n+2010-08-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/45307\n+\t* gimplify.c (gimplify_init_constructor): Just return GS_UNHANDLED\n+\tif ctor is empty.\n+\t(gimplify_modify_expr_rhs): Adjust.\n+\n 2010-08-19  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cfgloop.c (get_loop_body_in_bfs_order): Avoid redundant call to"}, {"sha": "7667bb685b65fca85c06bb1897b4b2dca44a1c93", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -1,5 +1,9 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/45307\n+\t* cp-gimplify.c (cp_gimplify_expr): Also remove assignment\n+\tof empty class CONSTRUCTOR.\n+\n \t* except.c (pending_noexcept, pending_noexcept_checks): New.\n \t(perform_deferred_noexcept_checks): New.\n \t(maybe_noexcept_warning): Split from..."}, {"sha": "e5a7f2659589504fff181f1c1372b09337437a6d", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -575,15 +575,18 @@ cp_gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t  TREE_OPERAND (*expr_p, 1) = build1 (VIEW_CONVERT_EXPR,\n \t\t\t\t\t      TREE_TYPE (op0), op1);\n \n-\telse if ((is_gimple_lvalue (op1) || INDIRECT_REF_P (op1))\n-\t\t && !(TREE_CODE (op1) == CALL_EXPR\n-\t\t      && CALL_EXPR_RETURN_SLOT_OPT (op1))\n+\telse if ((is_gimple_lvalue (op1) || INDIRECT_REF_P (op1)\n+\t\t  || (TREE_CODE (op1) == CONSTRUCTOR\n+\t\t      && CONSTRUCTOR_NELTS (op1) == 0)\n+\t\t  || (TREE_CODE (op1) == CALL_EXPR\n+\t\t      && !CALL_EXPR_RETURN_SLOT_OPT (op1)))\n \t\t && is_really_empty_class (TREE_TYPE (op0)))\n \t  {\n \t    /* Remove any copies of empty classes.  We check that the RHS\n-\t       has a simple form so that TARGET_EXPRs and CONSTRUCTORs get\n-\t       reduced properly, and we leave the return slot optimization\n-\t       alone because it isn't a copy.\n+\t       has a simple form so that TARGET_EXPRs and non-empty\n+\t       CONSTRUCTORs get reduced properly, and we leave the return\n+\t       slot optimization alone because it isn't a copy (FIXME so it\n+\t       shouldn't be represented as one).\n \n \t       Also drop volatile variables on the RHS to avoid infinite\n \t       recursion from gimplify_expr trying to load the value.  */"}, {"sha": "7e33666dcebe7f0017ee816ed332c43f1f4d660b", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -4237,6 +4237,10 @@ gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p,\n \t  break;\n \n \tcase CONSTRUCTOR:\n+\t  /* If we already made some changes, let the front end have a\n+\t     crack at this before we break it down.  */\n+\t  if (ret != GS_UNHANDLED)\n+\t    break;\n \t  /* If we're initializing from a CONSTRUCTOR, break this into\n \t     individual MODIFY_EXPRs.  */\n \t  return gimplify_init_constructor (expr_p, pre_p, post_p, want_value,"}, {"sha": "289a1246938ffbb15a77d8cb3cadb09b0592f9e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -1,5 +1,7 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/tree-ssa/empty-2.C: New.\n+\n \t* g++.dg/cpp0x/noexcept09.C: New.\n \n 2010-08-19  Daniel Kraft  <d@domob.eu>"}, {"sha": "728678af30e15f17a0e2245946aa3d38647f20ff", "filename": "gcc/testsuite/g++.dg/tree-ssa/empty-2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3beba3df013a2ebffbde6bf691f396dd968f61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-2.C?ref=ce3beba3df013a2ebffbde6bf691f396dd968f61", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/45307\n+// { dg-options -fdump-tree-gimple }\n+\n+struct fallible_t { };\n+const fallible_t fallible = fallible_t();\n+\n+// { dg-final { scan-tree-dump-not \"fallible\" \"gimple\" } }\n+// { dg-final { cleanup-tree-dump \"gimple\" } }"}]}