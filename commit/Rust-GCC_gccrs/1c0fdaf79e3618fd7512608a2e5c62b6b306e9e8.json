{"sha": "1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMwZmRhZjc5ZTM2MThmZDc1MTI2MDhhMmU1YzYyYjZiMzA2ZTllOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-08T21:24:57Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-08T21:24:57Z"}, "message": "openmp: ensure variables in offload table are streamed out (PRs 94848 + 95551)\n\ngcc/ChangeLog:\n\n\tPR lto/94848\n\tPR middle-end/95551\n\t* omp-offload.c (add_decls_addresses_to_decl_constructor,\n\tomp_finish_file): Skip removed items.\n\t* lto-cgraph.c (output_offload_tables): Likewise; set force_output\n\tto this node for variables and functions.\n\nlibgomp/ChangeLog:\n\n\tPR lto/94848\n\tPR middle-end/95551\n\t* testsuite/libgomp.fortran/target-var.f90: New test.", "tree": {"sha": "40801185b32a7952f90cf1d11b9e664ccf29eeff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40801185b32a7952f90cf1d11b9e664ccf29eeff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffac9597256823612fb63bbab0f9ba3c11255e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffac9597256823612fb63bbab0f9ba3c11255e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffac9597256823612fb63bbab0f9ba3c11255e6b"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "93a99f3465b6d1b1f111d966c12e8c8c7f632105", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "patch": "@@ -1069,6 +1069,10 @@ output_offload_tables (void)\n \n   for (unsigned i = 0; i < vec_safe_length (offload_funcs); i++)\n     {\n+      symtab_node *node = symtab_node::get ((*offload_funcs)[i]);\n+      if (!node)\n+\tcontinue;\n+      node->force_output = true;\n       streamer_write_enum (ob->main_stream, LTO_symtab_tags,\n \t\t\t   LTO_symtab_last_tag, LTO_symtab_unavail_node);\n       lto_output_fn_decl_ref (ob->decl_state, ob->main_stream,\n@@ -1077,6 +1081,10 @@ output_offload_tables (void)\n \n   for (unsigned i = 0; i < vec_safe_length (offload_vars); i++)\n     {\n+      symtab_node *node = symtab_node::get ((*offload_vars)[i]);\n+      if (!node)\n+\tcontinue;\n+      node->force_output = true;\n       streamer_write_enum (ob->main_stream, LTO_symtab_tags,\n \t\t\t   LTO_symtab_last_tag, LTO_symtab_variable);\n       lto_output_var_decl_ref (ob->decl_state, ob->main_stream,"}, {"sha": "4e44cfc9d0a2e9246d5438b1a35deb5a8b95abf6", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "patch": "@@ -125,6 +125,10 @@ add_decls_addresses_to_decl_constructor (vec<tree, va_gc> *v_decls,\n #endif\n \t  && lookup_attribute (\"omp declare target link\", DECL_ATTRIBUTES (it));\n \n+      /* See also omp_finish_file and output_offload_tables in lto-cgraph.c.  */\n+      if (!symtab_node::get (it))\n+\tcontinue;\n+\n       tree size = NULL_TREE;\n       if (is_var)\n \tsize = fold_convert (const_ptr_type_node, DECL_SIZE_UNIT (it));\n@@ -341,7 +345,7 @@ omp_finish_file (void)\n       add_decls_addresses_to_decl_constructor (offload_vars, v_v);\n \n       tree vars_decl_type = build_array_type_nelts (pointer_sized_int_node,\n-\t\t\t\t\t\t    num_vars * 2);\n+\t\t\t\t\t\t    vec_safe_length (v_v));\n       tree funcs_decl_type = build_array_type_nelts (pointer_sized_int_node,\n \t\t\t\t\t\t     num_funcs);\n       SET_TYPE_ALIGN (vars_decl_type, TYPE_ALIGN (pointer_sized_int_node));\n@@ -376,11 +380,17 @@ omp_finish_file (void)\n       for (unsigned i = 0; i < num_funcs; i++)\n \t{\n \t  tree it = (*offload_funcs)[i];\n+\t  /* See also add_decls_addresses_to_decl_constructor\n+\t     and output_offload_tables in lto-cgraph.c.  */\n+\t  if (!symtab_node::get (it))\n+\t    continue;\n \t  targetm.record_offload_symbol (it);\n \t}\n       for (unsigned i = 0; i < num_vars; i++)\n \t{\n \t  tree it = (*offload_vars)[i];\n+\t  if (!symtab_node::get (it))\n+\t    continue;\n #ifdef ACCEL_COMPILER\n \t  if (DECL_HAS_VALUE_EXPR_P (it)\n \t      && lookup_attribute (\"omp declare target link\","}, {"sha": "5e5ccd47c9611b84e4ecae02043e78f7dec24c4b", "filename": "libgomp/testsuite/libgomp.fortran/target-var.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-var.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-var.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-var.f90?ref=1c0fdaf79e3618fd7512608a2e5c62b6b306e9e8", "patch": "@@ -0,0 +1,32 @@\n+! { dg-additional-options \"-O3\" }\n+!\n+! With -O3 the static local variable A.10 generated for\n+! the array constructor [-2, -4, ..., -20] is optimized\n+! away - which has to be handled in the offload_vars table.\n+!\n+program main\n+  implicit none (type, external)\n+  integer :: j\n+  integer, allocatable :: A(:)\n+\n+  A = [(3*j, j=1, 10)]\n+  call bar (A)\n+  deallocate (A)\n+contains\n+  subroutine bar (array)\n+    integer :: i\n+    integer :: array(:)\n+\n+    !$omp target map(from:array)\n+    !$acc parallel copyout(array)\n+    array = [(-2*i, i = 1, size(array))]\n+    !$omp do private(array)\n+    !$acc loop gang private(array)\n+    do i = 1, 10\n+      array(i) = 9*i\n+    end do\n+    if (any (array /= [(-2*i, i = 1, 10)])) error stop 2\n+    !$omp end target\n+    !$acc end parallel\n+  end subroutine bar\n+end"}]}