{"sha": "a0d074e1069cc78ca03c5775149060eec4fa36e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkMDc0ZTEwNjljYzc4Y2EwM2M1Nzc1MTQ5MDYwZWVjNGZhMzZlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-22T23:08:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-22T23:08:27Z"}, "message": "(enumlist): Propagate error_mark_node.\n\nFrom-SVN: r10396", "tree": {"sha": "df6134da894a8c968b006278828ac9c9a337876b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6134da894a8c968b006278828ac9c9a337876b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d074e1069cc78ca03c5775149060eec4fa36e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d074e1069cc78ca03c5775149060eec4fa36e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d074e1069cc78ca03c5775149060eec4fa36e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d074e1069cc78ca03c5775149060eec4fa36e9/comments", "author": null, "committer": null, "parents": [{"sha": "1e5b2303241086a79bf7e3db7082a0cb6d72c6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5b2303241086a79bf7e3db7082a0cb6d72c6de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5b2303241086a79bf7e3db7082a0cb6d72c6de"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "044e452324956a966b05dddc00c0878ba2b4c61b", "filename": "gcc/c-parse.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d074e1069cc78ca03c5775149060eec4fa36e9/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d074e1069cc78ca03c5775149060eec4fa36e9/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=a0d074e1069cc78ca03c5775149060eec4fa36e9", "patch": "@@ -1490,7 +1490,10 @@ component_declarator:\n enumlist:\n \t  enumerator\n \t| enumlist ',' enumerator\n-\t\t{ $$ = chainon ($3, $1); }\n+\t\t{ if ($1 == error_mark_node)\n+\t\t    $$ = $1;\n+\t\t  else\n+\t\t    $$ = chainon ($3, $1); }\n \t| error\n \t\t{ $$ = error_mark_node; }\n \t;"}]}