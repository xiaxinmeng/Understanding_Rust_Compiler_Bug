{"sha": "7d57b4cac6493c35e1cd8d68565257a4ca4b87a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q1N2I0Y2FjNjQ5M2MzNWUxY2Q4ZDY4NTY1MjU3YTRjYTRiODdhMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-19T20:24:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-19T20:24:13Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r524", "tree": {"sha": "8b1b158639c1e7b02f36bca54e915218bfb8f32c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b1b158639c1e7b02f36bca54e915218bfb8f32c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3/comments", "author": null, "committer": null, "parents": [{"sha": "3dd4b517364d26c31568aab12274c7027c93789d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd4b517364d26c31568aab12274c7027c93789d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd4b517364d26c31568aab12274c7027c93789d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3032f7c5e17b5515f8babda98f744c18976db821", "filename": "gcc/c-aux-info.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3/gcc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d57b4cac6493c35e1cd8d68565257a4ca4b87a3/gcc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-aux-info.c?ref=7d57b4cac6493c35e1cd8d68565257a4ca4b87a3", "patch": "@@ -55,6 +55,7 @@ static char * gen_type ();\n static char * gen_decl ();\n void   gen_aux_info_record ();\n \n+#if 0\n /* Virtually every UN*X system now in common use (except for pre-4.3-tahoe\n    BSD systems) now provides getcwd as called for by POSIX.  Allow for\n    the few exceptions to the general rule here.  */\n@@ -68,6 +69,7 @@ extern char *getcwd ();\n /* We actually use this as a starting point, not a limit.  */\n #define GUESSPATHLEN 100\n #endif /* (defined (USG) || defined (VMS)) */\n+#endif /* 0 */\n \f\n /*  Take two strings and mash them together into a newly allocated area.  */\n \n@@ -620,6 +622,7 @@ gen_aux_info_record (fndecl, is_definition, is_implicit, is_prototyped)\n \n       if (! compiled_from_record++)\n \t{\n+#if 0\n \t  int size;\n \t  char *wd;\n \t  char *value;\n@@ -638,6 +641,11 @@ gen_aux_info_record (fndecl, is_definition, is_implicit, is_prototyped)\n \n \t  if (value != 0)\n \t    fprintf (aux_info_file, \"/* compiled from: %s */\\n\", wd);\n+#endif\n+\t  /* The first line tells which directory file names are relative to.\n+\t     Currently, -fgen-aux-info works only for files in the working\n+\t     directory, so just use a `.' as a placeholder for now.  */\n+\t  fprintf (aux_info_file, \"/* compiled from: . */\\n\");\n \t}\n \n       /* Write the actual line of auxiliary info.  */"}]}