{"sha": "22c242342e38ebffa6bbf7e86e7a1e4abdf0d686", "node_id": "C_kwDOANBUbNoAKDIyYzI0MjM0MmUzOGViZmZhNmJiZjdlODZlN2ExZTRhYmRmMGQ2ODY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-18T16:50:19Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-18T18:34:13Z"}, "message": "IPA: fix reproducibility in IPA MOD REF\n\ngcc/ChangeLog:\n\n\t* ipa-modref.c (analyze_function): Do not execute the code\n\tonly if dump_file != NULL.", "tree": {"sha": "a032df22f4053de9eec281d937ca5e200fbfa59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a032df22f4053de9eec281d937ca5e200fbfa59b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "616ca1024a79c6a1935ea152051b9016d2142fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616ca1024a79c6a1935ea152051b9016d2142fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616ca1024a79c6a1935ea152051b9016d2142fb6"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "213343173c528ded273a68d52d4bd8ebdacf5103", "filename": "gcc/ipa-modref.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686/gcc%2Fipa-modref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c242342e38ebffa6bbf7e86e7a1e4abdf0d686/gcc%2Fipa-modref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.c?ref=22c242342e38ebffa6bbf7e86e7a1e4abdf0d686", "patch": "@@ -2880,15 +2880,15 @@ analyze_function (function *f, bool ipa)\n \toptimization_summaries = modref_summaries::create_ggc (symtab);\n       else /* Remove existing summary if we are re-running the pass.  */\n \t{\n-\t  if (dump_file\n-\t      && (summary\n-\t\t  = optimization_summaries->get (fnode))\n-\t\t != NULL\n+\t  summary = optimization_summaries->get (fnode);\n+\t  if (summary != NULL\n \t      && summary->loads)\n \t    {\n-\t      fprintf (dump_file, \"Past summary:\\n\");\n-\t      optimization_summaries->get\n-\t\t (fnode)->dump (dump_file);\n+\t      if (dump_file)\n+\t\t{\n+\t\t  fprintf (dump_file, \"Past summary:\\n\");\n+\t\t  optimization_summaries->get (fnode)->dump (dump_file);\n+\t\t}\n \t      past_flags.reserve_exact (summary->arg_flags.length ());\n \t      past_flags.splice (summary->arg_flags);\n \t      past_retslot_flags = summary->retslot_flags;"}]}