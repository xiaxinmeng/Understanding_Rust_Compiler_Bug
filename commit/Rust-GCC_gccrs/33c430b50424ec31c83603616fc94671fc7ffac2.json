{"sha": "33c430b50424ec31c83603616fc94671fc7ffac2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNjNDMwYjUwNDI0ZWMzMWM4MzYwMzYxNmZjOTQ2NzFmYzdmZmFjMg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-11T09:20:07Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-11T09:20:07Z"}, "message": "re PR bootstrap/63699 (Bootstrap fails in libcc1 on darwin14)\n\n\tPR bootstrap/63699\n\tPR bootstrap/63750\n\n\t* system.h: Include <string> before \"safe-ctype.h\"\n\t* wide-int.h (wi::smin, wi::smax, wi::umin, wi::umax): Prefix\n\tcalls to min/max with wi namespace.\n\t* ipa-chkp.c: Don't include <string>.\n\n\t* plugin.cc: Don't include <string>.\n\nFrom-SVN: r217342", "tree": {"sha": "24bb32afacf6702b2c625a2a53eac39fadac1484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24bb32afacf6702b2c625a2a53eac39fadac1484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33c430b50424ec31c83603616fc94671fc7ffac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c430b50424ec31c83603616fc94671fc7ffac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33c430b50424ec31c83603616fc94671fc7ffac2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c430b50424ec31c83603616fc94671fc7ffac2/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04dc44ac2176a137c38eff59138df59b230e6ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04dc44ac2176a137c38eff59138df59b230e6ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04dc44ac2176a137c38eff59138df59b230e6ee1"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "f86c51baf8cf31e3d8cb03b285872976c3ad67e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -1,3 +1,12 @@\n+2014-11-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR bootstrap/63699\n+\tPR bootstrap/63750\n+\t* system.h: Include <string> before \"safe-ctype.h\"\n+\t* wide-int.h (wi::smin, wi::smax, wi::umin, wi::umax): Prefix\n+\tcalls to min/max with wi namespace.\n+\t* ipa-chkp.c: Don't include <string>.\n+\n 2014-11-11  Terry Guo  <terry.guo@arm.com>\n \n \t* doc/invoke.texi (-masm-syntax-unified): Reword and fix typo."}, {"sha": "19a989453b699e2667936f86db4972f60060682c", "filename": "gcc/ipa-chkp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fipa-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fipa-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-chkp.c?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"tree-chkp.h\"\n #include \"ipa-chkp.h\"\n-#include <string>\n \n /*  Pointer Bounds Checker has two IPA passes to support code instrumentation.\n "}, {"sha": "c05f02d627300c97bf87afa1b8e7b627dad1e3dd", "filename": "gcc/system.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -194,6 +194,13 @@ extern int fprintf_unlocked (FILE *, const char *, ...);\n #undef fread_unlocked\n #undef fwrite_unlocked\n \n+/* Include <string> before \"safe-ctype.h\" to avoid GCC poisoning\n+   the ctype macros through safe-ctype.h */\n+\n+#ifdef __cplusplus\n+# include <string>\n+#endif\n+\n /* There are an extraordinary number of issues with <ctype.h>.\n    The last straw is that it varies with the locale.  Use libiberty's\n    replacement instead.  */"}, {"sha": "00c7d6ec0e4d843b93b2a88b9e34c58f75109006", "filename": "gcc/wide-int.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fwide-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/gcc%2Fwide-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int.h?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -2129,15 +2129,15 @@ template <typename T1, typename T2>\n inline WI_BINARY_RESULT (T1, T2)\n wi::smin (const T1 &x, const T2 &y)\n {\n-  return min (x, y, SIGNED);\n+  return wi::min (x, y, SIGNED);\n }\n \n /* Return the minimum of X and Y, treating both as unsigned values.  */\n template <typename T1, typename T2>\n inline WI_BINARY_RESULT (T1, T2)\n wi::umin (const T1 &x, const T2 &y)\n {\n-  return min (x, y, UNSIGNED);\n+  return wi::min (x, y, UNSIGNED);\n }\n \n /* Return the maxinum of X and Y, treating them both as having\n@@ -2160,15 +2160,15 @@ template <typename T1, typename T2>\n inline WI_BINARY_RESULT (T1, T2)\n wi::smax (const T1 &x, const T2 &y)\n {\n-  return max (x, y, SIGNED);\n+  return wi::max (x, y, SIGNED);\n }\n \n /* Return the maximum of X and Y, treating both as unsigned values.  */\n template <typename T1, typename T2>\n inline WI_BINARY_RESULT (T1, T2)\n wi::umax (const T1 &x, const T2 &y)\n {\n-  return max (x, y, UNSIGNED);\n+  return wi::max (x, y, UNSIGNED);\n }\n \n /* Return X & Y.  */"}, {"sha": "5624bf6796466bf77964b4fa2d324895f617667b", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -1,3 +1,9 @@\n+2014-11-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR bootstrap/63699\n+\tPR bootstrap/63750\n+\t* plugin.cc: Don't include <string>.\n+\n 2014-10-29  Jakub Jelinek  <jakub@redhat.com>\n \t    Phil Muldoon  <pmuldoon@redhat.com>\n "}, {"sha": "7b5df1d24fa551da1db99bf74ce79e0527511e20", "filename": "libcc1/plugin.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c430b50424ec31c83603616fc94671fc7ffac2/libcc1%2Fplugin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c430b50424ec31c83603616fc94671fc7ffac2/libcc1%2Fplugin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fplugin.cc?ref=33c430b50424ec31c83603616fc94671fc7ffac2", "patch": "@@ -55,8 +55,6 @@\n #include \"connection.hh\"\n #include \"rpc.hh\"\n \n-#include <string>\n-\n #ifdef __GNUC__\n #pragma GCC visibility push(default)\n #endif"}]}