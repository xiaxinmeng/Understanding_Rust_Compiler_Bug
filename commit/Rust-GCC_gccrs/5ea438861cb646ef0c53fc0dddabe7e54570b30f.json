{"sha": "5ea438861cb646ef0c53fc0dddabe7e54570b30f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhNDM4ODYxY2I2NDZlZjBjNTNmYzBkZGRhYmU3ZTU0NTcwYjMwZg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-03-11T08:49:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-03-11T08:49:29Z"}, "message": "2004-03-11  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/PipeImpl.java\n\t(SourceChannelImpl): Made final.\n\t(read): Implemented.\n\t(SinkChannelImpl): Made final.\n\t(write): Implemented.\n\nFrom-SVN: r79315", "tree": {"sha": "befaa48b2acf3cd009315ce55f2ad54e64f92b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/befaa48b2acf3cd009315ce55f2ad54e64f92b71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ea438861cb646ef0c53fc0dddabe7e54570b30f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea438861cb646ef0c53fc0dddabe7e54570b30f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea438861cb646ef0c53fc0dddabe7e54570b30f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea438861cb646ef0c53fc0dddabe7e54570b30f/comments", "author": null, "committer": null, "parents": [{"sha": "9a282e8e59e3ee125288b87a914ad0f68b48e024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a282e8e59e3ee125288b87a914ad0f68b48e024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a282e8e59e3ee125288b87a914ad0f68b48e024"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "794adb0cfa7650ba4298e45b488e9ac54d57f0a7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea438861cb646ef0c53fc0dddabe7e54570b30f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea438861cb646ef0c53fc0dddabe7e54570b30f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5ea438861cb646ef0c53fc0dddabe7e54570b30f", "patch": "@@ -1,3 +1,11 @@\n+2004-03-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/PipeImpl.java\n+\t(SourceChannelImpl): Made final.\n+\t(read): Implemented.\n+\t(SinkChannelImpl): Made final.\n+\t(write): Implemented.\n+\n 2004-03-11  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/net/PlainDatagramSocketImpl.java:"}, {"sha": "b9a343c0c96cb480b7efc9787d620b40a2e9fde3", "filename": "libjava/gnu/java/nio/PipeImpl.java", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea438861cb646ef0c53fc0dddabe7e54570b30f/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea438861cb646ef0c53fc0dddabe7e54570b30f/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java?ref=5ea438861cb646ef0c53fc0dddabe7e54570b30f", "patch": "@@ -1,5 +1,5 @@\n /* PipeImpl.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n \n class PipeImpl extends Pipe\n {\n-  public final class SourceChannelImpl extends Pipe.SourceChannel\n+  public static final class SourceChannelImpl extends Pipe.SourceChannel\n   {\n     private int native_fd;\n     \n@@ -79,10 +79,22 @@ public final long read (ByteBuffer[] srcs)\n       return read (srcs, 0, srcs.length);\n     }\n \n-    public final long read (ByteBuffer[] srcs, int offset, int len)\n+    public synchronized final long read (ByteBuffer[] srcs, int offset, int len)\n       throws IOException\n     {\n-      throw new Error (\"Not implemented\");\n+      if (offset < 0\n+\t  || offset > srcs.length\n+\t  || len < 0\n+\t  || len > srcs.length - offset)\n+\tthrow new IndexOutOfBoundsException();\n+\n+      long bytesRead = 0;\n+      \n+      for (int index = 0; index < len; index++)\n+\tbytesRead += read (srcs [offset + index]);\n+\n+      return bytesRead;\n+\n     }\n \n     public final int getNativeFD()\n@@ -91,7 +103,7 @@ public final int getNativeFD()\n     }\n   }\n \n-  public final class SinkChannelImpl extends Pipe.SinkChannel\n+  public static final class SinkChannelImpl extends Pipe.SinkChannel\n   {\n     private int native_fd;\n     \n@@ -120,16 +132,27 @@ public final int write (ByteBuffer dst)\n       throw new Error (\"Not implemented\");\n     }\n \n-    public final long write (ByteBuffer[] dsts)\n+    public final long write (ByteBuffer[] srcs)\n       throws IOException\n     {\n-      return write (dsts, 0, dsts.length);\n+      return write (srcs, 0, srcs.length);\n     }\n \n-    public final long write (ByteBuffer[] dsts, int offset, int len)\n+    public synchronized final long write (ByteBuffer[] srcs, int offset, int len)\n       throws IOException\n     {\n-      throw new Error (\"Not implemented\");\n+      if (offset < 0\n+\t  || offset > srcs.length\n+\t  || len < 0\n+\t  || len > srcs.length - offset)\n+\tthrow new IndexOutOfBoundsException();\n+\n+      long bytesWritten = 0;\n+      \n+      for (int index = 0; index < len; index++)\n+\tbytesWritten += write (srcs [offset + index]);\n+\n+      return bytesWritten;\n     }\n \n     public final int getNativeFD()"}]}