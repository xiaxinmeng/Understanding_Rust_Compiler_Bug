{"sha": "58532ca6735e73ed6556662c3fe7350109055a26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1MzJjYTY3MzVlNzNlZDY1NTY2NjJjM2ZlNzM1MDEwOTA1NWEyNg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-12-05T19:39:39Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-12-05T19:39:39Z"}, "message": "re PR rtl-optimization/59317 ([LRA,MIPS] ICE: in check_rtl, at lra.c (insn does not satisfy constraints))\n\n2013-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/59317\n\t* lra-constraints.c (in_class_p): Don't ignore insn with constant\n\tas a source.\n\n2013-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/59317\n\t* testsuite/gcc.target/mips/pr59317.c: New.\n\nFrom-SVN: r205718", "tree": {"sha": "30b00583b50c51a9399730c4ded2beb237a26a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b00583b50c51a9399730c4ded2beb237a26a04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58532ca6735e73ed6556662c3fe7350109055a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58532ca6735e73ed6556662c3fe7350109055a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58532ca6735e73ed6556662c3fe7350109055a26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58532ca6735e73ed6556662c3fe7350109055a26/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfd74f227df4eac35e4336f4a888907c33f0c041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd74f227df4eac35e4336f4a888907c33f0c041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd74f227df4eac35e4336f4a888907c33f0c041"}], "stats": {"total": 100, "additions": 98, "deletions": 2}, "files": [{"sha": "73fdd1a5332434be9e0fe1dff2d1f305fed37391", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58532ca6735e73ed6556662c3fe7350109055a26", "patch": "@@ -1,3 +1,9 @@\n+2013-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/59317\n+\t* lra-constraints.c (in_class_p): Don't ignore insn with constant\n+\tas a source.\n+\n 2013-12-05  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/58253"}, {"sha": "106492f9663c6ac2b5357cd3d81130eca60866de", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=58532ca6735e73ed6556662c3fe7350109055a26", "patch": "@@ -271,9 +271,11 @@ in_class_p (rtx reg, enum reg_class cl, enum reg_class *new_class)\n \t where other reload pseudos are no longer allocatable.  */\n       || (INSN_UID (curr_insn) >= new_insn_uid_start\n \t  && curr_insn_set != NULL\n-\t  && (OBJECT_P (SET_SRC (curr_insn_set))\n+\t  && ((OBJECT_P (SET_SRC (curr_insn_set))\n+\t       && ! CONSTANT_P (SET_SRC (curr_insn_set)))\n \t      || (GET_CODE (SET_SRC (curr_insn_set)) == SUBREG\n-\t\t  && OBJECT_P (SUBREG_REG (SET_SRC (curr_insn_set)))))))\n+\t\t  && OBJECT_P (SUBREG_REG (SET_SRC (curr_insn_set)))\n+\t\t  && ! CONSTANT_P (SUBREG_REG (SET_SRC (curr_insn_set)))))))\n     /* When we don't know what class will be used finally for reload\n        pseudos, we use ALL_REGS.  */\n     return ((regno >= new_regno_start && rclass == ALL_REGS)"}, {"sha": "535ab597d76b019336811abb08db7d340013fb54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58532ca6735e73ed6556662c3fe7350109055a26", "patch": "@@ -1,3 +1,8 @@\n+2013-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/59317\n+\t* testsuite/gcc.target/mips/pr59317.c: New.\n+\n 2013-12-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/59333"}, {"sha": "dd23f7c864925b3a35781e11b3745b8a3e75061c", "filename": "gcc/testsuite/gcc.target/mips/pr59317.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59317.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58532ca6735e73ed6556662c3fe7350109055a26/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59317.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59317.c?ref=58532ca6735e73ed6556662c3fe7350109055a26", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mips16\" } */\n+extern void abort();\n+\n+int i_0, i_1, i_2, i_3, i_4, i_5, i_6, i_7, i_8, i_9;\n+int j_0, j_1, j_2, j_3, j_4, j_5, j_6, j_7, j_8, j_9;\n+\n+int main()\n+{\n+  register int *x1 = &i_1; \n+  register int *x2 = &i_2; \n+  register int *x3 = &i_3; \n+  register int *x4 = &i_4; \n+  register int *x5 = &i_5; \n+  register int *x6 = &i_6;\n+  register int *x7 = &i_7; \n+  register int *x8 = &i_8; \n+  register int *x9 = &i_9;\n+  \n+  register int *y0 = &j_0; \n+  register int *y1 = &j_1; \n+  register int *y2 = &i_2; \n+  register int *y3 = &j_3; \n+  register int *y4 = &j_4; \n+  register int *y5 = &j_5; \n+  register int *y6 = &j_6; \n+  register int *y7 = &j_7; \n+  register int *y8 = &j_8; \n+  register int *y9 = &j_9;\n+\n+  asm volatile (\"\" : \"=r\" (x2) : \"0\" (x2)); \n+  asm volatile (\"\" : \"=r\" (x3) : \"0\" (x3)); \n+  asm volatile (\"\" : \"=r\" (x4) : \"0\" (x4)); \n+  asm volatile (\"\" : \"=r\" (x5) : \"0\" (x5)); \n+  asm volatile (\"\" : \"=r\" (x6) : \"0\" (x6)); \n+  asm volatile (\"\" : \"=r\" (x7) : \"0\" (x7)); \n+  asm volatile (\"\" : \"=r\" (x8) : \"0\" (x8)); \n+  asm volatile (\"\" : \"=r\" (x9) : \"0\" (x9));\n+\n+  asm volatile (\"\" : \"=r\" (y0) : \"0\" (y0)); \n+  asm volatile (\"\" : \"=r\" (y1) : \"0\" (y1)); \n+  asm volatile (\"\" : \"=r\" (y2) : \"0\" (y2)); \n+  asm volatile (\"\" : \"=r\" (y3) : \"0\" (y3)); \n+  asm volatile (\"\" : \"=r\" (y4) : \"0\" (y4));\n+  asm volatile (\"\" : \"=r\" (y5) : \"0\" (y5)); \n+  asm volatile (\"\" : \"=r\" (y6) : \"0\" (y6)); \n+  asm volatile (\"\" : \"=r\" (y7) : \"0\" (y7)); \n+  asm volatile (\"\" : \"=r\" (y8) : \"0\" (y8)); \n+  asm volatile (\"\" : \"=r\" (y9) : \"0\" (y9));\n+\n+  asm volatile (\"\" : \"=r\" (x1) : \"0\" (x1)); \n+  asm volatile (\"\" : \"=r\" (x2) : \"0\" (x2)); \n+  asm volatile (\"\" : \"=r\" (x3) : \"0\" (x3)); \n+  asm volatile (\"\" : \"=r\" (x4) : \"0\" (x4)); \n+  asm volatile (\"\" : \"=r\" (x5) : \"0\" (x5)); \n+  asm volatile (\"\" : \"=r\" (x6) : \"0\" (x6)); \n+  asm volatile (\"\" : \"=r\" (x7) : \"0\" (x7)); \n+  asm volatile (\"\" : \"=r\" (x8) : \"0\" (x8)); \n+  asm volatile (\"\" : \"=r\" (x9) : \"0\" (x9));\n+\n+  asm volatile (\"\" : \"=r\" (y0) : \"0\" (y0)); \n+  asm volatile (\"\" : \"=r\" (y1) : \"0\" (y1)); \n+  asm volatile (\"\" : \"=r\" (y2) : \"0\" (y2)); \n+  asm volatile (\"\" : \"=r\" (y3) : \"0\" (y3)); \n+  asm volatile (\"\" : \"=r\" (y4) : \"0\" (y4)); \n+  asm volatile (\"\" : \"=r\" (y5) : \"0\" (y5)); \n+  asm volatile (\"\" : \"=r\" (y6) : \"0\" (y6)); \n+  asm volatile (\"\" : \"=r\" (y7) : \"0\" (y7)); \n+  asm volatile (\"\" : \"=r\" (y8) : \"0\" (y8)); \n+  asm volatile (\"\" : \"=r\" (y9) : \"0\" (y9));\n+\n+  if (y0 != &j_0) abort (); \n+  if (y1 != &j_1) abort (); \n+  if (y2 != &j_2) abort (); \n+  if (y3 != &j_3) abort (); \n+  if (y4 != &j_4) abort (); \n+  if (y5 != &j_5) abort (); \n+  if (y6 != &j_6) abort (); \n+  if (y7 != &j_7) abort (); \n+  if (y8 != &j_8) abort (); \n+  if (y9 != &j_9) abort ();\n+  return 0;\n+}"}]}