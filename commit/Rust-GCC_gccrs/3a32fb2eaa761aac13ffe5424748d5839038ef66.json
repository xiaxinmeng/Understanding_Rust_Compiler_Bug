{"sha": "3a32fb2eaa761aac13ffe5424748d5839038ef66", "node_id": "C_kwDOANBUbNoAKDNhMzJmYjJlYWE3NjFhYWMxM2ZmZTU0MjQ3NDhkNTgzOTAzOGVmNjY", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-30T00:56:27Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-30T00:56:27Z"}, "message": "analyzer: fix folding of '(PTR + 0) => PTR' [PR105784]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/105784\n\t* region-model-manager.cc\n\t(region_model_manager::maybe_fold_binop): For POINTER_PLUS_EXPR,\n\tPLUS_EXPR and MINUS_EXPR, eliminate requirement that the final\n\ttype matches that of arg0 in favor of a cast.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/105784\n\t* gcc.dg/analyzer/torture/fold-ptr-arith-pr105784.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "e5df88b6099b404c5fdd1c1d99f065ab976cafc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5df88b6099b404c5fdd1c1d99f065ab976cafc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a32fb2eaa761aac13ffe5424748d5839038ef66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a32fb2eaa761aac13ffe5424748d5839038ef66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a32fb2eaa761aac13ffe5424748d5839038ef66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a32fb2eaa761aac13ffe5424748d5839038ef66/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000e9863120cbc75a0f8d497264519974c97669f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000e9863120cbc75a0f8d497264519974c97669f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000e9863120cbc75a0f8d497264519974c97669f"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "ae63c664ae580ebd82babe5b6593fffe744cb0cf", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a32fb2eaa761aac13ffe5424748d5839038ef66/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a32fb2eaa761aac13ffe5424748d5839038ef66/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=3a32fb2eaa761aac13ffe5424748d5839038ef66", "patch": "@@ -613,13 +613,13 @@ region_model_manager::maybe_fold_binop (tree type, enum tree_code op,\n     case POINTER_PLUS_EXPR:\n     case PLUS_EXPR:\n       /* (VAL + 0) -> VAL.  */\n-      if (cst1 && zerop (cst1) && type == arg0->get_type ())\n-\treturn arg0;\n+      if (cst1 && zerop (cst1))\n+\treturn get_or_create_cast (type, arg0);\n       break;\n     case MINUS_EXPR:\n       /* (VAL - 0) -> VAL.  */\n-      if (cst1 && zerop (cst1) && type == arg0->get_type ())\n-\treturn arg0;\n+      if (cst1 && zerop (cst1))\n+\treturn get_or_create_cast (type, arg0);\n       break;\n     case MULT_EXPR:\n       /* (VAL * 0).  */"}, {"sha": "5e5a2bf79a52c3ebe25245cabd83c319e04dbc1e", "filename": "gcc/testsuite/gcc.dg/analyzer/torture/fold-ptr-arith-pr105784.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a32fb2eaa761aac13ffe5424748d5839038ef66/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Ffold-ptr-arith-pr105784.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a32fb2eaa761aac13ffe5424748d5839038ef66/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Ffold-ptr-arith-pr105784.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Ffold-ptr-arith-pr105784.c?ref=3a32fb2eaa761aac13ffe5424748d5839038ef66", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n+\n+#include \"../analyzer-decls.h\"\n+\n+extern _Bool quit_flag;\n+extern void char_charset (int);\n+\n+static void\n+__analyzer_ccl_driver (int *source, int src_size)\n+{\n+  int *src = source, *src_end = src + src_size;\n+  int i = 0;\n+\n+  while (!quit_flag)\n+    {\n+      if (src < src_end)\n+\t{\n+\t  __analyzer_dump_path (); /* { dg-message \"path\" } */\n+\t  i = *src++; /* { dg-bogus \"uninit\" } */\n+\t}\n+      char_charset (i);\n+    }\n+}\n+\n+void\n+Fccl_execute_on_string (char *str, long str_bytes)\n+{\n+  while (1)\n+    {\n+      char *p = str;\n+      char *endp = str + str_bytes;\n+      int source[1024];\n+      int src_size = 0;\n+\n+      while (src_size < 1024 && p < endp)\n+\t{\n+\t  __analyzer_dump_path (); /* { dg-message \"path\" } */\n+\t  source[src_size++] = *p++;\n+\t}\n+\n+      __analyzer_ccl_driver (source, src_size);\n+    }\n+}"}]}