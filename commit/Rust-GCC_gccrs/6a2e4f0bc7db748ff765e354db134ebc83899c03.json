{"sha": "6a2e4f0bc7db748ff765e354db134ebc83899c03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyZTRmMGJjN2RiNzQ4ZmY3NjVlMzU0ZGIxMzRlYmM4Mzg5OWMwMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:50:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:50:27Z"}, "message": "[multiple changes]\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* make.adb, sem_ch4.adb: Minor reformatting.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\t* sem_util.adb, exp_ch5.adb: Minor reformatting.\n\n2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_rm.texi: Fix definition of Long_Integer.\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb: check limit size of static aggregate unconditionally,\n\tto prevent storage exhaustion.\n\t* exp_ch7.adb (Clean_Simple_Protected_Objects): if the scope being\n\tfinalized is a function body, insert the cleanup code before the final\n\treturn statement, to prevent spurious warnings.\n\t* s-pooglo.ads: add overriding indicator.\n\nFrom-SVN: r177035", "tree": {"sha": "a7d2b704c6cfee31f7ae6725114600c4d9337e92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7d2b704c6cfee31f7ae6725114600c4d9337e92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2e4f0bc7db748ff765e354db134ebc83899c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2e4f0bc7db748ff765e354db134ebc83899c03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2e4f0bc7db748ff765e354db134ebc83899c03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2e4f0bc7db748ff765e354db134ebc83899c03/comments", "author": null, "committer": null, "parents": [{"sha": "5fcafa6051863dbabf1d9798ec45b83df942509d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fcafa6051863dbabf1d9798ec45b83df942509d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fcafa6051863dbabf1d9798ec45b83df942509d"}], "stats": {"total": 160, "additions": 94, "deletions": 66}, "files": [{"sha": "b1ea032359114eb7402a787aefa3190ffe85745a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -1,3 +1,22 @@\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* make.adb, sem_ch4.adb: Minor reformatting.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\t* sem_util.adb, exp_ch5.adb: Minor reformatting.\n+\n+2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi: Fix definition of Long_Integer.\n+\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb: check limit size of static aggregate unconditionally,\n+\tto prevent storage exhaustion.\n+\t* exp_ch7.adb (Clean_Simple_Protected_Objects): if the scope being\n+\tfinalized is a function body, insert the cleanup code before the final\n+\treturn statement, to prevent spurious warnings.\n+\t* s-pooglo.ads: add overriding indicator.\n+\n 2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Operator_Check): improve error message when both a"}, {"sha": "c336a97d676ae7d1919847421cab45573817cac4", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -6680,8 +6680,9 @@ package body Exp_Aggr is\n \n                elsif Nkind (Expression (Expr)) /= N_Integer_Literal then\n                   return False;\n+               end if;\n \n-               elsif not Aggr_Size_OK (N, Typ) then\n+               if not Aggr_Size_OK (N, Typ) then\n                   return False;\n                end if;\n "}, {"sha": "8acbd877cc7f7cc982bed4e1afea9da8d511a0ba", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -2767,10 +2767,10 @@ package body Exp_Ch5 is\n       I_Spec     : constant Node_Id    := Iterator_Specification (Isc);\n       Id         : constant Entity_Id  := Defining_Identifier (I_Spec);\n \n-      Container  : constant Node_Id    := Name (I_Spec);\n-      --  An expression whose type is an array or a predefined container.\n+      Container : constant Node_Id := Name (I_Spec);\n+      --  An expression whose type is an array or a predefined container\n \n-      Typ        : constant Entity_Id  := Etype (Container);\n+      Typ : constant Entity_Id  := Etype (Container);\n \n       Cursor   : Entity_Id;\n       New_Loop : Node_Id;"}, {"sha": "b6b8c8510e80c99696860ce3e513a392b9000f31", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -729,15 +729,25 @@ package body Exp_Ch7 is\n                Ref : constant Node_Id := New_Occurrence_Of (E, Sloc (Stmt));\n \n             begin\n+               --  If the current context is a function, the end of the\n+               --  statement sequence is likely to be a return statement.\n+               --  The cleanup code must be executed before the return.\n+\n+               if Ekind (Current_Scope) = E_Function\n+                 and then Nkind (Stmt) = Sinfo.N_Return_Statement\n+               then\n+                  Stmt := Prev (Stmt);\n+               end if;\n+\n                if Is_Simple_Protected_Type (Typ) then\n-                  Append_To (Stmts, Cleanup_Protected_Object (N, Ref));\n+                  Insert_After (Stmt, Cleanup_Protected_Object (N, Ref));\n \n                elsif Has_Simple_Protected_Object (Typ) then\n                   if Is_Record_Type (Typ) then\n-                     Append_List_To (Stmts, Cleanup_Record (N, Ref, Typ));\n+                     Insert_List_After (Stmt, Cleanup_Record (N, Ref, Typ));\n \n                   elsif Is_Array_Type (Typ) then\n-                     Append_List_To (Stmts, Cleanup_Array (N, Ref, Typ));\n+                     Insert_List_After (Stmt, Cleanup_Array (N, Ref, Typ));\n                   end if;\n                end if;\n             end;"}, {"sha": "77d2b2eac97fc33fad7087f68f4c9c6a37fa7cc6", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -2274,18 +2274,18 @@ ada/exp_strm.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n    ada/elists.ads ada/exp_strm.ads ada/exp_strm.adb ada/exp_tss.ads \\\n-   ada/get_targ.ads ada/gnat.ads ada/g-htable.ads ada/hostparm.ads \\\n-   ada/lib.ads ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/rident.ads ada/rtsfind.ads ada/sem_aux.ads ada/sem_util.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads \n+   ada/exp_util.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n+   ada/hostparm.ads ada/lib.ads ada/namet.ads ada/nlists.ads \\\n+   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/restrict.ads ada/rident.ads ada/rtsfind.ads ada/sem_aux.ads \\\n+   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-stalib.ads \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n \n ada/exp_tss.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2409,24 +2409,25 @@ ada/freeze.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads \\\n    ada/debug_a.ads ada/einfo.ads ada/einfo.adb ada/elists.ads \\\n    ada/elists.adb ada/err_vars.ads ada/errout.ads ada/erroutc.ads \\\n-   ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch3.ads ada/exp_ch6.ads \\\n-   ada/exp_ch7.ads ada/exp_disp.ads ada/exp_pakd.ads ada/exp_tss.ads \\\n-   ada/exp_util.ads ada/exp_util.adb ada/expander.ads ada/fname.ads \\\n-   ada/freeze.ads ada/freeze.adb ada/get_targ.ads ada/gnat.ads \\\n-   ada/g-hesorg.ads ada/g-htable.ads ada/hostparm.ads ada/inline.ads \\\n-   ada/interfac.ads ada/itypes.ads ada/layout.ads ada/lib.ads ada/lib.adb \\\n-   ada/lib-list.adb ada/lib-sort.adb ada/lib-xref.ads ada/namet.ads \\\n-   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n-   ada/opt.ads ada/output.ads ada/restrict.ads ada/rident.ads \\\n-   ada/rtsfind.ads ada/scans.ads ada/sem.ads ada/sem_aggr.ads \\\n-   ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads \\\n-   ada/sem_ch4.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n-   ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_intr.ads ada/sem_mech.ads ada/sem_prag.ads \\\n-   ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinfo-cn.ads ada/sinput.ads ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/eval_fat.ads ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch3.ads \\\n+   ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_disp.ads ada/exp_pakd.ads \\\n+   ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb ada/expander.ads \\\n+   ada/fname.ads ada/freeze.ads ada/freeze.adb ada/get_targ.ads \\\n+   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/hostparm.ads \\\n+   ada/inline.ads ada/interfac.ads ada/itypes.ads ada/layout.ads \\\n+   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-sort.adb \\\n+   ada/lib-xref.ads ada/namet.ads ada/namet.adb ada/nlists.ads \\\n+   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/restrict.ads ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n+   ada/sem.ads ada/sem_aggr.ads ada/sem_attr.ads ada/sem_aux.ads \\\n+   ada/sem_cat.ads ada/sem_ch13.ads ada/sem_ch4.ads ada/sem_ch6.ads \\\n+   ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads \\\n+   ada/sem_elab.ads ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb \\\n+   ada/sem_intr.ads ada/sem_mech.ads ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n    ada/stylesw.ads ada/system.ads ada/s-exctab.ads ada/s-exctab.adb \\\n    ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n    ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\"}, {"sha": "0eb84822b2596150a18a7c2a9cae1518366fec8d", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -4610,19 +4610,18 @@ pragma Static_Elaboration_Desired;\n @end smallexample\n \n @noindent\n-This pragma is used to indicate the desire for objects declared in the library\n-unit to which the pragma applies to be initialized statically. This means that\n-if an object is initialized (either explicitly or by default initialization),\n-then the object's value can be determined at compile time and it requires no\n-code to initialize it. This generally allows the object to be allocated in\n-read-only data space. A warning is issued if an object or aggregate declared\n-at the top level of the package cannot be initialized statically. Additionally,\n-use of this pragma will suppress the generation of loops to initialize named\n-aggregates whose only choice is an others choice that specifies a component\n-value known at compile time, so that it can be allocated as static data. This\n-is limited to aggregates with a maximum of 100 components. (See also the\n-restriction No_Implicit_Loops, which supports static allocation for larger\n-aggregates.)\n+This pragma is used to indicate that the compiler should attempt to initialize\n+statically the objects declared in the library unit to which the pragma applies,\n+when these objects are initialized (explicitly or implicitly) by an aggregate.\n+In the absence of this pragma, aggregates in object declarations are expanded\n+into assignments and loops, even when the aggregate components are static\n+constants. When the aggregate is present the compiler builds a static expression\n+that requires no run-time code, so that the initialized object can be placed in\n+read-only data space. If the components are not static, or the aggregate has\n+more that 100 components, the compiler emits a warning that the pragma cannot\n+be obeyed. (See also the restriction No_Implicit_Loops, which supports static\n+construction of larger aggregates with static components that include an others\n+choice.)\n \n @node Pragma Stream_Convert\n @unnumberedsec Pragma Stream_Convert\n@@ -8097,7 +8096,7 @@ further details.\n @item Integer\n 32 bit signed\n @item Long_Integer\n-64 bit signed (Alpha OpenVMS only)\n+64 bit signed (on most 64 bit targets, depending on the C definition of long).\n 32 bit signed (all other targets)\n @item Long_Long_Integer\n 64 bit signed"}, {"sha": "cc8cb36a921a9cb287a2cdc39bf9ed290b04f454", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -2933,13 +2933,15 @@ package body Make is\n          end if;\n \n          --  Make a deep copy of the arguments, because Normalize_Arguments\n-         --  may deallocate some arguments.\n-         --  Also strip target specific -mxxx switches in CodePeer mode.\n+         --  may deallocate some arguments. Also strip target specific -mxxx\n+         --  switches in CodePeer mode.\n \n          declare\n-            Index : Natural := Comp_Next;\n+            Index : Natural;\n             Last  : constant Natural := Comp_Last;\n+\n          begin\n+            Index := Comp_Next;\n             for J in Comp_Next .. Last loop\n                declare\n                   Str : String renames Args (Arg_Index).all;"}, {"sha": "f8a440fb75aa0498cfad8d9d2ed8ae2ae07ebf77", "filename": "gcc/ada/s-pooglo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fs-pooglo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fs-pooglo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooglo.ads?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -53,7 +53,7 @@ package System.Pool_Global is\n    type Unbounded_No_Reclaim_Pool is new\n      System.Storage_Pools.Root_Storage_Pool with null record;\n \n-   function Storage_Size\n+   overriding function Storage_Size\n      (Pool : Unbounded_No_Reclaim_Pool)\n       return System.Storage_Elements.Storage_Count;\n "}, {"sha": "2a3b840cee131df6e7af216fcec1d9a6f26ced96", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -5691,12 +5691,10 @@ package body Sem_Ch4 is\n                declare\n                   U : constant Node_Id :=\n                         Cunit (Get_Source_Unit (Candidate_Type));\n-\n                begin\n                   if Unit_Is_Visible (U) then\n                      Error_Msg_N -- CODEFIX\n                        (\"use clause would make operation legal!\",  N);\n-\n                   else\n                      Error_Msg_NE  --  CODEFIX\n                        (\"add with_clause and use_clause for&!\",\n@@ -6793,9 +6791,7 @@ package body Sem_Ch4 is\n             --  to same.\n \n             while Present (Hom) loop\n-               if (Ekind (Hom) = E_Procedure\n-                     or else\n-                   Ekind (Hom) = E_Function)\n+               if Ekind_In (Hom, E_Procedure, E_Function)\n                  and then not Is_Hidden (Hom)\n                  and then Scope (Hom) = Scope (Anc_Type)\n                  and then Present (First_Formal (Hom))"}, {"sha": "b7cf370c65e24611effeee4c284ef47234ada4ec", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e4f0bc7db748ff765e354db134ebc83899c03/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6a2e4f0bc7db748ff765e354db134ebc83899c03", "patch": "@@ -11553,8 +11553,7 @@ package body Sem_Util is\n       -- Unit_In_Parent_Context --\n       ----------------------------\n \n-      function Unit_In_Parent_Context (Par_Unit : Node_Id) return Boolean\n-      is\n+      function Unit_In_Parent_Context (Par_Unit : Node_Id) return Boolean is\n       begin\n          if Unit_In_Context (Par_Unit) then\n             return True;\n@@ -11585,20 +11584,22 @@ package body Sem_Util is\n                --  looking for, eg. Text_IO which renames Ada.Text_IO.\n \n                elsif\n-                 Renamed_Entity (Entity (Name (Clause)))\n-                   = Defining_Entity (Unit (U))\n+                 Renamed_Entity (Entity (Name (Clause))) =\n+                                                Defining_Entity (Unit (U))\n                then\n                   return True;\n                end if;\n             end if;\n \n             Next (Clause);\n          end loop;\n+\n          return False;\n       end Unit_In_Context;\n \n-   begin\n+   --  Start of processing for Unit_Is_Visible\n \n+   begin\n       --  The currrent unit is directly visible.\n \n       if Curr = U then\n@@ -11614,7 +11615,6 @@ package body Sem_Util is\n           (Nkind (Unit (Curr)) = N_Subprogram_Body\n             and then not Acts_As_Spec (Unit (Curr)))\n       then\n-\n          if Unit_In_Context (Library_Unit (Curr)) then\n             return True;\n          end if;"}]}