{"sha": "9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ1ODc5YTYzMWZlNTBlYmU1OGU3MTRjYzJkODVlZmVhYTBkM2Y0ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2013-12-18T17:38:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2013-12-18T17:38:07Z"}, "message": "passes.c (execute_function_dump): Set graph_dump_initialized appropriately.\n\n\t* passes.c (execute_function_dump): Set graph_dump_initialized\n\tappropriately.\n\t(pass_init_dump_file): Similarly.\n\t(execute_one_pass): Pass new argument to do_per_function.\n\t* tree-pass.h (class opt_pass): New field graph_dump_initialized.\n\nFrom-SVN: r206092", "tree": {"sha": "ca8051fe7ac3f0d5f6d48ff8388018fc4eda5866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8051fe7ac3f0d5f6d48ff8388018fc4eda5866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50e6a1482b76a0a06aabf4587bf97da846ff2578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e6a1482b76a0a06aabf4587bf97da846ff2578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e6a1482b76a0a06aabf4587bf97da846ff2578"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "b83157ff2504e432f121f1a399c168156cd1ac60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "patch": "@@ -1,3 +1,11 @@\n+2013-12-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* passes.c (execute_function_dump): Set graph_dump_initialized\n+\tappropriately.\n+\t(pass_init_dump_file): Similarly.\n+\t(execute_one_pass): Pass new argument to do_per_function.\n+\t* tree-pass.h (class opt_pass): New field graph_dump_initialized.\n+\n 2013-12-18  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* doc/tree-ssa.texi (SSA Operands): Remove reference to"}, {"sha": "bc7bf06448998f7b1242499cd84907f2dc96312b", "filename": "gcc/passes.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "patch": "@@ -1640,8 +1640,10 @@ do_per_function_toporder (void (*callback) (void *data), void *data)\n /* Helper function to perform function body dump.  */\n \n static void\n-execute_function_dump (void *data ATTRIBUTE_UNUSED)\n+execute_function_dump (void *data)\n {\n+  opt_pass *pass = (opt_pass *)data;\n+\n   if (dump_file && current_function_decl)\n     {\n       if (cfun->curr_properties & PROP_trees)\n@@ -1655,7 +1657,14 @@ execute_function_dump (void *data ATTRIBUTE_UNUSED)\n \n       if ((cfun->curr_properties & PROP_cfg)\n \t  && (dump_flags & TDF_GRAPH))\n-\tprint_graph_cfg (dump_file_name, cfun);\n+\t{\n+\t  if (!pass->graph_dump_initialized)\n+\t    {\n+\t      clean_graph_dump_file (dump_file_name);\n+\t      pass->graph_dump_initialized = true;\n+\t    }\n+\t  print_graph_cfg (dump_file_name, cfun);\n+\t}\n     }\n }\n \n@@ -1936,6 +1945,7 @@ verify_curr_properties (void *data)\n bool\n pass_init_dump_file (opt_pass *pass)\n {\n+  pass->graph_dump_initialized = false;\n   /* If a dump file name is present, open it if enabled.  */\n   if (pass->static_pass_number != -1)\n     {\n@@ -1950,7 +1960,10 @@ pass_init_dump_file (opt_pass *pass)\n       if (initializing_dump\n \t  && dump_file && (dump_flags & TDF_GRAPH)\n \t  && cfun && (cfun->curr_properties & PROP_cfg))\n-\tclean_graph_dump_file (dump_file_name);\n+\t{\n+\t  clean_graph_dump_file (dump_file_name);\n+\t  pass->graph_dump_initialized = true;\n+\t}\n       timevar_pop (TV_DUMP);\n       return initializing_dump;\n     }\n@@ -2230,7 +2243,7 @@ execute_one_pass (opt_pass *pass)\n \n   verify_interpass_invariants ();\n   if (dump_file)\n-    do_per_function (execute_function_dump, NULL);\n+    do_per_function (execute_function_dump, pass);\n   if (pass->type == IPA_PASS)\n     {\n       struct cgraph_node *node;"}, {"sha": "308631f3dd1db8a5f1e6fb4a88e7253dd9af2b5f", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=9d5879a631fe50ebe58e714cc2d85efeaa0d3f4e", "patch": "@@ -114,6 +114,11 @@ class opt_pass : public pass_data\n   /* Static pass number, used as a fragment of the dump file name.  */\n   int static_pass_number;\n \n+  /* When a given dump file is being initialized, this flag is set to\n+     true if the corresponding TDF_graph dump file has also been\n+     initialized.  */\n+  bool graph_dump_initialized;\n+\n protected:\n   gcc::context *m_ctxt;\n };"}]}