{"sha": "70233f378882c295d33065075e476487c1bd1729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyMzNmMzc4ODgyYzI5NWQzMzA2NTA3NWU0NzY0ODdjMWJkMTcyOQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-30T15:32:52Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-30T15:32:52Z"}, "message": "simplify-rtx.c (simplify_binary_operation): Unfactor the shift and rotate cases.\n\n\n\t* simplify-rtx.c (simplify_binary_operation): Unfactor the shift\n\tand rotate cases.\n\t<LSHIFTRT>: Optimize (lshiftrt (clz X) C) as (eq X 0) where C is\n\tlog2(GET_MODE_BITSIZE(X)) on targets with the appropriate semantics.\n\n\t* gcc.target/ppc-eq0-1.c: New test case.\n\t* gcc.target/ppc-negeq0-1.c: New test case.\n\nFrom-SVN: r114239", "tree": {"sha": "6d1370f585fb59eba673c1d1c7a7b0721cf849ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d1370f585fb59eba673c1d1c7a7b0721cf849ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70233f378882c295d33065075e476487c1bd1729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70233f378882c295d33065075e476487c1bd1729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70233f378882c295d33065075e476487c1bd1729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70233f378882c295d33065075e476487c1bd1729/comments", "author": null, "committer": null, "parents": [{"sha": "d117b270e2cb7841dd739a514fe8fac48f2225dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d117b270e2cb7841dd739a514fe8fac48f2225dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d117b270e2cb7841dd739a514fe8fac48f2225dd"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "4586d99d1402e9d6dda9d3dd8cf25de53391726a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70233f378882c295d33065075e476487c1bd1729/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70233f378882c295d33065075e476487c1bd1729/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70233f378882c295d33065075e476487c1bd1729", "patch": "@@ -1,3 +1,10 @@\n+2006-05-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation): Unfactor the shift\n+\tand rotate cases.\n+\t<LSHIFTRT>: Optimize (lshiftrt (clz X) C) as (eq X 0) where C is\n+\tlog2(GET_MODE_BITSIZE(X)) on targets with the appropriate semantics.\n+\n 2006-05-30  Dirk Mueller  <dmueller@suse.de>\n \n \tPR c/27273"}, {"sha": "65b1d193d42bfc4534132ee53d0b8e24511056da", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70233f378882c295d33065075e476487c1bd1729/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70233f378882c295d33065075e476487c1bd1729/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=70233f378882c295d33065075e476487c1bd1729", "patch": "@@ -2436,21 +2436,45 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n     case ROTATERT:\n     case ROTATE:\n     case ASHIFTRT:\n+      if (trueop1 == CONST0_RTX (mode))\n+\treturn op0;\n+      if (trueop0 == CONST0_RTX (mode) && ! side_effects_p (op1))\n+\treturn op0;\n       /* Rotating ~0 always results in ~0.  */\n       if (GET_CODE (trueop0) == CONST_INT && width <= HOST_BITS_PER_WIDE_INT\n \t  && (unsigned HOST_WIDE_INT) INTVAL (trueop0) == GET_MODE_MASK (mode)\n \t  && ! side_effects_p (op1))\n \treturn op0;\n-\n-      /* Fall through....  */\n+      break;\n \n     case ASHIFT:\n     case SS_ASHIFT:\n+      if (trueop1 == CONST0_RTX (mode))\n+\treturn op0;\n+      if (trueop0 == CONST0_RTX (mode) && ! side_effects_p (op1))\n+\treturn op0;\n+      break;\n+\n     case LSHIFTRT:\n       if (trueop1 == CONST0_RTX (mode))\n \treturn op0;\n       if (trueop0 == CONST0_RTX (mode) && ! side_effects_p (op1))\n \treturn op0;\n+      /* Optimize (lshiftrt (clz X) C) as (eq X 0).  */\n+      if (GET_CODE (op0) == CLZ\n+\t  && GET_CODE (trueop1) == CONST_INT\n+\t  && STORE_FLAG_VALUE == 1\n+\t  && INTVAL (trueop1) < width)\n+\t{\n+\t  enum machine_mode imode = GET_MODE (XEXP (op0, 0));\n+\t  unsigned HOST_WIDE_INT zero_val = 0;\n+\n+\t  if (CLZ_DEFINED_VALUE_AT_ZERO (imode, zero_val)\n+\t      && zero_val == GET_MODE_BITSIZE (imode)\n+\t      && INTVAL (trueop1) == exact_log2 (zero_val))\n+\t    return simplify_gen_relational (EQ, mode, imode,\n+\t\t\t\t\t    XEXP (op0, 0), const0_rtx);\n+\t}\n       break;\n \n     case SMIN:"}, {"sha": "ecc1cc14f9a835ebdd266ff5c0cffd42fe3d2faf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70233f378882c295d33065075e476487c1bd1729", "patch": "@@ -1,3 +1,8 @@\n+2006-05-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.target/ppc-eq0-1.c: New test case.\n+\t* gcc.target/ppc-negeq0-1.c: New test case.\n+\n 2006-05-30  Dirk Mueller  <dmueller@suse.de>\n \n \tPR c/27273"}, {"sha": "163a4b9925a7110ae03e5bf9c960cb0cf7c0758b", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-eq0-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eq0-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eq0-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eq0-1.c?ref=70233f378882c295d33065075e476487c1bd1729", "patch": "@@ -0,0 +1,10 @@\n+/* PR rtl-optimization/10588 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x)\n+{\n+  return x == 0;\n+}\n+\n+/* { dg-final { scan-assembler \"cntlzw\" } } */"}, {"sha": "37d10bc5b682f94a14f374e3bb2b4e93ab97711e", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-negeq0-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-negeq0-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70233f378882c295d33065075e476487c1bd1729/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-negeq0-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-negeq0-1.c?ref=70233f378882c295d33065075e476487c1bd1729", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x)\n+{\n+  return -(x == 0);\n+}\n+\n+int bar(int x)\n+{\n+  int t = __builtin_clz(x);\n+  return -(t>>5);\n+}\n+\n+/* { dg-final { scan-assembler-not \"cntlzw\" } } */"}]}