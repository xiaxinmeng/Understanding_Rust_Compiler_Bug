{"sha": "7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "node_id": "C_kwDOANBUbNoAKDdmMTk1YTIyNzA5MTBhNmVkMDhiZDc2ZTNhMTZiMGE2NTAzZjlmYWY", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-06-14T18:33:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-06-17T21:27:06Z"}, "message": "libgo: permit loff_t and off_t to be macros\n\nThey are macros in musl libc, rather than typedefs, and -fgo-dump-spec\ndoesn't handle that case.\n\nBased on patch by S\u00f6ren Tempel.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/412075", "tree": {"sha": "053387a6fe016bd4420765eb3c45415787fae6f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/053387a6fe016bd4420765eb3c45415787fae6f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a284fadcce8ef443cc3cc047a8017745efb51758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a284fadcce8ef443cc3cc047a8017745efb51758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a284fadcce8ef443cc3cc047a8017745efb51758"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "4b75dd3735561cb59707203e35b5e76c1d5aa0f5", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -1,4 +1,4 @@\n-8db6b78110f84e22c409f334aeaefb80a8b39917\n+a409e049737ec9a358a19233e017d957db3d6d2a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "2c3c7469675fdc9de2045c1999aca3be4ea7c5f1", "filename": "libgo/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -70,6 +70,9 @@\n /* Define to 1 if you have the `fchownat' function. */\n #undef HAVE_FCHOWNAT\n \n+/* Define to 1 if you have the <fcntl.h> header file. */\n+#undef HAVE_FCNTL_H\n+\n /* Define to 1 if you have the `futimesat' function. */\n #undef HAVE_FUTIMESAT\n "}, {"sha": "b7ff9b32867f60aa5c396fcb770f0425db94d100", "filename": "libgo/configure", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -15249,7 +15249,7 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n \n \n-for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h lwp.h\n+for ac_header in fcntl.h port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h lwp.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -15546,7 +15546,11 @@ _ACEOF\n \n fi\n \n-ac_fn_c_check_type \"$LINENO\" \"loff_t\" \"ac_cv_type_loff_t\" \"$ac_includes_default\"\n+\n+CFLAGS_hold=\"$CFLAGS\"\n+CFLAGS=\"$OSCFLAGS $CFLAGS\"\n+ac_fn_c_check_type \"$LINENO\" \"loff_t\" \"ac_cv_type_loff_t\" \"#include <fcntl.h>\n+\"\n if test \"x$ac_cv_type_loff_t\" = xyes; then :\n \n cat >>confdefs.h <<_ACEOF\n@@ -15556,6 +15560,7 @@ _ACEOF\n \n fi\n \n+CFLAGS=\"$CFLAGS_hold\"\n \n LIBS_hold=\"$LIBS\"\n LIBS=\"$LIBS -lm\""}, {"sha": "bac58b07b41c02bfcbe4fe7056a75749ce609950", "filename": "libgo/configure.ac", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -579,7 +579,7 @@ AC_C_BIGENDIAN\n \n GCC_CHECK_UNWIND_GETIPINFO\n \n-AC_CHECK_HEADERS(port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h lwp.h)\n+AC_CHECK_HEADERS(fcntl.h port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h lwp.h)\n \n AC_CHECK_HEADERS([netinet/icmp6.h], [], [],\n [#include <netinet/in.h>\n@@ -601,7 +601,11 @@ AC_STRUCT_DIRENT_D_TYPE\n \n AC_CHECK_FUNCS(accept4 dup3 epoll_create1 faccessat fallocate fchmodat fchownat futimesat getxattr inotify_add_watch inotify_init inotify_init1 inotify_rm_watch listxattr mkdirat mknodat open64 openat pipe2 removexattr renameat setxattr sync_file_range splice syscall tee unlinkat unshare utimensat)\n AC_TYPE_OFF_T\n-AC_CHECK_TYPES([loff_t])\n+\n+CFLAGS_hold=\"$CFLAGS\"\n+CFLAGS=\"$OSCFLAGS $CFLAGS\"\n+AC_CHECK_TYPES([loff_t], [], [], [[#include <fcntl.h>]])\n+CFLAGS=\"$CFLAGS_hold\"\n \n LIBS_hold=\"$LIBS\"\n LIBS=\"$LIBS -lm\""}, {"sha": "19ae4393cf138eb30b8568381fc0b20bc63b937d", "filename": "libgo/go/syscall/libcall_linux.go", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -210,20 +210,20 @@ func Gettid() (tid int) {\n //sys\tSetxattr(path string, attr string, data []byte, flags int) (err error)\n //setxattr(path *byte, name *byte, value *byte, size Size_t, flags _C_int) _C_int\n \n-//sys\tsplice(rfd int, roff *_loff_t, wfd int, woff *_loff_t, len int, flags int) (n int64, err error)\n-//splice(rfd _C_int, roff *_loff_t, wfd _C_int, woff *_loff_t, len Size_t, flags _C_uint) Ssize_t\n+//sys\tsplice(rfd int, roff *_libgo_loff_t_type, wfd int, woff *_libgo_loff_t_type, len int, flags int) (n int64, err error)\n+//splice(rfd _C_int, roff *_libgo_loff_t_type, wfd _C_int, woff *_libgo_loff_t_type, len Size_t, flags _C_uint) Ssize_t\n \n func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {\n-\tvar lroff _loff_t\n-\tvar plroff *_loff_t\n+\tvar lroff _libgo_loff_t_type\n+\tvar plroff *_libgo_loff_t_type\n \tif roff != nil {\n-\t\tlroff = _loff_t(*roff)\n+\t\tlroff = _libgo_loff_t_type(*roff)\n \t\tplroff = &lroff\n \t}\n-\tvar lwoff _loff_t\n-\tvar plwoff *_loff_t\n+\tvar lwoff _libgo_loff_t_type\n+\tvar plwoff *_libgo_loff_t_type\n \tif woff != nil {\n-\t\tlwoff = _loff_t(*woff)\n+\t\tlwoff = _libgo_loff_t_type(*woff)\n \t\tplwoff = &lwoff\n \t}\n \tn, err = splice(rfd, plroff, wfd, plwoff, len, flags)"}, {"sha": "5aa309155c33b8462c437aca313859815769d5d8", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -403,11 +403,7 @@ fi\n # Some basic types.\n echo 'type Size_t _size_t' >> ${OUT}\n echo \"type Ssize_t _ssize_t\" >> ${OUT}\n-if grep '^const _HAVE_OFF64_T = ' gen-sysinfo.go > /dev/null 2>&1; then\n-  echo \"type Offset_t _off64_t\" >> ${OUT}\n-else\n-  echo \"type Offset_t _off_t\" >> ${OUT}\n-fi\n+echo \"type Offset_t _libgo_off_t_type\" >> ${OUT}\n echo \"type Mode_t _mode_t\" >> ${OUT}\n echo \"type Pid_t _pid_t\" >> ${OUT}\n echo \"type Uid_t _uid_t\" >> ${OUT}"}, {"sha": "a4259c02ded4d618ae499e0ca133d643835cb473", "filename": "libgo/sysinfo.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fsysinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f195a2270910a6ed08bd76e3a16b0a6503f9faf/libgo%2Fsysinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsysinfo.c?ref=7f195a2270910a6ed08bd76e3a16b0a6503f9faf", "patch": "@@ -357,6 +357,18 @@ enum {\n };\n #endif\n \n+#if defined(HAVE_LOFF_T)\n+// loff_t can be defined as a macro; for -fgo-dump-spec make sure we\n+// see a typedef.\n+typedef loff_t libgo_loff_t_type;\n+#endif\n+\n+#if defined(HAVE_OFF64_T)\n+typedef off64_t libgo_off_t_type;\n+#else\n+typedef off_t libgo_off_t_type;\n+#endif\n+\n // The following section introduces explicit references to types and\n // constants of interest to support bootstrapping libgo using a\n // compiler that doesn't support -fdump-go-spec (e.g., clang), via\n@@ -537,7 +549,8 @@ SREF(timex);\n // From sys/types.h\n TREF(pid_t);\n TREF(off_t);\n-TREF(loff_t);\n+TREF(libgo_loff_t_type);\n+TREF(libgo_off_t_type);\n TREF(size_t);\n TREF(ssize_t);\n TREF(mode_t);"}]}