{"sha": "a211c7b90679f64a73fc10b78a45ff7a64a044a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIxMWM3YjkwNjc5ZjY0YTczZmMxMGI3OGE0NWZmN2E2NGEwNDRhMQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-07T22:00:44Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-07T22:00:44Z"}, "message": "Allow large alignments on ELF systems\n\nFrom-SVN: r10951", "tree": {"sha": "ae0fa4f4cb62e8f49030e67f1da3956b7e629025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0fa4f4cb62e8f49030e67f1da3956b7e629025"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a211c7b90679f64a73fc10b78a45ff7a64a044a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a211c7b90679f64a73fc10b78a45ff7a64a044a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a211c7b90679f64a73fc10b78a45ff7a64a044a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a211c7b90679f64a73fc10b78a45ff7a64a044a1/comments", "author": null, "committer": null, "parents": [{"sha": "3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c25f45127e55fa44bedb0b20dccd3d1042e2dab"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "8f5e32be396e0b8ae8c5fd7317c89ad159ca3c70", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=a211c7b90679f64a73fc10b78a45ff7a64a044a1", "patch": "@@ -44,3 +44,10 @@ do {\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\\\n   fprintf (asm_out_text_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n } while (0)\n+\n+/* Biggest alignment supported by the object file format of this\n+   machine.  Use this macro to limit the alignment which can be\n+   specified using the `__attribute__ ((aligned (N)))' construct.  If\n+   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n+\n+#define MAX_OFILE_ALIGNMENT (32768*8)"}, {"sha": "c9e1b2afea5c3d88fa6f67e3d78ae29e76ce4f88", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=a211c7b90679f64a73fc10b78a45ff7a64a044a1", "patch": "@@ -69,6 +69,13 @@ Boston, MA 02111-1307, USA.  */\n #include \"gofast.h\"\n #define INIT_TARGET_OPTABS INIT_GOFAST_OPTABS\n \n+/* Biggest alignment supported by the object file format of this\n+   machine.  Use this macro to limit the alignment which can be\n+   specified using the `__attribute__ ((aligned (N)))' construct.  If\n+   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n+\n+#define MAX_OFILE_ALIGNMENT (32768*8)\n+\n /* We need to use .esize and .etype instead of .size and .type to\n    avoid conflicting with ELF directives.  */\n #undef PUT_SDB_SIZE"}, {"sha": "18eaca59cdc582fce334e854688e16831b9cf1a9", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a211c7b90679f64a73fc10b78a45ff7a64a044a1/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=a211c7b90679f64a73fc10b78a45ff7a64a044a1", "patch": "@@ -476,6 +476,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_ALIGNED_COMMON (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n } while (0)\n \n+/* Biggest alignment supported by the object file format of this\n+   machine.  Use this macro to limit the alignment which can be\n+   specified using the `__attribute__ ((aligned (N)))' construct.  If\n+   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n+\n+#define MAX_OFILE_ALIGNMENT (32768*8)\n+\n /* This is the pseudo-op used to generate a 32-bit word of data with a\n    specific value in some section.  This is the same for all known svr4\n    assemblers.  */"}]}