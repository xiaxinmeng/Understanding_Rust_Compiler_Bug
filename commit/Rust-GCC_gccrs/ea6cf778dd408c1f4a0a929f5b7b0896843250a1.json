{"sha": "ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2Y2Y3NzhkZDQwOGMxZjRhMGE5MjlmNWI3YjA4OTY4NDMyNTBhMQ==", "commit": {"author": {"name": "David Li", "email": "davidxl@google.com", "date": "2011-06-01T17:42:39Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-06-01T17:42:39Z"}, "message": "Better function header dump\n\nFrom-SVN: r174536", "tree": {"sha": "bd47a6c1db5bf72c650753ad4f7238f47f6f6d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd47a6c1db5bf72c650753ad4f7238f47f6f6d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eeeb9b49bdae0cd4fe6bf4dc3bd75d401ae5c66d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeeb9b49bdae0cd4fe6bf4dc3bd75d401ae5c66d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeeb9b49bdae0cd4fe6bf4dc3bd75d401ae5c66d"}], "stats": {"total": 84, "additions": 49, "deletions": 35}, "files": [{"sha": "363c655a73a105f75f3c32954ab4a7e2254d2665", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -1,3 +1,10 @@\n+2011-06-01  David Li  <davidxl@google.com>\n+\n+\t* tree-pretty-print.c (dump_function_header): New function.\n+\t* final.c (rest_of_clean_state): Use header dumper.\n+\t* tree-cfg.c (gimple_dump_cfg): Use header dumper.\n+\t* passes.c (pass_init_dump_file): Use header dumper.\n+\n 2011-06-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (compare_loc_descriptor, scompare_loc_descriptor,"}, {"sha": "af8047c1608f2b3802bef51c08f80337da623d65", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -83,6 +83,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n+#include \"tree-pretty-print.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\t\t/* Needed for external data\n@@ -4360,20 +4361,7 @@ rest_of_clean_state (void)\n \t}\n       else\n \t{\n-\t  const char *aname;\n-\t  struct cgraph_node *node = cgraph_get_node (current_function_decl);\n-\n-\t  aname = (IDENTIFIER_POINTER\n-\t\t   (DECL_ASSEMBLER_NAME (current_function_decl)));\n-\t  fprintf (final_output, \"\\n;; Function (%s) %s\\n\\n\", aname,\n-\t     node->frequency == NODE_FREQUENCY_HOT\n-\t     ? \" (hot)\"\n-\t     : node->frequency == NODE_FREQUENCY_UNLIKELY_EXECUTED\n-\t     ? \" (unlikely executed)\"\n-\t     : node->frequency == NODE_FREQUENCY_EXECUTED_ONCE\n-\t     ? \" (executed once)\"\n-\t     : \"\");\n-\n+\t  dump_function_header (final_output, current_function_decl);\n \t  flag_dump_noaddr = flag_dump_unnumbered = 1;\n \t  if (flag_compare_debug_opt || flag_compare_debug)\n \t    dump_flags |= TDF_NOUID;"}, {"sha": "d5189ca17d2b6faa424c5b021ea9dd687e937023", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -74,6 +74,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lto-streamer.h\"\n #include \"plugin.h\"\n #include \"ipa-utils.h\"\n+#include \"tree-pretty-print.h\"\n \n #if defined (DWARF2_UNWIND_INFO) || defined (DWARF2_DEBUGGING_INFO)\n #include \"dwarf2out.h\"\n@@ -1637,21 +1638,7 @@ pass_init_dump_file (struct opt_pass *pass)\n       dump_file_name = get_dump_file_name (pass->static_pass_number);\n       dump_file = dump_begin (pass->static_pass_number, &dump_flags);\n       if (dump_file && current_function_decl)\n-\t{\n-\t  const char *dname, *aname;\n-\t  struct cgraph_node *node = cgraph_get_node (current_function_decl);\n-\t  dname = lang_hooks.decl_printable_name (current_function_decl, 2);\n-\t  aname = (IDENTIFIER_POINTER\n-\t\t   (DECL_ASSEMBLER_NAME (current_function_decl)));\n-\t  fprintf (dump_file, \"\\n;; Function %s (%s)%s\\n\\n\", dname, aname,\n-\t     node->frequency == NODE_FREQUENCY_HOT\n-\t     ? \" (hot)\"\n-\t     : node->frequency == NODE_FREQUENCY_UNLIKELY_EXECUTED\n-\t     ? \" (unlikely executed)\"\n-\t     : node->frequency == NODE_FREQUENCY_EXECUTED_ONCE\n-\t     ? \" (executed once)\"\n-\t     : \"\");\n-\t}\n+        dump_function_header (dump_file, current_function_decl);\n       return initializing_dump;\n     }\n   else"}, {"sha": "5ba659c2b0b93654c0dcd1460a2a6a38661e1380", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -2052,11 +2052,7 @@ gimple_dump_cfg (FILE *file, int flags)\n {\n   if (flags & TDF_DETAILS)\n     {\n-      const char *funcname\n-\t= lang_hooks.decl_printable_name (current_function_decl, 2);\n-\n-      fputc ('\\n', file);\n-      fprintf (file, \";; Function %s\\n\\n\", funcname);\n+      dump_function_header (file, current_function_decl);\n       fprintf (file, \";; \\n%d basic blocks, %d edges, last basic block %d.\\n\\n\",\n \t       n_basic_blocks, n_edges, last_basic_block);\n \n@@ -7525,4 +7521,3 @@ struct gimple_opt_pass pass_warn_unused_result =\n     0,\t\t\t\t\t/* todo_flags_finish */\n   }\n };\n-"}, {"sha": "f49881972256da5139d1104e036dae785051844e", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -3013,3 +3013,39 @@ pp_base_tree_identifier (pretty_printer *pp, tree id)\n     pp_append_text (pp, IDENTIFIER_POINTER (id),\n \t\t    IDENTIFIER_POINTER (id) + IDENTIFIER_LENGTH (id));\n }\n+\n+/* A helper function that is used to dump function information before the\n+   function dump.  */\n+\n+void\n+dump_function_header (FILE *dump_file, tree fdecl)\n+{\n+  const char *dname, *aname;\n+  struct cgraph_node *node = cgraph_get_node (fdecl);\n+  struct function *fun = DECL_STRUCT_FUNCTION (fdecl);\n+\n+  dname = lang_hooks.decl_printable_name (fdecl, 2);\n+\n+  if (DECL_ASSEMBLER_NAME_SET_P (fdecl))\n+    aname = (IDENTIFIER_POINTER\n+             (DECL_ASSEMBLER_NAME (fdecl)));\n+  else\n+    aname = \"<unset-asm-name>\";\n+\n+  if (node)\n+    {\n+      fprintf (dump_file, \"\\n;; Function %s (%s, funcdef_no=%d, decl_uid = %d, cgraph_uid=%d)\",\n+               dname, aname, fun->funcdef_no, DECL_UID(fdecl), node->uid);\n+      fprintf (dump_file, \"%s\\n\\n\",\n+               node->frequency == NODE_FREQUENCY_HOT\n+               ? \" (hot)\"\n+               : node->frequency == NODE_FREQUENCY_UNLIKELY_EXECUTED\n+               ? \" (unlikely executed)\"\n+               : node->frequency == NODE_FREQUENCY_EXECUTED_ONCE\n+               ? \" (executed once)\"\n+               : \"\");\n+    }\n+  else\n+    fprintf (dump_file, \"\\n;; Function %s (%s, funcdef_no=%d, decl_uid = %d)\",\n+             dname, aname, fun->funcdef_no, DECL_UID(fdecl));\n+}"}, {"sha": "60758789f15b78c03c0597597d18bab23f23b382", "filename": "gcc/tree-pretty-print.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6cf778dd408c1f4a0a929f5b7b0896843250a1/gcc%2Ftree-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.h?ref=ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "patch": "@@ -50,6 +50,7 @@ extern void debug_generic_expr (tree);\n extern void debug_generic_stmt (tree);\n extern void debug_tree_chain (tree);\n extern void percent_K_format (text_info *);\n+extern void dump_function_header (FILE *, tree);\n \n /* In toplev.c  */\n extern bool default_tree_printer (pretty_printer *, text_info *, const char *,"}]}