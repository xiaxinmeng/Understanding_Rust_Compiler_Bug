{"sha": "403e48ef441b0502af46ad3598f699f4a1611791", "node_id": "C_kwDOANBUbNoAKDQwM2U0OGVmNDQxYjA1MDJhZjQ2YWQzNTk4ZjY5OWY0YTE2MTE3OTE", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2023-03-21T13:20:52Z"}, "committer": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2023-03-21T19:30:19Z"}, "message": "libstdc++: Skip integer division optimization for Clang\n\nClang ICEs on _SimdImplX86::_S_divides. The function is only working\naround a missed optimization and not necessary for correctness.\nTherefore, don't use it for Clang.\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/simd_detail.h: Don't define\n\t_GLIBCXX_SIMD_WORKAROUND_PR90993 for Clang.\n\t* include/experimental/bits/simd_x86.h (_S_divides): Remove\n\tcheck for __clang__.", "tree": {"sha": "fc6fd11d39627ced5cada69e72e3c00c03d2f544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc6fd11d39627ced5cada69e72e3c00c03d2f544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/403e48ef441b0502af46ad3598f699f4a1611791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403e48ef441b0502af46ad3598f699f4a1611791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403e48ef441b0502af46ad3598f699f4a1611791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403e48ef441b0502af46ad3598f699f4a1611791/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd282b16bfd3c6e218dffb7798a375365b10ae22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd282b16bfd3c6e218dffb7798a375365b10ae22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd282b16bfd3c6e218dffb7798a375365b10ae22"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "1fb77866bb236d83b33043e63b1dcc34f6a5a802", "filename": "libstdc++-v3/include/experimental/bits/simd_detail.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403e48ef441b0502af46ad3598f699f4a1611791/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_detail.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403e48ef441b0502af46ad3598f699f4a1611791/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_detail.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_detail.h?ref=403e48ef441b0502af46ad3598f699f4a1611791", "patch": "@@ -320,7 +320,9 @@\n #endif\n \n // integer division not optimized\n+#ifndef __clang__\n #define _GLIBCXX_SIMD_WORKAROUND_PR90993 1\n+#endif\n \n // very bad codegen for extraction and concatenation of 128/256 \"subregisters\"\n // with sizeof(element type) < 8: https://godbolt.org/g/mqUsgM"}, {"sha": "28ba344c2b2084f79f7f46d80cdd9f3f118ba059", "filename": "libstdc++-v3/include/experimental/bits/simd_x86.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403e48ef441b0502af46ad3598f699f4a1611791/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403e48ef441b0502af46ad3598f699f4a1611791/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_x86.h?ref=403e48ef441b0502af46ad3598f699f4a1611791", "patch": "@@ -1469,7 +1469,7 @@ template <typename _Abi, typename>\n \t\t[&__xf, &__yf](auto __i) _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA\n \t\t  -> _SimdWrapper<_Float, __n_intermediate>\n \t\t{\n-#if !defined __clang__ && __GCC_IEC_559 == 0\n+#if __GCC_IEC_559 == 0\n \t\t  // If -freciprocal-math is active, using the `/` operator is\n \t\t  // incorrect because it may be translated to an imprecise\n \t\t  // multiplication with reciprocal. We need to use inline\n@@ -1524,7 +1524,7 @@ template <typename _Abi, typename>\n \t  */\n \treturn _Base::_S_divides(__x, __y);\n       }\n-  #endif // _GLIBCXX_SIMD_WORKAROUND_PR90993\n+#endif // _GLIBCXX_SIMD_WORKAROUND_PR90993\n \n     // }}}\n     // _S_modulus {{{"}]}