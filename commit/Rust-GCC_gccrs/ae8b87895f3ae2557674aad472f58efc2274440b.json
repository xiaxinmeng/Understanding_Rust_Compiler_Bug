{"sha": "ae8b87895f3ae2557674aad472f58efc2274440b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4Yjg3ODk1ZjNhZTI1NTc2NzRhYWQ0NzJmNThlZmMyMjc0NDQwYg==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-08-09T17:33:17Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-08-09T17:33:17Z"}, "message": "check.c (gfc_check_ttynam_sub, [...]): Add check functions for new intrinsics TTYNAM and ISATTY.\n\n\t* check.c (gfc_check_ttynam_sub, gfc_check_isatty): Add check\n\tfunctions for new intrinsics TTYNAM and ISATTY.\n\t* intrinsic.c (add_functions, add_subroutines): Add new\n\tintrinsics.\n\t* intrinsic.h: Add prototypes for new check and resolve\n\tfunctions.\n\t* iresolve.c (gfc_resolve_isatty, gfc_resolve_ttynam_sub): New\n\tresolve functions for intrinsics TTYNAM and ISATTY.\n\t* gfortran.h (gfc_generic_isym_id): Add symbol for ISATTY.\n\t* trans-intrinsic.c: Add case for GFC_ISYM_ISATTY.\n\t* Makefile.am: Add file intrinsics/tty.c to Makefile process.\n\t* Makefile.in: Regenerate.\n\t* io/io.h: Prototypes for new functions stream_isatty and\n\tstream_ttyname.\n\t* io/unix (stream_isatty, stream_ttyname): New functions to call\n\tisatty() and ttyname() on a given unit.\n\t* intrinsics/tty.c: New file to implement g77 intrinsics TTYNAM\n\tand ISATTY.\n\nFrom-SVN: r102915", "tree": {"sha": "c536f14d5c459cba9c9c7a629d3857e4fb6248ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c536f14d5c459cba9c9c7a629d3857e4fb6248ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8b87895f3ae2557674aad472f58efc2274440b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8b87895f3ae2557674aad472f58efc2274440b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8b87895f3ae2557674aad472f58efc2274440b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8b87895f3ae2557674aad472f58efc2274440b/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e"}], "stats": {"total": 240, "additions": 235, "deletions": 5}, "files": [{"sha": "e19247f9b4fb76dcd0cdeb148f5d2711e3c3f28a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -1,3 +1,16 @@\n+2005-08-09  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* check.c (gfc_check_ttynam_sub, gfc_check_isatty): Add check\n+\tfunctions for new intrinsics TTYNAM and ISATTY.\n+\t* intrinsic.c (add_functions, add_subroutines): Add new\n+\tintrinsics.\n+\t* intrinsic.h: Add prototypes for new check and resolve\n+\tfunctions.\n+\t* iresolve.c (gfc_resolve_isatty, gfc_resolve_ttynam_sub): New\n+\tresolve functions for intrinsics TTYNAM and ISATTY.\n+\t* gfortran.h (gfc_generic_isym_id): Add symbol for ISATTY.\n+\t* trans-intrinsic.c: Add case for GFC_ISYM_ISATTY.\n+\n 2005-08-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* scanner.c (preprocessor_line): Don't write beyond the end of flag"}, {"sha": "fbbc96bf29d937792524ec9b8c316a943b86896f", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -2573,6 +2573,38 @@ gfc_check_hostnm_sub (gfc_expr * name, gfc_expr * status)\n }\n \n \n+try\n+gfc_check_ttynam_sub (gfc_expr * unit, gfc_expr * name)\n+{\n+  if (scalar_check (unit, 0) == FAILURE)\n+    return FAILURE;\n+\n+  if (type_check (unit, 0, BT_INTEGER) == FAILURE)\n+    return FAILURE;\n+\n+  if (type_check (name, 1, BT_CHARACTER) == FAILURE)\n+    return FAILURE;\n+\n+  return SUCCESS;\n+}\n+\n+\n+try\n+gfc_check_isatty (gfc_expr * unit)\n+{\n+  if (unit == NULL)\n+    return FAILURE;\n+\n+  if (type_check (unit, 0, BT_INTEGER) == FAILURE)\n+    return FAILURE;\n+\n+  if (scalar_check (unit, 0) == FAILURE)\n+    return FAILURE;\n+\n+  return SUCCESS;\n+}\n+\n+\n try\n gfc_check_perror (gfc_expr * string)\n {"}, {"sha": "ac271054b056c705e74b9d3f4c8954dc721a1d29", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -335,6 +335,7 @@ enum gfc_generic_isym_id\n   GFC_ISYM_INT,\n   GFC_ISYM_IOR,\n   GFC_ISYM_IRAND,\n+  GFC_ISYM_ISATTY,\n   GFC_ISYM_ISHFT,\n   GFC_ISYM_ISHFTC,\n   GFC_ISYM_KILL,"}, {"sha": "a304fbd667c870579df5180c0c65889ff91fc898", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -1468,6 +1468,12 @@ add_functions (void)\n \n   make_generic (\"irand\", GFC_ISYM_IRAND, GFC_STD_GNU);\n \n+  add_sym_1 (\"isatty\", 0, 0, BT_LOGICAL, dl, GFC_STD_GNU,\n+\t     gfc_check_isatty, NULL, gfc_resolve_isatty,\n+\t     ut, BT_INTEGER, di, REQUIRED);\n+\n+  make_generic (\"isatty\", GFC_ISYM_ISATTY, GFC_STD_GNU);\n+\n   add_sym_2 (\"ishft\", 1, 1, BT_INTEGER, di, GFC_STD_F95,\n \t     gfc_check_ishft, gfc_simplify_ishft, gfc_resolve_ishft,\n \t     i, BT_INTEGER, di, REQUIRED, sh, BT_INTEGER, di, REQUIRED);\n@@ -2247,6 +2253,10 @@ add_subroutines (void)\n \t      c, BT_INTEGER, di, OPTIONAL, cr, BT_INTEGER, di, OPTIONAL,\n \t      cm, BT_INTEGER, di, OPTIONAL);\n \n+  add_sym_2s (\"ttynam\", 0, 1, BT_UNKNOWN, 0, GFC_STD_GNU,\n+              gfc_check_ttynam_sub, NULL, gfc_resolve_ttynam_sub,\n+\t      ut, BT_INTEGER, di, REQUIRED, c, BT_CHARACTER, dc, REQUIRED);\n+\n   add_sym_2s (\"umask\", 0, 1, BT_UNKNOWN, 0, GFC_STD_GNU,\n           gfc_check_umask_sub, NULL, gfc_resolve_umask_sub,\n \t      val, BT_INTEGER, di, REQUIRED, num, BT_INTEGER, di, OPTIONAL);"}, {"sha": "a10e84465ad9a6fb9f6f30c0b7a29b043cd1579d", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -70,6 +70,7 @@ try gfc_check_index (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_int (gfc_expr *, gfc_expr *);\n try gfc_check_ior (gfc_expr *, gfc_expr *);\n try gfc_check_irand (gfc_expr *);\n+try gfc_check_isatty (gfc_expr *);\n try gfc_check_ishft (gfc_expr *, gfc_expr *);\n try gfc_check_ishftc (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_kill (gfc_expr *, gfc_expr *);\n@@ -148,6 +149,7 @@ try gfc_check_symlnk_sub (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_sleep_sub (gfc_expr *);\n try gfc_check_stat_sub (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_system_sub (gfc_expr *, gfc_expr *);\n+try gfc_check_ttynam_sub (gfc_expr *, gfc_expr *);\n try gfc_check_umask_sub (gfc_expr *, gfc_expr *);\n try gfc_check_unlink_sub (gfc_expr *, gfc_expr *);\n \n@@ -316,6 +318,7 @@ void gfc_resolve_ichar (gfc_expr *, gfc_expr *);\n void gfc_resolve_idnint (gfc_expr *, gfc_expr *);\n void gfc_resolve_int (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_ior (gfc_expr *, gfc_expr *, gfc_expr *);\n+void gfc_resolve_isatty (gfc_expr *, gfc_expr *);\n void gfc_resolve_ishft (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_ishftc (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_kill (gfc_expr *, gfc_expr *, gfc_expr *);\n@@ -402,6 +405,7 @@ void gfc_resolve_sleep_sub (gfc_code *);\n void gfc_resolve_stat_sub (gfc_code *);\n void gfc_resolve_system_clock (gfc_code *);\n void gfc_resolve_system_sub (gfc_code *);\n+void gfc_resolve_ttynam_sub (gfc_code *);\n void gfc_resolve_umask_sub (gfc_code *);\n void gfc_resolve_unlink_sub (gfc_code *);\n "}, {"sha": "a6f7f27776e586c8c55149489308368e158999d2", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -711,6 +711,26 @@ gfc_resolve_int (gfc_expr * f, gfc_expr * a, gfc_expr * kind)\n }\n \n \n+void\n+gfc_resolve_isatty (gfc_expr * f, gfc_expr * u)\n+{\n+  gfc_typespec ts;\n+  \n+  f->ts.type = BT_LOGICAL;\n+  f->ts.kind = gfc_default_integer_kind;\n+  if (u->ts.kind != gfc_c_int_kind)\n+    {\n+      ts.type = BT_INTEGER;\n+      ts.kind = gfc_c_int_kind;\n+      ts.derived = NULL;\n+      ts.cl = NULL;\n+      gfc_convert_type (u, &ts, 2);\n+    }\n+\n+  f->value.function.name = gfc_get_string (PREFIX(\"isatty_l%d\"), f->ts.kind);\n+}\n+\n+\n void\n gfc_resolve_ishft (gfc_expr * f, gfc_expr * i, gfc_expr * shift)\n {\n@@ -1939,6 +1959,25 @@ gfc_resolve_fstat_sub (gfc_code * c)\n   c->resolved_sym = gfc_get_intrinsic_sub_symbol (name);\n }\n \n+\n+void\n+gfc_resolve_ttynam_sub (gfc_code * c)\n+{\n+  gfc_typespec ts;\n+  \n+  if (c->ext.actual->expr->ts.kind != gfc_c_int_kind)\n+    {\n+      ts.type = BT_INTEGER;\n+      ts.kind = gfc_c_int_kind;\n+      ts.derived = NULL;\n+      ts.cl = NULL;\n+      gfc_convert_type (c->ext.actual->expr, &ts, 2);\n+    }\n+\n+  c->resolved_sym = gfc_get_intrinsic_sub_symbol (PREFIX(\"ttynam_sub\"));\n+}\n+\n+\n /* Resolve the UMASK intrinsic subroutine.  */\n \n void"}, {"sha": "f7907ecd92d513d98ef40b06136594ae7bd9242b", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -2996,6 +2996,7 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n     case GFC_ISYM_KILL:\n     case GFC_ISYM_IERRNO:\n     case GFC_ISYM_IRAND:\n+    case GFC_ISYM_ISATTY:\n     case GFC_ISYM_LINK:\n     case GFC_ISYM_MATMUL:\n     case GFC_ISYM_RAND:"}, {"sha": "f64b01d49944d7c11c66a9b95ddaf05223db6f8e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -1,9 +1,19 @@\n+2005-08-09  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\t* Makefile.am: Add file intrinsics/tty.c to Makefile process.\n+\t* Makefile.in: Regenerate.\n+\t* io/io.h: Prototypes for new functions stream_isatty and\n+\tstream_ttyname.\n+\t* io/unix (stream_isatty, stream_ttyname): New functions to call\n+\tisatty() and ttyname() on a given unit.\n+\t* intrinsics/tty.c: New file to implement g77 intrinsics TTYNAM\n+\tand ISATTY.\n+\n 2005-08-08  Jerry DeLisle  <jvdelisle@verizon.net>\n \n-        PR libfortran/23154\n-        * io/transfer.c (data_transfer_init): Initialize\n-        current_unit->bytes_left for a read.\n-        \n+\tPR libfortran/23154\n+\t* io/transfer.c (data_transfer_init): Initialize\n+\tcurrent_unit->bytes_left for a read.\n+\n 2005-08-07  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n \n \tPR fortran/22390"}, {"sha": "d5e21c6038665a050a1d59d1e0a514880bc2c01a", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -85,6 +85,7 @@ intrinsics/symlnk.c \\\n intrinsics/system_clock.c \\\n intrinsics/time.c \\\n intrinsics/transpose_generic.c \\\n+intrinsics/tty.c \\\n intrinsics/umask.c \\\n intrinsics/unlink.c \\\n intrinsics/unpack_generic.c \\"}, {"sha": "f69e3b4b1a6d02b06f84aecc99715b3d6d190d1e", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -140,7 +140,7 @@ am__objects_33 = associated.lo abort.lo args.lo bessel.lo \\\n \trand.lo random.lo rename.lo reshape_generic.lo \\\n \treshape_packed.lo selected_int_kind.lo selected_real_kind.lo \\\n \tstat.lo symlnk.lo system_clock.lo time.lo transpose_generic.lo \\\n-\tumask.lo unlink.lo unpack_generic.lo in_pack_generic.lo \\\n+\ttty.lo umask.lo unlink.lo unpack_generic.lo in_pack_generic.lo \\\n \tin_unpack_generic.lo normalize.lo\n am__objects_34 =\n am__objects_35 = _abs_c4.lo _abs_c8.lo _abs_i4.lo _abs_i8.lo \\\n@@ -379,6 +379,7 @@ intrinsics/symlnk.c \\\n intrinsics/system_clock.c \\\n intrinsics/time.c \\\n intrinsics/transpose_generic.c \\\n+intrinsics/tty.c \\\n intrinsics/umask.c \\\n intrinsics/unlink.c \\\n intrinsics/unpack_generic.c \\\n@@ -1385,6 +1386,9 @@ time.lo: intrinsics/time.c\n transpose_generic.lo: intrinsics/transpose_generic.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transpose_generic.lo `test -f 'intrinsics/transpose_generic.c' || echo '$(srcdir)/'`intrinsics/transpose_generic.c\n \n+tty.lo: intrinsics/tty.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tty.lo `test -f 'intrinsics/tty.c' || echo '$(srcdir)/'`intrinsics/tty.c\n+\n umask.lo: intrinsics/umask.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o umask.lo `test -f 'intrinsics/umask.c' || echo '$(srcdir)/'`intrinsics/umask.c\n "}, {"sha": "c9e2c579e5bfce233fa082d828748a08e49b0a42", "filename": "libgfortran/intrinsics/tty.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fintrinsics%2Ftty.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fintrinsics%2Ftty.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftty.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -0,0 +1,97 @@\n+/* Implementation of the ISATTY and TTYNAM g77 intrinsics.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n+\n+This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or\n+modify it under the terms of the GNU General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+In addition to the permissions in the GNU General Public License, the\n+Free Software Foundation gives you unlimited permission to link the\n+compiled version of this file into combinations with other programs,\n+and to distribute those combinations without any restriction coming\n+from the use of this file.  (The General Public License restrictions\n+do apply in other respects; for example, they cover modification of\n+the file, and distribution when not linked into a combine\n+executable.)\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public\n+License along with libgfortran; see the file COPYING.  If not,\n+write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"libgfortran.h\"\n+#include \"../io/io.h\"\n+#include <string.h>\n+\n+/* LOGICAL FUNCTION ISATTY(UNIT)\n+   INTEGER, INTENT(IN) :: UNIT */\n+\n+extern GFC_LOGICAL_4 isatty_l4 (int *);\n+export_proto(isatty_l4);\n+\n+GFC_LOGICAL_4\n+isatty_l4 (int *unit)\n+{\n+  gfc_unit *u;\n+\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    return (GFC_LOGICAL_4) stream_isatty (u->s);\n+  else\n+    return 0;\n+}\n+\n+\n+extern GFC_LOGICAL_8 isatty_l8 (int *);\n+export_proto(isatty_l8);\n+\n+GFC_LOGICAL_8\n+isatty_l8 (int *unit)\n+{\n+  gfc_unit *u;\n+\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    return (GFC_LOGICAL_8) stream_isatty (u->s);\n+  else\n+    return 0;\n+}\n+\n+\n+/* SUBROUTINE TTYNAM(UNIT,NAME)\n+   INTEGER,SCALAR,INTENT(IN) :: UNIT\n+   CHARACTER,SCALAR,INTENT(OUT) :: NAME */\n+\n+extern void ttynam_sub (int *, char *, gfc_charlen_type);\n+export_proto(ttynam_sub);\n+\n+void\n+ttynam_sub (int *unit, char * name, gfc_charlen_type name_len)\n+{\n+  gfc_unit *u;\n+  char * n;\n+  int i;\n+\n+  memset (name, ' ', name_len);\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    {\n+      n = stream_ttyname (u->s);\n+      if (n != NULL)\n+\t{\n+\t  i = 0;\n+\t  while (*n && i < name_len)\n+\t    name[i++] = *(n++);\n+\t}\n+    }\n+}"}, {"sha": "a7dae18406159640ca76510beefab583f9f2446b", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -496,6 +496,12 @@ internal_proto(empty_internal_buffer);\n extern try flush (stream *);\n internal_proto(flush);\n \n+extern int stream_isatty (stream *);\n+internal_proto(stream_isatty);\n+\n+extern char * stream_ttyname (stream *);\n+internal_proto(stream_ttyname);\n+\n extern int unit_to_fd (int);\n internal_proto(unit_to_fd);\n "}, {"sha": "eead2a28339fd5a475aa9f0a30656192577e151e", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b87895f3ae2557674aad472f58efc2274440b/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=ae8b87895f3ae2557674aad472f58efc2274440b", "patch": "@@ -1536,6 +1536,18 @@ flush (stream *s)\n   return fd_flush( (unix_stream *) s);\n }\n \n+int\n+stream_isatty (stream *s)\n+{\n+  return isatty (((unix_stream *) s)->fd);\n+}\n+\n+char *\n+stream_ttyname (stream *s)\n+{\n+  return ttyname (((unix_stream *) s)->fd);\n+}\n+\n \n /* How files are stored:  This is an operating-system specific issue,\n    and therefore belongs here.  There are three cases to consider."}]}