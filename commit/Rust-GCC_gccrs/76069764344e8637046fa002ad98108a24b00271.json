{"sha": "76069764344e8637046fa002ad98108a24b00271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYwNjk3NjQzNDRlODYzNzA0NmZhMDAyYWQ5ODEwOGEyNGIwMDI3MQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-03-18T00:29:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-03-18T00:29:15Z"}, "message": "Check zero/sign extended hard registers.\n\ngcc/\n\n2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/47725\n\t* combine.c (cant_combine_insn_p): Check zero/sign extended\n\thard registers.\n\ngcc/testsuite/\n\n2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/47725\n\t* gcc.dg/torture/pr47725.c: New.\n\nFrom-SVN: r171124", "tree": {"sha": "a1dc8c870afbaf05bcc3f2a156688bb3e52cf9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1dc8c870afbaf05bcc3f2a156688bb3e52cf9c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76069764344e8637046fa002ad98108a24b00271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76069764344e8637046fa002ad98108a24b00271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76069764344e8637046fa002ad98108a24b00271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76069764344e8637046fa002ad98108a24b00271/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98aa09c6b1a226b0e12ab735d2a62cf29e915247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aa09c6b1a226b0e12ab735d2a62cf29e915247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98aa09c6b1a226b0e12ab735d2a62cf29e915247"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "81498ff4c96eb6e242025952b8f9f5f2914dcd14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76069764344e8637046fa002ad98108a24b00271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76069764344e8637046fa002ad98108a24b00271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76069764344e8637046fa002ad98108a24b00271", "patch": "@@ -1,3 +1,9 @@\n+2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/47725\n+\t* combine.c (cant_combine_insn_p): Check zero/sign extended\n+\thard registers.\n+\n 2011-03-17  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/v850/v850.h (OUTPUT_ADDR_CONST_EXTRA): Remove."}, {"sha": "67aecf1510001a8d99852645da61f21bfea6a621", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76069764344e8637046fa002ad98108a24b00271/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76069764344e8637046fa002ad98108a24b00271/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=76069764344e8637046fa002ad98108a24b00271", "patch": "@@ -2137,6 +2137,12 @@ cant_combine_insn_p (rtx insn)\n     return 0;\n   src = SET_SRC (set);\n   dest = SET_DEST (set);\n+  if (GET_CODE (src) == ZERO_EXTEND\n+      || GET_CODE (src) == SIGN_EXTEND)\n+    src = XEXP (src, 0);\n+  if (GET_CODE (dest) == ZERO_EXTEND\n+      || GET_CODE (dest) == SIGN_EXTEND)\n+    dest = XEXP (dest, 0);\n   if (GET_CODE (src) == SUBREG)\n     src = SUBREG_REG (src);\n   if (GET_CODE (dest) == SUBREG)"}, {"sha": "51f748c2e227a6b4c648d27a1af458f87681ea5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76069764344e8637046fa002ad98108a24b00271/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76069764344e8637046fa002ad98108a24b00271/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76069764344e8637046fa002ad98108a24b00271", "patch": "@@ -1,3 +1,8 @@\n+2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/47725\n+\t* gcc.dg/torture/pr47725.c: New.\n+\n 2011-03-17  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/constexpr-overflow2.C: New."}, {"sha": "03d5d36c3216b3983182efdb0159ea19df3cbe1d", "filename": "gcc/testsuite/gcc.dg/torture/pr47725.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76069764344e8637046fa002ad98108a24b00271/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47725.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76069764344e8637046fa002ad98108a24b00271/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47725.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47725.c?ref=76069764344e8637046fa002ad98108a24b00271", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+struct _Unwind_Context\n+{\n+  void *reg[17];\n+  void *ra;\n+};\n+extern void bar (struct _Unwind_Context *);\n+void\n+__frame_state_for (void *pc_target)\n+{\n+  struct _Unwind_Context context;\n+  __builtin_memset (&context, 0, sizeof (struct _Unwind_Context));\n+  context.ra = pc_target;\n+  bar (&context);\n+}"}]}