{"sha": "f98342adf9330522067172f2d9da5b82278d9a70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4MzQyYWRmOTMzMDUyMjA2NzE3MmYyZDlkYTViODIyNzhkOWE3MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-07-01T18:39:13Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-01T18:39:13Z"}, "message": "rs6000.md (ctr<mode>): Make this a parameterized name.\n\n@ctr<mode>\n\n\n\t* config/rs6000/rs6000.md (ctr<mode>): Make this a parameterized name.\n\t(doloop_end): Use that name.  Simplify.\n\nFrom-SVN: r272899", "tree": {"sha": "99ef051e6929f84143285926eac72338a001fedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99ef051e6929f84143285926eac72338a001fedb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f98342adf9330522067172f2d9da5b82278d9a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98342adf9330522067172f2d9da5b82278d9a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98342adf9330522067172f2d9da5b82278d9a70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98342adf9330522067172f2d9da5b82278d9a70/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1fcc7f3afb12b55265c0b8b9522fe257c9a0098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fcc7f3afb12b55265c0b8b9522fe257c9a0098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1fcc7f3afb12b55265c0b8b9522fe257c9a0098"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "5da03c3a89f4c791990c124c48ad1a9c11967469", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98342adf9330522067172f2d9da5b82278d9a70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98342adf9330522067172f2d9da5b82278d9a70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f98342adf9330522067172f2d9da5b82278d9a70", "patch": "@@ -1,3 +1,8 @@\n+2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (ctr<mode>): Make this a parameterized name.\n+\t(doloop_end): Use that name.  Simplify.\n+\n 2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (indirect_jump<mode>_nospec): Make this a"}, {"sha": "56f5350210db8a8e47e96f77d39a20baa03cd29a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98342adf9330522067172f2d9da5b82278d9a70/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98342adf9330522067172f2d9da5b82278d9a70/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f98342adf9330522067172f2d9da5b82278d9a70", "patch": "@@ -12572,22 +12572,14 @@\n    (use (match_operand 1))]\t; label\n   \"\"\n {\n-  if (TARGET_64BIT)\n-    {\n-      if (GET_MODE (operands[0]) != DImode)\n-\tFAIL;\n-      emit_jump_insn (gen_ctrdi (operands[0], operands[1]));\n-    }\n-  else\n-    {\n-      if (GET_MODE (operands[0]) != SImode)\n-\tFAIL;\n-      emit_jump_insn (gen_ctrsi (operands[0], operands[1]));\n-    }\n+  if (GET_MODE (operands[0]) != Pmode)\n+    FAIL;\n+\n+  emit_jump_insn (gen_ctr (Pmode, operands[0], operands[1]));\n   DONE;\n })\n \n-(define_expand \"ctr<mode>\"\n+(define_expand \"@ctr<mode>\"\n   [(parallel [(set (pc)\n \t\t   (if_then_else (ne (match_operand:P 0 \"register_operand\")\n \t\t\t\t     (const_int 1))"}]}