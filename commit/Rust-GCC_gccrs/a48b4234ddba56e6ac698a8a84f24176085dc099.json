{"sha": "a48b4234ddba56e6ac698a8a84f24176085dc099", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ4YjQyMzRkZGJhNTZlNmFjNjk4YThhODRmMjQxNzYwODVkYzA5OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-03-28T14:22:27Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-03-28T14:22:27Z"}, "message": "Do not call chkp_type_bounds_count if MPX is not enabled (PR target/84988).\n\n2018-03-28  Martin Liska  <mliska@suse.cz>\n\n\tPR target/84988\n\t* config/i386/i386.c (ix86_function_arg_advance): Do not call\n\tchkp_type_bounds_count if MPX is not enabled.\n\nFrom-SVN: r258923", "tree": {"sha": "487a90419c55ea146a40ff463eb15112b8d906d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/487a90419c55ea146a40ff463eb15112b8d906d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a48b4234ddba56e6ac698a8a84f24176085dc099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48b4234ddba56e6ac698a8a84f24176085dc099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a48b4234ddba56e6ac698a8a84f24176085dc099", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48b4234ddba56e6ac698a8a84f24176085dc099/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c193e2f5ce96026cc02828f4f91b1c9e832ea8"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "33f78bc91ba929904fc2b1bf329d6b733d8fb54b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48b4234ddba56e6ac698a8a84f24176085dc099/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48b4234ddba56e6ac698a8a84f24176085dc099/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a48b4234ddba56e6ac698a8a84f24176085dc099", "patch": "@@ -1,3 +1,9 @@\n+2018-03-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/84988\n+\t* config/i386/i386.c (ix86_function_arg_advance): Do not call\n+\tchkp_type_bounds_count if MPX is not enabled.\n+\n 2018-03-27  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.h (BRANCH_COST): Adjust cost."}, {"sha": "2b2896f7ac6b1c8c7ad96877615eaa16482a3255", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48b4234ddba56e6ac698a8a84f24176085dc099/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48b4234ddba56e6ac698a8a84f24176085dc099/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a48b4234ddba56e6ac698a8a84f24176085dc099", "patch": "@@ -8618,7 +8618,8 @@ ix86_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,\n       if (cum->caller)\n \tcfun->machine->outgoing_args_on_stack = true;\n \n-      cum->bnds_in_bt = chkp_type_bounds_count (type);\n+      if (flag_check_pointer_bounds)\n+\tcum->bnds_in_bt = chkp_type_bounds_count (type);\n     }\n }\n "}]}