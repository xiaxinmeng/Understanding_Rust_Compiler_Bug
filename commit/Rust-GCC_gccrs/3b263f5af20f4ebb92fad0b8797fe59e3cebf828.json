{"sha": "3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IyNjNmNWFmMjBmNGViYjkyZmFkMGI4Nzk3ZmU1OWUzY2ViZjgyOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-08T10:52:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-08T10:52:00Z"}, "message": "slp-pr56812.cc: Allow either basic-block or loop vectorization to happen.\n\n2018-02-08  Richard Biener  <rguenther@suse.de>\n\n\t* g++.dg/vect/slp-pr56812.cc: Allow either basic-block or\n\tloop vectorization to happen.\n\nFrom-SVN: r257479", "tree": {"sha": "a07c0f840ba19e8f942956635f39a7a6b1f43070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a07c0f840ba19e8f942956635f39a7a6b1f43070"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b263f5af20f4ebb92fad0b8797fe59e3cebf828/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66a90e86694bdcfc674bfa5951d10088fc5b41a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a90e86694bdcfc674bfa5951d10088fc5b41a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66a90e86694bdcfc674bfa5951d10088fc5b41a8"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "7179728ed5a32166bdfa663d92bfe009f0006aa2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b263f5af20f4ebb92fad0b8797fe59e3cebf828/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b263f5af20f4ebb92fad0b8797fe59e3cebf828/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/vect/slp-pr56812.cc: Allow either basic-block or\n+\tloop vectorization to happen.\n+\n 2018-02-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/83204"}, {"sha": "08b09817799d9f0d0cfe53e484ec96de31393edc", "filename": "gcc/testsuite/g++.dg/vect/slp-pr56812.cc", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b263f5af20f4ebb92fad0b8797fe59e3cebf828/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b263f5af20f4ebb92fad0b8797fe59e3cebf828/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc?ref=3b263f5af20f4ebb92fad0b8797fe59e3cebf828", "patch": "@@ -1,22 +1,19 @@\n-/* { dg-do compile } */\r\n-/* { dg-require-effective-target vect_float } */\r\n-/* { dg-require-effective-target vect_hw_misalign } */\r\n-/* { dg-additional-options \"-O3 -funroll-loops -fvect-cost-model=dynamic\" } */\r\n-\r\n-class mydata {\r\n-public:\r\n-    mydata() {Set(-1.0);}\r\n-    void Set (float);\r\n-    static int upper() {return 8;}\r\n-    float data[8];\r\n-};\r\n-\r\n-void mydata::Set (float x)\r\n-{\r\n-  for (int i=0; i<upper(); i++)\r\n-    data[i] = x;\r\n-}\r\n-\r\n-/* For targets without vector loop peeling the loop becomes cheap\r\n-   enough to be vectorized.  */\r\n-/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp1\" { xfail { ! vect_peeling_profitable } } } } */\r\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-require-effective-target vect_hw_misalign } */\n+/* { dg-additional-options \"-O3 -funroll-loops -fvect-cost-model=dynamic -fopt-info-vec\" } */\n+\n+class mydata {\n+public:\n+    mydata() {Set(-1.0);}\n+    void Set (float);\n+    static int upper() {return 8;}\n+    float data[8];\n+};\n+\n+void mydata::Set (float x)\n+{\n+  /* We want to vectorize this either as loop or basic-block.  */\n+  for (int i=0; i<upper(); i++) /* { dg-message \"note: \\[^\\n\\]* vectorized\" } */\n+    data[i] = x;\n+}"}]}