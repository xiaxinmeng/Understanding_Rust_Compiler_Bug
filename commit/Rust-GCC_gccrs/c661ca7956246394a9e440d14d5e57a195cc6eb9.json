{"sha": "c661ca7956246394a9e440d14d5e57a195cc6eb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY2MWNhNzk1NjI0NjM5NGE5ZTQ0MGQxNGQ1ZTU3YTE5NWNjNmViOQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-09-10T14:53:48Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-09-10T14:53:48Z"}, "message": "re PR target/67506 ([SH]: error: unrecognizable insn when compiling texlive-binaries)\n\ngcc/\n\tPR target/67506\n\t* config/sh/sh.c (sh_extending_set_of_reg::use_as_extended_reg): Add\n\tmissing simplify_gen_subreg.\n\ngcc/testsuite/\n\tPR target/67506\n\t* gcc.c-torture/compile/pr67506.c: New test.\n\nFrom-SVN: r227646", "tree": {"sha": "f116a0b1c7bf870270d8c0e0911fee5992c4c139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f116a0b1c7bf870270d8c0e0911fee5992c4c139"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c661ca7956246394a9e440d14d5e57a195cc6eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c661ca7956246394a9e440d14d5e57a195cc6eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c661ca7956246394a9e440d14d5e57a195cc6eb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c661ca7956246394a9e440d14d5e57a195cc6eb9/comments", "author": null, "committer": null, "parents": [{"sha": "1ce8ee743ff570443f520e68afedea03ae664a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce8ee743ff570443f520e68afedea03ae664a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce8ee743ff570443f520e68afedea03ae664a64"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "67367eb8939cc1a01369b98c0e4aac0a6df0a17b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c661ca7956246394a9e440d14d5e57a195cc6eb9", "patch": "@@ -1,3 +1,9 @@\n+2015-09-10  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67506\n+\t* config/sh/sh.c (sh_extending_set_of_reg::use_as_extended_reg): Add\n+\tmissing simplify_gen_subreg.\n+\n 2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_contiguous_bitmask_vector_p): Reject if"}, {"sha": "25149a60ff73e1bd0ff39ffc8216db2293d4b62f", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=c661ca7956246394a9e440d14d5e57a195cc6eb9", "patch": "@@ -14016,6 +14016,9 @@ sh_extending_set_of_reg::use_as_extended_reg (rtx_insn* use_at_insn) const\n   else\n     {\n       rtx extension_dst = XEXP (set_rtx, 0);\n+      if (GET_MODE (extension_dst) != SImode)\n+\textension_dst = simplify_gen_subreg (SImode, extension_dst,\n+\t\t\t\t\t     GET_MODE (extension_dst), 0);\n       if (modified_between_p (extension_dst, insn, use_at_insn))\n \t{\n \t  if (dump_file)"}, {"sha": "844e2a105ee6ee439b79d4e6d5b68e73304c7ea3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c661ca7956246394a9e440d14d5e57a195cc6eb9", "patch": "@@ -1,3 +1,8 @@\n+2015-09-10  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67506\n+\t* gcc.c-torture/compile/pr67506.c: New test.\n+\n 2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vector/vec-genbytemask-1.c: Add check for V1TI"}, {"sha": "2826d0b3aa7766016bc60c15b17186a893980c20", "filename": "gcc/testsuite/gcc.c-torture/compile/pr67506.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr67506.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c661ca7956246394a9e440d14d5e57a195cc6eb9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr67506.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr67506.c?ref=c661ca7956246394a9e440d14d5e57a195cc6eb9", "patch": "@@ -0,0 +1,53 @@\n+extern struct _IO_FILE *stderr;\n+typedef long integer;\n+typedef unsigned char byte;\n+short nl;\n+byte * tfmfilearray;\n+integer charbase, ligkernbase;\n+unsigned char charsonline;\n+short c;\n+unsigned short r;\n+struct {\n+  short cc;\n+  integer rr;\n+} labeltable[259];\n+short sortptr;\n+unsigned char activity[(32510) + 1];\n+integer ai, acti;\n+extern void _IO_putc (char, struct _IO_FILE *);\n+\n+void\n+mainbody (void)\n+{\n+  register integer for_end;\n+  if (c <= for_end)\n+    do {\n+      if (((tfmfilearray + 1001)[4 * (charbase + c) + 2] % 4) == 1)\n+\t{\n+\t  if ( r < nl )\n+\t    ;\n+\t  else\n+\t    {\n+\t      while (labeltable[sortptr ].rr > r)\n+\t\tlabeltable[sortptr + 1 ]= labeltable[sortptr];\n+\t    }\n+\t}\n+    } while (c++ < for_end);\n+\n+  if (ai <= for_end)\n+    do {\n+      if (activity[ai]== 2)\n+\t{\n+\t  r = (tfmfilearray + 1001)[4 * (ligkernbase + (ai))];\n+\t  if (r < 128)\n+\t    {\n+\t      r = r + ai + 1 ;\n+\t      if (r >= nl)\n+\t\t{\n+\t\t  if (charsonline > 0)\n+\t\t    _IO_putc ('\\n', stderr);\n+\t\t}\n+\t    }\n+\t}\n+    } while (ai++ < for_end);\n+}"}]}