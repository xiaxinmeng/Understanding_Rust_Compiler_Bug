{"sha": "848e74bea1e8031925d3efe2d85b555a3cf8db38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4ZTc0YmVhMWU4MDMxOTI1ZDNlZmUyZDg1YjU1NWEzY2Y4ZGIzOA==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-09-10T20:12:49Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-09-11T02:13:38Z"}, "message": "[PATCH][PR96791] disable POImode ld/st for memcpy\n\nThis is a (hopefully temporary) fix to PR96791. This will make\nthe default be -mno-block-ops-vector-pair even on power10, so we will\nnot hit the issue of DSE trying to truncate a POImode register. I am\nstill concerned it will be possible to hit this because the MMA builtins\nwill also generate POImode stores, but I think any example of that will\nbe somewhat more contrived.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n\tChange default.", "tree": {"sha": "75d1adbbaaa9eea5f9c65bacf845401c830f4483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75d1adbbaaa9eea5f9c65bacf845401c830f4483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/848e74bea1e8031925d3efe2d85b555a3cf8db38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848e74bea1e8031925d3efe2d85b555a3cf8db38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/848e74bea1e8031925d3efe2d85b555a3cf8db38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848e74bea1e8031925d3efe2d85b555a3cf8db38/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7028f060c6760b336b416897412e327ded12ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7028f060c6760b336b416897412e327ded12ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7028f060c6760b336b416897412e327ded12ab5"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9908830b07a7464a2ecf261293a4843289e8d09e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e74bea1e8031925d3efe2d85b555a3cf8db38/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e74bea1e8031925d3efe2d85b555a3cf8db38/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=848e74bea1e8031925d3efe2d85b555a3cf8db38", "patch": "@@ -4020,10 +4020,11 @@ rs6000_option_override_internal (bool global_init_p)\n \n   if (!(rs6000_isa_flags_explicit & OPTION_MASK_BLOCK_OPS_VECTOR_PAIR))\n     {\n-      if (TARGET_MMA && TARGET_EFFICIENT_UNALIGNED_VSX)\n-\trs6000_isa_flags |= OPTION_MASK_BLOCK_OPS_VECTOR_PAIR;\n-      else\n-\trs6000_isa_flags &= ~OPTION_MASK_BLOCK_OPS_VECTOR_PAIR;\n+      /* When the POImode issues of PR96791 are resolved, then we can\n+\t once again enable use of vector pair for memcpy/memmove on\n+\t P10 if we have TARGET_MMA.  For now we make it disabled by\n+\t default for all targets.  */\n+      rs6000_isa_flags &= ~OPTION_MASK_BLOCK_OPS_VECTOR_PAIR;\n     }\n \n   /* Use long double size to select the appropriate long double.  We use"}]}