{"sha": "4c923c28479a212d59b96928006b6464509d918b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM5MjNjMjg0NzlhMjEyZDU5Yjk2OTI4MDA2YjY0NjQ1MDlkOTE4Yg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-08-25T23:01:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-08-25T23:01:16Z"}, "message": "re PR c/27893 (ICE with TREE_CONSTANT VLA sizes inside functions)\n\n\tPR c/27893\n\t* gimplify.c (gimplify_decl_expr, gimplify_init_ctor_preeval,\n\tomp_add_variable): Treat sizes as variable whenever not\n\tINTEGER_CST.\n\ntestsuite:\n\t* gcc.c-torture/compile/vla-const-1.c,\n\tgcc.c-torture/compile/vla-const-2.c: New tests.\n\nFrom-SVN: r116450", "tree": {"sha": "6486b3e2d432444b8f03be5770b966b4e48e6344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6486b3e2d432444b8f03be5770b966b4e48e6344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c923c28479a212d59b96928006b6464509d918b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c923c28479a212d59b96928006b6464509d918b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c923c28479a212d59b96928006b6464509d918b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c923c28479a212d59b96928006b6464509d918b/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "459881189a60e313cbd9e35e415b7cc794289149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459881189a60e313cbd9e35e415b7cc794289149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459881189a60e313cbd9e35e415b7cc794289149"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "ec1b234506ad5e331f7fcdcab44305efecd254af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -1,3 +1,10 @@\n+2006-08-25  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/27893\n+\t* gimplify.c (gimplify_decl_expr, gimplify_init_ctor_preeval,\n+\tomp_add_variable): Treat sizes as variable whenever not\n+\tINTEGER_CST.\n+\n 2006-08-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28814"}, {"sha": "5225ea3dd96b287324573ec8d8cbc82dc381c0f7", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -528,8 +528,8 @@ pp_c_direct_abstract_declarator (c_pretty_printer *pp, tree t)\n \t  if (host_integerp (maxval, 0))\n \t    pp_wide_integer (pp, tree_low_cst (maxval, 0) + 1);\n \t  else\n-\t    pp_expression (pp, fold_build2 (PLUS_EXPR, type, maxval,\n-\t\t\t\t\t    build_int_cst (type, 1)));\n+\t    pp_expression (pp, fold (build2 (PLUS_EXPR, type, maxval,\n+\t\t\t\t\t     build_int_cst (type, 1))));\n \t}\n       pp_c_right_bracket (pp);\n       pp_direct_abstract_declarator (pp, TREE_TYPE (t));"}, {"sha": "cf48770c84fc5b7b5f59c62f0b2bb4611b5b7e0c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -1219,7 +1219,7 @@ gimplify_decl_expr (tree *stmt_p)\n     {\n       tree init = DECL_INITIAL (decl);\n \n-      if (!TREE_CONSTANT (DECL_SIZE (decl)))\n+      if (TREE_CODE (DECL_SIZE (decl)) != INTEGER_CST)\n \t{\n \t  /* This is a variable-sized decl.  Simplify its size and mark it\n \t     for deferred expansion.  Note that mudflap depends on the format\n@@ -2696,7 +2696,7 @@ gimplify_init_ctor_preeval (tree *expr_p, tree *pre_p, tree *post_p,\n \n   /* If this is of variable size, we have no choice but to assume it doesn't\n      overlap since we can't make a temporary for it.  */\n-  if (!TREE_CONSTANT (TYPE_SIZE (TREE_TYPE (*expr_p))))\n+  if (TREE_CODE (TYPE_SIZE (TREE_TYPE (*expr_p))) != INTEGER_CST)\n     return;\n \n   /* Otherwise, we must search for overlap ...  */\n@@ -4384,7 +4384,7 @@ omp_add_variable (struct gimplify_omp_ctx *ctx, tree decl, unsigned int flags)\n   /* When adding a variable-sized variable, we have to handle all sorts\n      of additional bits of data: the pointer replacement variable, and \n      the parameters of the type.  */\n-  if (DECL_SIZE (decl) && !TREE_CONSTANT (DECL_SIZE (decl)))\n+  if (DECL_SIZE (decl) && TREE_CODE (DECL_SIZE (decl)) != INTEGER_CST)\n     {\n       /* Add the pointer replacement variable as PRIVATE if the variable\n \t replacement is private, else FIRSTPRIVATE since we'll need the\n@@ -4431,7 +4431,7 @@ omp_add_variable (struct gimplify_omp_ctx *ctx, tree decl, unsigned int flags)\n       if ((flags & GOVD_SHARED) == 0)\n \t{\n \t  t = TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (decl)));\n-\t  if (!TREE_CONSTANT (t))\n+\t  if (TREE_CODE (t) != INTEGER_CST)\n \t    omp_notice_variable (ctx, t, true);\n \t}\n     }"}, {"sha": "f74ad90653a3cd92737b7d1ab8c5f6b2b7246e7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -1,3 +1,9 @@\n+2006-08-25  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/27893\n+\t* gcc.c-torture/compile/vla-const-1.c,\n+\tgcc.c-torture/compile/vla-const-2.c: New tests.\n+\n 2006-08-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28814"}, {"sha": "6acc3d83050b685c54c37b6eb0edbff1607c31db", "filename": "gcc/testsuite/gcc.c-torture/compile/vla-const-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-1.c?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -0,0 +1,5 @@\n+/* Test TREE_CONSTANT VLA size: bug 27893.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+int a;\n+void g(void *);\n+void f(void) { int b[(__SIZE_TYPE__)&a]; g(b); }"}, {"sha": "913a730b458fcaa57ed11bc4d865c3f8df60bcca", "filename": "gcc/testsuite/gcc.c-torture/compile/vla-const-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c923c28479a212d59b96928006b6464509d918b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvla-const-2.c?ref=4c923c28479a212d59b96928006b6464509d918b", "patch": "@@ -0,0 +1,4 @@\n+/* Test TREE_CONSTANT VLA size: bug 27893.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+void g(void *);\n+void f(void) { int b[1/0]; g(b); }"}]}