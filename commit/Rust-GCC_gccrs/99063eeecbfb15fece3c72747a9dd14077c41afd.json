{"sha": "99063eeecbfb15fece3c72747a9dd14077c41afd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwNjNlZWVjYmZiMTVmZWNlM2M3Mjc0N2E5ZGQxNDA3N2M0MWFmZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-01-15T16:46:54Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-01-15T16:46:54Z"}, "message": "PR inline-asm/52813 revisited\n\nThe original patch for this PR made it an error to list the stack\npointer in the clobber list of an inline asm.  However, the general\nfeeling seemed to be that going straight to a hard error was too harsh,\nsince there's quite a bit of existing code that has the clobber.\n\nThis patch implements the compromise discussed on IRC of making it\na -Wdeprecated warning instead.\n\n2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR inline-asm/52813\n\t* doc/extend.texi: Document that listing the stack pointer in the\n\tclobber list of an asm is a deprecated feature.\n\t* common.opt (Wdeprecated): Moved from c-family/c.opt.\n\t* cfgexpand.c (asm_clobber_reg_is_valid): Issue a -Wdeprecated\n\twarning instead of an error for clobbers of the stack pointer.\n\tAdd a note explaining why.\n\ngcc/c-family/\n\tPR inline-asm/52813\n\t* c.opt (Wdeprecated): Move documentation and variable to common.opt.\n\ngcc/d/\n\tPR inline-asm/52813\n\t* lang.opt (Wdeprecated): Reference common.opt instead of c.opt.\n\ngcc/testsuite/\n\tPR inline-asm/52813\n\t* gcc.target/i386/pr52813.c (test1): Turn the diagnostic into a\n\t-Wdeprecated warning and expect a following note:.\n\nFrom-SVN: r267941", "tree": {"sha": "907872956c50b6376f90ebf8728f92652457d81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/907872956c50b6376f90ebf8728f92652457d81c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99063eeecbfb15fece3c72747a9dd14077c41afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99063eeecbfb15fece3c72747a9dd14077c41afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99063eeecbfb15fece3c72747a9dd14077c41afd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99063eeecbfb15fece3c72747a9dd14077c41afd/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17f781605e695711a3383b0474e806ce8150cf49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f781605e695711a3383b0474e806ce8150cf49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f781605e695711a3383b0474e806ce8150cf49"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "83d4fa4af0c61848fe8e33ca66c2593790cba650", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -1,3 +1,13 @@\n+2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR inline-asm/52813\n+\t* doc/extend.texi: Document that listing the stack pointer in the\n+\tclobber list of an asm is a deprecated feature.\n+\t* common.opt (Wdeprecated): Moved from c-family/c.opt.\n+\t* cfgexpand.c (asm_clobber_reg_is_valid): Issue a -Wdeprecated\n+\twarning instead of an error for clobbers of the stack pointer.\n+\tAdd a note explaining why.\n+\n 2019-01-15  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/88046"}, {"sha": "03ea65b4bce40b43f6993f726fd00d8079abfa69", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR inline-asm/52813\n+\t* c.opt (Wdeprecated): Move documentation and variable to common.opt.\n+\n 2019-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtin): Define __cpp_guaranteed_copy_elision"}, {"sha": "88c72c51c210f99d86ecf765684832483836280e", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -477,8 +477,8 @@ C++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall || Weffc+\n Warn about deleting polymorphic objects with non-virtual destructors.\n \n Wdeprecated\n-C C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED) Var(warn_deprecated) Init(1) Warning\n-Warn if a deprecated compiler feature, class, method, or field is used.\n+C C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED)\n+; Documented in common.opt\n \n Wdeprecated-copy\n C++ ObjC++ Var(warn_deprecated_copy) Warning LangEnabledBy(C++ ObjC++, Wextra)"}, {"sha": "2337c6312d01d525d14a73ae9463743176a1c28e", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -2872,12 +2872,16 @@ asm_clobber_reg_is_valid (int regno, int nregs, const char *regname)\n       error (\"PIC register clobbered by %qs in %<asm%>\", regname);\n       is_valid = false;\n     }\n-  /* Clobbering the STACK POINTER register is an error.  */\n-  if (overlaps_hard_reg_set_p (regset, Pmode, STACK_POINTER_REGNUM))\n-    {\n-      error (\"Stack Pointer register clobbered by %qs in %<asm%>\", regname);\n-      is_valid = false;\n-    }\n+  /* Clobbering the stack pointer register is deprecated.  GCC expects\n+     the value of the stack pointer after an asm statement to be the same\n+     as it was before, so no asm can validly clobber the stack pointer in\n+     the usual sense.  Adding the stack pointer to the clobber list has\n+     traditionally had some undocumented and somewhat obscure side-effects.  */\n+  if (overlaps_hard_reg_set_p (regset, Pmode, STACK_POINTER_REGNUM)\n+      && warning (OPT_Wdeprecated, \"listing the stack pointer register\"\n+\t\t  \" %qs in a clobber list is deprecated\", regname))\n+    inform (input_location, \"the value of the stack pointer after an %<asm%>\"\n+\t    \" statement must be the same as it was before the statement\");\n \n   return is_valid;\n }"}, {"sha": "9a5e9af06ca002e7c17bc65a6cda6ad0fc3d48d8", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -579,6 +579,10 @@ Wattribute-warning\n Common Var(warn_attribute_warning) Init(1) Warning\n Warn about uses of __attribute__((warning)) declarations.\n \n+Wdeprecated\n+Common Var(warn_deprecated) Init(1) Warning\n+Warn if a deprecated compiler feature, class, method, or field is used.\n+\n Wdeprecated-declarations\n Common Var(warn_deprecated_decl) Init(1) Warning\n Warn about uses of __attribute__((deprecated)) declarations."}, {"sha": "974b098226819804583208799d91cc98fa69be4e", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR inline-asm/52813\n+\t* lang.opt (Wdeprecated): Reference common.opt instead of c.opt.\n+\n 2019-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* README.gcc: New file."}, {"sha": "83d3d21a1a68b2da753ff572b7f894ea35ded615", "filename": "gcc/d/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fd%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fd%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flang.opt?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -124,7 +124,7 @@ Warn about casts that will produce a null result.\n \n Wdeprecated\n D\n-; Documented in C\n+; Documented in common.opt\n \n Werror\n D"}, {"sha": "eb1cde492c8a618c9778d8f75455e8f7443f2340", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -9441,6 +9441,15 @@ When the compiler selects which registers to use to represent input and output\n operands, it does not use any of the clobbered registers. As a result, \n clobbered registers are available for any use in the assembler code.\n \n+Another restriction is that the clobber list should not contain the\n+stack pointer register.  This is because the compiler requires the\n+value of the stack pointer to be the same after an @code{asm}\n+statement as it was on entry to the statement.  However, previous\n+versions of GCC did not enforce this rule and allowed the stack\n+pointer to appear in the list, with unclear semantics.  This behavior\n+is deprecated and listing the stack pointer may become an error in\n+future versions of GCC@.\n+\n Here is a realistic example for the VAX showing the use of clobbered \n registers: \n "}, {"sha": "e4fbb15dfeffb7485cc1c4596d1b76203f6427a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -1,3 +1,9 @@\n+2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR inline-asm/52813\n+\t* gcc.target/i386/pr52813.c (test1): Turn the diagnostic into a\n+\t-Wdeprecated warning and expect a following note:.\n+\n 2019-01-15  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/88046"}, {"sha": "8772cfb0aee2f2b36d3db196c147c6099b78c135", "filename": "gcc/testsuite/gcc.target/i386/pr52813.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99063eeecbfb15fece3c72747a9dd14077c41afd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c?ref=99063eeecbfb15fece3c72747a9dd14077c41afd", "patch": "@@ -5,5 +5,6 @@\n void\n test1 (void)\n {\n-  asm volatile (\"\" : : : \"%esp\"); /* { dg-error \"Stack Pointer register clobbered\" } */\n+  asm volatile (\"\" : : : \"%esp\"); /* { dg-warning \"listing the stack pointer register '%esp' in a clobber list is deprecated\" } */\n+  /* { dg-message \"note: the value of the stack pointer after an 'asm' statement must be the same as it was before the statement\" \"\" { target *-*-* } .-1 } */\n }"}]}