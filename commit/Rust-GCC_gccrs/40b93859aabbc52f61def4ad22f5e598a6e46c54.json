{"sha": "40b93859aabbc52f61def4ad22f5e598a6e46c54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBiOTM4NTlhYWJiYzUyZjYxZGVmNGFkMjJmNWU1OThhNmU0NmM1NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-10-08T09:46:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T09:46:51Z"}, "message": "sem_ch4.adb: Minor reformatting.\n\n2010-10-08  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch4.adb: Minor reformatting.\n\n2010-10-08  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb (Check_Conformance): Check null exclusion match for full\n\tconformance.\n\nFrom-SVN: r165153", "tree": {"sha": "67331f30e758c8cdfc7fdaad11de9e2755edeeb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67331f30e758c8cdfc7fdaad11de9e2755edeeb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40b93859aabbc52f61def4ad22f5e598a6e46c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b93859aabbc52f61def4ad22f5e598a6e46c54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b93859aabbc52f61def4ad22f5e598a6e46c54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b93859aabbc52f61def4ad22f5e598a6e46c54/comments", "author": null, "committer": null, "parents": [{"sha": "d7bab7e6c7d351fc09cc587780e075418ad1882b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab7e6c7d351fc09cc587780e075418ad1882b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bab7e6c7d351fc09cc587780e075418ad1882b"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "bfec7bc74df973e33ef127218ffe752cea1ba4a5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=40b93859aabbc52f61def4ad22f5e598a6e46c54", "patch": "@@ -1,3 +1,12 @@\n+2010-10-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch4.adb: Minor reformatting.\n+\n+2010-10-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Conformance): Check null exclusion match for full\n+\tconformance.\n+\n 2010-10-08  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch12.adb (Instantiate_Object): Rename Formal_Id to Gen_Obj, for"}, {"sha": "5891e9b14d56274f23b6741100c30a361a1e61ea", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=40b93859aabbc52f61def4ad22f5e598a6e46c54", "patch": "@@ -507,14 +507,15 @@ package body Sem_Ch4 is\n             --  be a null object, and we can insert an unconditional raise\n             --  before the allocator.\n \n-            --  Ada2012 (AI-104) : a not null indication here is altogether\n+            --  Ada2012 (AI-104): a not null indication here is altogether\n             --  illegal.\n \n             if Can_Never_Be_Null (Type_Id) then\n                declare\n                   Not_Null_Check : constant Node_Id :=\n                                      Make_Raise_Constraint_Error (Sloc (E),\n                                        Reason => CE_Null_Not_Allowed);\n+\n                begin\n                   if Ada_Version >= Ada_12 then\n                      Error_Msg_N\n@@ -524,6 +525,7 @@ package body Sem_Ch4 is\n                   elsif Expander_Active then\n                      Insert_Action (N, Not_Null_Check);\n                      Analyze (Not_Null_Check);\n+\n                   else\n                      Error_Msg_N (\"null value not allowed here?\", E);\n                   end if;"}, {"sha": "d1ec09a4369191d594123827c2f1be53e4d54890", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b93859aabbc52f61def4ad22f5e598a6e46c54/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=40b93859aabbc52f61def4ad22f5e598a6e46c54", "patch": "@@ -3711,7 +3711,6 @@ package body Sem_Ch6 is\n                Error_Msg_Name_1 := Chars (New_Id);\n                Error_Msg_Name_2 :=\n                  Name_Ada + Convention_Id'Pos (Convention (New_Id));\n-\n                Conformance_Error (\"\\prior declaration for% has convention %!\");\n \n             else\n@@ -3771,6 +3770,29 @@ package body Sem_Ch6 is\n                Set_Error_Posted (New_Formal);\n                return;\n             end if;\n+\n+            --  Null exclusion must match\n+\n+            if Null_Exclusion_Present (Parent (Old_Formal))\n+                 /=\n+               Null_Exclusion_Present (Parent (New_Formal))\n+            then\n+               --  Only give error if both come from source. This should be\n+               --  investigated some time, since it should not be needed ???\n+\n+               if Comes_From_Source (Old_Formal)\n+                    and then\n+                  Comes_From_Source (New_Formal)\n+               then\n+                  Conformance_Error\n+                    (\"\\null exclusion for & does not match\", New_Formal);\n+\n+                  --  Mark error posted on the new formal to avoid duplicated\n+                  --  complaint about types not matching.\n+\n+                  Set_Error_Posted (New_Formal);\n+               end if;\n+            end if;\n          end if;\n \n          --  Ada 2005 (AI-423): Possible access [sub]type and itype match. This\n@@ -3912,6 +3934,11 @@ package body Sem_Ch6 is\n                    or else\n                  Is_Access_Constant (Etype (Old_Formal)) /=\n                  Is_Access_Constant (Etype (New_Formal)))\n+\n+              --  Do not complain if error already posted on New_Formal. This\n+              --  avoids some redundant error messages.\n+\n+              and then not Error_Posted (New_Formal)\n             then\n                --  It is allowed to omit the null-exclusion in case of stream\n                --  attribute subprograms. We recognize stream subprograms"}]}