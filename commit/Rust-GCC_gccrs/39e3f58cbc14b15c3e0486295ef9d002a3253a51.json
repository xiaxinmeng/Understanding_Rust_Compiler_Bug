{"sha": "39e3f58cbc14b15c3e0486295ef9d002a3253a51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllM2Y1OGNiYzE0YjE1YzNlMDQ4NjI5NWVmOWQwMDJhMzI1M2E1MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-07-05T15:39:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-07-05T15:39:59Z"}, "message": "ggc.h: Follow spelling conventions.\n\n\t* ggc.h: Follow spelling conventions.\n\t* config/i386/i386.c: Likewise.\n\t* config/i386/winnt.c: Likewise.\n\t* config/rs6000/rs6000.c: Likewise.\n\nFrom-SVN: r68976", "tree": {"sha": "fbf9b3021b6e7115e83a169995b250ec07bcd06f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbf9b3021b6e7115e83a169995b250ec07bcd06f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39e3f58cbc14b15c3e0486295ef9d002a3253a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e3f58cbc14b15c3e0486295ef9d002a3253a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e3f58cbc14b15c3e0486295ef9d002a3253a51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e3f58cbc14b15c3e0486295ef9d002a3253a51/comments", "author": null, "committer": null, "parents": [{"sha": "4d6922ee327a1a5c4a6bbf974186a34355464df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6922ee327a1a5c4a6bbf974186a34355464df9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6922ee327a1a5c4a6bbf974186a34355464df9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "a8630de6daee9650c8bdc16d56efaeec88106d60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39e3f58cbc14b15c3e0486295ef9d002a3253a51", "patch": "@@ -1,3 +1,10 @@\n+2003-07-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* ggc.h: Follow spelling conventions.\n+\t* config/i386/i386.c: Likewise.\n+\t* config/i386/winnt.c: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\n 2003-07-05  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* bt-load.c: Fix comment typos."}, {"sha": "902e924c3f3c752dd4a2801d0e137275ec582b2c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=39e3f58cbc14b15c3e0486295ef9d002a3253a51", "patch": "@@ -11525,7 +11525,7 @@ ix86_expand_strlen (out, src, eoschar, align)\n    scratch = scratch register, initialized with the startaddress when\n \tnot aligned, otherwise undefined\n \n-   This is just the body. It needs the initialisations mentioned above and\n+   This is just the body. It needs the initializations mentioned above and\n    some address computing at the end.  These things are done in i386.md.  */\n \n static void"}, {"sha": "ad0860338a536652e6447177306c8a5c7f65336c", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=39e3f58cbc14b15c3e0486295ef9d002a3253a51", "patch": "@@ -260,7 +260,7 @@ i386_pe_dllimport_p (decl)\n \t}\n \n       /* We ignore the dllimport attribute for inline member functions.\n-\t This differs from MSVC behaviour which treats it like GNUC\n+\t This differs from MSVC behavior which treats it like GNUC\n      \t 'extern inline' extension.   */\n       else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_INLINE (decl))\n         {"}, {"sha": "13f3fc3320c22aa505b7ea636deb57bae55fb643", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=39e3f58cbc14b15c3e0486295ef9d002a3253a51", "patch": "@@ -12619,7 +12619,7 @@ output_toc (file, x, labelno, mode)\n       void * * found;\n       \n       /* Create toc_hash_table.  This can't be done at OVERRIDE_OPTIONS\n-         time because GGC is not initialised at that point.  */\n+         time because GGC is not initialized at that point.  */\n       if (toc_hash_table == NULL)\n \ttoc_hash_table = htab_create_ggc (1021, toc_hash_function, \n \t\t\t\t\t  toc_hash_eq, NULL);"}, {"sha": "26bb22b615fc3a741ed8d60ebb85d770197ba5ae", "filename": "gcc/ggc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3f58cbc14b15c3e0486295ef9d002a3253a51/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=39e3f58cbc14b15c3e0486295ef9d002a3253a51", "patch": "@@ -132,7 +132,7 @@ extern void gt_pch_p_S (void *, void *, gt_pointer_operator, void *);\n extern void gt_pch_n_S (const void *);\n extern void gt_ggc_m_S (void *);\n \n-/* Initialise the string pool.  */\n+/* Initialize the string pool.  */\n extern void init_stringpool (void);\n \n /* A GC implementation must provide these functions.  They are internal"}]}