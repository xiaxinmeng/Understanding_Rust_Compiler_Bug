{"sha": "2395a8ea086886c24090f1c9e9dde2515dc2fda8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5NWE4ZWEwODY4ODZjMjQwOTBmMWM5ZTlkZGUyNTE1ZGMyZmRhOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-05-29T13:06:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-05-29T13:06:23Z"}, "message": "re PR tree-optimization/66142 (Loop is not vectorized because not sufficient support for GOMP_SIMD_LANE)\n\n\tPR tree-optimization/66142\n\t* tree-if-conv.c (if_convertible_phi_p): Don't give up on\n\tvirtual phis that feed themselves.\n\n\t* gcc.dg/vect/pr66142.c: New test.\n\nFrom-SVN: r223863", "tree": {"sha": "c894b409080257241f8d72971627df9474722fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c894b409080257241f8d72971627df9474722fca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2395a8ea086886c24090f1c9e9dde2515dc2fda8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2395a8ea086886c24090f1c9e9dde2515dc2fda8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2395a8ea086886c24090f1c9e9dde2515dc2fda8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2395a8ea086886c24090f1c9e9dde2515dc2fda8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52fc6859fe39a811a2a5ca81813e27cf1800b9c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fc6859fe39a811a2a5ca81813e27cf1800b9c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52fc6859fe39a811a2a5ca81813e27cf1800b9c2"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "c8b1c44f07149535e656321fcc899e750d380991", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2395a8ea086886c24090f1c9e9dde2515dc2fda8", "patch": "@@ -1,3 +1,9 @@\n+2015-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/66142\n+\t* tree-if-conv.c (if_convertible_phi_p): Don't give up on\n+\tvirtual phis that feed themselves.\n+\n 2015-05-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66314"}, {"sha": "fe9ee3c5803e2bdd6b1b4cb6a5d073d03a97e3ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2395a8ea086886c24090f1c9e9dde2515dc2fda8", "patch": "@@ -1,3 +1,8 @@\n+2015-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/66142\n+\t* gcc.dg/vect/pr66142.c: New test.\n+\n 2015-05-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66314"}, {"sha": "94854eac2db94263d7efd929147854d1b37e0201", "filename": "gcc/testsuite/gcc.dg/vect/pr66142.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66142.c?ref=2395a8ea086886c24090f1c9e9dde2515dc2fda8", "patch": "@@ -0,0 +1,44 @@\n+/* PR middle-end/66142 */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ffast-math -fopenmp-simd\" } */\n+/* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n+\n+struct A { float x, y; };\n+struct B { struct A t, w; };\n+\n+static inline float\n+bar (const struct B *x)\n+{\n+  struct A r;\n+  float b, c, d;\n+  r.x = x->t.x;\n+  r.y = x->t.y;\n+  b = r.x * x->w.x + r.y * x->w.y;\n+  c = b + r.x * r.x + r.y * r.y;\n+  if (c > 0.0f)\n+    return c + 3.0f;\n+  return 0.0f;\n+}\n+\n+void\n+foo (float *a, float *b, float *c)\n+{\n+  int i;\n+  float z = 0.0f;\n+  float u = *a;\n+#pragma omp simd\n+  for (i = 0; i < 32; i++)\n+    {\n+      float x = b[i];\n+      float y = c[i];\n+      struct B r;\n+      r.t.x = 1.0f;\n+      r.t.y = u;\n+      r.w.x = x;\n+      r.w.y = y;\n+      z += bar (&r);\n+    }\n+  *a = z;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 1 \"vect\" { target vect_condition } } } */"}, {"sha": "28e1c475c5f754a02dd0c1e2efad9f6fc1cb03b4", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2395a8ea086886c24090f1c9e9dde2515dc2fda8/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=2395a8ea086886c24090f1c9e9dde2515dc2fda8", "patch": "@@ -594,7 +594,8 @@ if_convertible_phi_p (struct loop *loop, basic_block bb, gphi *phi,\n \n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, gimple_phi_result (phi))\n \t{\n-\t  if (gimple_code (USE_STMT (use_p)) == GIMPLE_PHI)\n+\t  if (gimple_code (USE_STMT (use_p)) == GIMPLE_PHI\n+\t      && USE_STMT (use_p) != (gimple) phi)\n \t    {\n \t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\tfprintf (dump_file, \"Difficult to handle this virtual phi.\\n\");"}]}