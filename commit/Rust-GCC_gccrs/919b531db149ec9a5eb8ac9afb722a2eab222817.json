{"sha": "919b531db149ec9a5eb8ac9afb722a2eab222817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5YjUzMWRiMTQ5ZWM5YTVlYjhhYzlhZmI3MjJhMmVhYjIyMjgxNw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2004-02-19T18:03:45Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2004-02-19T18:03:45Z"}, "message": "ia64.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n\n\t* config/ia64/ia64.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n\t* testsuite/gcc.dg/20040219-1.c: New test.\n\nFrom-SVN: r78113", "tree": {"sha": "cb7afdbc995162fcef0c08e49cde34c23c37f7dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb7afdbc995162fcef0c08e49cde34c23c37f7dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919b531db149ec9a5eb8ac9afb722a2eab222817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919b531db149ec9a5eb8ac9afb722a2eab222817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919b531db149ec9a5eb8ac9afb722a2eab222817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919b531db149ec9a5eb8ac9afb722a2eab222817/comments", "author": null, "committer": null, "parents": [{"sha": "4dbb59702c3cff6ff0f0f182126c350839a029cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbb59702c3cff6ff0f0f182126c350839a029cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dbb59702c3cff6ff0f0f182126c350839a029cd"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "2015efae34c69d22cd9be5a6f462a59f6ac4f753", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=919b531db149ec9a5eb8ac9afb722a2eab222817", "patch": "@@ -1,3 +1,8 @@\n+2004-02-19  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* config/ia64/ia64.h (HARD_REGNO_CALLER_SAVE_MODE): New macro.\n+\t* testsuite/gcc.dg/20040219-1.c: New test.\n+\n 2004-02-19  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"*subdf3_cc\", \"*subdf3_cconly\", \"*subsf3_cc\","}, {"sha": "754b05cab69580431dd5438985f8c09fb19cacf2", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=919b531db149ec9a5eb8ac9afb722a2eab222817", "patch": "@@ -831,6 +831,13 @@ while (0)\n   (GET_MODE_CLASS (MODE1) == GET_MODE_CLASS (MODE2)\t\\\n    && (((MODE1) == XFmode) == ((MODE2) == XFmode))\t\\\n    && (((MODE1) == BImode) == ((MODE2) == BImode)))\n+\n+/* Specify the modes required to caller save a given hard regno.\n+   We need to ensure floating pt regs are not saved as DImode.  */\n+\n+#define HARD_REGNO_CALLER_SAVE_MODE(REGNO, NREGS, MODE) \\\n+  ((FR_REGNO_P (REGNO) && (NREGS) == 1) ? XFmode        \\\n+   : choose_hard_reg_mode ((REGNO), (NREGS), false))\n \f\n /* Handling Leaf Functions */\n "}, {"sha": "1a277d6960b949cd017ebc97b8cc65428187f577", "filename": "gcc/testsuite/gcc.dg/20040219-1.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919b531db149ec9a5eb8ac9afb722a2eab222817/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c?ref=919b531db149ec9a5eb8ac9afb722a2eab222817", "patch": "@@ -0,0 +1,74 @@\n+/* Testing save/restore of floating point caller-save registers, on ia64\n+   this resulted in bad code.  Not all targets will use caller-save regs.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -minline-float-divide-max-throughput\" { target ia64-*-* } } */\n+\n+/* Testing save/restore of floating point caller-save registers on ia64.  */\n+\n+extern void abort (void);\n+\n+double foo(double a, double b, double c)\n+{\n+\treturn (a+b+c);\n+}\n+\n+main ()\n+{\n+\tdouble  f1, f2, f3, f4, f5, f6, f7, f8, f9,f10;\n+\tdouble f11,f12,f13,f14,f15,f16,f17,f18,f19,f20;\n+\tdouble f21,f22,f23,f24,f25,f26,f27,f28,f29,f30;\n+\tdouble x;\n+\tint i,j,k;\n+\n+\tf1  = 0.1; f2  = 0.2; f3  = 0.3; f4  = 0.4; f5  = 0.5;\n+\tf6  = 0.6; f7  = 0.7; f8  = 0.8; f9  = 0.9; f10 = 1.0;\n+\tf11 = 1.1; f12 = 1.2; f13 = 1.3; f14 = 1.4; f15 = 1.5;\n+\tf16 = 1.6; f17 = 1.7; f18 = 1.8; f19 = 1.9; f20 = 2.0;\n+\tf21 = 2.1; f22 = 2.2; f23 = 2.3; f24 = 2.4; f25 = 2.5;\n+\tf26 = 2.6; f27 = 2.7; f28 = 2.8; f29 = 2.9; f30 = 3.0;\n+\n+\ti = (int) foo(1.0,1.0,1.0);\n+\twhile (i > 0) {\n+\t\tf1  = f2  / f3  * f30;\n+\t\tf2  = f3  / f4  * f30;\n+\t\tf3  = f4  / f5  * f30;\n+\t\tf4  = f5  / f6  * f30;\n+\t\tf5  = f6  / f7  * f30;\n+\t\tf6  = f7  / f8  * f30;\n+\t\tf7  = f8  / f9  * f30;\n+\t\tf8  = f9  / f10 * f30;\n+\t\tf9  = f10 / f11 * f30;\n+\t\tf10 = f11 / f12 * f30;\n+\t\tf11 = f12 / f13 * f30;\n+\t\tf12 = f13 / f14 * f25;\n+\t\tf13 = f14 / f15 * f30;\n+\t\tf14 = f15 / f16 * f30;\n+\t\tf15 = f16 / f17 * f30;\n+\t\tf16 = f17 / f18 * f30;\n+\t\tf17 = f18 / f19 * f30;\n+\t\tf18 = f19 / f20 * f30;\n+\t\tf19 = f20 / f21 * f30;\n+\t\tf20 = f21 / f22 * f20;\n+\t\tf21 = f22 / f23 * f30;\n+\t\tf22 = f23 / f24 * f30;\n+\t\tf23 = f24 / f25 * f30;\n+\t\tf24 = f25 / f26 * f30;\n+\t\tf25 = f26 / f27 * f30;\n+\t\tf26 = f27 / f28 * f30;\n+\t\tf27 = f28 / f29 * f30;\n+\t\tf28 = f29 / f30 * f30;\n+\t\tf29 = f30 / f1  * f30;\n+\t\tf30 = f1  / f2  * f30;\n+\t\tx = foo(f1,f2,f3);\n+\t\ti = i - 1;\n+\t}\n+\tx = (f1+f2+f3+f4+f5+f6+f7+f8+f9+f10) *\n+            (f11+f12+f13+f14+f15+f16+f17+f18+f19+f20) *\n+            (f21+f22+f23+f24+f25+f26+f27+f28+f29+f30);\n+\n+\t/* Exact value is not needed, on IA64 it is massively off. */\n+        if (x < 19503.0 || x > 19504.0) abort();\n+\treturn 0;\n+}"}]}