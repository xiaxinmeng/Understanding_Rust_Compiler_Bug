{"sha": "5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjODVmN2VjNzE5YTc5ZWNmYmNkZDg1NjNiMDdlNWYwZjM2NWU2NQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-08-12T15:13:35Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-08-12T15:13:35Z"}, "message": "Remove --with-host-libstdcxx\n\n2015-08-12  Tom de Vries  <tom@codesourcery.com>\n\n\tPR other/67092\n\tPR other/67098\n\t* configure.ac: Remove --with_host_libstdcxx support.\n\t* configure: Regenerate.\n\n\t* doc/install.texi: Remove --with_host_libstdcxx item.  Update\n\t--with-stage1-libs, --with-boot-ldflags and --with-boot-libs items\n\taccordingly.  Mention default for --with-stage1-ldflags.\n\nFrom-SVN: r226819", "tree": {"sha": "69ca8a0fcc609f60d5ccf1bd95f5e86ca47b919f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69ca8a0fcc609f60d5ccf1bd95f5e86ca47b919f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/comments", "author": null, "committer": null, "parents": [{"sha": "b813c04090a5db6baec9e0eecfab566ba7680637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b813c04090a5db6baec9e0eecfab566ba7680637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b813c04090a5db6baec9e0eecfab566ba7680637"}], "stats": {"total": 80, "additions": 27, "deletions": 53}, "files": [{"sha": "e764c5e126c04905af7d3166af9a5a4f27f44c75", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "patch": "@@ -1,3 +1,9 @@\n+2015-08-12  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR other/67092\n+\t* configure.ac: Remove --with_host_libstdcxx support.\n+\t* configure: Regenerate.\n+\n 2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "eca5e6f747d0d023fe39a87ef4004d914cfd60a4", "filename": "configure", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "patch": "@@ -772,7 +772,6 @@ with_gmp_dir\n with_gmp\n with_gmp_include\n with_gmp_lib\n-with_host_libstdcxx\n with_stage1_libs\n with_stage1_ldflags\n with_boot_libs\n@@ -1540,8 +1539,6 @@ Optional Packages:\n                           --with-gmp-lib=PATH/lib\n   --with-gmp-include=PATH specify directory for installed GMP include files\n   --with-gmp-lib=PATH     specify directory for the installed GMP library\n-  --with-host-libstdcxx=L use linker arguments L to link with libstdc++ when\n-                          linking with PPL\n   --with-stage1-libs=LIBS libraries for stage1\n   --with-stage1-ldflags=FLAGS\n                           linker flags for stage1\n@@ -5849,20 +5846,6 @@ fi\n \n \n \n-# Allow host libstdc++ to be specified for static linking with PPL.\n-\n-# Check whether --with-host-libstdcxx was given.\n-if test \"${with_host_libstdcxx+set}\" = set; then :\n-  withval=$with_host_libstdcxx;\n-fi\n-\n-\n-case $with_host_libstdcxx in\n-  no|yes)\n-    as_fn_error \"-with-host-libstdcxx needs an argument\" \"$LINENO\" 5\n-    ;;\n-esac\n-\n # Libraries to use for stage1 or when not bootstrapping.\n \n # Check whether --with-stage1-libs was given.\n@@ -5873,7 +5856,7 @@ if test \"${with_stage1_libs+set}\" = set; then :\n    stage1_libs=$withval\n  fi\n else\n-  stage1_libs=$with_host_libstdcxx\n+  stage1_libs=\n fi\n \n \n@@ -5899,8 +5882,7 @@ fi\n \n \n \n-# Libraries to use for stage2 and later builds.  This defaults to the\n-# argument passed to --with-host-libstdcxx.\n+# Libraries to use for stage2 and later builds.\n \n # Check whether --with-boot-libs was given.\n if test \"${with_boot_libs+set}\" = set; then :\n@@ -5910,7 +5892,7 @@ if test \"${with_boot_libs+set}\" = set; then :\n    poststage1_libs=$withval\n  fi\n else\n-  poststage1_libs=$with_host_libstdcxx\n+  poststage1_libs=\n fi\n \n "}, {"sha": "924126189168769a5454b507d6bc46f002f4cb5a", "filename": "configure.ac", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "patch": "@@ -1697,18 +1697,6 @@ AC_SUBST(extra_mpc_gmp_configure_flags)\n AC_SUBST(extra_mpc_mpfr_configure_flags)\n AC_SUBST(extra_isl_gmp_configure_flags)\n \n-# Allow host libstdc++ to be specified for static linking with PPL.\n-AC_ARG_WITH(host-libstdcxx,\n-[AS_HELP_STRING([--with-host-libstdcxx=L],\n-\t\t[use linker arguments L to link with libstdc++\n-\t\t when linking with PPL])])\n-\n-case $with_host_libstdcxx in\n-  no|yes)\n-    AC_MSG_ERROR([-with-host-libstdcxx needs an argument])\n-    ;;\n-esac\n-\n # Libraries to use for stage1 or when not bootstrapping.\n AC_ARG_WITH(stage1-libs,\n [AS_HELP_STRING([--with-stage1-libs=LIBS], [libraries for stage1])],\n@@ -1717,7 +1705,7 @@ AC_ARG_WITH(stage1-libs,\n  else\n    stage1_libs=$withval\n  fi],\n-[stage1_libs=$with_host_libstdcxx])\n+[stage1_libs=])\n AC_SUBST(stage1_libs)\n \n # Linker flags to use for stage1 or when not bootstrapping.\n@@ -1737,16 +1725,15 @@ AC_ARG_WITH(stage1-ldflags,\n  fi])\n AC_SUBST(stage1_ldflags)\n \n-# Libraries to use for stage2 and later builds.  This defaults to the\n-# argument passed to --with-host-libstdcxx.\n+# Libraries to use for stage2 and later builds.\n AC_ARG_WITH(boot-libs,\n [AS_HELP_STRING([--with-boot-libs=LIBS], [libraries for stage2 and later])],\n [if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n    poststage1_libs=\n  else\n    poststage1_libs=$withval\n  fi],\n-[poststage1_libs=$with_host_libstdcxx])\n+[poststage1_libs=])\n AC_SUBST(poststage1_libs)\n \n # Linker flags to use for stage2 and later builds."}, {"sha": "2bb64ce2f98d4908d326599e92b7d92dfc998525", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "patch": "@@ -1,3 +1,11 @@\n+2015-08-12  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR other/67092\n+\tPR other/67098\n+\t* doc/install.texi: Remove --with_host_libstdcxx item.  Update\n+\t--with-stage1-libs, --with-boot-ldflags and --with-boot-libs items\n+\taccordingly.  Mention default for --with-stage1-ldflags.\n+\n 2015-08-12  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* config/arm/arm.h (arm_fpu_feature_set): New."}, {"sha": "360b0666b6980b8de6d2aca257b877ac15731ed9", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=5dc85f7ec719a79ecfbcdd8563b07e5f0f365e65", "patch": "@@ -1853,36 +1853,27 @@ include and lib options directly.\n These flags are applicable to the host platform only.  When building\n a cross compiler, they will not be used to configure target libraries.\n \n-@item --with-host-libstdcxx=@var{linker-args}\n-If you are linking with a static copy of PPL, you can use this option\n-to specify how the linker should find the standard C++ library used\n-internally by PPL.  Typical values of @var{linker-args} might be\n-@samp{-lstdc++} or @samp{-Wl,-Bstatic,-lstdc++,-Bdynamic -lm}.  If you are\n-linking with a shared copy of PPL, you probably do not need this\n-option; shared library dependencies will cause the linker to search\n-for the standard C++ library automatically.\n-\n @item --with-stage1-ldflags=@var{flags}\n This option may be used to set linker flags to be used when linking\n stage 1 of GCC.  These are also used when linking GCC if configured with\n-@option{--disable-bootstrap}.  By default no special flags are used.\n+@option{--disable-bootstrap}.  If @option{\u2013with-stage1-libs} is not set to a\n+value, then the default is @samp{-static-libstdc++ -static-libgcc}, if\n+supported.\n \n @item --with-stage1-libs=@var{libs}\n This option may be used to set libraries to be used when linking stage 1\n of GCC.  These are also used when linking GCC if configured with\n-@option{--disable-bootstrap}.  The default is the argument to\n-@option{--with-host-libstdcxx}, if specified.\n+@option{--disable-bootstrap}.\n \n @item --with-boot-ldflags=@var{flags}\n This option may be used to set linker flags to be used when linking\n-stage 2 and later when bootstrapping GCC.  If neither --with-boot-libs\n-nor --with-host-libstdcxx is set to a value, then the default is\n+stage 2 and later when bootstrapping GCC.  If --with-boot-libs\n+is not is set to a value, then the default is\n @samp{-static-libstdc++ -static-libgcc}.\n \n @item --with-boot-libs=@var{libs}\n This option may be used to set libraries to be used when linking stage 2\n-and later when bootstrapping GCC.  The default is the argument to\n-@option{--with-host-libstdcxx}, if specified.\n+and later when bootstrapping GCC.\n \n @item --with-debug-prefix-map=@var{map}\n Convert source directory names using @option{-fdebug-prefix-map} when"}]}