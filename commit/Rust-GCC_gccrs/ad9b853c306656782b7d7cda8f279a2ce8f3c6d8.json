{"sha": "ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ5Yjg1M2MzMDY2NTY3ODJiN2Q3Y2RhOGYyNzlhMmNlOGYzYzZkOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:16:23Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:16:23Z"}, "message": "[ARM/AArch64][testsuite] Add vmul_lane tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmul_lane.c: New file.\n\nFrom-SVN: r219940", "tree": {"sha": "a13492206fa16e603ac0ecfcf4f174c5993e9c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a13492206fa16e603ac0ecfcf4f174c5993e9c77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8/comments", "author": null, "committer": null, "parents": [{"sha": "d048f8c33952f2581296deaf32b3db6a210996a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d048f8c33952f2581296deaf32b3db6a210996a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d048f8c33952f2581296deaf32b3db6a210996a8"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "b5a47c0056d35b4697bc5429840c203e289ee616", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmul_lane.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmovn.c: New file."}, {"sha": "978cd9b477daba1cb96f31c8ae8c829d302569ab", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmul_lane.c", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_lane.c?ref=ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "patch": "@@ -0,0 +1,104 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xffc0, 0xffc4, 0xffc8, 0xffcc };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffde0, 0xfffffe02 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xbbc0, 0xc004, 0xc448, 0xc88c };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffface0, 0xffffb212 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc3b66666, 0xc3ab0000 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xffc0, 0xffc4, 0xffc8, 0xffcc,\n+\t\t\t\t\t0xffd0, 0xffd4, 0xffd8, 0xffdc };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffffde0, 0xfffffe02,\n+\t\t\t\t\t0xfffffe24, 0xfffffe46 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xbbc0, 0xc004, 0xc448, 0xc88c,\n+\t\t\t\t\t 0xccd0, 0xd114, 0xd558, 0xd99c };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfffface0, 0xffffb212,\n+\t\t\t\t\t 0xffffb744, 0xffffbc76 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc3b66666, 0xc3ab0000,\n+\t\t\t\t\t   0xc39f9999, 0xc3943333 };\n+\n+#define TEST_MSG \"VMUL_LANE\"\n+void exec_vmul_lane (void)\n+{\n+#define DECL_VMUL(VAR)\t\t\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 4)\n+\n+  /* vector_res = vmul_lane(vector,vector2,lane), then store the result.  */\n+#define TEST_VMUL_LANE(Q, T1, T2, W, N, N2, L)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    vmul##Q##_lane_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t\t   VECT_VAR(vector2, T1, W, N2),\t\t\\\n+\t\t\t   L);\t\t\t\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N),\t\t\t\t\\\n+\t\t    VECT_VAR(vector_res, T1, W, N))\n+\n+  DECL_VMUL(vector);\n+  DECL_VMUL(vector_res);\n+\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+  DECL_VARIABLE(vector2, float, 32, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize vector from pre-initialized values.  */\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, , float, f, 32, 2);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, float, f, 32, 4);\n+\n+  /* Initialize vector2.  */\n+  VDUP(vector2, , int, s, 16, 4, 0x4);\n+  VDUP(vector2, , int, s, 32, 2, 0x22);\n+  VDUP(vector2, , uint, u, 16, 4, 0x444);\n+  VDUP(vector2, , uint, u, 32, 2, 0x532);\n+  VDUP(vector2, , float, f, 32, 2, 22.8f);\n+\n+  /* Choose lane arbitrarily.  */\n+  TEST_VMUL_LANE(, int, s, 16, 4, 4, 2);\n+  TEST_VMUL_LANE(, int, s, 32, 2, 2, 1);\n+  TEST_VMUL_LANE(, uint, u, 16, 4, 4, 2);\n+  TEST_VMUL_LANE(, uint, u, 32, 2, 2, 1);\n+  TEST_VMUL_LANE(, float, f, 32, 2, 2, 1);\n+  TEST_VMUL_LANE(q, int, s, 16, 8, 4, 2);\n+  TEST_VMUL_LANE(q, int, s, 32, 4, 2, 0);\n+  TEST_VMUL_LANE(q, uint, u, 16, 8, 4, 2);\n+  TEST_VMUL_LANE(q, uint, u, 32, 4, 2, 1);\n+  TEST_VMUL_LANE(q, float, f, 32, 4, 2, 0);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 4, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vmul_lane ();\n+  return 0;\n+}"}]}