{"sha": "a087165623999d7fd5c743e1f63070a9556455db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA4NzE2NTYyMzk5OWQ3ZmQ1Yzc0M2UxZjYzMDcwYTk1NTY0NTVkYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-15T15:34:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-15T15:34:03Z"}, "message": "function.c (PREFERRED_STACK_BOUDNARY): Provide default value.\n\n\t* function.c (PREFERRED_STACK_BOUDNARY): Provide default value.\n\t(assign_stack_local_1): Limit alignment to PREFERRED_STACK_BOUNDARY,\n\tupdate stack_alignment_needed.\n\t(prepare_function_start): Initialize stack_alignment_needed\n\t* function.h (struct function): Add field stack_alignment_needed.\n\nFrom-SVN: r30958", "tree": {"sha": "215902be6cfedc77251a1f95f5439f107231e3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/215902be6cfedc77251a1f95f5439f107231e3df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a087165623999d7fd5c743e1f63070a9556455db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a087165623999d7fd5c743e1f63070a9556455db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a087165623999d7fd5c743e1f63070a9556455db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a087165623999d7fd5c743e1f63070a9556455db/comments", "author": null, "committer": null, "parents": [{"sha": "285f3cf09acda794f6e7bba9cb6d5163c94b5af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285f3cf09acda794f6e7bba9cb6d5163c94b5af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285f3cf09acda794f6e7bba9cb6d5163c94b5af4"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "ca95516fdf5df0857b7491d78d470b60337adc12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a087165623999d7fd5c743e1f63070a9556455db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a087165623999d7fd5c743e1f63070a9556455db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a087165623999d7fd5c743e1f63070a9556455db", "patch": "@@ -1,3 +1,11 @@\n+Wed Dec 15 16:11:55 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* function.c (PREFERRED_STACK_BOUDNARY): Provide default value.\n+\t(assign_stack_local_1): Limit alignment to PREFERRED_STACK_BOUNDARY,\n+\tupdate stack_alignment_needed.\n+\t(prepare_function_start): Initialize stack_alignment_needed\n+\t* function.h (struct function): Add field stack_alignment_needed.\n+\n Wed Dec 15 14:55:24 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* caller-save.c (insert_one_insn): Returns struct insn_chain *."}, {"sha": "2392f32f6c615dd3eefa969d49bed76ac23d22ce", "filename": "gcc/function.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a087165623999d7fd5c743e1f63070a9556455db/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a087165623999d7fd5c743e1f63070a9556455db/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a087165623999d7fd5c743e1f63070a9556455db", "patch": "@@ -68,6 +68,10 @@ Boston, MA 02111-1307, USA.  */\n #define LOCAL_ALIGNMENT(TYPE, ALIGNMENT) ALIGNMENT\n #endif\n \n+#if !defined (PREFERRED_STACK_BOUNDARY) && defined (STACK_BOUNDARY)\n+#define PREFERRED_STACK_BOUNDARY STACK_BOUNDARY\n+#endif\n+\n /* Some systems use __main in a way incompatible with its use in gcc, in these\n    cases use the macros NAME__MAIN to give a quoted symbol and SYMBOL__MAIN to\n    give the same symbol without quotes for an alternative entry point.  You\n@@ -543,6 +547,13 @@ assign_stack_local_1 (mode, size, align, function)\n   function->x_frame_offset -= size;\n #endif\n \n+  /* Ignore alignment we can't do with expected alignment of the boundary.  */\n+  if (alignment * BITS_PER_UNIT > PREFERRED_STACK_BOUNDARY)\n+    alignment = PREFERRED_STACK_BOUNDARY / BITS_PER_UNIT;\n+\n+  if (function->stack_alignment_needed < alignment * BITS_PER_UNIT)\n+    function->stack_alignment_needed = alignment * BITS_PER_UNIT;\n+\n   /* Round frame offset to that alignment.\n      We must be careful here, since FRAME_OFFSET might be negative and\n      division with a negative dividend isn't as well defined as we might\n@@ -5764,6 +5775,8 @@ prepare_function_start ()\n   current_function->original_decl_initial = 0;\n   current_function->original_arg_vector = 0;  \n \n+  current_function->stack_alignment_needed = 0;\n+\n   /* Set if a call to setjmp is seen.  */\n   current_function_calls_setjmp = 0;\n "}, {"sha": "059d8e1f4be86b81c8b6428d9f75990eea67c3df", "filename": "gcc/function.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a087165623999d7fd5c743e1f63070a9556455db/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a087165623999d7fd5c743e1f63070a9556455db/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=a087165623999d7fd5c743e1f63070a9556455db", "patch": "@@ -456,6 +456,8 @@ struct function\n   int uses_pic_offset_table;\n   /* tm.h can use this to store whatever it likes.  */\n   struct machine_function *machine;\n+  /* The largest alignment of slot allocated on the stack.  */\n+  int stack_alignment_needed;\n \n   /* Language-specific code can use this to store whatever it likes.  */\n   struct language_function *language;"}]}