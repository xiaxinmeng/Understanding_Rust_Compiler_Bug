{"sha": "9348eb677eb9e113ae7889faa5466723a307941f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM0OGViNjc3ZWI5ZTExM2FlNzg4OWZhYTU0NjY3MjNhMzA3OTQxZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-28T13:40:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-28T13:40:41Z"}, "message": "re PR c/84607 (Side effects discarded in address computation inside 'if')\n\n2018-02-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/84607\n\t* genmatch.c (capture_info::walk_match): Do not mark\n\tcaptured expressions without operands as expr_p given\n\tthey act more like predicates and should be subject to\n\t\"lost tail\" side-effect preserving.\n\n\t* gcc.dg/pr84607.c: New testcase.\n\nFrom-SVN: r258061", "tree": {"sha": "fcffeb99d5674cf27e19b9ce648a6e5782e6b8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcffeb99d5674cf27e19b9ce648a6e5782e6b8c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9348eb677eb9e113ae7889faa5466723a307941f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9348eb677eb9e113ae7889faa5466723a307941f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9348eb677eb9e113ae7889faa5466723a307941f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9348eb677eb9e113ae7889faa5466723a307941f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35129fd3a745403bec0a06d62b18fc30ce1bbf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35129fd3a745403bec0a06d62b18fc30ce1bbf8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35129fd3a745403bec0a06d62b18fc30ce1bbf8e"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "d7f8754d2e9ab94e0e36b322978b3285d0e1b778", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9348eb677eb9e113ae7889faa5466723a307941f", "patch": "@@ -1,3 +1,11 @@\n+2018-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/84607\n+\t* genmatch.c (capture_info::walk_match): Do not mark\n+\tcaptured expressions without operands as expr_p given\n+\tthey act more like predicates and should be subject to\n+\t\"lost tail\" side-effect preserving.\n+\n 2018-02-28  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR rtl-optimization/81611"}, {"sha": "be6efe3bf1274acdb6ab3519f4ffdf3c2f42360a", "filename": "gcc/genmatch.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=9348eb677eb9e113ae7889faa5466723a307941f", "patch": "@@ -2104,7 +2104,11 @@ capture_info::walk_match (operand *o, unsigned toplevel_arg,\n       if (c->what\n \t  && (e = dyn_cast <expr *> (c->what)))\n \t{\n-\t  info[where].expr_p = true;\n+\t  /* Zero-operand expression captures like ADDR_EXPR@0 are\n+\t     similar as predicates -- if they are not mentioned in\n+\t     the result we have to force them to have no side-effects.  */\n+\t  if (e->ops.length () != 0)\n+\t    info[where].expr_p = true;\n \t  info[where].force_single_use |= e->force_single_use;\n \t}\n     }"}, {"sha": "eaa5041b18d7bc9f2996d2563be59d302af0abe5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9348eb677eb9e113ae7889faa5466723a307941f", "patch": "@@ -1,3 +1,8 @@\n+2018-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/84607\n+\t* gcc.dg/pr84607.c: New testcase.\n+\n 2018-02-28  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/84602"}, {"sha": "710ee94f729be89fd5ebf0f81814ebf22d2ecb2a", "filename": "gcc/testsuite/gcc.dg/pr84607.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84607.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9348eb677eb9e113ae7889faa5466723a307941f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84607.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84607.c?ref=9348eb677eb9e113ae7889faa5466723a307941f", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+\n+extern void exit(int);\n+extern void abort(void);\n+int a[10];\n+int foo()\n+{\n+  exit (0);\n+  return 0;\n+}\n+int main()\n+{\n+  if (&a[foo()])\n+    abort ();\n+  return 0;\n+}"}]}