{"sha": "f95810b50bab4e1397e51b12aa8e73cbf6046a47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1ODEwYjUwYmFiNGUxMzk3ZTUxYjEyYWE4ZTczY2JmNjA0NmE0Nw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-10-04T10:50:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-10-04T10:50:19Z"}, "message": "PR82413: Mismatched precisions in build_range_check\n\nbuild_range_check explicitly allows LOW and HIGH to be a different type\nfrom EXP, so we need to use w::to_widest when comparing a value based on\nHIGH with a value based on EXP's type.\n\n2017-10-04  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\tPR tree-optimization/82413\n\t* fold-const.c (build_range_check): Use widest_int when comparing\n\tthe maximum ETYPE value with HIGH.\n\ngcc/testsuite/\n\tPR tree-optimization/82413\n\t* g++.dg/pr82413.C: New test.\n\nFrom-SVN: r253401", "tree": {"sha": "b7c37bc4d6cbafc2c9e402dc66394ed26dd746e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7c37bc4d6cbafc2c9e402dc66394ed26dd746e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f95810b50bab4e1397e51b12aa8e73cbf6046a47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95810b50bab4e1397e51b12aa8e73cbf6046a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95810b50bab4e1397e51b12aa8e73cbf6046a47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95810b50bab4e1397e51b12aa8e73cbf6046a47/comments", "author": null, "committer": null, "parents": [{"sha": "707905d0773e5a8eebb9ba65164f43dc08c658b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/707905d0773e5a8eebb9ba65164f43dc08c658b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/707905d0773e5a8eebb9ba65164f43dc08c658b1"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "76c1f1b403ec912122269a6378d824f2d677452b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f95810b50bab4e1397e51b12aa8e73cbf6046a47", "patch": "@@ -1,3 +1,9 @@\n+2017-10-04  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR tree-optimization/82413\n+\t* fold-const.c (build_range_check): Use widest_int when comparing\n+\tthe maximum ETYPE value with HIGH.\n+\n 2017-10-04  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR rtl-optimization/82396"}, {"sha": "ae037ce14fbfd2c01bc474b6770186d90f3bec39", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f95810b50bab4e1397e51b12aa8e73cbf6046a47", "patch": "@@ -4851,7 +4851,7 @@ build_range_check (location_t loc, tree type, tree exp, int in_p,\n     {\n       int prec = TYPE_PRECISION (etype);\n \n-      if (wi::mask (prec - 1, false, prec) == high)\n+      if (wi::mask <widest_int> (prec - 1, false) == wi::to_widest (high))\n \t{\n \t  if (TYPE_UNSIGNED (etype))\n \t    {"}, {"sha": "2c96f3af4e6ffa157904c80f254366baa6fe0379", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f95810b50bab4e1397e51b12aa8e73cbf6046a47", "patch": "@@ -1,3 +1,8 @@\n+2017-10-04  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR tree-optimization/82413\n+\t* g++.dg/pr82413.C: New test.\n+\n 2017-10-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/77296"}, {"sha": "a44751d5fcbbb3806da89315bf0cda23cc9363fa", "filename": "gcc/testsuite/g++.dg/pr82413.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr82413.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95810b50bab4e1397e51b12aa8e73cbf6046a47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr82413.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr82413.C?ref=f95810b50bab4e1397e51b12aa8e73cbf6046a47", "patch": "@@ -0,0 +1,3 @@\n+bool a;\n+int b;\n+void c() { b &&a <= 0; }"}]}