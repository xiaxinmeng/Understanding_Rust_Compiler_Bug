{"sha": "0387c1429da4a44bfe71b587cce23bb76d283ab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4N2MxNDI5ZGE0YTQ0YmZlNzFiNTg3Y2NlMjNiYjc2ZDI4M2FiOA==", "commit": {"author": {"name": "Wolfgang Gellerich", "email": "gellerich@de.ibm.com", "date": "2008-01-22T10:03:03Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-01-22T10:03:03Z"}, "message": "s390.h (S390_TDC_POSITIVE_NORMALIZED_NUMBER): Renamed to S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER.\n\n2008-01-22  Wolfgang Gellerich  <gellerich@de.ibm.com>\n\n\t* config/s390/s390.h (S390_TDC_POSITIVE_NORMALIZED_NUMBER):\n\tRenamed to S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER.\n\t(S390_TDC_NEGATIVE_NORMALIZED_NUMBER): Renamed to\n\tS390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER.\n\t(S390_TDC_POSITIVE_DENORMALIZED_NUMBER): Renamed to\n\tS390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER.\n\t(S390_TDC_NEGATIVE_DENORMALIZED_NUMBER): Renamed to\n\tS390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER.\n\t(S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER): New constant.\n\t(S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER): New constant.\n\t(S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER): New constant.\n\t(S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER): New constant.\n\t* config/s390/s390.md (FP_ALL): New mode iterator.\n\t(_d): New mode attribute.\n\t(\"*signbit<mode>2>\"): Changed mode of first operand.\n\t(\"isinf<mode>2\"): Changed mode of first operand.\n\t(\"*TDC_insn\"): Adaptation for DFP modes.\n\nFrom-SVN: r131714", "tree": {"sha": "11c74054b03e54a097715dcde596665606980ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c74054b03e54a097715dcde596665606980ac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0387c1429da4a44bfe71b587cce23bb76d283ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0387c1429da4a44bfe71b587cce23bb76d283ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0387c1429da4a44bfe71b587cce23bb76d283ab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0387c1429da4a44bfe71b587cce23bb76d283ab8/comments", "author": null, "committer": null, "parents": [{"sha": "fd1935d5e1d1db05547cbcf866e8afc26d1132f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd1935d5e1d1db05547cbcf866e8afc26d1132f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd1935d5e1d1db05547cbcf866e8afc26d1132f3"}], "stats": {"total": 73, "additions": 53, "deletions": 20}, "files": [{"sha": "fe329dffbd1d6e2cc86be63ac837e0f72696d3df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0387c1429da4a44bfe71b587cce23bb76d283ab8", "patch": "@@ -1,3 +1,23 @@\n+2008-01-22  Wolfgang Gellerich  <gellerich@de.ibm.com>\n+\n+\t* config/s390/s390.h (S390_TDC_POSITIVE_NORMALIZED_NUMBER):\n+\tRenamed to S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER.\n+\t(S390_TDC_NEGATIVE_NORMALIZED_NUMBER): Renamed to\n+\tS390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER.\n+\t(S390_TDC_POSITIVE_DENORMALIZED_NUMBER): Renamed to\n+\tS390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER.\n+\t(S390_TDC_NEGATIVE_DENORMALIZED_NUMBER): Renamed to\n+\tS390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER.\n+\t(S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER): New constant.\n+\t(S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER): New constant.\n+\t(S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER): New constant.\n+\t(S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER): New constant.\n+\t* config/s390/s390.md (FP_ALL): New mode iterator.\n+\t(_d): New mode attribute.\n+\t(\"*signbit<mode>2>\"): Changed mode of first operand.\n+\t(\"isinf<mode>2\"): Changed mode of first operand.\n+\t(\"*TDC_insn\"): Adaptation for DFP modes.\n+\n 2008-01-22  Ben Elliston  <bje@au.ibm.com>\n \n \t* tree.c (check_qualified_type): Improve function description."}, {"sha": "3ce8498a5e403716f7b2bbfbaa33b3250b5acf22", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=0387c1429da4a44bfe71b587cce23bb76d283ab8", "patch": "@@ -142,22 +142,29 @@ extern enum processor_flags s390_arch_flags;\n #define CAN_DEBUG_WITHOUT_FP\n \n /* Constants needed to control the TEST DATA CLASS (TDC) instruction.  */\n-#define S390_TDC_POSITIVE_ZERO                (1 << 11)\n-#define S390_TDC_NEGATIVE_ZERO                (1 << 10)\n-#define S390_TDC_POSITIVE_NORMALIZED_NUMBER   (1 << 9)\n-#define S390_TDC_NEGATIVE_NORMALIZED_NUMBER   (1 << 8)\n-#define S390_TDC_POSITIVE_DENORMALIZED_NUMBER (1 << 7)\n-#define S390_TDC_NEGATIVE_DENORMALIZED_NUMBER (1 << 6)\n-#define S390_TDC_POSITIVE_INFINITY            (1 << 5)\n-#define S390_TDC_NEGATIVE_INFINITY            (1 << 4)\n-#define S390_TDC_POSITIVE_QUIET_NAN           (1 << 3)\n-#define S390_TDC_NEGATIVE_QUIET_NAN           (1 << 2)\n-#define S390_TDC_POSITIVE_SIGNALING_NAN       (1 << 1)\n-#define S390_TDC_NEGATIVE_SIGNALING_NAN       (1 << 0)\n-\n+#define S390_TDC_POSITIVE_ZERO                     (1 << 11)\n+#define S390_TDC_NEGATIVE_ZERO                     (1 << 10)\n+#define S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER    (1 << 9)\n+#define S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER    (1 << 8)\n+#define S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER  (1 << 7)\n+#define S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER  (1 << 6)\n+#define S390_TDC_POSITIVE_INFINITY                 (1 << 5)\n+#define S390_TDC_NEGATIVE_INFINITY                 (1 << 4)\n+#define S390_TDC_POSITIVE_QUIET_NAN                (1 << 3)\n+#define S390_TDC_NEGATIVE_QUIET_NAN                (1 << 2)\n+#define S390_TDC_POSITIVE_SIGNALING_NAN            (1 << 1)\n+#define S390_TDC_NEGATIVE_SIGNALING_NAN            (1 << 0)\n+\n+/* The following values are different for DFP.  */\n+#define S390_TDC_POSITIVE_DENORMALIZED_DFP_NUMBER (1 << 9)\n+#define S390_TDC_NEGATIVE_DENORMALIZED_DFP_NUMBER (1 << 8)\n+#define S390_TDC_POSITIVE_NORMALIZED_DFP_NUMBER   (1 << 7)\n+#define S390_TDC_NEGATIVE_NORMALIZED_DFP_NUMBER   (1 << 6)\n+\n+/* For signbit, the BFP-DFP-difference makes no difference. */ \n #define S390_TDC_SIGNBIT_SET (S390_TDC_NEGATIVE_ZERO \\\n-                          | S390_TDC_NEGATIVE_NORMALIZED_NUMBER \\\n-                          | S390_TDC_NEGATIVE_DENORMALIZED_NUMBER\\\n+                          | S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER \\\n+                          | S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER\\\n                           | S390_TDC_NEGATIVE_INFINITY \\\n                           | S390_TDC_NEGATIVE_QUIET_NAN \\\n \t\t\t  | S390_TDC_NEGATIVE_SIGNALING_NAN )"}, {"sha": "5ffa72884a0994da62ef380f0d25fa82b813a120", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0387c1429da4a44bfe71b587cce23bb76d283ab8/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=0387c1429da4a44bfe71b587cce23bb76d283ab8", "patch": "@@ -251,6 +251,8 @@\n \n ;; These mode iterators allow floating point patterns to be generated from the\n ;; same template.\n+(define_mode_iterator FP_ALL [TF DF SF (TD \"TARGET_HARD_DFP\") (DD \"TARGET_HARD_DFP\") \n+                              (SD \"TARGET_HARD_DFP\")])\n (define_mode_iterator FP [TF DF SF (TD \"TARGET_HARD_DFP\") (DD \"TARGET_HARD_DFP\")])\n (define_mode_iterator BFP [TF DF SF])\n (define_mode_iterator DFP [TD DD])\n@@ -346,6 +348,10 @@\n ;; within instruction mnemonics.\n (define_mode_attr bt [(TF \"b\") (DF \"b\") (SF \"b\") (TD \"t\") (DD \"t\") (SD \"t\")])\n \n+;; This attribute is used within instruction mnemonics.  It evaluates to d for dfp\n+;; modes and to an empty string for bfp modes.\n+(define_mode_attr _d [(TF \"\") (DF \"\") (SF \"\") (TD \"d\") (DD \"d\") (SD \"d\")])\n+\n ;; Although it is imprecise for z9-ec we handle all dfp instructions like\n ;; bfp regarding the pipeline description.\n (define_mode_attr bfp [(TF \"tf\") (DF \"df\") (SF \"sf\")\n@@ -2310,7 +2316,7 @@\n \n (define_expand \"signbit<mode>2\"\n   [(set (reg:CCZ CC_REGNUM)\n-        (unspec:CCZ [(match_operand:BFP 1 \"register_operand\" \"f\") \n+        (unspec:CCZ [(match_operand:FP_ALL 1 \"register_operand\" \"f\") \n                      (match_dup 2)] \n                      UNSPEC_TDC_INSN))\n    (set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2322,7 +2328,7 @@\n \n (define_expand \"isinf<mode>2\"\n   [(set (reg:CCZ CC_REGNUM)\n-        (unspec:CCZ [(match_operand:BFP 1 \"register_operand\" \"f\") \n+        (unspec:CCZ [(match_operand:FP_ALL 1 \"register_operand\" \"f\") \n                      (match_dup 2)] \n                      UNSPEC_TDC_INSN))\n    (set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2339,12 +2345,12 @@\n ;\n (define_insn \"*TDC_insn_<mode>\"\n   [(set (reg:CCZ CC_REGNUM)\n-        (unspec:CCZ [(match_operand:BFP 0 \"register_operand\" \"f\") \n+        (unspec:CCZ [(match_operand:FP_ALL 0 \"register_operand\" \"f\") \n                      (match_operand:SI 1 \"const_int_operand\")] UNSPEC_TDC_INSN))]\n   \"TARGET_HARD_FLOAT\"\n-  \"tc<xde>b\\t%0,%1\"\n+  \"t<_d>c<xde><bt>\\t%0,%1\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"type\"  \"fsimp<mode>\")])\n+    (set_attr \"type\"  \"fsimp<bfp>\")])\n \n (define_insn_and_split \"*ccz_to_int\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")"}]}