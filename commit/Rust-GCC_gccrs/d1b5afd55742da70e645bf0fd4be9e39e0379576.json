{"sha": "d1b5afd55742da70e645bf0fd4be9e39e0379576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFiNWFmZDU1NzQyZGE3MGU2NDViZjBmZDRiZTllMzllMDM3OTU3Ng==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-08T04:19:16Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-08T04:19:16Z"}, "message": "mep-ivc2.cpu (cpmovtocsar0_C3, [...]): Mark volatile.\n\n* config/mep/mep-ivc2.cpu (cpmovtocsar0_C3, cpmovtocsar1_C3,\ncpmovtocc_C3, cpmovtocsar0_P0S_P1, cpmovtocsar1_P0S_P1,\ncpmovtocc_P0S_P1): Mark volatile.  Note which registers are\nwritten to.\n* config/mep/intrinsics.md: Regenerated.\n* config/mep/mep.c (mep_interrupt_saved_reg): Save IVC2 control\nregisters when asm() or calls are detected.\n\nFrom-SVN: r149361", "tree": {"sha": "5f0c76d91cdd483afadd83438c6359c91840f064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f0c76d91cdd483afadd83438c6359c91840f064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1b5afd55742da70e645bf0fd4be9e39e0379576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b5afd55742da70e645bf0fd4be9e39e0379576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b5afd55742da70e645bf0fd4be9e39e0379576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b5afd55742da70e645bf0fd4be9e39e0379576/comments", "author": null, "committer": null, "parents": [{"sha": "824d8363ce9196c3ae031f984913ec4f5c6f9e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824d8363ce9196c3ae031f984913ec4f5c6f9e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824d8363ce9196c3ae031f984913ec4f5c6f9e04"}], "stats": {"total": 85, "additions": 55, "deletions": 30}, "files": [{"sha": "fe86f872da141d65826339eaa69ddf2a1d5b6d85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1b5afd55742da70e645bf0fd4be9e39e0379576", "patch": "@@ -1,3 +1,13 @@\n+2009-07-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/mep/mep-ivc2.cpu (cpmovtocsar0_C3, cpmovtocsar1_C3,\n+\tcpmovtocc_C3, cpmovtocsar0_P0S_P1, cpmovtocsar1_P0S_P1,\n+\tcpmovtocc_P0S_P1): Mark volatile.  Note which registers are\n+\twritten to.\n+\t* config/mep/intrinsics.md: Regenerated.\n+\t* config/mep/mep.c (mep_interrupt_saved_reg): Save IVC2 control\n+\tregisters when asm() or calls are detected.\n+\t\n 2009-07-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/31246"}, {"sha": "44343d3b706151514de808a925569e6bed5ff365", "filename": "gcc/config/mep/intrinsics.md", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fintrinsics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fintrinsics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fintrinsics.md?ref=d1b5afd55742da70e645bf0fd4be9e39e0379576", "patch": "@@ -15862,9 +15862,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocc_C3\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3378)]\n+  [(set (reg:SI 81)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3378))]\n   \"CGEN_ENABLE_INSN_P (574)\"\n   \"cpmovtocc\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")\n@@ -15876,9 +15877,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocc_P0S_P1\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3378)]\n+  [(set (reg:SI 81)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3378))]\n   \"CGEN_ENABLE_INSN_P (575)\"\n   \"cpmovtocc\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")\n@@ -15890,9 +15892,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocsar1_C3\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3380)]\n+  [(set (reg:SI 95)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3380))]\n   \"CGEN_ENABLE_INSN_P (576)\"\n   \"cpmovtocsar1\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")\n@@ -15904,9 +15907,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocsar1_P0S_P1\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3380)]\n+  [(set (reg:SI 95)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3380))]\n   \"CGEN_ENABLE_INSN_P (577)\"\n   \"cpmovtocsar1\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")\n@@ -15918,9 +15922,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocsar0_C3\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3382)]\n+  [(set (reg:SI 80)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3382))]\n   \"CGEN_ENABLE_INSN_P (578)\"\n   \"cpmovtocsar0\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")\n@@ -15932,9 +15937,10 @@\n \n \n (define_insn \"cgen_intrinsic_cpmovtocsar0_P0S_P1\"\n-  [(unspec_volatile [\n-     (match_operand:DI 0 \"general_operand\" \"x\")\n-   ] 3382)]\n+  [(set (reg:SI 80)\n+        (unspec_volatile:SI [\n+          (match_operand:DI 0 \"general_operand\" \"x\")\n+        ] 3382))]\n   \"CGEN_ENABLE_INSN_P (579)\"\n   \"cpmovtocsar0\\\\t%0\"\n   [(set_attr \"may_trap\" \"no\")"}, {"sha": "1e0025185d26dd72ce23541fcb38ce24a00efe41", "filename": "gcc/config/mep/mep-ivc2.cpu", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu?ref=d1b5afd55742da70e645bf0fd4be9e39e0379576", "patch": "@@ -1463,36 +1463,39 @@\n \n ; 1111 0000 0000 0111 10000 qqqqq 10000 0   cpmovtocsar0 crqc (c3_1)\n (dni cpmovtocsar0_C3 \"cpmovtocsar0 $crqc C3\"\n-  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocsar0\"))\n+  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocsar0\") VOLATILE)\n   \"cpmovtocsar0 $crqc\"\n   (+ MAJ_15 (f-ivc2-3u4 #x0) (f-ivc2-5u7 #x0) (f-sub4 7)\n \t(f-ivc2-5u16 #x10) crqc (f-ivc2-5u26 #x10) (f-ivc2-1u31 #x0) )\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_csar0 0)\n \t(c-call \"ivc2_cpmovtocsar0\" pc crqc) )\n   ()\n   )\n \n ; 1111 0000 0000 0111 10000 qqqqq 11111 0   cpmovtocsar1 crqc (c3_1)\n (dni cpmovtocsar1_C3 \"cpmovtocsar1 $crqc C3\"\n-  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocsar1\"))\n+  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocsar1\") VOLATILE)\n   \"cpmovtocsar1 $crqc\"\n   (+ MAJ_15 (f-ivc2-3u4 #x0) (f-ivc2-5u7 #x0) (f-sub4 7)\n \t(f-ivc2-5u16 #x10) crqc (f-ivc2-5u26 #x1f) (f-ivc2-1u31 #x0) )\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_csar1 0)\n \t(c-call \"ivc2_cpmovtocsar1\" pc crqc) )\n   ()\n   )\n \n ; 1111 0000 0000 0111 10000 qqqqq 10001 0   cpmovtocc crqc (c3_1)\n (dni cpmovtocc_C3 \"cpmovtocc $crqc C3\"\n-  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocc\"))\n+  (OPTIONAL_CP_INSN ivc2-c3-isa (SLOTS C3) (INTRINSIC \"cpmovtocc\") VOLATILE)\n   \"cpmovtocc $crqc\"\n   (+ MAJ_15 (f-ivc2-3u4 #x0) (f-ivc2-5u7 #x0) (f-sub4 7)\n \t(f-ivc2-5u16 #x10) crqc (f-ivc2-5u26 #x11) (f-ivc2-1u31 #x0) )\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_cc 0)\n \t(c-call \"ivc2_cpmovtocc\" pc crqc) )\n   ()\n   )\n@@ -4948,33 +4951,36 @@\n \n ; 10001 qqqqq 10000 00000   cpmovtocsar0 crqp (p0_1)\n (dni cpmovtocsar0_P0S_P1 \"cpmovtocsar0 $crqp Pn\"\n-  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocsar0\"))\n+  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocsar0\") VOLATILE)\n   \"cpmovtocsar0 $crqp\"\n   (+ (f-ivc2-8u0 #x0) (f-ivc2-5u8 #x11) crqp (f-ivc2-5u18 #x10) (f-ivc2-5u23 #x0) (f-ivc2-4u28 0))\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_csar0 0)\n \t(c-call \"ivc2_cpmovtocsar0\" pc crqp) )\n   ()\n   )\n \n ; 10001 qqqqq 11111 00000   cpmovtocsar1 crqp (p0_1)\n (dni cpmovtocsar1_P0S_P1 \"cpmovtocsar1 $crqp Pn\"\n-  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocsar1\"))\n+  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocsar1\") VOLATILE)\n   \"cpmovtocsar1 $crqp\"\n   (+ (f-ivc2-8u0 #x0) (f-ivc2-5u8 #x11) crqp (f-ivc2-5u18 #x1f) (f-ivc2-5u23 #x0) (f-ivc2-4u28 0))\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_csar1 0)\n \t(c-call \"ivc2_cpmovtocsar1\" pc crqp) )\n   ()\n   )\n \n ; 10001 qqqqq 10001 00000   cpmovtocc crqp (p0_1)\n (dni cpmovtocc_P0S_P1 \"cpmovtocc $crqp Pn\"\n-  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocc\"))\n+  (OPTIONAL_CP_INSN ivc2-p0s-p1-isa (SLOTS P0S,P1) (INTRINSIC \"cpmovtocc\") VOLATILE)\n   \"cpmovtocc $crqp\"\n   (+ (f-ivc2-8u0 #x0) (f-ivc2-5u8 #x11) crqp (f-ivc2-5u18 #x11) (f-ivc2-5u23 #x0) (f-ivc2-4u28 0))\n   (sequence ()\n \t(c-call \"check_option_cp\" pc)\n+\t(set ivc2_cc 0)\n \t(c-call \"ivc2_cpmovtocc\" pc crqp) )\n   ()\n   )"}, {"sha": "7237a0302282a8fece3c51f855e6211587a39d3b", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b5afd55742da70e645bf0fd4be9e39e0379576/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=d1b5afd55742da70e645bf0fd4be9e39e0379576", "patch": "@@ -2499,6 +2499,11 @@ mep_asm_without_operands_p (void)\n    since they may get clobbered there too).  Here we check to see\n    which call-used registers need saving.  */\n \n+#define IVC2_ISAVED_REG(r) (TARGET_IVC2 \\\n+\t\t\t   && (r == FIRST_CCR_REGNO + 1 \\\n+\t\t\t       || (r >= FIRST_CCR_REGNO + 8 && r <= FIRST_CCR_REGNO + 11) \\\n+\t\t\t       || (r >= FIRST_CCR_REGNO + 16 && r <= FIRST_CCR_REGNO + 31)))\n+\n static bool\n mep_interrupt_saved_reg (int r)\n {\n@@ -2509,11 +2514,12 @@ mep_interrupt_saved_reg (int r)\n     return true;\n   if (mep_asm_without_operands_p ()\n       && (!fixed_regs[r]\n-\t  || (r == RPB_REGNO || r == RPE_REGNO || r == RPC_REGNO || r == LP_REGNO)))\n+\t  || (r == RPB_REGNO || r == RPE_REGNO || r == RPC_REGNO || r == LP_REGNO)\n+\t  || IVC2_ISAVED_REG (r)))\n     return true;\n   if (!current_function_is_leaf)\n     /* Function calls mean we need to save $lp.  */\n-    if (r == LP_REGNO)\n+    if (r == LP_REGNO || IVC2_ISAVED_REG (r))\n       return true;\n   if (!current_function_is_leaf || cfun->machine->doloop_tags > 0)\n     /* The interrupt handler might use these registers for repeat blocks,\n@@ -2526,10 +2532,7 @@ mep_interrupt_saved_reg (int r)\n   if (call_used_regs[r] && !fixed_regs[r])\n     return true;\n   /* Additional registers that need to be saved for IVC2.  */\n-  if (TARGET_IVC2\n-      && (r == FIRST_CCR_REGNO + 1\n-\t  || (r >= FIRST_CCR_REGNO + 8 && r <= FIRST_CCR_REGNO + 11)\n-\t  || (r >= FIRST_CCR_REGNO + 16 && r <= FIRST_CCR_REGNO + 31)))\n+  if (IVC2_ISAVED_REG (r))\n     return true;\n \n   return false;"}]}