{"sha": "320dd7a75afd6883535888aaa4baa88976d185e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwZGQ3YTc1YWZkNjg4MzUzNTg4OGFhYTRiYWE4ODk3NmQxODVlNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-26T19:32:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-26T19:32:34Z"}, "message": "(nonzero_bits, case REG): Put POINTERS_EXTEND_UNSIGNED code before stack pointer code.\n\n(nonzero_bits, case REG): Put POINTERS_EXTEND_UNSIGNED code before\nstack pointer code.  Return nonzero at end of stack pointer code.\n\nFrom-SVN: r10600", "tree": {"sha": "29fadcb1bef11651421212193839f421d260313e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29fadcb1bef11651421212193839f421d260313e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320dd7a75afd6883535888aaa4baa88976d185e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320dd7a75afd6883535888aaa4baa88976d185e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320dd7a75afd6883535888aaa4baa88976d185e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320dd7a75afd6883535888aaa4baa88976d185e6/comments", "author": null, "committer": null, "parents": [{"sha": "72d3b324bc6b5944947cae65a6ac0e96ab950729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d3b324bc6b5944947cae65a6ac0e96ab950729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d3b324bc6b5944947cae65a6ac0e96ab950729"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "473adc83460d68a26e222499d6c125fb84b0d970", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320dd7a75afd6883535888aaa4baa88976d185e6/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320dd7a75afd6883535888aaa4baa88976d185e6/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=320dd7a75afd6883535888aaa4baa88976d185e6", "patch": "@@ -6850,6 +6850,14 @@ nonzero_bits (x, mode)\n   switch (code)\n     {\n     case REG:\n+#ifdef POINTERS_EXTEND_UNSIGNED\n+      /* If pointers extend unsigned and this is a pointer in Pmode, say that\n+\t all the bits above ptr_mode are known to be zero.  */\n+      if (POINTERS_EXTEND_UNSIGNED && GET_MODE (x) == Pmode\n+\t  && REGNO_POINTER_FLAG (REGNO (x)))\n+\tnonzero &= GET_MODE_MASK (ptr_mode);\n+#endif\n+\n #ifdef STACK_BOUNDARY\n       /* If this is the stack pointer, we may know something about its\n \t alignment.  If PUSH_ROUNDING is defined, it is possible for the\n@@ -6864,18 +6872,13 @@ nonzero_bits (x, mode)\n \t  sp_alignment = MIN (PUSH_ROUNDING (1), sp_alignment);\n #endif\n \n-\t  nonzero &= ~ (sp_alignment - 1);\n+\t  /* We must return here, otherwise we may get a worse result from\n+\t     one of the choices below.  There is nothing useful below as\n+\t     far as the stack pointer is concerned.  */\n+\t  return nonzero &= ~ (sp_alignment - 1);\n \t}\n #endif\n \n-#ifdef POINTERS_EXTEND_UNSIGNED\n-      /* If pointers extend unsigned and this is a pointer in Pmode, say that\n-\t all the bits above ptr_mode are known to be zero.  */\n-      if (POINTERS_EXTEND_UNSIGNED && GET_MODE (x) == Pmode\n-\t  && REGNO_POINTER_FLAG (REGNO (x)))\n-\tnonzero &= GET_MODE_MASK (ptr_mode);\n-#endif\n-\n       /* If X is a register whose nonzero bits value is current, use it.\n \t Otherwise, if X is a register whose value we can find, use that\n \t value.  Otherwise, use the previously-computed global nonzero bits"}]}