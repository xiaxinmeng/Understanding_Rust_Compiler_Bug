{"sha": "0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmYzBiM2JlNTVhOTc3YjYyMDhiNjRkNThjZjJhMjhiOTlkOTczYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-02T21:56:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-02T21:56:58Z"}, "message": "Small ChangeLog fixes.\n\nFrom-SVN: r206287", "tree": {"sha": "ba6101389f8cdd2bdbee4efc07d3fe1de4889ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba6101389f8cdd2bdbee4efc07d3fe1de4889ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/comments", "author": null, "committer": null, "parents": [{"sha": "98db73df84446b2d9e2ef37e16d1381b986b3a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98db73df84446b2d9e2ef37e16d1381b986b3a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98db73df84446b2d9e2ef37e16d1381b986b3a69"}], "stats": {"total": 47367, "additions": 23717, "deletions": 23650}, "files": [{"sha": "d1e2f4b5d704bd5e7fc69d038705db020a69f133", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 748, "deletions": 2, "changes": 750, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "patch": "@@ -1,8 +1,754 @@\n 2014-01-02  Tobias Burnus  <burnus@net-b.de>\n \n-\t* gcc/go/gccgo.texi: Ditto.\n+\t* gccgo.texi: Bump @copying's copyright year.\n+\n+2013-12-16  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::struct_field_expression): New function.\n+\n+2013-12-11  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_post_options): Disable sibling calls by\n+\tdefault.\n+\n+2013-12-10  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (check_go_parallelize): Test go-test.exp r* tests\n+\tseparately.\n+\n+2013-12-05  Ian Lance Taylor  <iant@google.com>\n+\n+\tRevert this change; no longer required.\n+\t2013-11-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_post_options): If\n+\t-fisolate-erroneous-paths was turned on by an optimization option,\n+\tturn it off.\n+\n+2013-11-23  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::function_type): Add result_struct\n+\tparameter.\n+\n+2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* go-gcc.cc: Add required include files from gimple.h.\n+\t* go-lang.c: Likewise\n+\n+2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gofrontend/expressions.cc: Replace tree_low_cst (..., 0) with\n+\ttree_to_shwi throughout.\n+\n+2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gofrontend/expressions.cc: Replace host_integerp (..., 0) with\n+\ttree_fits_shwi_p throughout.\n+\n+2013-11-14  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* go-lang.c: Include only gimplify.h and gimple.h as needed.\n+\n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* go-backend.c: Include stor-layout.h.\n+\t* go-gcc.cc: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* go-lang.c: Include stor-layout.h.\n+\n+2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* go-lang.c: Include gimplify.h.\n+\n+2013-11-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_post_options): If\n+\t-fisolate-erroneous-paths was turned on by an optimization option,\n+\tturn it off.\n+\n+2013-10-14  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::address_expression): New function.\n+\n+2013-10-11  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::function_code_expression): New\n+\tfunction.\n+\n+2013-10-10  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::error_function): New function.\n+\t(Gcc_backend::function): New function.\n+\t(Gcc_backend::make_function): New function.\n+\t(function_to_tree): New function.\n+\n+2013-10-04  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::convert_expression): New function.\n+\n+2013-10-02  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc: Include \"real.h\" and \"realmpfr.h\".\n+\t(Gcc_backend::integer_constant_expression): New function.\n+\t(Gcc_backend::float_constant_expression): New function.\n+\t(Gcc_backend::complex_constant_expression): New function.\n+\n+2013-09-30  Chris Manghane  <cmang@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::error_expression): New function.\n+\t(Gcc_backend::var_expression): New function.\n+\t(Gcc_backend::indirect_expression): New function.\n+\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (gospec.o): Remove.\n+\t(CFLAGS-go/gospec.o): New variable.\n+\t(GCCGO_OBJS): Update to use go/gospec.o.\n+\t(go_OBJS): Define.\n+\t(GO_SYSTEM_H, GO_C_H, GO_LINEMAP_H, GO_LEX_H, GO_PARSE_H)\n+\t(GO_GOGO_H, GO_TYPES_H, GO_STATEMENTS_H, GO_EXPRESSIONS_H)\n+\t(GO_EXPORT_H, GO_IMPORT_H, GO_RUNTIME_H, GO_AST_DUMP_H)\n+\t(go/go-backend.o, go/go-lang.o, go/go-gcc.o, go/go-linemap.o)\n+\t(go/ast-dump.o, go/dataflow.o, go/export.o, go/expressions.o)\n+\t(go/go.o, go/go-dump.o, go/go-optimize.o, go/gogo-tree.o)\n+\t(go/gogo.o, go/import.o, go/import-archive.o, go/lex.o)\n+\t(go/parse.o, go/runtime.o, go/statements.o, go/types.o)\n+\t(go/unsafe.o): Remove.\n+\t(CFLAGS-go/go-gcc.o, CFLAGS-go/go-linemap.o): New variables.\n+\t(go/%.o: go/gofrontend/%.cc): Use COMPILE and POSTCOMPILE.\n+\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (gospec.o): Don't use subshell.\n+\n+2013-08-28  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::immutable_struct): Set TREE_PUBLIC if\n+\tthe struct is not hidden.\n+\t(Gcc_backend::immutable_struct_set_init): Don't set TREE_PUBLIC.\n+\n+2013-08-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::immutable_struct_set_init): Use\n+\tcompute_reloc_for_constant.\n+\n+2013-08-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (immutable_struct_set_init): Always call\n+\tresolve_unique_section.\n+\n+2013-07-24  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::non_zero_size_type): If a struct has a\n+\tfields, recreate those fields with the first one with a non-zero\n+\tsize.\n+\n+2013-07-23  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-backend.c: Don't #include \"rtl.h\".\n+\t(go_imported_unsafe): Don't call init_varasm_once.\n+\t* Make-lang.in (go/go-backend.o): Don't depend on $(RTL_H).\n+\n+2013-07-23  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c: Don't #include \"except.h\".\n+\t* Make-lang.in (go/go-lang.o): Don't depend on $(EXCEPT_H).\n+\n+2013-06-18  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::immutable_struct): Add is_hidden\n+\tparameter.\n+\t(Gcc_backend::immutable_struct_set_init): Likewise.\n+\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (go1$(exeext)): Use link mutex.\n+\n+2013-01-16  Shenghou Ma  <minux.ma@gmail.com>\n+\n+\t* gospec.c: pass -u pthread_create to linker when static linking.\n+\n+2012-12-21  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR bootstrap/54659\n+\t* go-system.h: Don't include <cstdio>.\n+\n+2012-12-18  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR go/55201\n+\t* gospec.c: Revert last patch.\n+\n+2012-12-18  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR go/55201\n+\t* gospec.c (LIBATOMIC): Define.\n+\t(LIBATOMIC_PROFILE): Define.\n+\t(lang_specific_driver): Add LIBATOMIC[_PROFILE] option.\n+\n+2012-11-29  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc: Include \"output.h\".\n+\t(global_variable): Add is_unique_section parameter.\n+\t(global_variable_set_init): Adjust unique section if necessary.\n+\t* Make-lang.in (go/go-gcc.o): Add dependency on output.h.\n+\n+2012-11-17  Diego Novillo  <dnovillo@google.com>\n+\n+\tAdjust for new vec API (http://gcc.gnu.org/wiki/cxx-conversion/cxx-vec)\n+\n+\t* go-lang.c: Use new vec API in vec.h.\n+\n+2012-11-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (gccgo$(exeext)): Add + at start of command.\n+\t(go1$(exeext)): Likewise.\n+\n+2012-10-30  Ian Lance Taylor  <iant@google.com>\n+\n+\t* lang.opt (-fgo-relative-import-path): New option.\n+\t* go-lang.c (go_relative_import_path): New static variable.\n+\t(go_langhook_init): Pass go_relative_import_path to\n+\tgo_create_gogo.\n+\t(go_langhook_handle_option): Handle -fgo-relative-import-path.\n+\t* go-c.h (go_create_gogo): Update declaration.\n+\t* gccgo.texi (Invoking gccgo): Document\n+\t-fgo-relative-import-path.\n+\n+2012-09-17  Ian Lance Taylor  <iant@google.com>\n+\n+\t* config-lang.in (target_libs): Add target-libbacktrace.\n+\n+2012-09-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (go/gogo.o): Depend on filenames.h.\n+\n+2012-08-14   Diego Novillo  <dnovillo@google.com>\n+\n+\tMerge from cxx-conversion branch.  Configury.\n+\n+\t* go-c.h: Remove all handlers of ENABLE_BUILD_WITH_CXX.\n+\t* go-gcc.cc: Likewise.\n+\t* go-system.h: Likewise.\n+\n+2012-07-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* go-lang.c (lang_decl): Add variable_size GTY option.\n+\n+2012-05-09  Ian Lance Taylor  <iant@google.com>\n+\n+\t* lang.opt: Add -fgo-pkgpath.\n+\t* go-lang.c (go_pkgpath): New static variable.\n+\t(go_prefix): New static variable.\n+\t(go_langhook_init): Pass go_pkgpath and go_prefix to\n+\tgo_create_gogo.\n+\t(go_langhook_handle_option): Handle -fgo-pkgpath.  Change\n+\t-fgo-prefix handling to just set go_prefix.\n+\t* go-c.h (go_set_prefix): Don't declare.\n+\t(go_create_gogo): Add pkgpath and prefix to declaration.\n+\t* go-gcc.cc (Gcc_backend::global_variable): Change unique_prefix\n+\tto pkgpath.  Don't include the package name in the asm name.\n+\t* gccgo.texi (Invoking gccgo): Document -fgo-pkgpath.  Update the\n+\tdocs for -fgo-prefix.\n+\n+2012-04-23  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_init): Set MPFR precision to 256.\n+\n+2012-04-20  Ian Lance Taylor  <iant@google.com>\n+\n+\t* lang.opt: Add -fgo-check-divide-zero and\n+\t-fgo-check-divide-overflow.\n+\t* gccgo.texi (Invoking gccgo): Document new options.\n+\n+2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* go-gcc.cc (Gcc_backend::switch_statement): Build SWITCH_EXPR\n+\twith NULL_TREE type instead of void_type_node.\n+\n+2012-03-09  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::assignment_statement): Convert the rhs\n+\tto the lhs type if necessary.\n+\n+2012-03-08  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::init_statement): Don't initialize a\n+\tzero-sized variable.\n+\t(go_non_zero_struct): New global variable.\n+\t(Gcc_backend::non_zero_size_type): New function.\n+\t(Gcc_backend::global_variable): Don't build an assignment for a\n+\tzero-sized value.\n+\t* go-c.h (go_non_zero_struct): Declare.\n+\t* config-lang.in (gtfiles): Add go-c.h.\n+\n+2012-02-29  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (class Gcc_tree): Add set_tree method.\n+\t(set_placeholder_pointer_type): When setting to a pointer to\n+\terror, set to error_mark_node.\n+\n+2012-02-23  Richard Guenther  <rguenther@suse.de>\n+\n+\t* go-gcc.cc (Gcc_backend::placeholder_pointer_type): Use\n+\tbuild_distinct_type_copy.\n+\n+2012-02-17  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (go/import.o): Add dependency on $(GO_LEX_H).\n+\n+2012-02-17  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gospec.c (lang_specific_driver): If linking, and no -o option\n+\twas used, add one.\n+\n+2012-02-14  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR go/48411\n+\t* Make-lang.in (gccgo-cross$(exeext)): New target.\n+\t(go.all.cross): Depend on gccgo-cross$(exeext) instead of\n+\tgccgo$(exeext).\n+\t(go.install-common): Only install GCCGO_TARGET_INSTALL_NAME if\n+\tgccgo-cross$(exeext) does not exist.\n+\n+2012-02-07  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gccgo.texi (Function Names): Document //extern instead of\n+\t__asm__.\n+\n+2012-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/52079\n+\t* go-lang.c (go_langhook_type_for_mode): For TImode and 64-bit HWI\n+\treturn build_nonstandard_integer_type result if possible.\n+\n+2012-01-21  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::type_size): Check for error_mark_node.\n+\t(Gcc_backend::type_alignment): Likewise.\n+\t(Gcc_backend::type_field_alignment): Likewise.\n+\t(Gcc_backend::type_field_offset): Likewise.\n+\n+2012-01-20  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::placeholder_struct_type): Permit name to\n+\tbe empty.\n+\t(Gcc_backend::set_placeholder_struct_type): Likewise.\n+\n+2012-01-17  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gospec.c (lang_specific_driver): If we see -S without -o, add -o\n+\tBASE.s rather than -o BASE.o.\n+\n+2012-01-11  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_init): Initialize void_list_node before\n+\tcalling go_create_gogo.\n+\n+2012-01-10  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::type_size): New function.\n+\t(Gcc_backend::type_alignment): New function.\n+\t(Gcc_backend::type_field_alignment): New function.\n+\t(Gcc_backend::type_field_offset): New function.\n+\t* go-backend.c (go_type_alignment): Remove.\n+\t* go-c.h (go_type_alignment): Don't declare.\n+\n+2011-12-27  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::set_placeholder_struct_type): Use\n+\tbuild_distinct_type_copy rather than build_variant_type_copy.\n+\t(Gcc_backend::set_placeholder_array_type): Likewise.\n+\t(Gcc_backend::named_type): Add special handling for builtin\n+\tbasic types.\n+\n+2011-12-22  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::set_placeholder_pointer_type): Arrange\n+\tfor the type name to have a DECL_ORIGINAL_TYPE as gcc expects.\n+\t(Gcc_backend::set_placeholder_struct_type): Likewise.\n+\t(Gcc_backend::set_placeholder_array_type): Likewise.\n+\t(Gcc_backend::named_type): Set DECL_ORIGINAL_TYPE.\n+\n+2011-12-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-backend.c: #include \"simple-object.h\" and \"intl.h\".\n+\t(GO_EXPORT_SEGMENT_NAME): Define if not defined.\n+\t(GO_EXPORT_SECTION_NAME): Likewise.\n+\t(go_write_export_data): Use GO_EXPORT_SECTION_NAME.\n+\t(go_read_export_data): New function.\n+\t* go-c.h (go_read_export_data): Declare.\n+\n+2011-11-29  Sanjoy Das  <thedigitalangel@gmail.com>\n+\t    Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-location.h: New file.\n+\t* go-linemap.cc: New file.\n+\t* go-gcc.cc: Change all uses of source_location to Location.\n+\t* Make-lang.in (GO_OBJS): Add go/go-linemap.o.\n+\t(GO_LINEMAP_H): New variable.\n+\t(GO_LEX_H): Use $(GO_LINEMAP_H).\n+\t(GO_GOGO_H, GO_TYPES_H, GO_IMPORT_H): Likewise.\n+\t(go/go-linemap.o): New target.\n+\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Make-lang.in (gospec.o): Pass SHLIB instead of SHLIB_LINK.\n+\n+2011-08-24  Roberto Lublinerman  <rluble@gmail.com>\n+\n+\t* lang.opt: Add fgo-optimize-.\n+\t* go-lang.c (go_langhook_handle_option): Handle OPT_fgo_optimize.\n+\t* go-c.h (go_enable_optimize): Declare.\n+\t* Make-lang.in (GO_OBJS): Add go/go-optimize.o.\n+\t(GO_EXPORT_H): Define.\n+\t(GO_IMPORT_H): Add $(GO_EXPORT_H).\n+\t(GO_AST_DUMP_H): Define.\n+\t(go/ast-dump.o, go/statements.o): Use GO_AST_DUMP_H.\n+\t(go/export.o, go/gogo.o, go/import.o): Use GO_EXPORT_H.\n+\t(go/types.o): Likewise.\n+\t(go/expressions.o): Use GO_AST_DUMP_H and GO_EXPORT_H.\n+\t(go/go-optimize.o): New target.\n+\n+2011-08-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (CFLAGS-go/go-lang.o): New.\n+\t(go/go-lang.o): Remove explicit compilation rule.\n+\n+2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Make-lang.in (gccgo$(exeext)): Add $(EXTRA_GCC_LIBS).\n+\n+2011-08-02  Roberto Lublinerman  <rluble@gmail.com>\n+\n+\t* Make-lang.in (GO_OBJS): Add go/ast-dump.o.\n+\t(go/ast-dump.o): New target.\n+\t(go/expressions.o): Depend on go/gofrontend/ast-dump.h.\n+\t(go/statements.o): Likewise.\n+\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* go-lang.c (go_langhook_init):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n+2011-06-14  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (go/go-lang.o, go/go-backend.o): Update\n+\tdependencies.\n+\t* go-backend.c: Include common/common-target.h.\n+\t(go_write_export_data): Use targetm_common.have_named_sections.\n+\t* go-lang.c: Include common/common-target.h.\n+\t(go_langhook_init_options_struct): Use\n+\ttargetm_common.supports_split_stack.\n+\n+2011-06-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (go/expressions.o): Depend on $(GO_RUNTIME_H).\n+\n+2011-06-10  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc: Include \"toplev.h\".\n+\t(Gcc_backend::immutable_struct): New function.\n+\t(Gcc_backend::immutable_struct_set_init): New function.\n+\t(Gcc_backend::immutable_struct_reference): New function.\n+\t* Make-lang.in (go/go-gcc.o): Depend on toplev.h.\n+\n+2011-06-09  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::zero_expression): New function.\n+\n+2011-06-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* go-lang.c (go_langhook_init): Do not set\n+\tsize_type_node or call set_sizetype.\n+\n+2011-05-27  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-backend.c: Include \"output.h\".\n+\t(go_write_export_data): New function.\n+\t* go-c.h (go_write_export_data): Declare.\n+\t* Make-lang.in (go/go-backend.o): Depend on output.h.\n+\t(go/export.o): Depend on $(GO_C_H).  Do not depend on\n+\t$(MACHMODE_H), output.h, or $(TARGET_H).\n+\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GCCGO_OBJS): Remove prefix.o.\n+\t(gccgo$(exeext)): Use libcommon-target.a.\n+\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GCCGO_OBJS): Remove intl.o and version.o.\n+\n+2011-05-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::function_type): When building a struct\n+\tfor multiple results, check that all fields types have a size.\n+\t(Gcc_backend::placeholder_pointer_type): Permit name to be empty.\n+\n+2011-05-12  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::local_variable): Add is_address_taken\n+\tparameter.\n+\t(Gcc_backend::parameter_variable): Likewise.\n+\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* go-lang.c (global_bindings_p): Return bool and simplify.\n+\n+2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* go-gcc.cc (Gcc_backend::switch_statement): Call build_case_label.\n+\n+2011-05-04  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::struct_type): Call fill_in_struct.\n+\t(Gcc_backend::fill_in_struct): New function.\n+\t(Gcc_backend::array_type): Implement.\n+\t(Gcc_backend::fill_in_array): New function.\n+\t(Gcc_backend::placeholder_pointer_type): New function.\n+\t(Gcc_backend::set_placeholder_pointer_type): New function.\n+\t(Gcc_backend::set_placeholder_function_type): New function.\n+\t(Gcc_backend::placeholder_struct_type): New function.\n+\t(Gcc_backend::set_placeholder_struct_type): New function.\n+\t(Gcc_backend::placeholder_array_type): New function.\n+\t(Gcc_backend::set_placeholder_array_type): New function.\n+\t(Gcc_backend::named_type): New function.\n+\t(Gcc_backend::circular_pointer_type): New function.\n+\t(Gcc_backend::is_circular_pointer_type): New function.\n+\n+2011-04-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::struct_type): Implement.\n+\n+2011-04-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::error_type): Implement.\n+\t(Gcc_backend::string_type): Remove.\n+\t(Gcc_backend::function_type): Change signature and implement.\n+\t(Gcc_backend::struct_type): Change signature.\n+\t(Gcc_backend::slice_type, Gcc_backend::map_type): Remove.\n+\t(Gcc_backend::channel_type, Gcc_backend::interface_type): Remove.\n+\t(Gcc_backend::pointer_type): Check for error.\n+\t* Make-lang.in (go/types.o): Depend on go/gofrontend/backend.h.\n+\n+2011-04-25  Evan Shaw  <edsrzf@gmail.com>\n+\n+\t* go-gcc.c (class Gcc_tree): Make get_tree const.\n+\t(Gcc_backend::void_type): Implement.\n+\t(Gcc_backend::bool_type): Implement.\n+\t(Gcc_backend::integer_type): Implement.\n+\t(Gcc_backend::float_type): Implement.\n+\t(Gcc_backend::complex_type): New function.\n+\t(Gcc_backend::pointer_type): New function.\n+\t(Gcc_backend::make_type): New function.\n+\t(type_to_tree): New function.\n+\n+2011-04-21  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-system.h (go_assert, go_unreachable): Define.\n+\n+2011-04-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-system.h: Include \"intl.h\".\n+\t* Make-lang.in (GO_SYSTEM_H): Add intl.h.\n+\t(go/statements.o): Remove dependencies on intl.h $(TREE_H)\n+\t$(GIMPLE_H) convert.h tree-iterator.h $(TREE_FLOW_H) $(REAL_H).\n+\n+2011-04-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::temporary_variable): New function.\n+\n+2011-04-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (class Bblock): Define.\n+\t(Gcc_backend::if_statement): Change then_block and else_block to\n+\tBblock*.\n+\t(Gcc_backend::block): New function.\n+\t(Gcc_backend::block_add_statements): New function.\n+\t(Gcc_backend::block_statement): New function.\n+\t(tree_to_block, block_to_tree): New functions.\n+\n+2011-04-18  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc: Include \"go-c.h\".\n+\t(class Bvariable): Define.\n+\t(Gcc_backend::init_statement): New function.\n+\t(Gcc_backend::global_variable): New function.\n+\t(Gcc_backend::global_variable_set_init): New function.\n+\t(Gcc_backend::local_variable): New function.\n+\t(Gcc_backend::parameter_variable): New function.\n+\t(tree_to_type, var_to_tree): New functions.\n+\t* Make-lang.in (go/go-gcc.o): Depend on $(GO_C_H).\n+\t* (go/gogo-tree.o): Depend on go/gofrontend/backend.h.\n+\n+2011-04-15  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::compound_statement): New function.\n+\t(Gcc_backend::assignment_statement): Use error_statement.\n+\t(Gcc_backend::return_statement): Likewise.\n+\t(Gcc_backend::if_statement): Likewise.\n+\t(Gcc_backend::switch_statement): Likewise.\n+\t(Gcc_backend::statement_list): Likewise.\n+\n+2011-04-14  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::error_statement): New function.\n+\n+2011-04-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (go/gogo-tree.o): depend on $(GO_RUNTIME_H).\n+\n+2011-04-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (GO_OBJS): Add go/runtime.o.\n+\t(GO_RUNTIME_H): New variable.\n+\t(go/runtime.o): New target.\n+\t(go/gogo.o): Depend on $(GO_RUNTIME_H).\n+\t(go/statements.o): Likewise.\n+\n+2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* go-lang.c (union lang_tree_node): Check for TS_COMMON before\n+\tcalling TREE_CHAIN.\n+\n+2011-04-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (if_statement): Use build3_loc.\n+\t(Gcc_backend::switch_statement): New function.\n+\t(Gcc_backend::statement_list): New function.\n+\n+2011-04-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::if_statement): New function.\n+\t(tree_to_stat): New function.\n+\t(expr_to_tree): Renamed from expression_to_tree.\n+\t(stat_to_tree): Renamed from statement_to_tree.\n+\n+2011-04-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::expression_statement): New function.\n+\n+2011-04-04  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.c (class Blabel): Define.\n+\t(Gcc_backend::make_expression): New function.\n+\t(get_identifier_from_string): New function.\n+\t(Gcc_backend::label): New function.\n+\t(Gcc_backend::label_definition_statement): New function.\n+\t(Gcc_backend::goto_statement): New function.\n+\t(Gcc_backend::label_address): New function.\n+\t(expression_to_tree): New function.\n+\t* Make-lang.in (go/expressions.o): Depend on\n+\tgo/gofrontend/backend.h.\n+\t(go/gogo.o): Likewise.\n+\n+2011-04-04  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc: #include \"tree-iterator.h\", \"gimple.h\", and \"gogo.h\".\n+\t(class Bfunction): Define.\n+\t(Gcc_backend::assignment_statement): Rename from assignment.\n+\tCheck for errors.\n+\t(Gcc_backend::return_statement): New function.\n+\t(tree_to_function): New function.\n+\t* Make-lang.in (go/go-gcc.o): Depend on tree-iterator.h,\n+\t$(GIMPLE_H), and $(GO_GOGO_H).\n+\n+2011-04-03  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc: New file.\n+\t* Make-lang.in (GO_OBJS): Add go/go-gcc.o.\n+\t(go/go-gcc.o): New target.\n+\t(go/go.o): Depend on go/gofrontend/backend.h.\n+\t(go/statements.o): Likewise.\n+\n+2011-02-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* gccgo.texi (Top, Import and Export): Fix a typo and a markup nit.\n+\n+2011-02-08  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_init_options_struct): Set\n+\tfrontend_set_flag_errno_math.  Don't set x_flag_trapping_math.\n+\n+2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gospec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n+\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n+\n+2011-01-21  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-lang.c (go_langhook_init): Omit float_type_size when calling\n+\tgo_create_gogo.\n+\t* go-c.h: Update declaration of go_create_gogo.\n+\n+2011-01-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-backend.c: Include \"rtl.h\" and \"target.h\".\n+\t(go_imported_unsafe): New function.\n+\t* go-c.h (go_imported_unsafe): Declare.\n+\t* Make-lang.in (go/go-backend.o): Depend on $(RTL_H).\n+\t(go/gogo-tree.o): Remove dependency on $(RTL_H).\n+\t(go/unsafe.o): Depend on $(GO_C_H).\n+\n+2010-12-31  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR go/47113\n+\t* go-backend.c: (go_field_alignment): Add ATTRIBUTE_UNUSED to\n+\tvariable \u2018field\u2019 .\n+\n+2010-12-21  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (check-go): Remove.\n+\t(lang_checks_parallelized): Add check-go.\n+\t(check_go_parallelize): Set.\n+\n+2010-12-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gospec.c (lang_specific_driver): Add a -o option if not linking\n+\tand there is no -o option already.\n+\n+2010-12-07  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR tree-optimization/46805\n+\tPR tree-optimization/46833\n+\t* go-lang.c (go_langhook_type_for_mode): Handle vector modes.\n+\n+2010-12-06  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR other/46789\n+\tPR bootstrap/46812\n+\t* go-lang.c (go_char_p): Define type and vectors.\n+\t(go_search_dirs): New static variable.\n+\t(go_langhook_handle_option): Use version and version/machine\n+\tdirectories for -L.\n+\t(go_langhook_post_options): Add non-specific -L paths.\n+\t* Make-lang.in (go/go-lang.o): Define DEFAULT_TARGET_VERSION and\n+\tDEFAULT_TARGET_MACHINE when compiling.\n+\t* gccgo.texi (Invoking gccgo): Only document -L for linking.\n+\t(Import and Export): Don't mention -L for finding import files.\n+\n+2010-12-03  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR bootstrap/46776\n+\t* go-backend.c: New file.\n+\t* go-c.h (go_type_alignment): Declare.\n+\t(go_field_alignment, go_trampoline_info): Declare.\n+\t* Make-lang.in (GO_OBJS): Add go/go-backend.o.\n+\t(go/go-backend.o): New target.\n+\t(go/go-lang.o): Make dependencies match source file.\n+\t(go/expressions.o): Don't depend on $(TM_H) $(TM_P_H).\n+\t(go/gogo-tree.o): Don't depend on $(TM_H).\n+\n+2010-12-03  Ian Lance Taylor  <iant@google.com>\n+\n+\t* config-lang.in (build_by_default): Set to no.\n+\n+2010-12-02  Ian Lance Taylor  <iant@google.com>\n+\n+\tGo frontend added to gcc repository.\n \f\n-Copyright (C) 2014 Free Software Foundation, Inc.\n+Copyright (C) 2010-2014 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "f6e6599bda310642117832a259352f84b508b001", "filename": "gcc/go/ChangeLog-2013", "status": "removed", "additions": 0, "deletions": 745, "changes": 745, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98db73df84446b2d9e2ef37e16d1381b986b3a69/gcc%2Fgo%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98db73df84446b2d9e2ef37e16d1381b986b3a69/gcc%2Fgo%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog-2013?ref=98db73df84446b2d9e2ef37e16d1381b986b3a69", "patch": "@@ -1,745 +0,0 @@\n-2013-12-16  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::struct_field_expression): New function.\n-\n-2013-12-11  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_post_options): Disable sibling calls by\n-\tdefault.\n-\n-2013-12-10  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (check_go_parallelize): Test go-test.exp r* tests\n-\tseparately.\n-\n-2013-12-05  Ian Lance Taylor  <iant@google.com>\n-\n-\tRevert this change; no longer required.\n-\t2013-11-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_post_options): If\n-\t-fisolate-erroneous-paths was turned on by an optimization option,\n-\tturn it off.\n-\n-2013-11-23  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::function_type): Add result_struct\n-\tparameter.\n-\n-2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n-\n-\t* go-gcc.cc: Add required include files from gimple.h.\n-\t* go-lang.c: Likewise\n-\n-2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n-\n-\t* gofrontend/expressions.cc: Replace tree_low_cst (..., 0) with\n-\ttree_to_shwi throughout.\n-\n-2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n-\n-\t* gofrontend/expressions.cc: Replace host_integerp (..., 0) with\n-\ttree_fits_shwi_p throughout.\n-\n-2013-11-14  Andrew MacLeod  <amacleod@redhat.com>\n-\n-\t* go-lang.c: Include only gimplify.h and gimple.h as needed.\n-\n-2013-11-14  Diego Novillo  <dnovillo@google.com>\n-\n-\t* go-backend.c: Include stor-layout.h.\n-\t* go-gcc.cc: Include stringpool.h.\n-\tInclude stor-layout.h.\n-\tInclude varasm.h.\n-\t* go-lang.c: Include stor-layout.h.\n-\n-2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n-\n-\t* go-lang.c: Include gimplify.h.\n-\n-2013-11-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_post_options): If\n-\t-fisolate-erroneous-paths was turned on by an optimization option,\n-\tturn it off.\n-\n-2013-10-14  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::address_expression): New function.\n-\n-2013-10-11  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::function_code_expression): New\n-\tfunction.\n-\n-2013-10-10  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::error_function): New function.\n-\t(Gcc_backend::function): New function.\n-\t(Gcc_backend::make_function): New function.\n-\t(function_to_tree): New function.\n-\n-2013-10-04  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::convert_expression): New function.\n-\n-2013-10-02  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc: Include \"real.h\" and \"realmpfr.h\".\n-\t(Gcc_backend::integer_constant_expression): New function.\n-\t(Gcc_backend::float_constant_expression): New function.\n-\t(Gcc_backend::complex_constant_expression): New function.\n-\n-2013-09-30  Chris Manghane  <cmang@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::error_expression): New function.\n-\t(Gcc_backend::var_expression): New function.\n-\t(Gcc_backend::indirect_expression): New function.\n-\n-2013-09-25  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Make-lang.in (gospec.o): Remove.\n-\t(CFLAGS-go/gospec.o): New variable.\n-\t(GCCGO_OBJS): Update to use go/gospec.o.\n-\t(go_OBJS): Define.\n-\t(GO_SYSTEM_H, GO_C_H, GO_LINEMAP_H, GO_LEX_H, GO_PARSE_H)\n-\t(GO_GOGO_H, GO_TYPES_H, GO_STATEMENTS_H, GO_EXPRESSIONS_H)\n-\t(GO_EXPORT_H, GO_IMPORT_H, GO_RUNTIME_H, GO_AST_DUMP_H)\n-\t(go/go-backend.o, go/go-lang.o, go/go-gcc.o, go/go-linemap.o)\n-\t(go/ast-dump.o, go/dataflow.o, go/export.o, go/expressions.o)\n-\t(go/go.o, go/go-dump.o, go/go-optimize.o, go/gogo-tree.o)\n-\t(go/gogo.o, go/import.o, go/import-archive.o, go/lex.o)\n-\t(go/parse.o, go/runtime.o, go/statements.o, go/types.o)\n-\t(go/unsafe.o): Remove.\n-\t(CFLAGS-go/go-gcc.o, CFLAGS-go/go-linemap.o): New variables.\n-\t(go/%.o: go/gofrontend/%.cc): Use COMPILE and POSTCOMPILE.\n-\n-2013-09-25  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Make-lang.in (gospec.o): Don't use subshell.\n-\n-2013-08-28  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::immutable_struct): Set TREE_PUBLIC if\n-\tthe struct is not hidden.\n-\t(Gcc_backend::immutable_struct_set_init): Don't set TREE_PUBLIC.\n-\n-2013-08-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::immutable_struct_set_init): Use\n-\tcompute_reloc_for_constant.\n-\n-2013-08-02  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (immutable_struct_set_init): Always call\n-\tresolve_unique_section.\n-\n-2013-07-24  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::non_zero_size_type): If a struct has a\n-\tfields, recreate those fields with the first one with a non-zero\n-\tsize.\n-\n-2013-07-23  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-backend.c: Don't #include \"rtl.h\".\n-\t(go_imported_unsafe): Don't call init_varasm_once.\n-\t* Make-lang.in (go/go-backend.o): Don't depend on $(RTL_H).\n-\n-2013-07-23  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c: Don't #include \"except.h\".\n-\t* Make-lang.in (go/go-lang.o): Don't depend on $(EXCEPT_H).\n-\n-2013-06-18  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::immutable_struct): Add is_hidden\n-\tparameter.\n-\t(Gcc_backend::immutable_struct_set_init): Likewise.\n-\n-2013-05-16  Jason Merrill  <jason@redhat.com>\n-\n-\t* Make-lang.in (go1$(exeext)): Use link mutex.\n-\n-2013-01-16  Shenghou Ma  <minux.ma@gmail.com>\n-\n-\t* gospec.c: pass -u pthread_create to linker when static linking.\n-\n-2012-12-21  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR bootstrap/54659\n-\t* go-system.h: Don't include <cstdio>.\n-\n-2012-12-18  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR go/55201\n-\t* gospec.c: Revert last patch.\n-\n-2012-12-18  Andreas Schwab  <schwab@linux-m68k.org>\n-\n-\tPR go/55201\n-\t* gospec.c (LIBATOMIC): Define.\n-\t(LIBATOMIC_PROFILE): Define.\n-\t(lang_specific_driver): Add LIBATOMIC[_PROFILE] option.\n-\n-2012-11-29  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc: Include \"output.h\".\n-\t(global_variable): Add is_unique_section parameter.\n-\t(global_variable_set_init): Adjust unique section if necessary.\n-\t* Make-lang.in (go/go-gcc.o): Add dependency on output.h.\n-\n-2012-11-17  Diego Novillo  <dnovillo@google.com>\n-\n-\tAdjust for new vec API (http://gcc.gnu.org/wiki/cxx-conversion/cxx-vec)\n-\n-\t* go-lang.c: Use new vec API in vec.h.\n-\n-2012-11-16  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (gccgo$(exeext)): Add + at start of command.\n-\t(go1$(exeext)): Likewise.\n-\n-2012-10-30  Ian Lance Taylor  <iant@google.com>\n-\n-\t* lang.opt (-fgo-relative-import-path): New option.\n-\t* go-lang.c (go_relative_import_path): New static variable.\n-\t(go_langhook_init): Pass go_relative_import_path to\n-\tgo_create_gogo.\n-\t(go_langhook_handle_option): Handle -fgo-relative-import-path.\n-\t* go-c.h (go_create_gogo): Update declaration.\n-\t* gccgo.texi (Invoking gccgo): Document\n-\t-fgo-relative-import-path.\n-\n-2012-09-17  Ian Lance Taylor  <iant@google.com>\n-\n-\t* config-lang.in (target_libs): Add target-libbacktrace.\n-\n-2012-09-16  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (go/gogo.o): Depend on filenames.h.\n-\n-2012-08-14   Diego Novillo  <dnovillo@google.com>\n-\n-\tMerge from cxx-conversion branch.  Configury.\n-\n-\t* go-c.h: Remove all handlers of ENABLE_BUILD_WITH_CXX.\n-\t* go-gcc.cc: Likewise.\n-\t* go-system.h: Likewise.\n-\n-2012-07-24  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* go-lang.c (lang_decl): Add variable_size GTY option.\n-\n-2012-05-09  Ian Lance Taylor  <iant@google.com>\n-\n-\t* lang.opt: Add -fgo-pkgpath.\n-\t* go-lang.c (go_pkgpath): New static variable.\n-\t(go_prefix): New static variable.\n-\t(go_langhook_init): Pass go_pkgpath and go_prefix to\n-\tgo_create_gogo.\n-\t(go_langhook_handle_option): Handle -fgo-pkgpath.  Change\n-\t-fgo-prefix handling to just set go_prefix.\n-\t* go-c.h (go_set_prefix): Don't declare.\n-\t(go_create_gogo): Add pkgpath and prefix to declaration.\n-\t* go-gcc.cc (Gcc_backend::global_variable): Change unique_prefix\n-\tto pkgpath.  Don't include the package name in the asm name.\n-\t* gccgo.texi (Invoking gccgo): Document -fgo-pkgpath.  Update the\n-\tdocs for -fgo-prefix.\n-\n-2012-04-23  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_init): Set MPFR precision to 256.\n-\n-2012-04-20  Ian Lance Taylor  <iant@google.com>\n-\n-\t* lang.opt: Add -fgo-check-divide-zero and\n-\t-fgo-check-divide-overflow.\n-\t* gccgo.texi (Invoking gccgo): Document new options.\n-\n-2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* go-gcc.cc (Gcc_backend::switch_statement): Build SWITCH_EXPR\n-\twith NULL_TREE type instead of void_type_node.\n-\n-2012-03-09  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::assignment_statement): Convert the rhs\n-\tto the lhs type if necessary.\n-\n-2012-03-08  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::init_statement): Don't initialize a\n-\tzero-sized variable.\n-\t(go_non_zero_struct): New global variable.\n-\t(Gcc_backend::non_zero_size_type): New function.\n-\t(Gcc_backend::global_variable): Don't build an assignment for a\n-\tzero-sized value.\n-\t* go-c.h (go_non_zero_struct): Declare.\n-\t* config-lang.in (gtfiles): Add go-c.h.\n-\n-2012-02-29  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (class Gcc_tree): Add set_tree method.\n-\t(set_placeholder_pointer_type): When setting to a pointer to\n-\terror, set to error_mark_node.\n-\n-2012-02-23  Richard Guenther  <rguenther@suse.de>\n-\n-\t* go-gcc.cc (Gcc_backend::placeholder_pointer_type): Use\n-\tbuild_distinct_type_copy.\n-\n-2012-02-17  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (go/import.o): Add dependency on $(GO_LEX_H).\n-\n-2012-02-17  Ian Lance Taylor  <iant@google.com>\n-\n-\t* gospec.c (lang_specific_driver): If linking, and no -o option\n-\twas used, add one.\n-\n-2012-02-14  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR go/48411\n-\t* Make-lang.in (gccgo-cross$(exeext)): New target.\n-\t(go.all.cross): Depend on gccgo-cross$(exeext) instead of\n-\tgccgo$(exeext).\n-\t(go.install-common): Only install GCCGO_TARGET_INSTALL_NAME if\n-\tgccgo-cross$(exeext) does not exist.\n-\n-2012-02-07  Ian Lance Taylor  <iant@google.com>\n-\n-\t* gccgo.texi (Function Names): Document //extern instead of\n-\t__asm__.\n-\n-2012-02-01  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR target/52079\n-\t* go-lang.c (go_langhook_type_for_mode): For TImode and 64-bit HWI\n-\treturn build_nonstandard_integer_type result if possible.\n-\n-2012-01-21  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::type_size): Check for error_mark_node.\n-\t(Gcc_backend::type_alignment): Likewise.\n-\t(Gcc_backend::type_field_alignment): Likewise.\n-\t(Gcc_backend::type_field_offset): Likewise.\n-\n-2012-01-20  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::placeholder_struct_type): Permit name to\n-\tbe empty.\n-\t(Gcc_backend::set_placeholder_struct_type): Likewise.\n-\n-2012-01-17  Ian Lance Taylor  <iant@google.com>\n-\n-\t* gospec.c (lang_specific_driver): If we see -S without -o, add -o\n-\tBASE.s rather than -o BASE.o.\n-\n-2012-01-11  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_init): Initialize void_list_node before\n-\tcalling go_create_gogo.\n-\n-2012-01-10  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::type_size): New function.\n-\t(Gcc_backend::type_alignment): New function.\n-\t(Gcc_backend::type_field_alignment): New function.\n-\t(Gcc_backend::type_field_offset): New function.\n-\t* go-backend.c (go_type_alignment): Remove.\n-\t* go-c.h (go_type_alignment): Don't declare.\n-\n-2011-12-27  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::set_placeholder_struct_type): Use\n-\tbuild_distinct_type_copy rather than build_variant_type_copy.\n-\t(Gcc_backend::set_placeholder_array_type): Likewise.\n-\t(Gcc_backend::named_type): Add special handling for builtin\n-\tbasic types.\n-\n-2011-12-22  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::set_placeholder_pointer_type): Arrange\n-\tfor the type name to have a DECL_ORIGINAL_TYPE as gcc expects.\n-\t(Gcc_backend::set_placeholder_struct_type): Likewise.\n-\t(Gcc_backend::set_placeholder_array_type): Likewise.\n-\t(Gcc_backend::named_type): Set DECL_ORIGINAL_TYPE.\n-\n-2011-12-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-backend.c: #include \"simple-object.h\" and \"intl.h\".\n-\t(GO_EXPORT_SEGMENT_NAME): Define if not defined.\n-\t(GO_EXPORT_SECTION_NAME): Likewise.\n-\t(go_write_export_data): Use GO_EXPORT_SECTION_NAME.\n-\t(go_read_export_data): New function.\n-\t* go-c.h (go_read_export_data): Declare.\n-\n-2011-11-29  Sanjoy Das  <thedigitalangel@gmail.com>\n-\t    Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-location.h: New file.\n-\t* go-linemap.cc: New file.\n-\t* go-gcc.cc: Change all uses of source_location to Location.\n-\t* Make-lang.in (GO_OBJS): Add go/go-linemap.o.\n-\t(GO_LINEMAP_H): New variable.\n-\t(GO_LEX_H): Use $(GO_LINEMAP_H).\n-\t(GO_GOGO_H, GO_TYPES_H, GO_IMPORT_H): Likewise.\n-\t(go/go-linemap.o): New target.\n-\n-2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* Make-lang.in (gospec.o): Pass SHLIB instead of SHLIB_LINK.\n-\n-2011-08-24  Roberto Lublinerman  <rluble@gmail.com>\n-\n-\t* lang.opt: Add fgo-optimize-.\n-\t* go-lang.c (go_langhook_handle_option): Handle OPT_fgo_optimize.\n-\t* go-c.h (go_enable_optimize): Declare.\n-\t* Make-lang.in (GO_OBJS): Add go/go-optimize.o.\n-\t(GO_EXPORT_H): Define.\n-\t(GO_IMPORT_H): Add $(GO_EXPORT_H).\n-\t(GO_AST_DUMP_H): Define.\n-\t(go/ast-dump.o, go/statements.o): Use GO_AST_DUMP_H.\n-\t(go/export.o, go/gogo.o, go/import.o): Use GO_EXPORT_H.\n-\t(go/types.o): Likewise.\n-\t(go/expressions.o): Use GO_AST_DUMP_H and GO_EXPORT_H.\n-\t(go/go-optimize.o): New target.\n-\n-2011-08-24  Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* Make-lang.in (CFLAGS-go/go-lang.o): New.\n-\t(go/go-lang.o): Remove explicit compilation rule.\n-\n-2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* Make-lang.in (gccgo$(exeext)): Add $(EXTRA_GCC_LIBS).\n-\n-2011-08-02  Roberto Lublinerman  <rluble@gmail.com>\n-\n-\t* Make-lang.in (GO_OBJS): Add go/ast-dump.o.\n-\t(go/ast-dump.o): New target.\n-\t(go/expressions.o): Depend on go/gofrontend/ast-dump.h.\n-\t(go/statements.o): Likewise.\n-\n-2011-07-06  Richard Guenther  <rguenther@suse.de>\n-\n-\t* go-lang.c (go_langhook_init):\n-\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n-\n-2011-06-14  Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* Make-lang.in (go/go-lang.o, go/go-backend.o): Update\n-\tdependencies.\n-\t* go-backend.c: Include common/common-target.h.\n-\t(go_write_export_data): Use targetm_common.have_named_sections.\n-\t* go-lang.c: Include common/common-target.h.\n-\t(go_langhook_init_options_struct): Use\n-\ttargetm_common.supports_split_stack.\n-\n-2011-06-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (go/expressions.o): Depend on $(GO_RUNTIME_H).\n-\n-2011-06-10  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc: Include \"toplev.h\".\n-\t(Gcc_backend::immutable_struct): New function.\n-\t(Gcc_backend::immutable_struct_set_init): New function.\n-\t(Gcc_backend::immutable_struct_reference): New function.\n-\t* Make-lang.in (go/go-gcc.o): Depend on toplev.h.\n-\n-2011-06-09  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::zero_expression): New function.\n-\n-2011-06-07  Richard Guenther  <rguenther@suse.de>\n-\n-\t* go-lang.c (go_langhook_init): Do not set\n-\tsize_type_node or call set_sizetype.\n-\n-2011-05-27  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-backend.c: Include \"output.h\".\n-\t(go_write_export_data): New function.\n-\t* go-c.h (go_write_export_data): Declare.\n-\t* Make-lang.in (go/go-backend.o): Depend on output.h.\n-\t(go/export.o): Depend on $(GO_C_H).  Do not depend on\n-\t$(MACHMODE_H), output.h, or $(TARGET_H).\n-\n-2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* Make-lang.in (GCCGO_OBJS): Remove prefix.o.\n-\t(gccgo$(exeext)): Use libcommon-target.a.\n-\n-2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* Make-lang.in (GCCGO_OBJS): Remove intl.o and version.o.\n-\n-2011-05-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::function_type): When building a struct\n-\tfor multiple results, check that all fields types have a size.\n-\t(Gcc_backend::placeholder_pointer_type): Permit name to be empty.\n-\n-2011-05-12  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::local_variable): Add is_address_taken\n-\tparameter.\n-\t(Gcc_backend::parameter_variable): Likewise.\n-\n-2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n-\n-\t* go-lang.c (global_bindings_p): Return bool and simplify.\n-\n-2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n-\n-\t* go-gcc.cc (Gcc_backend::switch_statement): Call build_case_label.\n-\n-2011-05-04  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::struct_type): Call fill_in_struct.\n-\t(Gcc_backend::fill_in_struct): New function.\n-\t(Gcc_backend::array_type): Implement.\n-\t(Gcc_backend::fill_in_array): New function.\n-\t(Gcc_backend::placeholder_pointer_type): New function.\n-\t(Gcc_backend::set_placeholder_pointer_type): New function.\n-\t(Gcc_backend::set_placeholder_function_type): New function.\n-\t(Gcc_backend::placeholder_struct_type): New function.\n-\t(Gcc_backend::set_placeholder_struct_type): New function.\n-\t(Gcc_backend::placeholder_array_type): New function.\n-\t(Gcc_backend::set_placeholder_array_type): New function.\n-\t(Gcc_backend::named_type): New function.\n-\t(Gcc_backend::circular_pointer_type): New function.\n-\t(Gcc_backend::is_circular_pointer_type): New function.\n-\n-2011-04-26  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::struct_type): Implement.\n-\n-2011-04-25  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::error_type): Implement.\n-\t(Gcc_backend::string_type): Remove.\n-\t(Gcc_backend::function_type): Change signature and implement.\n-\t(Gcc_backend::struct_type): Change signature.\n-\t(Gcc_backend::slice_type, Gcc_backend::map_type): Remove.\n-\t(Gcc_backend::channel_type, Gcc_backend::interface_type): Remove.\n-\t(Gcc_backend::pointer_type): Check for error.\n-\t* Make-lang.in (go/types.o): Depend on go/gofrontend/backend.h.\n-\n-2011-04-25  Evan Shaw  <edsrzf@gmail.com>\n-\n-\t* go-gcc.c (class Gcc_tree): Make get_tree const.\n-\t(Gcc_backend::void_type): Implement.\n-\t(Gcc_backend::bool_type): Implement.\n-\t(Gcc_backend::integer_type): Implement.\n-\t(Gcc_backend::float_type): Implement.\n-\t(Gcc_backend::complex_type): New function.\n-\t(Gcc_backend::pointer_type): New function.\n-\t(Gcc_backend::make_type): New function.\n-\t(type_to_tree): New function.\n-\n-2011-04-21  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-system.h (go_assert, go_unreachable): Define.\n-\n-2011-04-19  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-system.h: Include \"intl.h\".\n-\t* Make-lang.in (GO_SYSTEM_H): Add intl.h.\n-\t(go/statements.o): Remove dependencies on intl.h $(TREE_H)\n-\t$(GIMPLE_H) convert.h tree-iterator.h $(TREE_FLOW_H) $(REAL_H).\n-\n-2011-04-19  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::temporary_variable): New function.\n-\n-2011-04-19  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (class Bblock): Define.\n-\t(Gcc_backend::if_statement): Change then_block and else_block to\n-\tBblock*.\n-\t(Gcc_backend::block): New function.\n-\t(Gcc_backend::block_add_statements): New function.\n-\t(Gcc_backend::block_statement): New function.\n-\t(tree_to_block, block_to_tree): New functions.\n-\n-2011-04-18  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc: Include \"go-c.h\".\n-\t(class Bvariable): Define.\n-\t(Gcc_backend::init_statement): New function.\n-\t(Gcc_backend::global_variable): New function.\n-\t(Gcc_backend::global_variable_set_init): New function.\n-\t(Gcc_backend::local_variable): New function.\n-\t(Gcc_backend::parameter_variable): New function.\n-\t(tree_to_type, var_to_tree): New functions.\n-\t* Make-lang.in (go/go-gcc.o): Depend on $(GO_C_H).\n-\t* (go/gogo-tree.o): Depend on go/gofrontend/backend.h.\n-\n-2011-04-15  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::compound_statement): New function.\n-\t(Gcc_backend::assignment_statement): Use error_statement.\n-\t(Gcc_backend::return_statement): Likewise.\n-\t(Gcc_backend::if_statement): Likewise.\n-\t(Gcc_backend::switch_statement): Likewise.\n-\t(Gcc_backend::statement_list): Likewise.\n-\n-2011-04-14  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::error_statement): New function.\n-\n-2011-04-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (go/gogo-tree.o): depend on $(GO_RUNTIME_H).\n-\n-2011-04-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (GO_OBJS): Add go/runtime.o.\n-\t(GO_RUNTIME_H): New variable.\n-\t(go/runtime.o): New target.\n-\t(go/gogo.o): Depend on $(GO_RUNTIME_H).\n-\t(go/statements.o): Likewise.\n-\n-2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n-\n-\t* go-lang.c (union lang_tree_node): Check for TS_COMMON before\n-\tcalling TREE_CHAIN.\n-\n-2011-04-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (if_statement): Use build3_loc.\n-\t(Gcc_backend::switch_statement): New function.\n-\t(Gcc_backend::statement_list): New function.\n-\n-2011-04-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::if_statement): New function.\n-\t(tree_to_stat): New function.\n-\t(expr_to_tree): Renamed from expression_to_tree.\n-\t(stat_to_tree): Renamed from statement_to_tree.\n-\n-2011-04-06  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc (Gcc_backend::expression_statement): New function.\n-\n-2011-04-04  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.c (class Blabel): Define.\n-\t(Gcc_backend::make_expression): New function.\n-\t(get_identifier_from_string): New function.\n-\t(Gcc_backend::label): New function.\n-\t(Gcc_backend::label_definition_statement): New function.\n-\t(Gcc_backend::goto_statement): New function.\n-\t(Gcc_backend::label_address): New function.\n-\t(expression_to_tree): New function.\n-\t* Make-lang.in (go/expressions.o): Depend on\n-\tgo/gofrontend/backend.h.\n-\t(go/gogo.o): Likewise.\n-\n-2011-04-04  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc: #include \"tree-iterator.h\", \"gimple.h\", and \"gogo.h\".\n-\t(class Bfunction): Define.\n-\t(Gcc_backend::assignment_statement): Rename from assignment.\n-\tCheck for errors.\n-\t(Gcc_backend::return_statement): New function.\n-\t(tree_to_function): New function.\n-\t* Make-lang.in (go/go-gcc.o): Depend on tree-iterator.h,\n-\t$(GIMPLE_H), and $(GO_GOGO_H).\n-\n-2011-04-03  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-gcc.cc: New file.\n-\t* Make-lang.in (GO_OBJS): Add go/go-gcc.o.\n-\t(go/go-gcc.o): New target.\n-\t(go/go.o): Depend on go/gofrontend/backend.h.\n-\t(go/statements.o): Likewise.\n-\n-2011-02-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n-\n-\t* gccgo.texi (Top, Import and Export): Fix a typo and a markup nit.\n-\n-2011-02-08  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_init_options_struct): Set\n-\tfrontend_set_flag_errno_math.  Don't set x_flag_trapping_math.\n-\n-2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* gospec.c (lang_specific_driver) [HAVE_LD_STATIC_DYNAMIC] Use\n-\tLD_STATIC_OPTION, LD_DYNAMIC_OPTION.\n-\n-2011-01-21  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-lang.c (go_langhook_init): Omit float_type_size when calling\n-\tgo_create_gogo.\n-\t* go-c.h: Update declaration of go_create_gogo.\n-\n-2011-01-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* go-backend.c: Include \"rtl.h\" and \"target.h\".\n-\t(go_imported_unsafe): New function.\n-\t* go-c.h (go_imported_unsafe): Declare.\n-\t* Make-lang.in (go/go-backend.o): Depend on $(RTL_H).\n-\t(go/gogo-tree.o): Remove dependency on $(RTL_H).\n-\t(go/unsafe.o): Depend on $(GO_C_H).\n-\n-2010-12-31  Joern Rennecke  <amylaar@spamcop.net>\n-\n-\tPR go/47113\n-\t* go-backend.c: (go_field_alignment): Add ATTRIBUTE_UNUSED to\n-\tvariable \u2018field\u2019 .\n-\n-2010-12-21  Ian Lance Taylor  <iant@google.com>\n-\n-\t* Make-lang.in (check-go): Remove.\n-\t(lang_checks_parallelized): Add check-go.\n-\t(check_go_parallelize): Set.\n-\n-2010-12-13  Ian Lance Taylor  <iant@google.com>\n-\n-\t* gospec.c (lang_specific_driver): Add a -o option if not linking\n-\tand there is no -o option already.\n-\n-2010-12-07  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR tree-optimization/46805\n-\tPR tree-optimization/46833\n-\t* go-lang.c (go_langhook_type_for_mode): Handle vector modes.\n-\n-2010-12-06  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR other/46789\n-\tPR bootstrap/46812\n-\t* go-lang.c (go_char_p): Define type and vectors.\n-\t(go_search_dirs): New static variable.\n-\t(go_langhook_handle_option): Use version and version/machine\n-\tdirectories for -L.\n-\t(go_langhook_post_options): Add non-specific -L paths.\n-\t* Make-lang.in (go/go-lang.o): Define DEFAULT_TARGET_VERSION and\n-\tDEFAULT_TARGET_MACHINE when compiling.\n-\t* gccgo.texi (Invoking gccgo): Only document -L for linking.\n-\t(Import and Export): Don't mention -L for finding import files.\n-\n-2010-12-03  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR bootstrap/46776\n-\t* go-backend.c: New file.\n-\t* go-c.h (go_type_alignment): Declare.\n-\t(go_field_alignment, go_trampoline_info): Declare.\n-\t* Make-lang.in (GO_OBJS): Add go/go-backend.o.\n-\t(go/go-backend.o): New target.\n-\t(go/go-lang.o): Make dependencies match source file.\n-\t(go/expressions.o): Don't depend on $(TM_H) $(TM_P_H).\n-\t(go/gogo-tree.o): Don't depend on $(TM_H).\n-\n-2010-12-03  Ian Lance Taylor  <iant@google.com>\n-\n-\t* config-lang.in (build_by_default): Set to no.\n-\n-2010-12-02  Ian Lance Taylor  <iant@google.com>\n-\n-\tGo frontend added to gcc repository."}, {"sha": "f0c32920e96606c5f26206c18491e0ac0197a5c7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 22894, "deletions": 1, "changes": 22895, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0ffc0b3be55a977b6208b64d58cf2a28b99d973c"}, {"sha": "5ab19210cb7258028dc0a47aebbf88cec6ecda7a", "filename": "gcc/java/ChangeLog-2013", "status": "removed", "additions": 0, "deletions": 22898, "changes": 22898, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98db73df84446b2d9e2ef37e16d1381b986b3a69/gcc%2Fjava%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98db73df84446b2d9e2ef37e16d1381b986b3a69/gcc%2Fjava%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog-2013?ref=98db73df84446b2d9e2ef37e16d1381b986b3a69"}, {"sha": "d9b59aa5b217f4037661984caf565247c285f715", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "patch": "@@ -1,8 +1,5 @@\n 2014-01-02  Tobias Burnus  <burnus@net-b.de>\n \n-\t* classpath/gnu/java/rmi/registry/RegistryImpl.java (version): Update\n-\tcopyright notice dates.\n-\t* classpath/tools/gnu/classpath/tools/orbd/Main.java (run): Ditto.\n \t* gnu/gcj/convert/Convert.java (version): Update copyright notice\n \tdates.\n \t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Ditto.\n@@ -70,7 +67,7 @@\n \tdates.\n \t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Likewise.\n \f\n-Copyright (C) 2013 Free Software Foundation, Inc.\n+Copyright (C) 2014 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "005b168ea40586edf96428d6cb450051b3ea7f13", "filename": "libjava/ChangeLog-2013", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog-2013?ref=0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "patch": "@@ -0,0 +1,68 @@\n+2013-12-09  Andreas Schwab  <schwab@suse.de>\n+\n+\t* Makefile.am (toolexeclib_LTLIBRARIES) [USE_LIBGCJ_BC]: Use\n+\tinstall/libgcj_bc.la instead of libgcj_bc.la.\n+\t(noinst_LTLIBRARIES) [USE_LIBGCJ_BC]: Define.\n+\t(install_libgcj_bc_la_SOURCES): Define.\n+\t(install/libgcj_bc.la): New rule.\n+\t* Makefile.in: Regenerate.\n+\n+2013-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\n+2013-06-20  Roland Lutz  <rlutz@hedmen.org>\n+\n+ \t* contrib/aot-compile.in: Fix typo in option list.\n+\n+2013-06-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* pkg.m4 (PKG_CHECK_MODULES): Use AC_PATH_TOOL to check for pkg-config.\n+\t* classpath/m4/pkg.m4 (PKG_CHECK_MODULES): Likewise.\n+\t* configure: Regenerate.\n+\t* classpath/configure: Regenerate.\n+\n+2013-06-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* libtool-version: Bump soversion.\n+\n+2013-05-22  Mark Mitchell  <mark@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* configure.ac (dbexecdir): Base on $(toolexeclibdir), not\n+\t$(libdir).\n+\t* Makefile.am (pkgconfigdir): Likewise.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* gcj/Makefile.in: Regenerated.\n+\t* include/Makefile.in: Regenerated.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n+2013-04-16  Andreas Schwab  <schwab@suse.de>\n+\n+\t* configure.host: Add support for aarch64.\n+\t* sysdep/aarch64/locks.h: New file.\n+\n+2013-03-12  Andrew John Hughes  <gnu.andrew@redhat.com>\n+\n+\t* include/posix-threads.h:\n+\t(_Jv_MutexCheckMonitor(_Jv_Mutex_t)): Use\n+\tpthread_equal rather than !=.\n+\n+2013-01-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (lib_gnu_awt_xlib_la_LDFLAGS): Replace\n+\tLIBSTDCXX_RAW_CXX_LDLAGS with LIBSTDCXX_RAW_CXX_LDFLAGS.\n+\t* Makefile.in: Regenerated.\n+\n+2013-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gnu/gcj/convert/Convert.java (version): Update copyright notice\n+\tdates.\n+\t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Likewise.\n+\f\n+Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "0561093e2ef39bd8fad80045368aed17241fb8f5", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffc0b3be55a977b6208b64d58cf2a28b99d973c/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=0ffc0b3be55a977b6208b64d58cf2a28b99d973c", "patch": "@@ -1,3 +1,9 @@\n+2014-01-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gnu/java/rmi/registry/RegistryImpl.java (version): Update\n+\tcopyright notice dates.\n+\t* tools/gnu/classpath/tools/orbd/Main.java (run): Ditto.\n+\n 2013-11-29  Matthias Klose  <doko@ubuntu.com>\n \n \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_FreetypeGlyphVector.c,"}]}