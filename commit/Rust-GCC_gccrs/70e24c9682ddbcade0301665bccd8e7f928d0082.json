{"sha": "70e24c9682ddbcade0301665bccd8e7f928d0082", "node_id": "C_kwDOANBUbNoAKDcwZTI0Yzk2ODJkZGJjYWRlMDMwMTY2NWJjY2Q4ZTdmOTI4ZDAwODI", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-14T20:48:15Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-14T20:48:15Z"}, "message": "Fortran: always reject alternate return specifier as argument of intrinsics\n\nThe intrinsics MOVE_ALLOC, C_F_POINTER, and C_F_PROCPOINTER require\ndeferred checks of part of their actual argument types which may be of\n\"any\" type.  This however excludes alternate return specifiers which\ntherefore must be unconditionally rejected for all standard intrinsics.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/99256\n\t* intrinsic.c: Do not check formal argument type when checking\n\targuments of intrinsics for alternate return specifiers.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/99256\n\t* gfortran.dg/altreturn_11.f90: New test.", "tree": {"sha": "f65d5e14f75cc52122848566c97b514172399bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f65d5e14f75cc52122848566c97b514172399bcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e24c9682ddbcade0301665bccd8e7f928d0082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e24c9682ddbcade0301665bccd8e7f928d0082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e24c9682ddbcade0301665bccd8e7f928d0082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e24c9682ddbcade0301665bccd8e7f928d0082/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76b3bc55b4603d38cc948f4076264af5c0b95aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b3bc55b4603d38cc948f4076264af5c0b95aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76b3bc55b4603d38cc948f4076264af5c0b95aa"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "9746cd5ddb6d1053c64866747d17786571c8178c", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e24c9682ddbcade0301665bccd8e7f928d0082/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e24c9682ddbcade0301665bccd8e7f928d0082/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=70e24c9682ddbcade0301665bccd8e7f928d0082", "patch": "@@ -4420,7 +4420,7 @@ sort_actual (const char *name, gfc_actual_arglist **ap,\n   FOR_EACH_VEC_ELT (dummy_args, idx, f)\n     {\n       a = ordered_actual_args[idx];\n-      if (a && a->label != NULL && f->ts.type)\n+      if (a && a->label != NULL)\n \t{\n \t  gfc_error (\"ALTERNATE RETURN not permitted at %L\", where);\n \t  return false;"}, {"sha": "be42971d781b403fb989ba9ee304dceeb0a7a45e", "filename": "gcc/testsuite/gfortran.dg/altreturn_11.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e24c9682ddbcade0301665bccd8e7f928d0082/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e24c9682ddbcade0301665bccd8e7f928d0082/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_11.f90?ref=70e24c9682ddbcade0301665bccd8e7f928d0082", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-prune-output \"Obsolescent feature: Alternate-return argument\" }\n+! PR fortran/99256 - ICE in variable_check\n+! Contributed by G.Steimetz\n+\n+program test\n+  use iso_c_binding\n+  type(c_ptr)    :: i\n+  type(c_funptr) :: p\n+  call move_alloc     (*1, *2) ! { dg-error \"ALTERNATE RETURN\" }\n+  call c_f_pointer     (i, *1) ! { dg-error \"ALTERNATE RETURN\" }\n+  call c_f_procpointer (p, *2) ! { dg-error \"ALTERNATE RETURN\" }\n+1 continue\n+2 stop\n+end"}]}