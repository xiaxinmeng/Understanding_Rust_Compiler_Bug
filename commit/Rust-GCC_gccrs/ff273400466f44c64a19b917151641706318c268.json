{"sha": "ff273400466f44c64a19b917151641706318c268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyNzM0MDA0NjZmNDRjNjRhMTliOTE3MTUxNjQxNzA2MzE4YzI2OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-07-31T22:31:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-07-31T22:31:14Z"}, "message": "Don't unconditionally define feature test macros in <version>\n\nThe macro definitions in <version> should depend on the same\npreprocessor conditions as the original macros in other headers.\nOtherwise <version> can define macros that imply the availability of\nfeatures that are not actually defined.\n\nThis fix is incomplete, as __cpp_lib_filesystem should depend on whether\nlibstdc++fs.a is supported, and several macros should only be defined\nwhen _GLIBCXX_HOSTED is defined. Also, the feature test macros should\ndefine their value as type long, but most are type int.\n\n\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP)\n\t(_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE): Move definitions here.\n\t(_GLIBCXX_HAVE_BUILTIN_LAUNDER): Likewise. Use !__is_identifier\n\tinstead of __has_builtin.\n\t* include/std/type_traits (_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP)\n\t(_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE): Remove definitions from here.\n\t* include/std/version [!_GLIBCXX_HAS_GTHREADS]\n\t(__cpp_lib_shared_timed_mutex, __cpp_lib_scoped_lock)\n\t(__cpp_lib_shared_mutex): Don't define when Gthreads not in use.\n\t[!_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP]\n\t(__cpp_lib_has_unique_object_representations): Don't define when\n\tbuiltin not available.\n\t[!_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE] (__cpp_lib_is_aggregate):\n\tLikewise.\n\t[!_GLIBCXX_HAVE_BUILTIN_LAUNDER] (__cpp_lib_launder): Likewise.\n\t* libsupc++/new (_GLIBCXX_HAVE_BUILTIN_LAUNDER): Remove definition\n\tfrom here.\n\nFrom-SVN: r263184", "tree": {"sha": "7aca7e266e60c46d792cca9f1a6d266a14f9a630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aca7e266e60c46d792cca9f1a6d266a14f9a630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff273400466f44c64a19b917151641706318c268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff273400466f44c64a19b917151641706318c268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff273400466f44c64a19b917151641706318c268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff273400466f44c64a19b917151641706318c268/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b348c78aa4ab72ea533a01ad24311f45b0b4f4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b348c78aa4ab72ea533a01ad24311f45b0b4f4cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b348c78aa4ab72ea533a01ad24311f45b0b4f4cb"}], "stats": {"total": 91, "additions": 53, "deletions": 38}, "files": [{"sha": "b29778ad38e94092da6c154cc71aa65aaf769699", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ff273400466f44c64a19b917151641706318c268", "patch": "@@ -1,5 +1,23 @@\n 2018-07-31  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP)\n+\t(_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE): Move definitions here.\n+\t(_GLIBCXX_HAVE_BUILTIN_LAUNDER): Likewise. Use !__is_identifier\n+\tinstead of __has_builtin.\n+\t* include/std/type_traits (_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP)\n+\t(_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE): Remove definitions from here.\n+\t* include/std/version [!_GLIBCXX_HAS_GTHREADS]\n+\t(__cpp_lib_shared_timed_mutex, __cpp_lib_scoped_lock)\n+\t(__cpp_lib_shared_mutex): Don't define when Gthreads not in use.\n+\t[!_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP]\n+\t(__cpp_lib_has_unique_object_representations): Don't define when\n+\tbuiltin not available.\n+\t[!_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE] (__cpp_lib_is_aggregate):\n+\tLikewise.\n+\t[!_GLIBCXX_HAVE_BUILTIN_LAUNDER] (__cpp_lib_launder): Likewise.\n+\t* libsupc++/new (_GLIBCXX_HAVE_BUILTIN_LAUNDER): Remove definition\n+\tfrom here.\n+\n \t* doc/xml/manual/test.xml: Improve documentation on writing tests for\n \tnewer standards.\n \t* doc/xml/manual/using.xml: Document all headers for C++11 and later."}, {"sha": "d499d32b51e3a13e130df5edca7dff95bf26240e", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=ff273400466f44c64a19b917151641706318c268", "patch": "@@ -622,4 +622,22 @@ namespace std\n #define _GLIBCXX_USE_FLOAT128\n #endif\n \n+#if __GNUC__ >= 7\n+// Assume these are available if the compiler claims to be a recent GCC:\n+# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n+# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n+# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n+#elif defined(__is_identifier)\n+// For non-GNU compilers:\n+# if ! __is_identifier(__has_unique_object_representations)\n+#  define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n+# endif\n+# if ! __is_identifier(__is_aggregate)\n+#  define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n+# endif\n+# if ! __is_identifier(__builtin_launder)\n+#  define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n+# endif\n+#endif // GCC\n+\n // End of prewritten config; the settings discovered at configure time follow."}, {"sha": "4f89723d468e167549eadf915b1186713c7a96dd", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=ff273400466f44c64a19b917151641706318c268", "patch": "@@ -2956,15 +2956,6 @@ template <typename _Base, typename _Derived>\n template <typename _From, typename _To>\n   inline constexpr bool is_convertible_v = is_convertible<_From, _To>::value;\n \n-#if __GNUC__ >= 7\n-# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n-#elif defined(__is_identifier)\n-// For non-GNU compilers:\n-# if ! __is_identifier(__has_unique_object_representations)\n-#  define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n-# endif\n-#endif\n-\n #ifdef _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP\n # define __cpp_lib_has_unique_object_representations 201606\n   /// has_unique_object_representations\n@@ -2979,19 +2970,9 @@ template <typename _From, typename _To>\n     inline constexpr bool has_unique_object_representations_v\n       = has_unique_object_representations<_Tp>::value;\n #endif\n-#undef _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP\n-\n-#if __GNUC__ >= 7\n-# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n-#elif defined(__is_identifier)\n-// For non-GNU compilers:\n-# if ! __is_identifier(__is_aggregate)\n-#  define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n-# endif\n-#endif\n \n #ifdef _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE\n-#define __cpp_lib_is_aggregate 201703\n+# define __cpp_lib_is_aggregate 201703\n   /// is_aggregate\n   template<typename _Tp>\n     struct is_aggregate\n@@ -3001,8 +2982,6 @@ template <typename _From, typename _To>\n   template<typename _Tp>\n     inline constexpr bool is_aggregate_v = is_aggregate<_Tp>::value;\n #endif\n-#undef _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE\n-\n #endif // C++17\n \n #if __cplusplus > 201703L"}, {"sha": "0e054c47bf83936ac07e1eb0fb64bf0af7a7aebf", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=ff273400466f44c64a19b917151641706318c268", "patch": "@@ -73,7 +73,9 @@\n #define __cpp_lib_make_unique 201304\n #define __cpp_lib_quoted_string_io 201304\n #define __cpp_lib_robust_nonmodifying_seq_ops 201304\n-#define __cpp_lib_shared_timed_mutex 201402\n+#ifdef _GLIBCXX_HAS_GTHREADS\n+# define __cpp_lib_shared_timed_mutex 201402\n+#endif\n #define __cpp_lib_string_udls 201304\n #define __cpp_lib_transformation_trait_aliases 201304\n #define __cpp_lib_transparent_operators 201510\n@@ -97,13 +99,19 @@\n #define __cpp_lib_filesystem 201703\n #define __cpp_lib_gcd 201606\n #define __cpp_lib_gcd_lcm 201606\n-#define __cpp_lib_has_unique_object_representations 201606\n+#ifdef _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP\n+# define __cpp_lib_has_unique_object_representations 201606\n+#endif\n #define __cpp_lib_hypot 201603\n #define __cpp_lib_invoke 201411\n-#define __cpp_lib_is_aggregate 201703\n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE\n+# define __cpp_lib_is_aggregate 201703\n+#endif\n #define __cpp_lib_is_invocable 201703\n #define __cpp_lib_is_swappable 201603\n-#define __cpp_lib_launder 201606\n+#ifdef _GLIBCXX_HAVE_BUILTIN_LAUNDER\n+# define __cpp_lib_launder 201606\n+#endif\n #define __cpp_lib_lcm 201606\n #define __cpp_lib_logical_traits 201510\n #define __cpp_lib_make_from_tuple 201606\n@@ -115,8 +123,10 @@\n #define __cpp_lib_not_fn 201603\n #define __cpp_lib_optional 201603\n #define __cpp_lib_sample 201603\n-#define __cpp_lib_scoped_lock 201703\n-#define __cpp_lib_shared_mutex 201505\n+#ifdef _GLIBCXX_HAS_GTHREADS\n+# define __cpp_lib_scoped_lock 201703\n+# define __cpp_lib_shared_mutex 201505\n+#endif\n #define __cpp_lib_shared_ptr_weak_type 201606\n #define __cpp_lib_string_view 201603\n #define __cpp_lib_type_trait_variable_templates 201510L"}, {"sha": "82d884d95d378f4b2b03df04ef11e52648bdc64e", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff273400466f44c64a19b917151641706318c268/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=ff273400466f44c64a19b917151641706318c268", "patch": "@@ -182,15 +182,6 @@ inline void operator delete[](void*, void*) _GLIBCXX_USE_NOEXCEPT { }\n } // extern \"C++\"\n \n #if __cplusplus >= 201703L\n-#if __GNUC__ >= 7\n-#  define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n-#elif defined __has_builtin\n-// For non-GNU compilers:\n-# if __has_builtin(__builtin_launder)\n-#  define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n-# endif\n-#endif\n-\n #ifdef _GLIBCXX_HAVE_BUILTIN_LAUNDER\n namespace std\n {\n@@ -215,7 +206,6 @@ namespace std\n   void launder(const volatile void*) = delete;\n }\n #endif // _GLIBCXX_HAVE_BUILTIN_LAUNDER\n-#undef _GLIBCXX_HAVE_BUILTIN_LAUNDER\n #endif // C++17\n \n #pragma GCC visibility pop"}]}