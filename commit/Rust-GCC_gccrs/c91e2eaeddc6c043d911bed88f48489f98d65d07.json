{"sha": "c91e2eaeddc6c043d911bed88f48489f98d65d07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZTJlYWVkZGM2YzA0M2Q5MTFiZWQ4OGY0ODQ4OWY5OGQ2NWQwNw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2008-02-04T15:31:25Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-02-04T15:31:25Z"}, "message": "inclhack.def: (glibc_c99_inline_1a): Re-add last change.\n\n\t* inclhack.def: (glibc_c99_inline_1a): Re-add last change.\n\t(glibc_c99_inline_3) <bypass>: Change from __STDC_VERSION__ to\n\t__extern_inline|__GNU_STDC_INLINE__.\n\t(glibc_c99_inline_4) <files>: Add wchar.h and */wchar.h.\n\t<bypass>: Change from __STDC_VERSION__ to\n\t__extern_inline|__GNU_STDC_INLINE__.\n\t<first c_fix_arg>: Change from #ifdef-wrapping the extern part to\n\tappending attribute-gnu_inline.\n\t<second c_fix_arg>: Remove.\n\t<test_text>: Remove __extern_inline line.\n\t* tests/base/features.h: Re-add.\n\t* tests/base/sys/sysmacros.h: Adjust.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r132092", "tree": {"sha": "2f2ed548082372a8ae8ce3b6f30e7708cf25db23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f2ed548082372a8ae8ce3b6f30e7708cf25db23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91e2eaeddc6c043d911bed88f48489f98d65d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91e2eaeddc6c043d911bed88f48489f98d65d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91e2eaeddc6c043d911bed88f48489f98d65d07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91e2eaeddc6c043d911bed88f48489f98d65d07/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a1640dbb3257532e6d3603c78a5f379f7682dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1640dbb3257532e6d3603c78a5f379f7682dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a1640dbb3257532e6d3603c78a5f379f7682dc3"}], "stats": {"total": 149, "additions": 117, "deletions": 32}, "files": [{"sha": "b33d37ee3fc35ff3e3eb711138dc9d84575a03e9", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=c91e2eaeddc6c043d911bed88f48489f98d65d07", "patch": "@@ -1,3 +1,19 @@\n+2008-02-04  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* inclhack.def: (glibc_c99_inline_1a): Re-add last change.\n+\t(glibc_c99_inline_3) <bypass>: Change from __STDC_VERSION__ to\n+\t__extern_inline|__GNU_STDC_INLINE__.\n+\t(glibc_c99_inline_4) <files>: Add wchar.h and */wchar.h.\n+\t<bypass>: Change from __STDC_VERSION__ to\n+\t__extern_inline|__GNU_STDC_INLINE__.\n+\t<first c_fix_arg>: Change from #ifdef-wrapping the extern part to\n+\tappending attribute-gnu_inline.\n+\t<second c_fix_arg>: Remove.\n+\t<test_text>: Remove __extern_inline line.\n+\t* tests/base/features.h: Re-add.\n+\t* tests/base/sys/sysmacros.h: Adjust.\n+\t* fixincl.x: Regenerate.\n+\n 2008-01-06  Hans-Peter Nilsson  <hp@axis.com>\n \n \tRevert last change."}, {"sha": "3be69a6b4dc771465ed3fcadd1a4b51fb744a5f3", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 53, "deletions": 14, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=c91e2eaeddc6c043d911bed88f48489f98d65d07", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Sunday October 14, 2007 at 06:17:05 PM EDT\n+ * It has been AutoGen-ed  Monday January  7, 2008 at 09:24:53 PM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Oct 14 18:17:05 EDT 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Jan  7 21:24:53 CET 2008\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 210 fixup descriptions.\n+ * This file contains 211 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2263,6 +2263,43 @@ static const char* apzGlibc_C99_Inline_1Patch[] = {\n     \"%0 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Glibc_C99_Inline_1a fix\n+ */\n+tSCC zGlibc_C99_Inline_1aName[] =\n+     \"glibc_c99_inline_1a\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zGlibc_C99_Inline_1aList[] =\n+  \"features.h\\0*/features.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzGlibc_C99_Inline_1aMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zGlibc_C99_Inline_1aSelect0[] =\n+       \"(\\\\) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__)\\n\\\n+(#[ \\t]*define[ \\t]*__USE_EXTERN_INLINES[ \\t]*1)\";\n+\n+#define    GLIBC_C99_INLINE_1A_TEST_CT  1\n+static tTestDesc aGlibc_C99_Inline_1aTests[] = {\n+  { TT_EGREP,    zGlibc_C99_Inline_1aSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Glibc_C99_Inline_1a\n+ */\n+static const char* apzGlibc_C99_Inline_1aPatch[] = {\n+    \"format\",\n+    \"%1 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\\n\\\n+%2\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Glibc_C99_Inline_2 fix\n@@ -2335,7 +2372,7 @@ tSCC zGlibc_C99_Inline_3Select0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zGlibc_C99_Inline_3Bypass0[] =\n-       \"__STDC_VERSION__\";\n+       \"__extern_inline|__GNU_STDC_INLINE__\";\n \n #define    GLIBC_C99_INLINE_3_TEST_CT  2\n static tTestDesc aGlibc_C99_Inline_3Tests[] = {\n@@ -2362,7 +2399,7 @@ tSCC zGlibc_C99_Inline_4Name[] =\n  *  File name selection pattern\n  */\n tSCC zGlibc_C99_Inline_4List[] =\n-  \"sys/sysmacros.h\\0*/sys/sysmacros.h\\0\";\n+  \"sys/sysmacros.h\\0*/sys/sysmacros.h\\0wchar.h\\0*/wchar.h\\0\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -2372,13 +2409,13 @@ tSCC zGlibc_C99_Inline_4List[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zGlibc_C99_Inline_4Select0[] =\n-       \"extern __inline\";\n+       \"(^| )extern __inline\";\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zGlibc_C99_Inline_4Bypass0[] =\n-       \"__STDC_VERSION__\";\n+       \"__extern_inline|__gnu_inline__\";\n \n #define    GLIBC_C99_INLINE_4_TEST_CT  2\n static tTestDesc aGlibc_C99_Inline_4Tests[] = {\n@@ -2390,11 +2427,7 @@ static tTestDesc aGlibc_C99_Inline_4Tests[] = {\n  */\n static const char* apzGlibc_C99_Inline_4Patch[] = {\n     \"format\",\n-    \"\\n\\\n-#ifdef __GNUC_GNU_INLINE__\\n\\\n-extern\\n\\\n-#endif\\n\",\n-    \"(^| )extern \",\n+    \"%0 __attribute__ ((__gnu_inline__))\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -8539,9 +8572,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          253\n+#define REGEX_COUNT          254\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            210\n+#define FIX_COUNT            211\n \n /*\n  *  Enumerate the fixes\n@@ -8599,6 +8632,7 @@ typedef enum {\n     FREEBSD_GCC3_BREAKAGE_FIXIDX,\n     FREEBSD_GCC4_BREAKAGE_FIXIDX,\n     GLIBC_C99_INLINE_1_FIXIDX,\n+    GLIBC_C99_INLINE_1A_FIXIDX,\n     GLIBC_C99_INLINE_2_FIXIDX,\n     GLIBC_C99_INLINE_3_FIXIDX,\n     GLIBC_C99_INLINE_4_FIXIDX,\n@@ -9020,6 +9054,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      GLIBC_C99_INLINE_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aGlibc_C99_Inline_1Tests,   apzGlibc_C99_Inline_1Patch, 0 },\n \n+  {  zGlibc_C99_Inline_1aName,    zGlibc_C99_Inline_1aList,\n+     apzGlibc_C99_Inline_1aMachs,\n+     GLIBC_C99_INLINE_1A_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aGlibc_C99_Inline_1aTests,   apzGlibc_C99_Inline_1aPatch, 0 },\n+\n   {  zGlibc_C99_Inline_2Name,    zGlibc_C99_Inline_2List,\n      apzGlibc_C99_Inline_2Machs,\n      GLIBC_C99_INLINE_2_TEST_CT, FD_MACH_ONLY,"}, {"sha": "cff517b366e6f858f0780e088755df21a2bff818", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=c91e2eaeddc6c043d911bed88f48489f98d65d07", "patch": "@@ -1347,6 +1347,24 @@ EOT;\n };\n \n \n+/*\n+ *  Similar, but a version that didn't have __NO_INLINE__\n+ */\n+fix = {\n+    hackname  = glibc_c99_inline_1a;\n+    files     = features.h, '*/features.h';\n+    select    = \"(\\\\) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__)\\n\"\n+\t\t\"(#[ \\t]*define[ \\t]*__USE_EXTERN_INLINES[ \\t]*1)\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\\n%2\";\n+    test_text = <<-EOT\n+#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__\n+# define __USE_EXTERN_INLINES\t1\n+#endif\n+EOT;\n+};\n+\n+\n /*\n  * The glibc_c99_inline_1 fix should have fixed everything.  Unfortunately\n  * there are many glibc headers which do not respect __USE_EXTERN_INLINES.\n@@ -1378,7 +1396,7 @@ fix = {\n     hackname  = glibc_c99_inline_3;\n     files     = bits/string2.h, '*/bits/string2.h';\n     select    = \"extern __inline\";\n-    bypass    = \"__STDC_VERSION__\";\n+    bypass    = \"__extern_inline|__GNU_STDC_INLINE__\";\n     c_fix     = format;\n     c_fix_arg = \"# if defined(__cplusplus) || defined(__GNUC_STDC_INLINE__)\";\n     c_fix_arg = \"^# ifdef __cplusplus$\";\n@@ -1394,15 +1412,13 @@ fix = {\n \n fix = {\n     hackname  = glibc_c99_inline_4;\n-    files     = sys/sysmacros.h, '*/sys/sysmacros.h';\n-    bypass    = \"__STDC_VERSION__\";\n-    select    = \"extern __inline\";\n+    files     = sys/sysmacros.h, '*/sys/sysmacros.h', wchar.h, '*/wchar.h';\n+    bypass    = \"__extern_inline|__gnu_inline__\";\n+    select    = \"(^| )extern __inline\";\n     c_fix     = format;\n-    c_fix_arg = \"\\n#ifdef __GNUC_GNU_INLINE__\\nextern\\n#endif\\n\";\n-    c_fix_arg = '(^| )extern ';\n+    c_fix_arg = \"%0 __attribute__ ((__gnu_inline__))\";\n     test_text = <<-EOT\n \t__extension__ extern __inline unsigned int\n-\t__extension__ __extern_inline unsigned int\n \textern __inline unsigned int\n \tEOT;\n };"}, {"sha": "93838c71253f2cd35a057d71f9cce28d46bf7577", "filename": "fixincludes/tests/base/features.h", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ftests%2Fbase%2Ffeatures.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ftests%2Fbase%2Ffeatures.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ffeatures.h?ref=c91e2eaeddc6c043d911bed88f48489f98d65d07", "patch": "@@ -0,0 +1,23 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/features.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( GLIBC_C99_INLINE_1_CHECK )\n+#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__     && !defined __OPTIMIZE_SIZE__ && !defined __NO_INLINE__\n+# define __USE_EXTERN_INLINES\t1\n+#endif\n+#endif  /* GLIBC_C99_INLINE_1_CHECK */\n+\n+\n+#if defined( GLIBC_C99_INLINE_1A_CHECK )\n+#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__ && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\n+# define __USE_EXTERN_INLINES\t1\n+#endif\n+#endif  /* GLIBC_C99_INLINE_1A_CHECK */"}, {"sha": "2fc3398f468daec67546ad74436210c22808bdd5", "filename": "fixincludes/tests/base/sys/sysmacros.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ftests%2Fbase%2Fsys%2Fsysmacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91e2eaeddc6c043d911bed88f48489f98d65d07/fixincludes%2Ftests%2Fbase%2Fsys%2Fsysmacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fsysmacros.h?ref=c91e2eaeddc6c043d911bed88f48489f98d65d07", "patch": "@@ -10,15 +10,6 @@\n \n \n #if defined( GLIBC_C99_INLINE_4_CHECK )\n-__extension__\n-#ifdef __GNUC_GNU_INLINE__\n-extern\n-#endif\n-__inline unsigned int\n-__extension__ __extern_inline unsigned int\n-\n-#ifdef __GNUC_GNU_INLINE__\n-extern\n-#endif\n-__inline unsigned int\n+__extension__ extern __inline __attribute__ ((__gnu_inline__)) unsigned int\n+extern __inline __attribute__ ((__gnu_inline__)) unsigned int\n #endif  /* GLIBC_C99_INLINE_4_CHECK */"}]}