{"sha": "87d1ea793724015e9ffba50946252e720a589ed6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkMWVhNzkzNzI0MDE1ZTlmZmJhNTA5NDYyNTJlNzIwYTU4OWVkNg==", "commit": {"author": {"name": "John Carr", "email": "jfc@mit.edu", "date": "1998-04-24T13:16:26Z"}, "committer": {"name": "John Carr", "email": "jfc@gcc.gnu.org", "date": "1998-04-24T13:16:26Z"}, "message": "expr.c (expand_builtin, [...]): Set MEM_IN_STRUCT_P if the argument is the address of a structure or array.\n\n\t* expr.c (expand_builtin, case MEMSET): Set MEM_IN_STRUCT_P\n\tif the argument is the address of a structure or array.\n\t* configure.in: Enable Haifa scheduler by default for SPARC.\n\nFrom-SVN: r19405", "tree": {"sha": "04bfefda4a4bde62827f3f94982c760a99df976b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04bfefda4a4bde62827f3f94982c760a99df976b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d1ea793724015e9ffba50946252e720a589ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d1ea793724015e9ffba50946252e720a589ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d1ea793724015e9ffba50946252e720a589ed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d1ea793724015e9ffba50946252e720a589ed6/comments", "author": {"login": "VoxSciurorum", "id": 60116679, "node_id": "MDQ6VXNlcjYwMTE2Njc5", "avatar_url": "https://avatars.githubusercontent.com/u/60116679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VoxSciurorum", "html_url": "https://github.com/VoxSciurorum", "followers_url": "https://api.github.com/users/VoxSciurorum/followers", "following_url": "https://api.github.com/users/VoxSciurorum/following{/other_user}", "gists_url": "https://api.github.com/users/VoxSciurorum/gists{/gist_id}", "starred_url": "https://api.github.com/users/VoxSciurorum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VoxSciurorum/subscriptions", "organizations_url": "https://api.github.com/users/VoxSciurorum/orgs", "repos_url": "https://api.github.com/users/VoxSciurorum/repos", "events_url": "https://api.github.com/users/VoxSciurorum/events{/privacy}", "received_events_url": "https://api.github.com/users/VoxSciurorum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e89d3e6fafba3bb7bfcda0e4a0096aac80200c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89d3e6fafba3bb7bfcda0e4a0096aac80200c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89d3e6fafba3bb7bfcda0e4a0096aac80200c1d"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "672c613aed7d82bf1669257571b49944fc388753", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87d1ea793724015e9ffba50946252e720a589ed6", "patch": "@@ -1,3 +1,10 @@\n+Fri Apr 24 16:11:47 1998  John Carr  <jfc@mit.edu>\n+\n+\t* expr.c (expand_builtin, case MEMSET): Set MEM_IN_STRUCT_P\n+\tif the argument is the address of a structure or array.\n+\n+\t* configure.in: Enable Haifa scheduler by default for SPARC.\n+\n Fri Apr 24 20:55:47 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* cse.c (cse_set_around_loop): Don't do optimization when"}, {"sha": "689b649482433e650d911884821281a8eaf0994e", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=87d1ea793724015e9ffba50946252e720a589ed6", "patch": "@@ -2891,7 +2891,7 @@ fi\n if [[ x$enable_haifa = x ]]\n then\n   case $target in\n-    alpha*-* | hppa1.?-* | powerpc*-* | rs6000-*)\n+    alpha*-* | hppa1.?-* | powerpc*-* | rs6000-* | *sparc-*)\n       enable_haifa=yes;;\n   esac\n fi"}, {"sha": "8473181d72595befc79a68a4530a55d5358f9016", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1ea793724015e9ffba50946252e720a589ed6/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=87d1ea793724015e9ffba50946252e720a589ed6", "patch": "@@ -8634,7 +8634,13 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  /* There could be a void* cast on top of the object.  */\n \t  while (TREE_CODE (dest) == NOP_EXPR)\n \t    dest = TREE_OPERAND (dest, 0);\n-\t  type = TREE_TYPE (TREE_TYPE (dest));\n+\n+\t  if (TREE_CODE (dest) == ADDR_EXPR)\n+\t    /* If this is the address of an object, check whether the\n+\t       object is an array.  */\n+\t    type = TREE_TYPE (TREE_OPERAND (dest, 0));\n+\t  else\n+\t    type = TREE_TYPE (TREE_TYPE (dest));\n \t  MEM_IN_STRUCT_P (dest_mem) = AGGREGATE_TYPE_P (type);\n \n \t  dest_addr = clear_storage (dest_mem, len_rtx, dest_align);"}]}