{"sha": "b8d42cfa84fb31e592411e6cea41bdde980c51d7", "node_id": "C_kwDOANBUbNoAKGI4ZDQyY2ZhODRmYjMxZTU5MjQxMWU2Y2VhNDFiZGRlOTgwYzUxZDc", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-29T19:46:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T14:04:02Z"}, "message": "libstdc++: Replace try-catch in std::list::merge to avoid O(N) size\n\nThe current std::list::merge code calls size() before starting to merge\nany elements, so that the _M_size members can be updated after the merge\nfinishes. The work is done in a try-block so that the sizes can still be\nupdated in an exception handler if any element comparison throws.\n\nThe _M_size members only exist for the cxx11 ABI, so the initial call to\nsize() and the try-catch are only needed for that ABI. For the old ABI\nthe size() call performs an O(N) list traversal to get a value that\nisn't even used, and catching exceptions just to rethrow them isn't\nneeded either.\n\nThis refactors the merge functions to remove the try-catch block and use\nan RAII type instead. For the cxx11 ABI that type's destructor updates\nthe list sizes, and for the old ABI it's a no-op.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/list.tcc (list::merge): Remove call to size() and\n\ttry-catch block. Use _Finalize_merge instead.\n\t* include/bits/stl_list.h (list::_Finalize_merge): New\n\tscope guard type to update _M_size members after a merge.", "tree": {"sha": "369e4156b46983da2de4e9120f7d7715a94b467a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/369e4156b46983da2de4e9120f7d7715a94b467a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8d42cfa84fb31e592411e6cea41bdde980c51d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d42cfa84fb31e592411e6cea41bdde980c51d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d42cfa84fb31e592411e6cea41bdde980c51d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d42cfa84fb31e592411e6cea41bdde980c51d7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5051fad8582fcbdd0844232b5a8c4e856be5e5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5051fad8582fcbdd0844232b5a8c4e856be5e5a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5051fad8582fcbdd0844232b5a8c4e856be5e5a4"}], "stats": {"total": 108, "additions": 64, "deletions": 44}, "files": [{"sha": "62b0ba1063abf06d3248e71da14769ada2562b60", "filename": "libstdc++-v3/include/bits/list.tcc", "status": "modified", "additions": 29, "deletions": 44, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d42cfa84fb31e592411e6cea41bdde980c51d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d42cfa84fb31e592411e6cea41bdde980c51d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc?ref=b8d42cfa84fb31e592411e6cea41bdde980c51d7", "patch": "@@ -416,29 +416,22 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  iterator __last1 = end();\n \t  iterator __first2 = __x.begin();\n \t  iterator __last2 = __x.end();\n-\t  const size_t __orig_size = __x.size();\n-\t  __try {\n-\t    while (__first1 != __last1 && __first2 != __last2)\n-\t      if (*__first2 < *__first1)\n-\t\t{\n-\t\t  iterator __next = __first2;\n-\t\t  _M_transfer(__first1, __first2, ++__next);\n-\t\t  __first2 = __next;\n-\t\t}\n-\t      else\n-\t\t++__first1;\n-\t    if (__first2 != __last2)\n-\t      _M_transfer(__last1, __first2, __last2);\n \n-\t    this->_M_inc_size(__x._M_get_size());\n-\t    __x._M_set_size(0);\n-\t  }\n-\t  __catch(...)\n+\t  const _Finalize_merge __fin(*this, __x, __first2);\n+\n+\t  while (__first1 != __last1 && __first2 != __last2)\n+\t    if (*__first2 < *__first1)\n+\t      {\n+\t\titerator __next = __first2;\n+\t\t_M_transfer(__first1, __first2, ++__next);\n+\t\t__first2 = __next;\n+\t      }\n+\t    else\n+\t      ++__first1;\n+\t  if (__first2 != __last2)\n \t    {\n-\t      const size_t __dist = std::distance(__first2, __last2);\n-\t      this->_M_inc_size(__orig_size - __dist);\n-\t      __x._M_set_size(__dist);\n-\t      __throw_exception_again;\n+\t      _M_transfer(__last1, __first2, __last2);\n+\t      __first2 = __last2;\n \t    }\n \t}\n     }\n@@ -463,30 +456,22 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t    iterator __last1 = end();\n \t    iterator __first2 = __x.begin();\n \t    iterator __last2 = __x.end();\n-\t    const size_t __orig_size = __x.size();\n-\t    __try\n-\t      {\n-\t\twhile (__first1 != __last1 && __first2 != __last2)\n-\t\t  if (__comp(*__first2, *__first1))\n-\t\t    {\n-\t\t      iterator __next = __first2;\n-\t\t      _M_transfer(__first1, __first2, ++__next);\n-\t\t      __first2 = __next;\n-\t\t    }\n-\t\t  else\n-\t\t    ++__first1;\n-\t\tif (__first2 != __last2)\n-\t\t  _M_transfer(__last1, __first2, __last2);\n-\n-\t\tthis->_M_inc_size(__x._M_get_size());\n-\t\t__x._M_set_size(0);\n-\t      }\n-\t    __catch(...)\n+\n+\t    const _Finalize_merge __fin(*this, __x, __first2);\n+\n+\t    while (__first1 != __last1 && __first2 != __last2)\n+\t      if (__comp(*__first2, *__first1))\n+\t\t{\n+\t\t  iterator __next = __first2;\n+\t\t  _M_transfer(__first1, __first2, ++__next);\n+\t\t  __first2 = __next;\n+\t\t}\n+\t      else\n+\t\t++__first1;\n+\t    if (__first2 != __last2)\n \t      {\n-\t\tconst size_t __dist = std::distance(__first2, __last2);\n-\t\tthis->_M_inc_size(__orig_size - __dist);\n-\t\t__x._M_set_size(__dist);\n-\t\t__throw_exception_again;\n+\t\t_M_transfer(__last1, __first2, __last2);\n+\t\t__first2 = __last2;\n \t      }\n \t  }\n       }"}, {"sha": "e11603c015762dc8789e49cbf1e8c5578e21ee4d", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d42cfa84fb31e592411e6cea41bdde980c51d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d42cfa84fb31e592411e6cea41bdde980c51d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=b8d42cfa84fb31e592411e6cea41bdde980c51d7", "patch": "@@ -1,6 +1,7 @@\n // List implementation -*- C++ -*-\n \n // Copyright (C) 2001-2021 Free Software Foundation, Inc.\n+// Copyright The GNU Toolchain Authors.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -1992,6 +1993,40 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t\t\t     __false_type{});\n       }\n #endif\n+\n+#if _GLIBCXX_USE_CXX11_ABI\n+      // Update _M_size members after merging (some of) __src into __dest.\n+      struct _Finalize_merge\n+      {\n+\texplicit\n+\t_Finalize_merge(list& __dest, list& __src, const iterator& __src_next)\n+\t: _M_dest(__dest), _M_src(__src), _M_next(__src_next)\n+\t{ }\n+\n+\t~_Finalize_merge()\n+\t{\n+\t  // For the common case, _M_next == _M_sec.end() and the std::distance\n+\t  // call is fast. But if any *iter1 < *iter2 comparison throws then we\n+\t  // have to count how many elements remain in _M_src.\n+\t  const size_t __num_unmerged = std::distance(_M_next, _M_src.end());\n+\t  const size_t __orig_size = _M_src._M_get_size();\n+\t  _M_dest._M_inc_size(__orig_size - __num_unmerged);\n+\t  _M_src._M_set_size(__num_unmerged);\n+\t}\n+\n+\tlist& _M_dest;\n+\tlist& _M_src;\n+\tconst iterator& _M_next;\n+\n+#if __cplusplus >= 201103L\n+\t_Finalize_merge(const _Finalize_merge&) = delete;\n+#endif\n+      };\n+#else\n+      struct _Finalize_merge\n+      { explicit _Finalize_merge(list&, list&, const iterator&) { } };\n+#endif\n+\n     };\n \n #if __cpp_deduction_guides >= 201606"}]}