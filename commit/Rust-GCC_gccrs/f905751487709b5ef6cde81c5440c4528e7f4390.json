{"sha": "f905751487709b5ef6cde81c5440c4528e7f4390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwNTc1MTQ4NzcwOWI1ZWY2Y2RlODFjNTQ0MGM0NTI4ZTdmNDM5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-04-16T03:18:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-04-16T03:18:06Z"}, "message": "re PR c++/52292 ([C++11] Variadic template expansion into fixed template causes constructor to not match)\n\n\tPR c++/52292\n\tPR c++/52380\n\t* pt.c (coerce_template_parms): Even if we aren't converting we\n\twant to expand argument packs.\n\nFrom-SVN: r186479", "tree": {"sha": "9b0e21ba1e0f52ff020ee5b34c8e21f44254c066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b0e21ba1e0f52ff020ee5b34c8e21f44254c066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f905751487709b5ef6cde81c5440c4528e7f4390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f905751487709b5ef6cde81c5440c4528e7f4390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f905751487709b5ef6cde81c5440c4528e7f4390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f905751487709b5ef6cde81c5440c4528e7f4390/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51c8ebb3fb0967ffdb409d9cb43204d88980222a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c8ebb3fb0967ffdb409d9cb43204d88980222a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c8ebb3fb0967ffdb409d9cb43204d88980222a"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "d37d42c02640ea219d2c5f462156ac7b9f83f820", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f905751487709b5ef6cde81c5440c4528e7f4390", "patch": "@@ -1,5 +1,10 @@\n 2012-04-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/52292\n+\tPR c++/52380\n+\t* pt.c (coerce_template_parms): Even if we aren't converting we\n+\twant to expand argument packs.\n+\n \tPR c++/52706\n \t* mangle.c (write_type): nullptr_t is a builtin type.\n "}, {"sha": "42dc0a74439376f186ff3b745d9abe0108782488", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f905751487709b5ef6cde81c5440c4528e7f4390", "patch": "@@ -6882,7 +6882,7 @@ coerce_template_parms (tree parms,\n             {\n               /* We don't know how many args we have yet, just\n                  use the unconverted ones for now.  */\n-              new_inner_args = args;\n+              new_inner_args = inner_args;\n               break;\n             }\n         }"}, {"sha": "a936b368ce0046a0a991353f60e5740d834a3432", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f905751487709b5ef6cde81c5440c4528e7f4390", "patch": "@@ -1,5 +1,11 @@\n 2012-04-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/52380\n+\t* g++.dg/cpp0x/variadic125.C: New.\n+\n+\tPR c++/52292\n+\t* g++.dg/cpp0x/variadic124.C: New.\n+\n \tPR c++/52706\n \t* g++.dg/cpp0x/nullptr27.C: New.\n "}, {"sha": "8ddc810b313bc30db9b3e57c426ff29c387a4e3b", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic124.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic124.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic124.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic124.C?ref=f905751487709b5ef6cde81c5440c4528e7f4390", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/52292\n+// { dg-options -std=c++11 }\n+\n+template <template <typename...> class T>\n+struct foo {\n+    template <typename... U>\n+    foo(T<U...> x) { }\n+};\n+\n+template <typename T>\n+struct bar {\n+    bar(T x) : value(x) { }\n+\n+    T value;\n+};\n+\n+struct generic : private foo<bar> {\n+    template <typename T>\n+    generic(bar<T> x) : foo(x)\n+    {\n+    }\n+\n+};\n+\n+int main()\n+{\n+    bar<int> x(32);\n+    generic y(x); // FAILS\n+}"}, {"sha": "89fd6b00d14f39ff655c27e514f77d227ee3aea8", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic125.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f905751487709b5ef6cde81c5440c4528e7f4390/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic125.C?ref=f905751487709b5ef6cde81c5440c4528e7f4390", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/52380\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+struct S\n+{\n+  template<typename U>\n+  struct Unary                        // Line 5\n+  {};\n+\n+  template<unsigned, typename... Args>\n+  struct Dispatch                     // Line 9\n+    : public Unary<Args...>\n+  {};\n+\n+  template<typename... Args>\n+  struct Variadic\n+    : public Dispatch<sizeof...(Args), Args...>\n+  {};\n+};\n+\n+int main()\n+{\n+  S<void>::Variadic<void> z;\n+}"}]}