{"sha": "3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M2ZmNjMTAxYTMwYmMwMDEwZmM0YWMyMTYyZWZmOTI2YWM4MDRkMQ==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2005-05-30T23:34:08Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-05-30T23:34:08Z"}, "message": "loop.c (loop_invariant_p, [...]): Use regs_invalidated_by_call instead of call_used_regs.\n\n2005-05-30  Pat Haugen  <pthaugen@us.ibm.com>\n\n        * loop.c (loop_invariant_p, valid_initial_value_p): Use\n        regs_invalidated_by_call instead of call_used_regs.\n\nFrom-SVN: r100378", "tree": {"sha": "ae42444ba1fba4d154c752d14c099a2e6a67853a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae42444ba1fba4d154c752d14c099a2e6a67853a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c6fcc101a30bc0010fc4ac2162eff926ac804d1/comments", "author": null, "committer": null, "parents": [{"sha": "c0309c74caa1610563501948e1ddfcd1e997556d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0309c74caa1610563501948e1ddfcd1e997556d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0309c74caa1610563501948e1ddfcd1e997556d"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "830bfc6202013ed5fe8b445392194453d8640266", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c6fcc101a30bc0010fc4ac2162eff926ac804d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c6fcc101a30bc0010fc4ac2162eff926ac804d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "patch": "@@ -1,3 +1,8 @@\n+2005-05-30  Pat Haugen  <pthaugen@us.ibm.com>\n+\n+\t* loop.c (loop_invariant_p, valid_initial_value_p): Use\n+\tregs_invalidated_by_call instead of call_used_regs.\n+\n 2005-05-30  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR middle-end/21743"}, {"sha": "868b052cac781f05f97b8d5df8b18e98568df9ba", "filename": "gcc/loop.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c6fcc101a30bc0010fc4ac2162eff926ac804d1/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c6fcc101a30bc0010fc4ac2162eff926ac804d1/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=3c6fcc101a30bc0010fc4ac2162eff926ac804d1", "patch": "@@ -3645,7 +3645,8 @@ loop_invariant_p (const struct loop *loop, rtx x)\n \treturn 1;\n \n       if (LOOP_INFO (loop)->has_call\n-\t  && REGNO (x) < FIRST_PSEUDO_REGISTER && call_used_regs[REGNO (x)])\n+\t  && REGNO (x) < FIRST_PSEUDO_REGISTER\n+\t  && TEST_HARD_REG_BIT (regs_invalidated_by_call, REGNO (x)))\n \treturn 0;\n \n       /* Out-of-range regs can occur when we are called from unrolling.\n@@ -6719,7 +6720,8 @@ valid_initial_value_p (rtx x, rtx insn, int call_seen, rtx loop_start)\n      some machines, don't use any hard registers at all.  */\n   if (REGNO (x) < FIRST_PSEUDO_REGISTER\n       && (SMALL_REGISTER_CLASSES\n-\t  || (call_used_regs[REGNO (x)] && call_seen)))\n+\t  || (call_seen\n+\t      && TEST_HARD_REG_BIT (regs_invalidated_by_call, REGNO (x)))))\n     return 0;\n \n   /* Don't use registers that have been clobbered before the start of the"}]}