{"sha": "02410826258219adb58a832decc3594a59841042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0MTA4MjYyNTgyMTlhZGI1OGE4MzJkZWNjMzU5NGE1OTg0MTA0Mg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-09-19T21:38:27Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-09-19T21:38:27Z"}, "message": "re PR rtl-optimization/77416 (LRA rematerializing use of CA reg across function call)\n\n2016-09-19  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/77416\n\t* lra-remat.c (operand_to_remat): Process hard coded insn\n\tregisters.\n\n2016-09-19  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/77416\n\t* gcc.target/powerpc/pr77416.c: New.\n\nFrom-SVN: r240247", "tree": {"sha": "36ee1900942a335813f777141267e53c9a589dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36ee1900942a335813f777141267e53c9a589dfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02410826258219adb58a832decc3594a59841042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02410826258219adb58a832decc3594a59841042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02410826258219adb58a832decc3594a59841042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02410826258219adb58a832decc3594a59841042/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6101a7ab878f784558c908d6e4773d49b0858e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6101a7ab878f784558c908d6e4773d49b0858e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6101a7ab878f784558c908d6e4773d49b0858e0e"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "bc0be5ca932a22269be8e76f95a5eacf5186f420", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02410826258219adb58a832decc3594a59841042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02410826258219adb58a832decc3594a59841042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02410826258219adb58a832decc3594a59841042", "patch": "@@ -1,3 +1,9 @@\n+2016-09-19  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/77416\n+\t* lra-remat.c (operand_to_remat): Process hard coded insn\n+\tregisters.\n+\n 2016-09-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* simplify-rtx.c (simplify_relational_operation_1): Add transformation"}, {"sha": "245c6de6b449bd9d6718a2e61d792b6023a41aa5", "filename": "gcc/lra-remat.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02410826258219adb58a832decc3594a59841042/gcc%2Flra-remat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02410826258219adb58a832decc3594a59841042/gcc%2Flra-remat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-remat.c?ref=02410826258219adb58a832decc3594a59841042", "patch": "@@ -370,6 +370,22 @@ operand_to_remat (rtx_insn *insn)\n \t\t       + hard_regno_nregs[reg->regno][reg->biggest_mode])))\n \t      return -1;\n       }\n+  /* Check hard coded insn registers.  */\n+  for (struct lra_insn_reg *reg = static_id->hard_regs;\n+       reg != NULL;\n+       reg = reg->next)\n+    if (reg->type == OP_INOUT)\n+      return -1;\n+    else if (reg->type == OP_IN)\n+      {\n+\t/* Check that there is no output hard reg as the input\n+\t   one.  */\n+\t  for (struct lra_insn_reg *reg2 = static_id->hard_regs;\n+\t       reg2 != NULL;\n+\t       reg2 = reg2->next)\n+\t    if (reg2->type == OP_OUT && reg->regno == reg2->regno)\n+\t\treturn -1;\n+      }\n   /* Find the rematerialization operand.  */\n   int nop = static_id->n_operands;\n   for (int i = 0; i < nop; i++)"}, {"sha": "29763fd1a16084286d42bc3ebf7c9341c343bbb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02410826258219adb58a832decc3594a59841042/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02410826258219adb58a832decc3594a59841042/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02410826258219adb58a832decc3594a59841042", "patch": "@@ -1,3 +1,8 @@\n+2016-09-19  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/77416\n+\t* gcc.target/powerpc/pr77416.c: New.\n+\n 2016-09-19  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/77639"}, {"sha": "c87a1987ac523790c4b9f547a4f2011f2f5159b8", "filename": "gcc/testsuite/gcc.target/powerpc/pr77416.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02410826258219adb58a832decc3594a59841042/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77416.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02410826258219adb58a832decc3594a59841042/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77416.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77416.c?ref=02410826258219adb58a832decc3594a59841042", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile { target { powerpc64*-*-*} } } */\n+/* { dg-skip-if \"\" { powerpc64-*-aix* } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc64*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-options \"-mcpu=power7 -O2 -m32\" } */\n+/* { dg-final { scan-assembler-times \"addze\" 1 } } */\n+\n+extern int fn2 ();\n+extern void fn3 ();\n+extern void fn4 (int);\n+int a, c, d, f, g, h, i, j, k, l, m, n;\n+struct\n+{\n+  int escape;\n+} *b;\n+int e[8];\n+void\n+fn1 (int p1, int p2)\n+{\n+  int o = a;\n+  for (; f; f++)\n+    {\n+      int p;\n+      if (e[h])\n+      continue;\n+      if (fn2 (o, d, l, n, p1, i, j, k, 0==0))\n+      continue;\n+      p = p2;\n+      if (b[g].escape)\n+      p++;\n+      fn3 (\"\", c, m);\n+      if (k)\n+      fn4 (p);\n+    }\n+}"}]}