{"sha": "9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1ZDQ0ZjQ5NWI1ZWQ4ZGFkNTg5MGMzMGNlZDFiMWUzYTgxMjhmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-21T03:25:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-21T03:25:16Z"}, "message": "re PR c++/17232 ([DR 1640] classes and class template specializations treated differently w.r.t. core issue #337)\n\n\tPR c++/17232\n\tPR c++/56642\n\t* pt.c (tsubst_decl): Check return value of register_specialization.\n\t* typeck2.c (abstract_virtuals_error_sfinae): Re-apply complete_type\n\tchange.\n\nFrom-SVN: r196849", "tree": {"sha": "14e8bdf7468a181a82ae9a0ab9568863c0335a17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14e8bdf7468a181a82ae9a0ab9568863c0335a17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "327a1118271129829e9ac0abd894eb29254b93eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327a1118271129829e9ac0abd894eb29254b93eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327a1118271129829e9ac0abd894eb29254b93eb"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "4191c860786f454c212c3da76be45f2153f57db1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "patch": "@@ -1,3 +1,11 @@\n+2013-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/17232\n+\tPR c++/56642\n+\t* pt.c (tsubst_decl): Check return value of register_specialization.\n+\t* typeck2.c (abstract_virtuals_error_sfinae): Re-apply complete_type\n+\tchange.\n+\n 2013-03-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/54359"}, {"sha": "531d8607aff393b0ac5eb46f3e09c030067edec6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "patch": "@@ -10285,7 +10285,13 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t    DECL_TEMPLATE_INFO (r)\n \t      = build_template_info (gen_tmpl, argvec);\n \t    SET_DECL_IMPLICIT_INSTANTIATION (r);\n-\t    register_specialization (r, gen_tmpl, argvec, false, hash);\n+\n+\t    tree new_r\n+\t      = register_specialization (r, gen_tmpl, argvec, false, hash);\n+\t    if (new_r != r)\n+\t      /* We instantiated this while substituting into\n+\t\t the type earlier (template/friend54.C).  */\n+\t      RETURN (new_r);\n \n \t    /* We're not supposed to instantiate default arguments\n \t       until they are called, for a template.  But, for a"}, {"sha": "3bac67cf1192f567fb1b3988b9984973553c7e29", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "patch": "@@ -265,6 +265,10 @@ abstract_virtuals_error_sfinae (tree decl, tree type, abstract_class_use use,\n     return 0;\n   type = TYPE_MAIN_VARIANT (type);\n \n+  /* In SFINAE context, force instantiation.  */\n+  if (!(complain & tf_error))\n+    complete_type (type);\n+\n   /* If the type is incomplete, we register it within a hash table,\n      so that we can check again once it is completed. This makes sense\n      only for objects for which we have a declaration or at least a"}, {"sha": "6905262d6cbfc43504aac42df3c7eeb40c1af729", "filename": "gcc/testsuite/g++.dg/template/abstract-dr337.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fabstract-dr337.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fabstract-dr337.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fabstract-dr337.C?ref=9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "patch": "@@ -6,8 +6,8 @@ class A {\n };\n \n template<typename T>\n-void g(T (*a)[1]) {}\t\t// { dg-error \"abstract\" \"\" { xfail *-*-* } }\n+void g(T (*a)[1]) {}\t\t// { dg-error \"abstract\" \"\" }\n \n int main() {\n-  g<A<int> >(0);  // { dg-error \"no matching function\" \"\" { xfail *-*-* } }\n+  g<A<int> >(0);  // { dg-error \"no matching function\" }\n }"}, {"sha": "ead7a72fcc95cb3c8b1bef966cf741c9bcaf33ab", "filename": "gcc/testsuite/g++.dg/template/friend54.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend54.C?ref=9f5d44f495b5ed8dad5890c30ced1b1e3a8128f7", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/56642\n+\n+template <class T> struct A;\n+\n+template <class T>\n+A<T> f(T*) { return A<T>(); }\n+\n+template <class T>\n+struct A\n+{\n+  friend A f<T>(T*);\n+};\n+\n+int main()\n+{\n+  int *p = 0;\n+  f(p);\n+}"}]}