{"sha": "1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlOWZiMjAyYTFiZTNlMzI1OTkzNWMyNDMyNDJmYTZmZmE1ZjYyZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-09T23:18:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-09T23:18:56Z"}, "message": "dwarf2asm.c (dw2_force_const_mem): Invoke STRIP_NAME_ENCODING on the symbol string.\n\n        * dwarf2asm.c (dw2_force_const_mem): Invoke STRIP_NAME_ENCODING\n        on the symbol string.\n\nFrom-SVN: r46906", "tree": {"sha": "dbfb4fbeb6da1e5284896f2bbe7a6468b31f38fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbfb4fbeb6da1e5284896f2bbe7a6468b31f38fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee9fb202a1be3e3259935c243242fa6ffa5f62d/comments", "author": null, "committer": null, "parents": [{"sha": "1e5cf79655d0915ae27309341b62eafa3f67dab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5cf79655d0915ae27309341b62eafa3f67dab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5cf79655d0915ae27309341b62eafa3f67dab1"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "4a8a99e695094e33a6bd1d52a28b620ba188f1c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee9fb202a1be3e3259935c243242fa6ffa5f62d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee9fb202a1be3e3259935c243242fa6ffa5f62d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "patch": "@@ -1,3 +1,8 @@\n+2001-11-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* dwarf2asm.c (dw2_force_const_mem): Invoke STRIP_NAME_ENCODING\n+\ton the symbol string.\n+\n 2001-11-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* pa/elf.h (ASM_DECLARE_FUNCTION_NAME,\n@@ -37,7 +42,7 @@ Fri Nov  9 17:51:09 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(FIXED_REGISTERS): VRSAVE is fixed.\n \t(CALL_USED_REGISTERS): VRSAVE is call used.\n \n-2001-11-08  Jason Eckhardt  <jle@rice.edu>\n+2001-11-09  Jason Eckhardt  <jle@rice.edu>\n \n \t* config/mips/mips.c (mips_output_conditional_branch): Do not hard\n \tcode the branch target as \".+16/.+12\", but rather use labels."}, {"sha": "05a1ed814879cc5c388ca743710d1fc6b5152b84", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee9fb202a1be3e3259935c243242fa6ffa5f62d/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee9fb202a1be3e3259935c243242fa6ffa5f62d/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "patch": "@@ -763,6 +763,7 @@ dw2_force_const_mem (x)\n      rtx x;\n {\n   splay_tree_node node;\n+  const char *str;\n   tree decl;\n \n   if (! indirect_pool)\n@@ -773,7 +774,9 @@ dw2_force_const_mem (x)\n \n   if (GET_CODE (x) != SYMBOL_REF)\n     abort ();\n-  node = splay_tree_lookup (indirect_pool, (splay_tree_key) XSTR (x, 0));\n+\n+  STRIP_NAME_ENCODING (str, XSTR (x, 0));\n+  node = splay_tree_lookup (indirect_pool, (splay_tree_key) str);\n   if (node)\n     decl = (tree) node->value;\n   else\n@@ -782,9 +785,9 @@ dw2_force_const_mem (x)\n \n       if (USE_LINKONCE_INDIRECT)\n \t{\n-\t  char *ref_name = alloca (strlen (XSTR (x, 0)) + sizeof \"DW.ref.\");\n+\t  char *ref_name = alloca (strlen (str) + sizeof \"DW.ref.\");\n \n-\t  sprintf (ref_name, \"DW.ref.%s\", XSTR (x, 0));\n+\t  sprintf (ref_name, \"DW.ref.%s\", str);\n \t  id = get_identifier (ref_name);\n \t  decl = build_decl (VAR_DECL, id, ptr_type_node);\n \t  DECL_ARTIFICIAL (decl) = 1;\n@@ -804,11 +807,11 @@ dw2_force_const_mem (x)\n \t  DECL_INITIAL (decl) = decl;\n \t}\n \n-      id = maybe_get_identifier (XSTR (x, 0));\n+      id = maybe_get_identifier (str);\n       if (id)\n \tTREE_SYMBOL_REFERENCED (id) = 1;\n \n-      splay_tree_insert (indirect_pool, (splay_tree_key) XSTR (x, 0),\n+      splay_tree_insert (indirect_pool, (splay_tree_key) str,\n \t\t\t (splay_tree_value) decl);\n     }\n "}]}