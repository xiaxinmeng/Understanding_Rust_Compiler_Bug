{"sha": "228d64af4e244faabab5c47506920a1bde85d74e", "node_id": "C_kwDOANBUbNoAKDIyOGQ2NGFmNGUyNDRmYWFiYWI1YzQ3NTA2OTIwYTFiZGU4NWQ3NGU", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-12-14T06:03:52Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-12-14T06:17:18Z"}, "message": "Adjust 'gfortran.dg/goacc/privatization-1-*' [PR103576, PR103697]\n\n... for the recent commit 494ebfa7c9aacaeb6ec1fccc47a0e49f31eb2bb8\n\"Fortran: Handle compare in OpenMP atomic\", which changes the GIMPLE IR\nsuch that a temporary is no longer used; 'original' dump:\n\n             x = *a;\n    -        {\n    -          integer(kind=4) D.4237;\n    -\n    -          D.4237 = *a;\n               #pragma omp atomic relaxed\n    -            &y = D.4237;\n    -        }\n    +          &y = *a;\n           }\n\n(I'm not familiar to comment whether that's correct; but it appears that the\ndifference again disappears in later compiler passes.)\n\nThese OpenACC test cases verify behavior re OpenACC privatization levels, and\nhave to be adjusted accordingly.\n\n\tgcc/testsuite/\n\tPR fortran/103576\n\tPR testsuite/103697\n\t* gfortran.dg/goacc/privatization-1-compute-loop.f90: Adjust.\n\t* gfortran.dg/goacc/privatization-1-compute.f90: Likewise.\n\t* gfortran.dg/goacc/privatization-1-routine_gang-loop.f90:\n\tLikewise.\n\t* gfortran.dg/goacc/privatization-1-routine_gang.f90: Likewise.", "tree": {"sha": "1bd61fe7f2852055eecd5ff8434c3fb409ed6000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bd61fe7f2852055eecd5ff8434c3fb409ed6000"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/228d64af4e244faabab5c47506920a1bde85d74e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228d64af4e244faabab5c47506920a1bde85d74e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228d64af4e244faabab5c47506920a1bde85d74e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228d64af4e244faabab5c47506920a1bde85d74e/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f1239cb43fad3293cf5bcd3678d1cba128d04c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1239cb43fad3293cf5bcd3678d1cba128d04c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f1239cb43fad3293cf5bcd3678d1cba128d04c6"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "47ba5baf439685fecbee28f277e7b5ae17fc490a", "filename": "gcc/testsuite/gfortran.dg/goacc/privatization-1-compute-loop.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute-loop.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute-loop.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute-loop.f90?ref=228d64af4e244faabab5c47506920a1bde85d74e", "patch": "@@ -50,7 +50,6 @@ subroutine f (i, j, a)\n     ! { dg-note {variable 'x' in 'private' clause isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'y' in 'private' clause is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'C\\.[0-9]+' declared in block potentially has improper OpenACC privatization level: 'const_decl'} \"TODO\" { target *-*-* } l_loop$c_loop }\n-    ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'y' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop }\n     !$acc end parallel\n   end subroutine f"}, {"sha": "4813e44a23324179e01e79984896ffc829a8acf7", "filename": "gcc/testsuite/gfortran.dg/goacc/privatization-1-compute.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90?ref=228d64af4e244faabab5c47506920a1bde85d74e", "patch": "@@ -43,6 +43,5 @@ subroutine f (i, j, a)\n     ! { dg-note {variable 'j' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO3\" { xfail *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'a' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO4\" { xfail *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'C\\.[0-9]+' declared in block potentially has improper OpenACC privatization level: 'const_decl'} \"TODO\" { target *-*-* } l_compute$c_compute }\n-    ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_compute$c_compute }\n   end subroutine f\n end module m"}, {"sha": "36f2a886e47e8129bef53a35aaeb1d99ef7e1102", "filename": "gcc/testsuite/gfortran.dg/goacc/privatization-1-routine_gang-loop.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang-loop.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang-loop.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang-loop.f90?ref=228d64af4e244faabab5c47506920a1bde85d74e", "patch": "@@ -50,7 +50,6 @@ subroutine f (i, j, a)\n     ! { dg-note {variable 'x' in 'private' clause isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'y' in 'private' clause is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'C\\.[0-9]+' declared in block potentially has improper OpenACC privatization level: 'const_decl'} \"TODO\" { target *-*-* } l_loop$c_loop }\n-    ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'y' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop }\n   end subroutine f\n end module m"}, {"sha": "0615a445e440b82c1a9b76afadb8c4d91e7e11b9", "filename": "gcc/testsuite/gfortran.dg/goacc/privatization-1-routine_gang.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228d64af4e244faabab5c47506920a1bde85d74e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-routine_gang.f90?ref=228d64af4e244faabab5c47506920a1bde85d74e", "patch": "@@ -43,5 +43,4 @@ end subroutine f\n     ! { dg-note {variable 'j' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n     ! { dg-note {variable 'a' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n     ! { dg-note {variable 'C\\.[0-9]+' declared in block potentially has improper OpenACC privatization level: 'const_decl'} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n-    ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n end module m"}]}