{"sha": "6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4NmRkYzRkNjRjMmY4MWRjYzYyZjI3Nzg3OTZjNDYxY2EzYWVjYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-05-22T07:45:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-05-22T07:45:17Z"}, "message": "Strip target_clones in copy attribute (PR lto/90500).\n\n2019-05-22  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/90500\n\t* c-attribs.c (handle_copy_attribute): Do not copy\n\ttarget_clones attribute.\n2019-05-22  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/90500\n\t* gcc.target/i386/pr90500-1.c: Make the test-case valid\n\tnow.\n2019-05-22  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/90500\n\t* doc/extend.texi: Document the change.\n\nFrom-SVN: r271504", "tree": {"sha": "230047d254178cde05eda9a39db8227ac56b8a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230047d254178cde05eda9a39db8227ac56b8a1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8aa828b6e94aecb188786f49e8b1b7a7cfb5391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8aa828b6e94aecb188786f49e8b1b7a7cfb5391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8aa828b6e94aecb188786f49e8b1b7a7cfb5391"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "d31ac86bdff8332bf247b3b476c7b60106e33199", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -1,3 +1,8 @@\n+2019-05-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/90500\n+\t* doc/extend.texi: Document the change.\n+\n 2019-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90450"}, {"sha": "ae990feeaba2c7d4ea01263ad3f2a3de2b97f988", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -1,3 +1,9 @@\n+2019-05-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/90500\n+\t* c-attribs.c (handle_copy_attribute): Do not copy\n+\ttarget_clones attribute.\n+\n 2019-05-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.h (enum cpp_operation): Add IS_ASSIGNMENT_OPERATOR."}, {"sha": "517b7e0dd01e6372c92ada140c33e0c31ea5fb12", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -2486,7 +2486,8 @@ handle_copy_attribute (tree *node, tree name, tree args,\n \t      || is_attribute_p (\"noinline\", atname)\n \t      || is_attribute_p (\"visibility\", atname)\n \t      || is_attribute_p (\"weak\", atname)\n-\t      || is_attribute_p (\"weakref\", atname))\n+\t      || is_attribute_p (\"weakref\", atname)\n+\t      || is_attribute_p (\"target_clones\", atname))\n \t    continue;\n \n \t  /* Attribute leaf only applies to extern functions."}, {"sha": "78197661424498dde5c17a4b05953f5a014627ff", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -2749,7 +2749,8 @@ or variable) must match the kind of symbol to which the argument refers.\n The @code{copy} attribute copies only syntactic and semantic attributes\n but not attributes that affect a symbol's linkage or visibility such as\n @code{alias}, @code{visibility}, or @code{weak}.  The @code{deprecated}\n-attribute is also not copied.  @xref{Common Type Attributes}.\n+and @code{target_clones} attribute are also not copied.\n+@xref{Common Type Attributes}.\n @xref{Common Variable Attributes}.\n \n For example, the @var{StrongAlias} macro below makes use of the @code{alias}"}, {"sha": "270b54f6ab71482fb4a18029857812e0e1ea6973", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -1,3 +1,9 @@\n+2019-05-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/90500\n+\t* gcc.target/i386/pr90500-1.c: Make the test-case valid\n+\tnow.\n+\n 2019-05-22  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-lim-13.c: New testcase."}, {"sha": "4282a3e8691eace6944d821a21f50588458f50db", "filename": "gcc/testsuite/gcc.target/i386/pr90500-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90500-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d86ddc4d64c2f81dcc62f2778796c461ca3aecb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90500-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90500-1.c?ref=6d86ddc4d64c2f81dcc62f2778796c461ca3aecb", "patch": "@@ -3,6 +3,5 @@\n /* { dg-require-ifunc \"\" } */\n \n __attribute__((target_clones(\"arch=haswell\", \"default\"))) int __tanh() {}\n-__typeof(__tanh) tanhf64 __attribute__((alias(\"__tanh\")))/* { dg-error \"clones for .target_clones. attribute cannot be created\" } */\n-  /* { dg-message \"'target_clones' cannot be combined with 'alias' attribute\" \"\" { target *-*-* } .-1 } */\n+__typeof(__tanh) tanhf64 __attribute__((alias(\"__tanh\")))\n __attribute__((__copy__(__tanh)));"}]}