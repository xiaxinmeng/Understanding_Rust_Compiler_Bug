{"sha": "ae46c4e08a8cbb8359203a90e172a78e3263174b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0NmM0ZTA4YThjYmI4MzU5MjAzYTkwZTE3MmE3OGUzMjYzMTc0Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-17T07:43:41Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-17T07:43:41Z"}, "message": "hooks.c (hook_tree_bool_false): New.\n\n\t* hooks.c (hook_tree_bool_false): New.\n\t* hooks.h: Declare it.\n\t* target-def.h (TARGET_ASM_SELECT_SECTION): New.\n\t(TARGET_ASM_UNIQUE_SECTION, TARGET_IN_SMALL_DATA_P): New.\n\t* target.h (select_section, unique_section): New.\n\t(in_small_data_p): New.\n\t* varasm.c (resolve_unique_section): Use hooks instead of macros.\n\t(variable_section, output_constant_def_contents): Likewise.\n\t(default_select_section, default_unique_section): New.\n\t(categorize_decl_for_section, default_elf_select_section): New.\n\t* output.h: Declare them.\n\n\t* config/darwin.h (ALIAS_SECTION, try_section_alias): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\t(SELECT_SECTION): Move ...\n\t* config/darwin.c (machopic_select_section): ... here.\n\t* config/darwin-protos.h: Update.\n\n\t* config/nextstep.h (TARGET_ASM_SELECT_SECTION): New.\n\t(SELECT_SECTION): Move ...\n\t* config/nextstep.c (nextstep_select_section): ... here.\n\t* config/nextstep-protos.h: Update.\n\n\t* config/elfos.h (UNIQUE_SECTION, SELECT_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\t* config/svr3.h (SELECT_SECTION): Remove.\n\n\t* config/alpha/alpha.c (unicosmk_unique_section): Make static.\n\t(TARGET_ASM_UNIQUE_SECTION) [UNICOS]: New.\n\t(TARGET_IN_SMALL_DATA_P, alpha_in_small_data_p): New.\n\t(alpha_encode_section_info): Use it.\n\t* config/alpha/alpha-protos.h: Update.\n\t* config/alpha/elf.h (DO_SELECT_SECTION): Remove.\n\t(SELECT_SECTION, UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\t* config/alpha/unicosmk.h (UNIQUE_SECTION): Remove.\n\n\t* config/arm/pe.h (UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_UNIQUE_SECTION): New.\n\n\t* config/avr/avr.c (TARGET_ASM_UNIQUE_SECTION): New.\n\t(avr_unique_section): Rename from unique_section; make static.\n\t* config/avr/avr-protos.h: Update.\n\t* config/avr/avr.h (UNIQUE_SECTION): Remove.\n\n\t* config/c4x/c4x.h (SELECT_SECTION): Remove.\n\n\t* config/i386/cygwin.h (UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_UNIQUE_SECTION): New.\n\t* config/i386/i386-interix.h: Likewise.\n\t* config/i386/win32.h: Likewise.\n\t* config/i386/djgpp.h (UNIQUE_SECTION): Remove.\n\t* config/i386/i386.c (ix86_asm_file_end): Use target hook not macro.\n\t* config/i386/sco5.h (SELECT_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\t* config/i386/svr3gas.h (SELECT_SECTION): Remove.\n\n\t* config/i860/paragon.h: Undef TARGET_ASM_SELECT_SECTION\n\tinstead of SELECT_SECTION.\n\t* config/m68k/dpx2.h: Likewise.\n\t* config/rs6000/lynx.h: Likewise.\n\n\t* config/ia64/aix.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION, TARGET_ASM_UNIQUE_SECTION): New.\n\t* config/ia64/ia64.c (TARGET_IN_SMALL_DATA_P): New.\n\t(ia64_in_small_data_p): New.\n\t(ia64_encode_section_info): Use it.  Reorganize overlarge conditional.\n\t(ia64_aix_select_section, ia64_aix_unique_section): New.\n\t* config/ia64/sysv4.h (DO_SELECT_SECTION): Remove.\n\t(SELECT_SECTION, UNIQUE_SECTION): Remove.\n\n\t* config/m32r/m32r.h (SELECT_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\t* config/m32r/m32r.c (m32r_select_section): Take align argument.\n\t* config/m32r/m32r-protos.h: Update.\n\n\t* config/m88k/m88k.h (TARGET_ASM_SELECT_SECTION): New.\n\t(SELECT_SECTION): Move ...\n\t* config/m88k/m88k.c (m88k_select_section): ... here.\n\n\t* config/mcore/mcore-pe.h (SELECT_SECTION): Remove.\n\t* config/mcore/mcore.h (UNIQUE_SECTION): Remove.\n\t* config/mcore/mcore.c (TARGET_ASM_UNIQUE_SECTION): New.\n\t(mcore_unique_section): Make static.\n\t* config/mcore/mcore-protos.h: Update.\n\n\t* config/mips/elf.h (UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_UNIQUE_SECTION): New.\n\t* config/mips/elf64.h: Likewise.\n\t* config/mips/iris6gld.h: Likewise.\n\t* config/mips/linux.h: Likewise.\n\t* config/mips/mips-protos.h: Update.\n\t* config/mips/mips.c (mips_select_section): Add align argument.\n\t* config/mips/mips.h (SELECT_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\n\t* config/mmix/mmix.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n\t* config/mmix/mmix.c (mmix_select_section): Remove.\n\t(mmix_unique_section): Remove.\n\t* config/mmix/mmix-protos.h: Update.\n\n\t* config/pa/pa.h (TARGET_ASM_SELECT_SECTION): New.\n\t(SELECT_SECTION): Move ...\n\t* config/pa/pa.c (pa_select_section): ... here.\n\t* config/pa/pa64-hpux.h (UNIQUE_SECTION): Remove.\n\n\t* config/rs6000/rs6000.c (rs6000_elf_select_section): Rename\n\tfrom rs6000_select_section and make static.\n\t(rs6000_elf_unique_section): Similarly.\n\t(rs6000_xcoff_select_section): From xcoff.h.\n\t(rs6000_xcoff_unique_section): Likewise.\n\t* config/rs6000/rs6000-protos.h: Update.\n\t* config/rs6000/sysv4.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n\t(TARGET_ASM_SELECT_SECTION, TARGET_ASM_UNIQUE_SECTION): New.\n\t* config/rs6000/xcoff.h: Likewise.\n\n\t* config/sparc/aout.h (TARGET_ASM_SELECT_SECTION): New.\n\t(SELECT_SECTION): Move ...\n\t* config/sparc/sparc.c (sparc_aout_select_section): ... here.\n\n\t* config/v850/v850.h (SELECT_SECTION): Move ...\n\t* config/v850/v850.c (v850_select_section): ... here.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\n\t* config/vax/vms.h (SELECT_SECTION): Move ...\n\t* config/vax/vax.c (vms_select_section): ... here.\n\t(TARGET_ASM_SELECT_SECTION): New.\n\n\t* doc/tm.texi: Update SELECT_SECTION and UNIQUE_SECTION docs\n\tfor the target hooks.\n\nFrom-SVN: r53550", "tree": {"sha": "a091fa322b67f7b86562f6228ca9bec436939a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a091fa322b67f7b86562f6228ca9bec436939a5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae46c4e08a8cbb8359203a90e172a78e3263174b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae46c4e08a8cbb8359203a90e172a78e3263174b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae46c4e08a8cbb8359203a90e172a78e3263174b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae46c4e08a8cbb8359203a90e172a78e3263174b/comments", "author": null, "committer": null, "parents": [{"sha": "eaeb23a74961d9e066158d8e597d6ba01f1091b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaeb23a74961d9e066158d8e597d6ba01f1091b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaeb23a74961d9e066158d8e597d6ba01f1091b7"}], "stats": {"total": 2923, "additions": 1228, "deletions": 1695}, "files": [{"sha": "e995d626dcf4d87cd80d79dd0c384298948627ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,3 +1,136 @@\n+2002-05-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* hooks.c (hook_tree_bool_false): New.\n+\t* hooks.h: Declare it.\n+\t* target-def.h (TARGET_ASM_SELECT_SECTION): New.\n+\t(TARGET_ASM_UNIQUE_SECTION, TARGET_IN_SMALL_DATA_P): New.\n+\t* target.h (select_section, unique_section): New.\n+\t(in_small_data_p): New.\n+\t* varasm.c (resolve_unique_section): Use hooks instead of macros.\n+\t(variable_section, output_constant_def_contents): Likewise.\n+\t(default_select_section, default_unique_section): New.\n+\t(categorize_decl_for_section, default_elf_select_section): New.\n+\t* output.h: Declare them.\n+\n+\t* config/darwin.h (ALIAS_SECTION, try_section_alias): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\t(SELECT_SECTION): Move ...\n+\t* config/darwin.c (machopic_select_section): ... here.\n+\t* config/darwin-protos.h: Update.\n+\n+\t* config/nextstep.h (TARGET_ASM_SELECT_SECTION): New.\n+\t(SELECT_SECTION): Move ...\n+\t* config/nextstep.c (nextstep_select_section): ... here.\n+\t* config/nextstep-protos.h: Update.\n+\n+\t* config/elfos.h (UNIQUE_SECTION, SELECT_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\t* config/svr3.h (SELECT_SECTION): Remove.\n+\n+\t* config/alpha/alpha.c (unicosmk_unique_section): Make static.\n+\t(TARGET_ASM_UNIQUE_SECTION) [UNICOS]: New.\n+\t(TARGET_IN_SMALL_DATA_P, alpha_in_small_data_p): New.\n+\t(alpha_encode_section_info): Use it.\n+\t* config/alpha/alpha-protos.h: Update.\n+\t* config/alpha/elf.h (DO_SELECT_SECTION): Remove.\n+\t(SELECT_SECTION, UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\t* config/alpha/unicosmk.h (UNIQUE_SECTION): Remove.\n+\n+\t* config/arm/pe.h (UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_UNIQUE_SECTION): New.\n+\n+\t* config/avr/avr.c (TARGET_ASM_UNIQUE_SECTION): New.\n+\t(avr_unique_section): Rename from unique_section; make static.\n+\t* config/avr/avr-protos.h: Update.\n+\t* config/avr/avr.h (UNIQUE_SECTION): Remove.\n+\n+\t* config/c4x/c4x.h (SELECT_SECTION): Remove.\n+\n+\t* config/i386/cygwin.h (UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_UNIQUE_SECTION): New.\n+\t* config/i386/i386-interix.h: Likewise.\n+\t* config/i386/win32.h: Likewise.\n+\t* config/i386/djgpp.h (UNIQUE_SECTION): Remove.\n+\t* config/i386/i386.c (ix86_asm_file_end): Use target hook not macro.\n+\t* config/i386/sco5.h (SELECT_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\t* config/i386/svr3gas.h (SELECT_SECTION): Remove.\n+\n+\t* config/i860/paragon.h: Undef TARGET_ASM_SELECT_SECTION\n+\tinstead of SELECT_SECTION.\n+\t* config/m68k/dpx2.h: Likewise.\n+\t* config/rs6000/lynx.h: Likewise.\n+\n+\t* config/ia64/aix.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION, TARGET_ASM_UNIQUE_SECTION): New.\n+\t* config/ia64/ia64.c (TARGET_IN_SMALL_DATA_P): New.\n+\t(ia64_in_small_data_p): New.\n+\t(ia64_encode_section_info): Use it.  Reorganize overlarge conditional.\n+\t(ia64_aix_select_section, ia64_aix_unique_section): New.\n+\t* config/ia64/sysv4.h (DO_SELECT_SECTION): Remove.\n+\t(SELECT_SECTION, UNIQUE_SECTION): Remove.\n+\n+\t* config/m32r/m32r.h (SELECT_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\t* config/m32r/m32r.c (m32r_select_section): Take align argument.\n+\t* config/m32r/m32r-protos.h: Update.\n+\n+\t* config/m88k/m88k.h (TARGET_ASM_SELECT_SECTION): New.\n+\t(SELECT_SECTION): Move ...\n+\t* config/m88k/m88k.c (m88k_select_section): ... here.\n+\n+\t* config/mcore/mcore-pe.h (SELECT_SECTION): Remove.\n+\t* config/mcore/mcore.h (UNIQUE_SECTION): Remove.\n+\t* config/mcore/mcore.c (TARGET_ASM_UNIQUE_SECTION): New.\n+\t(mcore_unique_section): Make static.\n+\t* config/mcore/mcore-protos.h: Update.\n+\n+\t* config/mips/elf.h (UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_UNIQUE_SECTION): New.\n+\t* config/mips/elf64.h: Likewise.\n+\t* config/mips/iris6gld.h: Likewise.\n+\t* config/mips/linux.h: Likewise.\n+\t* config/mips/mips-protos.h: Update.\n+\t* config/mips/mips.c (mips_select_section): Add align argument.\n+\t* config/mips/mips.h (SELECT_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\n+\t* config/mmix/mmix.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n+\t* config/mmix/mmix.c (mmix_select_section): Remove.\n+\t(mmix_unique_section): Remove.\n+\t* config/mmix/mmix-protos.h: Update.\n+\n+\t* config/pa/pa.h (TARGET_ASM_SELECT_SECTION): New.\n+\t(SELECT_SECTION): Move ...\n+\t* config/pa/pa.c (pa_select_section): ... here.\n+\t* config/pa/pa64-hpux.h (UNIQUE_SECTION): Remove.\n+\n+\t* config/rs6000/rs6000.c (rs6000_elf_select_section): Rename\n+\tfrom rs6000_select_section and make static.\n+\t(rs6000_elf_unique_section): Similarly.\n+\t(rs6000_xcoff_select_section): From xcoff.h.\n+\t(rs6000_xcoff_unique_section): Likewise.\n+\t* config/rs6000/rs6000-protos.h: Update.\n+\t* config/rs6000/sysv4.h (SELECT_SECTION, UNIQUE_SECTION): Remove.\n+\t(TARGET_ASM_SELECT_SECTION, TARGET_ASM_UNIQUE_SECTION): New.\n+\t* config/rs6000/xcoff.h: Likewise.\n+\n+\t* config/sparc/aout.h (TARGET_ASM_SELECT_SECTION): New.\n+\t(SELECT_SECTION): Move ...\n+\t* config/sparc/sparc.c (sparc_aout_select_section): ... here.\n+\n+\t* config/v850/v850.h (SELECT_SECTION): Move ...\n+\t* config/v850/v850.c (v850_select_section): ... here.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\n+\t* config/vax/vms.h (SELECT_SECTION): Move ...\n+\t* config/vax/vax.c (vms_select_section): ... here.\n+\t(TARGET_ASM_SELECT_SECTION): New.\n+\n+\t* doc/tm.texi: Update SELECT_SECTION and UNIQUE_SECTION docs\n+\tfor the target hooks.\n+\n 2002-05-17  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/arm.c (emit_multi_reg_push): Do not set"}, {"sha": "a1c8cfc3ed0153a000ec0eefcee647d248b0fbe3", "filename": "gcc/config/alpha/alpha-interix.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-interix.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha\n    running Windows/NT.\n-   Copyright (C) 1995, 1996, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1999, 2000, 2002 Free Software Foundation, Inc.\n \n    Donn Terry, Softway Systems, Inc.\n    From code\n@@ -67,13 +67,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* The following are needed for C++, but also needed for profiling */\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n #define USE_CONST_SECTION\t1\n "}, {"sha": "f7745a1859d12762b9badb9a6eb1690f5df5309c", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for alpha.c functions used in the md file & elsewhere.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -176,9 +176,6 @@ extern rtx unicosmk_add_call_info_word PARAMS ((rtx));\n #ifdef RTX_CODE\n extern void unicosmk_defer_case_vector PARAMS ((rtx, rtx));\n #endif\n-#ifdef TREE_CODE\n-extern void unicosmk_unique_section PARAMS ((tree, int));\n-#endif\n extern void unicosmk_add_extern PARAMS ((const char *));\n extern void unicosmk_output_align PARAMS ((FILE *, int));\n extern char * unicosmk_text_section PARAMS ((void));"}, {"sha": "2fb51a218873b2969fa4178e677014c384c95f63", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 38, "deletions": 29, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on the DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001 Free Software Foundation, Inc. \n+   2000, 2001, 2002 Free Software Foundation, Inc. \n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -115,6 +115,8 @@ int alpha_this_gpdisp_sequence_number;\n /* Declarations of static functions.  */\n static bool decl_in_text_section\n   PARAMS ((tree));\n+static bool alpha_in_small_data_p\n+  PARAMS ((tree));\n static int some_small_symbolic_operand_1\n   PARAMS ((rtx *, void *));\n static int split_small_symbolic_operand_1\n@@ -199,15 +201,21 @@ static void vms_asm_out_destructor PARAMS ((rtx, int));\n # define TARGET_SECTION_TYPE_FLAGS vms_section_type_flags\n #endif\n \n+#undef TARGET_IN_SMALL_DATA_P\n+#define TARGET_IN_SMALL_DATA_P alpha_in_small_data_p\n+\n #if TARGET_ABI_UNICOSMK\n static void unicosmk_asm_named_section PARAMS ((const char *, unsigned int));\n static void unicosmk_insert_attributes PARAMS ((tree, tree *));\n static unsigned int unicosmk_section_type_flags PARAMS ((tree, const char *, \n \t\t\t\t\t\t\t int));\n+static void unicosmk_unique_section PARAMS ((tree, int));\n # undef TARGET_INSERT_ATTRIBUTES\n # define TARGET_INSERT_ATTRIBUTES unicosmk_insert_attributes\n # undef TARGET_SECTION_TYPE_FLAGS\n # define TARGET_SECTION_TYPE_FLAGS unicosmk_section_type_flags\n+# undef TARGET_ASM_UNIQUE_SECTION\n+# define TARGET_ASM_UNIQUE_SECTION unicosmk_unique_section\n #endif\n \n #undef TARGET_ASM_ALIGNED_HI_OP\n@@ -1552,6 +1560,32 @@ decl_in_text_section (decl)\n \t\t    && DECL_ONE_ONLY (decl))));\n }\n \n+/* Return true if EXP should be placed in the small data section.  */\n+\n+static bool\n+alpha_in_small_data_p (exp)\n+     tree exp;\n+{\n+  if (TREE_CODE (exp) == VAR_DECL && DECL_SECTION_NAME (exp))\n+    {\n+      const char *section = TREE_STRING_POINTER (DECL_SECTION_NAME (exp));\n+      if (strcmp (section, \".sdata\") == 0\n+\t  || strcmp (section, \".sbss\") == 0)\n+\treturn true;\n+    }\n+  else\n+    {\n+      HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (exp));\n+\n+      /* If this is an incomplete type with size 0, then we can't put it\n+\t in sdata because it might be too big when completed.  */\n+      if (size > 0 && size <= g_switch_value)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* If we are referencing a function that is static, make the SYMBOL_REF\n    special.  We use this to see indicate we can branch to this function\n    without setting PV or restoring GP. \n@@ -1626,32 +1660,7 @@ alpha_encode_section_info (decl, first)\n     is_local = true;\n \n   /* Determine if DECL will wind up in .sdata/.sbss.  */\n-\n-  is_small = false;\n-  if (DECL_SECTION_NAME (decl))\n-    {\n-      const char *section = TREE_STRING_POINTER (DECL_SECTION_NAME (decl));\n-      if (strcmp (section, \".sdata\") == 0\n-\t  || strcmp (section, \".sbss\") == 0)\n-\tis_small = true;\n-    }\n-  else\n-    {\n-      HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (decl));\n-\n-      /* If the variable has already been defined in the output file, then it\n-\t is too late to put it in sdata if it wasn't put there in the first\n-\t place.  The test is here rather than above, because if it is already\n-\t in sdata, then it can stay there.  */\n-\n-      if (TREE_ASM_WRITTEN (decl))\n-\t;\n-\n-      /* If this is an incomplete type with size 0, then we can't put it in\n-\t sdata because it might be too big when completed.  */\n-      else if (size > 0 && size <= g_switch_value)\n-\tis_small = true;\n-    }\n+  is_small = alpha_in_small_data_p (decl);\n \n   /* Finally, encode this into the symbol string.  */\n   if (is_local)\n@@ -8546,7 +8555,7 @@ unicosmk_section_type_flags (decl, name, reloc)\n /* Generate a section name for decl and associate it with the\n    declaration.  */\n \n-void\n+static void\n unicosmk_unique_section (decl, reloc)\n       tree decl;\n       int reloc ATTRIBUTE_UNUSED;\n@@ -8626,7 +8635,7 @@ unicosmk_insert_attributes (decl, attr_ptr)\n {\n   if (DECL_P (decl)\n       && (TREE_PUBLIC (decl) || TREE_CODE (decl) == FUNCTION_DECL))\n-    UNIQUE_SECTION (decl, 0);\n+    unicosmk_unique_section (decl, 0);\n }\n \n /* Output an alignment directive. We have to use the macro 'gcc@code@align'"}, {"sha": "55199983aab10856435f8a6315c02c8d4bad37cd", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 2, "deletions": 159, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -191,13 +191,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef  ASCII_DATA_ASM_OP\n #define ASCII_DATA_ASM_OP\t\"\\t.ascii\\t\"\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n #undef USE_CONST_SECTION\n #define USE_CONST_SECTION\t1\n@@ -284,161 +278,10 @@ void FN ()\t\t\t\t\t\\\n \n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section\n-\n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.\n-\n-   Set SECNUM to:\n-\t0\t.text\n-\t1\t.rodata\n-\t2\t.data\n-\t3\t.sdata\n-\t4\t.bss\n-\t5\t.sbss\n-*/\n-\n-#define DO_SELECT_SECTION(SECNUM, DECL, RELOC)\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-     {\t\t\t\t\t\t\t\t\\\n-       HOST_WIDE_INT size;\t\t\t\t\t\\\n-       SECNUM = 1;\t\t\t\t\t\t\\\n-       if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   SECNUM = 0;\t\t\t\t\t\t\\\n-\t   break;\t\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-       else if (TREE_CODE (DECL) == STRING_CST)\t\t\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   if (flag_writable_strings)\t\t\t\t\\\n-\t     SECNUM = 2;\t\t\t\t\t\\\n-\t   else\t\t\t\t\t\t\t\\\n-\t     SECNUM = 0x101;\t\t\t\t\t\\\n-\t   break;\t\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-       else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   if (DECL_INITIAL (DECL) == NULL\t\t\t\\\n-\t       || DECL_INITIAL (DECL) == error_mark_node)\t\\\n-\t     SECNUM = 4;\t\t\t\t\t\\\n-\t   else if ((flag_pic && RELOC)\t\t\t\t\\\n-\t\t    || ! TREE_READONLY (DECL)\t\t\t\\\n-\t\t    || TREE_SIDE_EFFECTS (DECL)\t\t\t\\\n-\t\t    || ! TREE_CONSTANT (DECL_INITIAL (DECL)))\t\\\n-\t     SECNUM = 2;\t\t\t\t\t\\\n-\t  else if (flag_merge_constants >= 2)\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      /* C and C++ don't allow different variables to\t\\\n-\t\t share the same location.  -fmerge-all-constants\\\n-\t\t allows even that (at the expense of not\t\\\n-\t\t conforming).  */\t\t\t\t\\\n-\t      if (TREE_CODE (DECL_INITIAL (DECL)) == STRING_CST)\\\n-\t\tSECNUM = 0x201;\t\t\t\t\t\\\n-\t      else\t\t\t\t\t\t\\\n-\t\tSECNUM = 0x301;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-       else if (TREE_CODE (DECL) == CONSTRUCTOR)\t\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   if ((flag_pic && RELOC)\t\t\t\t\\\n-\t       || TREE_SIDE_EFFECTS (DECL)\t\t\t\\\n-\t       || ! TREE_CONSTANT (DECL))\t\t\t\\\n-\t     SECNUM = 2;\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-       /* Select small data sections based on size.  */\t\t\\\n-       size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\\\n-       if (size >= 0 && size <= g_switch_value)\t\t\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   if ((SECNUM & 0xff) >= 2)\t\t\t\t\\\n-\t     SECNUM += 1;\t\t\t\t\t\\\n-\t   /* Move readonly data to .sdata only if -msmall-data.  */ \\\n-\t   /* ??? Consider .sdata.{lit4,lit8} as\t\t\\\n-\t      SHF_MERGE|SHF_ALPHA_GPREL.  */\t\t\t\\\n-\t   else if (TARGET_SMALL_DATA)\t\t\t\t\\\n-\t     SECNUM = 3;\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\\\n-   while (0)\n-\n-#undef  SELECT_SECTION\n-#define SELECT_SECTION(DECL, RELOC, ALIGN)\t\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      typedef void (*sec_fn) PARAMS ((void));\t\t\\\n-      static sec_fn const sec_functions[6] =\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\ttext_section,\t\t\t\t\t\\\n-\tconst_section,\t\t\t\t\t\\\n-\tdata_section,\t\t\t\t\t\\\n-\tsdata_section,\t\t\t\t\t\\\n-\tbss_section,\t\t\t\t\t\\\n-\tsbss_section\t\t\t\t\t\\\n-      };\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-      int sec;\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\\\n-\t\t\t\t\t\t\t\\\n-      switch (sec)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\tcase 0x101:\t\t\t\t\t\\\n-\t  mergeable_string_section (DECL, ALIGN, 0);\t\\\n-\t  break;\t\t\t\t\t\\\n-\tcase 0x201:\t\t\t\t\t\\\n-\t  mergeable_string_section (DECL_INITIAL (DECL),\\\n-\t\t\t\t    ALIGN, 0);\t\t\\\n-\t  break;\t\t\t\t\t\\\n-\tcase 0x301:\t\t\t\t\t\\\n-\t  mergeable_constant_section (DECL_MODE (DECL),\t\\\n-\t\t\t\t      ALIGN, 0);\t\\\n-\t  break;\t\t\t\t\t\\\n-\tdefault:\t\t\t\t\t\\\n-\t  (*sec_functions[sec]) ();\t\t\t\\\n-\t  break;\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n+#define TARGET_ASM_SELECT_SECTION  default_elf_select_section\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n \n-#undef  UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      static const char * const prefixes[6][2] =\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\t\\\n-\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\t\\\n-\t{ \".data.\",   \".gnu.linkonce.d.\" },\t\t\t\t\\\n-\t{ \".sdata.\",  \".gnu.linkonce.s.\" },\t\t\t\t\\\n-\t{ \".bss.\",    \".gnu.linkonce.b.\" },\t\t\t\t\\\n-\t{ \".sbss.\",   \".gnu.linkonce.sb.\" }\t\t\t\t\\\n-      };\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      int nlen, plen, sec;\t\t\t\t\t\t\\\n-      const char *name, *prefix;\t\t\t\t\t\\\n-      char *string;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\t\\\n-      STRIP_NAME_ENCODING (name, name);\t\t\t\t\t\\\n-      nlen = strlen (name);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      prefix = prefixes[sec & 0xff][DECL_ONE_ONLY(DECL)];\t\t\\\n-      plen = strlen (prefix);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      string = alloca (nlen + plen + 1);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      memcpy (string, prefix, plen);\t\t\t\t\t\\\n-      memcpy (string + plen, name, nlen + 1);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (nlen + plen, string);\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* A C statement or statements to switch to the appropriate\n    section for output of RTX in mode MODE.  RTX is some kind\n    of constant in RTL.  The argument MODE is redundant except"}, {"sha": "6cf19acf44679241d0b385917ead37b06151fa0c", "filename": "gcc/config/alpha/unicosmk.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Funicosmk.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Falpha%2Funicosmk.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Funicosmk.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha on Cray\n    T3E running Unicos/Mk.\n-   Copyright (C) 2001\n+   Copyright (C) 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Roman Lechtchinsky (rl@cs.tu-berlin.de)\n \n@@ -380,16 +380,6 @@ ssib_section ()\t\t\t\\\n   in_section = in_ssib;\t\t\\\n }\n \n-/* A C expression which evaluates to true if declshould be placed into a\n-   unique section for some target-specific reason. On Unicos/Mk, functions\n-   and public variables are always placed in unique sections.  */ \n-\n-/*\n-#define UNIQUE_SECTION_P(DECL) (TREE_PUBLIC (DECL)\t\t\\\n-\t\t\t\t|| TREE_CODE (DECL) == FUNCTION_DECL)\n-*/\n-#define UNIQUE_SECTION(DECL, RELOC) unicosmk_unique_section (DECL, RELOC)\n-\n /* This outputs text to go at the start of an assembler file.  */\n \n #undef ASM_FILE_START"}, {"sha": "7fb0ed9b5dfbbb0e721dd781fedd9cca1e18d7c7", "filename": "gcc/config/arm/pe.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Routines for GCC for ARM/pe.\n-   Copyright (C) 1995, 1996, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Doug Evans (dje@cygnus.com).\n \n This file is part of GNU CC.\n@@ -248,8 +248,6 @@ arm_pe_encode_section_info (decl, first)\n     }\n }\n \n-/* Cover function for UNIQUE_SECTION.  */\n-\n void\n arm_pe_unique_section (decl, reloc)\n      tree decl;"}, {"sha": "72fa77d44e3834297f30c78a23cd81ecc357f5b4", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM with PE obj format.\n-   Copyright (C) 1995, 1996, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1999, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Doug Evans (dje@cygnus.com).\n    \n This file is part of GNU CC.\n@@ -111,7 +111,7 @@ Boston, MA 02111-1307, USA.  */\n    symbols must be explicitly imported from shared libraries (DLLs).  */\n #define MULTIPLE_SYMBOL_SPACES\n \n-#define UNIQUE_SECTION(DECL, RELOC) arm_pe_unique_section (DECL, RELOC)\n+#define TARGET_ASM_UNIQUE_SECTION arm_pe_unique_section\n \n #define SUPPORTS_ONE_ONLY 1\n "}, {"sha": "1a239d22587d8882fbbd8770ec27cfaeb6617179", "filename": "gcc/config/avr/avr-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Prototypes for exported functions defined in avr.c\n    \n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Denis Chertykov (denisc@overta.ru)\n \n    This file is part of GNU CC.\n@@ -43,7 +43,6 @@ extern void   gas_output_ascii          PARAMS ((FILE *file, const char *str,\n #ifdef TREE_CODE\n extern void   asm_output_external          PARAMS ((FILE *file, tree decl,\n \t\t\t\t\t\t   char *name));\n-extern void   unique_section               PARAMS ((tree decl, int reloc));\n extern void   encode_section_info          PARAMS ((tree decl, int));\n extern int    avr_progmem_p                PARAMS ((tree decl));\n "}, {"sha": "955f1b146a40c8e0e0c2ca254d4bf45e4fb2adbb", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -63,6 +63,7 @@ const struct attribute_spec avr_attribute_table[];\n static bool   avr_assemble_integer PARAMS ((rtx, unsigned int, int));\n static void   avr_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void   avr_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n+static void   avr_unique_section PARAMS ((tree, int));\n \n /* Allocate registers from r25 to r8 for parameters for function calls */\n #define FIRST_CUM_REG 26\n@@ -196,6 +197,8 @@ int avr_case_values_threshold = 30000;\n #define TARGET_ASM_FUNCTION_EPILOGUE avr_output_function_epilogue\n #undef TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE avr_attribute_table\n+#undef TARGET_ASM_UNIQUE_SECTION\n+#define TARGET_ASM_UNIQUE_SECTION avr_unique_section\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -4498,8 +4501,8 @@ avr_assemble_integer (x, size, aligned_p)\n \n /* Sets section name for declaration DECL */\n   \n-void\n-unique_section (decl, reloc)\n+static void\n+avr_unique_section (decl, reloc)\n      tree decl;\n      int reloc ATTRIBUTE_UNUSED;\n {"}, {"sha": "dcba8567e40f632f6f4d27c7ecddc8796a66fb47", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1791,17 +1791,6 @@ progmem_section (void)\t\t\t\t\t\t\t      \\\n    If these items should be placed in the text section, this macro\n    should not be defined.  */\n \n-/* `SELECT_SECTION (EXP, RELOC, ALIGN)'\n-   A C statement or statements to switch to the appropriate section\n-   for output of EXP.  You can assume that EXP is either a `VAR_DECL'\n-   node or a constant of some sort.  RELOC indicates whether the\n-   initial value of EXP requires link-time relocations.  Select the\n-   section by calling `text_section' or one of the alternatives for\n-   other sections.\n-\n-   Do not define this macro if you put all read-only variables and\n-   constants in the read-only data section (usually the text section).  */\n-\n /* `SELECT_RTX_SECTION (MODE, RTX, ALIGN)'\n    A C statement or statements to switch to the appropriate section\n    for output of RTX in mode MODE.  You can assume that RTX is some\n@@ -1842,14 +1831,6 @@ progmem_section (void)\t\t\t\t\t\t\t      \\\n    characters that encode section info.  Define this macro if\n    `ENCODE_SECTION_INFO' alters the symbol's name string.  */\n \n-#define UNIQUE_SECTION(DECL, RELOC) unique_section (DECL, RELOC)\n-/* `UNIQUE_SECTION (DECL, RELOC)'\n-   A C statement to build up a unique section name, expressed as a\n-   STRING_CST node, and assign it to `DECL_SECTION_NAME (DECL)'.\n-   RELOC indicates whether the initial value of EXP requires\n-   link-time relocations.  If you do not define this macro, GNU CC\n-   will use the symbol name prefixed by `.' as the section name.  */\n-\n #define ASM_FILE_START(STREAM) asm_file_start (STREAM)\n /* A C expression which outputs to the stdio stream STREAM some\n    appropriate text to go at the start of an assembler file."}, {"sha": "04dbe52c6822d0dea2b3fd7266f74c09c54a4452", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1738,35 +1738,6 @@ const_section ()\t\t\t\t\t\t\t\\\n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION c4x_asm_named_section\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-\n-#define SELECT_SECTION(DECL, RELOC, ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((0 && RELOC)\t/* Should be (flag_pic && RELOC).  */\t\t\\\n-\t  || ! TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t  || ! DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node\t\t\t\\\n-\t      && ! TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n-\n /* The TI assembler wants to have hex numbers this way.  */\n \n #undef HOST_WIDE_INT_PRINT_HEX"}, {"sha": "f13d90c4e0168aed3cf028759f5d28e64c8fcc70", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -2757,18 +2757,6 @@ extern const char *d30v_branch_cost_string;\n    be defined.  */\n /* #define READONLY_DATA_SECTION */\n \n-/* A C statement or statements to switch to the appropriate section for output\n-   of EXP.  You can assume that EXP is either a `VAR_DECL' node or a constant\n-   of some sort.  RELOC indicates whether the initial value of EXP requires\n-   link-time relocations.  Select the section by calling `text_section' or one\n-   of the alternatives for other sections.\n-\n-   Do not define this macro if you put all read-only variables and constants in\n-   the read-only data section (usually the text section).\n-\n-   Defined in svr4.h.  */\n-/* #define SELECT_SECTION(EXP, RELOC, ALIGN) */\n-\n /* A C statement or statements to switch to the appropriate section for output\n    of RTX in mode MODE.  You can assume that RTX is some kind of constant in\n    RTL.  The argument MODE is redundant except in the case of a `const_int'\n@@ -2792,16 +2780,6 @@ extern const char *d30v_branch_cost_string;\n    that encode section info.  Define this macro if `ENCODE_SECTION_INFO' alters\n    the symbol's name string.  */\n /* #define STRIP_NAME_ENCODING(VAR, SYM_NAME) */\n-\n-/* A C statement to build up a unique section name, expressed as a\n-   STRING_CST node, and assign it to `DECL_SECTION_NAME (DECL)'.\n-   RELOC indicates whether the initial value of EXP requires\n-   link-time relocations.  If you do not define this macro, GNU CC\n-   will use the symbol name prefixed by `.' as the section name.\n-\n-   Defined in svr4.h.  */\n-/* #define UNIQUE_SECTION(DECL, RELOC) */\n-\n \f\n /* Position Independent Code.  */\n "}, {"sha": "9a9c9538572a9e4570acc2fbad08efe3d531452b", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -68,6 +68,8 @@ extern void machopic_output_possible_stub_label PARAMS ((FILE *, const char*));\n \n extern void darwin_exception_section PARAMS ((void));\n extern void darwin_eh_frame_section PARAMS ((void));\n+extern void machopic_select_section PARAMS ((tree, int,\n+\t\t\t\t\t     unsigned HOST_WIDE_INT));\n \n #ifdef GCC_C_PRAGMA_H\n extern void darwin_pragma_ignore PARAMS ((cpp_reader *));"}, {"sha": "8a3a2da8e11aaf232515be90863dffca398ec29a", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 129, "deletions": 1, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Functions for generic Darwin as target machine for GNU C compiler.\n-   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001\n+   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -1109,6 +1109,134 @@ update_stubs (name)\n     }\n }\n \n+void\n+machopic_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (exp) == STRING_CST)\n+    {\n+      if (flag_writable_strings)\n+\tdata_section ();\n+      else if (TREE_STRING_LENGTH (exp) !=\n+\t       strlen (TREE_STRING_POINTER (exp)) + 1)\n+\treadonly_data_section ();\n+      else\n+\tcstring_section ();\n+    }\n+  else if (TREE_CODE (exp) == INTEGER_CST\n+\t   || TREE_CODE (exp) == REAL_CST)\n+    {\n+      tree size = TYPE_SIZE (TREE_TYPE (exp));\n+\n+      if (TREE_CODE (size) == INTEGER_CST &&\n+\t  TREE_INT_CST_LOW (size) == 4 &&\n+\t  TREE_INT_CST_HIGH (size) == 0)\n+\tliteral4_section ();\n+      else if (TREE_CODE (size) == INTEGER_CST &&\n+\t       TREE_INT_CST_LOW (size) == 8 &&\n+\t       TREE_INT_CST_HIGH (size) == 0)\n+\tliteral8_section ();\n+      else\n+\treadonly_data_section ();\n+    }\n+  else if (TREE_CODE (exp) == CONSTRUCTOR\n+\t   && TREE_TYPE (exp)\n+\t   && TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\n+\t   && TYPE_NAME (TREE_TYPE (exp)))\n+    {\n+      tree name = TYPE_NAME (TREE_TYPE (exp));\n+      if (TREE_CODE (name) == TYPE_DECL)\n+\tname = DECL_NAME (name);\n+      if (!strcmp (IDENTIFIER_POINTER (name), \"NSConstantString\"))\n+\tobjc_constant_string_object_section ();\n+      else if (!strcmp (IDENTIFIER_POINTER (name), \"NXConstantString\"))\n+\tobjc_string_object_section ();\n+      else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+\t{\n+\t  if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\n+\t    const_data_section ();\n+\t  else\n+\t    readonly_data_section ();\n+\t}\n+      else\n+\tdata_section ();\n+    }\n+  else if (TREE_CODE (exp) == VAR_DECL &&\n+\t   DECL_NAME (exp) &&\n+\t   TREE_CODE (DECL_NAME (exp)) == IDENTIFIER_NODE &&\n+\t   IDENTIFIER_POINTER (DECL_NAME (exp)) &&\n+\t   !strncmp (IDENTIFIER_POINTER (DECL_NAME (exp)), \"_OBJC_\", 6))\n+    {\n+      const char *name = IDENTIFIER_POINTER (DECL_NAME (exp));\n+\n+      if (!strncmp (name, \"_OBJC_CLASS_METHODS_\", 20))\n+\tobjc_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_INSTANCE_METHODS_\", 23))\n+\tobjc_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_CLASS_METHODS_\", 20))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_INSTANCE_METHODS_\", 23))\n+\tobjc_cat_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_VARIABLES_\", 22))\n+\tobjc_class_vars_section ();\n+      else if (!strncmp (name, \"_OBJC_INSTANCE_VARIABLES_\", 25))\n+\tobjc_instance_vars_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_PROTOCOLS_\", 22))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_NAME_\", 17))\n+\tobjc_class_names_section ();\n+      else if (!strncmp (name, \"_OBJC_METH_VAR_NAME_\", 20))\n+\tobjc_meth_var_names_section ();\n+      else if (!strncmp (name, \"_OBJC_METH_VAR_TYPE_\", 20))\n+\tobjc_meth_var_types_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_REFERENCES\", 22))\n+\tobjc_cls_refs_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_\", 12))\n+\tobjc_class_section ();\n+      else if (!strncmp (name, \"_OBJC_METACLASS_\", 16))\n+\tobjc_meta_class_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_\", 15))\n+\tobjc_category_section ();\n+      else if (!strncmp (name, \"_OBJC_SELECTOR_REFERENCES\", 25))\n+\tobjc_selector_refs_section ();\n+      else if (!strncmp (name, \"_OBJC_SELECTOR_FIXUP\", 20))\n+\tobjc_selector_fixup_section ();\n+      else if (!strncmp (name, \"_OBJC_SYMBOLS\", 13))\n+\tobjc_symbols_section ();\n+      else if (!strncmp (name, \"_OBJC_MODULES\", 13))\n+\tobjc_module_info_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_INSTANCE_METHODS_\", 32))\n+\tobjc_cat_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_CLASS_METHODS_\", 29))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_REFS_\", 20))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))\n+\tobjc_protocol_section ();\n+      else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+\t       && !TREE_SIDE_EFFECTS (exp))\n+\t{\n+\t  if (flag_pic && reloc)\n+\t    const_data_section ();\n+\t  else\n+\t    readonly_data_section ();\n+\t}\n+      else\n+\tdata_section ();\n+    }\n+  else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+    {\n+      if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\n+\tconst_data_section ();\n+      else\n+\treadonly_data_section ();\n+    }\n+  else\n+    data_section ();\n+}\n+\n void\n machopic_asm_out_constructor (symbol, priority)\n      rtx symbol;"}, {"sha": "19c7a096a080adeed6e54e11f15049fe5778fcbb", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 151, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -316,11 +316,6 @@ FUNCTION ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n \n-#define ALIAS_SECTION(enum_value, alias_name) \t\t\t\t\\\n-do { if (!strcmp (alias_name, name))\t\t\t\t\t\\\n-       section_alias[enum_value] = (alias ? get_identifier (alias) : 0);  \\\n-   } while (0)\n-\n /* Darwin uses many types of special sections.  */\n \n #undef\tEXTRA_SECTIONS\n@@ -486,157 +481,13 @@ objc_section_init ()\t\t\t\t\\\n       objc_module_info_section ();\t\t\\\n       objc_symbols_section ();\t\t\t\\\n     }\t\t\t\t\t\t\\\n-} \t\t\t\t\t\t\\\n-static tree section_alias[(int) num_sections];\t\\\n-static void try_section_alias PARAMS ((void));\t\\\n-static void try_section_alias () \t\t\\\n-{\t\t\t\t\t\t\\\n-    if (section_alias[in_section] && asm_out_file) \\\n-      fprintf (asm_out_file, \"%s\\n\",\t\t\\\n-\t       IDENTIFIER_POINTER (section_alias[in_section]));\t\\\n-}      \t\t\t\t\t\t\\\n-\n-#if 0\n-static void alias_section PARAMS ((const char *, const char *)); \\\n-static void alias_section (name, alias)\t\t\t\\\n-     const char *name, *alias;\t\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-    ALIAS_SECTION (in_data, \"data\");\t\t\t\\\n-    ALIAS_SECTION (in_text, \"text\");\t\t\t\\\n-    ALIAS_SECTION (in_const, \"const\");\t\t\t\\\n-    ALIAS_SECTION (in_const_data, \"const_data\");\t\\\n-    ALIAS_SECTION (in_cstring, \"cstring\");\t\t\\\n-    ALIAS_SECTION (in_literal4, \"literal4\");\t\t\\\n-    ALIAS_SECTION (in_literal8, \"literal8\");\t\t\\\n }\n-#endif\n \n #undef\tREADONLY_DATA_SECTION\n #define READONLY_DATA_SECTION const_section\n \n-#undef\tSELECT_SECTION\n-#define SELECT_SECTION(exp,reloc,align)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (exp) == STRING_CST)\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  if (flag_writable_strings)\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\\\n-\t  else if (TREE_STRING_LENGTH (exp) !=\t\t\t\\\n-\t\t   strlen (TREE_STRING_POINTER (exp)) + 1)\t\\\n-\t    readonly_data_section ();\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    cstring_section ();\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == INTEGER_CST\t\t\t\\\n-\t       || TREE_CODE (exp) == REAL_CST)\t\t\t\\\n-        {\t\t\t\t\t\t\t\\\n-\t  tree size = TYPE_SIZE (TREE_TYPE (exp));\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  if (TREE_CODE (size) == INTEGER_CST &&\t\t\\\n-\t      TREE_INT_CST_LOW (size) == 4 &&\t\t\t\\\n-\t      TREE_INT_CST_HIGH (size) == 0)\t\t\t\\\n-\t    literal4_section ();\t\t\t\t\\\n-\t  else if (TREE_CODE (size) == INTEGER_CST &&\t\t\\\n-\t      TREE_INT_CST_LOW (size) == 8 &&\t\t\t\\\n-\t      TREE_INT_CST_HIGH (size) == 0)\t\t\t\\\n-\t    literal8_section ();\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    readonly_data_section ();\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == CONSTRUCTOR\t\t\t\t\\\n-\t       && TREE_TYPE (exp)\t\t\t\t\t\\\n-\t       && TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\t\t\\\n-\t       && TYPE_NAME (TREE_TYPE (exp)))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  tree name = TYPE_NAME (TREE_TYPE (exp));\t\t\t\\\n-\t  if (TREE_CODE (name) == TYPE_DECL)\t\t\t\t\\\n-\t    name = DECL_NAME (name);\t\t\t\t\t\\\n-\t  if (!strcmp (IDENTIFIER_POINTER (name), \"NSConstantString\"))\t\\\n-\t    objc_constant_string_object_section ();\t\t\t\\\n-\t  else if (!strcmp (IDENTIFIER_POINTER (name), \"NXConstantString\")) \\\n-\t    objc_string_object_section ();\t\t\t\t\\\n-\t  else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\t\t\\\n-\t\tconst_data_section ();\t\t\t\t\t\\\n-\t      else\t\t\t\t\t\t\t\\\n-\t\treadonly_data_section (); \t\t\t\t\\\n-            }\t\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == VAR_DECL &&\t\t\t\t\\\n-\t       DECL_NAME (exp) &&\t\t\t\t\t\\\n-\t       TREE_CODE (DECL_NAME (exp)) == IDENTIFIER_NODE &&\t\\\n-\t       IDENTIFIER_POINTER (DECL_NAME (exp)) &&\t\t\t\\\n-\t       !strncmp (IDENTIFIER_POINTER (DECL_NAME (exp)), \"_OBJC_\", 6)) \\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  const char *name = IDENTIFIER_POINTER (DECL_NAME (exp));\t\\\n-\t  \t\t\t\t\t\t\t\t\\\n-\t  if (!strncmp (name, \"_OBJC_CLASS_METHODS_\", 20))\t\t\\\n-\t    objc_cls_meth_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_INSTANCE_METHODS_\", 23))\t\\\n-\t    objc_inst_meth_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_CLASS_METHODS_\", 20)) \\\n-\t    objc_cat_cls_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_INSTANCE_METHODS_\", 23)) \\\n-\t    objc_cat_inst_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_VARIABLES_\", 22))\t\\\n-\t    objc_class_vars_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_INSTANCE_VARIABLES_\", 25))\t\\\n-\t    objc_instance_vars_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_PROTOCOLS_\", 22))\t\\\n-\t    objc_cat_cls_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_NAME_\", 17))\t\t\\\n-\t    objc_class_names_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METH_VAR_NAME_\", 20))\t\t\\\n-\t    objc_meth_var_names_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METH_VAR_TYPE_\", 20))\t\t\\\n-\t    objc_meth_var_types_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_REFERENCES\", 22))\t\\\n-\t    objc_cls_refs_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_\", 12))\t\t\t\\\n-\t    objc_class_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METACLASS_\", 16))\t\t\\\n-\t    objc_meta_class_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_\", 15))\t\t\\\n-\t    objc_category_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_SELECTOR_REFERENCES\", 25))\t\\\n-\t    objc_selector_refs_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_SELECTOR_FIXUP\", 20))\t\t\\\n-\t    objc_selector_fixup_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_SYMBOLS\", 13))\t\t\\\n-\t    objc_symbols_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_MODULES\", 13))\t\t\\\n-\t    objc_module_info_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_INSTANCE_METHODS_\", 32)) \\\n-\t    objc_cat_inst_meth_section ();                              \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_CLASS_METHODS_\", 29)) \\\n-\t    objc_cat_cls_meth_section ();                               \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_REFS_\", 20))         \\\n-\t    objc_cat_cls_meth_section ();                               \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))              \\\n-\t    objc_protocol_section ();                                   \\\n-\t  else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\t\t\\\n-\t\t&& !TREE_SIDE_EFFECTS (exp))     \t\t\t\\\n-             { if (flag_pic && reloc ) const_data_section ();             \\\n-               else readonly_data_section (); }                       \t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\t\t\\\n-\t    const_data_section ();\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    readonly_data_section (); \t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        data_section ();\t\t\t\t\t\t\\\n-      try_section_alias ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION machopic_select_section\n \n /* This can be called with address expressions as \"rtx\".\n    They must go in \"const\". */"}, {"sha": "ea11b653f5ffb27f123131eaa211955d1d36dd88", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 4, "deletions": 121, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* elfos.h  --  operating system specific defines to be used when\n    targeting GCC for some generic ELF system\n-   Copyright (C) 1991, 1994, 1995, 1999, 2000, 2001\n+   Copyright (C) 1991, 1994, 1995, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Based on svr4.h contributed by Ron Guilmette (rfg@netcom.com).\n \n@@ -216,16 +216,9 @@ Boston, MA 02111-1307, USA.  */\n #undef  ASCII_DATA_ASM_OP\n #define ASCII_DATA_ASM_OP\t\"\\t.ascii\\t\"\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n #define USE_CONST_SECTION\t1\n-\n #define CONST_SECTION_ASM_OP\t\"\\t.section\\t.rodata\"\n \n /* On svr4, we *do* have support for the .init and .fini sections, and we\n@@ -279,45 +272,6 @@ const_section ()\t\t\t\t\t\t\\\n }\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-\n-#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      int len;\t\t\t\t\t\t\t\\\n-      int sec;\t\t\t\t\t\t\t\\\n-      const char *name;\t\t\t\t\t\t\\\n-      char *string;\t\t\t\t\t\t\\\n-      const char *prefix;\t\t\t\t\t\\\n-      static const char *const prefixes[4][2] =\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\\\n-\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\\\n-\t{ \".data.\",   \".gnu.linkonce.d.\" },\t\t\t\\\n-\t{ \".bss.\",    \".gnu.linkonce.b.\" }\t\t\t\\\n-      };\t\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\tsec = 0;\t\t\t\t\t\t\\\n-      else if (DECL_INITIAL (DECL) == 0\t\t\t\t\\\n-\t       || DECL_INITIAL (DECL) == error_mark_node)\t\\\n-        sec =  3;\t\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n-\tsec = 1;\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tsec = 2;\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      name   = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n-      /* Strip off any encoding in name.  */\t\t\t\\\n-      STRIP_NAME_ENCODING (name, name);\t\t\t\t\\\n-      prefix = prefixes[sec][DECL_ONE_ONLY(DECL)];\t\t\\\n-      len    = strlen (name) + strlen (prefix);\t\t\t\\\n-      string = alloca (len + 1);\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n      \n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section\n@@ -334,79 +288,8 @@ const_section ()\t\t\t\t\t\t\\\n #define SELECT_RTX_SECTION(MODE, RTX, ALIGN)\t\\\n   mergeable_constant_section ((MODE), (ALIGN), 0)\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  \n- \n-   To optimize loading of shared programs, define following subsections\n-   of data section by attaching:\n-\n-   .rel\n-     Section with this string in name contains data that do have\n-     relocations, so they get grouped together and dynamic linker\n-     will visit fewer pages in memory.\n-   .ro\n-     Marks data read only otherwise.  This is useful with prelinking\n-     as most of relocations won't be dynamically linked and thus\n-     stay read only.\n-   .local\n-     Marks data containing relocations only to local objects.  These\n-     relocation will get fully resolved by prelinking.\n- */\n-\n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL, RELOC, ALIGN)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\\\n-\tmergeable_string_section ((DECL), (ALIGN), 0);\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (!TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\\\n-\t  || !DECL_INITIAL (DECL)\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  if (flag_pic && ((RELOC) & 2))\t\t\t\\\n-\t    named_section (NULL_TREE, \".data.rel\", RELOC);\t\\\n-\t  else if (flag_pic && (RELOC))\t\t\t\t\\\n-\t    named_section (NULL_TREE, \".data.rel.local\", RELOC);\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      else if (flag_pic && ((RELOC) & 2))\t\t\t\\\n-\tnamed_section (NULL_TREE, \".data.rel.ro\", RELOC);\t\\\n-      else if (flag_pic && (RELOC))\t\t\t\t\\\n-\tnamed_section (NULL_TREE, \".data.rel.ro.local\", RELOC);\t\\\n-      else if (flag_merge_constants < 2)\t\t\t\\\n-\t/* C and C++ don't allow different variables to share\t\\\n-\t   the same location.  -fmerge-all-constants allows\t\\\n-\t   even that (at the expense of not conforming).  */\t\\\n-\tconst_section ();\t\t\t\t\t\\\n-      else if (TREE_CODE (DECL_INITIAL (DECL)) == STRING_CST)\t\\\n-\tmergeable_string_section (DECL_INITIAL (DECL), (ALIGN),\t\\\n-\t\t\t\t  0);\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tmergeable_constant_section (DECL_MODE (DECL), (ALIGN),\t\\\n-\t\t\t\t    0);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == CONSTRUCTOR)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if ((flag_pic && RELOC)\t\t\t\t\t\\\n-\t  || TREE_SIDE_EFFECTS (DECL)\t\t\t\t\\\n-\t  || ! TREE_CONSTANT (DECL))\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\\\n-}\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION default_elf_select_section\n \n /* Define the strings used for the special svr4 .type and .size directives.\n    These strings generally do not vary from one system running svr4 to"}, {"sha": "739977b922ed790aa0bbce87fbfdc8e4ad0911ac", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -348,7 +348,7 @@ do {\t\t\t\t\t\t\t\\\n #define MULTIPLE_SYMBOL_SPACES\n \n extern void i386_pe_unique_section PARAMS ((TREE, int));\n-#define UNIQUE_SECTION(DECL,RELOC) i386_pe_unique_section (DECL, RELOC)\n+#define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section\n \n #define SUPPORTS_ONE_ONLY 1\n "}, {"sha": "c44b55f9b70a3e97c5f0982b9418619f250896cf", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -204,37 +204,3 @@ while (0)\n /* Support for C++ templates.  */\n #undef MAKE_DECL_ONE_ONLY\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-\n-#undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  int len;\t\t\t\t\t\t\t\\\n-  const char *name, *prefix;\t\t\t\t\t\\\n-  char *string;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n-  /* Strip off any encoding in fnname.  */                      \\\n-  STRIP_NAME_ENCODING (name, name);                             \\\n-\t\t\t\t\t\t\t\t\\\n-  if (! DECL_ONE_ONLY (DECL))\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\tprefix = \".text.\";\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n-\tprefix = \".rodata.\";\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tprefix = \".data.\";\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-    prefix = \".gnu.linkonce.t.\";\t\t\t\t\\\n-  else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\t\\\n-    prefix = \".gnu.linkonce.r.\";\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    prefix = \".gnu.linkonce.d.\";\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  len = strlen (name) + strlen (prefix);\t\t\t\\\n-  string = alloca (len + 1);\t\t\t\t\t\\\n-  sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-} while (0)"}, {"sha": "680e0269196b9b1e45d4ec1f24314147dc5202d3", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -234,13 +234,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define EH_FRAME_IN_DATA_SECTION\n \n-/* Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n-\n #define USE_CONST_SECTION\t1\n \n #define CONST_SECTION_ASM_OP\t\"\\t.section\\t.rdata,\\\"r\\\"\"\n@@ -402,8 +395,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    symbols must be explicitly imported from shared libraries (DLLs).  */\n #define MULTIPLE_SYMBOL_SPACES\n \n-extern void i386_pe_unique_section ();\n-#define UNIQUE_SECTION(DECL,RELOC) i386_pe_unique_section (DECL, RELOC)\n+extern void i386_pe_unique_section PARAMS ((tree, int));\n+#define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section\n \n #define SUPPORTS_ONE_ONLY 1\n #endif /* 0 */"}, {"sha": "c5250f6534bd6e871c61deb386d0c935050e92f4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -3822,7 +3822,7 @@ ix86_asm_file_end (file)\n \t\t\t      get_identifier (\"i686.get_pc_thunk\"),\n \t\t\t      error_mark_node);\n       DECL_ONE_ONLY (decl) = 1;\n-      UNIQUE_SECTION (decl, 0);\n+      (*targetm.asm_out.unique_section) (decl, 0);\n       named_section (decl, NULL);\n     }\n   else"}, {"sha": "0fc142763de4b3d5ab6dee9d51959314492aa9e0", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -540,28 +540,9 @@ init_section ()\t\t\t\t\t\t\t\t\\\n \t      == void_type_node))) ? (SIZE)\t\t\t\t\\\n    : 0))\n \n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF && flag_pic && RELOC)\t\t\t\t\t\\\n-     data_section ();\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! DECL_READONLY_SECTION (DECL, RELOC)) \t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n+/* ??? Ignore coff.  */\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION  default_elf_select_section\n \n #undef SWITCH_TAKES_ARG\n #define SWITCH_TAKES_ARG(CHAR) \t\t\t\t\t\t\\"}, {"sha": "489a0dc6852cd951f9673aa1e7540d93839f9f03", "filename": "gcc/config/i386/svr3gas.h", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fsvr3gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fsvr3gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsvr3gas.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -83,16 +83,7 @@ Boston, MA 02111-1307, USA.  */\n    this file should be rewritten to include config/svr3.h\n    and override what isn't right.  */\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.\n-   However, use of the const section is turned off by default\n-   unless the specific tm.h file turns it on by defining\n-   USE_CONST_SECTION as 1.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n #define USE_CONST_SECTION\t0\n \n@@ -172,35 +163,6 @@ const_section ()\t\t\t\t\t\t\t\\\n \n #define TARGET_ASM_CONSTRUCTOR  ix86_svr3_asm_out_constructor\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((0 && RELOC)\t/* should be (flag_pic && RELOC) */\t\t\\\n-\t  || !TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t  || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node \t\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n-\n /* A C statement or statements to switch to the appropriate\n    section for output of RTX in mode MODE.  RTX is some kind\n    of constant in RTL.  The argument MODE is redundant except"}, {"sha": "2119a19dc754dde360ec1c559508f69a1776353c", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -2,7 +2,7 @@\n    hosting on Windows NT 3.x, using a Unix style C library and tools,\n    as distinct from winnt.h, which is used to build GCC for use with a\n    windows style library and tool set and uses the Microsoft tools.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2002\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -184,8 +184,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    symbols must be explicitly imported from shared libraries (DLLs).  */\n #define MULTIPLE_SYMBOL_SPACES\n \n-extern void i386_pe_unique_section ();\n-#define UNIQUE_SECTION(DECL,RELOC) i386_pe_unique_section (DECL, RELOC)\n+extern void i386_pe_unique_section PARAMS ((tree, int));\n+#define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section\n \n #define SUPPORTS_ONE_ONLY 1\n "}, {"sha": "08f144f626bb93f11ffc8acd80ffcf1560cf2cc4", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,7 @@\n /* Subroutines for insn-output.c for Windows NT.\n    Contributed by Douglas Rupp (drupp@cs.washington.edu)\n-   Copyright (C) 1995, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 1998, 1999, 2000, 2001, 2002\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -423,8 +424,6 @@ i386_pe_encode_section_info (decl, first)\n     }\n }\n \n-/* Cover function for UNIQUE_SECTION.  */\n-\n void\n i386_pe_unique_section (decl, reloc)\n      tree decl;"}, {"sha": "f55b8859fe0974595297765312dc9fe2b416e254", "filename": "gcc/config/i860/paragon.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi860%2Fparagon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fi860%2Fparagon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fparagon.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80860 running OSF/1AD\n-   Copyright (C) 1991, 1996, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1996, 1999, 2000, 2002 Free Software Foundation, Inc.\n    Based upon original work of Ron Guilmette (rfg@monkeys.com).\n    Contributed by Andy Pfiffer (andyp@ssd.intel.com).\n    Partially inspired by\n@@ -181,7 +181,7 @@ Boston, MA 02111-1307, USA.  */\n #undef DTORS_SECTION_ASM_OP\n #undef DO_GLOBAL_CTORS_BODY\n #undef ASM_OUTPUT_DESTRUCTOR\n-#undef SELECT_SECTION\n+#undef TARGET_ASM_SELECT_SECTION\n #undef SELECT_RTX_SECTION\n #undef READONLY_DATA_SECTION\n "}, {"sha": "0e66a5dcb0858e582510fc4e8a6314efac60acf8", "filename": "gcc/config/ia64/aix.h", "status": "modified", "additions": 4, "deletions": 84, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Faix.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -132,47 +132,10 @@ do {\t\t\t\t\t\t\t\\\n #define STANDARD_STARTFILE_PREFIX \"/usr/lib/ia64l64/\"\n #endif\n \n-/* Override SELECT_SECTION and SELECT_RTX_SECTION from config/ia64/sysv4.h;  \n-   these definitions ignore flag_pic as if it were always set; \n-   it is illegal to have relocations in shared segments on AIX.  */\n-\n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-\n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (XSTR (XEXP (DECL_RTL (DECL), 0), 0)[0]\t\t\t\\\n-\t  == SDATA_NAME_FLAG_CHAR)\t\t\t\t\t\\\n-        sdata_section ();\t\t\t\t\t\t\\\n-      /* ??? We need the extra ! RELOC check, because the default is to \\\n-\t only check RELOC if flag_pic is set, and we don't set flag_pic \\\n-\t (yet?).  */\t\t\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC) && ! (RELOC))\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  /* This could be a CONSTRUCTOR containing ADDR_EXPR of a VAR_DECL,\t\\\n-     in which case we can't put it in a shared library rodata.  */\t\\\n-  else if (RELOC)                                                       \\\n-    data_section ();\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n-\n-/* Similarly for constant pool data.  */\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION  ia64_aix_select_section\n+#undef\tTARGET_ASM_UNIQUE_SECTION\n+#define TARGET_ASM_UNIQUE_SECTION  ia64_aix_unique_section\n \n extern unsigned int ia64_section_threshold;\n #undef SELECT_RTX_SECTION\n@@ -187,49 +150,6 @@ extern unsigned int ia64_section_threshold;\n     const_section ();\t\t\t\t\t\t\t\\\n }\n \n-#undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      int len;\t\t\t\t\t\t\t\\\n-      int sec;\t\t\t\t\t\t\t\\\n-      const char *name;\t\t\t\t\t\t\\\n-      char *string;\t\t\t\t\t\t\\\n-      const char *prefix;\t\t\t\t\t\\\n-      static const char *const prefixes[/*4*/3][2] =\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\\\n-\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\\\n-\t{ \".data.\",   \".gnu.linkonce.d.\" }\t\t\t\\\n-\t/* Do not generate unique sections for uninitialised \t\\\n-\t   data since we do not have support for this in the    \\\n-\t   linker scripts yet...\t\t\t\t\\\n-        ,{ \".bss.\",    \".gnu.linkonce.b.\" }  */\t\t\t\\\n-      };\t\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\tsec = 0;\t\t\t\t\t\t\\\n-  /*  else if (DECL_INITIAL (DECL) == 0\t\t\t\t\\\n-\t       || DECL_INITIAL (DECL) == error_mark_node)\t\\\n-        sec =  3; */\t\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC) && ! (RELOC))\\\n-\tsec = 1;\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tsec = 2;\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      name   = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n-      /* Strip off any encoding in name.  */\t\t\t\\\n-      STRIP_NAME_ENCODING (name, name);\t\t\t\t\\\n-      prefix = prefixes[sec][DECL_ONE_ONLY(DECL)];\t\t\\\n-      len    = strlen (name) + strlen (prefix);\t\t\t\\\n-      string = alloca (len + 1);\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* Override ia64/sysv4.h setting with that used by AIX5.  */\n #undef WCHAR_TYPE\n #ifdef __64BIT__"}, {"sha": "f6f6c551bce0f405e90392574d1ce50b0fb76876", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 118, "deletions": 70, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -125,6 +125,7 @@ static void ia64_free_machine_status PARAMS ((struct function *));\n static void emit_insn_group_barriers PARAMS ((FILE *, rtx));\n static void emit_all_insn_group_barriers PARAMS ((FILE *, rtx));\n static void emit_predicate_relation_info PARAMS ((void));\n+static bool ia64_in_small_data_p PARAMS ((tree));\n static void process_epilogue PARAMS ((void));\n static int process_set PARAMS ((FILE *, rtx));\n \n@@ -152,6 +153,11 @@ static int ia64_sched_reorder PARAMS ((FILE *, int, rtx *, int *, int));\n static int ia64_sched_reorder2 PARAMS ((FILE *, int, rtx *, int *, int));\n static int ia64_variable_issue PARAMS ((FILE *, int, rtx, int));\n \n+static void ia64_aix_select_section PARAMS ((tree, int,\n+\t\t\t\t\t     unsigned HOST_WIDE_INT))\n+     ATTRIBUTE_UNUSED;\n+static void ia64_aix_unique_section PARAMS ((tree, int))\n+     ATTRIBUTE_UNUSED;\n \f\n /* Table of valid machine attributes.  */\n static const struct attribute_spec ia64_attribute_table[] =\n@@ -195,6 +201,9 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE ia64_output_function_epilogue\n \n+#undef TARGET_IN_SMALL_DATA_P\n+#define TARGET_IN_SMALL_DATA_P  ia64_in_small_data_p\n+\n #undef TARGET_SCHED_ADJUST_COST\n #define TARGET_SCHED_ADJUST_COST ia64_adjust_cost\n #undef TARGET_SCHED_ISSUE_RATE\n@@ -6858,16 +6867,41 @@ ia64_eh_uses (regno)\n    code faster because there is one less load.  This also includes incomplete\n    types which can't go in sdata/sbss.  */\n \n-/* ??? See select_section.  We must put short own readonly variables in\n-   sdata/sbss instead of the more natural rodata, because we can't perform\n-   the DECL_READONLY_SECTION test here.  */\n+static bool\n+ia64_in_small_data_p (exp)\n+     tree exp;\n+{\n+  if (TARGET_NO_SDATA)\n+    return false;\n+\n+  if (TREE_CODE (exp) == VAR_DECL && DECL_SECTION_NAME (exp))\n+    {\n+      const char *section = TREE_STRING_POINTER (DECL_SECTION_NAME (exp));\n+      if (strcmp (section, \".sdata\") == 0\n+\t  || strcmp (section, \".sbss\") == 0)\n+\treturn true;\n+    }\n+  else\n+    {\n+      HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (exp));\n+\n+      /* If this is an incomplete type with size 0, then we can't put it\n+\t in sdata because it might be too big when completed.  */\n+      if (size > 0 && size <= ia64_section_threshold)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n \n void\n ia64_encode_section_info (decl, first)\n      tree decl;\n      int first ATTRIBUTE_UNUSED;\n {\n   const char *symbol_str;\n+  bool is_local, is_small;\n+  rtx symbol;\n \n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     {\n@@ -6880,76 +6914,64 @@ ia64_encode_section_info (decl, first)\n       || GET_CODE (DECL_RTL (decl)) != MEM\n       || GET_CODE (XEXP (DECL_RTL (decl), 0)) != SYMBOL_REF)\n     return;\n-    \n-  symbol_str = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n-\n-  /* We assume that -fpic is used only to create a shared library (dso).\n-     With -fpic, no global data can ever be sdata.\n-     Without -fpic, global common uninitialized data can never be sdata, since\n-     it can unify with a real definition in a dso.  */\n-  /* ??? Actually, we can put globals in sdata, as long as we don't use gprel\n-     to access them.  The linker may then be able to do linker relaxation to\n-     optimize references to them.  Currently sdata implies use of gprel.  */\n-  /* We need the DECL_EXTERNAL check for C++.  static class data members get\n-     both TREE_STATIC and DECL_EXTERNAL set, to indicate that they are\n-     statically allocated, but the space is allocated somewhere else.  Such\n-     decls can not be own data.  */\n-  if (! TARGET_NO_SDATA\n-      && ((TREE_STATIC (decl) && ! DECL_EXTERNAL (decl)\n-\t   && ! (DECL_ONE_ONLY (decl) || DECL_WEAK (decl))\n-\t   && ! (TREE_PUBLIC (decl)\n-\t\t && (flag_pic\n-\t\t     || (DECL_COMMON (decl)\n-\t\t\t && (DECL_INITIAL (decl) == 0\n-\t\t\t     || DECL_INITIAL (decl) == error_mark_node)))))\n-\t  || MODULE_LOCAL_P (decl))\n-      /* Either the variable must be declared without a section attribute,\n-\t or the section must be sdata or sbss.  */\n-      && (DECL_SECTION_NAME (decl) == 0\n-\t  || ! strcmp (TREE_STRING_POINTER (DECL_SECTION_NAME (decl)),\n-\t\t       \".sdata\")\n-\t  || ! strcmp (TREE_STRING_POINTER (DECL_SECTION_NAME (decl)),\n-\t\t       \".sbss\")))\n-    {\n-      HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (decl));\n-\n-      /* If the variable has already been defined in the output file, then it\n-\t is too late to put it in sdata if it wasn't put there in the first\n-\t place.  The test is here rather than above, because if it is already\n-\t in sdata, then it can stay there.  */\n-\n-      if (TREE_ASM_WRITTEN (decl))\n-\t;\n-\n-      /* If this is an incomplete type with size 0, then we can't put it in\n-\t sdata because it might be too big when completed.\n-\t Objects bigger than threshold should have SDATA_NAME_FLAG_CHAR\n-\t added if they are in .sdata or .sbss explicitely.  */\n-      else if (((size > 0\n-\t\t && size <= (HOST_WIDE_INT) ia64_section_threshold)\n-\t\t|| DECL_SECTION_NAME (decl))\n-\t       && symbol_str[0] != SDATA_NAME_FLAG_CHAR)\n-\t{\n-\t  size_t len = strlen (symbol_str);\n-\t  char *newstr = alloca (len + 1);\n-\t  const char *string;\n \n-\t  *newstr = SDATA_NAME_FLAG_CHAR;\n-\t  memcpy (newstr + 1, symbol_str, len + 1);\n-\t  \n-\t  string = ggc_alloc_string (newstr, len + 1);\n-\t  XSTR (XEXP (DECL_RTL (decl), 0), 0) = string;\n-\t}\n-    }\n-  /* This decl is marked as being in small data/bss but it shouldn't\n-     be; one likely explanation for this is that the decl has been\n-     moved into a different section from the one it was in when\n-     ENCODE_SECTION_INFO was first called.  Remove the '@'.  */\n-  else if (symbol_str[0] == SDATA_NAME_FLAG_CHAR)\n+  symbol = XEXP (DECL_RTL (decl), 0);\n+  symbol_str = XSTR (symbol, 0);\n+\n+  /* A variable is considered \"local\" if it is defined by this module.  */\n+\n+  if (MODULE_LOCAL_P (decl))\n+    is_local = true;\n+  /* Otherwise, variables defined outside this object may not be local.  */\n+  else if (DECL_EXTERNAL (decl))\n+    is_local = false;\n+  /* Linkonce and weak data are never local.  */\n+  else if (DECL_ONE_ONLY (decl) || DECL_WEAK (decl))\n+    is_local = false;\n+  /* Static variables are always local.  */\n+  else if (! TREE_PUBLIC (decl))\n+    is_local = true;\n+  /* If PIC, then assume that any global name can be overridden by\n+     symbols resolved from other modules.  */\n+  else if (flag_pic)\n+    is_local = false;\n+  /* Uninitialized COMMON variable may be unified with symbols\n+     resolved from other modules.  */\n+  else if (DECL_COMMON (decl)\n+\t   && (DECL_INITIAL (decl) == NULL\n+\t       || DECL_INITIAL (decl) == error_mark_node))\n+    is_local = false;\n+  /* Otherwise we're left with initialized (or non-common) global data\n+     which is of necessity defined locally.  */\n+  else\n+    is_local = true;\n+\n+  /* Determine if DECL will wind up in .sdata/.sbss.  */\n+  is_small = ia64_in_small_data_p (decl);\n+\n+  /* Finally, encode this into the symbol string.  */\n+  if (is_local && is_small)\n     {\n-      XSTR (XEXP (DECL_RTL (decl), 0), 0)\n-\t= ggc_strdup (symbol_str + 1);\n+      char *newstr;\n+      size_t len;\n+\n+      if (symbol_str[0] == SDATA_NAME_FLAG_CHAR)\n+\treturn;\n+\n+      len = strlen (symbol_str) + 1;\n+      newstr = alloca (len + 1);\n+      newstr[0] = SDATA_NAME_FLAG_CHAR;\n+      memcpy (newstr + 1, symbol_str, len);\n+\n+      XSTR (symbol, 0) = ggc_alloc_string (newstr, len);\n     }\n+\n+  /* This decl is marked as being in small data/bss but it shouldn't be;\n+     one likely explanation for this is that the decl has been moved into\n+     a different section from the one it was in when ENCODE_SECTION_INFO\n+     was first called.  Remove the '@'.  */\n+  else if (symbol_str[0] == SDATA_NAME_FLAG_CHAR)\n+    XSTR (symbol, 0) = ggc_strdup (symbol_str + 1);\n }\n \f\n /* Output assembly directives for prologue regions.  */\n@@ -7820,3 +7842,29 @@ ia64_hpux_function_arg_padding (mode, type)\n        : GET_MODE_BITSIZE (mode) < PARM_BOUNDARY)\n       ? downward : upward);\n }\n+\f\n+/* It is illegal to have relocations in shared segments on AIX.\n+   Pretend flag_pic is always set.  */\n+\n+static void\n+ia64_aix_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align;\n+{\n+  int save_pic = flag_pic;\n+  flag_pic = 1;\n+  default_elf_select_section (exp, reloc, align);\n+  flag_pic = save_pic;\n+}\n+\n+static void\n+ia64_aix_unique_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  int save_pic = flag_pic;\n+  flag_pic = 1;\n+  default_unique_section (decl, reloc);\n+  flag_pic = save_pic;\n+}"}, {"sha": "1f07b8c0f91b2a147ac3e4bd5e8af0224f3999aa", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -140,135 +140,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   emit_safe_across_calls (STREAM);\t\t\t\t\t\\\n } while (0)\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.\n-\n-   Set SECNUM to:\n-\t0\t.text\n-\t1\t.rodata\n-\t2\t.data\n-\t3\t.sdata\n-\t4\t.bss\n-\t5\t.sbss\n-*/\n-#define DO_SELECT_SECTION(SECNUM, DECL, RELOC)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (! flag_writable_strings)\t\t\t\t\t\\\n-\t    SECNUM = 0x101;\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    SECNUM = 2;\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (XSTR (XEXP (DECL_RTL (DECL), 0), 0)[0]\t\t\t\\\n-\t      == SDATA_NAME_FLAG_CHAR)\t\t\t\t\t\\\n-\t    SECNUM = 3;\t\t\t\t\t\t\t\\\n-\t  /* ??? We need the extra RELOC check, because the default\t\\\n-\t     is to only check RELOC if flag_pic is set, and we don't\t\\\n-\t     set flag_pic (yet?).  */\t\t\t\t\t\\\n-\t  else if (!DECL_READONLY_SECTION (DECL, RELOC) || (RELOC))\t\\\n-\t    SECNUM = 2;\t\t\t\t\t\t\t\\\n-\t  else if (flag_merge_constants < 2)\t\t\t\t\\\n-\t    /* C and C++ don't allow different variables to share\t\\\n-\t       the same location.  -fmerge-all-constants allows\t\t\\\n-\t       even that (at the expense of not conforming).  */\t\\\n-\t    SECNUM = 1;\t\t\t\t\t\t\t\\\n-\t  else if (TREE_CODE (DECL_INITIAL (DECL)) == STRING_CST)\t\\\n-\t    SECNUM = 0x201;\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    SECNUM = 0x301;\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      /* This could be a CONSTRUCTOR containing ADDR_EXPR of a VAR_DECL, \\\n-\t in which case we can't put it in a shared library rodata.  */\t\\\n-      else if (flag_pic && (RELOC))\t\t\t\t\t\\\n-\tSECNUM = 3;\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tSECNUM = 2;\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* We override svr4.h so that we can support the sdata section.  */\n-\n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      typedef void (*sec_fn) PARAMS ((void));\t\t\t\t\\\n-      static sec_fn const sec_functions[6] =\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\ttext_section,\t\t\t\t\t\t\t\\\n-\tconst_section,\t\t\t\t\t\t\t\\\n-\tdata_section,\t\t\t\t\t\t\t\\\n-\tsdata_section,\t\t\t\t\t\t\t\\\n-\tbss_section,\t\t\t\t\t\t\t\\\n-\tsbss_section\t\t\t\t\t\t\t\\\n-      };\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      int sec;\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      switch (sec)\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\tcase 0x101:\t\t\t\t\t\t\t\\\n-\t  mergeable_string_section (DECL, ALIGN, 0);\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\tcase 0x201:\t\t\t\t\t\t\t\\\n-\t  mergeable_string_section (DECL_INITIAL (DECL),\t\t\\\n-\t\t\t\t    ALIGN, 0);\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\tcase 0x301:\t\t\t\t\t\t\t\\\n-\t  mergeable_constant_section (DECL_MODE (DECL),\t\t\t\\\n-\t\t\t\t      ALIGN, 0);\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\tdefault:\t\t\t\t\t\t\t\\\n-\t  (*sec_functions[sec]) ();\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#undef  UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      static const char * const prefixes[6][2] =\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\t\\\n-\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\t\\\n-\t{ \".data.\",   \".gnu.linkonce.d.\" },\t\t\t\t\\\n-\t{ \".sdata.\",  \".gnu.linkonce.s.\" },\t\t\t\t\\\n-\t{ \".bss.\",    \".gnu.linkonce.b.\" },\t\t\t\t\\\n-\t{ \".sbss.\",   \".gnu.linkonce.sb.\" }\t\t\t\t\\\n-      };\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      int nlen, plen, sec;\t\t\t\t\t\t\\\n-      const char *name, *prefix;\t\t\t\t\t\\\n-      char *string;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\t\\\n-      STRIP_NAME_ENCODING (name, name);\t\t\t\t\t\\\n-      nlen = strlen (name);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      prefix = prefixes[sec & 0xff][DECL_ONE_ONLY(DECL)];\t\t\\\n-      plen = strlen (prefix);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      string = alloca (nlen + plen + 1);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      memcpy (string, prefix, plen);\t\t\t\t\t\\\n-      memcpy (string + plen, name, nlen + 1);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (nlen + plen, string);\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* Similarly for constant pool data.  */\n \n extern unsigned int ia64_section_threshold;"}, {"sha": "cb8714d898eb4f99e8875b69ad09946cda3b6707", "filename": "gcc/config/m32r/m32r-protos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for m32r.c functions used in the md file & elsewhere.\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,10 +33,8 @@ extern void   m32r_finalize_pic\t\t\tPARAMS ((void));\n extern void   m32r_asm_file_start\t\tPARAMS ((FILE *));\n extern int    direct_return \t\t\tPARAMS ((void));\n #ifdef TREE_CODE\n-extern void   m32r_select_section\t\tPARAMS ((tree, int));\n extern void   m32r_encode_section_info\t\tPARAMS ((tree, int));\n extern enum m32r_function_type m32r_compute_function_type PARAMS ((tree));\n-extern void   m32r_select_section \t\tPARAMS ((tree, int));\n \n #ifdef HAVE_MACHINE_MODES\n extern void   m32r_setup_incoming_varargs\tPARAMS ((CUMULATIVE_ARGS *, Mmode, tree, int *, int));"}, {"sha": "4851127138fd621ca3ad14f2899d247968cc9570", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -74,6 +74,8 @@ static int    m32r_sched_reorder   PARAMS ((FILE *, int, rtx *, int *, int));\n static int    m32r_variable_issue  PARAMS ((FILE *, int, rtx, int));\n static int    m32r_issue_rate\t   PARAMS ((void));\n \n+static void m32r_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n+\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ATTRIBUTE_TABLE\n@@ -320,10 +322,11 @@ m32r_handle_model_attribute (node, name, args, flags, no_add_attrs)\n    or a constant of some sort.  RELOC indicates whether forming\n    the initial value of DECL requires link-time relocations.  */\n \n-void\n-m32r_select_section (decl, reloc)\n+static void\n+m32r_select_section (decl, reloc, align)\n      tree decl;\n      int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n   if (TREE_CODE (decl) == STRING_CST)\n     {"}, {"sha": "f0b783a7ea8721a1cc231f681b52c9ffb13f511e", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1567,13 +1567,8 @@ sbss_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n \n-/* A C statement or statements to switch to the appropriate section for\n-   output of EXP.  You can assume that EXP is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether the initial value\n-   of EXP requires link-time relocations.  */\n-#undef  SELECT_SECTION\n-#define SELECT_SECTION(EXP, RELOC, ALIGN) \\\n-  m32r_select_section ((EXP), (RELOC))\n+#undef  TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION  m32r_select_section\n \n /* A C statement or statements to switch to the appropriate section for\n    output of RTX in mode MODE.  You can assume that RTX"}, {"sha": "fa6557b43602ed10f6462d42464ea333e86fc9da", "filename": "gcc/config/m68k/dpx2.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler.  \n    Bull DPX/2 200 and 300 systems (m68k, SysVr3).\n-   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1999, 2000, 2002\n+   Free Software Foundation, Inc.\n    Contributed by Frederic Pierresteguy (F.Pierresteguy@frcl.bull.fr).\n \n This file is part of GNU CC.\n@@ -42,7 +43,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Remove handling for a separate constant data section.  We put\n    constant data in text_section, which is the default.  */\n-#undef SELECT_SECTION\n+#undef TARGET_ASM_SELECT_SECTION\n #undef SELECT_RTX_SECTION\n #undef EXTRA_SECTIONS\n #undef EXTRA_SECTION_FUNCTIONS"}, {"sha": "6fdcf4b10951615f6b418110021d4aa179f8cd15", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for Motorola 88000.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001 Free Software Foundation, Inc. \n+   2001, 2002 Free Software Foundation, Inc. \n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -71,7 +71,7 @@ static void m88k_output_function_begin_epilogue PARAMS ((FILE *));\n static void m88k_svr3_asm_out_constructor PARAMS ((rtx, int));\n static void m88k_svr3_asm_out_destructor PARAMS ((rtx, int));\n #endif\n-\n+static void m88k_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n static int m88k_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n \f\n /* Initialize the GCC target structure.  */\n@@ -3320,6 +3320,38 @@ m88k_svr3_asm_out_destructor (symbol, priority)\n }\n #endif /* INIT_SECTION_ASM_OP && ! OBJECT_FORMAT_ELF */\n \n+static void\n+m88k_select_section (decl, reloc, align)\n+     tree decl;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (decl) == STRING_CST)\n+    {\n+      if (! flag_writable_strings)\n+\tconst_section ();\n+      else if (TREE_STRING_LENGTH (decl) <= m88k_gp_threshold)\n+\tsdata_section ();\n+      else\n+\tdata_section ();\n+    }\n+  else if (TREE_CODE (decl) == VAR_DECL)\n+    {\n+      if (SYMBOL_REF_FLAG (XEXP (DECL_RTL (decl), 0)))\n+\tsdata_section ();\n+      else if ((flag_pic && reloc)\n+\t       || !TREE_READONLY (decl) || TREE_SIDE_EFFECTS (decl)\n+\t       || !DECL_INITIAL (decl)\n+\t       || (DECL_INITIAL (decl) != error_mark_node\n+\t\t   && !TREE_CONSTANT (DECL_INITIAL (decl))))\n+\tdata_section ();\n+      else\n+\tconst_section ();\n+    }\n+  else\n+    const_section ();\n+}\n+\n /* Adjust the cost of INSN based on the relationship between INSN that\n    is dependent on DEP_INSN through the dependence LINK.  The default\n    is to make no adjustment to COST."}, {"sha": "17b6b7bbb867a53dd8e1454a10ff97d9aeeb4a15", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 1, "deletions": 34, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -2354,40 +2354,7 @@ sdata_section ()\t\t\t\t\t\t\t\\\n   INIT_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n   FINI_SECTION_FUNCTION\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.\n-\n-   For strings, the section is selected before the segment info is encoded.  */\n-#undef\tSELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else if ( TREE_STRING_LENGTH (DECL) <= m88k_gp_threshold)\t\t\\\n-\tsdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)))\t\t\t\\\n-\tsdata_section ();\t\t\t\t\t\t\\\n-      else if ((flag_pic && RELOC)\t\t\t\t\t\\\n-\t       || !TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\\\n-\t       || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t       || (DECL_INITIAL (DECL) != error_mark_node\t\t\\\n-\t\t   && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n+#define TARGET_ASM_SELECT_SECTION  m88k_select_section\n \n /* Jump tables consist of branch instructions and should be output in\n    the text section.  When we use a table of addresses, we explicitly"}, {"sha": "5fd3b8d7ddaa5980125c1d79def2ba049a127827", "filename": "gcc/config/mcore/mcore-pe.h", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for MCore using COFF/PE.\n-   Copyright (C) 1994, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1999, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com).\n \n This file is part of GNU CC.\n@@ -80,35 +80,6 @@ rdata_section ()\t\t\t\t\t\t\\\n #undef  READONLY_DATA_SECTION\n #define READONLY_DATA_SECTION() rdata_section ()\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-#undef  SELECT_SECTION\n-#define SELECT_SECTION(DECL, RELOC, ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\trdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((0 && RELOC)\t/* should be (flag_pic && RELOC) */\t\t\\\n-\t  || !TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t  || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node\t\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\trdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    rdata_section ();\t\t\t\t\t\t\t\\\n-}\n-\n /* A C statement or statements to switch to the appropriate\n    section for output of RTX in mode MODE.  RTX is some kind\n    of constant in RTL.  The argument MODE is redundant except"}, {"sha": "5cda48c6976cedd189f456412cb8548a8c79c913", "filename": "gcc/config/mcore/mcore-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for exported functions defined in mcore.c\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Nick Clifton (nickc@redhat.com)\n \n This file is part of GNU CC.\n@@ -35,7 +35,6 @@ extern int          mcore_dllimport_name_p       \tPARAMS ((const char *));\n extern int          mcore_naked_function_p       \tPARAMS ((void));\n \n #ifdef TREE_CODE\n-extern void         mcore_unique_section         \tPARAMS ((tree, int));\n extern void         mcore_encode_section_info    \tPARAMS ((tree, int));\n \n #ifdef HAVE_MACHINE_MODES"}, {"sha": "f9f5ae28ad442f7f3fccaa13ff340e6e879e2742", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for Motorola MCore processor\n-   Copyright (C) 1993, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -137,6 +137,7 @@ static tree       mcore_handle_naked_attribute PARAMS ((tree *, tree, tree, int,\n static void\t  mcore_asm_named_section      PARAMS ((const char *,\n \t\t\t\t\t\t\tunsigned int));\n #endif\n+static void       mcore_unique_section\t       PARAMS ((tree, int));\n \f\n /* Initialize the GCC target structure.  */\n #ifdef TARGET_DLLIMPORT_DECL_ATTRIBUTES\n@@ -153,6 +154,8 @@ static void\t  mcore_asm_named_section      PARAMS ((const char *,\n \n #undef TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE mcore_attribute_table\n+#undef TARGET_ASM_UNIQUE_SECTION\n+#define TARGET_ASM_UNIQUE_SECTION mcore_unique_section\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -3511,9 +3514,10 @@ mcore_handle_naked_attribute (node, name, args, flags, no_add_attrs)\n   return NULL_TREE;\n }\n \n-/* Cover function for UNIQUE_SECTION.  */\n+/* ??? It looks like this is PE specific?  Oh well, this is what the\n+   old code did as well.  */\n \n-void\n+static void\n mcore_unique_section (decl, reloc)\n      tree decl;\n      int reloc ATTRIBUTE_UNUSED;"}, {"sha": "32ceac64adae62c88ec225039cd13e7ecbd4045f", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1143,9 +1143,6 @@ switch_to_section (section, decl)\t\t\t\t\\\n #define STRIP_NAME_ENCODING(VAR, SYM_NAME) \\\n   (VAR) = MCORE_STRIP_NAME_ENCODING (SYM_NAME)\n \n-#undef  UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL, RELOC) mcore_unique_section (DECL, RELOC)\n-\n #define MULTIPLE_SYMBOL_SPACES 1\n \n #define SUPPORTS_ONE_ONLY 1"}, {"sha": "d3267379bf1efd3d309a88fce9de60b36e76ff1d", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  MIPS R3000 version with\n    GOFAST floating point library.\n-   Copyright (C) 1994, 1997, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1997, 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -219,9 +219,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n  } while (0)\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-#undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC) \\\n-  mips_unique_section ((DECL), (RELOC))\n+\n+#define TARGET_ASM_UNIQUE_SECTION  mips_unique_section\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */"}, {"sha": "a162fc41a9f7a1409e2ce1c9bf827d8cfcd33f55", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler.  MIPS R4000 version with\n    GOFAST floating point library.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1999, 2000, 2002\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -208,9 +209,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n  } while (0)\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-#undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC) \\\n-  mips_unique_section ((DECL), (RELOC))\n+\n+#define TARGET_ASM_UNIQUE_SECTION mips_unique_section\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */"}, {"sha": "75556a0feb664e8f14808959632d8ea64004e2d9", "filename": "gcc/config/mips/iris6gld.h", "status": "modified", "additions": 2, "deletions": 40, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Firis6gld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Firis6gld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6gld.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  Iris version 6 with\n    GNU ld.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n    Written by Mark Mitchell <mark@codesourcery.com>.\n \n This file is part of GNU CC.\n@@ -49,42 +49,4 @@ Boston, MA 02111-1307, USA.  */\n \n /* The GNU linker supports one-only sections.  */\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      int len;\t\t\t\t\t\t\t\\\n-      int sec;\t\t\t\t\t\t\t\\\n-      const char *name;\t\t\t\t\t\t\\\n-      char *string;\t\t\t\t\t\t\\\n-      const char *prefix;\t\t\t\t\t\\\n-      static const char *const prefixes[/*4*/3][2] =\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\\\n-\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\\\n-\t{ \".data.\",   \".gnu.linkonce.d.\" }\t\t\t\\\n-\t/* Do not generate unique sections for uninitialised \t\\\n-\t   data since we do not have support for this in the    \\\n-\t   linker scripts yet...\t\t\t\t\\\n-        , { \".bss.\",    \".gnu.linkonce.b.\" }  */\t\t\\\n-      };\t\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\tsec = 0;\t\t\t\t\t\t\\\n-   /* else if (DECL_INITIAL (DECL) == 0\t\t\t\t\\\n-\t       || DECL_INITIAL (DECL) == error_mark_node)\t\\\n-        sec =  3; */\t\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n-\tsec = 1;\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tsec = 2;\t\t\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      name   = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n-      prefix = prefixes[sec][DECL_ONE_ONLY(DECL)];\t\t\\\n-      len    = strlen (name) + strlen (prefix);\t\t\t\\\n-      string = alloca (len + 1);\t\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n-      \t\t\t\t\t\t\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n+#define TARGET_ASM_UNIQUE_SECTION  mips_unique_section"}, {"sha": "755a8c002286e1e249bf3b28e8f42bd4437bfd4f", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -88,9 +88,7 @@ do {\t\t\t\t\t\t\t\t\\\n     mips_declare_object (FILE, NAME, \"\", \":\\n\", 0);\t\t\\\n   } while (0)\n \n-#undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC) \\\n-  mips_unique_section ((DECL), (RELOC))\n+#define TARGET_ASM_UNIQUE_SECTION  mips_unique_section\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */"}, {"sha": "2158a02c75eaebab863944657245f1bf69f37331", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Prototypes of target machine for GNU compiler.  MIPS version.\n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2001 Free Software Foundation, Inc.\n+   1999, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky (lich@inria.inria.fr).\n    Changed by Michael Meissner\t(meissner@osf.org).\n    64 bit r4000 support by Ian Lance Taylor (ian@cygnus.com) and\n@@ -79,8 +79,6 @@ extern int\t\tmips_output_external PARAMS ((FILE *, tree,\n extern tree\t\tmips_build_va_list PARAMS ((void));\n extern void\t\tmips_va_start PARAMS ((int, tree, rtx));\n extern struct rtx_def  *mips_va_arg PARAMS ((tree, tree));\n-extern void\t\tmips_select_section PARAMS ((tree, int));\n-extern void\t\tmips_unique_section PARAMS ((tree, int));\n \n extern void\t\texpand_block_move PARAMS ((rtx *));\n extern void\t\tfinal_prescan_insn PARAMS ((rtx, rtx *, int));"}, {"sha": "b93e53180d81af5ca68548c252ebaef8cc8cff32", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for MIPS\n    Copyright (C) 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky, lich@inria.inria.fr.\n    Changes by Michael Meissner, meissner@osf.org.\n    64 bit r4000 support by Ian Lance Taylor, ian@cygnus.com, and\n@@ -146,6 +146,11 @@ static int mips_issue_rate\t\t\tPARAMS ((void));\n static void mips_init_machine_status\t\tPARAMS ((struct function *));\n static void mips_free_machine_status\t\tPARAMS ((struct function *));\n static void mips_mark_machine_status\t\tPARAMS ((struct function *));\n+static void mips_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT))\n+\tATTRIBUTE_UNUSED;\n+static void mips_unique_section\t\t\tPARAMS ((tree, int))\n+\tATTRIBUTE_UNUSED;\n+\n \n struct machine_function {\n   /* Pseudo-reg holding the address of the current function when\n@@ -7943,10 +7948,11 @@ mips_select_rtx_section (mode, x)\n    If you need to make a change here, you probably should check\n    ENCODE_SECTION_INFO to see if it needs a similar change.  */\n \n-void\n-mips_select_section (decl, reloc)\n+static void\n+mips_select_section (decl, reloc, align)\n      tree decl;\n      int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n   int size = int_size_in_bytes (TREE_TYPE (decl));\n \n@@ -10145,9 +10151,10 @@ mips_adjust_cost (insn, link, dep, cost)\n   return cost;\n }\n \n-/* Cover function for UNIQUE_SECTION.  */\n+/* ??? This could be replaced with the default elf version if\n+   TARGET_IS_SMALL_DATA_P is set properly.  */\n \n-void\n+static void\n mips_unique_section (decl, reloc)\n      tree decl;\n      int reloc;"}, {"sha": "dba54e658167160c0f45e82eadfb3c4574dc20cb", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -4738,10 +4738,8 @@ rdata_section ()\t\t\t\t\t\t\t\\\n #define SELECT_RTX_SECTION(MODE, RTX, ALIGN) \\\n   mips_select_rtx_section (MODE, RTX)\n \n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL, RELOC, ALIGN) \\\n-  mips_select_section (DECL, RELOC)\n-\n+#undef  TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION  mips_select_section\n \f\n /* Store in OUTPUT a string (made with alloca) containing\n    an assembler-name for a local static variable named NAME."}, {"sha": "cc81308c9b6ce969538bed64147015438bb91b4b", "filename": "gcc/config/mmix/mmix-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -74,9 +74,7 @@ extern int mmix_constant_alignment PARAMS ((tree, int));\n extern int mmix_local_alignment PARAMS ((tree, int));\n extern void mmix_setup_incoming_varargs\n   PARAMS ((CUMULATIVE_ARGS *, enum machine_mode, tree, int *, int));\n-extern void mmix_select_section PARAMS ((tree, int, int));\n extern void mmix_encode_section_info PARAMS ((tree, int));\n-extern void mmix_unique_section PARAMS ((tree, int));\n extern void mmix_asm_output_pool_prologue\n   PARAMS ((FILE *, const char *, tree, int));\n extern void mmix_asm_output_aligned_common"}, {"sha": "40bd94f8d740c887edc470e736bfd5c50fca27bf", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1713,46 +1713,6 @@ mmix_data_section_asm_op ()\n   return \"\\t.data ! mmixal:= 8H LOC 9B\";\n }\n \n-/* SELECT_SECTION.\n-   The meat is from elfos.h, which we will eventually consider using.  */\n-\n-void\n-mmix_select_section (decl, reloc, align)\n-     tree decl;\n-     int reloc;\n-     int align ATTRIBUTE_UNUSED;\n-{\n-  if (TREE_CODE (decl) == STRING_CST)\n-    {\n-      if (! flag_writable_strings)\n-\tconst_section ();\n-      else\n-\tdata_section ();\n-    }\n-  else if (TREE_CODE (decl) == VAR_DECL)\n-    {\n-      if ((flag_pic && reloc)\n-\t  || !TREE_READONLY (decl) || TREE_SIDE_EFFECTS (decl)\n-\t  || !DECL_INITIAL (decl)\n-\t  || (DECL_INITIAL (decl) != error_mark_node\n-\t      && !TREE_CONSTANT (DECL_INITIAL (decl))))\n-\tdata_section ();\n-      else\n-\tconst_section ();\n-    }\n-  else if (TREE_CODE (decl) == CONSTRUCTOR)\n-    {\n-      if ((flag_pic && reloc)\n-\t  || !TREE_READONLY (decl) || TREE_SIDE_EFFECTS (decl)\n-\t  || ! TREE_CONSTANT (decl))\n-\tdata_section ();\n-      else\n-\tconst_section ();\n-    }\n-  else\n-    const_section ();\n-}\n-\n /* ENCODE_SECTION_INFO.  */\n \n void\n@@ -1818,49 +1778,6 @@ mmix_strip_name_encoding (name)\n   return name;\n }\n \n-/* UNIQUE_SECTION.\n-   The meat is from elfos.h, which we should consider using.  */\n-\n-void\n-mmix_unique_section (decl, reloc)\n-     tree decl;\n-     int reloc;\n-{\n-  int len;\n-  int sec;\n-  const char *name;\n-  char *string;\n-  const char *prefix;\n-  static const char *const prefixes[4][2] =\n-  {\n-    { \".text.\",   \".gnu.linkonce.t.\" },\n-    { \".rodata.\", \".gnu.linkonce.r.\" },\n-    { \".data.\",   \".gnu.linkonce.d.\" },\n-    { \".bss.\",    \".gnu.linkonce.b.\" }\n-  };\n-\n-  if (TREE_CODE (decl) == FUNCTION_DECL)\n-    sec = 0;\n-  else if (DECL_INITIAL (decl) == 0\n-\t   || DECL_INITIAL (decl) == error_mark_node)\n-    sec =  3;\n-  else if (DECL_READONLY_SECTION (decl, reloc))\n-    sec = 1;\n-  else\n-    sec = 2;\n-\n-  name   = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-  /* Strip off any encoding in name.  */\n-  STRIP_NAME_ENCODING (name, name);\n-  prefix = prefixes[sec][DECL_ONE_ONLY (decl)];\n-  len    = strlen (name) + strlen (prefix);\n-  string = alloca (len + 1);\n-\n-  sprintf (string, \"%s%s\", prefix, name);\n-\n-  DECL_SECTION_NAME (decl) = build_string (len, string);\n-}\n-\n /* ASM_FILE_START.  */\n \n void"}, {"sha": "c603ebb5c1afcd8f322d2dea248d269ce09b2038", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -929,18 +929,12 @@ const_section ()\t\t\t\t\t\t\\\n #undef  SELECT_RTX_SECTION\n #define SELECT_RTX_SECTION(MODE, RTX, ALIGN) const_section ()\n \n-#define SELECT_SECTION(DECL, RELOC, ALIGN) \\\n- mmix_select_section (DECL, RELOC, ALIGN)\n-\n #define ENCODE_SECTION_INFO(DECL, FIRST) \\\n  mmix_encode_section_info (DECL, FIRST)\n \n #define STRIP_NAME_ENCODING(VAR, SYM_NAME) \\\n  (VAR) = mmix_strip_name_encoding (SYM_NAME)\n \n-#define UNIQUE_SECTION(DECL, RELOC) \\\n-  mmix_unique_section (decl, reloc)\n-\n /* Node: PIC */\n /* (empty) */\n "}, {"sha": "dbb247740b15b5a613d5de7e6e0241729a1b3c6b", "filename": "gcc/config/netware.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetware.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* netware.h -- operating system specific defines to be used when \n    targeting GCC for some generic NetWare 4 system.\n-   Copyright (C) 1993, 1994, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n    Written by David V. Henkel-Wallace (gumby@cygnus.com)\n \n@@ -56,13 +56,7 @@ Boston, MA 02111-1307, USA.  */\n #undef\tPREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n #undef\tHAS_INIT_SECTION\n #undef\tINIT_SECTION_ASM_OP"}, {"sha": "e5b520ddf27ea79ba46198db948ea951e218ee82", "filename": "gcc/config/nextstep-protos.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC\n    for NeXTSTEP.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -26,3 +26,5 @@ extern void constructor_section PARAMS ((void));\n extern void destructor_section PARAMS ((void));\n extern void nextstep_exception_section PARAMS ((void));\n extern void nextstep_eh_frame_section PARAMS ((void));\n+extern void nextstep_select_section PARAMS ((tree, int,\n+\t\t\t\t\t     unsigned HOST_WIDE_INT));"}, {"sha": "a701776ff27f9017bc0ecc1af36cfbacebfe6d76", "filename": "gcc/config/nextstep.c", "status": "modified", "additions": 121, "deletions": 1, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Functions for generic NeXT as target machine for GNU C compiler.\n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998,\n-   2000 Free Software Foundation, Inc.\n+   2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -115,3 +115,123 @@ nextstep_asm_out_destructor (symbol, priority)\n   fprintf (asm_out_file, \".reference .destructors_used\\n\");\n }\n \n+void\n+nextstep_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (exp) == STRING_CST)\n+    {\n+      if (flag_writable_strings)\n+\tdata_section ();\n+      else if (TREE_STRING_LENGTH (exp)\n+\t       != strlen (TREE_STRING_POINTER (exp)) + 1)\n+\treadonly_data_section ();\n+      else\n+\tcstring_section ();\n+    }\n+  else if (TREE_CODE (exp) == INTEGER_CST\n+\t   || TREE_CODE (exp) == REAL_CST)\n+    {\n+      tree size = TYPE_SIZE (TREE_TYPE (exp));\n+      HOST_WIDE_INT size_int;\n+\n+      if (TREE_CODE (size) == INTEGER_CST)\n+\tsize_int = tree_low_cst (size, 1);\n+      else\n+\tsize_int = 0;\n+\n+      if (size_int == 4)\n+\tliteral4_section ();\n+      else if (size_int == 8)\n+\tliteral8_section ();\n+      else\n+\treadonly_data_section ();\n+    }\n+  else if (TREE_CODE (exp) == CONSTRUCTOR\n+\t   && TREE_TYPE (exp)\n+\t   && TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\n+\t   && TYPE_NAME (TREE_TYPE (exp))\n+\t   && TREE_CODE (TYPE_NAME (TREE_TYPE (exp))) == IDENTIFIER_NODE\n+\t   && IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (exp))))\n+    {\n+      if (!strcmp (IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (exp))),\n+\t\t   \"NXConstantString\"))\n+\tobjc_string_object_section ();\n+      else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+\t       && !TREE_SIDE_EFFECTS (exp))\n+\treadonly_data_section ();\n+      else\n+\tdata_section ();\n+    }\n+  else if (TREE_CODE (exp) == VAR_DECL\n+\t   && DECL_NAME (exp)\n+\t   && TREE_CODE (DECL_NAME (exp)) == IDENTIFIER_NODE\n+\t   && IDENTIFIER_POINTER (DECL_NAME (exp))\n+\t   && !strncmp (IDENTIFIER_POINTER (DECL_NAME (exp)), \"_OBJC_\", 6))\n+    {\n+      const char *name = IDENTIFIER_POINTER (DECL_NAME (exp));\n+\n+      if (!strncmp (name, \"_OBJC_CLASS_METHODS_\", 20))\n+\tobjc_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_INSTANCE_METHODS_\", 23))\n+\tobjc_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_CLASS_METHODS_\", 20))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_INSTANCE_METHODS_\", 23))\n+\tobjc_cat_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_VARIABLES_\", 22))\n+\tobjc_class_vars_section ();\n+      else if (!strncmp (name, \"_OBJC_INSTANCE_VARIABLES_\", 25))\n+\tobjc_instance_vars_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_PROTOCOLS_\", 22))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_NAME_\", 17))\n+\tobjc_class_names_section ();\n+      else if (!strncmp (name, \"_OBJC_METH_VAR_NAME_\", 20))\n+\tobjc_meth_var_names_section ();\n+      else if (!strncmp (name, \"_OBJC_METH_VAR_TYPE_\", 20))\n+\tobjc_meth_var_types_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_REFERENCES\", 22))\n+\tobjc_cls_refs_section ();\n+      else if (!strncmp (name, \"_OBJC_CLASS_\", 12))\n+\tobjc_class_section ();\n+      else if (!strncmp (name, \"_OBJC_METACLASS_\", 16))\n+\tobjc_meta_class_section ();\n+      else if (!strncmp (name, \"_OBJC_CATEGORY_\", 15))\n+\tobjc_category_section ();\n+      else if (!strncmp (name, \"_OBJC_SELECTOR_REFERENCES\", 25))\n+\tobjc_selector_refs_section ();\n+      else if (!strncmp (name, \"_OBJC_SYMBOLS\", 13))\n+\tobjc_symbols_section ();\n+      else if (!strncmp (name, \"_OBJC_MODULES\", 13))\n+\tobjc_module_info_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_INSTANCE_METHODS_\", 32))\n+\tobjc_cat_inst_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_CLASS_METHODS_\", 29))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_REFS_\", 20))\n+\tobjc_cat_cls_meth_section ();\n+      else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))\n+\tobjc_protocol_section ();\n+      else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\n+\t       && !TREE_SIDE_EFFECTS (exp))\n+\treadonly_data_section ();\n+      else\n+\tdata_section ();\n+    }\n+  else if (TREE_CODE (exp) == VAR_DECL)\n+    {\n+      if ((flag_pic && reloc)\n+\t  || !TREE_READONLY (exp) || TREE_SIDE_EFFECTS (exp)\n+\t  || !DECL_INITIAL (exp)\n+\t  || (DECL_INITIAL (exp) != error_mark_node\n+\t      && !TREE_CONSTANT (DECL_INITIAL (exp))))\n+\tdata_section ();\n+      else\n+\treadonly_data_section ();\n+    }\n+  else\n+    readonly_data_section ();\n+}"}, {"sha": "b96e365ac2881615f81d50d3be95c9f620a64efa", "filename": "gcc/config/nextstep.h", "status": "modified", "additions": 3, "deletions": 118, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fnextstep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC\n    for NeXTSTEP.\n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 1996, 1997,\n-   1999 Free Software Foundation, Inc.\n+   1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -442,123 +442,8 @@ objc_section_init ()\t\t\t\t\\\n #undef\tREADONLY_DATA_SECTION\n #define READONLY_DATA_SECTION const_section\n \n-#undef\tSELECT_SECTION\n-#define SELECT_SECTION(exp,reloc,align)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (TREE_CODE (exp) == STRING_CST)\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  if (flag_writable_strings)\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\\\n-\t  else if (TREE_STRING_LENGTH (exp) !=\t\t\t\\\n-\t\t   strlen (TREE_STRING_POINTER (exp)) + 1)\t\\\n-\t    readonly_data_section ();\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    cstring_section ();\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == INTEGER_CST\t\t\t\\\n-\t       || TREE_CODE (exp) == REAL_CST)\t\t\t\\\n-        {\t\t\t\t\t\t\t\\\n-\t  tree size = TYPE_SIZE (TREE_TYPE (exp));\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  if (TREE_CODE (size) == INTEGER_CST &&\t\t\\\n-\t      TREE_INT_CST_LOW (size) == 4 &&\t\t\t\\\n-\t      TREE_INT_CST_HIGH (size) == 0)\t\t\t\\\n-\t    literal4_section ();\t\t\t\t\\\n-\t  else if (TREE_CODE (size) == INTEGER_CST &&\t\t\\\n-\t      TREE_INT_CST_LOW (size) == 8 &&\t\t\t\\\n-\t      TREE_INT_CST_HIGH (size) == 0)\t\t\t\\\n-\t    literal8_section ();\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    readonly_data_section ();\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == CONSTRUCTOR\t\t\t\t\\\n-\t       && TREE_TYPE (exp)\t\t\t\t\t\\\n-\t       && TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\t\t\\\n-\t       && TYPE_NAME (TREE_TYPE (exp))\t\t\t\t\\\n-\t       && TREE_CODE (TYPE_NAME (TREE_TYPE (exp))) == IDENTIFIER_NODE \\\n-\t       && IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (exp))))\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (!strcmp (IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (exp))), \\\n-\t\t\t\"NXConstantString\"))\t\t\t\t\\\n-\t  objc_string_object_section ();\t\t\t\t\\\n-\telse if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\t\t\\\n-\t\t&& !TREE_SIDE_EFFECTS (exp))\t\t\t\t\\\n-\t  readonly_data_section ();\t\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\t\\\n-\t  data_section ();\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == VAR_DECL &&\t\t\t\t\\\n-\t       DECL_NAME (exp) &&\t\t\t\t\t\\\n-\t       TREE_CODE (DECL_NAME (exp)) == IDENTIFIER_NODE &&\t\\\n-\t       IDENTIFIER_POINTER (DECL_NAME (exp)) &&\t\t\t\\\n-\t       !strncmp (IDENTIFIER_POINTER (DECL_NAME (exp)), \"_OBJC_\", 6)) \\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  const char *name = IDENTIFIER_POINTER (DECL_NAME (exp));\t\\\n-\t  \t\t\t\t\t\t\t\t\\\n-\t  if (!strncmp (name, \"_OBJC_CLASS_METHODS_\", 20))\t\t\\\n-\t    objc_cls_meth_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_INSTANCE_METHODS_\", 23))\t\\\n-\t    objc_inst_meth_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_CLASS_METHODS_\", 20)) \\\n-\t    objc_cat_cls_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_INSTANCE_METHODS_\", 23)) \\\n-\t    objc_cat_inst_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_VARIABLES_\", 22))\t\\\n-\t    objc_class_vars_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_INSTANCE_VARIABLES_\", 25))\t\\\n-\t    objc_instance_vars_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_PROTOCOLS_\", 22))\t\\\n-\t    objc_cat_cls_meth_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_NAME_\", 17))\t\t\\\n-\t    objc_class_names_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METH_VAR_NAME_\", 20))\t\t\\\n-\t    objc_meth_var_names_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METH_VAR_TYPE_\", 20))\t\t\\\n-\t    objc_meth_var_types_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_REFERENCES\", 22))\t\\\n-\t    objc_cls_refs_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CLASS_\", 12))\t\t\t\\\n-\t    objc_class_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_METACLASS_\", 16))\t\t\\\n-\t    objc_meta_class_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_CATEGORY_\", 15))\t\t\\\n-\t    objc_category_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_SELECTOR_REFERENCES\", 25))\t\\\n-\t    objc_selector_refs_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_SYMBOLS\", 13))\t\t\\\n-\t    objc_symbols_section ();\t\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_MODULES\", 13))\t\t\\\n-\t    objc_module_info_section ();\t\t\t\t\\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_INSTANCE_METHODS_\", 32)) \\\n-\t    objc_cat_inst_meth_section ();                              \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_CLASS_METHODS_\", 29)) \\\n-\t    objc_cat_cls_meth_section ();                               \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_REFS_\", 20))         \\\n-\t    objc_cat_cls_meth_section ();                               \\\n-\t  else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))              \\\n-\t    objc_protocol_section ();                                   \\\n-\t  else if ((TREE_READONLY (exp) || TREE_CONSTANT (exp))\t\t\\\n-\t\t&& !TREE_SIDE_EFFECTS (exp))     \t\t\t\\\n-\t    readonly_data_section ();                                   \\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else if (TREE_CODE (exp) == VAR_DECL)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if ((flag_pic && reloc)\t\t\t\t\t\\\n-\t      || !TREE_READONLY (exp) || TREE_SIDE_EFFECTS (exp)\t\\\n-\t      || !DECL_INITIAL (exp)\t\t\t\t\t\\\n-\t      || (DECL_INITIAL (exp) != error_mark_node\t\t\t\\\n-\t\t  && !TREE_CONSTANT (DECL_INITIAL (exp))))\t\t\\\n-\t    data_section ();\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    readonly_data_section ();\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\treadonly_data_section ();\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION nextstep_select_section\n \n #undef\tSELECT_RTX_SECTION\n #define SELECT_RTX_SECTION(mode, rtx, align)\t\t\t\t\\"}, {"sha": "babf1a86e01d1bb0c59b820ee017c71aca5f731f", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -114,6 +114,8 @@ static void pa_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static int pa_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n static int pa_adjust_priority PARAMS ((rtx, int));\n static int pa_issue_rate PARAMS ((void));\n+static void pa_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT))\n+     ATTRIBUTE_UNUSED;\n \n /* Save the operands last given to a compare for use when we\n    generate a scc or bcc insn.  */\n@@ -7566,3 +7568,30 @@ pa_add_gc_roots ()\n   ggc_add_root (&deferred_plabels, 1, sizeof (&deferred_plabels),\n \t\t&mark_deferred_plabels);\n }\n+\n+/* On hpux10, the linker will give an error if we have a reference\n+   in the read-only data section to a symbol defined in a shared\n+   library.  Therefore, expressions that might require a reloc can\n+   not be placed in the read-only data section.  */\n+\n+static void\n+pa_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (exp) == VAR_DECL\n+      && TREE_READONLY (exp)\n+      && !TREE_THIS_VOLATILE (exp)\n+      && DECL_INITIAL (exp)\n+      && (DECL_INITIAL (exp) == error_mark_node\n+          || TREE_CONSTANT (DECL_INITIAL (exp)))\n+      && !reloc)\n+    readonly_data_section ();\n+  else if (TREE_CODE_CLASS (TREE_CODE (exp)) == 'c'\n+\t   && !(TREE_CODE (exp) == STRING_CST && flag_writable_strings)\n+\t   && !reloc)\n+    readonly_data_section ();\n+  else\n+    data_section ();\n+}"}, {"sha": "af19b64d051093abda7a2f64e1e5139986b67811", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1503,25 +1503,7 @@ do { \t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\\\n     readonly_data_section ();\n \n-/* On hpux10, the linker will give an error if we have a reference\n-   in the read-only data section to a symbol defined in a shared\n-   library.  Therefore, expressions that might require a reloc can\n-   not be placed in the read-only data section.  */\n-#define SELECT_SECTION(EXP,RELOC,ALIGN) \\\n-  if (TREE_CODE (EXP) == VAR_DECL \\\n-      && TREE_READONLY (EXP) \\\n-      && !TREE_THIS_VOLATILE (EXP) \\\n-      && DECL_INITIAL (EXP) \\\n-      && (DECL_INITIAL (EXP) == error_mark_node \\\n-          || TREE_CONSTANT (DECL_INITIAL (EXP))) \\\n-      && !RELOC) \\\n-    readonly_data_section (); \\\n-  else if (TREE_CODE_CLASS (TREE_CODE (EXP)) == 'c' \\\n-\t   && !(TREE_CODE (EXP) == STRING_CST && flag_writable_strings) \\\n-\t   && !RELOC) \\\n-    readonly_data_section (); \\\n-  else \\\n-    data_section ();\n+#define TARGET_ASM_SELECT_SECTION  pa_select_section\n    \n /* Define this macro if references to a symbol must be treated\n    differently depending on something about the variable or"}, {"sha": "4469e378dbc060a1c0397a27487c9a6eadd3e9fe", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -171,36 +171,6 @@ const_section ()\t\t\t\t\t\t\t\\\n #define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  int len;\t\t\t\t\t\t\t\\\n-  char *string;\t\t\t\t\t\t\t\\\n-  const char *prefix,\t\t\t\t\t\t\\\n-    *const name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\\\n-\t\t\t\t\t\t\t\t\\\n-  if (! DECL_ONE_ONLY (DECL))\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      prefix = \".\";                                             \\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-\tprefix = \".text.\";\t\t\t\t\t\\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n-\tprefix = \".rodata.\";\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n-\tprefix = \".data.\";\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n-    prefix = \".gnu.linkonce.t.\";\t\t\t\t\\\n-  else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\t\\\n-    prefix = \".gnu.linkonce.r.\";\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    prefix = \".gnu.linkonce.d.\";\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  len = strlen (name) + strlen (prefix);\t\t\t\\\n-  string = alloca (len + 1);\t\t\t\t\t\\\n-  sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-} while (0)\n \n /* Define the strings used for the special svr4 .type and .size directives.\n    These strings generally do not vary from one system running svr4 to"}, {"sha": "5416abba3ed9cc08e6bf765f7200bea6a8461f34", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Rs6000 running LynxOS.\n-   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by David Henkel-Wallace, Cygnus Support (gumby@cygnus.com)\n \n This file is part of GNU CC.\n@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #undef READONLY_DATA_SECTION\n #undef EXTRA_SECTION_FUNCTIONS\n #undef SELECT_RTX_SECTION\n-#undef SELECT_SECTION\n+#undef TARGET_ASM_SELECT_SECTION\n #undef USER_LABEL_PREFIX\n #undef ASM_OUTPUT_LABELREF\n #undef ASM_OUTPUT_INTERNAL_LABEL"}, {"sha": "06114d3a4a5ee1326b279fce66a1ed0407e8967e", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -148,8 +148,6 @@ extern void setup_incoming_varargs PARAMS ((CUMULATIVE_ARGS *,\n extern struct rtx_def *rs6000_va_arg PARAMS ((tree, tree));\n extern void output_mi_thunk PARAMS ((FILE *, tree, int, tree));\n extern void rs6000_encode_section_info PARAMS ((tree, int));\n-extern void rs6000_select_section PARAMS ((tree, int));\n-extern void rs6000_unique_section PARAMS ((tree, int));\n #ifdef ARGS_SIZE_RTX\n /* expr.h defines ARGS_SIZE_RTX and `enum direction' */\n extern enum direction function_arg_padding PARAMS ((enum machine_mode, tree));"}, {"sha": "e803e2eebb714af312fad7069723900a25fefe61", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 59, "deletions": 4, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -163,9 +163,15 @@ static unsigned int rs6000_elf_section_type_flags PARAMS ((tree, const char *,\n \t\t\t\t\t\t\t   int));\n static void rs6000_elf_asm_out_constructor PARAMS ((rtx, int));\n static void rs6000_elf_asm_out_destructor PARAMS ((rtx, int));\n+static void rs6000_elf_select_section PARAMS ((tree, int,\n+\t\t\t\t\t\t unsigned HOST_WIDE_INT));\n+static void rs6000_elf_unique_section PARAMS ((tree, int));\n #endif\n #ifdef OBJECT_FORMAT_COFF\n static void xcoff_asm_named_section PARAMS ((const char *, unsigned int));\n+static void rs6000_xcoff_select_section PARAMS ((tree, int,\n+\t\t\t\t\t\t unsigned HOST_WIDE_INT));\n+static void rs6000_xcoff_unique_section PARAMS ((tree, int));\n #endif\n static int rs6000_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n static int rs6000_adjust_priority PARAMS ((rtx, int));\n@@ -10954,10 +10960,11 @@ rs6000_select_rtx_section (mode, x)\n    or a constant of some sort.  RELOC indicates whether forming\n    the initial value of DECL requires link-time relocations.  */\n \n-void\n-rs6000_select_section (decl, reloc)\n+static void\n+rs6000_elf_select_section (decl, reloc, align)\n      tree decl;\n      int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n   int size = int_size_in_bytes (TREE_TYPE (decl));\n   int needs_sdata;\n@@ -11003,8 +11010,8 @@ rs6000_select_section (decl, reloc)\n    macro can now be called for uninitialized data items as well as\n    initialised data and functions.  */\n \n-void\n-rs6000_unique_section (decl, reloc)\n+static void\n+rs6000_elf_unique_section (decl, reloc)\n      tree decl;\n      int reloc;\n {\n@@ -11628,4 +11635,52 @@ xcoff_asm_named_section (name, flags)\n {\n   fprintf (asm_out_file, \"\\t.csect %s\\n\", name);\n }\n+\n+static void\n+rs6000_xcoff_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if ((TREE_CODE (exp) == STRING_CST\n+       && ! flag_writable_strings)\n+      || (TREE_CODE_CLASS (TREE_CODE (exp)) == 'd'\n+\t  && TREE_READONLY (exp) && ! TREE_THIS_VOLATILE (exp)\n+\t  && DECL_INITIAL (exp)\n+\t  && (DECL_INITIAL (exp) == error_mark_node\n+\t      || TREE_CONSTANT (DECL_INITIAL (exp)))\n+\t  && ! (reloc)))\n+    {\n+      if (TREE_PUBLIC (exp))\n+        read_only_data_section ();\n+      else\n+        read_only_private_data_section ();\n+    }\n+  else\n+    {\n+      if (TREE_PUBLIC (exp))\n+        data_section ();\n+      else\n+        private_data_section ();\n+    }\n+}\n+\n+static void\n+rs6000_xcoff_unique_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  const char *name;\n+  char *string;\n+  size_t len;\n+\n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+      len = strlen (name) + 5;\n+      string = alloca (len + 1);\n+      sprintf (string, \".%s[PR]\", name);\n+      DECL_SECTION_NAME (decl) = build_string (len, string);\n+    }\n+}\n #endif"}, {"sha": "2eff24c97621e61657027f0febf739533c27f90b", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n@@ -567,8 +567,8 @@ fini_section ()\t\t\t\t\t\t\t\t\\\n    the initial value of DECL requires link-time relocations.  */\n \n /* Override elfos.h definition.  */\n-#undef\tSELECT_SECTION\n-#define\tSELECT_SECTION(DECL, RELOC, ALIGN) rs6000_select_section (DECL, RELOC)\n+#undef\tTARGET_ASM_SELECT_SECTION\n+#define\tTARGET_ASM_SELECT_SECTION  rs6000_elf_select_section\n \n /* A C statement to build up a unique section name, expressed as a\n    STRING_CST node, and assign it to DECL_SECTION_NAME (decl).\n@@ -578,9 +578,8 @@ fini_section ()\t\t\t\t\t\t\t\t\\\n    macro can now be called for uninitialized data items as well as\n    initialised data and functions.  */\n \n-/* Override elfos.h definition.  */\n-#undef\tUNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL, RELOC) rs6000_unique_section (DECL, RELOC)\n+/* Override default elf definition.  */\n+#define TARGET_ASM_UNIQUE_SECTION  rs6000_elf_unique_section\n \n /* Return non-zero if this entry is to be written into the constant pool\n    in a special way.  We do so if this is a SYMBOL_REF, LABEL_REF or a CONST"}, {"sha": "cae5a37e7588ee82e5a30d0bbb8e5b6bc26e673f", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -140,30 +140,7 @@ toc_section ()\t\t\t\t\t\t\\\n    On the RS/6000, we have a special section for all variables except those\n    that are static.  */\n \n-#define SELECT_SECTION(EXP,RELOC,ALIGN)\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if ((TREE_CODE (EXP) == STRING_CST\t\t\t\\\n-       && ! flag_writable_strings)\t\t\t\\\n-      || (TREE_CODE_CLASS (TREE_CODE (EXP)) == 'd'\t\\\n-\t  && TREE_READONLY (EXP) && ! TREE_THIS_VOLATILE (EXP) \\\n-\t  && DECL_INITIAL (EXP)\t\t\t\t\\\n-\t  && (DECL_INITIAL (EXP) == error_mark_node\t\\\n-\t      || TREE_CONSTANT (DECL_INITIAL (EXP)))\t\\\n-\t  && ! (RELOC)))\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n-        read_only_data_section ();\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-        read_only_private_data_section ();\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n-        data_section ();\t\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-        private_data_section ();\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-}\n+#define TARGET_ASM_SELECT_SECTION  rs6000_xcoff_select_section\n \n /* Return non-zero if this entry is to be written into the constant\n    pool in a special way.  We do so if this is a SYMBOL_REF, LABEL_REF\n@@ -468,20 +445,7 @@ toc_section ()\t\t\t\t\t\t\\\n #define DATA_SECTION_ASM_OP \"\\t.csect .data[RW],3\"\n \n /* Define unique section name -- functions only.  */\n-#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    int len;\t\t\t\t\t\t\\\n-    const char *name;\t\t\t\t\t\\\n-    char *string;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-    if (TREE_CODE (DECL) == FUNCTION_DECL) {\t\t\\\n-      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL)); \\\n-      len = strlen (name) + 5;\t\t\t\t\\\n-      string = alloca (len + 1);\t\t\t\\\n-      sprintf (string, \".%s[PR]\", name);\t\t\\\n-      DECL_SECTION_NAME (DECL) = build_string (len, string); \\\n-    }\t\t\t\t\t\t\t\\\n-  } while (0)\n+#define TARGET_ASM_UNIQUE_SECTION  rs6000_xcoff_unique_section\n \n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  xcoff_asm_named_section"}, {"sha": "292f164cd1fcb356ee0ef8886034eb5dbf21ed29", "filename": "gcc/config/sparc/aout.h", "status": "modified", "additions": 2, "deletions": 31, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsparc%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsparc%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Faout.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for SPARC using a.out.\n-   Copyright (C) 1994, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1996, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com).\n \n This file is part of GNU CC.\n@@ -37,36 +37,7 @@ Boston, MA 02111-1307, USA.  */\n  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\\\n   || !strcmp (STR, \"target\") || !strcmp (STR, \"assert\"))\n \n-/* This is defined differently for v9 in a cover file.  */\n-#define SELECT_SECTION(T,RELOC,ALIGN)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (T) == VAR_DECL)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (TREE_READONLY (T) && ! TREE_SIDE_EFFECTS (T)\t\t\t\\\n-\t  && DECL_INITIAL (T)\t\t\t\t\t\t\\\n-\t  && (DECL_INITIAL (T) == error_mark_node\t\t\t\\\n-\t      || TREE_CONSTANT (DECL_INITIAL (T)))\t\t\t\\\n-\t  && DECL_ALIGN (T) <= MAX_TEXT_ALIGN\t\t\t\t\\\n-\t  && ! (flag_pic && ((RELOC) || SUNOS4_SHARED_LIBRARIES)))\t\\\n-\ttext_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (T) == CONSTRUCTOR)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (flag_pic && ((RELOC) || SUNOS4_SHARED_LIBRARIES))\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE_CLASS (TREE_CODE (T)) == 'c')\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((TREE_CODE (T) == STRING_CST && flag_writable_strings)\t\\\n-\t  || TYPE_ALIGN (TREE_TYPE (T)) > MAX_TEXT_ALIGN\t\t\\\n-\t  || (flag_pic && ((RELOC) || SUNOS4_SHARED_LIBRARIES)))\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\ttext_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n+#define TARGET_ASM_SELECT_SECTION  sparc_aout_select_section\n \n /* Output the label for a function definition.  */\n "}, {"sha": "2f8e36cfdb87eeee0d7c36536c5866afe38b5343", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for Sun SPARC.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n    64 bit SPARC V9 support by Michael Tiemann, Jim Wilson, and Doug Evans,\n    at Cygnus Support.\n@@ -157,6 +157,9 @@ static void sparc_nonflat_function_prologue PARAMS ((FILE *, HOST_WIDE_INT,\n #ifdef OBJECT_FORMAT_ELF\n static void sparc_elf_asm_named_section PARAMS ((const char *, unsigned int));\n #endif\n+static void sparc_aout_select_section PARAMS ((tree, int,\n+\t\t\t\t\t       unsigned HOST_WIDE_INT))\n+     ATTRIBUTE_UNUSED;\n \n static int sparc_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n static int sparc_issue_rate PARAMS ((void));\n@@ -8040,6 +8043,19 @@ sparc_elf_asm_named_section (name, flags)\n }\n #endif /* OBJECT_FORMAT_ELF */\n \n+/* ??? Similar to the standard section selection, but force reloc-y-ness\n+   if SUNOS4_SHARED_LIBRARIES.  Unclear why this helps (as opposed to\n+   pretending PIC always on), but that's what the old code did.  */\n+\n+static void\n+sparc_aout_select_section (t, reloc, align)\n+     tree t;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align;\n+{\n+  default_select_section (t, reloc | SUNOS4_SHARED_LIBRARIES, align)\n+}\n+\n int\n sparc_extra_constraint_check (op, c, strict)\n      rtx op;"}, {"sha": "4c49ad8ec6ecf3d650e99b8fd211e1951e69bcb2", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -2545,18 +2545,6 @@ do {\t\t\t\t\t\t\t\\\n    be defined.  */\n /* #define READONLY_DATA_SECTION */\n \n-/* A C statement or statements to switch to the appropriate section for output\n-   of EXP.  You can assume that EXP is either a `VAR_DECL' node or a constant\n-   of some sort.  RELOC indicates whether the initial value of EXP requires\n-   link-time relocations.  Select the section by calling `text_section' or one\n-   of the alternatives for other sections.\n-\n-   Do not define this macro if you put all read-only variables and constants in\n-   the read-only data section (usually the text section).\n-\n-   Defined in svr4.h.  */\n-/* #define SELECT_SECTION(EXP, RELOC, ALIGN) */\n-\n /* A C statement or statements to switch to the appropriate section for output\n    of RTX in mode MODE.  You can assume that RTX is some kind of constant in\n    RTL.  The argument MODE is redundant except in the case of a `const_int'\n@@ -2594,16 +2582,6 @@ do {\t\t\t\t\t\t\t\\\n    that encode section info.  Define this macro if `ENCODE_SECTION_INFO' alters\n    the symbol's name string.  */\n /* #define STRIP_NAME_ENCODING(VAR, SYM_NAME) */\n-\n-/* A C statement to build up a unique section name, expressed as a\n-   STRING_CST node, and assign it to `DECL_SECTION_NAME (DECL)'.\n-   RELOC indicates whether the initial value of EXP requires\n-   link-time relocations.  If you do not define this macro, GNU CC\n-   will use the symbol name prefixed by `.' as the section name.\n-\n-   Defined in svr4.h.  */\n-/* #define UNIQUE_SECTION(DECL, RELOC) */\n-\n \f\n /* Position Independent Code.  */\n "}, {"sha": "5e3ddc948527b3416e454d02059cb86659381460", "filename": "gcc/config/svr3.h", "status": "modified", "additions": 2, "deletions": 41, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsvr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fsvr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr3.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for\n    generic System V Release 3 system.\n-   Copyright (C) 1991, 1996, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1996, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GNU CC.\n@@ -188,16 +188,7 @@ Boston, MA 02111-1307, USA.\n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \".\"\n \n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.\n-   However, use of the const section is turned off by default\n-   unless the specific tm.h file turns it on by defining\n-   USE_CONST_SECTION as 1.  */\n+/* Support const sections and the ctors and dtors sections for g++.  */\n \n /* Define a few machine-specific details of the implementation of\n    constructors.\n@@ -291,36 +282,6 @@ const_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-\n-#undef  SELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((0 && RELOC)\t/* should be (flag_pic && RELOC) */\t\t\\\n-\t  || !TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t  || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node\t\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n-\n /* A C statement or statements to switch to the appropriate\n    section for output of RTX in mode MODE.  RTX is some kind\n    of constant in RTL.  The argument MODE is redundant except"}, {"sha": "c47e47b3dcd1a3244cfcbc3efab4a791f9010265", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -58,6 +58,7 @@ const struct attribute_spec v850_attribute_table[];\n static tree v850_handle_interrupt_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static tree v850_handle_data_area_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static void v850_insert_attributes   PARAMS ((tree, tree *));\n+static void v850_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n \n /* True if the current function has anonymous arguments.  */\n int current_function_anonymous_args;\n@@ -96,6 +97,9 @@ static int v850_interrupt_p = FALSE;\n #undef TARGET_INSERT_ATTRIBUTES\n #define TARGET_INSERT_ATTRIBUTES v850_insert_attributes\n \n+#undef  TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION  v850_select_section\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Sometimes certain combinations of command options do not make\n@@ -2845,3 +2849,60 @@ v850_return_addr (count)\n \n   return get_hard_reg_initial_val (Pmode, LINK_POINTER_REGNUM);\n }\n+\f\n+static void\n+v850_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (exp) == VAR_DECL)\n+    {\n+      int is_const;\n+      if (!TREE_READONLY (exp)\n+\t  || TREE_SIDE_EFFECTS (exp)\n+\t  || !DECL_INITIAL (exp)\n+\t  || (DECL_INITIAL (exp) != error_mark_node\n+\t      && !TREE_CONSTANT (DECL_INITIAL (exp))))\n+        is_const = FALSE;\n+      else\n+        is_const = TRUE;\n+\n+      switch (v850_get_data_area (exp))\n+        {\n+        case DATA_AREA_ZDA:\n+\t  if (is_const)\n+\t    rozdata_section ();\n+\t  else\n+\t    zdata_section ();\n+\t  break;\n+\n+        case DATA_AREA_TDA:\n+\t  tdata_section ();\n+\t  break;\n+\n+        case DATA_AREA_SDA:\n+\t  if (is_const)\n+\t    rosdata_section ();\n+\t  else\n+\t    sdata_section ();\n+\t  break;\n+\n+        default:\n+          if (is_const)\n+\t    const_section ();\n+\t  else\n+\t    data_section ();\n+\t  break;\n+        }\n+    }\n+  else if (TREE_CODE (exp) == STRING_CST)\n+    {\n+      if (! flag_writable_strings)\n+\tconst_section ();\n+      else\n+\tdata_section ();\n+    }\n+  else\n+    const_section ();\n+}"}, {"sha": "4f637ff7095ffe0626aac2ce1513575f98ad01d4", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1119,71 +1119,6 @@ zbss_section ()\t\t\t\t\t\t\t\t\\\n #define ZCOMMON_ASM_OP \t       \"\\t.zcomm\\t\"\n #define TCOMMON_ASM_OP \t       \"\\t.tcomm\\t\"\n \n-/* A C statement or statements to switch to the appropriate section\n-   for output of EXP.  You can assume that EXP is either a `VAR_DECL'\n-   node or a constant of some sort.  RELOC indicates whether the\n-   initial value of EXP requires link-time relocations.  Select the\n-   section by calling `text_section' or one of the alternatives for\n-   other sections.\n-\n-   Do not define this macro if you put all read-only variables and\n-   constants in the read-only data section (usually the text section).  */\n-#undef  SELECT_SECTION\n-#define SELECT_SECTION(EXP, RELOC, ALIGN)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (EXP) == VAR_DECL)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      int is_const;\t\t\t\t\t\t\t\\\n-      if (!TREE_READONLY (EXP)\t\t\t\t\t\t\\\n-\t  || TREE_SIDE_EFFECTS (EXP)\t\t\t\t\t\\\n-\t  || !DECL_INITIAL (EXP)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (EXP) != error_mark_node\t\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (EXP))))\t\t\t\\\n-        is_const = FALSE;\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        is_const = TRUE;\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      switch (v850_get_data_area (EXP))\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-        case DATA_AREA_ZDA:\t\t\t\t\t\t\\\n-\t  if (is_const)\t        \t\t\t\t\t\\\n-\t    rozdata_section ();\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    zdata_section ();\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-        case DATA_AREA_TDA:\t\t\t\t\t\t\\\n-\t  tdata_section ();\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-        case DATA_AREA_SDA:\t\t\t\t\t\t\\\n-\t  if (is_const)\t\t                        \t\t\\\n-\t    rosdata_section ();\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    sdata_section ();\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-        default:\t\t\t\t\t\t\t\\\n-          if (is_const)\t\t\t\t\t\t\t\\\n-\t    const_section ();\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    data_section ();\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (EXP) == STRING_CST)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n /* A C statement or statements to switch to the appropriate section\n    for output of RTX in mode MODE.  You can assume that RTX is some\n    kind of constant in RTL.  The argument MODE is redundant except in"}, {"sha": "fc1d9fa5b109cccb4981b597f0f0f8fdd0c38ef0", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -42,6 +42,7 @@ static void vax_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n #if VMS_TARGET\n static void vms_asm_out_constructor PARAMS ((rtx, int));\n static void vms_asm_out_destructor PARAMS ((rtx, int));\n+static void vms_select_section PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n #endif\n \f\n /* Initialize the GCC target structure.  */\n@@ -51,6 +52,11 @@ static void vms_asm_out_destructor PARAMS ((rtx, int));\n #undef TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE vax_output_function_prologue\n \n+#if VMS_TARGET\n+#undef TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION vms_select_section\n+#endif\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Generate the assembly code for function entry.  FILE is a stdio\n@@ -871,6 +877,36 @@ vms_asm_out_destructor (symbol, priority)\n   assemble_name (asm_out_file, XSTR (symbol, 0));\n   fputc ('\\n', asm_out_file);\n }\n+\n+static void\n+vax_select_section (exp, reloc, align)\n+     tree exp;\n+     int reloc ATTRIBUTE_UNUSED;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  if (TREE_CODE (exp) == VAR_DECL)\n+    {\n+      if (TREE_READONLY (exp) && ! TREE_THIS_VOLATILE (exp)\n+\t  && DECL_INITIAL (exp)\n+\t  && (DECL_INITIAL (exp) == error_mark_node\n+\t      || TREE_CONSTANT (DECL_INITIAL (exp))))\n+\t{\n+\t  if (TREE_PUBLIC (exp))\n+\t    const_section ();\n+\t  else\n+\t    text_section ();\n+\t}\n+      else\n+\tdata_section ();\n+    }\n+  if (TREE_CODE_CLASS (TREE_CODE (exp)) == 'c')\n+    {\n+      if (TREE_CODE (exp) == STRING_CST && flag_writable_strings)\n+\tdata_section ();\n+      else\n+\ttext_section ();\n+    }\n+}\n #endif /* VMS_TARGET */\n \f\n /* Additional support code for VMS host.  */"}, {"sha": "1703e9bf30417ad39238b94524eb1a4e5402036c", "filename": "gcc/config/vax/vms.h", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fvax%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fconfig%2Fvax%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvms.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -1,5 +1,6 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n-   Copyright (C) 1988, 1994, 1995, 1996, 1997, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1995, 1996, 1997, 1999, 2001, 2002\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -210,40 +211,6 @@ const_section ()\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\\\n }\n \n-/* This macro contains the logic to decide which section a variable\n-   should be stored in.  Static constant variables go in the text_section,\n-   non-const variables go in the data_section, and non-static const\n-   variables go in the const_section.\n-\n-   Since this macro is used in a number of places, we must also be able\n-   to decide where to place string constants.  */\n-\n-#define SELECT_SECTION(T,RELOC,ALIGN)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (T) == VAR_DECL)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (TREE_READONLY (T) && ! TREE_THIS_VOLATILE (T)\t\t\t\\\n-\t  && DECL_INITIAL (T)\t\t\t\t\t\t\\\n-\t  && (DECL_INITIAL (T) == error_mark_node\t\t\t\\\n-\t      || TREE_CONSTANT (DECL_INITIAL (T))))\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (TREE_PUBLIC (T))\t\t\t\t\t\t\\\n-\t    const_section ();\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    text_section ();\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE_CLASS (TREE_CODE (T)) == 'c')\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((TREE_CODE (T) == STRING_CST && flag_writable_strings))\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\ttext_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n /* This is used by a hook in varasm.c to write the assembler directives\n    that are needed to tell the startup code which constructors need to\n    be run.  */"}, {"sha": "f3b379fb896dc32ef408dbdcc711ff512ae6874d", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -5752,21 +5752,6 @@ switches to the section to be used for read-only items.\n If these items should be placed in the text section, this macro should\n not be defined.\n \n-@findex SELECT_SECTION\n-@item SELECT_SECTION (@var{exp}, @var{reloc}, @var{align})\n-A C statement or statements to switch to the appropriate section for\n-output of @var{exp}.  You can assume that @var{exp} is either a\n-@code{VAR_DECL} node or a constant of some sort.  @var{reloc}\n-indicates whether the initial value of @var{exp} requires link-time\n-relocations.  Bit 1 is set when variable contains local relocations\n-only, while bit 2 is set for global relocations.\n-Select the section by calling @code{text_section} or one\n-of the alternatives for other sections.  @var{align} is the constant\n-alignment in bits.\n-\n-Do not define this macro if you put all read-only variables and\n-constants in the read-only data section (usually the text section).\n-\n @findex SELECT_RTX_SECTION\n @item SELECT_RTX_SECTION (@var{mode}, @var{rtx}, @var{align})\n A C statement or statements to switch to the appropriate section for\n@@ -5820,18 +5805,34 @@ enough information).\n Decode @var{sym_name} and store the real name part in @var{var}, sans\n the characters that encode section info.  Define this macro if\n @code{ENCODE_SECTION_INFO} alters the symbol's name string.\n-\n-@findex UNIQUE_SECTION\n-@item UNIQUE_SECTION (@var{decl}, @var{reloc})\n-A C statement to build up a unique section name, expressed as a\n-@code{STRING_CST} node, and assign it to @samp{DECL_SECTION_NAME (@var{decl})}.\n-@var{reloc} indicates whether the initial value of @var{exp} requires\n-link-time relocations.  If you do not define this macro, GCC will use\n-the symbol name prefixed by @samp{.} as the section name.  Note - this\n-macro can now be called for uninitialized data items as well as\n-initialized data and functions.\n @end table\n \n+@deftypefn {Target Hook} void TARGET_ASM_SELECT_SECTION (tree @var{exp}, int @var{reloc}, unsigned HOST_WIDE_INT @var{align})\n+Switches to the appropriate section for output of @var{exp}.  You can\n+assume that @var{exp} is either a @code{VAR_DECL} node or a constant of\n+some sort.  @var{reloc} indicates whether the initial value of @var{exp}\n+requires link-time relocations.  Bit 0 is set when variable contains\n+local relocations only, while bit 1 is set for global relocations.\n+Select the section by calling @code{data_section} or one of the\n+alternatives for other sections.  @var{align} is the constant alignment\n+in bits.\n+\n+The default version of this function takes care of putting read-only\n+variables in @code{readonly_data_section}.\n+@end deftypefn\n+\n+@deftypefn {Target Hook} void TARGET_ASM_UNIQUE_SECTION (tree @var{decl}, int @var{reloc})\n+Build up a unique section name, expressed as a @code{STRING_CST} node,\n+and assign it to @samp{DECL_SECTION_NAME (@var{decl})}.\n+As with @code{TARGET_ASM_SELECT_SECTION}, @var{reloc} indicates whether\n+the initial value of @var{exp} requires link-time relocations.\n+\n+The default version of this function appends the symbol name to the\n+ELF section name that would normally be used for the symbol.  For\n+example, the function @code{foo} would be placed in @code{.text.foo}.\n+Whatever the actual target object format, this is often good enough.\n+@end deftypefn\n+\n @node PIC\n @section Position Independent Code\n @cindex position independent code"}, {"sha": "c5371e915e64ac8f62a01748091cf002e42be745", "filename": "gcc/hooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -32,3 +32,11 @@ hook_void_bool_false ()\n {\n   return false;\n }\n+\n+/* Generic hook that takes (tree) and returns false.  */\n+bool\n+hook_tree_bool_false (a)\n+     tree a ATTRIBUTE_UNUSED;\n+{\n+  return false;\n+}"}, {"sha": "0358ae934eb12dec7d1a6c7a25ddefc21de3eb87", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -20,3 +20,4 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  what you give them.   Help stamp out software-hoarding!  */\n \n bool hook_void_bool_false PARAMS ((void));\n+bool hook_tree_bool_false PARAMS ((tree));"}, {"sha": "2c8dbd638bede3091b95bc456f199dda528a7f2f", "filename": "gcc/output.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -543,6 +543,12 @@ extern void default_named_section_asm_out_constructor PARAMS ((struct rtx_def *,\n extern void default_ctor_section_asm_out_constructor PARAMS ((struct rtx_def *,\n \t\t\t\t\t\t\t      int));\n \n+extern void default_select_section PARAMS ((tree, int,\n+\t\t\t\t\t    unsigned HOST_WIDE_INT));\n+extern void default_elf_select_section PARAMS ((tree, int,\n+\t\t\t\t\t\tunsigned HOST_WIDE_INT));\n+extern void default_unique_section PARAMS ((tree, int));\n+\n /* Emit data for vtable gc for GNU binutils.  */\n extern void assemble_vtable_entry PARAMS ((struct rtx_def *, HOST_WIDE_INT));\n extern void assemble_vtable_inherit PARAMS ((struct rtx_def *,"}, {"sha": "5390efa57abe13ab2593062236c7536d42d25af1", "filename": "gcc/target-def.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -59,6 +59,14 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_ASM_FUNCTION_END_PROLOGUE no_asm_to_stream\n #define TARGET_ASM_FUNCTION_BEGIN_EPILOGUE no_asm_to_stream\n \n+#ifndef TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION default_select_section\n+#endif\n+\n+#ifndef TARGET_ASM_UNIQUE_SECTION\n+#define TARGET_ASM_UNIQUE_SECTION default_unique_section\n+#endif\n+\n #if !defined(TARGET_ASM_CONSTRUCTOR) && !defined(USE_COLLECT2)\n # ifdef CTORS_SECTION_ASM_OP\n #  define TARGET_ASM_CONSTRUCTOR default_ctor_section_asm_out_constructor\n@@ -131,6 +139,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \t\t\tTARGET_ASM_NAMED_SECTION,\t\t\\\n \t\t\tTARGET_ASM_EXCEPTION_SECTION,\t\t\\\n \t\t\tTARGET_ASM_EH_FRAME_SECTION,\t\t\\\n+\t\t\tTARGET_ASM_SELECT_SECTION,\t\t\\\n+\t\t\tTARGET_ASM_UNIQUE_SECTION,\t\t\\\n \t\t\tTARGET_ASM_CONSTRUCTOR,\t\t\t\\\n \t\t\tTARGET_ASM_DESTRUCTOR}\n \n@@ -192,6 +202,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n /* In hook.c.  */\n #define TARGET_CANNOT_MODIFY_JUMPS_P hook_void_bool_false\n+#define TARGET_IN_SMALL_DATA_P hook_tree_bool_false\n \n /* The whole shebang.  */\n #define TARGET_INITIALIZER\t\t\t\\\n@@ -211,7 +222,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n   TARGET_SECTION_TYPE_FLAGS,\t\t\t\\\n   TARGET_HAVE_NAMED_SECTIONS,\t\t\t\\\n   TARGET_HAVE_CTORS_DTORS,\t\t\t\\\n-  TARGET_CANNOT_MODIFY_JUMPS_P\t\t\t\\\n+  TARGET_CANNOT_MODIFY_JUMPS_P,\t\t\t\\\n+  TARGET_IN_SMALL_DATA_P\t\t\t\\\n }\n \n #include \"hooks.h\""}, {"sha": "8b500bd15c64820d1504dff3e5a1c8fea1b76279", "filename": "gcc/target.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -91,6 +91,17 @@ struct gcc_target\n     /* Switch to the section that holds the exception frames.  */\n     void (* eh_frame_section) PARAMS ((void));\n \n+    /* Select and switch to a section for EXP.  It may be a DECL or a\n+       constant for which TREE_CST_RTL is valid.  RELOC is non-zero if\n+       runtime relocations must be applied; bit 1 will be set if the\n+       runtime relocations require non-local name resolution.  ALIGN is\n+       the required alignment of the data.  */\n+    void (* select_section) PARAMS ((tree, int, unsigned HOST_WIDE_INT));\n+\n+    /* Select a unique section name for DECL.  RELOC is the same as\n+       for SELECT_SECTION.  */\n+    void (* unique_section) PARAMS ((tree, int));\n+\n     /* Output a constructor for a symbol with a given priority.  */\n     void (* constructor) PARAMS ((rtx, int));\n \n@@ -224,6 +235,9 @@ struct gcc_target\n   /* True if new jumps cannot be created, to replace existing ones or\n      not, at the current point in the compilation.  */\n   bool (* cannot_modify_jumps_p) PARAMS ((void));\n+\n+  /* True if EXP should be placed in a \"small data\" section.  */\n+  bool (* in_small_data_p) PARAMS ((tree));\n };\n \n extern struct gcc_target targetm;"}, {"sha": "e13efe0914cbdaecd5f2f21494c2f9f44da714a6", "filename": "gcc/varasm.c", "status": "modified", "additions": 271, "deletions": 41, "changes": 312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46c4e08a8cbb8359203a90e172a78e3263174b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ae46c4e08a8cbb8359203a90e172a78e3263174b", "patch": "@@ -465,10 +465,10 @@ resolve_unique_section (decl, reloc, flag_function_or_data_sections)\n      int flag_function_or_data_sections;\n {\n   if (DECL_SECTION_NAME (decl) == NULL_TREE\n+      && targetm.have_named_sections\n       && (flag_function_or_data_sections\n-\t  || (targetm.have_named_sections\n-\t      && DECL_ONE_ONLY (decl))))\n-    UNIQUE_SECTION (decl, reloc);\n+\t  || DECL_ONE_ONLY (decl)))\n+    (*targetm.asm_out.unique_section) (decl, reloc);\n }\n \n #ifdef BSS_SECTION_ASM_OP\n@@ -567,9 +567,8 @@ function_section (decl)\n     text_section ();\n }\n \n-/* Switch to section for variable DECL.\n-\n-   RELOC is the `reloc' argument to SELECT_SECTION.  */\n+/* Switch to section for variable DECL.  RELOC is the same as the\n+   argument to SELECT_SECTION.  */\n \n void\n variable_section (decl, reloc)\n@@ -579,29 +578,7 @@ variable_section (decl, reloc)\n   if (IN_NAMED_SECTION (decl))\n     named_section (decl, NULL, reloc);\n   else\n-    {\n-      /* C++ can have const variables that get initialized from constructors,\n-\t and thus can not be in a readonly section.  We prevent this by\n-\t verifying that the initial value is constant for objects put in a\n-\t readonly section.\n-\n-\t error_mark_node is used by the C front end to indicate that the\n-\t initializer has not been seen yet.  In this case, we assume that\n-\t the initializer must be constant.\n-\n-\t C++ uses error_mark_node for variables that have complicated\n-\t initializers, but these variables go in BSS so we won't be called\n-\t for them.  */\n-\n-#ifdef SELECT_SECTION\n-      SELECT_SECTION (decl, reloc, DECL_ALIGN (decl));\n-#else\n-      if (DECL_READONLY_SECTION (decl, reloc))\n-\treadonly_data_section ();\n-      else\n-\tdata_section ();\n-#endif\n-    }\n+    (*targetm.asm_out.select_section) (decl, reloc, DECL_ALIGN (decl));\n }\n \n /* Tell assembler to switch to the section for the exception handling\n@@ -3211,18 +3188,7 @@ output_constant_def_contents (exp, reloc, labelno)\n   if (IN_NAMED_SECTION (exp))\n     named_section (exp, NULL, reloc);\n   else\n-    {\n-      /* First switch to text section, except for writable strings.  */\n-#ifdef SELECT_SECTION\n-      SELECT_SECTION (exp, reloc, align);\n-#else\n-      if (((TREE_CODE (exp) == STRING_CST) && flag_writable_strings)\n-\t  || (flag_pic && reloc))\n-\tdata_section ();\n-      else\n-\treadonly_data_section ();\n-#endif\n-    }\n+    (*targetm.asm_out.select_section) (exp, reloc, align);\n \n   if (align > BITS_PER_UNIT)\n     {\n@@ -5254,3 +5220,267 @@ assemble_vtable_inherit (child, parent)\n   output_addr_const (asm_out_file, parent);\n   fputc ('\\n', asm_out_file);\n }\n+\f\n+/* The lame default section selector.  */\n+\n+void\n+default_select_section (decl, reloc, align)\n+     tree decl;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+{\n+  bool readonly = false;\n+\n+  if (DECL_P (decl))\n+    {\n+      if (DECL_READONLY_SECTION (decl, reloc))\n+\treadonly = true;\n+    }\n+  else if (TREE_CODE (decl) == CONSTRUCTOR)\n+    {\n+      if (! ((flag_pic && reloc)\n+\t     || !TREE_READONLY (decl)\n+\t     || TREE_SIDE_EFFECTS (decl)\n+\t     || !TREE_CONSTANT (decl)))\n+\treadonly = true;\n+    }\n+  else if (TREE_CODE (decl) == STRING_CST)\n+    readonly = !flag_writable_strings;\n+  else if (! (flag_pic && reloc))\n+    readonly = true;\n+\n+  if (readonly)\n+    readonly_data_section ();\n+  else\n+    data_section ();\n+}\n+\n+/* A helper function for default_elf_select_section and\n+   default_elf_unique_section.  Categorizes the DECL.  */\n+\n+enum section_category\n+{\n+  SECCAT_TEXT,\n+\n+  SECCAT_RODATA,\n+  SECCAT_RODATA_MERGE_STR,\n+  SECCAT_RODATA_MERGE_STR_INIT,\n+  SECCAT_RODATA_MERGE_CONST,\n+\n+  SECCAT_DATA,\n+\n+  /* To optimize loading of shared programs, define following subsections\n+     of data section:\n+\t_REL\tContains data that has relocations, so they get grouped\n+\t\ttogether and dynamic linker will visit fewer pages in memory.\n+\t_RO\tContains data that is otherwise read-only.  This is useful\n+\t\twith prelinking as most relocations won't be dynamically\n+\t\tlinked and thus stay read only.\n+\t_LOCAL\tMarks data containing relocations only to local objects.\n+\t\tThese relocations will get fully resolved by prelinking.  */\n+  SECCAT_DATA_REL,\n+  SECCAT_DATA_REL_LOCAL,\n+  SECCAT_DATA_REL_RO,\n+  SECCAT_DATA_REL_RO_LOCAL,\n+\n+  SECCAT_SDATA,\n+  SECCAT_TDATA,\n+\n+  SECCAT_BSS,\n+  SECCAT_SBSS,\n+  SECCAT_TBSS\n+};\n+\n+static enum section_category categorize_decl_for_section PARAMS ((tree, int));\n+\n+static enum section_category\n+categorize_decl_for_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  enum section_category ret;\n+\n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    return SECCAT_TEXT;\n+  else if (TREE_CODE (decl) == STRING_CST)\n+    {\n+      if (flag_writable_strings)\n+\treturn SECCAT_DATA;\n+      else\n+\treturn SECCAT_RODATA_MERGE_STR;\n+    }\n+  else if (TREE_CODE (decl) == VAR_DECL)\n+    {\n+      if (DECL_INITIAL (decl) == NULL\n+\t  || DECL_INITIAL (decl) == error_mark_node)\n+\tret = SECCAT_BSS;\n+      else if (! TREE_READONLY (decl)\n+\t       || TREE_SIDE_EFFECTS (decl)\n+\t       || ! TREE_CONSTANT (DECL_INITIAL (decl)))\n+\t{\n+\t  if (flag_pic && (reloc & 2))\n+\t    ret = SECCAT_DATA_REL;\n+\t  else if (flag_pic && reloc)\n+\t    ret = SECCAT_DATA_REL_LOCAL;\n+\t  else\n+\t    ret = SECCAT_DATA;\n+\t}\n+      else if (flag_pic && (reloc & 2))\n+\tret = SECCAT_DATA_REL_RO;\n+      else if (flag_pic && reloc)\n+\tret = SECCAT_DATA_REL_RO_LOCAL;\n+      else if (flag_merge_constants < 2)\n+\t/* C and C++ don't allow different variables to share the same\n+\t   location.  -fmerge-all-constants allows even that (at the\n+\t   expense of not conforming).  */\n+\tret = SECCAT_RODATA;\n+      else if (TREE_CODE (DECL_INITIAL (decl)) == STRING_CST)\n+\tret = SECCAT_RODATA_MERGE_STR_INIT;\n+      else\n+\tret = SECCAT_RODATA_MERGE_CONST;\n+    }\n+  else if (TREE_CODE (decl) == CONSTRUCTOR)\n+    {\n+      if ((flag_pic && reloc)\n+\t  || TREE_SIDE_EFFECTS (decl)\n+\t  || ! TREE_CONSTANT (decl))\n+\tret = SECCAT_DATA;\n+      else\n+\tret = SECCAT_RODATA;\n+    }\n+  else\n+    ret = SECCAT_RODATA;\n+\n+  /* If the target uses small data sections, select it.  */\n+  if ((*targetm.in_small_data_p) (decl))\n+    {\n+      if (ret == SECCAT_BSS)\n+\tret = SECCAT_SBSS;\n+      else\n+\tret = SECCAT_SDATA;\n+    }\n+\n+  return ret;\n+}\n+\n+/* Select a section based on the above categorization.  */\n+\n+void\n+default_elf_select_section (decl, reloc, align)\n+     tree decl;\n+     int reloc;\n+     unsigned HOST_WIDE_INT align;\n+{\n+  switch (categorize_decl_for_section (decl, reloc))\n+    {\n+    case SECCAT_TEXT:\n+      /* We're not supposed to be called on FUNCTION_DECLs.  */\n+      abort ();\n+    case SECCAT_RODATA:\n+      readonly_data_section ();\n+      break;\n+    case SECCAT_RODATA_MERGE_STR:\n+      mergeable_string_section (decl, align, 0);\n+      break;\n+    case SECCAT_RODATA_MERGE_STR_INIT:\n+      mergeable_string_section (DECL_INITIAL (decl), align, 0);\n+      break;\n+    case SECCAT_RODATA_MERGE_CONST:\n+      mergeable_constant_section (DECL_MODE (decl), align, 0);\n+      break;\n+    case SECCAT_DATA:\n+      data_section ();\n+      break;\n+    case SECCAT_DATA_REL:\n+      named_section (NULL_TREE, \".data.rel\", reloc);\n+      break;\n+    case SECCAT_DATA_REL_LOCAL:\n+      named_section (NULL_TREE, \".data.rel.local\", reloc);\n+      break;\n+    case SECCAT_DATA_REL_RO:\n+      named_section (NULL_TREE, \".data.rel.ro\", reloc);\n+      break;\n+    case SECCAT_DATA_REL_RO_LOCAL:\n+      named_section (NULL_TREE, \".data.rel.ro.local\", reloc);\n+      break;\n+    case SECCAT_SDATA:\n+      named_section (NULL_TREE, \".sdata\", reloc);\n+      break;\n+    case SECCAT_TDATA:\n+      named_section (NULL_TREE, \".tdata\", reloc);\n+      break;\n+    case SECCAT_BSS:\n+#ifdef BSS_SECTION_ASM_OP\n+      bss_section ();\n+#else\n+      named_section (NULL_TREE, \".bss\", reloc);\n+#endif\n+      break;\n+    case SECCAT_SBSS:\n+      named_section (NULL_TREE, \".sbss\", reloc);\n+      break;\n+    case SECCAT_TBSS:\n+      named_section (NULL_TREE, \".tbss\", reloc);\n+      break;\n+    default:\n+      abort ();\n+    }\n+}\n+\n+/* Construct a unique section name based on the decl name and the \n+   categorization performed above.  */\n+\n+void\n+default_unique_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  bool one_only = DECL_ONE_ONLY (decl);\n+  const char *prefix, *name;\n+  size_t nlen, plen;\n+  char *string;\n+\n+  switch (categorize_decl_for_section (decl, reloc))\n+    {\n+    case SECCAT_TEXT:\n+      prefix = one_only ? \".gnu.linkonce.t.\" : \".text.\";\n+      break;\n+    case SECCAT_RODATA:\n+    case SECCAT_RODATA_MERGE_STR:\n+    case SECCAT_RODATA_MERGE_STR_INIT:\n+    case SECCAT_RODATA_MERGE_CONST:\n+      prefix = one_only ? \".gnu.linkonce.r.\" : \".rodata.\";\n+      break;\n+    case SECCAT_DATA:\n+    case SECCAT_DATA_REL:\n+    case SECCAT_DATA_REL_LOCAL:\n+    case SECCAT_DATA_REL_RO:\n+    case SECCAT_DATA_REL_RO_LOCAL:\n+      prefix = one_only ? \".gnu.linkonce.d.\" : \".data.\";\n+      break;\n+    case SECCAT_SDATA:\n+      prefix = one_only ? \".gnu.linkonce.s.\" : \".sdata.\";\n+      break;\n+    case SECCAT_BSS:\n+      prefix = one_only ? \".gnu.linkonce.b.\" : \".bss.\";\n+      break;\n+    case SECCAT_SBSS:\n+      prefix = one_only ? \".gnu.linkonce.sb.\" : \".sbss.\";\n+      break;\n+    case SECCAT_TDATA:\n+    case SECCAT_TBSS:\n+    default:\n+      abort ();\n+    }\n+  plen = strlen (prefix);\n+\n+  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  STRIP_NAME_ENCODING (name, name);\n+  nlen = strlen (name);\n+\n+  string = alloca (nlen + plen + 1);\n+  memcpy (string, prefix, plen);\n+  memcpy (string + plen, name, nlen + 1);\n+\n+  DECL_SECTION_NAME (decl) = build_string (nlen + plen, string);\n+}"}]}