{"sha": "592632598ba85dd1d0b45655bb8a0b3d9473da97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkyNjMyNTk4YmE4NWRkMWQwYjQ1NjU1YmI4YTBiM2Q5NDczZGE5Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-02T17:28:32Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-02T17:28:32Z"}, "message": "nvptx.c (enum nvptx_shuffle_kind): New.\n\n\t* config/nvptx/nvptx.c (enum nvptx_shuffle_kind): New.  Absorb\n\tSHUFFLE defines.\n\t(nvptx_gen_shuffle, nvptx_print_operand, nvptx_expand_shuffle): Adjust.\n\nFrom-SVN: r231192", "tree": {"sha": "7a0641aef9595c91a4b34f4d64919900420bc8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a0641aef9595c91a4b34f4d64919900420bc8d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/592632598ba85dd1d0b45655bb8a0b3d9473da97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592632598ba85dd1d0b45655bb8a0b3d9473da97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/592632598ba85dd1d0b45655bb8a0b3d9473da97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592632598ba85dd1d0b45655bb8a0b3d9473da97/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e733703c0328d10098ced65abcc9803b4e5616d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e733703c0328d10098ced65abcc9803b4e5616d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e733703c0328d10098ced65abcc9803b4e5616d"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "d335b2ef4754a7086201e2f809aeac665df87772", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592632598ba85dd1d0b45655bb8a0b3d9473da97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592632598ba85dd1d0b45655bb8a0b3d9473da97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=592632598ba85dd1d0b45655bb8a0b3d9473da97", "patch": "@@ -1,3 +1,9 @@\n+2015-12-02  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.c (enum nvptx_shuffle_kind): New.  Absorb\n+\tSHUFFLE defines.\n+\t(nvptx_gen_shuffle, nvptx_print_operand, nvptx_expand_shuffle): Adjust.\n+\n 2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "dfdeb699d31f4a00183fe1e50711b9804888a500", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592632598ba85dd1d0b45655bb8a0b3d9473da97/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592632598ba85dd1d0b45655bb8a0b3d9473da97/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=592632598ba85dd1d0b45655bb8a0b3d9473da97", "patch": "@@ -70,10 +70,15 @@\n /* This file should be included last.  */\n #include \"target-def.h\"\n \n-#define SHUFFLE_UP 0\n-#define SHUFFLE_DOWN 1\n-#define SHUFFLE_BFLY 2\n-#define SHUFFLE_IDX 3\n+/* The kind of shuffe instruction.  */\n+enum nvptx_shuffle_kind\n+{\n+  SHUFFLE_UP,\n+  SHUFFLE_DOWN,\n+  SHUFFLE_BFLY,\n+  SHUFFLE_IDX,\n+  SHUFFLE_MAX\n+};\n \n /* Record the function decls we've written, and the libfuncs and function\n    decls corresponding to them.  */\n@@ -1221,7 +1226,7 @@ nvptx_gen_pack (rtx dst, rtx src0, rtx src1)\n    across the vectors of a single warp.  */\n \n static rtx\n-nvptx_gen_shuffle (rtx dst, rtx src, rtx idx, unsigned kind)\n+nvptx_gen_shuffle (rtx dst, rtx src, rtx idx, nvptx_shuffle_kind kind)\n {\n   rtx res;\n \n@@ -2019,10 +2024,11 @@ nvptx_print_operand (FILE *file, rtx x, int code)\n \n     case 'S':\n       {\n-\tunsigned kind = UINTVAL (x);\n+\tnvptx_shuffle_kind kind = (nvptx_shuffle_kind) UINTVAL (x);\n+\t/* Same order as nvptx_shuffle_kind.  */\n \tstatic const char *const kinds[] = \n-\t  {\"up\", \"down\", \"bfly\", \"idx\"};\n-\tfprintf (file, \".%s\", kinds[kind]);\n+\t  {\".up\", \".down\", \".bfly\", \".idx\"};\n+\tfputs (kinds[kind], file);\n       }\n       break;\n \n@@ -3990,7 +3996,8 @@ nvptx_expand_shuffle (tree exp, rtx target, machine_mode mode, int ignore)\n   if (!REG_P (idx) && GET_CODE (idx) != CONST_INT)\n     idx = copy_to_mode_reg (SImode, idx);\n \n-  rtx pat = nvptx_gen_shuffle (target, src, idx, INTVAL (op));\n+  rtx pat = nvptx_gen_shuffle (target, src, idx,\n+\t\t\t       (nvptx_shuffle_kind) INTVAL (op));\n   if (pat)\n     emit_insn (pat);\n "}]}