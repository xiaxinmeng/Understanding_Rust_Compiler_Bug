{"sha": "f4d7f828662ea47fd418a49e718122cb408002a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkN2Y4Mjg2NjJlYTQ3ZmQ0MThhNDllNzE4MTIyY2I0MDgwMDJhNg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-09-22T00:22:41Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-09-22T00:22:41Z"}, "message": "Add pixel compare VIS intrinsics.\n\n\t* config/sparc/sparc.md (UNSPEC_FCMPLE, UNSPEC_FCMPNE, UNSPEC_FCMPGT,\n\tUNSPEC_FCMPEQ): New unspec codes.\n\t(fcmple16_vis, fcmple32_vis, fcmpne16_vis, fcmpne32_vis, fcmpgt16_vis,\n\tfcmpgt32_vis, fcmpeq16_vis, fcmpeq32_vis): New patterns.\n\t* config/sparc/sparc.c (sparc_vis_init_builtins): Create builtins for\n\tnew pixel compare VIS patterns.\n\t* config/sparc/visintrin.h (__vis_fcmple16, __vis_fcmple32,\n\t__vis_fcmpne16, __vis_fcmpne32, __vis_fcmpgt16, __vis_fcmpgt32,\n\t__vis_fcmpeq16, __vis_fcmpeq32): New.\n\t* doc/extend.texi: Document new pixel compare VIS intrinsics.\n\nFrom-SVN: r179072", "tree": {"sha": "a68353202ea27fab35ab71e2d94ae033c422cd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a68353202ea27fab35ab71e2d94ae033c422cd06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d7f828662ea47fd418a49e718122cb408002a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d7f828662ea47fd418a49e718122cb408002a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d7f828662ea47fd418a49e718122cb408002a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d7f828662ea47fd418a49e718122cb408002a6/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc35416dfc323b3657982e7bf19c1cbfdd49668e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc35416dfc323b3657982e7bf19c1cbfdd49668e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc35416dfc323b3657982e7bf19c1cbfdd49668e"}], "stats": {"total": 182, "additions": 182, "deletions": 0}, "files": [{"sha": "44e95131b87a15621b5c4a2b2e2868e617e157a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4d7f828662ea47fd418a49e718122cb408002a6", "patch": "@@ -76,6 +76,17 @@\n \t(sparc_vis_init_builtins): Use def_builtin_const for all VIS builtins\n \tother than alignaddr and falignaddr.\n \n+\t* config/sparc/sparc.md (UNSPEC_FCMPLE, UNSPEC_FCMPNE, UNSPEC_FCMPGT,\n+\tUNSPEC_FCMPEQ): New unspec codes.\n+\t(fcmple16_vis, fcmple32_vis, fcmpne16_vis, fcmpne32_vis, fcmpgt16_vis,\n+\tfcmpgt32_vis, fcmpeq16_vis, fcmpeq32_vis): New patterns.\n+\t* config/sparc/sparc.c (sparc_vis_init_builtins): Create builtins for\n+\tnew pixel compare VIS patterns.\n+\t* config/sparc/visintrin.h (__vis_fcmple16, __vis_fcmple32,\n+\t__vis_fcmpne16, __vis_fcmpne32, __vis_fcmpgt16, __vis_fcmpgt32,\n+\t__vis_fcmpeq16, __vis_fcmpeq32): New.\n+\t* doc/extend.texi: Document new pixel compare VIS intrinsics.\n+\n 2011-09-21  Tom de Vries  <tom@codesourcery.com>\n \n \t* final.c (final): Handle if JUMP_LABEL is not LABEL_P."}, {"sha": "a4917da381eae2b3a59c256b10d8ffc861457a57", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=f4d7f828662ea47fd418a49e718122cb408002a6", "patch": "@@ -9164,6 +9164,10 @@ sparc_vis_init_builtins (void)\n   tree si_ftype_ptr_ptr = build_function_type_list (intSI_type_node,\n \t\t        \t\t\t    ptr_type_node,\n \t\t\t\t\t            ptr_type_node, 0);\n+  tree si_ftype_v4hi_v4hi = build_function_type_list (intSI_type_node,\n+\t\t\t\t\t\t      v4hi, v4hi, 0);\n+  tree si_ftype_v2si_v2si = build_function_type_list (intSI_type_node,\n+\t\t\t\t\t\t      v2si, v2si, 0);\n \n   /* Packing and expanding vectors.  */\n   def_builtin_const (\"__builtin_vis_fpack16\", CODE_FOR_fpack16_vis,\n@@ -9252,6 +9256,23 @@ sparc_vis_init_builtins (void)\n       def_builtin_const (\"__builtin_vis_edge32l\", CODE_FOR_edge32lsi_vis,\n \t\t\t si_ftype_ptr_ptr);\n     }\n+\n+  def_builtin_const (\"__builtin_vis_fcmple16\", CODE_FOR_fcmple16_vis,\n+\t\t     si_ftype_v4hi_v4hi);\n+  def_builtin_const (\"__builtin_vis_fcmple32\", CODE_FOR_fcmple32_vis,\n+\t\t     si_ftype_v2si_v2si);\n+  def_builtin_const (\"__builtin_vis_fcmpne16\", CODE_FOR_fcmpne16_vis,\n+\t\t     si_ftype_v4hi_v4hi);\n+  def_builtin_const (\"__builtin_vis_fcmpne32\", CODE_FOR_fcmpne32_vis,\n+\t\t     si_ftype_v2si_v2si);\n+  def_builtin_const (\"__builtin_vis_fcmpgt16\", CODE_FOR_fcmpgt16_vis,\n+\t\t     si_ftype_v4hi_v4hi);\n+  def_builtin_const (\"__builtin_vis_fcmpgt32\", CODE_FOR_fcmpgt32_vis,\n+\t\t     si_ftype_v2si_v2si);\n+  def_builtin_const (\"__builtin_vis_fcmpeq16\", CODE_FOR_fcmpeq16_vis,\n+\t\t     si_ftype_v4hi_v4hi);\n+  def_builtin_const (\"__builtin_vis_fcmpeq32\", CODE_FOR_fcmpeq32_vis,\n+\t\t     si_ftype_v2si_v2si);\n }\n \n /* Handle TARGET_EXPAND_BUILTIN target hook."}, {"sha": "812ae7b738917cd31ff30533604f1ee3d7c59307", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=f4d7f828662ea47fd418a49e718122cb408002a6", "patch": "@@ -70,6 +70,11 @@\n \n    (UNSPEC_SP_SET\t\t60)\n    (UNSPEC_SP_TEST\t\t61)\n+\n+   (UNSPEC_FCMPLE\t\t70)\n+   (UNSPEC_FCMPNE\t\t71)\n+   (UNSPEC_FCMPGT\t\t72)\n+   (UNSPEC_FCMPEQ\t\t73)\n   ])\n \n (define_constants\n@@ -7886,4 +7891,84 @@\n   \"edge32l\\t%r1, %r2, %0\"\n   [(set_attr \"type\" \"edge\")])\n \n+(define_insn \"fcmple16_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPLE))]\n+  \"TARGET_VIS\"\n+  \"fcmple16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmple32_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPLE))]\n+  \"TARGET_VIS\"\n+  \"fcmple32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpne16_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPNE))]\n+  \"TARGET_VIS\"\n+  \"fcmpne16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpne32_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPNE))]\n+  \"TARGET_VIS\"\n+  \"fcmpne32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpgt16_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPGT))]\n+  \"TARGET_VIS\"\n+  \"fcmpgt16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpgt32_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPGT))]\n+  \"TARGET_VIS\"\n+  \"fcmpgt32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpeq16_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPEQ))]\n+  \"TARGET_VIS\"\n+  \"fcmpeq16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"fcmpeq32_vis\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(unspec:SI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")]\n+\t UNSPEC_FCMPEQ))]\n+  \"TARGET_VIS\"\n+  \"fcmpeq32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fpmul\")\n+   (set_attr \"fptype\" \"double\")])\n+\n (include \"sync.md\")"}, {"sha": "4c2fa18928f4e5c41e0e8c97d7598530da7e2d51", "filename": "gcc/config/sparc/visintrin.h", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fvisintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fconfig%2Fsparc%2Fvisintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvisintrin.h?ref=f4d7f828662ea47fd418a49e718122cb408002a6", "patch": "@@ -206,4 +206,60 @@ __vis_edge32l (void *__A, void *__B)\n   return __builtin_vis_edge32l (__A, __B);\n }\n \n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmple16 (__v4hi __A, __v4hi __B)\n+{\n+  return __builtin_vis_fcmple16 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmple32 (__v2si __A, __v2si __B)\n+{\n+  return __builtin_vis_fcmple32 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpne16 (__v4hi __A, __v4hi __B)\n+{\n+  return __builtin_vis_fcmpne16 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpne32 (__v2si __A, __v2si __B)\n+{\n+  return __builtin_vis_fcmpne32 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpgt16 (__v4hi __A, __v4hi __B)\n+{\n+  return __builtin_vis_fcmpgt16 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpgt32 (__v2si __A, __v2si __B)\n+{\n+  return __builtin_vis_fcmpgt32 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpeq16 (__v4hi __A, __v4hi __B)\n+{\n+  return __builtin_vis_fcmpeq16 (__A, __B);\n+}\n+\n+extern __inline int\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+__vis_fcmpeq32 (__v2si __A, __v2si __B)\n+{\n+  return __builtin_vis_fcmpeq32 (__A, __B);\n+}\n+\n #endif  /* _VISINTRIN_H_INCLUDED */"}, {"sha": "1f54ef15d22ecfc93c02ad816b28df30442b70c4", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d7f828662ea47fd418a49e718122cb408002a6/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=f4d7f828662ea47fd418a49e718122cb408002a6", "patch": "@@ -12965,6 +12965,15 @@ int __builtin_vis_edge16 (void *, void *);\n int __builtin_vis_edge16l (void *, void *);\n int __builtin_vis_edge32 (void *, void *);\n int __builtin_vis_edge32l (void *, void *);\n+\n+int __builtin_vis_fcmple16 (v4hi, v4hi);\n+int __builtin_vis_fcmple32 (v2si, v2si);\n+int __builtin_vis_fcmpne16 (v4hi, v4hi);\n+int __builtin_vis_fcmpne32 (v2si, v2si);\n+int __builtin_vis_fcmpgt16 (v4hi, v4hi);\n+int __builtin_vis_fcmpgt32 (v2si, v2si);\n+int __builtin_vis_fcmpeq16 (v4hi, v4hi);\n+int __builtin_vis_fcmpeq32 (v2si, v2si);\n @end smallexample\n \n @node SPU Built-in Functions"}]}