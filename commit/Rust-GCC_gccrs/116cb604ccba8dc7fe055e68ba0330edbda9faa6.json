{"sha": "116cb604ccba8dc7fe055e68ba0330edbda9faa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2Y2I2MDRjY2JhOGRjN2ZlMDU1ZTY4YmEwMzMwZWRiZGE5ZmFhNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-01-27T16:32:12Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-01-27T16:32:12Z"}, "message": "re PR middle-end/17278 (8% C++ compile-time regression in comparison with 3.4.1 at -O1 optimization level)\n\n\tPR middle-end/17278\n\t* opts.c (decode_options): Move flag_thread_jumps from -O1 and\n\thigher to -O2 and higher.  Likewise for tree PRE.\n\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Only iterate at -O2\n\tand better.\n\nFrom-SVN: r94325", "tree": {"sha": "dc324f82ea9932fb68be7d5ec9da7f0000e695a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc324f82ea9932fb68be7d5ec9da7f0000e695a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/116cb604ccba8dc7fe055e68ba0330edbda9faa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116cb604ccba8dc7fe055e68ba0330edbda9faa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116cb604ccba8dc7fe055e68ba0330edbda9faa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116cb604ccba8dc7fe055e68ba0330edbda9faa6/comments", "author": null, "committer": null, "parents": [{"sha": "6737ba67d5250258aa08fa779ddac32f8bca6dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6737ba67d5250258aa08fa779ddac32f8bca6dfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6737ba67d5250258aa08fa779ddac32f8bca6dfb"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "47c180ec815ce49e3842d4ab74ed8fca91d84a63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=116cb604ccba8dc7fe055e68ba0330edbda9faa6", "patch": "@@ -1,3 +1,11 @@\n+2005-01-27  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR middle-end/17278\n+\t* opts.c (decode_options): Move flag_thread_jumps from -O1 and\n+\thigher to -O2 and higher.  Likewise for tree PRE.\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Only iterate at -O2\n+\tand better.\n+\n 2005-01-27  Ian Lance Taylor  <ian@c2micro.com>\n \n \tPR middle-end/19583"}, {"sha": "b5e2930c842fc34dd678b84e9370ba6c45b55561", "filename": "gcc/opts.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=116cb604ccba8dc7fe055e68ba0330edbda9faa6", "patch": "@@ -481,7 +481,6 @@ decode_options (unsigned int argc, const char **argv)\n   if (optimize >= 1)\n     {\n       flag_defer_pop = 1;\n-      flag_thread_jumps = 1;\n #ifdef DELAY_SLOTS\n       flag_delayed_branch = 1;\n #endif\n@@ -510,14 +509,12 @@ decode_options (unsigned int argc, const char **argv)\n \t     the condition is satisfied in the first iteration and therefore\n \t     to eliminate it.  Jump threading handles these cases now.  */\n \t  flag_tree_ch = 1;\n- \n-          /* PRE tends to generate bigger code.  */\n-          flag_tree_pre = 1;\n \t}\n     }\n \n   if (optimize >= 2)\n     {\n+      flag_thread_jumps = 1;\n       flag_crossjumping = 1;\n       flag_optimize_sibling_calls = 1;\n       flag_cse_follow_jumps = 1;\n@@ -540,6 +537,12 @@ decode_options (unsigned int argc, const char **argv)\n       flag_reorder_blocks = 1;\n       flag_reorder_functions = 1;\n       flag_unit_at_a_time = 1;\n+\n+      if (!optimize_size)\n+\t{\n+          /* PRE tends to generate bigger code.  */\n+          flag_tree_pre = 1;\n+\t}\n     }\n \n   if (optimize >= 3)"}, {"sha": "648ee5625ddf58bec9dda4fa0ee05882724f16c9", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116cb604ccba8dc7fe055e68ba0330edbda9faa6/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=116cb604ccba8dc7fe055e68ba0330edbda9faa6", "patch": "@@ -479,7 +479,7 @@ tree_ssa_dominator_optimize (void)\n \t    SSA_NAME_VALUE (name) = NULL;\n \t}\n     }\n-  while (cfg_altered);\n+  while (optimize > 1 && cfg_altered);\n \n   /* Debugging dumps.  */\n   if (dump_file && (dump_flags & TDF_STATS))"}]}