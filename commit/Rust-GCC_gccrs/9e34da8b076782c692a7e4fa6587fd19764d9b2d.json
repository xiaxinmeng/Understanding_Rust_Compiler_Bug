{"sha": "9e34da8b076782c692a7e4fa6587fd19764d9b2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzNGRhOGIwNzY3ODJjNjkyYTdlNGZhNjU4N2ZkMTk3NjRkOWIyZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-07-29T20:16:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-07-29T20:16:32Z"}, "message": "re PR c++/40834 (Revision 149750 failed 483.xalancbmk in SPEC CPU 2006)\n\n2009-07-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR c++/40834\n\t* cp-gimplify.c (cp_genericize_r): Properly walk the BIND_EXPR\n\tvars.\n\n\t* g++.dg/torture/pr40834.C: New testcase.\n\nFrom-SVN: r150222", "tree": {"sha": "2d32a3bb27ecb9ca4e4a9bd39bfa88b4d0c93093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d32a3bb27ecb9ca4e4a9bd39bfa88b4d0c93093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e34da8b076782c692a7e4fa6587fd19764d9b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e34da8b076782c692a7e4fa6587fd19764d9b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e34da8b076782c692a7e4fa6587fd19764d9b2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e34da8b076782c692a7e4fa6587fd19764d9b2d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2958f4a215223d78c9deb984cadfc410446e4e48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2958f4a215223d78c9deb984cadfc410446e4e48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2958f4a215223d78c9deb984cadfc410446e4e48"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "743854196a0073b8ce3d311abc270e3830e96c61", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e34da8b076782c692a7e4fa6587fd19764d9b2d", "patch": "@@ -1,3 +1,9 @@\n+2009-07-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/40834\n+\t* cp-gimplify.c (cp_genericize_r): Properly walk the BIND_EXPR\n+\tvars.\n+\n 2009-07-26  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/40749"}, {"sha": "b4d36de44cabd5f308710176f23b5c8a7a00b3ba", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9e34da8b076782c692a7e4fa6587fd19764d9b2d", "patch": "@@ -810,7 +810,6 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       cp_walk_tree (&BIND_EXPR_BODY (stmt),\n \t\t    cp_genericize_r, data, NULL);\n       VEC_pop (tree, wtd->bind_expr_stack);\n-      *walk_subtrees = 0;\n     }\n \n   else if (TREE_CODE (stmt) == USING_STMT)"}, {"sha": "0e55fabebaf55810aa8fc1393258c5892772abcb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e34da8b076782c692a7e4fa6587fd19764d9b2d", "patch": "@@ -1,3 +1,8 @@\n+2009-07-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/40834\n+\t* g++.dg/torture/pr40834.C: New testcase.\n+\n 2009-07-29  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/40830"}, {"sha": "67d3028532a035a5f011303c58f510e860963de3", "filename": "gcc/testsuite/g++.dg/torture/pr40834.C", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40834.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e34da8b076782c692a7e4fa6587fd19764d9b2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40834.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40834.C?ref=9e34da8b076782c692a7e4fa6587fd19764d9b2d", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do run } */\n+\n+extern \"C\" void abort (void);\n+class XalanDOMString\n+{\n+public:\n+  int y;\n+};\n+\n+class XObject\n+{\n+public:\n+  const XalanDOMString& str() const { return x; }\n+  XalanDOMString x;\n+};\n+\n+class XObjectPtr\n+{\n+public:\n+  XObjectPtr(const XObjectPtr& theSource)\n+    {\n+      m_xobjectPtr = theSource.m_xobjectPtr;\n+    }\n+  const XObject* operator->() const\n+    {\n+      return m_xobjectPtr;\n+    };\n+  XObjectPtr(XObject *p) { m_xobjectPtr = p; }\n+  XObject* m_xobjectPtr;\n+};\n+\n+class FunctionSubstringBefore\n+{\n+public:\n+  int execute( const XObjectPtr arg1) const\n+    {\n+      const XalanDOMString& theFirstString = arg1->str();\n+      return theFirstString.y;\n+    }\n+};\n+\n+int\n+main ()\n+{\n+  XObject x; \n+  XObjectPtr y (&x);\n+  x.x.y = -1;\n+  FunctionSubstringBefore z;\n+  if (z.execute (y) != -1)\n+    abort ();\n+  return 0;\n+}"}]}