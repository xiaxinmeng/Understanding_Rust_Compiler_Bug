{"sha": "0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzMWI2OWY5YWExYmMxZDU2YTFkMjYzMzY1MjRhZWQzZWUzOGU0MQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-03-17T21:25:59Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-03-17T21:25:59Z"}, "message": "re PR middle-end/37805 (gcc --help=separate)\n\ngcc/\n\tPR middle-end/37805\n\t* opts.c (print_specific_help): In addition to `undocumented',\n\taccept `separate' and `joined' flags if passed alone.  Describe\n\toutput by the first matched one of those.\n\t(common_handle_option): Skip over empty strings.\n\t* gcc.c (display_help): Fix help string for `--help='.\n\t* doc/invoke.texi (Option Summary, Overall Options): With\n\t`--help=', classes and qualifiers can both be repeated, but\n\tonly the latter can be negated.  One should not pass only\n\tnegated qualifiers.  Fix markup and examples.\n\nFrom-SVN: r144921", "tree": {"sha": "10eadf15b3f22c36e8cf24a1f0e199069fdf4aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10eadf15b3f22c36e8cf24a1f0e199069fdf4aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/comments", "author": null, "committer": null, "parents": [{"sha": "668112286a4102cfd38e1d4b9c5748337f0a5409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668112286a4102cfd38e1d4b9c5748337f0a5409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668112286a4102cfd38e1d4b9c5748337f0a5409"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "8736d5f31a49d5e273d597f55050f500452a0924", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "patch": "@@ -1,5 +1,16 @@\n 2009-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n+\tPR middle-end/37805\n+\t* opts.c (print_specific_help): In addition to `undocumented',\n+\taccept `separate' and `joined' flags if passed alone.  Describe\n+\toutput by the first matched one of those.\n+\t(common_handle_option): Skip over empty strings.\n+\t* gcc.c (display_help): Fix help string for `--help='.\n+\t* doc/invoke.texi (Option Summary, Overall Options): With\n+\t`--help=', classes and qualifiers can both be repeated, but\n+\tonly the latter can be negated.  One should not pass only\n+\tnegated qualifiers.  Fix markup and examples.\n+\n \tRevert\n \t2008-10-14  Jakub Jelinek  <jakub@redhat.com>\n \tPR middle-end/37805"}, {"sha": "275986c1e6eab7f84c450613a66a5f04ad777b7d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "patch": "@@ -163,7 +163,7 @@ in the following sections.\n @item Overall Options\n @xref{Overall Options,,Options Controlling the Kind of Output}.\n @gccoptlist{-c  -S  -E  -o @var{file}  -combine  -pipe  -pass-exit-codes  @gol\n--x @var{language}  -v  -###  --help@r{[}=@var{class}@r{]}  --target-help  @gol\n+-x @var{language}  -v  -###  --help@r{[}=@var{class}@r{[},@dots{}@r{]]}  --target-help  @gol\n --version -wrapper@@@var{file}}\n \n @item C Language Options\n@@ -1161,11 +1161,10 @@ Print (on the standard output) a description of target-specific command\n line options for each tool.  For some targets extra target-specific\n information may also be printed.\n \n-@item --help=@var{class}@r{[},@var{qualifier}@r{]}\n+@item --help=@{@var{class}@r{|[}^@r{]}@var{qualifier}@}@r{[},@dots{}@r{]}\n Print (on the standard output) a description of the command line\n-options understood by the compiler that fit into a specific class.\n-The class can be one of @samp{optimizers}, @samp{warnings}, @samp{target},\n-@samp{params}, or @var{language}:\n+options understood by the compiler that fit into all specified classes\n+and qualifiers.  These are the supported classes:\n \n @table @asis\n @item @samp{optimizers}\n@@ -1195,9 +1194,7 @@ version of GCC.\n This will display the options that are common to all languages.\n @end table\n \n-It is possible to further refine the output of the @option{--help=}\n-option by adding a comma separated list of qualifiers after the\n-class.  These can be any from the following list:\n+These are the supported qualifiers:\n \n @table @asis\n @item @samp{undocumented}\n@@ -1221,15 +1218,18 @@ switches supported by the compiler the following can be used:\n @end smallexample\n \n The sense of a qualifier can be inverted by prefixing it with the\n-@var{^} character, so for example to display all binary warning\n+@samp{^} character, so for example to display all binary warning\n options (i.e., ones that are either on or off and that do not take an\n argument), which have a description the following can be used:\n \n @smallexample\n --help=warnings,^joined,^undocumented\n @end smallexample\n \n-A class can also be used as a qualifier, although this usually\n+The argument to @option{--help=} should not consist solely of inverted\n+qualifiers.\n+\n+Combining several classes is possible, although this usually\n restricts the output by so much that there is nothing to display.  One\n case where it does work however is when one of the classes is\n @var{target}.  So for example to display all the target-specific\n@@ -1265,7 +1265,7 @@ options, so for example it is possible to find out which optimizations\n are enabled at @option{-O2} by using:\n \n @smallexample\n--O2 --help=optimizers\n+-Q -O2 --help=optimizers\n @end smallexample\n \n Alternatively you can discover which binary optimizations are enabled"}, {"sha": "ee953660e5cc9fda890b0f630e54d4c686b96d89", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "patch": "@@ -3228,7 +3228,7 @@ display_help (void)\n   fputs (_(\"  -pass-exit-codes         Exit with highest error code from a phase\\n\"), stdout);\n   fputs (_(\"  --help                   Display this information\\n\"), stdout);\n   fputs (_(\"  --target-help            Display target specific command line options\\n\"), stdout);\n-  fputs (_(\"  --help={target|optimizers|warnings|undocumented|params}[,{[^]joined|[^]separate}]\\n\"), stdout);\n+  fputs (_(\"  --help={target|optimizers|warnings|params|[^]{joined|separate|undocumented}}[,...]\\n\"), stdout);\n   fputs (_(\"                           Display specific types of command line options\\n\"), stdout);\n   if (! verbose_flag)\n     fputs (_(\"  (Use '-v --help' to display command line options of sub-processes)\\n\"), stdout);"}, {"sha": "631977097ec099838d410003d219f574dcedd702", "filename": "gcc/opts.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0631b69f9aa1bc1d56a1d26336524aed3ee38e41/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=0631b69f9aa1bc1d56a1d26336524aed3ee38e41", "patch": "@@ -1396,7 +1396,7 @@ print_specific_help (unsigned int include_flags,\n \tdefault:\n \t  if (i >= cl_lang_count)\n \t    break;\n-\t  if ((exclude_flags & ((1U << cl_lang_count) - 1)) != 0)\n+\t  if (exclude_flags & all_langs_mask)\n \t    description = _(\"The following options are specific to just the language \");\n \t  else\n \t    description = _(\"The following options are supported by the language \");\n@@ -1409,8 +1409,12 @@ print_specific_help (unsigned int include_flags,\n     {\n       if (any_flags == 0)\n \t{\n-\t  if (include_flags == CL_UNDOCUMENTED)\n+\t  if (include_flags & CL_UNDOCUMENTED)\n \t    description = _(\"The following options are not documented\");\n+\t  else if (include_flags & CL_SEPARATE)\n+\t    description = _(\"The following options take separate arguments\");\n+\t  else if (include_flags & CL_JOINED)\n+\t    description = _(\"The following options take joined arguments\");\n \t  else\n \t    {\n \t      internal_error (\"unrecognized include_flags 0x%x passed to print_specific_help\",\n@@ -1539,6 +1543,11 @@ common_handle_option (size_t scode, const char *arg, int value,\n \t      len = strlen (a);\n \t    else\n \t      len = comma - a;\n+\t    if (len == 0)\n+\t      {\n+\t\ta = comma + 1;\n+\t\tcontinue;\n+\t      }\n \n \t    /* Check to see if the string matches an option class name.  */\n \t    for (i = 0, specific_flag = 0; specifics[i].string != NULL; i++)\n@@ -1547,7 +1556,7 @@ common_handle_option (size_t scode, const char *arg, int value,\n \t\t  specific_flag = specifics[i].flag;\n \t\t  break;\n \t\t}\n-\t    \n+\n \t    /* Check to see if the string matches a language name.\n \t       Note - we rely upon the alpha-sorted nature of the entries in\n \t       the lang_names array, specifically that shorter names appear"}]}