{"sha": "716f003f91219c1a6997a7fcc960c796ca73a82e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2ZjAwM2Y5MTIxOWMxYTY5OTdhN2ZjYzk2MGM3OTZjYTczYTgyZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-01-26T00:30:34Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-01-26T00:30:34Z"}, "message": "Added debugging utilities debug_rtx_list to print several rtx's and...\n\nAdded debugging utilities debug_rtx_list to print several rtx's and\ndebug_rtx_find to look up an rtx in a list given a uid.\n\nFrom-SVN: r3343", "tree": {"sha": "5fb2668b5b1c11ba45b1066be5167b66af578c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb2668b5b1c11ba45b1066be5167b66af578c24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/716f003f91219c1a6997a7fcc960c796ca73a82e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716f003f91219c1a6997a7fcc960c796ca73a82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/716f003f91219c1a6997a7fcc960c796ca73a82e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716f003f91219c1a6997a7fcc960c796ca73a82e/comments", "author": null, "committer": null, "parents": [{"sha": "8aa9dc6a816f53ad647995fabf183fe033cf95cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa9dc6a816f53ad647995fabf183fe033cf95cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa9dc6a816f53ad647995fabf183fe033cf95cd"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "651659eb9249734108cd597d893eb6e5b03e898d", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716f003f91219c1a6997a7fcc960c796ca73a82e/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716f003f91219c1a6997a7fcc960c796ca73a82e/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=716f003f91219c1a6997a7fcc960c796ca73a82e", "patch": "@@ -230,6 +230,64 @@ debug_rtx (x)\n   fprintf (stderr, \"\\n\");\n }\n \n+/* Count of rtx's to print with debug_rtx_list.\n+   This global exists because gdb user defined commands have no arguments.  */\n+\n+int debug_rtx_count = 0;\t/* 0 is treated as equivalent to 1 */\n+\n+/* Call this function to print list from X on.\n+\n+   N is a count of the rtx's to print. Positive values print from the specified\n+   rtx on.  Negative values print a window around the rtx.\n+   EG: -5 prints 2 rtx's on either side (in addition to the specified rtx).  */\n+\n+void\n+debug_rtx_list (x, n)\n+     rtx x;\n+     int n;\n+{\n+  int i,count;\n+  rtx insn;\n+\n+  count = n == 0 ? 1 : n < 0 ? -n : n;\n+\n+  /* If we are printing a window, back up to the start.  */\n+\n+  if (n < 0)\n+    for (i = count / 2; i > 0; i--)\n+      {\n+\tif (PREV_INSN (x) == 0)\n+\t  break;\n+\tx = PREV_INSN (x);\n+      }\n+\n+  for (i = count, insn = x; i > 0 && insn != 0; i--, insn = NEXT_INSN (insn))\n+    debug_rtx (insn);\n+}\n+\n+/* Call this function to search an rtx list to find one with insn uid UID,\n+   and then call debug_rtx_list to print it, using DEBUG_RTX_COUNT.\n+   The found insn is returned to enable further debugging analysis.  */\n+\n+rtx\n+debug_rtx_find(x, uid)\n+     rtx x;\n+     int uid;\n+{\n+  while (x != 0 && INSN_UID (x) != uid)\n+    x = NEXT_INSN (x);\n+  if (x != 0)\n+    {\n+      debug_rtx_list (x, debug_rtx_count);\n+      return x;\n+    }\n+  else\n+    {\n+      fprintf (stderr, \"insn uid %d not found\\n\", uid);\n+      return 0;\n+    }\n+}\n+\n /* External entry point for printing a chain of insns\n    starting with RTX_FIRST onto file OUTF.\n    A blank line separates insns."}]}