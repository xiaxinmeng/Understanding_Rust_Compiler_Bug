{"sha": "c013852d6138f35314ea14f5772f57a975064d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAxMzg1MmQ2MTM4ZjM1MzE0ZWExNGY1NzcyZjU3YTk3NTA2NGQ0ZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2019-11-20T20:54:31Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2019-11-20T20:54:31Z"}, "message": "drop attempt to reuse cgraph callees for -fcallgraph-info\n\nThe information in cgraph callees is released long before we get to\nthe point in which -fcallgraph-info edges are dumped, or even\nexpanded.  It doesn't make sense to retain it longer: the edges\ncreated for -fcallgraph-info are much smaller, and they don't even\ncoexist, so not even peak use grows.\n\n\nfor  gcc/ChangeLog\n\n\t* function.h (CALLEE_FROM_CGRAPH_P): Remove.\n\t* function.c (record_final_call): Record even calls that might\n\thave been in the cgraph.\n\t* toplev.c (dump_final_node_vcg): Skip iteration over cgraph\n\tcallees.\n\nFrom-SVN: r278529", "tree": {"sha": "83fb65f82b6e23672eb2a171f303d5c3f4803fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83fb65f82b6e23672eb2a171f303d5c3f4803fcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c013852d6138f35314ea14f5772f57a975064d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c013852d6138f35314ea14f5772f57a975064d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c013852d6138f35314ea14f5772f57a975064d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c013852d6138f35314ea14f5772f57a975064d4d/comments", "author": null, "committer": null, "parents": [{"sha": "aeebd94c77c45cd60d44b87a00403cbe1edd8e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeebd94c77c45cd60d44b87a00403cbe1edd8e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeebd94c77c45cd60d44b87a00403cbe1edd8e62"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "31a270ab9a018e91b9f03394db118f5926ad9038", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c013852d6138f35314ea14f5772f57a975064d4d", "patch": "@@ -1,3 +1,11 @@\n+2019-11-20  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* function.h (CALLEE_FROM_CGRAPH_P): Remove.\n+\t* function.c (record_final_call): Record even calls that might\n+\thave been in the cgraph.\n+\t* toplev.c (dump_final_node_vcg): Skip iteration over cgraph\n+\tcallees.\n+\n 2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* configure.ac: Use https for gcc.gnu.org"}, {"sha": "2534c92487ef51117172f405ad8186c826df8143", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=c013852d6138f35314ea14f5772f57a975064d4d", "patch": "@@ -6406,9 +6406,6 @@ rest_of_handle_thread_prologue_and_epilogue (void)\n void\n record_final_call (tree callee, location_t location)\n {\n-  if (!callee || CALLEE_FROM_CGRAPH_P (callee))\n-    return;\n-\n   struct callinfo_callee datum = { location, callee };\n   vec_safe_push (cfun->su->callees, datum);\n }"}, {"sha": "beb5c7d0cba16cb6bcdf3ec563558f240c95be91", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=c013852d6138f35314ea14f5772f57a975064d4d", "patch": "@@ -192,15 +192,12 @@ class GTY(()) frame_space\n   poly_int64 length;\n };\n \n-/* Describe emitted builtin calls for -fcallgraph-info.  Those that\n-   are not builtin are taken from cgraph edges.  */\n+/* Describe emitted calls for -fcallgraph-info.  */\n struct GTY(()) callinfo_callee\n {\n   location_t location;\n   tree decl;\n };\n-#define CALLEE_FROM_CGRAPH_P(T)\t\t\t\t\\\n-  (!fndecl_built_in_p (T) && !DECL_IS_BUILTIN (T))\n \n /* Describe dynamic allocation for -fcallgraph-info=da.  */\n struct GTY(()) callinfo_dalloc"}, {"sha": "059046f40f38cf5b340a7d7be02a438e0a16ac00", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c013852d6138f35314ea14f5772f57a975064d4d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c013852d6138f35314ea14f5772f57a975064d4d", "patch": "@@ -1093,14 +1093,6 @@ dump_final_node_vcg (FILE *f)\n     dump_final_callee_vcg (f, c->location, c->decl);\n   vec_free (cfun->su->callees);\n   cfun->su->callees = NULL;\n-\n-  cgraph_node *cnode = cgraph_node::get (current_function_decl);\n-  for (cgraph_edge *e = cnode->callees; e; e = e->next_callee)\n-    if (CALLEE_FROM_CGRAPH_P (e->callee->decl))\n-      dump_final_callee_vcg (f, gimple_location (e->call_stmt),\n-\t\t\t     e->callee->decl);\n-  for (cgraph_edge *e = cnode->indirect_calls; e; e = e->next_callee)\n-    dump_final_callee_vcg (f, gimple_location (e->call_stmt), NULL);\n }\n \n /* Output stack usage and callgraph info, as requested.  */"}]}