{"sha": "ad551c07abd4d9227fad658d14f1fc68340db16e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ1NTFjMDdhYmQ0ZDkyMjdmYWQ2NThkMTRmMWZjNjgzNDBkYjE2ZQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-06-10T12:22:21Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-06-10T12:22:21Z"}, "message": "re PR inline-asm/68843 (ICE with \"u\" input constraint)\n\ngcc:\n2016-06-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR inline-asm/68843\n        * reg-stack.c (check_asm_stack_operands): Explicit input arguments\n        must be grouped on top of stack.  Don't force early clobber\n        on ordinary reg outputs.\n\ntestsuite:\n2016-06-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR inline-asm/68843\n        * gcc.target/i386/pr68843-1.c: New test.\n        * gcc.target/i386/pr68843-2.c: New test.\n\nFrom-SVN: r237303", "tree": {"sha": "c24ec76f9b0472cc2b7d345004684724061c3501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c24ec76f9b0472cc2b7d345004684724061c3501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad551c07abd4d9227fad658d14f1fc68340db16e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad551c07abd4d9227fad658d14f1fc68340db16e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad551c07abd4d9227fad658d14f1fc68340db16e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad551c07abd4d9227fad658d14f1fc68340db16e/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcea0bbbacd4f2ef7007338b3ec6edf72e9ba6a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcea0bbbacd4f2ef7007338b3ec6edf72e9ba6a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcea0bbbacd4f2ef7007338b3ec6edf72e9ba6a7"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "d9852c5a25baf2c604e839f4875ce48cc410c03e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad551c07abd4d9227fad658d14f1fc68340db16e", "patch": "@@ -1,3 +1,10 @@\n+2016-06-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR inline-asm/68843\n+\t* reg-stack.c (check_asm_stack_operands): Explicit input arguments\n+\tmust be grouped on top of stack.  Don't force early clobber\n+\ton ordinary reg outputs.\n+\n 2016-06-10  Richard Biener  <rguenther@suse.de>\n \n \t* targhooks.c (default_builtin_vectorization_cost): Adjust"}, {"sha": "c931349f0f4287f6c3f3eb1a68a41dc8ffd5cbb3", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=ad551c07abd4d9227fad658d14f1fc68340db16e", "patch": "@@ -97,6 +97,9 @@\n \tAll implicitly popped input regs must be closer to the top of\n \tthe reg-stack than any input that is not implicitly popped.\n \n+\tAll explicitly referenced input operands may not \"skip\" a reg.\n+\tOtherwise we can have holes in the stack.\n+\n    3. It is possible that if an input dies in an insn, reload might\n       use the input reg for an output reload.  Consider this example:\n \n@@ -461,6 +464,7 @@ check_asm_stack_operands (rtx_insn *insn)\n \n   char reg_used_as_output[FIRST_PSEUDO_REGISTER];\n   char implicitly_dies[FIRST_PSEUDO_REGISTER];\n+  char explicitly_used[FIRST_PSEUDO_REGISTER];\n \n   rtx *clobber_reg = 0;\n   int n_inputs, n_outputs;\n@@ -568,6 +572,7 @@ check_asm_stack_operands (rtx_insn *insn)\n      popped.  */\n \n   memset (implicitly_dies, 0, sizeof (implicitly_dies));\n+  memset (explicitly_used, 0, sizeof (explicitly_used));\n   for (i = n_outputs; i < n_outputs + n_inputs; i++)\n     if (STACK_REG_P (recog_data.operand[i]))\n       {\n@@ -581,6 +586,8 @@ check_asm_stack_operands (rtx_insn *insn)\n \n \tif (j < n_clobbers || op_alt[i].matches >= 0)\n \t  implicitly_dies[REGNO (recog_data.operand[i])] = 1;\n+\telse if (reg_class_size[(int) op_alt[i].cl] == 1)\n+\t  explicitly_used[REGNO (recog_data.operand[i])] = 1;\n       }\n \n   /* Search for first non-popped reg.  */\n@@ -600,14 +607,31 @@ check_asm_stack_operands (rtx_insn *insn)\n       malformed_asm = 1;\n     }\n \n+  /* Search for first not-explicitly used reg.  */\n+  for (i = FIRST_STACK_REG; i < LAST_STACK_REG + 1; i++)\n+    if (! implicitly_dies[i] && ! explicitly_used[i])\n+      break;\n+\n+  /* If there are any other explicitly used regs, that's an error.  */\n+  for (; i < LAST_STACK_REG + 1; i++)\n+    if (explicitly_used[i])\n+      break;\n+\n+  if (i != LAST_STACK_REG + 1)\n+    {\n+      error_for_asm (insn,\n+\t\t     \"explicitly used regs must be grouped at top of stack\");\n+      malformed_asm = 1;\n+    }\n+\n   /* Enforce rule #3: If any input operand uses the \"f\" constraint, all\n      output constraints must use the \"&\" earlyclobber.\n \n      ??? Detect this more deterministically by having constrain_asm_operands\n      record any earlyclobber.  */\n \n   for (i = n_outputs; i < n_outputs + n_inputs; i++)\n-    if (op_alt[i].matches == -1)\n+    if (STACK_REG_P (recog_data.operand[i]) && op_alt[i].matches == -1)\n       {\n \tint j;\n "}, {"sha": "07c63895c6e5a2f4a8d927f816c03658b8410f1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad551c07abd4d9227fad658d14f1fc68340db16e", "patch": "@@ -1,3 +1,9 @@\n+2016-06-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR inline-asm/68843\n+\t* gcc.target/i386/pr68843-1.c: New test.\n+\t* gcc.target/i386/pr68843-2.c: New test.\n+\n 2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n "}, {"sha": "da0676aa69bf3ebc1f2b3ca901a4f57e3eacf893", "filename": "gcc/testsuite/gcc.target/i386/pr68843-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-1.c?ref=ad551c07abd4d9227fad658d14f1fc68340db16e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+double\n+test ()\n+{\n+  double x = 1.0;\n+  asm (\"fld %1\" /* { dg-error \"explicitly used regs must be grouped at top of stack\" } */\n+       : \"=&t\" (x)\n+       : \"u\" (x));\n+  return x;\n+}"}, {"sha": "652a5d3ea45acf9b2615f066d403e6c32fc2199a", "filename": "gcc/testsuite/gcc.target/i386/pr68843-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad551c07abd4d9227fad658d14f1fc68340db16e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68843-2.c?ref=ad551c07abd4d9227fad658d14f1fc68340db16e", "patch": "@@ -0,0 +1,22 @@\n+int\n+__attribute__((noinline, noclone))\n+test (double y)\n+{\n+  int a, b;\n+  asm (\"fistpl (%1)\\n\\t\"\n+       \"movl (%1), %0\"\n+       : \"=r\" (a)\n+       : \"r\" (&b), \"t\" (y)\n+       : \"st\");\n+  return a;\n+}\n+\n+int\n+main ()\n+{\n+  int t = -10;\n+\n+  if (test (t) != t)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}