{"sha": "b8a1094360a08b81f7ce63e48fdef03f12241b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhMTA5NDM2MGEwOGI4MWY3Y2U2M2U0OGZkZWYwM2YxMjI0MWI0Mw==", "commit": {"author": {"name": "Christoph von Wittich", "email": "Christoph_vW@reactos.org", "date": "2007-07-18T11:39:01Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2007-07-18T11:39:01Z"}, "message": "PR/other 30335\n\n2007-07-19  Christoph von Wittich  <Christoph_vW@reactos.org>\n\t    Danny Smith  <dannysmith@users.sourceforge.net>\n\n\tPR/other 30335\n\t* config/i386/host-mingw32.c (mingw32_gt_pch_use_address): Put\n\tfile mapping object in local namespace if Windows version later\n\tthan NT4\n\n\nCo-Authored-By: Danny Smith <dannysmith@users.sourceforge.net>\n\nFrom-SVN: r126719", "tree": {"sha": "dfb9c6c6d1a87568068d1081dcbca67cba034428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfb9c6c6d1a87568068d1081dcbca67cba034428"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8a1094360a08b81f7ce63e48fdef03f12241b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a1094360a08b81f7ce63e48fdef03f12241b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a1094360a08b81f7ce63e48fdef03f12241b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a1094360a08b81f7ce63e48fdef03f12241b43/comments", "author": {"login": "christophvw", "id": 8502795, "node_id": "MDQ6VXNlcjg1MDI3OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8502795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christophvw", "html_url": "https://github.com/christophvw", "followers_url": "https://api.github.com/users/christophvw/followers", "following_url": "https://api.github.com/users/christophvw/following{/other_user}", "gists_url": "https://api.github.com/users/christophvw/gists{/gist_id}", "starred_url": "https://api.github.com/users/christophvw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christophvw/subscriptions", "organizations_url": "https://api.github.com/users/christophvw/orgs", "repos_url": "https://api.github.com/users/christophvw/repos", "events_url": "https://api.github.com/users/christophvw/events{/privacy}", "received_events_url": "https://api.github.com/users/christophvw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8426b956021a24315114670483f2aa5d230fde5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8426b956021a24315114670483f2aa5d230fde5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8426b956021a24315114670483f2aa5d230fde5c"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "e39ccd6a5796e2967f7dda24b4c4ef21968326d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a1094360a08b81f7ce63e48fdef03f12241b43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a1094360a08b81f7ce63e48fdef03f12241b43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8a1094360a08b81f7ce63e48fdef03f12241b43", "patch": "@@ -1,3 +1,11 @@\n+2007-07-19  Christoph von Wittich  <Christoph_vW@reactos.org>\n+\t    Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR/other 30335\n+\t* config/i386/host-mingw32.c (mingw32_gt_pch_use_address): Put\n+\tfile mapping object in local namespace if Windows version later\n+\tthan NT4\n+\n 2007-07-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/arm/arm-protos.h (arm_cannot_force_const_mem): Declare."}, {"sha": "fbd866a8f8b6541023602f7f181e6eb433085a51", "filename": "gcc/config/i386/host-mingw32.c", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a1094360a08b81f7ce63e48fdef03f12241b43/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a1094360a08b81f7ce63e48fdef03f12241b43/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c?ref=b8a1094360a08b81f7ce63e48fdef03f12241b43", "patch": "@@ -1,5 +1,5 @@\n /* mingw32 host-specific hook definitions.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -87,11 +87,11 @@ mingw32_gt_pch_get_address (size_t size, int fd  ATTRIBUTE_UNUSED)\n \n   /* FIXME: We let system determine base by setting first arg to NULL.\n      Allocating at top of available address space avoids unnecessary\n-     fragmentation of \"ordinary\" (malloc's)  address space but may not be safe\n-     with delayed load of system dll's. Preferred addresses for NT system\n-     dlls is in 0x70000000 to 0x78000000 range.\n-     If we allocate at bottom we need to reserve the address as early as possible\n-     and at the same point in each invocation. */\n+     fragmentation of \"ordinary\" (malloc's)  address space but may not\n+     be safe  with delayed load of system dll's. Preferred addresses\n+     for NT system dlls is in 0x70000000 to 0x78000000 range.\n+     If we allocate at bottom we need to reserve the address as early\n+     as possible and at the same point in each invocation. */\n  \n   res = VirtualAlloc (NULL, pch_VA_max_size,\n \t\t      MEM_RESERVE | MEM_TOP_DOWN,\n@@ -115,19 +115,36 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n \t\t\t    size_t offset)\n {\n   void * mmap_addr;\n-  static HANDLE mmap_handle;\n-\n-  if (size == 0)\n-    return 0;\n+  HANDLE mmap_handle;\n+\n+  /* Apparently, MS Vista puts unnamed file mapping objects into Global\n+     namespace when running an application in a Terminal Server\n+     session.  This causes failure since, by default, applications \n+     don't get SeCreateGlobalPrivilege. We don't need global\n+     memory sharing so explicitly put object into Local namespace.  */\n+   const char object_name[] = \"Local\\\\MinGWGCCPCH\";\n+\n+  /* However, the documentation for CreateFileMapping says that on NT4\n+     and earlier, backslashes are invalid in object name.  So, we need\n+     to check if we are on Windows2000 or higher.  */\n+  OSVERSIONINFO version_info;\n   \n+  if (size == 0)\n+    return 0; \n+\n   /* Offset must be also be a multiple of allocation granularity for\n      this to work.  We can't change the offset. */ \n   if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)\n     return -1;\n \n-  mmap_handle = CreateFileMapping ((HANDLE) _get_osfhandle (fd),\n-\t\t\t\t   NULL, PAGE_WRITECOPY | SEC_COMMIT,\n-\t\t\t\t   0, 0,  NULL);\n+  /* Determine the version of Windows we are running on.  */\n+  version_info.dwOSVersionInfoSize = sizeof (version_info);\n+  GetVersionEx (&version_info);\n+\n+  mmap_handle = CreateFileMappingA ((HANDLE) _get_osfhandle (fd), NULL,\n+\t\t\t\t    PAGE_WRITECOPY | SEC_COMMIT, 0, 0,\n+\t\t\t\t    version_info.dwMajorVersion > 4\n+\t\t\t\t    ? object_name : NULL);\n   if (mmap_handle == NULL)\n     {\n       w32_error (__FUNCTION__,  __FILE__, __LINE__, \"CreateFileMapping\");"}]}