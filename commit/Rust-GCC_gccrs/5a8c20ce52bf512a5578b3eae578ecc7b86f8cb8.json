{"sha": "5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE4YzIwY2U1MmJmNTEyYTU1NzhiM2VhZTU3OGVjYzdiODZmOGNiOA==", "commit": {"author": {"name": "Ryota Kunisawa", "email": "kunisawa@access.co.jp", "date": "2005-05-12T12:22:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-05-12T12:22:08Z"}, "message": "re PR bootstrap/21230 (bootstrap failed unless bootstrap compiler is gcc.)\n\nconfig/\n        PR bootstrap/21230\n        * warnings.m4 (ACX_PROG_CC_WARNING_ALMOST_PEDANTIC): Add\n        double quotes around GCC variable.\n\nlibcpp/\n        PR bootstrap/21230\n        * configure: Regenerate.\n\nFrom-SVN: r99613", "tree": {"sha": "3c3e43c2648be827c194be643b8e2f60f775d9e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c3e43c2648be827c194be643b8e2f60f775d9e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/comments", "author": null, "committer": null, "parents": [{"sha": "47bebcf3ba6abdf1165aeafb8ded7325a3df7550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47bebcf3ba6abdf1165aeafb8ded7325a3df7550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47bebcf3ba6abdf1165aeafb8ded7325a3df7550"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "3e6feea1b0d99f5813685eb4fca52216592d7934", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "patch": "@@ -1,3 +1,9 @@\n+2005-05-12  Ryota Kunisawa  <kunisawa@access.co.jp>\n+\n+\tPR bootstrap/21230\n+\t* warnings.m4 (ACX_PROG_CC_WARNING_ALMOST_PEDANTIC): Add\n+\tdouble quotes around GCC variable.\n+\n 2005-04-29  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* acx.m4 (ACX_PROG_GNAT): Remove stray break."}, {"sha": "fdfa24b5781da114ba6dd5893ca3fabe45b2e919", "filename": "config/warnings.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "patch": "@@ -50,7 +50,7 @@ AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n AC_SUBST([WARN_PEDANTIC])dnl\n AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_$1])dnl\n WARN_PEDANTIC=\n-AS_IF([test $GCC = yes],\n+AS_IF([test \"$GCC\" = yes],\n [AC_CACHE_CHECK([whether $CC supports -pedantic $1], acx_Pedantic,\n [save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"-pedantic $1\""}, {"sha": "6397e2a3b6d66530ea95986c3ff317f2c0976d44", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "patch": "@@ -1,3 +1,8 @@\n+2005-05-12  Ryota Kunisawa  <kunisawa@access.co.jp>\n+\n+\tPR bootstrap/21230\n+\t* configure: Regenerate.\n+\n 2005-04-27  Andris Pavenis  <pavenis@latnet.lv>\n \n \t* files.c: Include io.h for DJGPP to get prototype of setmode."}, {"sha": "63647450dfc7c869a4df013a3caf8a4fbfb9d18e", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=5a8c20ce52bf512a5578b3eae578ecc7b86f8cb8", "patch": "@@ -2757,7 +2757,7 @@ fi\n CFLAGS=\"$save_CFLAGS\"\n \n WARN_PEDANTIC=\n-if test $GCC = yes; then\n+if test \"$GCC\" = yes; then\n   echo \"$as_me:$LINENO: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n echo $ECHO_N \"checking whether $CC supports -pedantic -Wno-long-long... $ECHO_C\" >&6\n if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then"}]}