{"sha": "2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkOGNmMjYxZDZhMjZmNzJlYzI2ZWYyZGM5ZGJmNDQ1NWRjNDg0Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-01T21:18:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-01T21:18:33Z"}, "message": "semantics.c (maybe_constant_value): Check instantiation_dependent_expression_p.\n\n\t* semantics.c (maybe_constant_value): Check\n\tinstantiation_dependent_expression_p.\n\t* pt.c (build_non_dependent_expr): Don't check it here.\n\nFrom-SVN: r197327", "tree": {"sha": "85d8f39bae65b51ba79e82ee7c7a7e62c941635d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85d8f39bae65b51ba79e82ee7c7a7e62c941635d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "879b0a1db9b13b1cb3632c974178d05c70ed8d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879b0a1db9b13b1cb3632c974178d05c70ed8d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/879b0a1db9b13b1cb3632c974178d05c70ed8d57"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "af7194997135993ea0ea1c10a69d1319f7ebc287", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "patch": "@@ -1,5 +1,9 @@\n 2013-04-01  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (maybe_constant_value): Check\n+\tinstantiation_dependent_expression_p.\n+\t* pt.c (build_non_dependent_expr): Don't check it here.\n+\n \tPR c++/56772\n \t* init.c (build_new): Don't try to process an array initializer\n \tat template definition time."}, {"sha": "2335dd3be96a71a46ff86a79e93b73361a9d7d46", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "patch": "@@ -20444,8 +20444,7 @@ build_non_dependent_expr (tree expr)\n #ifdef ENABLE_CHECKING\n   /* Try to get a constant value for all non-dependent expressions in\n       order to expose bugs in *_dependent_expression_p and constexpr.  */\n-  if (cxx_dialect >= cxx0x\n-      && !instantiation_dependent_expression_p (expr))\n+  if (cxx_dialect >= cxx0x)\n     maybe_constant_value (fold_non_dependent_expr_sfinae (expr, tf_none));\n #endif\n "}, {"sha": "3a558b0f67659a8e4372df0bf46d41a5511a2d95", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2ad8cf261d6a26f72ec26ef2dc9dbf4455dc484b", "patch": "@@ -8270,11 +8270,10 @@ maybe_constant_value (tree t)\n {\n   tree r;\n \n-  if (type_dependent_expression_p (t)\n+  if (instantiation_dependent_expression_p (t)\n       || type_unknown_p (t)\n       || BRACE_ENCLOSED_INITIALIZER_P (t)\n-      || !potential_constant_expression (t)\n-      || value_dependent_expression_p (t))\n+      || !potential_constant_expression (t))\n     {\n       if (TREE_OVERFLOW_P (t))\n \t{"}]}