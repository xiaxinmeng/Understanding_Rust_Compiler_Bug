{"sha": "0561bcfb825ec512375f06c5b2199d44263832cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU2MWJjZmI4MjVlYzUxMjM3NWYwNmM1YjIxOTlkNDQyNjM4MzJjYg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-05-27T10:39:40Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-05-27T10:39:40Z"}, "message": "re PR middle-end/71279 (ICE on trunk gcc with knl target)\n\ngcc/\n\n\tPR middle-end/71279\n\t* fold-const.c (fold_ternary_loc): Don't fold VEC_COND_EXPR\n\tinto comparison.\n\ngcc/testsuite/\n\n\tPR middle-end/71279\n\t* gcc.dg/pr71279.c: New test.\n\nFrom-SVN: r236810", "tree": {"sha": "5436917315ba35f5e09a65233c0b8523e5e663b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5436917315ba35f5e09a65233c0b8523e5e663b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0561bcfb825ec512375f06c5b2199d44263832cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0561bcfb825ec512375f06c5b2199d44263832cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0561bcfb825ec512375f06c5b2199d44263832cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0561bcfb825ec512375f06c5b2199d44263832cb/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2aca2504814648927ab560f75e564b69835e0514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aca2504814648927ab560f75e564b69835e0514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aca2504814648927ab560f75e564b69835e0514"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "b598a4eff746c93fe0f5f42e2fadc9ab8e6f3294", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0561bcfb825ec512375f06c5b2199d44263832cb", "patch": "@@ -1,3 +1,9 @@\n+2016-05-27  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/71279\n+\t* fold-const.c (fold_ternary_loc): Don't fold VEC_COND_EXPR\n+\tinto comparison.\n+\n 2016-05-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-modes.def (CC_ZESWP, CC_SESWP): Delete."}, {"sha": "5058746c4eb84e2fb3b9c18ccf489a2467439ee9", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0561bcfb825ec512375f06c5b2199d44263832cb", "patch": "@@ -11515,9 +11515,9 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n       /* Convert A ? 0 : 1 to !A.  This prefers the use of NOT_EXPR\n \t over COND_EXPR in cases such as floating point comparisons.  */\n       if (integer_zerop (op1)\n-\t  && (code == VEC_COND_EXPR ? integer_all_onesp (op2)\n-\t\t\t\t    : (integer_onep (op2)\n-\t\t\t\t       && !VECTOR_TYPE_P (type)))\n+\t  && code == COND_EXPR\n+\t  && integer_onep (op2)\n+\t  && !VECTOR_TYPE_P (type)\n \t  && truth_value_p (TREE_CODE (arg0)))\n \treturn pedantic_non_lvalue_loc (loc,\n \t\t\t\t    fold_convert_loc (loc, type,"}, {"sha": "a9593257eba10d8f6665661a0794af6fd4468070", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0561bcfb825ec512375f06c5b2199d44263832cb", "patch": "@@ -1,3 +1,8 @@\n+2016-05-27  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/71279\n+\t* gcc.dg/pr71279.c: New test.\n+\n 2016-05-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p9-minmax-1.c: New tests for ISA 3.0"}, {"sha": "4ecc84b642596c7cef0b7638f1b096b9e7c89781", "filename": "gcc/testsuite/gcc.dg/pr71279.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71279.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0561bcfb825ec512375f06c5b2199d44263832cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71279.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71279.c?ref=0561bcfb825ec512375f06c5b2199d44263832cb", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/71279 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-march=knl\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+extern int a, b;\n+long c[1][1][1];\n+long d[1][1];\n+\n+void fn1 ()\n+{\n+  for (int e = 0; e < b; e = e + 1)\n+    *(e + **c) = (a && *d[1]) - 1;\n+}"}]}