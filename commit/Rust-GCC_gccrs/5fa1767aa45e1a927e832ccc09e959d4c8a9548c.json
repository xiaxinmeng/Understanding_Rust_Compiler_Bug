{"sha": "5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhMTc2N2FhNDVlMWE5MjdlODMyY2NjMDllOTU5ZDRjOGE5NTQ4Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-07-24T18:38:35Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-07-24T19:13:37Z"}, "message": "[PR95720] protect gluefile and wrap_flags with -Wl too\n\nThe testglue object file gets interpreted as another input file,\nchanging the dump and aux output names in GCC unless it is protected\nby -Wl, like board file-named extra inputs.\n\nRefactor the code that modifies the board settings so that it can be\nused to modify regular variables as well, and do so.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR testsuite/95720\n\t* lib/gcc-defs.exp (gcc_adjust_linker_flags_list): Split out of...\n\t(gcc_adjust_linker_flags): ... this.  Protect gluefile and\n\twrap_flags.\n\t* gcc.misc-tests/outputs.exp: Use gcc_adjust_linker_flags_list.", "tree": {"sha": "ca3d07d8a8c62b692e82c12294fa2ff1a85db468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca3d07d8a8c62b692e82c12294fa2ff1a85db468"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa1767aa45e1a927e832ccc09e959d4c8a9548c/comments", "author": null, "committer": null, "parents": [{"sha": "aa7e7eff5ec165dc8463a0e74309801b15d1feda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa7e7eff5ec165dc8463a0e74309801b15d1feda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa7e7eff5ec165dc8463a0e74309801b15d1feda"}], "stats": {"total": 69, "additions": 40, "deletions": 29}, "files": [{"sha": "0784a8efec5bbfe371f170add1b182fefad3e889", "filename": "gcc/testsuite/gcc.misc-tests/outputs.exp", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa1767aa45e1a927e832ccc09e959d4c8a9548c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa1767aa45e1a927e832ccc09e959d4c8a9548c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp?ref=5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "patch": "@@ -56,17 +56,9 @@ set link_options \"\"\n set dest [target_info name]\n foreach i { ldflags libs ldscript } {\n     if {[board_info $dest exists $i]} {\n-\tset skip \"\"\n-\tforeach opt [split [board_info $dest $i]] {\n-\t    if { $opt == \"\" } then {\n-\t\tcontinue\n-\t    } elseif { $skip != \"\" } then {\n-\t\tset skip \"\"\n-\t    } elseif { $opt == \"-Xlinker\" } then {\n-\t\tset skip $opt\n-\t    } elseif { ![string match \"-*\" $opt] && [file isfile $opt] } {\n-\t    \tset opt \"-Wl,$opt\"\n-\t    }\n+\tset opts [board_info $dest $i]\n+\tset nopts [gcc_adjust_linker_flags_list $opts]\n+\tforeach opt $nopts {\n \t    append link_options \" additional_flags=$opt\"\n \t}\n     }"}, {"sha": "380a18b3f6aa43763bcc01348356ae377db49621", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 37, "deletions": 18, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa1767aa45e1a927e832ccc09e959d4c8a9548c/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa1767aa45e1a927e832ccc09e959d4c8a9548c/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=5fa1767aa45e1a927e832ccc09e959d4c8a9548c", "patch": "@@ -287,9 +287,32 @@ proc dg-additional-files { args } {\n \n set gcc_adjusted_linker_flags 0\n \n-# Add -Wl, before any file names in ldflags, libs, and ldscript, so\n-# that default object files or libraries do not change the names of\n-# gcc auxiliary outputs.\n+# Add -Wl, before any file names in $opts.  Return the modified list.\n+\n+proc gcc_adjust_linker_flags_list { args } {\n+    set opts [lindex $args 0]\n+    set nopts {}\n+    set skip \"\"\n+    foreach opt [split $opts \" \"] {\n+\tif { $opt == \"\" } then {\n+\t    continue\n+\t} elseif { $skip != \"\" } then {\n+\t    set skip \"\"\n+\t} elseif { $opt == \"-Xlinker\" } then {\n+\t    set skip $opt\n+\t} elseif { ![string match \"-*\" $opt] \\\n+\t\t       && [file isfile $opt] } {\n+\t    set opt \"-Wl,$opt\"\n+\t}\n+\tlappend nopts $opt\n+    }\n+    return $nopts\n+}\n+\n+# Add -Wl, before any file names in the target board's ldflags, libs,\n+# and ldscript, as well as in global testglue and wrap_flags, so that\n+# default object files or libraries do not change the names of gcc\n+# auxiliary outputs.\n \n proc gcc_adjust_linker_flags {} {\n     global gcc_adjusted_linker_flags\n@@ -303,27 +326,23 @@ proc gcc_adjust_linker_flags {} {\n \tforeach i { ldflags libs ldscript } {\n \t    if {[board_info $dest exists $i]} {\n \t\tset opts [board_info $dest $i]\n-\t\tset nopts {}\n-\t\tset skip \"\"\n-\t\tforeach opt [split $opts] {\n-\t\t    if { $opt == \"\" } then {\n-\t\t\tcontinue\n-\t\t    } elseif { $skip != \"\" } then {\n-\t\t\tset skip \"\"\n-\t\t    } elseif { $opt == \"-Xlinker\" } then {\n-\t\t\tset skip $opt\n-\t\t    } elseif { ![string match \"-*\" $opt] \\\n-\t\t\t\t&& [file isfile $opt] } {\n-\t\t\tset opt \"-Wl,$opt\"\n-\t\t    }\n-\t\t    lappend nopts $opt\n-\t\t}\n+\t\tset nopts [gcc_adjust_linker_flags_list $opts]\n \t\tif { $nopts != $opts } {\n \t\t    unset_currtarget_info $i\n \t\t    set_currtarget_info $i \"$nopts\"\n \t\t}\n \t    }\n \t}\n+\tforeach i { gluefile wrap_flags } {\n+\t    global $i\n+\t    if {[info exists $i]} {\n+\t\tset opts [set $i]\n+\t\tset nopts [gcc_adjust_linker_flags_list $opts]\n+\t\tif { $nopts != $opts } {\n+\t\t    set $i $nopts\n+\t\t}\n+\t    }\n+\t}\n     }\n }\n "}]}