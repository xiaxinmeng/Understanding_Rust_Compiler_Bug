{"sha": "3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ4OGJkNmJiMzgxZGVjOTBhMGU4ZGYyZDNjOWE2MzA1YTk4NGQ3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-03-13T20:35:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-03-13T20:35:48Z"}, "message": "vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define.\n\n\t* config/arm/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define.\n\t(STACK_CHECK_PROTECT): Likewise.\n\t* config/i386/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise\n\t(STACK_CHECK_PROTECT): Likewise.\n\t* config/rs6000/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise\n\t(STACK_CHECK_PROTECT): Likewise.\n\t* config/rs6000/vxworksae.h (STACK_CHECK_PROTECT): Likewise.\n\t* config/sparc/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise.\n\t(STACK_CHECK_PROTECT): Likewise.\nada/\n\t* system-vxworks-m68k.ads (Stack_Check_Probes): Set to True.\n\t(Stack_Check_Limits): Set to False.\n\t* system-vxworks-mips.ads (Stack_Check_Probes): Set to True.\n\t(Stack_Check_Limits): Set to False.\n\t* system-vxworks-ppc.ads (Stack_Check_Probes): Set to True.\n\t(Stack_Check_Limits): Set to False.\n\t* system-vxworks-sparcv9.ads (Stack_Check_Probes): Set to True.\n\t(Stack_Check_Limits): Set to False.\n\t* system-vxworks-x86.ads (Stack_Check_Probes): Set to True.\n\t(Stack_Check_Limits): Set to False.\n\nFrom-SVN: r234171", "tree": {"sha": "d8960ec7c74a776cbe3ac82ea30f7e1c8f7762ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8960ec7c74a776cbe3ac82ea30f7e1c8f7762ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/comments", "author": null, "committer": null, "parents": [{"sha": "be9f71435f623fcab876db2fc7bc337651b005e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9f71435f623fcab876db2fc7bc337651b005e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9f71435f623fcab876db2fc7bc337651b005e0"}], "stats": {"total": 90, "additions": 74, "deletions": 16}, "files": [{"sha": "70acdc495352b873bdfbfc815769f75286abea27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -1,3 +1,15 @@\n+2016-03-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/arm/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define.\n+\t(STACK_CHECK_PROTECT): Likewise.\n+\t* config/i386/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise\n+\t(STACK_CHECK_PROTECT): Likewise.\n+\t* config/rs6000/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise\n+\t(STACK_CHECK_PROTECT): Likewise.\n+\t* config/rs6000/vxworksae.h (STACK_CHECK_PROTECT): Likewise.\n+\t* config/sparc/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Likewise.\n+\t(STACK_CHECK_PROTECT): Likewise.\n+\n 2016-03-12  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/69307"}, {"sha": "9fa560dffa2e4a92278f878bc2a52f278aee9032", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -1,3 +1,16 @@\n+2016-03-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* system-vxworks-m68k.ads (Stack_Check_Probes): Set to True.\n+\t(Stack_Check_Limits): Set to False.\n+\t* system-vxworks-mips.ads (Stack_Check_Probes): Set to True.\n+\t(Stack_Check_Limits): Set to False.\n+\t* system-vxworks-ppc.ads (Stack_Check_Probes): Set to True.\n+\t(Stack_Check_Limits): Set to False.\n+\t* system-vxworks-sparcv9.ads (Stack_Check_Probes): Set to True.\n+\t(Stack_Check_Limits): Set to False.\n+\t* system-vxworks-x86.ads (Stack_Check_Probes): Set to True.\n+\t(Stack_Check_Limits): Set to False.\n+\n 2016-03-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (statement_node_p): New predicate.\n@@ -12,7 +25,7 @@\n \n 2016-03-02  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n-\t* system-linux-s390.adsx: Enable Stack_Check_Probes.\n+\t* system-linux-s390.ads: Enable Stack_Check_Probes.\n \t* system-linux-s390.ads: Likewise.\n \n 2016-02-29  Martin Liska  <mliska@suse.cz>"}, {"sha": "ca59e7a9d9ba3693e89458ae4f97b23118cf8db7", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (VxWorks version M68K)                          --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -145,8 +145,8 @@ private\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := False;\n    Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := True;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;"}, {"sha": "d4860f42daf4efcc7ecd6feaa3310a2b866ef6ce", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks Version Mips)                           --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -145,8 +145,8 @@ private\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := True;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;"}, {"sha": "bb27ee4b99330781cb5fcb895d6072ee4c96b471", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks 5 Version PPC)                          --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -152,8 +152,8 @@ private\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := True;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;"}, {"sha": "f3caca4fea93a2ecb281e7ad471d8345aceef760", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (VxWorks Version Sparc/64)                         --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -147,8 +147,8 @@ private\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := True;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;"}, {"sha": "a7508aadfa36bab6ada2c48d526e748832bbac27", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks 5 Version x86)                          --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -148,8 +148,8 @@ private\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := True;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n    Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;"}, {"sha": "5b97fe819b1865d688339f101c3c342f8caafa6b", "filename": "gcc/config/arm/vxworks.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Farm%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Farm%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxworks.h?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -112,3 +112,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef TARGET_DEFAULT_WORD_RELOCATIONS\n #define TARGET_DEFAULT_WORD_RELOCATIONS 1\n+\n+/* Define this to be nonzero if static stack checking is supported.  */\n+#define STACK_CHECK_STATIC_BUILTIN 1\n+\n+/* This platform supports the probing method of stack checking (RTP mode).\n+   8K is reserved in the stack to propagate exceptions in case of overflow.  */\n+#define STACK_CHECK_PROTECT 8192"}, {"sha": "d92510e19b58ce5df8956bd98dd4e0f97c690337", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -88,3 +88,10 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_PREFERRED_EH_DATA_FORMAT\n \n #define IX86_MAYBE_NO_LIBGCC_TFMODE\n+\n+/* Define this to be nonzero if static stack checking is supported.  */\n+#define STACK_CHECK_STATIC_BUILTIN 1\n+\n+/* This platform supports the probing method of stack checking (RTP mode).\n+   8K is reserved in the stack to propagate exceptions in case of overflow.  */\n+#define STACK_CHECK_PROTECT 8192"}, {"sha": "7b90fda3f8fa1e1738eb6567040b3b6827806e60", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -138,3 +138,10 @@ VXWORKS_ADDITIONAL_CPP_SPEC\n /* No _mcount profiling on VxWorks.  */\n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER(FILE,LABELNO) VXWORKS_FUNCTION_PROFILER(FILE,LABELNO)\n+\n+/* Define this to be nonzero if static stack checking is supported.  */\n+#define STACK_CHECK_STATIC_BUILTIN 1\n+\n+/* This platform supports the probing method of stack checking (RTP mode).\n+   8K is reserved in the stack to propagate exceptions in case of overflow.  */\n+#define STACK_CHECK_PROTECT 8192"}, {"sha": "97e1c70495ff97d1daf8625322b245a466dcad59", "filename": "gcc/config/rs6000/vxworksae.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Frs6000%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Frs6000%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworksae.h?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -21,3 +21,8 @@ along with GCC; see the file COPYING3.  If not see\n /* VxWorksAE for E500V2 expects a specific CPU value to designate 8548.  */\n #undef VXCPU_FOR_8548\n #define VXCPU_FOR_8548 \"PPCE500V2\"\n+\n+/* This platform supports the probing method of stack checking and\n+   requires 4K of space for executing a possible last chance handler.  */\n+#undef STACK_CHECK_PROTECT\n+#define STACK_CHECK_PROTECT 4096"}, {"sha": "81e0ffb2c760843af0e48632298c61ad1e71ff51", "filename": "gcc/config/sparc/vxworks.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3488bd6bb381dec90a0e8df2d3c9a6305a984d72/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxworks.h?ref=3488bd6bb381dec90a0e8df2d3c9a6305a984d72", "patch": "@@ -55,3 +55,10 @@ along with GCC; see the file COPYING3.  If not see\n /* We cannot use PC-relative accesses for VxWorks PIC because there is no\n    fixed gap between segments.  */\n #undef ASM_PREFERRED_EH_DATA_FORMAT\n+\n+/* Define this to be nonzero if static stack checking is supported.  */\n+#define STACK_CHECK_STATIC_BUILTIN 1\n+\n+/* This platform supports the probing method of stack checking (RTP mode).\n+   8K is reserved in the stack to propagate exceptions in case of overflow.  */\n+#define STACK_CHECK_PROTECT 8192"}]}