{"sha": "20e5a991023756b6cdae5582df1f7f704e664136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBlNWE5OTEwMjM3NTZiNmNkYWU1NTgyZGYxZjdmNzA0ZTY2NDEzNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-01T21:41:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-01T21:41:55Z"}, "message": "Update last change.\n\nFrom-SVN: r7636", "tree": {"sha": "121d28271e4b208d614904561840786f576c4258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/121d28271e4b208d614904561840786f576c4258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20e5a991023756b6cdae5582df1f7f704e664136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e5a991023756b6cdae5582df1f7f704e664136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20e5a991023756b6cdae5582df1f7f704e664136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e5a991023756b6cdae5582df1f7f704e664136/comments", "author": null, "committer": null, "parents": [{"sha": "81f415f0b0d6d6769d62f9615551c55104b774d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f415f0b0d6d6769d62f9615551c55104b774d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f415f0b0d6d6769d62f9615551c55104b774d5"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d5283c6982b9eca800d9cd23920482c10d466b8c", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20e5a991023756b6cdae5582df1f7f704e664136/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20e5a991023756b6cdae5582df1f7f704e664136/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=20e5a991023756b6cdae5582df1f7f704e664136", "patch": "@@ -5222,7 +5222,8 @@ push_init_level (implicit)\n     {\n       constructor_type = TREE_TYPE (constructor_type);\n       push_array_bounds (TREE_INT_CST_LOW (constructor_index));\n-      if (! tree_int_cst_equal (constructor_index, constructor_unfilled_index))\n+      if (! tree_int_cst_equal (constructor_index, constructor_unfilled_index)\n+\t  || constructor_range_end != 0)\n \tconstructor_incremental = 0;\n     }\n "}]}