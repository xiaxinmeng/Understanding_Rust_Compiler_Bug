{"sha": "5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFmNmZhMGIzOGM0ODE2MTc1NTFiOTZmMWM4MmJiZjI1ZjJmMzVjOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-04-08T07:15:01Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-04-08T07:15:01Z"}, "message": "re PR fortran/52751 (private module variable are not exported as local)\n\n2012-04-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52751\n        * trans-decl.c (gfc_finish_var_decl): Don't set TREE_PUBLIC\n        for PRIVATE module variables without C-binding label.\n\n        PR fortran/40973\n        * trans-decl.c (build_function_decl): Ditto for procedures.\n\n2012-04-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40973\n        PR fortran/52751\n        * gfortran.dg/public_private_module_2.f90: New.\n\nFrom-SVN: r186223", "tree": {"sha": "80a679b42b61006710ce22f8265f8c31de58b1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80a679b42b61006710ce22f8265f8c31de58b1cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeb9270a9866be202cf3d9036f4f58de6a1de36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb9270a9866be202cf3d9036f4f58de6a1de36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb9270a9866be202cf3d9036f4f58de6a1de36e"}], "stats": {"total": 93, "additions": 90, "deletions": 3}, "files": [{"sha": "02c43558aa3e1326abba4faf1c4d0e643838ff30", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "patch": "@@ -1,3 +1,12 @@\n+2012-04-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52751\n+\t* trans-decl.c (gfc_finish_var_decl): Don't set TREE_PUBLIC\n+\tfor PRIVATE module variables without C-binding label.\n+\n+\tPR fortran/40973\n+\t* trans-decl.c (build_function_decl): Ditto for procedures.\n+\n 2012-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/52893"}, {"sha": "aec96aa75a258efff33babe96532365ce8317fa1", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "patch": "@@ -539,7 +539,7 @@ gfc_finish_var_decl (tree decl, gfc_symbol * sym)\n   if (sym->attr.cray_pointee)\n     return;\n \n-  if(sym->attr.is_bind_c == 1)\n+  if(sym->attr.is_bind_c == 1 && sym->binding_label)\n     {\n       /* We need to put variables that are bind(c) into the common\n \t segment of the object file, because this is what C would do.\n@@ -565,7 +565,8 @@ gfc_finish_var_decl (tree decl, gfc_symbol * sym)\n       /* TODO: Don't set sym->module for result or dummy variables.  */\n       gcc_assert (current_function_decl == NULL_TREE || sym->result == sym);\n       /* This is the declaration of a module variable.  */\n-      TREE_PUBLIC (decl) = 1;\n+      if (sym->attr.access != ACCESS_PRIVATE)\n+\tTREE_PUBLIC (decl) = 1;\n       TREE_STATIC (decl) = 1;\n     }\n \n@@ -1842,7 +1843,8 @@ build_function_decl (gfc_symbol * sym, bool global)\n   DECL_EXTERNAL (fndecl) = 0;\n \n   if (!current_function_decl\n-      && !sym->attr.entry_master && !sym->attr.is_main_program)\n+      && !sym->attr.entry_master && !sym->attr.is_main_program\n+      && (sym->attr.access != ACCESS_PRIVATE || sym->binding_label))\n     TREE_PUBLIC (fndecl) = 1;\n \n   attributes = add_attributes_to_decl (attr, NULL_TREE);"}, {"sha": "9553599aee4d2568345b072528f18dc870669ef2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "patch": "@@ -1,3 +1,9 @@\n+2012-04-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40973\n+\tPR fortran/52751\n+\t* gfortran.dg/public_private_module_2.f90: New.\n+\n 2012-04-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C: Add labels to"}, {"sha": "aa6b9fc726896c4eeb909321f8f5ab0f4bb81d58", "filename": "gcc/testsuite/gfortran.dg/public_private_module_2.f90", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af6fa0b38c481617551b96f1c82bbf25f2f35c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_2.f90?ref=5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "patch": "@@ -0,0 +1,70 @@\n+! { dg-do compile }\n+! { dg-options \"-O2\" }\n+!\n+! PR fortran/52751 (top, \"module mod\")\n+! PR fortran/40973 (bottom, \"module m\"\n+!\n+! Ensure that (only) those module variables and procedures which are PRIVATE\n+! and have no C-binding label are optimized away.\n+!\n+      module mod\n+        integer :: aa\n+        integer, private :: iii\n+        integer, private, bind(C) :: jj             ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+        integer, private, bind(C,name='lll') :: kk  ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+        integer, private, bind(C,name='') :: mmmm\n+        integer, bind(C) :: nnn\n+        integer, bind(C,name='oo') :: pp\n+        integer, bind(C,name='') :: qq\n+      end module mod\n+\n+      ! { dg-final { scan-assembler \"__mod_MOD_aa\" } }\n+      ! { dg-final { scan-assembler-not \"iii\" } }\n+      ! { dg-final { scan-assembler \"jj\" } }\n+      ! { dg-final { scan-assembler \"lll\" } }\n+      ! { dg-final { scan-assembler-not \"kk\" } }\n+      ! { dg-final { scan-assembler-not \"mmmm\" } }\n+      ! { dg-final { scan-assembler \"nnn\" } }\n+      ! { dg-final { scan-assembler \"oo\" } }\n+      ! { dg-final { scan-assembler \"__mod_MOD_qq\" } }\n+\n+MODULE M\n+  PRIVATE :: two, three, four, six\n+  PUBLIC :: one, seven, eight, ten\n+CONTAINS\n+  SUBROUTINE one(a)\n+    integer :: a\n+    a = two()\n+  END SUBROUTINE one\n+  integer FUNCTION two()\n+     two = 42\n+  END FUNCTION two\n+  integer FUNCTION three() bind(C) ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+     three = 43\n+  END FUNCTION three\n+  integer FUNCTION four() bind(C, name='five') ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+     four = 44\n+  END FUNCTION four\n+  integer FUNCTION six() bind(C, name='')\n+     six = 46\n+  END FUNCTION six\n+  integer FUNCTION seven() bind(C)\n+     seven = 46\n+  END FUNCTION seven\n+  integer FUNCTION eight() bind(C, name='nine')\n+     eight = 48\n+  END FUNCTION eight\n+  integer FUNCTION ten() bind(C, name='')\n+     ten = 48\n+  END FUNCTION ten\n+END MODULE\n+\n+! { dg-final { scan-assembler \"__m_MOD_one\" } }\n+! { dg-final { scan-assembler-not \"two\" } }\n+! { dg-final { scan-assembler \"three\" } }\n+! { dg-final { scan-assembler-not \"four\" } }\n+! { dg-final { scan-assembler \"five\" } }\n+! { dg-final { scan-assembler-not \"six\" } }\n+! { dg-final { scan-assembler \"seven\" } }\n+! { dg-final { scan-assembler \"nine\" } }\n+! { dg-final { scan-assembler \"__m_MOD_ten\" } }"}]}