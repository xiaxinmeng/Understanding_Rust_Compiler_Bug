{"sha": "fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRkYmMxOTMyNWEzZTkzYTVmNzI2NjhiYWE0ZTRiZGVlYTllYmM3Zg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-29T16:25:46Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-29T16:25:46Z"}, "message": "[libbacktrace] Add test-cases exercising build-id and dwz\n\nAdd test-cases b2test_buildid and b3test_dwz_buildid.\n\nThe last one triggers the segfault fixed by \"[backtrace] Avoid segfault\"\n( r268275 ).\n\n2019-01-29  Tom de Vries  <tdevries@suse.de>\n\n\t* install-debuginfo-for-buildid.sh.in: New script.\n\t* Makefile.am (check_PROGRAMS): Add b2test and b3test.\n\t(TESTS): Add b2test_buildid and b3test_dwz_buildid.\n\t* Makefile.in: Regenerate.\n\t* configure.ac (HAVE_ELF): Set with AM_CONDITIONAL.\n\t(READELF): Set with AC_CHECK_PROG.\n\t(install-debuginfo-for-buildid.sh): Generate with AC_CONFIG_FILES.\n\t* configure: Regenerate.\n\t* elf.c (SYSTEM_BUILD_ID_DIR): Factor out of ...\n\t(elf_open_debugfile_by_buildid): ... here.\n\nFrom-SVN: r268369", "tree": {"sha": "080a4c5201ecf818750ce6e5e53ed87a00a4bc75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/080a4c5201ecf818750ce6e5e53ed87a00a4bc75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e574f68fa82e7c5f879fd468291ec8b5ebecc83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e574f68fa82e7c5f879fd468291ec8b5ebecc83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e574f68fa82e7c5f879fd468291ec8b5ebecc83"}], "stats": {"total": 388, "additions": 345, "deletions": 43}, "files": [{"sha": "811489e31b9908331dbc33622f18e234d05ce436", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -1,3 +1,16 @@\n+2019-01-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* install-debuginfo-for-buildid.sh.in: New script.\n+\t* Makefile.am (check_PROGRAMS): Add b2test and b3test.\n+\t(TESTS): Add b2test_buildid and b3test_dwz_buildid.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac (HAVE_ELF): Set with AM_CONDITIONAL.\n+\t(READELF): Set with AC_CHECK_PROG.\n+\t(install-debuginfo-for-buildid.sh): Generate with AC_CONFIG_FILES.\n+\t* configure: Regenerate.\n+\t* elf.c (SYSTEM_BUILD_ID_DIR): Factor out of ...\n+\t(elf_open_debugfile_by_buildid): ... here.\n+\n 2019-01-29  Tom de Vries  <tdevries@suse.de>\n \n \t* Makefile.am: Replace check_PROGRAMS with BUILDTESTS, except for"}, {"sha": "71a2ed478cca2d5e420bfe78b3a0f8bbbb37116c", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -108,6 +108,28 @@ libbacktrace_noformat_la_LIBADD = $(BACKTRACE_FILE) $(VIEW_FILE) $(ALLOC_FILE)\n \n libbacktrace_noformat_la_DEPENDENCIES = $(libbacktrace_noformat_la_LIBADD)\n \n+if HAVE_ELF\n+if HAVE_OBJCOPY_DEBUGLINK\n+\n+TEST_BUILD_ID_DIR=$(abs_builddir)/usr/lib/debug/.build-id/\n+\n+check_LTLIBRARIES += libbacktrace_elf_for_test.la\n+\n+libbacktrace_elf_for_test_la_SOURCES = $(libbacktrace_la_SOURCES)\n+libbacktrace_elf_for_test_la_LIBADD = $(BACKTRACE_FILE) elf_for_test.lo \\\n+\t$(VIEW_FILE) $(ALLOC_FILE)\n+\n+elf_for_test.c: elf.c\n+\tSEARCH='^#define SYSTEM_BUILD_ID_DIR.*$$'; \\\n+\tREPLACE=\"#define SYSTEM_BUILD_ID_DIR \\\"$(TEST_BUILD_ID_DIR)\\\"\"; \\\n+\t$(SED) \"s%$$SEARCH%$$REPLACE%\" \\\n+\t\t$< \\\n+\t\t> $@.tmp\n+\tmv $@.tmp $@\n+\n+endif HAVE_OBJCOPY_DEBUGLINK\n+endif HAVE_ELF\n+\n xcoff_%.c: xcoff.c\n \tSEARCH='#error \"Unknown BACKTRACE_XCOFF_SIZE\"'; \\\n \tREPLACE='#undef BACKTRACE_XCOFF_SIZE\\\n@@ -172,6 +194,28 @@ allocfail.sh: allocfail\n \n TESTS += allocfail.sh\n \n+if HAVE_ELF\n+if HAVE_OBJCOPY_DEBUGLINK\n+\n+b2test_SOURCES = $(btest_SOURCES)\n+b2test_CFLAGS = $(btest_CFLAGS)\n+b2test_LDFLAGS = -Wl,--build-id\n+b2test_LDADD = libbacktrace_elf_for_test.la\n+\n+check_PROGRAMS += b2test\n+TESTS += b2test_buildid\n+\n+b3test_SOURCES = $(btest_SOURCES)\n+b3test_CFLAGS = $(btest_CFLAGS)\n+b3test_LDFLAGS = -Wl,--build-id\n+b3test_LDADD = libbacktrace_elf_for_test.la\n+\n+check_PROGRAMS += b3test\n+TESTS += b3test_dwz_buildid\n+\n+endif HAVE_OBJCOPY_DEBUGLINK\n+endif HAVE_ELF\n+\n btest_SOURCES = btest.c testlib.c\n btest_CFLAGS = $(AM_CFLAGS) -g -O\n btest_LDADD = libbacktrace.la\n@@ -275,6 +319,12 @@ TESTS += btest_gnudebuglink\n \n endif HAVE_OBJCOPY_DEBUGLINK\n \n+%_buildid: %\n+\t./install-debuginfo-for-buildid.sh \\\n+\t  \"$(TEST_BUILD_ID_DIR)\" \\\n+\t  $<\n+\t$(OBJCOPY) --strip-debug $< $@\n+\n if HAVE_COMPRESSED_DEBUG\n \n ctestg_SOURCES = btest.c testlib.c"}, {"sha": "a2b595e9bb0550b1ca981291bb6a071c63ae086b", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 153, "deletions": 40, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -120,22 +120,27 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_5)\n-TESTS = $(am__append_3) $(am__append_4) $(am__append_5) \\\n-\t$(am__append_9) $(am__EXEEXT_5)\n-@NATIVE_TRUE@am__append_1 = test_elf test_xcoff_32 test_xcoff_64 \\\n+check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_6)\n+TESTS = $(am__append_4) $(am__append_6) $(am__append_7) \\\n+\t$(am__append_8) $(am__append_12) $(am__EXEEXT_6)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_1 = libbacktrace_elf_for_test.la\n+@NATIVE_TRUE@am__append_2 = test_elf test_xcoff_32 test_xcoff_64 \\\n @NATIVE_TRUE@\ttest_pecoff test_unknown unittest unittest_alloc \\\n @NATIVE_TRUE@\tbtest btest_alloc stest stest_alloc ztest \\\n @NATIVE_TRUE@\tztest_alloc edtest edtest_alloc\n-@NATIVE_TRUE@am__append_2 = allocfail\n-@NATIVE_TRUE@am__append_3 = allocfail.sh\n-@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_4 = btest_dwz\n-@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_5 = btest_dwz_gnudebuglink\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_6 = -lz\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_7 = -lz\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_8 = ttest ttest_alloc\n-@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_9 = btest_gnudebuglink\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_10 = ctestg ctesta \\\n+@NATIVE_TRUE@am__append_3 = allocfail\n+@NATIVE_TRUE@am__append_4 = allocfail.sh\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_5 = b2test \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tb3test\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = b2test_buildid \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tb3test_dwz_buildid\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_7 = btest_dwz\n+@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = btest_dwz_gnudebuglink\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_9 = -lz\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_10 = -lz\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_11 = ttest ttest_alloc\n+@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_12 = btest_gnudebuglink\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_13 = ctestg ctesta \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc\n subdir = .\n@@ -159,7 +164,8 @@ am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno config.status.lineno\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = config.h\n-CONFIG_CLEAN_FILES = backtrace-supported.h\n+CONFIG_CLEAN_FILES = backtrace-supported.h \\\n+\tinstall-debuginfo-for-buildid.sh\n CONFIG_CLEAN_VPATH_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n@@ -175,6 +181,14 @@ am__objects_1 = atomic.lo dwarf.lo fileline.lo posix.lo print.lo \\\n @NATIVE_TRUE@am_libbacktrace_alloc_la_OBJECTS = $(am__objects_1)\n libbacktrace_alloc_la_OBJECTS = $(am_libbacktrace_alloc_la_OBJECTS)\n @NATIVE_TRUE@am_libbacktrace_alloc_la_rpath =\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@libbacktrace_elf_for_test_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\telf_for_test.lo \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(am__DEPENDENCIES_1) \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(am__DEPENDENCIES_1)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_libbacktrace_elf_for_test_la_OBJECTS = $(am__objects_1)\n+libbacktrace_elf_for_test_la_OBJECTS =  \\\n+\t$(am_libbacktrace_elf_for_test_la_OBJECTS)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_libbacktrace_elf_for_test_la_rpath =\n @NATIVE_TRUE@am_libbacktrace_instrumented_alloc_la_OBJECTS =  \\\n @NATIVE_TRUE@\t$(am__objects_1)\n libbacktrace_instrumented_alloc_la_OBJECTS =  \\\n@@ -185,37 +199,55 @@ libbacktrace_noformat_la_OBJECTS =  \\\n \t$(am_libbacktrace_noformat_la_OBJECTS)\n @NATIVE_TRUE@am_libbacktrace_noformat_la_rpath =\n @NATIVE_TRUE@am__EXEEXT_1 = allocfail$(EXEEXT)\n-@NATIVE_TRUE@am__EXEEXT_2 = test_elf$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__EXEEXT_2 = b2test$(EXEEXT) \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tb3test$(EXEEXT)\n+@NATIVE_TRUE@am__EXEEXT_3 = test_elf$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_xcoff_64$(EXEEXT) test_pecoff$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_unknown$(EXEEXT) unittest$(EXEEXT) \\\n @NATIVE_TRUE@\tunittest_alloc$(EXEEXT) btest$(EXEEXT) \\\n @NATIVE_TRUE@\tbtest_alloc$(EXEEXT) stest$(EXEEXT) \\\n @NATIVE_TRUE@\tstest_alloc$(EXEEXT) ztest$(EXEEXT) \\\n @NATIVE_TRUE@\tztest_alloc$(EXEEXT) edtest$(EXEEXT) \\\n @NATIVE_TRUE@\tedtest_alloc$(EXEEXT)\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_3 = ttest$(EXEEXT) \\\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_4 = ttest$(EXEEXT) \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc$(EXEEXT)\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_4 =  \\\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_5 =  \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc$(EXEEXT)\n-am__EXEEXT_5 = $(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4)\n+am__EXEEXT_6 = $(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5)\n @NATIVE_TRUE@am_allocfail_OBJECTS = allocfail.$(OBJEXT) \\\n @NATIVE_TRUE@\ttestlib.$(OBJEXT)\n allocfail_OBJECTS = $(am_allocfail_OBJECTS)\n @NATIVE_TRUE@allocfail_DEPENDENCIES =  \\\n @NATIVE_TRUE@\tlibbacktrace_instrumented_alloc.la\n+@NATIVE_TRUE@am__objects_2 = b2test-btest.$(OBJEXT) \\\n+@NATIVE_TRUE@\tb2test-testlib.$(OBJEXT)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b2test_OBJECTS = $(am__objects_2)\n+b2test_OBJECTS = $(am_b2test_OBJECTS)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_DEPENDENCIES = libbacktrace_elf_for_test.la\n+b2test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(b2test_CFLAGS) $(CFLAGS) \\\n+\t$(b2test_LDFLAGS) $(LDFLAGS) -o $@\n+@NATIVE_TRUE@am__objects_3 = b3test-btest.$(OBJEXT) \\\n+@NATIVE_TRUE@\tb3test-testlib.$(OBJEXT)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b3test_OBJECTS = $(am__objects_3)\n+b3test_OBJECTS = $(am_b3test_OBJECTS)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_DEPENDENCIES = libbacktrace_elf_for_test.la\n+b3test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(b3test_CFLAGS) $(CFLAGS) \\\n+\t$(b3test_LDFLAGS) $(LDFLAGS) -o $@\n @NATIVE_TRUE@am_btest_OBJECTS = btest-btest.$(OBJEXT) \\\n @NATIVE_TRUE@\tbtest-testlib.$(OBJEXT)\n btest_OBJECTS = $(am_btest_OBJECTS)\n @NATIVE_TRUE@btest_DEPENDENCIES = libbacktrace.la\n btest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(btest_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n-@NATIVE_TRUE@am__objects_2 = btest_alloc-btest.$(OBJEXT) \\\n+@NATIVE_TRUE@am__objects_4 = btest_alloc-btest.$(OBJEXT) \\\n @NATIVE_TRUE@\tbtest_alloc-testlib.$(OBJEXT)\n-@NATIVE_TRUE@am_btest_alloc_OBJECTS = $(am__objects_2)\n+@NATIVE_TRUE@am_btest_alloc_OBJECTS = $(am__objects_4)\n btest_alloc_OBJECTS = $(am_btest_alloc_OBJECTS)\n @NATIVE_TRUE@btest_alloc_DEPENDENCIES = libbacktrace_alloc.la\n btest_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n@@ -229,10 +261,10 @@ ctesta_OBJECTS = $(am_ctesta_OBJECTS)\n ctesta_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ctesta_CFLAGS) $(CFLAGS) \\\n \t$(ctesta_LDFLAGS) $(LDFLAGS) -o $@\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__objects_3 = ctesta_alloc-btest.$(OBJEXT) \\\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__objects_5 = ctesta_alloc-btest.$(OBJEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc-testlib.$(OBJEXT)\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am_ctesta_alloc_OBJECTS =  \\\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\t$(am__objects_3)\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\t$(am__objects_5)\n ctesta_alloc_OBJECTS = $(am_ctesta_alloc_OBJECTS)\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@ctesta_alloc_DEPENDENCIES = libbacktrace_alloc.la\n ctesta_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n@@ -246,10 +278,10 @@ ctestg_OBJECTS = $(am_ctestg_OBJECTS)\n ctestg_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ctestg_CFLAGS) $(CFLAGS) \\\n \t$(ctestg_LDFLAGS) $(LDFLAGS) -o $@\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__objects_4 = ctestg_alloc-btest.$(OBJEXT) \\\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__objects_6 = ctestg_alloc-btest.$(OBJEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc-testlib.$(OBJEXT)\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am_ctestg_alloc_OBJECTS =  \\\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\t$(am__objects_4)\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\t$(am__objects_6)\n ctestg_alloc_OBJECTS = $(am_ctestg_alloc_OBJECTS)\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@ctestg_alloc_DEPENDENCIES = libbacktrace_alloc.la\n ctestg_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n@@ -259,16 +291,16 @@ ctestg_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n @NATIVE_TRUE@\tedtest2_build.$(OBJEXT) testlib.$(OBJEXT)\n edtest_OBJECTS = $(am_edtest_OBJECTS)\n @NATIVE_TRUE@edtest_DEPENDENCIES = libbacktrace.la\n-@NATIVE_TRUE@am__objects_5 = edtest.$(OBJEXT) edtest2_build.$(OBJEXT) \\\n+@NATIVE_TRUE@am__objects_7 = edtest.$(OBJEXT) edtest2_build.$(OBJEXT) \\\n @NATIVE_TRUE@\ttestlib.$(OBJEXT)\n-@NATIVE_TRUE@am_edtest_alloc_OBJECTS = $(am__objects_5)\n+@NATIVE_TRUE@am_edtest_alloc_OBJECTS = $(am__objects_7)\n edtest_alloc_OBJECTS = $(am_edtest_alloc_OBJECTS)\n @NATIVE_TRUE@edtest_alloc_DEPENDENCIES = libbacktrace_alloc.la\n @NATIVE_TRUE@am_stest_OBJECTS = stest.$(OBJEXT)\n stest_OBJECTS = $(am_stest_OBJECTS)\n @NATIVE_TRUE@stest_DEPENDENCIES = libbacktrace.la\n-@NATIVE_TRUE@am__objects_6 = stest.$(OBJEXT)\n-@NATIVE_TRUE@am_stest_alloc_OBJECTS = $(am__objects_6)\n+@NATIVE_TRUE@am__objects_8 = stest.$(OBJEXT)\n+@NATIVE_TRUE@am_stest_alloc_OBJECTS = $(am__objects_8)\n stest_alloc_OBJECTS = $(am_stest_alloc_OBJECTS)\n @NATIVE_TRUE@stest_alloc_DEPENDENCIES = libbacktrace_alloc.la\n @NATIVE_TRUE@am_test_elf_OBJECTS = test_format.$(OBJEXT) \\\n@@ -303,11 +335,11 @@ ttest_OBJECTS = $(am_ttest_OBJECTS)\n ttest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ttest_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__objects_7 =  \\\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__objects_9 =  \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc-ttest.$(OBJEXT) \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc-testlib.$(OBJEXT)\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am_ttest_alloc_OBJECTS =  \\\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\t$(am__objects_7)\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\t$(am__objects_9)\n ttest_alloc_OBJECTS = $(am_ttest_alloc_OBJECTS)\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@ttest_alloc_DEPENDENCIES =  \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tlibbacktrace_alloc.la\n@@ -318,8 +350,8 @@ ttest_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n @NATIVE_TRUE@\ttestlib.$(OBJEXT)\n unittest_OBJECTS = $(am_unittest_OBJECTS)\n @NATIVE_TRUE@unittest_DEPENDENCIES = libbacktrace.la\n-@NATIVE_TRUE@am__objects_8 = unittest.$(OBJEXT) testlib.$(OBJEXT)\n-@NATIVE_TRUE@am_unittest_alloc_OBJECTS = $(am__objects_8)\n+@NATIVE_TRUE@am__objects_10 = unittest.$(OBJEXT) testlib.$(OBJEXT)\n+@NATIVE_TRUE@am_unittest_alloc_OBJECTS = $(am__objects_10)\n unittest_alloc_OBJECTS = $(am_unittest_alloc_OBJECTS)\n @NATIVE_TRUE@unittest_alloc_DEPENDENCIES = libbacktrace_alloc.la\n @NATIVE_TRUE@am_ztest_OBJECTS = ztest-ztest.$(OBJEXT) \\\n@@ -330,9 +362,9 @@ ztest_OBJECTS = $(am_ztest_OBJECTS)\n ztest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ztest_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n-@NATIVE_TRUE@am__objects_9 = ztest_alloc-ztest.$(OBJEXT) \\\n+@NATIVE_TRUE@am__objects_11 = ztest_alloc-ztest.$(OBJEXT) \\\n @NATIVE_TRUE@\tztest_alloc-testlib.$(OBJEXT)\n-@NATIVE_TRUE@am_ztest_alloc_OBJECTS = $(am__objects_9)\n+@NATIVE_TRUE@am_ztest_alloc_OBJECTS = $(am__objects_11)\n ztest_alloc_OBJECTS = $(am_ztest_alloc_OBJECTS)\n @NATIVE_TRUE@ztest_alloc_DEPENDENCIES = libbacktrace_alloc.la \\\n @NATIVE_TRUE@\t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n@@ -374,9 +406,11 @@ am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n am__v_CCLD_1 = \n SOURCES = $(libbacktrace_la_SOURCES) $(EXTRA_libbacktrace_la_SOURCES) \\\n \t$(libbacktrace_alloc_la_SOURCES) \\\n+\t$(libbacktrace_elf_for_test_la_SOURCES) \\\n \t$(libbacktrace_instrumented_alloc_la_SOURCES) \\\n \t$(libbacktrace_noformat_la_SOURCES) $(allocfail_SOURCES) \\\n-\t$(btest_SOURCES) $(btest_alloc_SOURCES) $(ctesta_SOURCES) \\\n+\t$(b2test_SOURCES) $(b3test_SOURCES) $(btest_SOURCES) \\\n+\t$(btest_alloc_SOURCES) $(ctesta_SOURCES) \\\n \t$(ctesta_alloc_SOURCES) $(ctestg_SOURCES) \\\n \t$(ctestg_alloc_SOURCES) $(edtest_SOURCES) \\\n \t$(edtest_alloc_SOURCES) $(stest_SOURCES) \\\n@@ -683,6 +717,7 @@ PATH_SEPARATOR = @PATH_SEPARATOR@\n PIC_FLAG = @PIC_FLAG@\n PTHREAD_CFLAGS = @PTHREAD_CFLAGS@\n RANLIB = @RANLIB@\n+READELF = @READELF@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n@@ -796,16 +831,21 @@ libbacktrace_la_LIBADD = \\\n libbacktrace_la_DEPENDENCIES = $(libbacktrace_la_LIBADD)\n \n # Add test to this variable, if you want it to be build and run.\n-BUILDTESTS = $(am__append_1) $(am__append_8) $(am__append_10)\n+BUILDTESTS = $(am__append_2) $(am__append_11) $(am__append_13)\n @NATIVE_TRUE@check_LTLIBRARIES = libbacktrace_alloc.la \\\n-@NATIVE_TRUE@\tlibbacktrace_noformat.la \\\n+@NATIVE_TRUE@\tlibbacktrace_noformat.la $(am__append_1) \\\n @NATIVE_TRUE@\tlibbacktrace_instrumented_alloc.la\n @NATIVE_TRUE@libbacktrace_alloc_la_SOURCES = $(libbacktrace_la_SOURCES)\n @NATIVE_TRUE@libbacktrace_alloc_la_LIBADD = $(BACKTRACE_FILE) $(FORMAT_FILE) read.lo alloc.lo\n @NATIVE_TRUE@libbacktrace_alloc_la_DEPENDENCIES = $(libbacktrace_alloc_la_LIBADD)\n @NATIVE_TRUE@libbacktrace_noformat_la_SOURCES = $(libbacktrace_la_SOURCES)\n @NATIVE_TRUE@libbacktrace_noformat_la_LIBADD = $(BACKTRACE_FILE) $(VIEW_FILE) $(ALLOC_FILE)\n @NATIVE_TRUE@libbacktrace_noformat_la_DEPENDENCIES = $(libbacktrace_noformat_la_LIBADD)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@TEST_BUILD_ID_DIR = $(abs_builddir)/usr/lib/debug/.build-id/\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@libbacktrace_elf_for_test_la_SOURCES = $(libbacktrace_la_SOURCES)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@libbacktrace_elf_for_test_la_LIBADD = $(BACKTRACE_FILE) elf_for_test.lo \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(VIEW_FILE) $(ALLOC_FILE)\n+\n @NATIVE_TRUE@test_elf_SOURCES = test_format.c testlib.c\n @NATIVE_TRUE@test_elf_LDADD = libbacktrace_noformat.la elf.lo\n @NATIVE_TRUE@test_xcoff_32_SOURCES = test_format.c testlib.c\n@@ -829,6 +869,14 @@ BUILDTESTS = $(am__append_1) $(am__append_8) $(am__append_10)\n \n @NATIVE_TRUE@allocfail_SOURCES = allocfail.c testlib.c\n @NATIVE_TRUE@allocfail_LDADD = libbacktrace_instrumented_alloc.la\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_SOURCES = $(btest_SOURCES)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_CFLAGS = $(btest_CFLAGS)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDFLAGS = -Wl,--build-id\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDADD = libbacktrace_elf_for_test.la\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_SOURCES = $(btest_SOURCES)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_CFLAGS = $(btest_CFLAGS)\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDFLAGS = -Wl,--build-id\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDADD = libbacktrace_elf_for_test.la\n @NATIVE_TRUE@btest_SOURCES = btest.c testlib.c\n @NATIVE_TRUE@btest_CFLAGS = $(AM_CFLAGS) -g -O\n @NATIVE_TRUE@btest_LDADD = libbacktrace.la\n@@ -841,10 +889,10 @@ BUILDTESTS = $(am__append_1) $(am__append_8) $(am__append_10)\n @NATIVE_TRUE@stest_alloc_LDADD = libbacktrace_alloc.la\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n-@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_6) \\\n-@NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n-@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la $(am__append_7) \\\n+@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_9) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n+@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la \\\n+@NATIVE_TRUE@\t$(am__append_10) $(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@ztest_alloc_SOURCES = $(ztest_SOURCES)\n @NATIVE_TRUE@ztest_alloc_CFLAGS = $(ztest_CFLAGS)\n @NATIVE_TRUE@edtest_SOURCES = edtest.c edtest2_build.c testlib.c\n@@ -948,6 +996,8 @@ distclean-hdr:\n \t-rm -f config.h stamp-h1\n backtrace-supported.h: $(top_builddir)/config.status $(srcdir)/backtrace-supported.h.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n+install-debuginfo-for-buildid.sh: $(top_builddir)/config.status $(srcdir)/install-debuginfo-for-buildid.sh.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n \n clean-checkLTLIBRARIES:\n \t-test -z \"$(check_LTLIBRARIES)\" || rm -f $(check_LTLIBRARIES)\n@@ -977,6 +1027,9 @@ libbacktrace.la: $(libbacktrace_la_OBJECTS) $(libbacktrace_la_DEPENDENCIES) $(EX\n libbacktrace_alloc.la: $(libbacktrace_alloc_la_OBJECTS) $(libbacktrace_alloc_la_DEPENDENCIES) $(EXTRA_libbacktrace_alloc_la_DEPENDENCIES) \n \t$(AM_V_CCLD)$(LINK) $(am_libbacktrace_alloc_la_rpath) $(libbacktrace_alloc_la_OBJECTS) $(libbacktrace_alloc_la_LIBADD) $(LIBS)\n \n+libbacktrace_elf_for_test.la: $(libbacktrace_elf_for_test_la_OBJECTS) $(libbacktrace_elf_for_test_la_DEPENDENCIES) $(EXTRA_libbacktrace_elf_for_test_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libbacktrace_elf_for_test_la_rpath) $(libbacktrace_elf_for_test_la_OBJECTS) $(libbacktrace_elf_for_test_la_LIBADD) $(LIBS)\n+\n libbacktrace_instrumented_alloc.la: $(libbacktrace_instrumented_alloc_la_OBJECTS) $(libbacktrace_instrumented_alloc_la_DEPENDENCIES) $(EXTRA_libbacktrace_instrumented_alloc_la_DEPENDENCIES) \n \t$(AM_V_CCLD)$(LINK) $(am_libbacktrace_instrumented_alloc_la_rpath) $(libbacktrace_instrumented_alloc_la_OBJECTS) $(libbacktrace_instrumented_alloc_la_LIBADD) $(LIBS)\n \n@@ -996,6 +1049,14 @@ allocfail$(EXEEXT): $(allocfail_OBJECTS) $(allocfail_DEPENDENCIES) $(EXTRA_alloc\n \t@rm -f allocfail$(EXEEXT)\n \t$(AM_V_CCLD)$(LINK) $(allocfail_OBJECTS) $(allocfail_LDADD) $(LIBS)\n \n+b2test$(EXEEXT): $(b2test_OBJECTS) $(b2test_DEPENDENCIES) $(EXTRA_b2test_DEPENDENCIES) \n+\t@rm -f b2test$(EXEEXT)\n+\t$(AM_V_CCLD)$(b2test_LINK) $(b2test_OBJECTS) $(b2test_LDADD) $(LIBS)\n+\n+b3test$(EXEEXT): $(b3test_OBJECTS) $(b3test_DEPENDENCIES) $(EXTRA_b3test_DEPENDENCIES) \n+\t@rm -f b3test$(EXEEXT)\n+\t$(AM_V_CCLD)$(b3test_LINK) $(b3test_OBJECTS) $(b3test_LDADD) $(LIBS)\n+\n btest$(EXEEXT): $(btest_OBJECTS) $(btest_DEPENDENCIES) $(EXTRA_btest_DEPENDENCIES) \n \t@rm -f btest$(EXEEXT)\n \t$(AM_V_CCLD)$(btest_LINK) $(btest_OBJECTS) $(btest_LDADD) $(LIBS)\n@@ -1095,6 +1156,30 @@ distclean-compile:\n .c.lo:\n \t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n \n+b2test-btest.o: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b2test_CFLAGS) $(CFLAGS) -c -o b2test-btest.o `test -f 'btest.c' || echo '$(srcdir)/'`btest.c\n+\n+b2test-btest.obj: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b2test_CFLAGS) $(CFLAGS) -c -o b2test-btest.obj `if test -f 'btest.c'; then $(CYGPATH_W) 'btest.c'; else $(CYGPATH_W) '$(srcdir)/btest.c'; fi`\n+\n+b2test-testlib.o: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b2test_CFLAGS) $(CFLAGS) -c -o b2test-testlib.o `test -f 'testlib.c' || echo '$(srcdir)/'`testlib.c\n+\n+b2test-testlib.obj: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b2test_CFLAGS) $(CFLAGS) -c -o b2test-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`\n+\n+b3test-btest.o: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b3test_CFLAGS) $(CFLAGS) -c -o b3test-btest.o `test -f 'btest.c' || echo '$(srcdir)/'`btest.c\n+\n+b3test-btest.obj: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b3test_CFLAGS) $(CFLAGS) -c -o b3test-btest.obj `if test -f 'btest.c'; then $(CYGPATH_W) 'btest.c'; else $(CYGPATH_W) '$(srcdir)/btest.c'; fi`\n+\n+b3test-testlib.o: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b3test_CFLAGS) $(CFLAGS) -c -o b3test-testlib.o `test -f 'testlib.c' || echo '$(srcdir)/'`testlib.c\n+\n+b3test-testlib.obj: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b3test_CFLAGS) $(CFLAGS) -c -o b3test-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`\n+\n btest-btest.o: btest.c\n \t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_CFLAGS) $(CFLAGS) -c -o btest-btest.o `test -f 'btest.c' || echo '$(srcdir)/'`btest.c\n \n@@ -1431,6 +1516,20 @@ allocfail.sh.log: allocfail.sh\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+b2test_buildid.log: b2test_buildid\n+\t@p='b2test_buildid'; \\\n+\tb='b2test_buildid'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+b3test_dwz_buildid.log: b3test_dwz_buildid\n+\t@p='b3test_dwz_buildid'; \\\n+\tb='b3test_dwz_buildid'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n btest_dwz.log: btest_dwz\n \t@p='btest_dwz'; \\\n \tb='btest_dwz'; \\\n@@ -1748,6 +1847,14 @@ uninstall-am:\n .PRECIOUS: Makefile\n \n \n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@elf_for_test.c: elf.c\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tSEARCH='^#define SYSTEM_BUILD_ID_DIR.*$$'; \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tREPLACE=\"#define SYSTEM_BUILD_ID_DIR \\\"$(TEST_BUILD_ID_DIR)\\\"\"; \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(SED) \"s%$$SEARCH%$$REPLACE%\" \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t\t$< \\\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t\t> $@.tmp\n+@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tmv $@.tmp $@\n+\n @NATIVE_TRUE@xcoff_%.c: xcoff.c\n @NATIVE_TRUE@\tSEARCH='#error \"Unknown BACKTRACE_XCOFF_SIZE\"'; \\\n @NATIVE_TRUE@\tREPLACE='#undef BACKTRACE_XCOFF_SIZE\\\n@@ -1778,6 +1885,12 @@ uninstall-am:\n @HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@%_gnudebuglink: %\n @HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(OBJCOPY) --only-keep-debug $< $@.debug\n @HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\t$(OBJCOPY) --strip-debug --add-gnu-debuglink=$@.debug $< $@\n+\n+@NATIVE_TRUE@%_buildid: %\n+@NATIVE_TRUE@\t./install-debuginfo-for-buildid.sh \\\n+@NATIVE_TRUE@\t  \"$(TEST_BUILD_ID_DIR)\" \\\n+@NATIVE_TRUE@\t  $<\n+@NATIVE_TRUE@\t$(OBJCOPY) --strip-debug $< $@\n alloc.lo: config.h backtrace.h internal.h\n backtrace.lo: config.h backtrace.h internal.h\n btest.lo: (INCDIR)/filenames.h backtrace.h backtrace-supported.h"}, {"sha": "51d7cb4582a84ec061bc2bd3d54e6b5b9148a9a6", "filename": "libbacktrace/configure", "status": "modified", "additions": 58, "deletions": 2, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -637,6 +637,7 @@ NATIVE_FALSE\n NATIVE_TRUE\n HAVE_OBJCOPY_DEBUGLINK_FALSE\n HAVE_OBJCOPY_DEBUGLINK_TRUE\n+READELF\n OBJCOPY\n HAVE_COMPRESSED_DEBUG_FALSE\n HAVE_COMPRESSED_DEBUG_TRUE\n@@ -651,6 +652,8 @@ ALLOC_FILE\n VIEW_FILE\n BACKTRACE_SUPPORTS_DATA\n BACKTRACE_SUPPORTED\n+HAVE_ELF_FALSE\n+HAVE_ELF_TRUE\n FORMAT_FILE\n BACKTRACE_SUPPORTS_THREADS\n PIC_FLAG\n@@ -11489,7 +11492,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11492 \"configure\"\n+#line 11495 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11595,7 +11598,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11598 \"configure\"\n+#line 11601 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12512,6 +12515,14 @@ cat >>confdefs.h <<_ACEOF\n #define BACKTRACE_ELF_SIZE $elfsize\n _ACEOF\n \n+ if test \"$FORMAT_FILE\" = \"elf.lo\"; then\n+  HAVE_ELF_TRUE=\n+  HAVE_ELF_FALSE='#'\n+else\n+  HAVE_ELF_TRUE='#'\n+  HAVE_ELF_FALSE=\n+fi\n+\n \n # XCOFF defines.\n xcoffsize=\n@@ -13400,6 +13411,43 @@ $as_echo \"no\" >&6; }\n fi\n \n \n+# Extract the first word of \"readelf\", so it can be a program name with args.\n+set dummy readelf; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_READELF+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$READELF\"; then\n+  ac_cv_prog_READELF=\"$READELF\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_READELF=\"readelf\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+READELF=$ac_cv_prog_READELF\n+if test -n \"$READELF\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $READELF\" >&5\n+$as_echo \"$READELF\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether objcopy supports debuglink\" >&5\n $as_echo_n \"checking whether objcopy supports debuglink... \" >&6; }\n if ${libbacktrace_cv_objcopy_debuglink+:} false; then :\n@@ -13473,6 +13521,8 @@ fi\n \n ac_config_files=\"$ac_config_files Makefile backtrace-supported.h\"\n \n+ac_config_files=\"$ac_config_files install-debuginfo-for-buildid.sh\"\n+\n \n # We need multilib support, but only if configuring for the target.\n ac_config_commands=\"$ac_config_commands default\"\n@@ -13611,6 +13661,10 @@ if test -z \"${HAVE_DWZ_TRUE}\" && test -z \"${HAVE_DWZ_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"HAVE_DWZ\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${HAVE_ELF_TRUE}\" && test -z \"${HAVE_ELF_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"HAVE_ELF\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${HAVE_PTHREAD_TRUE}\" && test -z \"${HAVE_PTHREAD_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"HAVE_PTHREAD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n@@ -14525,6 +14579,7 @@ do\n     \"gstdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gstdint.h\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"backtrace-supported.h\") CONFIG_FILES=\"$CONFIG_FILES backtrace-supported.h\" ;;\n+    \"install-debuginfo-for-buildid.sh\") CONFIG_FILES=\"$CONFIG_FILES install-debuginfo-for-buildid.sh\" ;;\n     \"default\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n \n   *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n@@ -16140,6 +16195,7 @@ else\n fi\n \n  ;;\n+    \"install-debuginfo-for-buildid.sh\":F) chmod +x install-debuginfo-for-buildid.sh ;;\n     \"default\":C) if test -n \"$CONFIG_FILES\"; then\n    if test -n \"${with_target_subdir}\"; then\n      # Multilibs need MULTISUBDIR defined correctly in certain makefiles so"}, {"sha": "dd25095dcf826b3f4ba8d3fc927de7343de07b1f", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -259,6 +259,7 @@ elf64) elfsize=64 ;;\n *)     elfsize=unused\n esac\n AC_DEFINE_UNQUOTED([BACKTRACE_ELF_SIZE], [$elfsize], [ELF size: 32 or 64])\n+AM_CONDITIONAL(HAVE_ELF, test \"$FORMAT_FILE\" = \"elf.lo\")\n \n # XCOFF defines.\n xcoffsize=\n@@ -445,6 +446,7 @@ AM_CONDITIONAL(HAVE_COMPRESSED_DEBUG, test \"$libgo_cv_ld_compress\" = yes)\n \n AC_ARG_VAR(OBJCOPY, [location of objcopy])\n AC_CHECK_PROG(OBJCOPY, objcopy, objcopy,)\n+AC_CHECK_PROG(READELF, readelf, readelf)\n AC_CACHE_CHECK([whether objcopy supports debuglink],\n [libbacktrace_cv_objcopy_debuglink],\n [if test -n \"${with_target_subdir}\"; then\n@@ -472,6 +474,7 @@ else\n fi\n \n AC_CONFIG_FILES(Makefile backtrace-supported.h)\n+AC_CONFIG_FILES(install-debuginfo-for-buildid.sh, chmod +x install-debuginfo-for-buildid.sh)\n \n # We need multilib support, but only if configuring for the target.\n AC_CONFIG_COMMANDS([default],"}, {"sha": "d933052200c0ed107555e88244ca673c02a7bdf3", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -809,6 +809,8 @@ elf_readlink (struct backtrace_state *state, const char *filename,\n     }\n }\n \n+#define SYSTEM_BUILD_ID_DIR \"/usr/lib/debug/.build-id/\"\n+\n /* Open a separate debug info file, using the build ID to find it.\n    Returns an open file descriptor, or -1.\n \n@@ -821,7 +823,7 @@ elf_open_debugfile_by_buildid (struct backtrace_state *state,\n \t\t\t       backtrace_error_callback error_callback,\n \t\t\t       void *data)\n {\n-  const char * const prefix = \"/usr/lib/debug/.build-id/\";\n+  const char * const prefix = SYSTEM_BUILD_ID_DIR;\n   const size_t prefix_len = strlen (prefix);\n   const char * const suffix = \".debug\";\n   const size_t suffix_len = strlen (suffix);"}, {"sha": "b98d891d788d7b98655401b2717622209b57c16f", "filename": "libbacktrace/install-debuginfo-for-buildid.sh.in", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Finstall-debuginfo-for-buildid.sh.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f/libbacktrace%2Finstall-debuginfo-for-buildid.sh.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Finstall-debuginfo-for-buildid.sh.in?ref=fddbc19325a3e93a5f72668baa4e4bdeea9ebc7f", "patch": "@@ -0,0 +1,65 @@\n+#!/bin/sh\n+\n+# install-debug-info-for-buildid.sh -- Helper script for libbacktrace library\n+# testing.\n+# Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+# Redistribution and use in source and binary forms, with or without\n+# modification, are permitted provided that the following conditions are\n+# met:\n+\n+#     (1) Redistributions of source code must retain the above copyright\n+#     notice, this list of conditions and the following disclaimer.\n+\n+#     (2) Redistributions in binary form must reproduce the above copyright\n+#     notice, this list of conditions and the following disclaimer in\n+#     the documentation and/or other materials provided with the\n+#     distribution.\n+\n+#     (3) The name of the author may not be used to\n+#     endorse or promote products derived from this software without\n+#     specific prior written permission.\n+\n+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+# POSSIBILITY OF SUCH DAMAGE.\n+\n+# Extract build-id from src, and copy debug info of src to\n+# $build_id_dir/aa/bb...zz.debug.\n+\n+set -e\n+\n+sed=@SED@\n+awk=@AWK@\n+grep=@GREP@\n+objcopy=@OBJCOPY@\n+readelf=@READELF@\n+mkdir_p=\"@MKDIR_P@\"\n+\n+build_id_dir=\"$1\"\n+src=\"$2\"\n+\n+buildid=$($readelf -n $src \\\n+\t      | $grep \"Build ID\" \\\n+\t      | $awk '{print $3}')\n+\n+prefix=$(echo $buildid \\\n+\t     | $sed 's/^\\(.\\{2\\}\\).*/\\1/')\n+\n+remainder=$(echo $buildid \\\n+\t\t| $sed 's/^.\\{2\\}//')\n+\n+dir=$build_id_dir/$prefix\n+dst=$dir/$remainder.debug\n+\n+$mkdir_p $dir\n+\n+$objcopy --only-keep-debug $src $dst"}]}