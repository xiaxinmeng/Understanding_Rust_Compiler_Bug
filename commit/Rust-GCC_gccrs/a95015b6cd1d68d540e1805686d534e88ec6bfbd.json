{"sha": "a95015b6cd1d68d540e1805686d534e88ec6bfbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1MDE1YjZjZDFkNjhkNTQwZTE4MDU2ODZkNTM0ZTg4ZWM2YmZiZA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2011-06-20T11:49:27Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-06-20T11:49:27Z"}, "message": "ChangeLog gcc/\n\n2011-06-20  Kai Tietz  <ktietz@redhat.com>\n\n\t* fold-const.c (fold_binary_loc): Add missing\n\tfolding for truth-not operations in combination\n\twith binary and.\n\nChangeLog gcc/testsuite/\n\n2011-06-20  Kai Tietz  <ktietz@redhat.com>\n\n\t* gcc.dg/binop-notand1.c: New test.\n\t* gcc.dg/binop-notand2.c: New test.\n\t* gcc.dg/binop-notand3.c: New test.\n\t* gcc.dg/binop-notand4.c: New test.\n\t* gcc.dg/binop-notand5.c: New test.\n\t* gcc.dg/binop-notand6.c: New test.\n\nFrom-SVN: r175206", "tree": {"sha": "dd4bcae7ea7637ba444dd69516cc7a1ce4f2d852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd4bcae7ea7637ba444dd69516cc7a1ce4f2d852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a95015b6cd1d68d540e1805686d534e88ec6bfbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95015b6cd1d68d540e1805686d534e88ec6bfbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95015b6cd1d68d540e1805686d534e88ec6bfbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95015b6cd1d68d540e1805686d534e88ec6bfbd/comments", "author": null, "committer": null, "parents": [{"sha": "6f17ef336c92537292114eb6675360f264575099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f17ef336c92537292114eb6675360f264575099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f17ef336c92537292114eb6675360f264575099"}], "stats": {"total": 103, "additions": 99, "deletions": 4}, "files": [{"sha": "673dd46ae14e3950695e948faf2405042f67b36a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -1,3 +1,9 @@\n+2011-06-20  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* fold-const.c (fold_binary_loc): Add missing\n+\tfolding for truth-not operations in combination\n+\twith binary and.\n+\n 2011-06-20  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* regrename.c (do_replace): Don't update notes."}, {"sha": "e48aae9f4ce19a2ed7538194524b091603bff87e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -10866,13 +10866,19 @@ fold_binary_loc (location_t loc,\n       if (operand_equal_p (arg0, arg1, 0))\n \treturn non_lvalue_loc (loc, fold_convert_loc (loc, type, arg0));\n \n-      /* ~X & X is always zero.  */\n-      if (TREE_CODE (arg0) == BIT_NOT_EXPR\n+      /* ~X & X, (X == 0) & X, and !X & X are always zero.  */\n+      if ((TREE_CODE (arg0) == BIT_NOT_EXPR\n+\t   || TREE_CODE (arg0) == TRUTH_NOT_EXPR\n+\t   || (TREE_CODE (arg0) == EQ_EXPR\n+\t       && integer_zerop (TREE_OPERAND (arg0, 1))))\n \t  && operand_equal_p (TREE_OPERAND (arg0, 0), arg1, 0))\n \treturn omit_one_operand_loc (loc, type, integer_zero_node, arg1);\n \n-      /* X & ~X is always zero.  */\n-      if (TREE_CODE (arg1) == BIT_NOT_EXPR\n+      /* X & ~X , X & (X == 0), and X & !X are always zero.  */\n+      if ((TREE_CODE (arg1) == BIT_NOT_EXPR\n+\t   || TREE_CODE (arg1) == TRUTH_NOT_EXPR\n+\t   || (TREE_CODE (arg1) == EQ_EXPR\n+\t       && integer_zerop (TREE_OPERAND (arg1, 1))))\n \t  && operand_equal_p (arg0, TREE_OPERAND (arg1, 0), 0))\n \treturn omit_one_operand_loc (loc, type, integer_zero_node, arg0);\n \n@@ -10933,6 +10939,14 @@ fold_binary_loc (location_t loc,\n \t\t\t\t\t   build_int_cst (TREE_TYPE (tem), 1)),\n \t\t\t      build_int_cst (TREE_TYPE (tem), 0));\n \t}\n+      /* Fold !X & 1 as X == 0.  */\n+      if (TREE_CODE (arg0) == TRUTH_NOT_EXPR\n+\t  && integer_onep (arg1))\n+\t{\n+\t  tem = TREE_OPERAND (arg0, 0);\n+\t  return fold_build2_loc (loc, EQ_EXPR, type, tem,\n+\t\t\t\t  build_int_cst (TREE_TYPE (tem), 0));\n+\t}\n \n       /* Fold (X ^ Y) & Y as ~X & Y.  */\n       if (TREE_CODE (arg0) == BIT_XOR_EXPR"}, {"sha": "3aa6446ab6bd702fed3aece952f29fcf387fe1c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -1,3 +1,12 @@\n+2011-06-20  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* gcc.dg/binop-notand1.c: New test.\n+\t* gcc.dg/binop-notand2.c: New test.\n+\t* gcc.dg/binop-notand3.c: New test.\n+\t* gcc.dg/binop-notand4.c: New test.\n+\t* gcc.dg/binop-notand5.c: New test.\n+\t* gcc.dg/binop-notand6.c: New test.\n+\n 2011-06-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR testsuite/49432"}, {"sha": "cadf7e532c525f7dbb6e1d44239364f93ee1e735", "filename": "gcc/testsuite/gcc.dg/binop-notand1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand1.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return (a & !a) | (b & !b);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "0076d4be7a1679ac223f476d9b2ca18656be4445", "filename": "gcc/testsuite/gcc.dg/binop-notand2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand2.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a)\n+{\n+  return (!a & 1) != (a == 0);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5f8e32ff8faed4e641f4b3dc546702f036fa7f19", "filename": "gcc/testsuite/gcc.dg/binop-notand3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand3.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a)\n+{\n+  return (!a & 1) != ((a == 0) & 1);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "1c3fefd61e9d741556b62b68a96973e514ae061d", "filename": "gcc/testsuite/gcc.dg/binop-notand4.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand4.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return (!a & a) | (b & !b);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "463f19b04da33f1a81d539f987ce2adbcc74be3d", "filename": "gcc/testsuite/gcc.dg/binop-notand5.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand5.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return (a & (a == 0)) | (b & !b);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e1882aca6795f0d6cec334e4b96afe64ffa2c1e1", "filename": "gcc/testsuite/gcc.dg/binop-notand6.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95015b6cd1d68d540e1805686d534e88ec6bfbd/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbinop-notand6.c?ref=a95015b6cd1d68d540e1805686d534e88ec6bfbd", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return (a & !a) | (b & (b == 0));\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}