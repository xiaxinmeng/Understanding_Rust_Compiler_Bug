{"sha": "e5b7ca327d3df06a69998bd72ae2cccad3759d25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTViN2NhMzI3ZDNkZjA2YTY5OTk4YmQ3MmFlMmNjY2FkMzc1OWQyNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-11-30T22:28:43Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-11-30T22:28:43Z"}, "message": "lcm.c (compute_laterin): Cast bb->aux to size_t not int.\n\n        * lcm.c (compute_laterin): Cast bb->aux to size_t not int.\n        (compute_nearerout): Likewise.\n        * ggc-page.c (ggc_page_print_statistics): Explicitly cast\n        size_t to unsigned long for formatting.\n\nFrom-SVN: r30728", "tree": {"sha": "3f6d71943d76c090980cf6d0fdf0c35875a06b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6d71943d76c090980cf6d0fdf0c35875a06b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5b7ca327d3df06a69998bd72ae2cccad3759d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b7ca327d3df06a69998bd72ae2cccad3759d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b7ca327d3df06a69998bd72ae2cccad3759d25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b7ca327d3df06a69998bd72ae2cccad3759d25/comments", "author": null, "committer": null, "parents": [{"sha": "e48addeebcc08efa9cd2a13fd2e70e2c92db26d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48addeebcc08efa9cd2a13fd2e70e2c92db26d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48addeebcc08efa9cd2a13fd2e70e2c92db26d8"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "317ee8f0f4a45c30b56e1d2794aa7ff7006ec64d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5b7ca327d3df06a69998bd72ae2cccad3759d25", "patch": "@@ -1,3 +1,10 @@\n+Tue Nov 30 14:21:00 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* lcm.c (compute_laterin): Cast bb->aux to size_t not int.\n+\t(compute_nearerout): Likewise.\n+\t* ggc-page.c (ggc_page_print_statistics): Explicitly cast\n+\tsize_t to unsigned long for formatting.\n+\n 1999-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.h (FIXED_REGISTERS, CONDITIONAL_REGISTER_USAGE):"}, {"sha": "7687cef0ba397d645ac06468207c6b1adb728216", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=e5b7ca327d3df06a69998bd72ae2cccad3759d25", "patch": "@@ -1192,8 +1192,8 @@ ggc_page_print_statistics ()\n \t  in_use += \n \t    (OBJECTS_PER_PAGE (i) - p->num_free_objects) * (1 << i);\n \t}\n-      fprintf (stderr, \"%-3d %-15lu %-15u\\n\", i, \n-\t       (unsigned long) allocated, in_use);\n+      fprintf (stderr, \"%-3d %-15lu %-15lu\\n\", i, \n+\t       (unsigned long) allocated, (unsigned long) in_use);\n     }\n \n   /* Print out some global information.  */"}, {"sha": "64a00a422c12cfa0fa1137a0fcc05d5f59114748", "filename": "gcc/lcm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b7ca327d3df06a69998bd72ae2cccad3759d25/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=e5b7ca327d3df06a69998bd72ae2cccad3759d25", "patch": "@@ -274,7 +274,7 @@ compute_laterin (edge_list, earliest, antloc, later, laterin)\n      the entry block.  That edge should always have a LATER value the\n      same as EARLIEST for that edge.  */\n   for (e = ENTRY_BLOCK_PTR->succ; e; e = e->succ_next)\n-    sbitmap_copy (later[(int)e->aux], earliest[(int)e->aux]);\n+    sbitmap_copy (later[(size_t)e->aux], earliest[(size_t)e->aux]);\n \n   /* Add all the blocks to the worklist.  This prevents an early exit from\n      the loop given our optimistic initialization of LATER above.  */\n@@ -610,7 +610,7 @@ compute_nearerout (edge_list, farthest, st_avloc, nearer, nearerout)\n      the exit block.  That edge should always have a NEARER value the\n      same as FARTHEST for that edge.  */\n   for (e = EXIT_BLOCK_PTR->pred; e; e = e->pred_next)\n-    sbitmap_copy (nearer[(int)e->aux], farthest[(int)e->aux]);\n+    sbitmap_copy (nearer[(size_t)e->aux], farthest[(size_t)e->aux]);\n \n   /* Add all the blocks to the worklist.  This prevents an early exit\n      from the loop given our optimistic initialization of NEARER.  */"}]}