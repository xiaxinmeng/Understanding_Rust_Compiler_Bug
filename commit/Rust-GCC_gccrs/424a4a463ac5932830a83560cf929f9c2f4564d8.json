{"sha": "424a4a463ac5932830a83560cf929f9c2f4564d8", "node_id": "C_kwDOANBUbNoAKDQyNGE0YTQ2M2FjNTkzMjgzMGE4MzU2MGNmOTI5ZjljMmY0NTY0ZDg", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-22T09:11:00Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-22T09:11:00Z"}, "message": "Fortran: Add gfc_simple_for_loop aux function\n\nFunction to generate a simple loop (to be used internally).\nCallers will be added in follow-up commits.\n\ngcc/fortran/\n\t* trans-expr.c (gfc_simple_for_loop): New.\n\t* trans.h (gfc_simple_for_loop): New prototype.", "tree": {"sha": "7d40ce9c14ff14897467857530b89a0b62f1ce35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d40ce9c14ff14897467857530b89a0b62f1ce35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/424a4a463ac5932830a83560cf929f9c2f4564d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424a4a463ac5932830a83560cf929f9c2f4564d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/424a4a463ac5932830a83560cf929f9c2f4564d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424a4a463ac5932830a83560cf929f9c2f4564d8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0321032658d875bee7584d8e3a8cbdd275c99d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0321032658d875bee7584d8e3a8cbdd275c99d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0321032658d875bee7584d8e3a8cbdd275c99d5"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "41d5452aecfd9bb0977a6c052d0c27a461606580", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424a4a463ac5932830a83560cf929f9c2f4564d8/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424a4a463ac5932830a83560cf929f9c2f4564d8/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=424a4a463ac5932830a83560cf929f9c2f4564d8", "patch": "@@ -11728,3 +11728,37 @@ gfc_trans_assign (gfc_code * code)\n {\n   return gfc_trans_assignment (code->expr1, code->expr2, false, true);\n }\n+\n+/* Generate a simple loop for internal use of the form\n+   for (var = begin; var <cond> end; var += step)\n+      body;  */\n+void\n+gfc_simple_for_loop (stmtblock_t *block, tree var, tree begin, tree end,\n+\t\t     enum tree_code cond, tree step, tree body)\n+{\n+  tree tmp;\n+\n+  /* var = begin. */\n+  gfc_add_modify (block, var, begin);\n+\n+  /* Loop: for (var = begin; var <cond> end; var += step).  */\n+  tree label_loop = gfc_build_label_decl (NULL_TREE);\n+  tree label_cond = gfc_build_label_decl (NULL_TREE);\n+  TREE_USED (label_loop) = 1;\n+  TREE_USED (label_cond) = 1;\n+\n+  gfc_add_expr_to_block (block, build1_v (GOTO_EXPR, label_cond));\n+  gfc_add_expr_to_block (block, build1_v (LABEL_EXPR, label_loop));\n+\n+  /* Loop body.  */\n+  gfc_add_expr_to_block (block, body);\n+\n+  /* End of loop body.  */\n+  tmp = fold_build2_loc (input_location, PLUS_EXPR, TREE_TYPE (var), var, step);\n+  gfc_add_modify (block, var, tmp);\n+  gfc_add_expr_to_block (block, build1_v (LABEL_EXPR, label_cond));\n+  tmp = fold_build2_loc (input_location, cond, boolean_type_node, var, end);\n+  tmp = build3_v (COND_EXPR, tmp, build1_v (GOTO_EXPR, label_loop),\n+\t\t  build_empty_stmt (input_location));\n+  gfc_add_expr_to_block (block, tmp);\n+}"}, {"sha": "4d29834dc52effe4f9314711ce70898a5b91175b", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424a4a463ac5932830a83560cf929f9c2f4564d8/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424a4a463ac5932830a83560cf929f9c2f4564d8/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=424a4a463ac5932830a83560cf929f9c2f4564d8", "patch": "@@ -518,6 +518,8 @@ tree gfc_string_to_single_character (tree len, tree str, int kind);\n tree gfc_get_tree_for_caf_expr (gfc_expr *);\n void gfc_get_caf_token_offset (gfc_se*, tree *, tree *, tree, tree, gfc_expr *);\n tree gfc_caf_get_image_index (stmtblock_t *, gfc_expr *, tree);\n+void gfc_simple_for_loop (stmtblock_t *, tree, tree, tree, enum tree_code, tree,\n+\t\t\t  tree);\n \n /* Find the decl containing the auxiliary variables for assigned variables.  */\n void gfc_conv_label_variable (gfc_se * se, gfc_expr * expr);"}]}