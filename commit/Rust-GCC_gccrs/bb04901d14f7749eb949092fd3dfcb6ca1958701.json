{"sha": "bb04901d14f7749eb949092fd3dfcb6ca1958701", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwNDkwMWQxNGY3NzQ5ZWI5NDkwOTJmZDNkZmNiNmNhMTk1ODcwMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-08-18T18:49:35Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-08-18T18:49:35Z"}, "message": "Fix PR tree-optimization/96670 - ICE on memchr with an empty initializer.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/96670\n\tPR middle-end/78257\n\t* gimple-fold.c (gimple_fold_builtin_memchr): Call byte_representation\n\tto get it, not string_constant.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/96670\n\t* gcc.dg/memchr-2.c: New test.\n\t* gcc.dg/memcmp-6.c: New test.", "tree": {"sha": "9196064b99a008ace33b45f80d9cdad1aba5ff2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9196064b99a008ace33b45f80d9cdad1aba5ff2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb04901d14f7749eb949092fd3dfcb6ca1958701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04901d14f7749eb949092fd3dfcb6ca1958701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb04901d14f7749eb949092fd3dfcb6ca1958701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04901d14f7749eb949092fd3dfcb6ca1958701/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16bea83ae55fdbb4d1e79f27c991c2b682813755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16bea83ae55fdbb4d1e79f27c991c2b682813755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16bea83ae55fdbb4d1e79f27c991c2b682813755"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "dcc1b56a2735515bd9267a1a4da7f869b430aba0", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=bb04901d14f7749eb949092fd3dfcb6ca1958701", "patch": "@@ -2670,7 +2670,7 @@ gimple_fold_builtin_memchr (gimple_stmt_iterator *gsi)\n       if (r == NULL)\n \t{\n \t  tree mem_size, offset_node;\n-\t  string_constant (arg1, &offset_node, &mem_size, NULL);\n+\t  byte_representation (arg1, &offset_node, &mem_size, NULL);\n \t  unsigned HOST_WIDE_INT offset = (offset_node == NULL_TREE)\n \t\t\t\t\t  ? 0 : tree_to_uhwi (offset_node);\n \t  /* MEM_SIZE is the size of the array the string literal"}, {"sha": "61357f96d12f177e86b3b4af66439ff4a5432120", "filename": "gcc/testsuite/gcc.dg/memchr-2.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Ftestsuite%2Fgcc.dg%2Fmemchr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Ftestsuite%2Fgcc.dg%2Fmemchr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemchr-2.c?ref=bb04901d14f7749eb949092fd3dfcb6ca1958701", "patch": "@@ -0,0 +1,41 @@\n+/* PR tree-optimization/96670 - ICE on memchr with an empty initializer\n+   { dg-do compile }\n+   { dg-options \"-O -Wall -fdump-tree-optimized\" } */\n+\n+struct {\n+  int i, j;\n+} const s = { };\n+\n+void memchr_success_unused (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  __builtin_memchr (p, '\\0', n);\n+}\n+\n+void memchr_success_used (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  if (&s != __builtin_memchr (p, '\\0', n))\n+    __builtin_abort ();\n+}\n+\n+void memchr_fail_unused (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  __builtin_memchr (p, '\\5', n);\n+}\n+\n+void memchr_fail_used (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  if (__builtin_memchr (p, '\\5', n))\n+    __builtin_abort ();\n+}\n+\n+/* { dg-prune-output \"\\\\\\[-Wunused-value\" }\n+   { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } }\n+   { dg-final { scan-tree-dump-not \"memcmp \\\\(\" \"optimized\" } } */"}, {"sha": "d57352616cfa24cc0ea0ffd28de24f91839dc82e", "filename": "gcc/testsuite/gcc.dg/memcmp-6.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04901d14f7749eb949092fd3dfcb6ca1958701/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-6.c?ref=bb04901d14f7749eb949092fd3dfcb6ca1958701", "patch": "@@ -0,0 +1,47 @@\n+/* PR tree-optimization/96670 - ICE on memchr with an empty initializer\n+   { dg-do compile }\n+   { dg-options \"-O -Wall -fdump-tree-optimized\" } */\n+\n+struct {\n+  int i, j;\n+} const s = { };\n+\n+const char a[sizeof s] = { };\n+\n+void memcmp_success_unused (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  __builtin_memcmp (p, a, n);\n+  __builtin_memcmp (a, p, n);\n+}\n+\n+void memcmp_success_used (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  if (__builtin_memcmp (p, a, n)\n+      || __builtin_memcmp (a, p, n))\n+    __builtin_abort ();\n+}\n+\n+void memcmp_fail_unused (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  __builtin_memcmp (p, a, n);\n+  __builtin_memcmp (a, p, n);\n+}\n+\n+void memcmp_fail_used (void)\n+{\n+  int n = (char *)&s.j - (char *)&s;\n+  char *p = (char *)&s;\n+  if (__builtin_memcmp (p, a, n)\n+      || __builtin_memcmp (a, p, n))\n+    __builtin_abort ();\n+}\n+\n+/* { dg-prune-output \"\\\\\\[-Wunused-value\" }\n+   { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } }\n+   { dg-final { scan-tree-dump-not \"memcmp \\\\\\(\" \"optimized\" } } */"}]}