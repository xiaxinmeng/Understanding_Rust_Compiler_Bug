{"sha": "4a9f0d53b81be96b5fe3731a5408bd981158b8e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE5ZjBkNTNiODFiZTk2YjVmZTM3MzFhNTQwOGJkOTgxMTU4YjhlMA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-29T20:38:51Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-29T20:38:51Z"}, "message": "Updated README.md to add more info to fellow Rustaceans.", "tree": {"sha": "66b35d67913985102bdf57cf2a53bbe06dfa96c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66b35d67913985102bdf57cf2a53bbe06dfa96c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a9f0d53b81be96b5fe3731a5408bd981158b8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9f0d53b81be96b5fe3731a5408bd981158b8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9f0d53b81be96b5fe3731a5408bd981158b8e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9f0d53b81be96b5fe3731a5408bd981158b8e0/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27c4a4986fb240efafbf263952e5f474bcef2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27c4a4986fb240efafbf263952e5f474bcef2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27c4a4986fb240efafbf263952e5f474bcef2f1"}], "stats": {"total": 67, "additions": 61, "deletions": 6}, "files": [{"sha": "e15db3f434d33fc79f94ace214defd8440fec7de", "filename": "README.md", "status": "modified", "additions": 61, "deletions": 6, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9f0d53b81be96b5fe3731a5408bd981158b8e0/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9f0d53b81be96b5fe3731a5408bd981158b8e0/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=4a9f0d53b81be96b5fe3731a5408bd981158b8e0", "patch": "@@ -1,23 +1,26 @@\n ![C/C++ CI](https://github.com/philberty/gccrs/workflows/C/C++%20CI/badge.svg)\n # GCC Rust\n \n-This is an implementation of rust following the gccgo style front-end.\n+This is a full alternative implementaion of the Rust language ontop of GCC.\n+Please see the accompanying reporting repository: https://github.com/Rust-GCC/Reporting for\n+status reports from Philip Herron and tast tracking overviews.\n \n-## Compilation for Development\n+## Development Enviroment\n \n Fetch dependancies for ubuntu:\n \n ```bash\n $ apt install build-essential libgmp3-dev libmpfr-dev libmpc-dev flex bison autogen gcc-multilib\n ```\n \n-Clone\n+Clone the repository\n \n ```bash\n-$ git clone https://github.com/philberty/gccrs\n+$ git clone git@github.com:Rust-GCC/gccrs.git\n ```\n \n-Dev Build\n+Compilation script. It is important to remember that GNU toolchain projects are designed to be built outside of its source directory\n+this is why a build directory is created.\n \n ```bash\n $ mkdir gccrs-build\n@@ -26,8 +29,60 @@ $ ../gccrs/configure --prefix=$HOME/gccrs-install --disable-bootstrap --enable-m\n $ make\n ```\n \n-Running the compiler itself - no need to make install\n+Running the compiler itself without make install we can simply imvoke the compiler proper:\n \n ```\n $ gdb --args ./gcc/rust1 test1.rs -frust-dump-parse -dumpbase test.rs -mtune=generic -march=x86-64 -auxbase-strip test.s -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n ```\n+\n+Invoking the compiler driver we need to:\n+\n+```\n+$ make install\n+```\n+\n+Then invoke the compiler as expected:\n+\n+```\n+$ gccrs -g -O2 -c test.rs -o test.o\n+$ gccrs -o test test.o\n+```\n+\n+## Testsuite\n+\n+The test suite can be invoked via:\n+\n+```\n+$ make check-rust\n+```\n+\n+Test cases can be found within gcc/testsuite/rust.test please feel free to contriobute your specific\n+test cases referencing any issues on github.\n+\n+## Docker image\n+\n+There is a docker image hosted over on: \n+\n+https://hub.docker.com/repository/docker/philberty/gccrs\n+\n+Or you can build your own image:\n+\n+```\n+$ docker build . -t gccrs-dev\n+$ docker run --rm -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp \\\n+    gccrs-dev:latest gccrs -g -O2 -c \\\n+    gcc/testsuite/rust.test/compilable/type_infer1.rs -o type_infer1.o\n+```\n+\n+## Contributing\n+\n+Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones and this means we require\n+contribtions to have copyright assignment in place. Please see: https://gcc.gnu.org/contribute.html\n+\n+Not all contributions must be code we would love to see new test cases or bugs and issues to be reported. Feel free to add any comments on open PRs\n+\n+We can be found on:\n+\n+ * Rust-lang Zulip: https://rust-lang.zulipchat.com/\n+ * GNU toolchain discord: \n+ * Mailing list: TODO"}]}