{"sha": "ed70c24512401d2b8fa62bab5a32dd8ad835a757", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3MGMyNDUxMjQwMWQyYjhmYTYyYmFiNWEzMmRkOGFkODM1YTc1Nw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-06-14T00:09:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-06-14T00:09:30Z"}, "message": "svr3.h (ASM_FILE_START): Don't use ASM_FILE_START_1.\n\n\t* config/svr3.h (ASM_FILE_START): Don't use ASM_FILE_START_1.\n\t(ASM_FILE_START_1): Delete.\n\t* config/i386/att.h, config/i386/sco5.h,\n\tconfig/i386/sysv3.h\n\t(ASM_FILE_START_1): Delete.\n\nFrom-SVN: r67924", "tree": {"sha": "698715da64d7b91485c0620e67c1f9236a88a642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/698715da64d7b91485c0620e67c1f9236a88a642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed70c24512401d2b8fa62bab5a32dd8ad835a757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed70c24512401d2b8fa62bab5a32dd8ad835a757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed70c24512401d2b8fa62bab5a32dd8ad835a757", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed70c24512401d2b8fa62bab5a32dd8ad835a757/comments", "author": null, "committer": null, "parents": [{"sha": "267409e8b0f3b3cd7a2ee231129cb43b1625f166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267409e8b0f3b3cd7a2ee231129cb43b1625f166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267409e8b0f3b3cd7a2ee231129cb43b1625f166"}], "stats": {"total": 75, "additions": 33, "deletions": 42}, "files": [{"sha": "c1db08a1aaef93474e2dc6ceec6fc669be10ea04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 25, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed70c24512401d2b8fa62bab5a32dd8ad835a757", "patch": "@@ -1,8 +1,16 @@\n+2003-06-13  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/svr3.h (ASM_FILE_START): Don't use ASM_FILE_START_1.\n+\t(ASM_FILE_START_1): Delete.\n+\t* config/i386/att.h, config/i386/sco5.h,\n+\tconfig/i386/sysv3.h\n+\t(ASM_FILE_START_1): Delete.\n+\n 2003-06-13  Kelley Cook  <kelleycook@wideopenwest.com>\n \n \t* config/i386/bsd.h: Remove ASM_FILE_START.\n \t* config/i386/djgpp.h: Likewise.\n-\t* config/i386/gas.h (ASM_FILE_START): Output .file before .intel_syntax. \n+\t* config/i386/gas.h (ASM_FILE_START): Output .file before .intel_syntax.\n \n \t* config/i386/djgpp.h: Move included unix.h, bsd.h, gas.h to ...\n \t* config.gcc (i[34567]86-pc-msdosdjgpp): ... here.\n@@ -11,8 +19,8 @@\n \n \tPR bootstrap/10835\n \t* haifa-sched.c (max_lookahead_tries,\n-        cached_first_cycle_multipass_dfa_lookahead,\n-        cached_issue_rate): New variables.\n+\tcached_first_cycle_multipass_dfa_lookahead,\n+\tcached_issue_rate): New variables.\n \t(max_issue): Check the number of tries.\n \t(choose_ready): Calculate max_lookahead_tries.\n \t(sched_init): Check cached_issue_rate.\n@@ -23,7 +31,7 @@\n \t* cfgrtl.c (purge_dead_edges): Expect it too.\n \n 2003-06-13  Jim Wilson  <wilson@tuliptree.org>\n-            Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR bootstrap/10983\n \t* combine.c (make_extraction): Use gen_lowpart_for_combine\n@@ -36,11 +44,11 @@\n \n 2003-06-13  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * c-common.c (handle_mode_attribute): Use VECTOR_MODE_P macro.\n+\t* c-common.c (handle_mode_attribute): Use VECTOR_MODE_P macro.\n \n-        * simplify-rtx.c (simplify_subreg): Same.\n+\t* simplify-rtx.c (simplify_subreg): Same.\n \n-        * emit-rtl.c (gen_lowpart_common): Same.\n+\t* emit-rtl.c (gen_lowpart_common): Same.\n \n 2003-06-13  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -78,7 +86,7 @@\n \n 2003-06-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390.c (s390_va_arg): Fix alignment when retrieving \n+\t* config/s390/s390.c (s390_va_arg): Fix alignment when retrieving\n \tnon-integral types from integer register save area slots.\n \n 2003-06-13  Nathanael Nerode  <neroden@gcc.gnu.org>\n@@ -117,7 +125,7 @@\n \t* config/m32r/m32r.md: Fix a comment typo.\n \n 2003-06-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n+\t    Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n \n \tPR target/10142\n \t* config/sparc/sparc.c (function_arg_record_value_parms): Add\n@@ -137,7 +145,7 @@\n \n 2003-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (function_arg): Remove typo.\n+\t* config/rs6000/rs6000.c (function_arg): Remove typo.\n \n 2003-06-12  Richard Henderson  <rth@redhat.com>\n \n@@ -146,15 +154,15 @@\n \n 2003-06-12  Richard Henderson  <rth@redhat.com>\n \n-        PR middle-end/10475\n-        * expmed.c (emit_store_flag): Use simplify_gen_subreg directly\n-        for extracting sub-words.\n+\tPR middle-end/10475\n+\t* expmed.c (emit_store_flag): Use simplify_gen_subreg directly\n+\tfor extracting sub-words.\n \n 2003-06-12  Richard Henderson  <rth@redhat.com>\n \n-        PR target/7594\n-        * config/m68k/m68k.md (zero_extendhisi2): Use gen_lowpart_SUBREG.\n-        (zero_extendqihi2, zero_extendqisi2): Likewise.\n+\tPR target/7594\n+\t* config/m68k/m68k.md (zero_extendhisi2): Use gen_lowpart_SUBREG.\n+\t(zero_extendqihi2, zero_extendqisi2): Likewise.\n \n 2003-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n@@ -169,7 +177,7 @@\n \n 2003-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.h (MODES_TIEABLE_P): Add SPE vectors.\n+\t* config/rs6000/rs6000.h (MODES_TIEABLE_P): Add SPE vectors.\n \n 2003-06-12  Roger Sayle  <roger@eyesopen.com>\n \n@@ -219,14 +227,14 @@ Thu Jun 12 20:00:55 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-06-10  Richard Henderson  <rth@redhat.com>\n \n-        PR inline-asm/4823\n-        * reg-stack.c (any_malformed_asm): New.\n-        (check_asm_stack_operands): Set it.\n-        (convert_regs_1): Check it before aborting.\n+\tPR inline-asm/4823\n+\t* reg-stack.c (any_malformed_asm): New.\n+\t(check_asm_stack_operands): Set it.\n+\t(convert_regs_1): Check it before aborting.\n \n 2003-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.md: Change all clobbers of the accumulator to sets.\n+\t* config/rs6000/spe.md: Change all clobbers of the accumulator to sets.\n \n 2003-06-12  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -459,10 +467,10 @@ Thu Jun 12 20:00:55 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* config.gcc: Add arm-wince-pe target.\n \t* config/arm/pe.h (MULTILIB_DEFAULTS): Define.\n-        Add comment about default apcs26 support.\n+\tAdd comment about default apcs26 support.\n \t* config/arm/t-pe (MULTILIB_OPTIONS): Add an -mapcs-32\n \tmultilib.\n-        (MULTILIB_DIRNAMES): Add 'apcs32'.\n+\t(MULTILIB_DIRNAMES): Add 'apcs32'.\n \t* config/arm/t-wince-pe: New makefile fragment.\n \t* config/arm/wince-pe.h: New file.  Overrides a few definitions\n \tin arm/pe.h\n@@ -524,7 +532,7 @@ Thu Jun 12 20:00:55 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-06-09  Richard Henderson  <rth@redhat.com>\n \n-        * stmt.c (expand_asm_operands): Re-word warning.\n+\t* stmt.c (expand_asm_operands): Re-word warning.\n \n 2003-06-08  Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "c95b6ad881e9f8abadca51a1a871576fe1d35461", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=ed70c24512401d2b8fa62bab5a32dd8ad835a757", "patch": "@@ -54,10 +54,6 @@ do\t\t\t\t\t\t\t\t\\\n \t  fputs (\"\\t.intel_syntax\\n\", FILE);\t\t\t\t\\\n   } while (0)\n \n-/* Do use .optim by default on this machine.  */\n-#undef ASM_FILE_START_1\n-#define ASM_FILE_START_1(FILE) fprintf (FILE, \"\\t.optim\\n\")\n-\n /* This is how to output an assembler line\n    that says to advance the location counter\n    to a multiple of 2**LOG bytes.  */"}, {"sha": "b4096a7ca40ce11860869f1caffd21f88dab0900", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=ed70c24512401d2b8fa62bab5a32dd8ad835a757", "patch": "@@ -44,9 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #define CTORS_SECTION_ASM_OP\t\t\"\\t.section\\t.ctors, \\\"aw\\\"\"\n #define DTORS_SECTION_ASM_OP\t\t\"\\t.section\\t.dtors, \\\"aw\\\"\"\n \n-#undef ASM_FILE_START_1\n-#define ASM_FILE_START_1(FILE)\n-\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\"}, {"sha": "88091816124234d893b1ca9fe35a635878e146d1", "filename": "gcc/config/i386/sysv3.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fi386%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv3.h?ref=ed70c24512401d2b8fa62bab5a32dd8ad835a757", "patch": "@@ -46,11 +46,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-/* Don't write a `.optim' pseudo; this assembler doesn't handle them.  */\n-\n-#undef ASM_FILE_START_1\n-#define ASM_FILE_START_1(FILE)\n-\n /* We want to be able to get DBX debugging information via -gstabs.  */\n \n #define DBX_DEBUGGING_INFO 1"}, {"sha": "434118db87bea929c5776b25efba80eab28726fb", "filename": "gcc/config/svr3.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fsvr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed70c24512401d2b8fa62bab5a32dd8ad835a757/gcc%2Fconfig%2Fsvr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr3.h?ref=ed70c24512401d2b8fa62bab5a32dd8ad835a757", "patch": "@@ -47,13 +47,8 @@ Boston, MA 02111-1307, USA.\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE)\t\t\t\t\t\\\n   do { output_file_directive ((FILE), main_input_filename);\t\\\n-       if (optimize) { ASM_FILE_START_1 (FILE); }\t\t\\\n      } while (0)\n \n-/* By default, do nothing: a few machines support .optim, but not most.  */\n-#undef ASM_FILE_START_1\n-#define ASM_FILE_START_1(FILE)\n-\n /* This says how to output an assembler line\n    to define a global common symbol.  */\n /* We don't use ROUNDED because the standard compiler doesn't,"}]}