{"sha": "4c1fcd13ccf765cbf135eae096d05dd7be84ae59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxZmNkMTNjY2Y3NjVjYmYxMzVlYWUwOTZkMDVkZDdiZTg0YWU1OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-04-05T00:08:54Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-04-05T00:08:54Z"}, "message": "pa.md (movsi for FP regs): Delete special case patterns.\n\n\t* pa.md (movsi for FP regs): Delete special case patterns.\n\t(movdi for FP regs): Likewise.\n\t(movsi main recognizer): Allow fp<->memory copies.\n\t(movdi main recognizer): Likewise.\n\nFrom-SVN: r4015", "tree": {"sha": "398c9febe346965091ef37c53c52463e48aa6987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/398c9febe346965091ef37c53c52463e48aa6987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1fcd13ccf765cbf135eae096d05dd7be84ae59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1fcd13ccf765cbf135eae096d05dd7be84ae59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1fcd13ccf765cbf135eae096d05dd7be84ae59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1fcd13ccf765cbf135eae096d05dd7be84ae59/comments", "author": null, "committer": null, "parents": [{"sha": "575bb005a4d0b040b48f3ec1214fba93a0014722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575bb005a4d0b040b48f3ec1214fba93a0014722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575bb005a4d0b040b48f3ec1214fba93a0014722"}], "stats": {"total": 54, "additions": 13, "deletions": 41}, "files": [{"sha": "6878717d06fdad38b2aea66e9db1401b0e5961eb", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 13, "deletions": 41, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1fcd13ccf765cbf135eae096d05dd7be84ae59/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1fcd13ccf765cbf135eae096d05dd7be84ae59/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=4c1fcd13ccf765cbf135eae096d05dd7be84ae59", "patch": "@@ -930,22 +930,6 @@\n   DONE;\n }\")\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"fp_reg_operand\" \"=fx\")\n-\t(match_operand:SI 1 \"short_memory_operand\" \"T\"))]\n-  \"\"\n-  \"fldws%F1 %1,%0\"\n-  [(set_attr \"type\" \"fpload\")\n-   (set_attr \"length\" \"1\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"short_memory_operand\" \"=T\")\n-\t(match_operand:SI 1 \"fp_reg_operand\" \"fx\"))]\n-  \"\"\n-  \"fstws%F0 %1,%0\"\n-  [(set_attr \"type\" \"fpstore\")\n-   (set_attr \"length\" \"1\")])\n-\n ;;; pic symbol references\n \n (define_insn \"\"\n@@ -958,8 +942,10 @@\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n-\t(match_operand:SI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fxM\"))]\n+  [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\" \n+\t\t\t\t\"=r,r,r,r,r,Q,*q,!fx,fx,*T\")\n+\t(match_operand:SI 1 \"move_operand\" \n+\t\t\t\t\"rM,J,N,K,Q,rM,rM,!fxM,*T,fx\"))]\n   \"register_operand (operands[0], SImode)\n    || reg_or_0_operand (operands[1], SImode)\"\n   \"@\n@@ -970,9 +956,11 @@\n    ldw%M1 %1,%0\n    stw%M0 %r1,%0\n    mtsar %r1\n-   fcpy,sgl %r1,%0\"\n-  [(set_attr \"type\" \"move,move,move,move,load,store,move,fpalu\")\n-   (set_attr \"length\" \"1,1,1,1,1,1,1,1\")])\n+   fcpy,sgl %r1,%0\n+   fldws%F1 %1,%0\n+   fstws%F0 %1,%0\"\n+  [(set_attr \"type\" \"move,move,move,move,load,store,move,fpalu,fpload,fpstore\")\n+   (set_attr \"length\" \"1,1,1,1,1,1,1,1,1,1\")])\n \n ;; Load indexed.  We don't use unscaled modes since they can't be used\n ;; unless we can tell which of the registers is the base and which is\n@@ -1498,27 +1486,11 @@\n \n ;;; Experimental\n \n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"fp_reg_operand\" \"=fx\")\n-\t(match_operand:DI 1 \"short_memory_operand\" \"T\"))]\n-  \"\"\n-  \"fldds%F1 %1,%0\"\n-  [(set_attr \"type\" \"fpload\")\n-   (set_attr \"length\" \"1\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"short_memory_operand\" \"=T\")\n-\t(match_operand:DI 1 \"fp_reg_operand\" \"fx\"))]\n-  \"\"\n-  \"fstds%F0 %1,%0\"\n-  [(set_attr \"type\" \"fpstore\")\n-   (set_attr \"length\" \"1\")])\n-\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=r,Q,&r,&r,fx\")\n+\t\t\t  \"=r,Q,&r,&r,fx,fx,*T\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t  \"rM,r,Q,i,fxM\"))]\n+\t\t\t  \"rM,r,Q,i,fxM,*T,fx\"))]\n   \"register_operand (operands[0], DImode)\n    || reg_or_0_operand (operands[1], DImode)\"\n   \"*\n@@ -1528,8 +1500,8 @@\n     return output_fp_move_double (operands);\n   return output_move_double (operands);\n }\"\n-  [(set_attr \"type\" \"move,store,load,misc,fpalu\")\n-   (set_attr \"length\" \"2,3,3,3,1\")])\n+  [(set_attr \"type\" \"move,store,load,misc,fpalu,fpload,fpstore\")\n+   (set_attr \"length\" \"2,3,3,3,1,1,1\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")"}]}