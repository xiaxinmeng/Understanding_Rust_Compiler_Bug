{"sha": "e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiMDIxODU5ZDljYTY0YjhhOWYxYmNmZGE4YjhmNjMxOWJlN2Q3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-17T18:16:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-17T18:16:19Z"}, "message": "* constexpr.c (use_new_call): Always use new call handling.\n\nFrom-SVN: r217664", "tree": {"sha": "91f2b9bcb3c443d45a47c2607199977d5716d601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91f2b9bcb3c443d45a47c2607199977d5716d601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60813a463b1e1398cd9786b8c4761283efefb831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60813a463b1e1398cd9786b8c4761283efefb831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60813a463b1e1398cd9786b8c4761283efefb831"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e6fc326d754972f7e3b7aa8c52b5e8e22c66462c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "patch": "@@ -1,5 +1,7 @@\n 2014-11-17  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (use_new_call): Always use new call handling.\n+\n \tC++14 constexpr support (minus loops and multiple returns)\n \t* constexpr.c (use_new_call): New macro.\n \t(build_data_member_initialization): Ignore non-mem-inits."}, {"sha": "8881271de24270fac2678e96c2ce75e9c0512162", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=e6b021859d9ca64b8a9f1bcfda8b8f6319be7d71", "patch": "@@ -1021,8 +1021,8 @@ adjust_temp_type (tree type, tree temp)\n }\n \n /* True if we want to use the new handling of constexpr calls based on\n-   DECL_SAVED_TREE.  Currently only active for C++14 mode.  */\n-#define use_new_call (cxx_dialect >= cxx14)\n+   DECL_SAVED_TREE.  */\n+#define use_new_call true\n \n /* Subroutine of cxx_eval_call_expression.\n    We are processing a call expression (either CALL_EXPR or"}]}