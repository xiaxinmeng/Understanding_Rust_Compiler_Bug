{"sha": "5f7282e2cb8e65e77e97001b02a13a658cec7805", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3MjgyZTJjYjhlNjVlNzdlOTcwMDFiMDJhMTNhNjU4Y2VjNzgwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-17T22:09:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-17T22:09:27Z"}, "message": "re PR c++/33911 (attribute deprecated vs. templates)\n\n\tPR c++/33911\ngcc/cp/\n\t* call.c (build_call_a): Don't warn_deprecated_use here.\n\t(build_over_call): Or here.\n\t* decl2.c (mark_used): Do it here.\n\t(is_late_template_attribute): Attribute deprecated is not deferred.\n\t(cplus_decl_attributes): Propagate TREE_DEPRECATED out to the template.\n\t* parser.c (cp_parser_template_name): Warn about deprecated template.\n\t(cp_parser_template_argument): Likewise.\nlibstdc++-v3/\n\t* include/backward/binders.h: Suppress -Wdeprecated-declarations.\n\t* include/ext/array_allocator.h: Likewise.\n\nFrom-SVN: r217677", "tree": {"sha": "43393cf81b5de470bf2fc196aad45e02ec102856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43393cf81b5de470bf2fc196aad45e02ec102856"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f7282e2cb8e65e77e97001b02a13a658cec7805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7282e2cb8e65e77e97001b02a13a658cec7805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f7282e2cb8e65e77e97001b02a13a658cec7805", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7282e2cb8e65e77e97001b02a13a658cec7805/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60408d8b5e83acb9ea0912f6b75eb19d68aba590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60408d8b5e83acb9ea0912f6b75eb19d68aba590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60408d8b5e83acb9ea0912f6b75eb19d68aba590"}], "stats": {"total": 79, "additions": 68, "deletions": 11}, "files": [{"sha": "6e7f657c6eeec449331fed328fa1afe531a495c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -1,5 +1,14 @@\n 2014-11-17  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/33911\n+\t* call.c (build_call_a): Don't warn_deprecated_use here.\n+\t(build_over_call): Or here.\n+\t* decl2.c (mark_used): Do it here.\n+\t(is_late_template_attribute): Attribute deprecated is not deferred.\n+\t(cplus_decl_attributes): Propagate TREE_DEPRECATED out to the template.\n+\t* parser.c (cp_parser_template_name): Warn about deprecated template.\n+\t(cp_parser_template_argument): Likewise.\n+\n \tPR c++/50473\n \t* decl.c (cp_finish_decl): Don't try to process a non-dependent\n \tconstant initializer for a reference."}, {"sha": "c180890b9657317bb9c050ab85103985aa6265ec", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -387,8 +387,6 @@ build_call_a (tree function, int n, tree *argarray)\n       mark_used (decl);\n     }\n \n-  if (decl && TREE_DEPRECATED (decl))\n-    warn_deprecated_use (decl, NULL_TREE);\n   require_complete_eh_spec_types (fntype, decl);\n \n   TREE_HAS_CONSTRUCTOR (function) = (decl && DECL_CONSTRUCTOR_P (decl));\n@@ -7447,11 +7445,6 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t\t\t\tba_any, NULL, complain);\n       gcc_assert (binfo && binfo != error_mark_node);\n \n-      /* Warn about deprecated virtual functions now, since we're about\n-\t to throw away the decl.  */\n-      if (TREE_DEPRECATED (fn))\n-\twarn_deprecated_use (fn, NULL_TREE);\n-\n       argarray[0] = build_base_path (PLUS_EXPR, argarray[0], binfo, 1,\n \t\t\t\t     complain);\n       if (TREE_SIDE_EFFECTS (argarray[0]))"}, {"sha": "f3b94a93dc5b6e2d680091ae6311355d39fcbcd5", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -1204,9 +1204,9 @@ is_late_template_attribute (tree attr, tree decl)\n       /* Also defer most attributes on dependent types.  This is not\n \t necessary in all cases, but is the better default.  */\n       else if (dependent_type_p (type)\n-\t       /* But attributes abi_tag and visibility specifically apply\n-\t\t  to templates.  */\n+\t       /* But some attributes specifically apply to templates.  */\n \t       && !is_attribute_p (\"abi_tag\", name)\n+\t       && !is_attribute_p (\"deprecated\", name)\n \t       && !is_attribute_p (\"visibility\", name))\n \treturn true;\n       else\n@@ -1482,6 +1482,17 @@ cplus_decl_attributes (tree *decl, tree attributes, int flags)\n \n   if (TREE_CODE (*decl) == TYPE_DECL)\n     SET_IDENTIFIER_TYPE_VALUE (DECL_NAME (*decl), TREE_TYPE (*decl));\n+\n+  /* Propagate deprecation out to the template.  */\n+  if (TREE_DEPRECATED (*decl))\n+    if (tree ti = get_template_info (*decl))\n+      {\n+\ttree tmpl = TI_TEMPLATE (ti);\n+\ttree pattern = (TYPE_P (*decl) ? TREE_TYPE (tmpl)\n+\t\t\t: DECL_TEMPLATE_RESULT (tmpl));\n+\tif (*decl == pattern)\n+\t  TREE_DEPRECATED (tmpl) = true;\n+      }\n }\n \f\n /* Walks through the namespace- or function-scope anonymous union\n@@ -4891,6 +4902,10 @@ mark_used (tree decl, tsubst_flags_t complain)\n       return false;\n     }\n \n+  if (TREE_DEPRECATED (decl) && (complain & tf_warning)\n+      && deprecated_state != DEPRECATED_SUPPRESS)\n+    warn_deprecated_use (decl, NULL_TREE);\n+\n   /* We can only check DECL_ODR_USED on variables or functions with\n      DECL_LANG_SPECIFIC set, and these are also the only decls that we\n      might need special handling for.  */"}, {"sha": "b106f3b03cdf64d1a0762bee740a121bfa38083a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -13959,7 +13959,11 @@ cp_parser_template_name (cp_parser* parser,\n \n   /* If DECL is a template, then the name was a template-name.  */\n   if (TREE_CODE (decl) == TEMPLATE_DECL)\n-    ;\n+    {\n+      if (TREE_DEPRECATED (decl)\n+\t  && deprecated_state != DEPRECATED_SUPPRESS)\n+\twarn_deprecated_use (decl, NULL_TREE);\n+    }\n   else\n     {\n       tree fn = NULL_TREE;\n@@ -14193,7 +14197,11 @@ cp_parser_template_argument (cp_parser* parser)\n \tcp_parser_error (parser, \"expected template-name\");\n     }\n   if (cp_parser_parse_definitely (parser))\n-    return argument;\n+    {\n+      if (TREE_DEPRECATED (argument))\n+\twarn_deprecated_use (argument, NULL_TREE);\n+      return argument;\n+    }\n   /* It must be a non-type argument.  There permitted cases are given\n      in [temp.arg.nontype]:\n "}, {"sha": "31a76903cb56cc19fa64ca7aae2415dc614577b6", "filename": "gcc/testsuite/g++.dg/ext/attr-deprecated-1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-deprecated-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-deprecated-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-deprecated-1.C?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/33911\n+\n+template<typename T> struct __attribute__ ((deprecated)) S {};\n+S<int> s;\t\t\t// { dg-warning \"deprecated\" }\n+\n+template <template <class> class T> struct A { };\n+A<S> a;\t\t\t\t// { dg-warning \"deprecated\" }\n+\n+template <class T> void f() __attribute__ ((deprecated));\n+\n+int main()\n+{\n+  f<int>();\t\t\t// { dg-warning \"deprecated\" }\n+  void (*p)() = f<char>;\t// { dg-warning \"deprecated\" }\n+}"}, {"sha": "857c05e163e0369bc53836d7718e890023c84fc0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -1,3 +1,8 @@\n+2014-11-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* include/backward/binders.h: Suppress -Wdeprecated-declarations.\n+\t* include/ext/array_allocator.h: Likewise.\n+\n 2014-11-14  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* src/c++98/mt_allocator.cc: Fix assumption that sizeof(void *) is"}, {"sha": "70f8f212c5e92c891b94debf529e349f1bba63a7", "filename": "libstdc++-v3/include/backward/binders.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbinders.h?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -56,6 +56,10 @@\n #ifndef _BACKWARD_BINDERS_H\n #define _BACKWARD_BINDERS_H 1\n \n+// Suppress deprecated warning for this file.\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -173,4 +177,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n+#pragma GCC diagnostic pop\n+\n #endif /* _BACKWARD_BINDERS_H */"}, {"sha": "58cf35fc0024f277ed127d72cbb9bc741786c9f9", "filename": "libstdc++-v3/include/ext/array_allocator.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7282e2cb8e65e77e97001b02a13a658cec7805/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h?ref=5f7282e2cb8e65e77e97001b02a13a658cec7805", "patch": "@@ -38,6 +38,10 @@\n #include <type_traits>\n #endif\n \n+// Suppress deprecated warning for this file.\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n+\n namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -171,4 +175,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n+#pragma GCC diagnostic pop\n+\n #endif"}]}