{"sha": "bd65538abb6a48c97f9fd02d037b41e5a6397a70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ2NTUzOGFiYjZhNDhjOTdmOWZkMDJkMDM3YjQxZTVhNjM5N2E3MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-07T15:05:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2020-01-07T15:05:25Z"}, "message": "PR c++/47877 - -fvisibility-inlines-hidden and member templates.\n\nDECL_VISIBILITY_SPECIFIED is also true if an enclosing scope has explicit\nvisibility, and we don't want that to override -fvisibility-inlines-hidden.\nSo check for the attribute specifically on the function, like we already do\nfor template argument visibility restriction.\n\n\t* decl2.c (determine_visibility): -fvisibility-inlines-hidden beats\n\texplicit class visibility for a template.\n\nFrom-SVN: r279960", "tree": {"sha": "31186666c87d3f4b819b1ee7f2c251b168cf0b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31186666c87d3f4b819b1ee7f2c251b168cf0b80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd65538abb6a48c97f9fd02d037b41e5a6397a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd65538abb6a48c97f9fd02d037b41e5a6397a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd65538abb6a48c97f9fd02d037b41e5a6397a70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd65538abb6a48c97f9fd02d037b41e5a6397a70/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66b01cc3421055806f51ac36a8d237536970504c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b01cc3421055806f51ac36a8d237536970504c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66b01cc3421055806f51ac36a8d237536970504c"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "a7234b89467c17bf59fbb7965f86be268b005d02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bd65538abb6a48c97f9fd02d037b41e5a6397a70", "patch": "@@ -1,3 +1,9 @@\n+2020-01-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/47877 - -fvisibility-inlines-hidden and member templates.\n+\t* decl2.c (determine_visibility): -fvisibility-inlines-hidden beats\n+\texplicit class visibility for a template.\n+\n 2020-01-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* mangle.c (mangle_type_attribute_p): New function, split out from..."}, {"sha": "a641667991f7725b14af3ec448831ab1ef34af24", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=bd65538abb6a48c97f9fd02d037b41e5a6397a70", "patch": "@@ -2629,14 +2629,15 @@ determine_visibility (tree decl)\n       tree attribs = (TREE_CODE (decl) == TYPE_DECL\n \t\t      ? TYPE_ATTRIBUTES (TREE_TYPE (decl))\n \t\t      : DECL_ATTRIBUTES (decl));\n+      tree attr = lookup_attribute (\"visibility\", attribs);\n       \n       if (args != error_mark_node)\n \t{\n \t  tree pattern = DECL_TEMPLATE_RESULT (TI_TEMPLATE (tinfo));\n \n \t  if (!DECL_VISIBILITY_SPECIFIED (decl))\n \t    {\n-\t      if (!DECL_VISIBILITY_SPECIFIED (pattern)\n+\t      if (!attr\n \t\t  && determine_hidden_inline (decl))\n \t\tDECL_VISIBILITY (decl) = VISIBILITY_HIDDEN;\n \t      else\n@@ -2650,7 +2651,7 @@ determine_visibility (tree decl)\n \t  if (args\n \t      /* Template argument visibility outweighs #pragma or namespace\n \t\t visibility, but not an explicit attribute.  */\n-\t      && !lookup_attribute (\"visibility\", attribs))\n+\t      && !attr)\n \t    {\n \t      int depth = TMPL_ARGS_DEPTH (args);\n \t      if (DECL_VISIBILITY_SPECIFIED (decl))"}, {"sha": "2937f35d9a64c0991445b566a7bdd91829e0cfa1", "filename": "gcc/testsuite/g++.dg/ext/visibility/fvisibility-inlines-hidden-5.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Ffvisibility-inlines-hidden-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Ffvisibility-inlines-hidden-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Ffvisibility-inlines-hidden-5.C?ref=bd65538abb6a48c97f9fd02d037b41e5a6397a70", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/47877\n+// { dg-options \"-fvisibility-inlines-hidden\" }\n+// { dg-require-visibility \"\" }\n+// { dg-final { scan-hidden \"_ZN3Foo3barIS_EEvv\" } }\n+\n+struct __attribute__((visibility(\"default\"))) Foo {\n+  template <class C> inline void bar() {};\n+};\n+\n+int main()\n+{\n+  Foo().bar<Foo>();\n+}"}, {"sha": "9ca9ab58ec020074a9ff8cdf6140563eaa3e1ec2", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd65538abb6a48c97f9fd02d037b41e5a6397a70/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=bd65538abb6a48c97f9fd02d037b41e5a6397a70", "patch": "@@ -2903,8 +2903,8 @@ extern void decl_value_expr_insert (tree, tree);\n #define DECL_VISIBILITY(NODE) \\\n   (DECL_WITH_VIS_CHECK (NODE)->decl_with_vis.visibility)\n \n-/* Nonzero means that the decl had its visibility specified rather than\n-   being inferred.  */\n+/* Nonzero means that the decl (or an enclosing scope) had its\n+   visibility specified rather than being inferred.  */\n #define DECL_VISIBILITY_SPECIFIED(NODE) \\\n   (DECL_WITH_VIS_CHECK (NODE)->decl_with_vis.visibility_specified)\n "}]}