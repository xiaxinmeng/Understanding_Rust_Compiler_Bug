{"sha": "e8095e803fe2b9d3b1200beeb2cbd47d2f419441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwOTVlODAzZmUyYjlkM2IxMjAwYmVlYjJjYmQ0N2QyZjQxOTQ0MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-15T14:43:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-15T14:43:42Z"}, "message": "(set_nonzero_bits_and_sign_copies): Don't record data for a a pseudo that is undefined on entry to a function.\n\n(set_nonzero_bits_and_sign_copies): Don't record data for a a pseudo that is\nundefined on entry to a function.\nWhen a pseudo is clobbered, show we don't know anything about it.\n\nFrom-SVN: r4471", "tree": {"sha": "e5299038e17290a0f2a0eeb6b7f02ba20accf8d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5299038e17290a0f2a0eeb6b7f02ba20accf8d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8095e803fe2b9d3b1200beeb2cbd47d2f419441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8095e803fe2b9d3b1200beeb2cbd47d2f419441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8095e803fe2b9d3b1200beeb2cbd47d2f419441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8095e803fe2b9d3b1200beeb2cbd47d2f419441/comments", "author": null, "committer": null, "parents": [{"sha": "8c25f9f8319413dd6bbafc9e4971fb1909436ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c25f9f8319413dd6bbafc9e4971fb1909436ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c25f9f8319413dd6bbafc9e4971fb1909436ad0"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "e53d1a6b53f194526f79dc3d7e66e2820ee2ebc3", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8095e803fe2b9d3b1200beeb2cbd47d2f419441/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8095e803fe2b9d3b1200beeb2cbd47d2f419441/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e8095e803fe2b9d3b1200beeb2cbd47d2f419441", "patch": "@@ -666,10 +666,18 @@ set_nonzero_bits_and_sign_copies (x, set)\n       && REGNO (x) >= FIRST_PSEUDO_REGISTER\n       && reg_n_sets[REGNO (x)] > 1\n       && reg_basic_block[REGNO (x)] < 0\n+      /* If this register is undefined at the start of the file, we can't\n+\t say what its contents were.  */\n+      && ! (basic_block_live_at_start[0][REGNO (x) / REGSET_ELT_BITS]\n+\t    & ((REGSET_ELT_TYPE) 1 << (REGNO (x) % REGSET_ELT_BITS)))\n       && GET_MODE_BITSIZE (GET_MODE (x)) <= HOST_BITS_PER_WIDE_INT)\n     {\n       if (GET_CODE (set) == CLOBBER)\n-\treturn;\n+\t{\n+\t  reg_nonzero_bits[REGNO (x)] = GET_MODE_MASK (GET_MODE (x));\n+\t  reg_sign_bit_copies[REGNO (x)] = 0;\n+\t  return;\n+\t}\n \n       /* If this is a complex assignment, see if we can convert it into a\n \t simple assignment.  */"}]}