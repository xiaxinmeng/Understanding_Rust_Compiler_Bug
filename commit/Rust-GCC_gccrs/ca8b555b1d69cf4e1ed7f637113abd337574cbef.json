{"sha": "ca8b555b1d69cf4e1ed7f637113abd337574cbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4YjU1NWIxZDY5Y2Y0ZTFlZDdmNjM3MTEzYWJkMzM3NTc0Y2JlZg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2008-02-04T22:36:26Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-02-04T22:36:26Z"}, "message": "target-supports.exp (check_effective_target_hard_float): Only use the preprocessor tests for mips*-*-* and xtensa-*-*.\n\n\t* lib/target-supports.exp (check_effective_target_hard_float): Only\n\tuse the preprocessor tests for mips*-*-* and xtensa-*-*.  For all\n\tother targets, grep for a call insn in the rtl expand dump for an\n\tadd of two doubles.\n\t(target_compile): Support generating rtl dumps as output.\n\nFrom-SVN: r132102", "tree": {"sha": "5d245c2e555de856384e94d05d7872e24fda0b56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d245c2e555de856384e94d05d7872e24fda0b56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca8b555b1d69cf4e1ed7f637113abd337574cbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8b555b1d69cf4e1ed7f637113abd337574cbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8b555b1d69cf4e1ed7f637113abd337574cbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8b555b1d69cf4e1ed7f637113abd337574cbef/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba6e57ba62158ff6fb72948557eef72530fcad18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6e57ba62158ff6fb72948557eef72530fcad18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6e57ba62158ff6fb72948557eef72530fcad18"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "60348106696d12861699837c456324e97594ef56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8b555b1d69cf4e1ed7f637113abd337574cbef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8b555b1d69cf4e1ed7f637113abd337574cbef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca8b555b1d69cf4e1ed7f637113abd337574cbef", "patch": "@@ -1,3 +1,11 @@\n+2008-02-04  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_hard_float): Only\n+\tuse the preprocessor tests for mips*-*-* and xtensa-*-*.  For all\n+\tother targets, grep for a call insn in the rtl expand dump for an\n+\tadd of two doubles.\n+\t(target_compile): Support generating rtl dumps as output.\n+\n 2008-02-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33631"}, {"sha": "1286a981cb22a4b67d9c6c7cb109f5b949bb7e83", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8b555b1d69cf4e1ed7f637113abd337574cbef/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8b555b1d69cf4e1ed7f637113abd337574cbef/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ca8b555b1d69cf4e1ed7f637113abd337574cbef", "patch": "@@ -44,18 +44,32 @@ proc check_compile {basename type contents args} {\n \t\"*// C++*\" { set src ${basename}[pid].cc }\n \tdefault { set src ${basename}[pid].c }\n     }\n-    switch $type {\n+    set compile_type $type\n+    switch -glob $type {\n \tassembly { set output ${basename}[pid].s }\n \tobject { set output ${basename}[pid].o }\n \texecutable { set output ${basename}[pid].exe }\n+\t\"rtl-*\" {\n+\t    set output ${basename}[pid].s\n+\t    lappend options \"additional_flags=-fdump-$type\"\n+\t    set compile_type assembly\n+\t}\n     }\n     set f [open $src \"w\"]\n     puts $f $contents\n     close $f\n-    set lines [${tool}_target_compile $src $output $type \"$options\"]\n+    set lines [${tool}_target_compile $src $output $compile_type \"$options\"]\n     file delete $src\n \n-    return [list $lines $output]\n+    set scan_output $output\n+    # Don't try folding this into the switch above; calling \"glob\" before the\n+    # file is created won't work.\n+    if [regexp \"rtl-(.*)\" $type dummy rtl_type] {\n+\tset scan_output \"[glob $src.\\[0-9\\]\\[0-9\\]\\[0-9\\]r.$rtl_type]\"\n+\tfile delete $output\n+    }\n+\n+    return [list $lines $scan_output]\n }\n \n proc current_target_name { } {\n@@ -565,12 +579,19 @@ proc check_effective_target_mpaired_single { } {\n # Return true if the target has access to FPU instructions.\n \n proc check_effective_target_hard_float { } {\n-    return [check_no_compiler_messages hard_float assembly {\n-\t#if ((defined __mips \\\n-\t      && (defined __mips_soft_float || defined __mips16)) \\\n-\t     || (defined __xtensa__ && defined __XTENSA_SOFT_FLOAT__))\n-\t#error FOO\n-\t#endif\n+    if { [istarget mips*-*-*] || [istarget xtensa-*-*] } {\n+\treturn [check_no_compiler_messages hard_float assembly {\n+\t\t#if ((defined __mips \\\n+\t\t      && (defined __mips_soft_float || defined __mips16)) \\\n+\t\t || (defined __xtensa__ && defined __XTENSA_SOFT_FLOAT__))\n+\t\t#error FOO\n+\t\t#endif\n+\t}]\n+    }\n+\n+    # The generic test equates hard_float with \"no call for adding doubles\".\n+    return [check_no_messages_and_pattern hard_float \"!\\\\(call\" rtl-expand {\n+\tdouble a (double b, double c) { return b + c; }\n     }]\n }\n "}]}