{"sha": "792ae36d0f768990b864d55a8a74fb92542ded0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkyYWUzNmQwZjc2ODk5MGI4NjRkNTVhOGE3NGZiOTI1NDJkZWQwZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-09-05T15:52:44Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-09-05T15:52:44Z"}, "message": "* gcc.dg/wtr-int-type-1.c: Fix for 64-bit platforms.\n\nFrom-SVN: r36160", "tree": {"sha": "187d8f0b5ca7a87b89b49f0d015f8aaa3382e194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/187d8f0b5ca7a87b89b49f0d015f8aaa3382e194"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/792ae36d0f768990b864d55a8a74fb92542ded0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/792ae36d0f768990b864d55a8a74fb92542ded0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/792ae36d0f768990b864d55a8a74fb92542ded0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/792ae36d0f768990b864d55a8a74fb92542ded0e/comments", "author": null, "committer": null, "parents": [{"sha": "7c097ee994bfda54e6aed4c57562a1f346ef2575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c097ee994bfda54e6aed4c57562a1f346ef2575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c097ee994bfda54e6aed4c57562a1f346ef2575"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "f5ca385c4d10afda38e6af732205ecb3bed1117a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/792ae36d0f768990b864d55a8a74fb92542ded0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/792ae36d0f768990b864d55a8a74fb92542ded0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=792ae36d0f768990b864d55a8a74fb92542ded0e", "patch": "@@ -1,3 +1,7 @@\n+2000-09-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/wtr-int-type-1.c: Fix for 64-bit platforms.\n+\n 2000-09-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/crash57.C: New test."}, {"sha": "c755f834ccc8c1ed8e558cd29a9b3357b01d3da9", "filename": "gcc/testsuite/gcc.dg/wtr-int-type-1.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/792ae36d0f768990b864d55a8a74fb92542ded0e/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-int-type-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/792ae36d0f768990b864d55a8a74fb92542ded0e/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-int-type-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-int-type-1.c?ref=792ae36d0f768990b864d55a8a74fb92542ded0e", "patch": "@@ -9,16 +9,37 @@ testfunc (void)\n {\n   long long i;\n   \n+  /* Octal and hex values shouldn't issue -Wtraditional warnings. */\n   i = 0x80000000;\n+  i = 0xFFFFFFFF;\n+  i = 037777777777;\n+\n   i = 0x8000000000000000;\n-  i = 9223372036854775807; /* { dg-warning \"integer constant.*with -traditional\" \"integer constant\" } */\n-  i = 4294967295; /* { dg-warning \"decimal constant|integer constant.*with -traditional\" \"integer constant\" } */\n+  i = 0xFFFFFFFFFFFFFFFF;\n+  i = 01777777777777777777777;\n+\n+  /* We expect to get either a \"width of integer constant changes with\n+     -traditional\" warning or an \"integer constant is unsigned in ISO\n+     C, signed with -traditional\" warning depending on whether we are\n+     testing on a 32 or 64 bit platform.  Either warning means the\n+     test passes and both matched by checking for \"integer constant\".  */\n+  i = 18446744073709551615; /* { dg-warning \"integer constant\" \"integer constant\" } */\n   \n-#line 18 \"sys-header.h\" 3\n+#line 29 \"sys-header.h\" 3\n /* We are in system headers now, no -Wtraditional warnings should issue.  */\n \n   i = 0x80000000;\n+  i = 0xFFFFFFFF;\n+  i = 037777777777;\n+  \n   i = 0x8000000000000000;\n+  i = 0xFFFFFFFFFFFFFFFF;\n+  i = 01777777777777777777777;\n+  \n   i = 9223372036854775807;\n-  i = 4294967295; /* { dg-warning \"decimal constant\" \"decimal constant\" } */\n+  i = 18446744073709551615;\n }\n+\n+/* Ignore \"decimal constant is so large that it is unsigned\" warnings.  */\n+/* { dg-warning \"decimal constant\" \"decimal constant\" { target *-*-* } 26 } */\n+/* { dg-warning \"decimal constant\" \"decimal constant\" { target *-*-* } 40 } */"}]}