{"sha": "3905a1b25a31c60a66b3736af9c71bc3cad8cdc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkwNWExYjI1YTMxYzYwYTY2YjM3MzZhZjljNzFiYzNjYWQ4Y2RjMg==", "commit": {"author": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2007-12-13T13:58:18Z"}, "committer": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2007-12-13T13:58:18Z"}, "message": "ipa-struct-reorg.c (is_candidate): Print information to dump file when the type is initialized.\n\n2007-12-13  Olga Golovanevsky  <olga@il.ibm.com>\n\n\t* ipa-struct-reorg.c (is_candidate): Print information to dump \n\tfile when the type is initialized.\n\t(get_stmt_accesses):  Likewise when a structure has bitfields\n\tor field access is too complicate.\n\t(safe_cond_expr_check): Likewise for unsafe condition expressions.\n\t(exclude_cold_structs): Likewise for cold structures.\n\t(collect_structures): Suppress redundant print when there are \n\tno structures to transform.\n\t(do_reorg): Print to dump file a number of structures that \n\twill be transformed.\n\t(dump_new_types): Print a number of new types to replace \n\tan original structure type.\n\nFrom-SVN: r130894", "tree": {"sha": "e4aa0be6ca24fdc3cae564817848efca333e910d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4aa0be6ca24fdc3cae564817848efca333e910d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2/comments", "author": null, "committer": null, "parents": [{"sha": "65e79ca2f92de1e6430c5b3687df5b90736e5452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e79ca2f92de1e6430c5b3687df5b90736e5452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e79ca2f92de1e6430c5b3687df5b90736e5452"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "3cf9ec7d09b6226e898d5434c5717eac751d8cf2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3905a1b25a31c60a66b3736af9c71bc3cad8cdc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3905a1b25a31c60a66b3736af9c71bc3cad8cdc2", "patch": "@@ -1,3 +1,18 @@\n+2007-12-13  Olga Golovanevsky  <olga@il.ibm.com>\n+\n+\t* ipa-struct-reorg.c (is_candidate): Print information to dump \n+\tfile when the type is initialized.\n+\t(get_stmt_accesses):  Likewise when a structure has bitfields\n+\tor field access is too complicate.\n+\t(safe_cond_expr_check): Likewise for unsafe condition expressions.\n+\t(exclude_cold_structs): Likewise for cold structures.\n+\t(collect_structures): Suppress redundant print when there are \n+\tno structures to transform.\n+\t(do_reorg): Print to dump file a number of structures that \n+\twill be transformed.\n+\t(dump_new_types): Print a number of new types to replace \n+\tan original structure type.\n+\t\n 2007-12-13  Golovanevsky Olga  <olga@il.ibm.com>\n \n \t* doc/invoke.texi (Optimiza Options): Document new -fipa-struct-reorg"}]}