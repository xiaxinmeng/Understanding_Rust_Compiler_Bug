{"sha": "091c8dfd4c09098d29f8bd129d993e8a7788d61a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxYzhkZmQ0YzA5MDk4ZDI5ZjhiZDEyOWQ5OTNlOGE3Nzg4ZDYxYQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-12-12T21:48:07Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-12-12T21:48:07Z"}, "message": "Loks of changes so we can better compile from source.\n\n\ufffd\nLoks of changes so we can better compile from source.  See ChangeLog.\n\nFrom-SVN: r24278", "tree": {"sha": "e7d3b4a8e356829d88d60bb6369360c08aa7d446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d3b4a8e356829d88d60bb6369360c08aa7d446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091c8dfd4c09098d29f8bd129d993e8a7788d61a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091c8dfd4c09098d29f8bd129d993e8a7788d61a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091c8dfd4c09098d29f8bd129d993e8a7788d61a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091c8dfd4c09098d29f8bd129d993e8a7788d61a/comments", "author": null, "committer": null, "parents": [{"sha": "4cc4a45b0395603ae36223aa977075b129ea1935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc4a45b0395603ae36223aa977075b129ea1935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc4a45b0395603ae36223aa977075b129ea1935"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "49c543b81c797cbb716e21c43bc9cb88eb98c31d", "filename": "gcc/java/class.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091c8dfd4c09098d29f8bd129d993e8a7788d61a/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091c8dfd4c09098d29f8bd129d993e8a7788d61a/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=091c8dfd4c09098d29f8bd129d993e8a7788d61a", "patch": "@@ -637,6 +637,34 @@ build_class_ref (type)\n \t{\n \t  char *name;\n \t  char buffer[25];\n+\t  if (flag_emit_class_files)\n+\t    {\n+\t      char *prim_class_name;\n+\t      tree prim_class;\n+\t      if (type == char_type_node)\n+\t\tprim_class_name = \"java.lang.Character\";\n+\t      else if (type == boolean_type_node)\n+\t\tprim_class_name = \"java.lang.Boolean\";\n+\t      else if (type == byte_type_node)\n+\t\tprim_class_name = \"java.lang.Byte\";\n+\t      else if (type == short_type_node)\n+\t\tprim_class_name = \"java.lang.Short\";\n+\t      else if (type == int_type_node)\n+\t\tprim_class_name = \"java.lang.Integer\";\n+\t      else if (type == long_type_node)\n+\t\tprim_class_name = \"java.lang.Long\";\n+\t      else if (type == float_type_node)\n+                prim_class_name = \"java.lang.Float\";\n+\t      else if (type == double_type_node)\n+                prim_class_name = \"java.lang.Double\";\n+\t      else if (type == void_type_node)\n+                prim_class_name = \"java.lang.Void\";\n+\t      else\n+\t\tfatal (\"internal error - bad type to build_class_ref\");\n+\t      prim_class = lookup_class (get_identifier (prim_class_name));\n+\t      return build (COMPONENT_REF, NULL_TREE,\n+\t\t\t    prim_class, TYPE_identifier_node);\n+\t    }\n \t  decl_name = TYPE_NAME (type);\n \t  if (TREE_CODE (decl_name) == TYPE_DECL)\n \t    decl_name = DECL_NAME (decl_name);"}, {"sha": "d5a47b32d801fe67a5369050aa8f00752e8627d1", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091c8dfd4c09098d29f8bd129d993e8a7788d61a/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091c8dfd4c09098d29f8bd129d993e8a7788d61a/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=091c8dfd4c09098d29f8bd129d993e8a7788d61a", "patch": "@@ -792,7 +792,7 @@ DEFUN(main, (argc, argv),\n       for (; argi < argc; argi++)\n \t{\n \t  char *arg = argv[argi];\n-\t  char* class_filename = find_class (arg, strlen (arg), jcf, 1);\n+\t  char* class_filename = find_class (arg, strlen (arg), jcf, 0);\n \t  if (class_filename == NULL)\n \t    class_filename = find_classfile (arg, jcf, NULL);\n \t  if (class_filename == NULL)"}]}