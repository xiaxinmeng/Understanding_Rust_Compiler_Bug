{"sha": "d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiODAzM2YzZTRmNTlkNWZmNTRhYjY4ZmU1NjY3NDY3YTUyYTI3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-02-12T18:31:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-02-12T18:31:53Z"}, "message": "re PR inline-asm/35160 (local-alloc introduces sharing of the same pseudo/hard reg between different output regs in inline asm)\n\n\tPR inline-asm/35160\n\t* function.c (match_asm_constraints_1): Don't replace the same input\n\tmultiple times.\n\n\t* gcc.target/i386/pr35160.c: New test.\n\nFrom-SVN: r132263", "tree": {"sha": "cc86a9d5f9cae1c352e371479313945266e39ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc86a9d5f9cae1c352e371479313945266e39ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e250fa218c90851d585ee46240201fcdec857f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e250fa218c90851d585ee46240201fcdec857f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e250fa218c90851d585ee46240201fcdec857f9"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "553f34922c596be63c8ca0b8254941e546469d86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "patch": "@@ -1,3 +1,9 @@\n+2008-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR inline-asm/35160\n+\t* function.c (match_asm_constraints_1): Don't replace the same input\n+\tmultiple times.\n+\n 2008-02-12  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.h (AVR_HAVE_RAMPZ): Define."}, {"sha": "514d1a6e9b0b0648303fe019f095330abb5149c7", "filename": "gcc/function.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "patch": "@@ -1,6 +1,6 @@\n /* Expands front end tree to back end RTL for GCC.\n    Copyright (C) 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -5683,7 +5683,9 @@ match_asm_constraints_1 (rtx insn, rtx *p_sets, int noutputs)\n   rtx op = SET_SRC (p_sets[0]);\n   int ninputs = ASM_OPERANDS_INPUT_LENGTH (op);\n   rtvec inputs = ASM_OPERANDS_INPUT_VEC (op);\n+  bool *output_matched = alloca (noutputs * sizeof (bool));\n \n+  memset (output_matched, 0, noutputs * sizeof (bool));\n   for (i = 0; i < ninputs; i++)\n     {\n       rtx input, output, insns;\n@@ -5713,6 +5715,20 @@ match_asm_constraints_1 (rtx insn, rtx *p_sets, int noutputs)\n       if (j != ninputs)\n \tcontinue;\n \n+      /* Avoid changing the same input several times.  For\n+\t asm (\"\" : \"=mr\" (out1), \"=mr\" (out2) : \"0\" (in), \"1\" (in));\n+\t only change in once (to out1), rather than changing it\n+\t first to out1 and afterwards to out2.  */\n+      if (i > 0)\n+\t{\n+\t  for (j = 0; j < noutputs; j++)\n+\t    if (output_matched[j] && input == SET_DEST (p_sets[j]))\n+\t      break;\n+\t  if (j != noutputs)\n+\t    continue;\n+\t}\n+      output_matched[match] = true;\n+\n       start_sequence ();\n       emit_move_insn (output, input);\n       insns = get_insns ();"}, {"sha": "40c0ba2165d4c30a3a70d37dcb90a97d9b0e2e25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "patch": "@@ -1,5 +1,8 @@\n 2008-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/35160\n+\t* gcc.target/i386/pr35160.c: New test.\n+\n \tPR c++/34862\n \t* g++.dg/init/new27.C: New test.\n "}, {"sha": "587b846312544d0ebaaf14b7e2c140a89a4fb1c1", "filename": "gcc/testsuite/gcc.target/i386/pr35160.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b8033f3e4f59d5ff54ab68fe5667467a52a273/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c?ref=d7b8033f3e4f59d5ff54ab68fe5667467a52a273", "patch": "@@ -0,0 +1,31 @@\n+/* PR inline-asm/35160 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+void\n+__attribute__((noinline))\n+foo (unsigned int *y)\n+{\n+   unsigned int c0, c1, c2, d0, d1, d2;\n+   d0 = 0; d1 = 0; d2 = 0; c0 = c1 = c2 = 0;\n+\n+   __asm__ (\"movl $7, %k0; movl $8, %k1; movl $9, %k2\"\n+\t    : \"+r\" (d0), \"+r\" (d1), \"+r\" (d2));\n+   __asm__ (\"movl %3, %0; movl %4, %1; movl %5, %2\"\n+\t    : \"+r\" (c0), \"+r\" (c1), \"+r\" (c2), \"+r\" (d0), \"+r\" (d1), \"+r\" (d2));\n+   y[0] = c0;\n+   y[1] = c1;\n+   y[2] = c2;\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int y[3];\n+  foo (y);\n+  if (y[0] != 7 || y[1] != 8 || y[2] != 9)\n+    abort ();\n+  return 0;\n+}"}]}