{"sha": "2ab2694476c9fc87f0cabf7021af4624eb62c87c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiMjY5NDQ3NmM5ZmM4N2YwY2FiZjcwMjFhZjQ2MjRlYjYyYzg3Yw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-26T01:33:15Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-26T01:33:15Z"}, "message": "gcc.dg/tree-ssa/forwprop-36.c: Adjust for mmix\n\nThe label of interest here is \"b.0_2\" for\ne.g. x86_64-pc-linux-gnu but \"b::1_2\" for mmix-knuth-mmixware.\nThe test seems to be of some interest for mmix (hey, gcc\nopen-coded 128-bit integer support behind my back!) so I didn't\nwant to just disable it.  I also didn't want to obscure the\nmatching pattern by generalizing it, so instead I added a\nseparate matching pattern.\n\ngcc/testsuite:\n\t* gcc.dg/tree-ssa/forwprop-36.c: Adjust for mmix.", "tree": {"sha": "a8c3e80203ccb0daa4410ce182a7d615521da7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8c3e80203ccb0daa4410ce182a7d615521da7c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ab2694476c9fc87f0cabf7021af4624eb62c87c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab2694476c9fc87f0cabf7021af4624eb62c87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab2694476c9fc87f0cabf7021af4624eb62c87c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab2694476c9fc87f0cabf7021af4624eb62c87c/comments", "author": null, "committer": null, "parents": [{"sha": "b5087b28b09c84c69fa5e80021be026f297cb31d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5087b28b09c84c69fa5e80021be026f297cb31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5087b28b09c84c69fa5e80021be026f297cb31d"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f3871bf45e86e9783d2726f68b271696f3e56987", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-36.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab2694476c9fc87f0cabf7021af4624eb62c87c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab2694476c9fc87f0cabf7021af4624eb62c87c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-36.c?ref=2ab2694476c9fc87f0cabf7021af4624eb62c87c", "patch": "@@ -21,4 +21,5 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"if \\\\(b.0_\\[0-9\\]+ != 0\\\\)\" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump \"if \\\\(b.0_\\[0-9\\]+ != 0\\\\)\" \"cddce1\" { target { ! mmix-knuth-mmixware } } } } */\n+/* { dg-final { scan-tree-dump \"if \\\\(b::1_\\[0-9\\]+ != 0\\\\)\" \"cddce1\" { target { mmix-knuth-mmixware } } } } */"}]}