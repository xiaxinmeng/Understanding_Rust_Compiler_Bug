{"sha": "2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjYjBkNWI1OWUwNWIxODY5NDE3M2M0YzE5NGJjZWRjMTk1NmZmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-06T07:49:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-06T07:49:59Z"}, "message": "omp-low.c (omp_find_scan): Make static.\n\n\t* omp-low.c (omp_find_scan): Make static.\n\t(lower_omp_for_scan): Fix order of merge arguments in input phase of\n\tthe second loop, var2 represents the first partial sum and so needs\n\tto go before rprivb[ivar].\n\nFrom-SVN: r273155", "tree": {"sha": "4f662dd6db39933965bdc6ba46309c61d4901739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f662dd6db39933965bdc6ba46309c61d4901739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcb0d5b59e05b18694173c4c194bcedc1956ff8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e954337f3ce8e458ffbd7d1539a35413a24c73bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e954337f3ce8e458ffbd7d1539a35413a24c73bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e954337f3ce8e458ffbd7d1539a35413a24c73bf"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "dc75cbbe7b1032c8ff520723cbb9d820a9afdda1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dcb0d5b59e05b18694173c4c194bcedc1956ff8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dcb0d5b59e05b18694173c4c194bcedc1956ff8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "patch": "@@ -1,3 +1,10 @@\n+2019-07-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-low.c (omp_find_scan): Make static.\n+\t(lower_omp_for_scan): Fix order of merge arguments in input phase of\n+\tthe second loop, var2 represents the first partial sum and so needs\n+\tto go before rprivb[ivar].\n+\n 2019-07-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/rs6000/rs6000-logue.c: Remove unused code."}, {"sha": "52834c97f7665a258aadac0e16cc8b366f94c0cc", "filename": "gcc/omp-low.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dcb0d5b59e05b18694173c4c194bcedc1956ff8/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dcb0d5b59e05b18694173c4c194bcedc1956ff8/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "patch": "@@ -9104,7 +9104,7 @@ lower_omp_for_lastprivate (struct omp_for_data *fd, gimple_seq *body_p,\n \n /* Callback for walk_gimple_seq.  Find #pragma omp scan statement.  */\n \n-tree\n+static tree\n omp_find_scan (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \t       struct walk_stmt_info *wi)\n {\n@@ -9240,8 +9240,8 @@ omp_find_scan (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n    for (i = 0; i < n; i = i + 1)\n      {\n        {\n-\t // For UDRs, this is UDR merge (rprivb[ivar], var2); r = rprivb[ivar];\n-\t r = rprivb[ivar] + var2;\n+\t // For UDRs, this is r = var2; UDR merge (r, rprivb[ivar]);\n+\t r = var2 + rprivb[ivar];\n        }\n        {\n \t // This is the scan phase from user code.\n@@ -9394,8 +9394,6 @@ lower_omp_for_scan (gimple_seq *body_p, gimple_seq *dlist, gomp_for *stmt,\n \t  {\n \t    tree placeholder = OMP_CLAUSE_REDUCTION_PLACEHOLDER (c);\n \t    tree val = var2;\n-\t    if (new_vard != new_var)\n-\t      val = build_fold_addr_expr_loc (clause_loc, val);\n \n \t    x = lang_hooks.decls.omp_clause_default_ctor\n \t\t    (c, var2, build_outer_var_ref (var, ctx));\n@@ -9420,6 +9418,9 @@ lower_omp_for_scan (gimple_seq *body_p, gimple_seq *dlist, gomp_for *stmt,\n \t\t/* Otherwise, assign to it the identity element.  */\n \t\tgimple_seq tseq = OMP_CLAUSE_REDUCTION_GIMPLE_INIT (c);\n \t\ttseq = copy_gimple_seq_and_replace_locals (tseq);\n+\n+\t\tif (new_vard != new_var)\n+\t\t  val = build_fold_addr_expr_loc (clause_loc, val);\n \t\tSET_DECL_VALUE_EXPR (new_vard, val);\n \t\tDECL_HAS_VALUE_EXPR_P (new_vard) = 1;\n \t\tSET_DECL_VALUE_EXPR (placeholder, error_mark_node);\n@@ -9469,11 +9470,19 @@ lower_omp_for_scan (gimple_seq *body_p, gimple_seq *dlist, gomp_for *stmt,\n \t    x = lang_hooks.decls.omp_clause_assign_op (c, x, var2);\n \t    gimplify_and_add (x, &mdlist);\n \n+\t    x = unshare_expr (new_var);\n+\t    x = lang_hooks.decls.omp_clause_assign_op (c, x, var2);\n+\t    gimplify_and_add (x, &input2_list);\n+\n+\t    val = rprivb_ref;\n+\t    if (new_vard != new_var)\n+\t      val = build_fold_addr_expr_loc (clause_loc, val);\n+\n \t    tseq = OMP_CLAUSE_REDUCTION_GIMPLE_MERGE (c);\n \t    tseq = copy_gimple_seq_and_replace_locals (tseq);\n \t    SET_DECL_VALUE_EXPR (new_vard, val);\n \t    DECL_HAS_VALUE_EXPR_P (new_vard) = 1;\n-\t    SET_DECL_VALUE_EXPR (placeholder, rprivb_ref);\n+\t    DECL_HAS_VALUE_EXPR_P (placeholder) = 0;\n \t    lower_omp (&tseq, ctx);\n \t    if (y)\n \t      SET_DECL_VALUE_EXPR (new_vard, y);\n@@ -9482,12 +9491,11 @@ lower_omp_for_scan (gimple_seq *body_p, gimple_seq *dlist, gomp_for *stmt,\n \t\tDECL_HAS_VALUE_EXPR_P (new_vard) = 0;\n \t\tSET_DECL_VALUE_EXPR (new_vard, NULL_TREE);\n \t      }\n+\t    SET_DECL_VALUE_EXPR (placeholder, new_var);\n+\t    DECL_HAS_VALUE_EXPR_P (placeholder) = 1;\n+\t    lower_omp (&tseq, ctx);\n \t    gimple_seq_add_seq (&input2_list, tseq);\n \n-\t    x = unshare_expr (new_var);\n-\t    x = lang_hooks.decls.omp_clause_assign_op (c, x, rprivb_ref);\n-\t    gimplify_and_add (x, &input2_list);\n-\n \t    x = build_outer_var_ref (var, ctx);\n \t    x = lang_hooks.decls.omp_clause_assign_op (c, x, rpriva_ref);\n \t    gimplify_and_add (x, &last_list);\n@@ -9545,7 +9553,7 @@ lower_omp_for_scan (gimple_seq *body_p, gimple_seq *dlist, gomp_for *stmt,\n \n \t    gimplify_assign (unshare_expr (rpriva_ref), var2, &mdlist);\n \n-\t    x = build2 (code, TREE_TYPE (new_var), rprivb_ref, var2);\n+\t    x = build2 (code, TREE_TYPE (new_var), var2, rprivb_ref);\n \t    gimplify_assign (new_var, x, &input2_list);\n \n \t    gimplify_assign (build_outer_var_ref (var, ctx), rpriva_ref,"}]}