{"sha": "7df2d73c7ee27406b56e7223f871a845d529ba22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RmMmQ3M2M3ZWUyNzQwNmI1NmU3MjIzZjg3MWE4NDVkNTI5YmEyMg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-09T00:50:33Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-09T00:50:33Z"}, "message": "constraints.md: Update list of constraints in comment block.\n\n\t* config/sh/constraints.md: Update list of constraints in\n\tcomment block.\n\t(Sr0): Remove unused memory constraint.\n\nFrom-SVN: r186234", "tree": {"sha": "3bbf0c9da3f389d35e2562f2113c835e19768561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bbf0c9da3f389d35e2562f2113c835e19768561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7df2d73c7ee27406b56e7223f871a845d529ba22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7df2d73c7ee27406b56e7223f871a845d529ba22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7df2d73c7ee27406b56e7223f871a845d529ba22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7df2d73c7ee27406b56e7223f871a845d529ba22/comments", "author": null, "committer": null, "parents": [{"sha": "5418de56f745ad75f3f72dffe4ff56f19cb061d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5418de56f745ad75f3f72dffe4ff56f19cb061d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5418de56f745ad75f3f72dffe4ff56f19cb061d1"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "2e22bcdd1cf368ff4c6c6cd6824ba1e048c61624", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7df2d73c7ee27406b56e7223f871a845d529ba22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7df2d73c7ee27406b56e7223f871a845d529ba22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7df2d73c7ee27406b56e7223f871a845d529ba22", "patch": "@@ -1,3 +1,9 @@\n+2012-04-09  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/constraints.md: Update list of constraints in\n+\tcomment block.\n+\t(Sr0): Remove unused memory constraint.\n+\n 2012-04-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* tree-pretty-print.h: Update comment."}, {"sha": "3a5fc364f9c605c62459c1f9004a44c9cce6e743", "filename": "gcc/config/sh/constraints.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7df2d73c7ee27406b56e7223f871a845d529ba22/gcc%2Fconfig%2Fsh%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7df2d73c7ee27406b56e7223f871a845d529ba22/gcc%2Fconfig%2Fsh%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fconstraints.md?ref=7df2d73c7ee27406b56e7223f871a845d529ba22", "patch": "@@ -37,10 +37,16 @@\n ;;  P27: 1 | 2 | 8 | 16\n ;;  Pso: 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128\n ;;  Psz: ~1 | ~2 | ~4 | ~8 | ~16 | ~32 | ~64 | ~128\n+;; G: Floating point 0\n+;; H: Floating point 1\n ;; Q: pc relative load operand\n ;; Rxx: reserved for exotic register classes.\n-;; Sxx: extra memory (storage) constraints\n-;;  Sua: unaligned memory operations\n+;; Sxx: extra memory constraints\n+;;  Sua: unaligned memory address\n+;;  Sbv: QImode address without displacement\n+;;  Sbw: QImode address with 12 bit displacement\n+;;  Snd: address without displacement\n+;;  Sdd: address with displacement\n ;; W: vector\n ;; Z: zero in any mode\n ;;\n@@ -251,11 +257,6 @@\n \t    (match_test \"~ival == 64\")\n \t    (match_test \"~ival == 128\"))))\n \n-(define_memory_constraint \"Sr0\"\n-  \"@internal\"\n-  (and (match_test \"memory_operand (op, GET_MODE (op))\")\n-       (match_test \"!refers_to_regno_p (R0_REG, R0_REG + 1, op, (rtx *) 0)\")))\n-\n (define_memory_constraint \"Sua\"\n   \"@internal\"\n   (and (match_test \"memory_operand (op, GET_MODE (op))\")"}]}