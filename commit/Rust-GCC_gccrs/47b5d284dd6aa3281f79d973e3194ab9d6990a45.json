{"sha": "47b5d284dd6aa3281f79d973e3194ab9d6990a45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiNWQyODRkZDZhYTMyODFmNzlkOTczZTMxOTRhYjlkNjk5MGE0NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-15T01:39:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-15T01:39:03Z"}, "message": "re PR c++/60532 (r208573 causes Firefox build failure)\n\n\tPR c++/60532\n\tPR c++/58678\n\t* search.c (get_pure_virtuals): Handle abstract dtor here.\n\t(dfs_get_pure_virtuals): Not here.\n\nFrom-SVN: r208586", "tree": {"sha": "92b4739ea80c9bbf8214849710abff39696907f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b4739ea80c9bbf8214849710abff39696907f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b5d284dd6aa3281f79d973e3194ab9d6990a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b5d284dd6aa3281f79d973e3194ab9d6990a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b5d284dd6aa3281f79d973e3194ab9d6990a45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b5d284dd6aa3281f79d973e3194ab9d6990a45/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "265a9ea76322a9b0a4c30a86cdd8833723d166fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265a9ea76322a9b0a4c30a86cdd8833723d166fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265a9ea76322a9b0a4c30a86cdd8833723d166fa"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "ca2f8c1270df253def537cf592f27a4931b07fcf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=47b5d284dd6aa3281f79d973e3194ab9d6990a45", "patch": "@@ -1,5 +1,10 @@\n 2014-03-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60532\n+\tPR c++/58678\n+\t* search.c (get_pure_virtuals): Handle abstract dtor here.\n+\t(dfs_get_pure_virtuals): Not here.\n+\n \tPR c++/58678\n \t* search.c (dfs_get_pure_virtuals): Treat the destructor of an\n \tabstract class as pure."}, {"sha": "d99e18215faf0c106f5c195a439623fa2d89da88", "filename": "gcc/cp/search.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=47b5d284dd6aa3281f79d973e3194ab9d6990a45", "patch": "@@ -2096,22 +2096,6 @@ dfs_get_pure_virtuals (tree binfo, void *data)\n \tif (DECL_PURE_VIRTUAL_P (BV_FN (virtuals)))\n \t  vec_safe_push (CLASSTYPE_PURE_VIRTUALS (type), BV_FN (virtuals));\n     }\n-  /* Treat a virtual destructor in an abstract class as pure even if it\n-     isn't declared as pure; there is no way it would be called through the\n-     vtable except during construction, which causes undefined behavior.  */\n-  if (binfo == TYPE_BINFO (type)\n-      && CLASSTYPE_PURE_VIRTUALS (type)\n-      && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type))\n-    {\n-      tree dtor = CLASSTYPE_DESTRUCTORS (type);\n-      if (DECL_VIRTUAL_P (dtor) && !DECL_PURE_VIRTUAL_P (dtor))\n-\t{\n-\t  tree clone;\n-\t  DECL_PURE_VIRTUAL_P (dtor) = true;\n-\t  FOR_EACH_CLONE (clone, dtor)\n-\t    DECL_PURE_VIRTUAL_P (clone) = true;\n-\t}\n-    }\n \n   return NULL_TREE;\n }\n@@ -2131,6 +2115,22 @@ get_pure_virtuals (tree type)\n      which it is a primary base will contain vtable entries for the\n      pure virtuals in the base class.  */\n   dfs_walk_once (TYPE_BINFO (type), NULL, dfs_get_pure_virtuals, type);\n+\n+  /* Treat a virtual destructor in an abstract class as pure even if it\n+     isn't declared as pure; there is no way it would be called through the\n+     vtable except during construction, which causes undefined behavior.  */\n+  if (CLASSTYPE_PURE_VIRTUALS (type)\n+      && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type))\n+    {\n+      tree dtor = CLASSTYPE_DESTRUCTORS (type);\n+      if (dtor && DECL_VIRTUAL_P (dtor) && !DECL_PURE_VIRTUAL_P (dtor))\n+\t{\n+\t  tree clone;\n+\t  DECL_PURE_VIRTUAL_P (dtor) = true;\n+\t  FOR_EACH_CLONE (clone, dtor)\n+\t    DECL_PURE_VIRTUAL_P (clone) = true;\n+\t}\n+    }\n }\n \f\n /* Debug info for C++ classes can get very large; try to avoid"}, {"sha": "ceba1a60b6d6aa7880a6e6af2abfae9b01885932", "filename": "gcc/testsuite/g++.dg/other/abstract6.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b5d284dd6aa3281f79d973e3194ab9d6990a45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract6.C?ref=47b5d284dd6aa3281f79d973e3194ab9d6990a45", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/60532\n+\n+class A\n+{\n+  ~A ();\n+};\n+class B : A\n+{\n+  virtual void m () = 0;\n+};"}]}