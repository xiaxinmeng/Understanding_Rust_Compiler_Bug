{"sha": "29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhNjM5MjFkOWUwNWVhMjkzMjg2MWNlNmMxMTU0ZjNjZTliYmZlMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-01-31T05:20:17Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-01-31T05:20:17Z"}, "message": "re PR libgcj/44341 (libjava cross build fails when configured with --with-gmp=)\n\nChangeLog:\nPR libgcj/44341\n* configure.ac: Discard --with-* flags for host when configuring\ntarget libraries for cross build.\n* configure: Rebuilt.\ngcc/ChangeLog:\nPR libgcj/44341\n* doc/install.texi: Document host options discarded when cross\nconfiguring target libraries.\n\nFrom-SVN: r169430", "tree": {"sha": "5b827c5b1e4abb0059e15c7488325f2fed1d00e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b827c5b1e4abb0059e15c7488325f2fed1d00e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/comments", "author": null, "committer": null, "parents": [{"sha": "ef591d3f0591cfd815232664da45816682ca98eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef591d3f0591cfd815232664da45816682ca98eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef591d3f0591cfd815232664da45816682ca98eb"}], "stats": {"total": 107, "additions": 105, "deletions": 2}, "files": [{"sha": "97450ce3882c15914d65df723643b2f13847be10", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "patch": "@@ -1,3 +1,10 @@\n+2011-01-31  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR libgcj/44341\n+\t* configure.ac: Discard --with-* flags for host when configuring\n+\ttarget libraries for cross build.\n+\t* configure: Rebuilt.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* MAINTAINERS (linear loop transforms): Removed."}, {"sha": "cd238fb93d46fb3d4689106cd00863159e261dd0", "filename": "configure", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "patch": "@@ -7330,6 +7330,7 @@ serialization_dependencies=serdep.tmp\n # Also strip program-prefix, program-suffix, and program-transform-name,\n # so that we can pass down a consistent program-transform-name.\n baseargs=\n+tbaseargs=\n keep_next=no\n skip_next=no\n eval \"set -- $ac_configure_args\"\n@@ -7345,6 +7346,7 @@ do\n \tac_arg=`echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n     esac\n     baseargs=\"$baseargs '$ac_arg'\"\n+    tbaseargs=\"$tbaseargs '$ac_arg'\"\n     keep_next=no\n     continue\n   fi\n@@ -7366,11 +7368,45 @@ do\n       ;;\n   esac\n \n+  skip_targ=no\n+  case $ac_arg in\n+\n+  --with-* | --without-*)\n+    libopt=`echo \"$ac_arg\" | sed -e 's,^--[^-_]*[-_],,' -e 's,=.*$,,'`\n+\n+    case $libopt in\n+    *[-_]include)\n+      lib=`echo \"$libopt\" | sed 's,[-_]include$,,'`\n+      ;;\n+    *[-_]lib)\n+      lib=`echo \"$libopt\" | sed 's,[-_]lib$,,'`\n+      ;;\n+    *)\n+      lib=$libopt\n+      ;;\n+    esac\n+\n+\n+    case $lib in\n+    mpc | mpfr | gmp | ppl | cloog)\n+      # If we're processing --with-$lib, --with-$lib-include or\n+      # --with-$lib-lib, for one of the libs above, and target is\n+      # different from host, don't pass the current argument to any\n+      # target library's configure.\n+      if test x$is_cross_compiler = xyes; then\n+        skip_targ=yes\n+      fi\n+      ;;\n+    esac\n+    ;;\n+  esac\n+\n   case \"$ac_arg\" in\n     --cache-file=/dev/null | \\\n     -cache-file=/dev/null )\n       # Handled here to avoid the test to skip args below.\n       baseargs=\"$baseargs '$ac_arg'\"\n+      tbaseargs=\"$tbaseargs '$ac_arg'\"\n       # Assert: $separate_arg should always be no.\n       keep_next=$separate_arg\n       ;;\n@@ -7401,6 +7437,9 @@ do\n \t  ac_arg=`echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n       esac\n       baseargs=\"$baseargs '$ac_arg'\"\n+      if test X\"$skip_targ\" = Xno; then\n+        tbaseargs=\"$tbaseargs '$ac_arg'\"\n+      fi\n       keep_next=$separate_arg\n       ;;\n     *)\n@@ -7427,10 +7466,13 @@ EOF_SED\n gcc_transform_name=`cat conftestsed.out`\n rm -f conftestsed.out\n baseargs=\"$baseargs --program-transform-name='${gcc_transform_name}'\"\n+tbaseargs=\"$tbaseargs --program-transform-name='${gcc_transform_name}'\"\n if test \"$silent\" = yes; then\n   baseargs=\"$baseargs --silent\"\n+  tbaseargs=\"$tbaseargs --silent\"\n fi\n baseargs=\"$baseargs --disable-option-checking\"\n+tbaseargs=\"$tbaseargs --disable-option-checking\"\n \n # Record and document user additions to sub configure arguments.\n \n@@ -7456,7 +7498,7 @@ esac\n # This seems to be due to autoconf 2.5x stupidity.\n host_configargs=\"$host_configargs --cache-file=./config.cache ${extra_host_args} ${baseargs}\"\n \n-target_configargs=\"$target_configargs ${baseargs}\"\n+target_configargs=\"$target_configargs ${tbaseargs}\"\n \n # Passing a --with-cross-host argument lets the target libraries know\n # whether they are being built with a cross-compiler or being built"}, {"sha": "e9048ebffbbcd39db263c5083970152c94361b25", "filename": "configure.ac", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "patch": "@@ -2845,6 +2845,7 @@ AC_SUBST_FILE(serialization_dependencies)\n # Also strip program-prefix, program-suffix, and program-transform-name,\n # so that we can pass down a consistent program-transform-name.\n baseargs=\n+tbaseargs=\n keep_next=no\n skip_next=no\n eval \"set -- $ac_configure_args\"\n@@ -2860,6 +2861,7 @@ do\n \tac_arg=`echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n     esac\n     baseargs=\"$baseargs '$ac_arg'\"\n+    tbaseargs=\"$tbaseargs '$ac_arg'\"\n     keep_next=no\n     continue\n   fi\n@@ -2881,11 +2883,45 @@ do\n       ;;\n   esac\n \n+  skip_targ=no\n+  case $ac_arg in\n+changequote(,)\n+  --with-* | --without-*)\n+    libopt=`echo \"$ac_arg\" | sed -e 's,^--[^-_]*[-_],,' -e 's,=.*$,,'`\n+\n+    case $libopt in\n+    *[-_]include)\n+      lib=`echo \"$libopt\" | sed 's,[-_]include$,,'`\n+      ;;\n+    *[-_]lib)\n+      lib=`echo \"$libopt\" | sed 's,[-_]lib$,,'`\n+      ;;\n+    *)\n+      lib=$libopt\n+      ;;\n+    esac\n+changequote([,])\n+\n+    case $lib in\n+    mpc | mpfr | gmp | ppl | cloog)\n+      # If we're processing --with-$lib, --with-$lib-include or\n+      # --with-$lib-lib, for one of the libs above, and target is\n+      # different from host, don't pass the current argument to any\n+      # target library's configure.\n+      if test x$is_cross_compiler = xyes; then\n+        skip_targ=yes\n+      fi\n+      ;;\n+    esac\n+    ;;\n+  esac\n+\n   case \"$ac_arg\" in\n     --cache-file=/dev/null | \\\n     -cache-file=/dev/null )\n       # Handled here to avoid the test to skip args below.\n       baseargs=\"$baseargs '$ac_arg'\"\n+      tbaseargs=\"$tbaseargs '$ac_arg'\"\n       # Assert: $separate_arg should always be no.\n       keep_next=$separate_arg\n       ;;\n@@ -2916,6 +2952,9 @@ do\n \t  ac_arg=`echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n       esac\n       baseargs=\"$baseargs '$ac_arg'\"\n+      if test X\"$skip_targ\" = Xno; then\n+        tbaseargs=\"$tbaseargs '$ac_arg'\"\n+      fi\n       keep_next=$separate_arg\n       ;;\n     *)\n@@ -2942,10 +2981,13 @@ EOF_SED\n gcc_transform_name=`cat conftestsed.out`\n rm -f conftestsed.out\n baseargs=\"$baseargs --program-transform-name='${gcc_transform_name}'\"\n+tbaseargs=\"$tbaseargs --program-transform-name='${gcc_transform_name}'\"\n if test \"$silent\" = yes; then\n   baseargs=\"$baseargs --silent\"\n+  tbaseargs=\"$tbaseargs --silent\"\n fi\n baseargs=\"$baseargs --disable-option-checking\"\n+tbaseargs=\"$tbaseargs --disable-option-checking\"\n \n # Record and document user additions to sub configure arguments.\n AC_ARG_VAR([build_configargs],\n@@ -2974,7 +3016,7 @@ esac\n # This seems to be due to autoconf 2.5x stupidity.\n host_configargs=\"$host_configargs --cache-file=./config.cache ${extra_host_args} ${baseargs}\"\n \n-target_configargs=\"$target_configargs ${baseargs}\"\n+target_configargs=\"$target_configargs ${tbaseargs}\"\n \n # Passing a --with-cross-host argument lets the target libraries know\n # whether they are being built with a cross-compiler or being built"}, {"sha": "5d25767cf9e9933585e20260fe37395496ac149a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "patch": "@@ -1,3 +1,9 @@\n+2011-01-31  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR libgcj/44341\n+\t* doc/install.texi: Document host options discarded when cross\n+\tconfiguring target libraries.\n+\n 2011-01-31  Alexandre Oliva  <aoliva@redhat.com>\n \n \tReverted:"}, {"sha": "b953d7283cf5c02fa0ba3cb78b4836fb9d4efbae", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a63921d9e05ea2932861ce6c1154f3ce9bbfe0/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=29a63921d9e05ea2932861ce6c1154f3ce9bbfe0", "patch": "@@ -1584,6 +1584,9 @@ shared libraries can be found by the dynamic linker when building and\n using GCC, for example by setting the runtime shared library path\n variable (@env{LD_LIBRARY_PATH} on GNU/Linux and Solaris systems).\n \n+These flags are applicable to the host platform only.  When building\n+a cross compiler, they will not be used to configure target libraries.\n+\n @item --with-ppl=@var{pathname}\n @itemx --with-ppl-include=@var{pathname}\n @itemx --with-ppl-lib=@var{pathname}\n@@ -1604,6 +1607,9 @@ you can explicitly specify the directory where they are installed\n shorthand assumptions are not correct, you can use the explicit\n include and lib options directly.\n \n+These flags are applicable to the host platform only.  When building\n+a cross compiler, they will not be used to configure target libraries.\n+\n @item --with-host-libstdcxx=@var{linker-args}\n If you are linking with a static copy of PPL, you can use this option\n to specify how the linker should find the standard C++ library used"}]}