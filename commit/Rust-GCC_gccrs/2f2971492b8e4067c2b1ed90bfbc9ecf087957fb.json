{"sha": "2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyOTcxNDkyYjhlNDA2N2MyYjFlZDkwYmZiYzllY2YwODc5NTdmYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-31T13:06:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-31T13:06:38Z"}, "message": "Check __STRICT_ANSI__ for 128-bit arithmetic types\n\n\t* testsuite/18_support/numeric_limits/40856.cc [__STRICT_ANSI__]: Do\n\tnot test 128-bit types.\n\t* testsuite/20_util/is_floating_point/value.cc: Likewise.\n\t* testsuite/20_util/is_integral/value.cc: Likewise.\n\t* testsuite/20_util/is_signed/value.cc: Likewise.\n\t* testsuite/20_util/is_unsigned/value.cc: Likewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Likewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Likewise.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc:\n\tLikewise.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:\n\tLikewise.\n\nFrom-SVN: r238918", "tree": {"sha": "0ec54fb0fef75d3cf7ce7e4febbd9b8bdef18942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec54fb0fef75d3cf7ce7e4febbd9b8bdef18942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7523c5eb1ae94df723ad9f8c1cbf9296e09af4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7523c5eb1ae94df723ad9f8c1cbf9296e09af4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7523c5eb1ae94df723ad9f8c1cbf9296e09af4c0"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "08f90de35cdf444bb5fc2165fd5ee0af7b1d73ec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -1,5 +1,18 @@\n 2016-07-31  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/18_support/numeric_limits/40856.cc [__STRICT_ANSI__]: Do\n+\tnot test 128-bit types.\n+\t* testsuite/20_util/is_floating_point/value.cc: Likewise.\n+\t* testsuite/20_util/is_integral/value.cc: Likewise.\n+\t* testsuite/20_util/is_signed/value.cc: Likewise.\n+\t* testsuite/20_util/is_unsigned/value.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Likewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:\n+\tLikewise.\n+\n \t* testsuite/26_numerics/headers/cstdlib/54686.c: Rename to 54686.cc.\n \n 2016-07-29  Ville Voutilainen  <ville.voutilainen@gmail.com>"}, {"sha": "7577b59ea2b05cc88d2365f2da6a5e48647293c8", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/40856.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2F40856.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2F40856.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2F40856.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -21,7 +21,7 @@\n #include <limits>\n \n // libstdc++/40856 \n-#ifdef _GLIBCXX_USE_INT128\n+#if defined _GLIBCXX_USE_INT128 && ! defined __STRICT_ANSI__\n static_assert(std::numeric_limits<__int128>::is_specialized == true, \"\");\n static_assert(std::numeric_limits<unsigned __int128>::is_specialized == true,\n \t      \"\");"}, {"sha": "c2736fae3f7c1c1d7c4c2745cc758f82550427fa", "filename": "libstdc++-v3/testsuite/20_util/is_floating_point/value.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_floating_point%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_floating_point%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_floating_point%2Fvalue.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -47,6 +47,7 @@ void test01()\n   static_assert(test_category<is_floating_point, double>(true), \"\");\n   static_assert(test_category<is_floating_point, long double>(true), \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_FLOAT128\n   static_assert(test_category<is_floating_point, __float128>(true), \"\");\n@@ -56,6 +57,7 @@ void test01()\n   static_assert(test_category<is_floating_point, __int128>(false), \"\");\n   static_assert(test_category<is_floating_point,\n \t\tunsigned __int128>(false), \"\");\n+#endif\n #endif\n \n   // Sanity check."}, {"sha": "56974dcd5028af38441ed88d27686bb0463eb4c7", "filename": "libstdc++-v3/testsuite/20_util/is_integral/value.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_integral%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_integral%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_integral%2Fvalue.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -51,6 +51,7 @@ void test01()\n   static_assert(test_category<is_integral, double>(false), \"\");\n   static_assert(test_category<is_integral, long double>(false), \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   static_assert(test_category<is_integral, __int128>(true), \"\");\n@@ -59,6 +60,7 @@ void test01()\n \n #ifdef _GLIBCXX_USE_FLOAT128\n   static_assert(test_category<is_integral, __float128>(false), \"\");\n+#endif\n #endif\n \n   // Sanity check."}, {"sha": "2e251035faab56346dd513be39abaf8fd22e846e", "filename": "libstdc++-v3/testsuite/20_util/is_signed/value.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_signed%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_signed%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_signed%2Fvalue.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -50,6 +50,7 @@ void test01()\n   static_assert(test_category<is_signed, double>(true), \"\");\n   static_assert(test_category<is_signed, long double>(true), \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   static_assert(test_category<is_signed, __int128>(true), \"\");\n@@ -58,6 +59,7 @@ void test01()\n \n #ifdef _GLIBCXX_USE_FLOAT128\n   static_assert(test_category<is_signed, __float128>(true), \"\");\n+#endif\n #endif\n \n   // Sanity check."}, {"sha": "75bec3b379a8208664ebe7605087c27cdcfce18b", "filename": "libstdc++-v3/testsuite/20_util/is_unsigned/value.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_unsigned%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_unsigned%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_unsigned%2Fvalue.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -50,6 +50,7 @@ void test01()\n   static_assert(test_category<is_unsigned, double>(false), \"\");\n   static_assert(test_category<is_unsigned, long double>(false), \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   static_assert(test_category<is_unsigned, unsigned __int128>(true), \"\");\n@@ -58,6 +59,7 @@ void test01()\n \n #ifdef _GLIBCXX_USE_FLOAT128\n   static_assert(test_category<is_unsigned, __float128>(false), \"\");\n+#endif\n #endif\n \n   // Sanity check."}, {"sha": "40b9fb8b73d186dbe88cc3615b478d01044f11e9", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-1.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -67,6 +67,7 @@ void test01()\n   static_assert( sizeof(test24_type) == sizeof(test_enum),\n                  \"make_signed<test_enum> makes type of same size\" );\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   typedef make_signed<unsigned __int128>::type  test25_type;\n@@ -77,4 +78,5 @@ void test01()\n   static_assert( is_same<test26_type, __int128>::value,\n                  \"make_signed<__int128>\" );\n #endif\n+#endif\n }"}, {"sha": "f58e8698e171b48581fcc1856a3fef48a2365010", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -60,6 +60,7 @@ void test01()\n   typedef make_signed<test_enum>::type  \ttest24_type;\n   static_assert(is_same<test24_type, short>::value, \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   typedef make_signed<unsigned __int128>::type  test25_type;\n@@ -68,4 +69,5 @@ void test01()\n   typedef make_signed<__int128>::type  \t        test26_type;\n   static_assert(is_same<test26_type, __int128>::value, \"\");\n #endif\n+#endif\n }"}, {"sha": "09b63bbd3f1d77a7e83da4b3ee4bc9a7702095c0", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-1.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -61,6 +61,7 @@ void test01()\n   static_assert(is_unsigned<test24_type>::value, \"\");\n   static_assert(sizeof(test24_type) == sizeof(test_enum), \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   typedef make_unsigned<unsigned __int128>::type test25_type;\n@@ -69,4 +70,5 @@ void test01()\n   typedef make_unsigned<__int128>::type  \t test26_type;\n   static_assert(is_same<test26_type, unsigned __int128>::value, \"\");\n #endif\n+#endif\n }"}, {"sha": "98d8bed85acd34f7c51a5f559c1a1dd1112fda2c", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2971492b8e4067c2b1ed90bfbc9ecf087957fb/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc?ref=2f2971492b8e4067c2b1ed90bfbc9ecf087957fb", "patch": "@@ -60,6 +60,7 @@ void test01()\n   typedef make_unsigned<test_enum>::type  \t  test24_type;\n   static_assert(is_same<test24_type, unsigned short>::value, \"\");\n \n+#ifndef __STRICT_ANSI__\n   // GNU Extensions.\n #ifdef _GLIBCXX_USE_INT128\n   typedef make_unsigned<unsigned __int128>::type  test25_type;\n@@ -68,4 +69,5 @@ void test01()\n   typedef make_unsigned<__int128>::type  \t  test26_type;\n   static_assert(is_same<test26_type, unsigned __int128>::value, \"\");\n #endif\n+#endif\n }"}]}