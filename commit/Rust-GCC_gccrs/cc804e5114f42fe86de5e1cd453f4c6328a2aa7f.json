{"sha": "cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4MDRlNTExNGY0MmZlODZkZTVlMWNkNDUzZjRjNjMyOGEyYWE3Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-10-25T23:15:00Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-10-25T23:15:00Z"}, "message": "decl.c (grokdeclarator): Set DECL_NONCONVERTING_P for all non-converting constructors.\n\n\t* decl.c (grokdeclarator): Set DECL_NONCONVERTING_P for all\n\tnon-converting constructors.\n\nFrom-SVN: r23325", "tree": {"sha": "ad6d92529fe2e2a86c887964a7e30b45989efcab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad6d92529fe2e2a86c887964a7e30b45989efcab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f/comments", "author": null, "committer": null, "parents": [{"sha": "224301c1b9108db2bfaf18875c4e072cfa7edef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224301c1b9108db2bfaf18875c4e072cfa7edef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224301c1b9108db2bfaf18875c4e072cfa7edef9"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "69287e3c6fa80c4a228deb9e7bc091833e164b5b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "patch": "@@ -1,3 +1,8 @@\n+1998-10-25  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* decl.c (grokdeclarator): Set DECL_NONCONVERTING_P for all\n+\tnon-converting constructors.\n+\t\n 1998-10-24  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* gxxint.texi: Correct documentation for n, N, Q, and B."}, {"sha": "5769a8871f3906ab9b371cc8569cdfaf30af22a5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc804e5114f42fe86de5e1cd453f4c6328a2aa7f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cc804e5114f42fe86de5e1cd453f4c6328a2aa7f", "patch": "@@ -10508,8 +10508,37 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t    decl = build_decl_attribute_variant (decl, decl_machine_attr);\n #endif\n \n+\t    /* [class.conv.ctor]\n+\n+\t       A constructor declared without the function-specifier\n+\t       explicit that can be called with a single parameter\n+\t       specifies a conversion from the type of its first\n+\t       parameter to the type of its class.  Such a constructor\n+\t       is called a converting constructor.  */\n \t    if (explicitp == 2)\n \t      DECL_NONCONVERTING_P (decl) = 1;\n+\t    else if (DECL_CONSTRUCTOR_P (decl))\n+\t      {\n+\t\t/* The constructor can be called with exactly one\n+\t\t   parameter if there is at least one parameter, and\n+\t\t   any subsequent parameters have default arguments.\n+\t\t   We don't look at the first parameter, which is\n+\t\t   really just the `this' parameter for the new\n+\t\t   object.  */\n+\t\ttree arg_types = \n+\t\t  TREE_CHAIN (TYPE_ARG_TYPES (TREE_TYPE (decl)));\n+\n+\t\t/* Skip the `in_chrg' argument too, if present.  */\n+\t\tif (TYPE_USES_VIRTUAL_BASECLASSES (DECL_CONTEXT (decl)))\n+\t\t  arg_types = TREE_CHAIN (arg_types);\n+\n+\t\tif (arg_types == void_list_node\n+\t\t    || (arg_types \n+\t\t\t&& TREE_CHAIN (arg_types) \n+\t\t\t&& TREE_CHAIN (arg_types) != void_list_node\n+\t\t\t&& !TREE_PURPOSE (TREE_CHAIN (arg_types))))\n+\t\t  DECL_NONCONVERTING_P (decl) = 1;\n+\t      }\n \t  }\n \telse if (TREE_CODE (type) == METHOD_TYPE)\n \t  {"}]}