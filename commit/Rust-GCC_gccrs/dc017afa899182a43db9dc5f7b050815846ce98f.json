{"sha": "dc017afa899182a43db9dc5f7b050815846ce98f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwMTdhZmE4OTkxODJhNDNkYjlkYzVmN2IwNTA4MTU4NDZjZTk4Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-10-07T10:54:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T10:54:11Z"}, "message": "tbuild.ads: Minor reformatting.\n\n2010-10-07  Robert Dewar  <dewar@adacore.com>\n\n\t* tbuild.ads: Minor reformatting.\n\nFrom-SVN: r165091", "tree": {"sha": "0e4425d5c0007f7895c3d7d9d1ae72ada1ac1e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e4425d5c0007f7895c3d7d9d1ae72ada1ac1e0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc017afa899182a43db9dc5f7b050815846ce98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc017afa899182a43db9dc5f7b050815846ce98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc017afa899182a43db9dc5f7b050815846ce98f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc017afa899182a43db9dc5f7b050815846ce98f/comments", "author": null, "committer": null, "parents": [{"sha": "bd67cff183ab44d9a243ce983e236e4a0be17ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd67cff183ab44d9a243ce983e236e4a0be17ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd67cff183ab44d9a243ce983e236e4a0be17ac3"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "3b641982b8c83654460edb2f9e63a84a5b982d5a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc017afa899182a43db9dc5f7b050815846ce98f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc017afa899182a43db9dc5f7b050815846ce98f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dc017afa899182a43db9dc5f7b050815846ce98f", "patch": "@@ -1,3 +1,7 @@\n+2010-10-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* tbuild.ads: Minor reformatting.\n+\n 2010-10-07  Robert Dewar  <dewar@adacore.com>\n \n \t* gnatcmd.adb, make.adb, prj-nmsc.adb, sem_elab.adb: Minor reformatting"}, {"sha": "69cc20fcd4e6fc2184d368556ec731ad8d36800d", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc017afa899182a43db9dc5f7b050815846ce98f/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc017afa899182a43db9dc5f7b050815846ce98f/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=dc017afa899182a43db9dc5f7b050815846ce98f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,8 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains various utility procedures to assist in\n---  building specific types of tree nodes.\n+--  This package contains various utility procedures to assist in building\n+--  specific types of tree nodes.\n \n with Namet; use Namet;\n with Sinfo; use Sinfo;\n@@ -167,14 +167,14 @@ package Tbuild is\n       Condition : Node_Id := Empty;\n       Reason    : RT_Exception_Code) return Node_Id;\n    pragma Inline (Make_Raise_Storage_Error);\n-   --  A convenient form of Make_Raise_Storage_Error where the Reason\n-   --  is given simply as an enumeration value, rather than a Uint code.\n+   --  A convenient form of Make_Raise_Storage_Error where the Reason is given\n+   --  simply as an enumeration value, rather than a Uint code.\n \n    function Make_String_Literal\n      (Sloc   : Source_Ptr;\n       Strval : String) return Node_Id;\n-   --  A convenient form of Make_String_Literal, where the string value\n-   --  is given as a normal string instead of a String_Id value.\n+   --  A convenient form of Make_String_Literal, where the string value is\n+   --  given as a normal string instead of a String_Id value.\n \n    function Make_Temporary\n      (Loc          : Source_Ptr;\n@@ -198,8 +198,8 @@ package Tbuild is\n      (Loc   : Source_Ptr;\n       Check : Name_Id;\n       Stmts : List_Id) return Node_Id;\n-   --  Build a block with a pragma Suppress on 'Check'. Stmts is the\n-   --  statements list that needs protection against the check\n+   --  Build a block with a pragma Suppress on 'Check'. Stmts is the statements\n+   --  list that needs protection against the check\n \n    function New_Constraint_Error (Loc : Source_Ptr) return Node_Id;\n    --  This function builds a tree corresponding to the Ada statement\n@@ -293,8 +293,8 @@ package Tbuild is\n    function New_Reference_To\n      (Def_Id : Entity_Id;\n       Loc    : Source_Ptr) return Node_Id;\n-   --  This is like New_Occurrence_Of, but it does not set the Etype field.\n-   --  It is used from the expander, where Etype fields are generally not set,\n+   --  This is like New_Occurrence_Of, but it does not set the Etype field. It\n+   --  is used from the expander, where Etype fields are generally not set,\n    --  since they are set when the expanded tree is reanalyzed.\n \n    function New_Suffixed_Name\n@@ -307,13 +307,13 @@ package Tbuild is\n    --  fixed-point type (as passed in Related_Id), and Suffix is \"SMALL\".\n \n    function OK_Convert_To (Typ : Entity_Id; Expr : Node_Id) return Node_Id;\n-   --  Like Convert_To, except that a conversion node is always generated,\n-   --  and the Conversion_OK flag is set on this conversion node.\n+   --  Like Convert_To, except that a conversion node is always generated, and\n+   --  the Conversion_OK flag is set on this conversion node.\n \n    function Unchecked_Convert_To\n      (Typ  : Entity_Id;\n       Expr : Node_Id) return Node_Id;\n-   --  Like Convert_To, but if a conversion is actually needed, constructs\n-   --  an N_Unchecked_Type_Conversion node to do the required conversion.\n+   --  Like Convert_To, but if a conversion is actually needed, constructs an\n+   --  N_Unchecked_Type_Conversion node to do the required conversion.\n \n end Tbuild;"}]}