{"sha": "f27dfe878241c1496446180f0b6d154a3c4c5e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3ZGZlODc4MjQxYzE0OTY0NDYxODBmMGI2ZDE1NGEzYzRjNWUyZg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2014-10-25T06:45:52Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2014-10-25T06:45:52Z"}, "message": "re PR rtl-optimization/63615 (FAIL: gcc.target/i386/addr-sel-1.c)\n\n\tPR rtl-optimization/63615\n\t* simplify-rtx.c (simplify_plus_minus): Set \"canonicalized\" on\n\tdecomposing PLUS or MINUS if operands are not placed adjacent\n\tin the \"ops\" array.\n\nFrom-SVN: r216689", "tree": {"sha": "3781ddc320d2d3ccdf9b6af77c34036b78d232e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3781ddc320d2d3ccdf9b6af77c34036b78d232e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f27dfe878241c1496446180f0b6d154a3c4c5e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27dfe878241c1496446180f0b6d154a3c4c5e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27dfe878241c1496446180f0b6d154a3c4c5e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27dfe878241c1496446180f0b6d154a3c4c5e2f/comments", "author": null, "committer": null, "parents": [{"sha": "4aa19422932112527ceb8cd3dd290bd9ff2b990c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa19422932112527ceb8cd3dd290bd9ff2b990c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aa19422932112527ceb8cd3dd290bd9ff2b990c"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "a7bcfbfac66cc2a0ed4e6abd2170b26df3c565f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27dfe878241c1496446180f0b6d154a3c4c5e2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27dfe878241c1496446180f0b6d154a3c4c5e2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f27dfe878241c1496446180f0b6d154a3c4c5e2f", "patch": "@@ -1,3 +1,10 @@\n+2014-10-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/63615\n+\t* simplify-rtx.c (simplify_plus_minus): Set \"canonicalized\" on\n+\tdecomposing PLUS or MINUS if operands are not placed adjacent\n+\tin the \"ops\" array.\n+\n 2014-10-25  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal): Do\n@@ -117,21 +124,21 @@\n \t(__LD4R_FUNC): Ditto.\n \t(vld2_dup_s8, vld2_dup_s16, vld2_dup_s32, vld2_dup_f32, vld2_dup_f64,\n \t vld2_dup_u8, vld2_dup_u16, vld2_dup_u32, vld2_dup_p8, vld2_dup_p16\n-\t vld2_dup_s64, vld2_dup_u64, vld2q_dup_s8, vld2q_dup_p8, \n-\t vld2q_dup_s16, vld2q_dup_p16, vld2q_dup_s32, vld2q_dup_s64, \n-\t vld2q_dup_u8, vld2q_dup_u16, vld2q_dup_u32, vld2q_dup_u64 \n+\t vld2_dup_s64, vld2_dup_u64, vld2q_dup_s8, vld2q_dup_p8,\n+\t vld2q_dup_s16, vld2q_dup_p16, vld2q_dup_s32, vld2q_dup_s64,\n+\t vld2q_dup_u8, vld2q_dup_u16, vld2q_dup_u32, vld2q_dup_u64\n \t vld2q_dup_f32, vld2q_dup_f64): Rewrite using builtin functions.\n-\t(vld3_dup_s64, vld3_dup_u64, vld3_dup_f64, vld3_dup_s8 \n-\t vld3_dup_p8, vld3_dup_s16, vld3_dup_p16, vld3_dup_s32 \n+\t(vld3_dup_s64, vld3_dup_u64, vld3_dup_f64, vld3_dup_s8\n+\t vld3_dup_p8, vld3_dup_s16, vld3_dup_p16, vld3_dup_s32\n \t vld3_dup_u8, vld3_dup_u16, vld3_dup_u32, vld3_dup_f32\n-\t vld3q_dup_s8, vld3q_dup_p8, vld3q_dup_s16, vld3q_dup_p16 \n-\t vld3q_dup_s32, vld3q_dup_s64, vld3q_dup_u8, vld3q_dup_u16 \n+\t vld3q_dup_s8, vld3q_dup_p8, vld3q_dup_s16, vld3q_dup_p16\n+\t vld3q_dup_s32, vld3q_dup_s64, vld3q_dup_u8, vld3q_dup_u16\n \t vld3q_dup_u32, vld3q_dup_u64, vld3q_dup_f32, vld3q_dup_f64): Likewise.\n-\t(vld4_dup_s64, vld4_dup_u64, vld4_dup_f64, vld4_dup_s8 \n-\t vld4_dup_p8, vld4_dup_s16, vld4_dup_p16, vld4_dup_s32 \n-\t vld4_dup_u8, vld4_dup_u16, vld4_dup_u32, vld4_dup_f32 \n-\t vld4q_dup_s8, vld4q_dup_p8, vld4q_dup_s16, vld4q_dup_p16 \n-\t vld4q_dup_s32, vld4q_dup_s64, vld4q_dup_u8, vld4q_dup_u16 \n+\t(vld4_dup_s64, vld4_dup_u64, vld4_dup_f64, vld4_dup_s8\n+\t vld4_dup_p8, vld4_dup_s16, vld4_dup_p16, vld4_dup_s32\n+\t vld4_dup_u8, vld4_dup_u16, vld4_dup_u32, vld4_dup_f32\n+\t vld4q_dup_s8, vld4q_dup_p8, vld4q_dup_s16, vld4q_dup_p16\n+\t vld4q_dup_s32, vld4q_dup_s64, vld4q_dup_u8, vld4q_dup_u16\n \t vld4q_dup_u32, vld4q_dup_u64, vld4q_dup_f32, vld4q_dup_f64): Likewise.\n \t* config/aarch64/aarch64.md (define_c_enum \"unspec\"): Add\n \tUNSPEC_LD2_DUP, UNSPEC_LD3_DUP, UNSPEC_LD4_DUP.\n@@ -146,18 +153,18 @@\n \n 2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n \n-        * rtlanal.c (get_base_term): Handle SCRATCH.\n+\t* rtlanal.c (get_base_term): Handle SCRATCH.\n \n 2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n \n-        * haifa-sched.c (sched_init): Disable max_issue when scheduling for\n-        register pressure.\n+\t* haifa-sched.c (sched_init): Disable max_issue when scheduling for\n+\tregister pressure.\n \n 2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n \n-        * haifa-sched.c (cached_first_cycle_multipass_dfa_lookahead,)\n-        (cached_issue_rate): Remove.  Use dfa_lookahead and issue_rate instead.\n-        (max_issue, choose_ready, sched_init): Update.\n+\t* haifa-sched.c (cached_first_cycle_multipass_dfa_lookahead,)\n+\t(cached_issue_rate): Remove.  Use dfa_lookahead and issue_rate instead.\n+\t(max_issue, choose_ready, sched_init): Update.\n \n 2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n "}, {"sha": "d783c22f77a39ce4ca0e3c4acff31269e6b9a69e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27dfe878241c1496446180f0b6d154a3c4c5e2f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27dfe878241c1496446180f0b6d154a3c4c5e2f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=f27dfe878241c1496446180f0b6d154a3c4c5e2f", "patch": "@@ -4006,7 +4006,7 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n \n \t      ops[i].op = XEXP (this_op, 0);\n \t      changed = 1;\n-\t      canonicalized |= this_neg;\n+\t      canonicalized |= this_neg || i != n_ops - 2;\n \t      break;\n \n \t    case NEG:"}]}