{"sha": "4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZmZWZiNzA0YThlODA1Mjc4ZTcyZWQ5YmVlN2M5NGMwYTE0MDFkNA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-10T17:30:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-17T08:14:00Z"}, "message": "[Ada] Remove unnecessary special-casing of GNATprove expansion\n\n2020-06-17  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Generate_Range_Check): Simplify redundant\n\tcondition.\n\t* sem_ch3.adb (Check_Initialization, Process_Discriminants):\n\tLikewise.\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Likewise.", "tree": {"sha": "819d449dce38e6440606cd6b86001de20f621772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819d449dce38e6440606cd6b86001de20f621772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c85394fb16fd43a05cd9ee5dbca3e96cc68dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c85394fb16fd43a05cd9ee5dbca3e96cc68dfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c85394fb16fd43a05cd9ee5dbca3e96cc68dfb"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "aab9e33aa839318242cb49ed3522aa23f9705f3b", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "patch": "@@ -7001,12 +7001,12 @@ package body Checks is\n          return;\n       end if;\n \n-      --  Here a check is needed. If the expander is not active, or if we are\n-      --  in GNATProve mode, then simply set the Do_Range_Check flag and we\n-      --  are done. In both these cases, we just want to see the range check\n-      --  flag set, we do not want to generate the explicit range check code.\n+      --  Here a check is needed. If the expander is not active (which is also\n+      --  the case in GNATprove mode), then simply set the Do_Range_Check flag\n+      --  and we are done. We just want to see the range check flag set, we do\n+      --  not want to generate the explicit range check code.\n \n-      if GNATprove_Mode or else not Expander_Active then\n+      if not Expander_Active then\n          Set_Do_Range_Check (N);\n          return;\n       end if;"}, {"sha": "54b2f62cfe444bf1ee5f035256c100e8a3eeb639", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "patch": "@@ -11804,7 +11804,7 @@ package body Sem_Ch3 is\n       --  In gnatc or gnatprove mode, make sure set Do_Range_Check flag gets\n       --  set unless we can be sure that no range check is required.\n \n-      if (GNATprove_Mode or not Expander_Active)\n+      if not Expander_Active\n         and then Is_Scalar_Type (T)\n         and then not Is_In_Range (Exp, T, Assume_Valid => True)\n       then\n@@ -19853,7 +19853,7 @@ package body Sem_Ch3 is\n             --  In gnatc or gnatprove mode, make sure set Do_Range_Check flag\n             --  gets set unless we can be sure that no range check is required.\n \n-            if (GNATprove_Mode or not Expander_Active)\n+            if not Expander_Active\n               and then not\n                 Is_In_Range\n                   (Expression (Discr), Discr_Type, Assume_Valid => True)"}, {"sha": "b60133ab07d668d81e14706725cc34f05cb40ba2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffefb704a8e805278e72ed9bee7c94c0a1401d4/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4ffefb704a8e805278e72ed9bee7c94c0a1401d4", "patch": "@@ -4402,13 +4402,7 @@ package body Sem_Ch6 is\n \n       --  Handle inlining\n \n-      --  Note: Normally we don't do any inlining if expansion is off, since\n-      --  we won't generate code in any case. An exception arises in GNATprove\n-      --  mode where we want to expand some calls in place, even with expansion\n-      --  disabled, since the inlining eases formal verification.\n-\n-      if not GNATprove_Mode\n-        and then Expander_Active\n+      if Expander_Active\n         and then Serious_Errors_Detected = 0\n         and then Present (Spec_Id)\n         and then Has_Pragma_Inline (Spec_Id)"}]}