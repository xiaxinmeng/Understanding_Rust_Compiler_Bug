{"sha": "ba7551485bc5760371462517ec05bc6ba20b3b35", "node_id": "C_kwDOANBUbNoAKGJhNzU1MTQ4NWJjNTc2MDM3MTQ2MjUxN2VjMDViYzZiYTIwYjNiMzU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-11T23:00:49Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-12T01:29:47Z"}, "message": "libstdc++: Simplify build targets for debug library\n\nThis rewrites the stamp-debug and build-debug targets in src/Makefile so\nthat each generated Makefile in the debug/$(SUBDIRS) directories is a\nmake target, instead of being created by a loop in the stamp-debug\nrecipe. The final adjustments to debug/Makefile are done as part of the\nstamp-debug target instead of the build-debug target.\n\nThe advantage is that each $(SUBDIRS)/debug/Makefile now has the\ncorresponding $(SUBDIRS)/Makefile as a prerequisite, so they will be\nregenerated if needed. Generating those can also be parallelized by\nmake, although those steps are very fast so that doesn't really matter.\n\nThis also removes the duplication in the stamp-debug recipe, which was\nusing exactly the same sed command for debug/Makefile and each\ndebug/$(SUBDIRS)/Makefile. That is done by adding \".\" to the list of\nsubdirectories to process. The recipes can also be simplified to use\nseparate shell commands per line, instead of using backslashes to join\nthe whole recipe into a single shell command.\n\nAlso replace 'echo `date` > stamp-xxx' with just 'date > stamp-xxx'\nwhich is equivalent but simpler.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/Makefile.am: Simplify debug build targets.\n\t* src/Makefile.in: Regenerate.", "tree": {"sha": "4bf07761f72a16d333be6b0403f0cfe0af0097a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bf07761f72a16d333be6b0403f0cfe0af0097a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7551485bc5760371462517ec05bc6ba20b3b35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7551485bc5760371462517ec05bc6ba20b3b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7551485bc5760371462517ec05bc6ba20b3b35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7551485bc5760371462517ec05bc6ba20b3b35/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7f51059fb009dcd7d491d6b2164bce75dbd9975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f51059fb009dcd7d491d6b2164bce75dbd9975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7f51059fb009dcd7d491d6b2164bce75dbd9975"}], "stats": {"total": 135, "additions": 56, "deletions": 79}, "files": [{"sha": "b545ebf0dcf72fb1b13346643a085052c0e4fc2d", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 27, "deletions": 38, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7551485bc5760371462517ec05bc6ba20b3b35/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7551485bc5760371462517ec05bc6ba20b3b35/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=ba7551485bc5760371462517ec05bc6ba20b3b35", "patch": "@@ -30,10 +30,8 @@ endif\n \n if ENABLE_BACKTRACE\n backtrace_dir = libbacktrace\n-backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n else\n backtrace_dir =\n-backtrace_supported_h =\n endif\n \n ## Keep this list sync'd with acinclude.m4:GLIBCXX_CONFIGURE.\n@@ -370,7 +368,7 @@ libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n \tif test ! -f .libs/libstdc++.a; then \\\n \t  cp .libs/libstdc++convenience.a .libs/libstdc++.a; \\\n \tfi; \\\n-\techo `date` > stamp-libstdc++convenience;\n+\tdate > stamp-libstdc++convenience;\n \n # Added rules.\n # 1 debug library\n@@ -386,50 +384,41 @@ CLEAN_DEBUG =\n endif\n \n # Build a debug variant.\n+\n # Take care to fix all possibly-relative paths.\n-debugdir = ${glibcxx_builddir}/src/debug\n-stamp-debug: Makefile $(foreach dir,$(SUBDIRS),$(dir)/Makefile)\n-\tif test ! -d ${debugdir} || test ! -f ${debugdir}/Makefile ; then \\\n-\t  mkdir -p ${debugdir}; \\\n-\t  for d in $(SUBDIRS); do mkdir -p  ${debugdir}/$$d; done; \\\n-\t  (cd ${debugdir}; \\\n-\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n-\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n-\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n-\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n-\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n-\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t  < ../Makefile > Makefile ; \\\n-\t  for d in . $(SUBDIRS); do \\\n-\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n-\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n-\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n-\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n-\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n-\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t  < ../$$d/Makefile > $$d/Makefile ; \\\n-\t  done) ; \\\n-\tfi; \\\n-\techo `date` > stamp-debug;\n+debug/%/Makefile: %/Makefile\n+\t$(MKDIR_P) $(dir $@)\n+\tsed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t    -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n+\t    -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t    -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n+\t    -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n+\t    -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n+\t  < $< > $@\n+\n+stamp-debug: $(foreach dir,. $(SUBDIRS),debug/$(dir)/Makefile)\n+\tmv debug/Makefile debug/Makefile.tmp\n+\tsed -e 's,all-local: all-once,all-local:,' \\\n+\t    -e 's,install-data-local: install-data-once,install-data-local:,' \\\n+\t    -e '/vpath/!s,src/c,src/debug/c,' \\\n+\t  < debug/Makefile.tmp > debug/Makefile\n+\trm -f debug/Makefile.tmp\n+\tdate > stamp-debug;\n+\n+.SECONDARY: $(foreach dir,. $(SUBDIRS),debug/$(dir)/Makefile)\n \n if ENABLE_BACKTRACE\n-${debugdir}/$(backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n+backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n+debug_backtrace_supported_h = debug/$(backtrace_supported_h)\n+$(debug_backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n \tcp $< $@\n-debug_backtrace_supported_h = ${debugdir}/$(backtrace_supported_h)\n else\n debug_backtrace_supported_h =\n endif\n \n build-debug: stamp-debug $(debug_backtrace_supported_h)\n-\t  (cd ${debugdir}; \\\n-\t  mv Makefile Makefile.tmp; \\\n-\t  sed -e 's,all-local: all-once,all-local:,' \\\n-\t      -e 's,install-data-local: install-data-once,install-data-local:,' \\\n-\t      -e '/vpath/!s,src/c,src/debug/c,' \\\n-\t  < Makefile.tmp > Makefile ; \\\n-\t  rm -f Makefile.tmp ; \\\n-\t  $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n-\t  toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all) ;\n+\t  $(MAKE) -C debug CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\t    toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all\n \n # Install debug library.\n install-debug: build-debug"}, {"sha": "f54ee282fb09862677ac36b840506c8ddb8cc290", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 29, "deletions": 41, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7551485bc5760371462517ec05bc6ba20b3b35/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7551485bc5760371462517ec05bc6ba20b3b35/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=ba7551485bc5760371462517ec05bc6ba20b3b35", "patch": "@@ -485,8 +485,6 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)\n @ENABLE_FILESYSTEM_TS_TRUE@filesystem_dir = filesystem\n @ENABLE_BACKTRACE_FALSE@backtrace_dir = \n @ENABLE_BACKTRACE_TRUE@backtrace_dir = libbacktrace\n-@ENABLE_BACKTRACE_FALSE@backtrace_supported_h = \n-@ENABLE_BACKTRACE_TRUE@backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir) $(backtrace_dir)\n @VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la\n \n@@ -675,12 +673,9 @@ CXXLINK = \\\n @GLIBCXX_BUILD_DEBUG_TRUE@STAMP_INSTALL_DEBUG = install-debug\n @GLIBCXX_BUILD_DEBUG_FALSE@CLEAN_DEBUG = \n @GLIBCXX_BUILD_DEBUG_TRUE@CLEAN_DEBUG = debug\n-\n-# Build a debug variant.\n-# Take care to fix all possibly-relative paths.\n-debugdir = ${glibcxx_builddir}/src/debug\n+@ENABLE_BACKTRACE_TRUE@backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n @ENABLE_BACKTRACE_FALSE@debug_backtrace_supported_h = \n-@ENABLE_BACKTRACE_TRUE@debug_backtrace_supported_h = ${debugdir}/$(backtrace_supported_h)\n+@ENABLE_BACKTRACE_TRUE@debug_backtrace_supported_h = debug/$(backtrace_supported_h)\n all: all-recursive\n \n .SUFFIXES:\n@@ -1113,44 +1108,37 @@ libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n \tif test ! -f .libs/libstdc++.a; then \\\n \t  cp .libs/libstdc++convenience.a .libs/libstdc++.a; \\\n \tfi; \\\n-\techo `date` > stamp-libstdc++convenience;\n-stamp-debug: Makefile $(foreach dir,$(SUBDIRS),$(dir)/Makefile)\n-\tif test ! -d ${debugdir} || test ! -f ${debugdir}/Makefile ; then \\\n-\t  mkdir -p ${debugdir}; \\\n-\t  for d in $(SUBDIRS); do mkdir -p  ${debugdir}/$$d; done; \\\n-\t  (cd ${debugdir}; \\\n-\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n-\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n-\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n-\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n-\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n-\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t  < ../Makefile > Makefile ; \\\n-\t  for d in . $(SUBDIRS); do \\\n-\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n-\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n-\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n-\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n-\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n-\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t  < ../$$d/Makefile > $$d/Makefile ; \\\n-\t  done) ; \\\n-\tfi; \\\n-\techo `date` > stamp-debug;\n+\tdate > stamp-libstdc++convenience;\n+\n+# Build a debug variant.\n \n-@ENABLE_BACKTRACE_TRUE@${debugdir}/$(backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n+# Take care to fix all possibly-relative paths.\n+debug/%/Makefile: %/Makefile\n+\t$(MKDIR_P) $(dir $@)\n+\tsed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t    -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n+\t    -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t    -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n+\t    -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n+\t    -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n+\t  < $< > $@\n+\n+stamp-debug: $(foreach dir,. $(SUBDIRS),debug/$(dir)/Makefile)\n+\tmv debug/Makefile debug/Makefile.tmp\n+\tsed -e 's,all-local: all-once,all-local:,' \\\n+\t    -e 's,install-data-local: install-data-once,install-data-local:,' \\\n+\t    -e '/vpath/!s,src/c,src/debug/c,' \\\n+\t  < debug/Makefile.tmp > debug/Makefile\n+\trm -f debug/Makefile.tmp\n+\tdate > stamp-debug;\n+\n+.SECONDARY: $(foreach dir,. $(SUBDIRS),debug/$(dir)/Makefile)\n+@ENABLE_BACKTRACE_TRUE@$(debug_backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n @ENABLE_BACKTRACE_TRUE@\tcp $< $@\n \n build-debug: stamp-debug $(debug_backtrace_supported_h)\n-\t  (cd ${debugdir}; \\\n-\t  mv Makefile Makefile.tmp; \\\n-\t  sed -e 's,all-local: all-once,all-local:,' \\\n-\t      -e 's,install-data-local: install-data-once,install-data-local:,' \\\n-\t      -e '/vpath/!s,src/c,src/debug/c,' \\\n-\t  < Makefile.tmp > Makefile ; \\\n-\t  rm -f Makefile.tmp ; \\\n-\t  $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n-\t  toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all) ;\n+\t  $(MAKE) -C debug CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\t    toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all\n \n # Install debug library.\n install-debug: build-debug"}]}