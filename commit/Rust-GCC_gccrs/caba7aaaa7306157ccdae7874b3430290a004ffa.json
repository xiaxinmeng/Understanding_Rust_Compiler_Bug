{"sha": "caba7aaaa7306157ccdae7874b3430290a004ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiYTdhYWFhNzMwNjE1N2NjZGFlNzg3NGIzNDMwMjkwYTAwNGZmYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2010-05-19T21:08:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-05-19T21:08:53Z"}, "message": "combine.c (propagate_for_debug): Call make_compound_operation on the source value.\n\ngcc/\n\t* combine.c (propagate_for_debug): Call make_compound_operation\n\ton the source value.\n\t(try_combine): When implementing a split chosen by find_split_point,\n\teither copy i2src or set it to null.  Assert that i2src is not null\n\tbefore substituting into CALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r159600", "tree": {"sha": "22fda0e0d8ee766f1dd846c3c8c2bdb01ff9415a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22fda0e0d8ee766f1dd846c3c8c2bdb01ff9415a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caba7aaaa7306157ccdae7874b3430290a004ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caba7aaaa7306157ccdae7874b3430290a004ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caba7aaaa7306157ccdae7874b3430290a004ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caba7aaaa7306157ccdae7874b3430290a004ffa/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3360e778c64ee78b08272b4474d0d707061a1c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3360e778c64ee78b08272b4474d0d707061a1c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3360e778c64ee78b08272b4474d0d707061a1c1"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "47a313a6a511195511f826692b20eced1e034360", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caba7aaaa7306157ccdae7874b3430290a004ffa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caba7aaaa7306157ccdae7874b3430290a004ffa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caba7aaaa7306157ccdae7874b3430290a004ffa", "patch": "@@ -1,3 +1,11 @@\n+2010-05-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* combine.c (propagate_for_debug): Call make_compound_operation\n+\ton the source value.\n+\t(try_combine): When implementing a split chosen by find_split_point,\n+\teither copy i2src or set it to null.  Assert that i2src is not null\n+\tbefore substituting into CALL_INSN_FUNCTION_USAGE.\n+\n 2010-05-19  Anatoly Sokolov  <aesok@post.ru>\n \n \t* double-int.h (double_int_ior): New function."}, {"sha": "8aa7e94a8525e8be82e23659c101da6df5439d55", "filename": "gcc/combine.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caba7aaaa7306157ccdae7874b3430290a004ffa/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caba7aaaa7306157ccdae7874b3430290a004ffa/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=caba7aaaa7306157ccdae7874b3430290a004ffa", "patch": "@@ -2310,6 +2310,7 @@ static void\n propagate_for_debug (rtx insn, rtx last, rtx dest, rtx src, bool move)\n {\n   rtx next, move_pos = move ? last : NULL_RTX, loc;\n+  bool first_p;\n \n #ifdef AUTO_INC_DEC\n   struct rtx_subst_pair p;\n@@ -2318,13 +2319,19 @@ propagate_for_debug (rtx insn, rtx last, rtx dest, rtx src, bool move)\n   p.after = move;\n #endif\n \n+  first_p = true;\n   next = NEXT_INSN (insn);\n   while (next != last)\n     {\n       insn = next;\n       next = NEXT_INSN (insn);\n       if (DEBUG_INSN_P (insn))\n \t{\n+\t  if (first_p)\n+\t    {\n+\t      src = make_compound_operation (src, SET);\n+\t      first_p = false;\n+\t    }\n #ifdef AUTO_INC_DEC\n \t  loc = simplify_replace_fn_rtx (INSN_VAR_LOCATION_LOC (insn),\n \t\t\t\t\t dest, propagate_for_debug_subst, &p);\n@@ -3294,6 +3301,14 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \n \t  i2scratch = true;\n \n+\t  /* *SPLIT may be part of I2SRC, so make sure we have the\n+\t     original expression around for later debug processing.\n+\t     We should not need I2SRC any more in other cases.  */\n+\t  if (MAY_HAVE_DEBUG_INSNS)\n+\t    i2src = copy_rtx (i2src);\n+\t  else\n+\t    i2src = NULL;\n+\n \t  /* Get NEWDEST as a register in the proper mode.  We have already\n \t     validated that we can do this.  */\n \t  if (GET_MODE (i2dest) != split_mode && split_mode != VOIDmode)\n@@ -3790,7 +3805,13 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \tcall_usage = copy_rtx (call_usage);\n \n \tif (substed_i2)\n-\t  replace_rtx (call_usage, i2dest, i2src);\n+\t  {\n+\t    /* I2SRC must still be meaningful at this point.  Some splitting\n+\t       operations can invalidate I2SRC, but those operations do not\n+\t       apply to calls.  */\n+\t    gcc_assert (i2src);\n+\t    replace_rtx (call_usage, i2dest, i2src);\n+\t  }\n \n \tif (substed_i1)\n \t  replace_rtx (call_usage, i1dest, i1src);"}]}