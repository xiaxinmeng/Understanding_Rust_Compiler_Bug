{"sha": "fcfdb14511b80144d1d78a53e9b69483fb99a36a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmZGIxNDUxMWI4MDE0NGQxZDc4YTUzZTliNjk0ODNmYjk5YTM2YQ==", "commit": {"author": {"name": "Alfred M. Szmidt", "email": "ams@gnu.org", "date": "2007-08-04T21:50:01Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2007-08-04T21:50:01Z"}, "message": "natFilePosix.cc (init_native): Define to 0.\n\n2007-08-04  Alfred M. Szmidt  <ams@gnu.org>\n\n        * java/io/natFilePosix.cc (init_native) [!MAXPATHLEN]: Define to 0.\n        * java/io/File.java (createTempFile): Don't truncate if the system\n        doesn't have a limit on the length of a file name.\n        * classpath/lib/java/io/File.class: Regenerate.\n\nFrom-SVN: r127216", "tree": {"sha": "a5afac585b0652d768e5750f87e604254164c8f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5afac585b0652d768e5750f87e604254164c8f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcfdb14511b80144d1d78a53e9b69483fb99a36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfdb14511b80144d1d78a53e9b69483fb99a36a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcfdb14511b80144d1d78a53e9b69483fb99a36a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfdb14511b80144d1d78a53e9b69483fb99a36a/comments", "author": {"login": "ams", "id": 7945138, "node_id": "MDQ6VXNlcjc5NDUxMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7945138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams", "html_url": "https://github.com/ams", "followers_url": "https://api.github.com/users/ams/followers", "following_url": "https://api.github.com/users/ams/following{/other_user}", "gists_url": "https://api.github.com/users/ams/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams/subscriptions", "organizations_url": "https://api.github.com/users/ams/orgs", "repos_url": "https://api.github.com/users/ams/repos", "events_url": "https://api.github.com/users/ams/events{/privacy}", "received_events_url": "https://api.github.com/users/ams/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cbef3aa2f67797b2f4a54b10c2e5ba23f216dd6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbef3aa2f67797b2f4a54b10c2e5ba23f216dd6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbef3aa2f67797b2f4a54b10c2e5ba23f216dd6f"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "e9dbb5fb3bb27869d8e8c876ec639662052427c7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fcfdb14511b80144d1d78a53e9b69483fb99a36a", "patch": "@@ -1,3 +1,10 @@\n+2007-08-04  Alfred M. Szmidt  <ams@gnu.org>\n+\n+\t* java/io/natFilePosix.cc (init_native) [!MAXPATHLEN]: Define to 0.\n+\t* java/io/File.java (createTempFile): Don't truncate if the system\n+\tdoesn't have a limit on the length of a file name.\n+\t* classpath/lib/java/io/File.class: Regenerate.\n+\n 2007-08-04  Matthias Klose  <doko@ubuntu.com>\n \n \tImport GNU Classpath (libgcj-import-20070727)."}, {"sha": "8bcfe7989f94649eda480d434cf60f140bd16685", "filename": "libjava/classpath/lib/java/io/File.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class?ref=fcfdb14511b80144d1d78a53e9b69483fb99a36a"}, {"sha": "0c4fb6932f5bbbbb93346f9e7000c4044a619445", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=fcfdb14511b80144d1d78a53e9b69483fb99a36a", "patch": "@@ -117,6 +117,7 @@ public class File implements Serializable, Comparable<File>\n   public static final char pathSeparatorChar = pathSeparator.charAt(0);\n \n   static final String tmpdir = System.getProperty(\"java.io.tmpdir\");\n+  /* If 0, then the system doesn't have a file name length limit.  */\n   static int maxPathLen;\n   static boolean caseSensitive;\n   \n@@ -1130,7 +1131,9 @@ public static File createTempFile(String prefix, String suffix,\n \n     // Truncation rules.\n     // `6' is the number of characters we generate.\n-    if (prefix.length() + 6 + suffix.length() > maxPathLen)\n+    // If maxPathLen equals zero, then the system doesn't have a limit\n+    // on the file name, so there is nothing to truncate.\n+    if (maxPathLen > 0 && prefix.length() + 6 + suffix.length() > maxPathLen)\n       {\n \tint suf_len = 0;\n \tif (suffix.charAt(0) == '.')"}, {"sha": "ead28557f6e4cf188848ca02b42846c3b235dd22", "filename": "libjava/java/io/natFilePosix.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfdb14511b80144d1d78a53e9b69483fb99a36a/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFilePosix.cc?ref=fcfdb14511b80144d1d78a53e9b69483fb99a36a", "patch": "@@ -504,6 +504,12 @@ java::io::File::performDelete (void)\n void\n java::io::File::init_native ()\n {\n+#ifdef MAXPATHLEN\n   maxPathLen = MAXPATHLEN;\n+#else\n+  /* Some systems do not have a limit on the length of a file name,\n+     the GNU system is one such example.  */\n+  maxPathLen = 0;\n+#endif\n   caseSensitive = true;\n }"}]}