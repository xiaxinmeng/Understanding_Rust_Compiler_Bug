{"sha": "df73e5842f25aea3bab81c328ed77f16ed261b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3M2U1ODQyZjI1YWVhM2JhYjgxYzMyOGVkNzdmMTZlZDI2MWIzMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-04-19T12:23:47Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-04-19T12:27:12Z"}, "message": "i386: Remove unneeded assignments when triggering SSE exceptions\n\nAccording to \"Intel 64 and IA32 Arch SDM, Vol. 3:\n\n\"Because SIMD floating-point exceptions are precise and occur immediately,\nthe situation does not arise where an x87 FPU instruction, a WAIT/FWAIT\ninstruction, or another SSE/SSE2/SSE3 instruction will catch a pending\nunmasked SIMD floating-point exception.\"\n\nRemove unneeded assignments to volatile memory.\n\nlibgcc/ChangeLog:\n\n\t* config/i386/sfp-exceptions.c (__sfp_handle_exceptions) [__SSE_MATH__]:\n\tRemove unneeded assignments to volatile memory.\n\nlibatomic/ChangeLog:\n\n\t* config/x86/fenv.c (__atomic_feraiseexcept) [__SSE_MATH__]:\n\tRemove unneeded assignments to volatile memory.\n\nlibgfortran/ChangeLog:\n\n\t* config/fpu-387.h (local_feraiseexcept) [__SSE_MATH__]:\n\tRemove unneeded assignments to volatile memory.", "tree": {"sha": "33968170cbb9e272b180adf1681270cd4e9b15d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33968170cbb9e272b180adf1681270cd4e9b15d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df73e5842f25aea3bab81c328ed77f16ed261b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df73e5842f25aea3bab81c328ed77f16ed261b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df73e5842f25aea3bab81c328ed77f16ed261b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df73e5842f25aea3bab81c328ed77f16ed261b33/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9382018b8b00f3482da0d1bff6012f583ff72f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9382018b8b00f3482da0d1bff6012f583ff72f87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9382018b8b00f3482da0d1bff6012f583ff72f87"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "33527a7b4564d6239103e6458fbf9821930eef00", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -1,3 +1,8 @@\n+2020-04-19  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/x86/fenv.c (__atomic_feraiseexcept) [__SSE_MATH__]:\n+\tRemove unneeded assignments to volatile memory.\n+\n 2020-04-06  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure.ac: Add testsuite/libatomic-site-extra.exp to output"}, {"sha": "d7b1bbe5ea125a5d300a2c84dda14124aba1e9cd", "filename": "libatomic/config/x86/fenv.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libatomic%2Fconfig%2Fx86%2Ffenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libatomic%2Fconfig%2Fx86%2Ffenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Fx86%2Ffenv.c?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -57,9 +57,7 @@ __atomic_feraiseexcept (int excepts)\n     {\n       float f = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%0, %d0|%d0, %0}\" : \"+x\" (f));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdiv\\t{%y0, %0|%0, %y0}\" : \"+t\" (f));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -77,9 +75,7 @@ __atomic_feraiseexcept (int excepts)\n     {\n       float f = 1.0f, g = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -105,9 +101,7 @@ __atomic_feraiseexcept (int excepts)\n     {\n       float f = 1.0f, g = 3.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */"}, {"sha": "d66f76fdd0180bce4be2c8dab66bc96f84acd31e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -1,3 +1,8 @@\n+2020-04-19  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sfp-exceptions.c (__sfp_handle_exceptions) [__SSE_MATH__]:\n+\tRemove unneeded assignments to volatile memory.\n+\n 2020-04-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93053"}, {"sha": "31a24ced704a7b0a17f9e3a876cd6cb070416c85", "filename": "libgcc/config/i386/sfp-exceptions.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -48,9 +48,7 @@ __sfp_handle_exceptions (int _fex)\n     {\n       float f = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%0, %d0|%d0, %0}\" : \"+x\" (f));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdiv\\t{%y0, %0|%0, %y0}\" : \"+t\" (f));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -68,9 +66,7 @@ __sfp_handle_exceptions (int _fex)\n     {\n       float f = 1.0f, g = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -96,9 +92,7 @@ __sfp_handle_exceptions (int _fex)\n     {\n       float f = 1.0f, g = 3.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       asm volatile (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       asm volatile (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */"}, {"sha": "2ca75f190bc9016e5428e4f55c08de547a3cc4e1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -1,3 +1,8 @@\n+2020-04-19  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (local_feraiseexcept) [__SSE_MATH__]:\n+\tRemove unneeded assignments to volatile memory.\n+\n 2020-04-01  Fritz Reese  <foreese@gcc.gnu.org>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "13be2045b72f8bc8310b29dccaf2cdfac28b5f52", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df73e5842f25aea3bab81c328ed77f16ed261b33/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df73e5842f25aea3bab81c328ed77f16ed261b33/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=df73e5842f25aea3bab81c328ed77f16ed261b33", "patch": "@@ -103,9 +103,7 @@ local_feraiseexcept (int excepts)\n     {\n       float f = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       __asm__ __volatile__ (\"%vdivss\\t{%0, %d0|%d0, %0}\" : \"+x\" (f));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       __asm__ __volatile__ (\"fdiv\\t{%y0, %0|%0, %y0}\" : \"+t\" (f));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -123,9 +121,7 @@ local_feraiseexcept (int excepts)\n     {\n       float f = 1.0f, g = 0.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       __asm__ __volatile__ (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       __asm__ __volatile__ (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */\n@@ -151,9 +147,7 @@ local_feraiseexcept (int excepts)\n     {\n       float f = 1.0f, g = 3.0f;\n #ifdef __SSE_MATH__\n-      volatile float r __attribute__ ((unused));\n       __asm__ __volatile__ (\"%vdivss\\t{%1, %d0|%d0, %1}\" : \"+x\" (f) : \"xm\" (g));\n-      r = f; /* Needed to trigger exception.   */\n #else\n       __asm__ __volatile__ (\"fdivs\\t%1\" : \"+t\" (f) : \"m\" (g));\n       /* No need for fwait, exception is triggered by emitted fstp.  */"}]}