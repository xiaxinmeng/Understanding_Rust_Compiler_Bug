{"sha": "8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyZjRkZGZkNzBmMmFkOTgyOWNkYzQwNGU5YzM4MmY2ZmM5YjA3Mg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2019-11-20T17:53:31Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2019-11-20T17:53:31Z"}, "message": "Fix host-to-device copies from rodata for AMD GCN\n\n\tlibgomp/\n\t* plugin/plugin-gcn.c (hsa_memory_copy_wrapper): New.\n\t(copy_data, GOMP_OFFLOAD_host2dev): Use above function.\n\t(GOMP_OFFLOAD_dev2host, GOMP_OFFLOAD_dev2dev): Check hsa_memory_copy\n\treturn code.\n\nReviewed-by: Andrew Stubbs <ams@codesourcery.com>\n\nFrom-SVN: r278516", "tree": {"sha": "f0c07d7c1a154a3c4799f63986997bc0d7e1d559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0c07d7c1a154a3c4799f63986997bc0d7e1d559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56e0452513b38110a711c402e32b34ad3a2354aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e0452513b38110a711c402e32b34ad3a2354aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e0452513b38110a711c402e32b34ad3a2354aa"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "eb51462bb3fc8d196aac0032c9af71f021a967dd", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "patch": "@@ -1,3 +1,10 @@\n+2019-11-20  Julian Brown  <julian@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c (hsa_memory_copy_wrapper): New.\n+\t(copy_data, GOMP_OFFLOAD_host2dev): Use above function.\n+\t(GOMP_OFFLOAD_dev2host, GOMP_OFFLOAD_dev2dev): Check hsa_memory_copy\n+\treturn code.\n+\n 2019-11-20  Julian Brown  <julian@codesourcery.com>\n \n \tPR libgomp/92511"}, {"sha": "392a0eeca95f95adce03fbc5f3af996cf24dc3bb", "filename": "libgomp/plugin/plugin-gcn.c", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072/libgomp%2Fplugin%2Fplugin-gcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072/libgomp%2Fplugin%2Fplugin-gcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-gcn.c?ref=8d2f4ddfd70f2ad9829cdc404e9c382f6fc9b072", "patch": "@@ -2940,6 +2940,32 @@ maybe_init_omp_async (struct agent_info *agent)\n       = GOMP_OFFLOAD_openacc_async_construct (agent->device_id);\n }\n \n+/* A wrapper that works around an issue in the HSA runtime with host-to-device\n+   copies from read-only pages.  */\n+\n+static void\n+hsa_memory_copy_wrapper (void *dst, const void *src, size_t len)\n+{\n+  hsa_status_t status = hsa_fns.hsa_memory_copy_fn (dst, src, len);\n+\n+  if (status == HSA_STATUS_SUCCESS)\n+    return;\n+\n+  /* It appears that the copy fails if the source data is in a read-only page.\n+     We can't detect that easily, so try copying the data to a temporary buffer\n+     and doing the copy again if we got an error above.  */\n+\n+  GCN_WARNING (\"Read-only data transfer bug workaround triggered for \"\n+\t       \"[%p:+%d]\\n\", (void *) src, (int) len);\n+\n+  void *src_copy = malloc (len);\n+  memcpy (src_copy, src, len);\n+  status = hsa_fns.hsa_memory_copy_fn (dst, (const void *) src_copy, len);\n+  free (src_copy);\n+  if (status != HSA_STATUS_SUCCESS)\n+    GOMP_PLUGIN_error (\"memory copy failed\");\n+}\n+\n /* Copy data to or from a device.  This is intended for use as an async\n    callback event.  */\n \n@@ -2950,7 +2976,7 @@ copy_data (void *data_)\n   GCN_DEBUG (\"Async thread %d:%d: Copying %zu bytes from (%p) to (%p)\\n\",\n \t     data->aq->agent->device_id, data->aq->id, data->len, data->src,\n \t     data->dst);\n-  hsa_fns.hsa_memory_copy_fn (data->dst, data->src, data->len);\n+  hsa_memory_copy_wrapper (data->dst, data->src, data->len);\n   if (data->free_src)\n     free ((void *) data->src);\n   free (data);\n@@ -3643,7 +3669,9 @@ GOMP_OFFLOAD_dev2host (int device, void *dst, const void *src, size_t n)\n {\n   GCN_DEBUG (\"Copying %zu bytes from device %d (%p) to host (%p)\\n\", n, device,\n \t     src, dst);\n-  hsa_fns.hsa_memory_copy_fn (dst, src, n);\n+  hsa_status_t status = hsa_fns.hsa_memory_copy_fn (dst, src, n);\n+  if (status != HSA_STATUS_SUCCESS)\n+    GOMP_PLUGIN_error (\"memory copy failed\");\n   return true;\n }\n \n@@ -3654,7 +3682,7 @@ GOMP_OFFLOAD_host2dev (int device, void *dst, const void *src, size_t n)\n {\n   GCN_DEBUG (\"Copying %zu bytes from host (%p) to device %d (%p)\\n\", n, src,\n \t     device, dst);\n-  hsa_fns.hsa_memory_copy_fn (dst, src, n);\n+  hsa_memory_copy_wrapper (dst, src, n);\n   return true;\n }\n \n@@ -3675,7 +3703,9 @@ GOMP_OFFLOAD_dev2dev (int device, void *dst, const void *src, size_t n)\n \n   GCN_DEBUG (\"Copying %zu bytes from device %d (%p) to device %d (%p)\\n\", n,\n \t     device, src, device, dst);\n-  hsa_fns.hsa_memory_copy_fn (dst, src, n);\n+  hsa_status_t status = hsa_fns.hsa_memory_copy_fn (dst, src, n);\n+  if (status != HSA_STATUS_SUCCESS)\n+    GOMP_PLUGIN_error (\"memory copy failed\");\n   return true;\n }\n "}]}