{"sha": "6c994759f3581d979a57ce31cfab10cd5329bb44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5OTQ3NTlmMzU4MWQ5NzlhNTdjZTMxY2ZhYjEwY2Q1MzI5YmI0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T08:49:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T08:49:11Z"}, "message": "[multiple changes]\n\n2010-06-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Conditional_Expression): Defend against\n\tmalformed tree.\n\t* sprint.adb (Sprint_Node_Actual, case N_Conditional_Expression): Ditto.\n\n2010-06-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-intman-vxworks.ads: Code clean up.\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_res.adb (Resolve_Slice): When the prefix is an explicit\n\tdereference, construct actual subtype of designated object to generate\n\tproper bounds checks.\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* ali-util.adb, ali-util.ads, gnatbind.adb (Read_ALI): Rename to\n\tRead_Withed_ALIs, which is more descriptive.\n\n2010-06-22  Pascal Obry  <obry@adacore.com>\n\n\t* g-sothco.ads: Minor reformatting.\n\t* g-socthi-mingw.adb: Remove part of work on the C_Recvmsg and\n\tC_Sendmsg implementation.\n\t(C_Sendmsg): Do not use lock (not needed).\n\t(C_Recvmsg): Likewise and also do not wait for incoming data.\n\nFrom-SVN: r161148", "tree": {"sha": "213782122aa486f0afb1639800affca3d31088a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/213782122aa486f0afb1639800affca3d31088a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c994759f3581d979a57ce31cfab10cd5329bb44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c994759f3581d979a57ce31cfab10cd5329bb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c994759f3581d979a57ce31cfab10cd5329bb44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c994759f3581d979a57ce31cfab10cd5329bb44/comments", "author": null, "committer": null, "parents": [{"sha": "88b17d450602da928cabdfcbb324de8e76c4e8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b17d450602da928cabdfcbb324de8e76c4e8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b17d450602da928cabdfcbb324de8e76c4e8c4"}], "stats": {"total": 198, "additions": 95, "deletions": 103}, "files": [{"sha": "01b0076807bd8e7b74d8889cc53880bed895b1fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -1,3 +1,32 @@\n+2010-06-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Conditional_Expression): Defend against\n+\tmalformed tree.\n+\t* sprint.adb (Sprint_Node_Actual, case N_Conditional_Expression): Ditto.\n+\n+2010-06-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-intman-vxworks.ads: Code clean up.\n+\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Slice): When the prefix is an explicit\n+\tdereference, construct actual subtype of designated object to generate\n+\tproper bounds checks.\n+\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* ali-util.adb, ali-util.ads, gnatbind.adb (Read_ALI): Rename to\n+\tRead_Withed_ALIs, which is more descriptive.\n+\n+2010-06-22  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-sothco.ads: Minor reformatting.\n+\t* g-socthi-mingw.adb: Remove part of work on the C_Recvmsg and\n+\tC_Sendmsg implementation.\n+\t(C_Sendmsg): Do not use lock (not needed).\n+\t(C_Recvmsg): Likewise and also do not wait for incoming data.\n+\n 2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* uintp.adb: Fix scope error in operator call."}, {"sha": "001d654ff1db962b4940ead77acd5f68d4c7b32c", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -220,11 +220,11 @@ package body ALI.Util is\n       null;\n    end Post_Scan;\n \n-   --------------\n-   -- Read_ALI --\n-   --------------\n+   ----------------------\n+   -- Read_Withed_ALIs --\n+   ----------------------\n \n-   procedure Read_ALI (Id : ALI_Id) is\n+   procedure Read_Withed_ALIs (Id : ALI_Id) is\n       Afile  : File_Name_Type;\n       Text   : Text_Buffer_Ptr;\n       Idread : ALI_Id;\n@@ -298,7 +298,7 @@ package body ALI.Util is\n                else\n                   --  Otherwise, recurse to get new dependents\n \n-                  Read_ALI (Idread);\n+                  Read_Withed_ALIs (Idread);\n                end if;\n \n             --  If the ALI file has already been processed and is an interface,\n@@ -309,7 +309,7 @@ package body ALI.Util is\n             end if;\n          end loop;\n       end loop;\n-   end Read_ALI;\n+   end Read_Withed_ALIs;\n \n    ----------------------\n    -- Set_Source_Table --"}, {"sha": "3f4f6ebded853874e1a40bcbea602ffc87d58bb4", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,9 +32,9 @@ package ALI.Util is\n    -- Source File Table --\n    -----------------------\n \n-   --  A source file table entry is built for every source file that is\n-   --  in the source dependency table of any of the ALI files that make\n-   --  up the current program.\n+   --  A source file table entry is built for every source file that is in the\n+   --  source dependency table of any of the ALI files that make up the current\n+   --  program.\n \n    No_Source_Id : constant Source_Id := Source_Id'First;\n    --  Special value indicating no Source table entry\n@@ -101,11 +101,11 @@ package ALI.Util is\n    -- Subprograms for Manipulating ALI Information --\n    --------------------------------------------------\n \n-   procedure Read_ALI (Id : ALI_Id);\n-   --  Process an ALI file which has been read and scanned by looping\n-   --  through all withed units in the ALI file, checking if they have\n-   --  been processed. Each unit that has not yet been processed will\n-   --  be read, scanned, and processed recursively.\n+   procedure Read_Withed_ALIs (Id : ALI_Id);\n+   --  Process an ALI file which has been read and scanned by looping through\n+   --  all withed units in the ALI file, checking if they have been processed.\n+   --  Each unit that has not yet been processed will be read, scanned, and\n+   --  processed recursively.\n \n    procedure Set_Source_Table (A : ALI_Id);\n    --  Build source table entry corresponding to the ALI file whose id is A"}, {"sha": "6d7ca23f0b8a8940d55f0a9cbc8b8e7ce15f17e3", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 15, "deletions": 66, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                    Copyright (C) 2001-2010, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,8 +43,6 @@ with Interfaces.C.Strings;    use Interfaces.C.Strings;\n with System;                  use System;\n with System.Storage_Elements; use System.Storage_Elements;\n \n-with GNAT.Task_Lock;\n-\n package body GNAT.Sockets.Thin is\n \n    use type C.unsigned;\n@@ -278,10 +276,8 @@ package body GNAT.Sockets.Thin is\n    is\n       use type C.size_t;\n \n-      Res    : C.int;\n-      Count  : C.int := 0;\n-      Locked : Boolean := False;\n-      --  Set to false when the lock is activated\n+      Res   : C.int;\n+      Count : C.int := 0;\n \n       MH : Msghdr;\n       for MH'Address use Msg;\n@@ -302,33 +298,8 @@ package body GNAT.Sockets.Thin is\n    begin\n       --  Windows does not provide an implementation of recvmsg(). The spec for\n       --  WSARecvMsg() is incompatible with the data types we define, and is\n-      --  not available in all versions of Windows. So, we use C_Recv instead.\n-\n-      --  First, wait for some data to be available if socket is blocking\n-\n-      declare\n-         Selector     : Selector_Type;\n-         R_Socket_Set : Socket_Set_Type;\n-         W_Socket_Set : Socket_Set_Type;\n-         Status       : Selector_Status;\n-         Req          : Request_Type (Name => Non_Blocking_IO);\n-      begin\n-         Control_Socket (Socket_Type (S), Req);\n-\n-         if not Req.Enabled then\n-            --  We are in a blocking IO mode\n-            Create_Selector (Selector);\n-\n-            Set (R_Socket_Set, Socket_Type (S));\n-\n-            Check_Selector (Selector, R_Socket_Set, W_Socket_Set, Status);\n-\n-            Close_Selector (Selector);\n-         end if;\n-      end;\n-\n-      GNAT.Task_Lock.Lock;\n-      Locked := True;\n+      --  available starting with Windows Vista and Server 2008 only. So,\n+      --  we use C_Recv instead.\n \n       --  Check how much data are available\n \n@@ -354,7 +325,6 @@ package body GNAT.Sockets.Thin is\n              Flags);\n \n          if Res < 0 then\n-            Task_Lock.Unlock;\n             return System.CRTL.ssize_t (Res);\n \n          elsif Res = 0 then\n@@ -370,25 +340,15 @@ package body GNAT.Sockets.Thin is\n               To_Access (Current_Iovec.Base.all'Address\n                 + Storage_Offset (Res));\n \n-            --  If we have read all the data that was initially available,\n-            --  do not attempt to receive more, since this might block, or\n-            --  merge data from successive datagrams in case of a datagram-\n-            --  oriented socket.\n+            --  If all the data that was initially available read, do not\n+            --  attempt to receive more, since this might block, or merge data\n+            --  from successive datagrams for a datagram-oriented socket.\n \n             exit when Natural (Count) >= Req.Size;\n          end if;\n       end loop;\n \n-      Task_Lock.Unlock;\n-\n       return System.CRTL.ssize_t (Count);\n-\n-   exception\n-      when others =>\n-         if Locked then\n-            Task_Lock.Unlock;\n-         end if;\n-         raise;\n    end C_Recvmsg;\n \n    --------------\n@@ -411,8 +371,8 @@ package body GNAT.Sockets.Thin is\n       Last : aliased C.int;\n \n    begin\n-      --  Asynchronous connection failures are notified in the exception fd set\n-      --  instead of the write fd set. To ensure POSIX compatibility, copy\n+      --  Asynchronous connection failures are notified in the exception fd\n+      --  set instead of the write fd set. To ensure POSIX compatibility, copy\n       --  write fd set into exception fd set. Once select() returns, check any\n       --  socket present in the exception fd set and peek at incoming\n       --  out-of-band data. If the test is not successful, and the socket is\n@@ -511,13 +471,10 @@ package body GNAT.Sockets.Thin is\n    begin\n       --  Windows does not provide an implementation of sendmsg(). The spec for\n       --  WSASendMsg() is incompatible with the data types we define, and is\n-      --  not available in all versions of Windows. So, we'll use C_Sendto\n-      --  instead.\n-\n-      Task_Lock.Lock;\n+      --  available starting with Windows Vista and Server 2008 only. So\n+      --  use C_Sendto instead.\n \n       for J in Iovec'Range loop\n-\n          Res :=\n            C_Sendto\n             (S,\n@@ -528,20 +485,13 @@ package body GNAT.Sockets.Thin is\n              Tolen => C.int (MH.Msg_Namelen));\n \n          if Res < 0 then\n-            Task_Lock.Unlock;\n             return System.CRTL.ssize_t (Res);\n          else\n             Count := Count + Res;\n          end if;\n       end loop;\n \n-      Task_Lock.Unlock;\n-\n       return System.CRTL.ssize_t (Count);\n-   exception\n-      when others =>\n-         Task_Lock.Unlock;\n-         raise;\n    end C_Sendmsg;\n \n    --------------\n@@ -563,13 +513,12 @@ package body GNAT.Sockets.Thin is\n    package body Host_Error_Messages is\n \n       --  On Windows, socket and host errors share the same code space, and\n-      --  error messages are provided by Socket_Error_Message. The default\n-      --  separate body for Host_Error_Messages is therefore not used in\n-      --  this case.\n+      --  error messages are provided by Socket_Error_Message, so the default\n+      --  separate body for Host_Error_Messages is not used in this case.\n \n       function Host_Error_Message\n         (H_Errno : Integer) return C.Strings.chars_ptr\n-        renames Socket_Error_Message;\n+         renames Socket_Error_Message;\n \n    end Host_Error_Messages;\n "}, {"sha": "6ffd06631e7141057ca600ed3850fa327185b0e6", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2008-2009, AdaCore                     --\n+--                     Copyright (C) 2008-2010, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -294,18 +294,18 @@ package GNAT.Sockets.Thin_Common is\n       H_Errnop  : not null access C.int) return C.int;\n \n    function C_Getservbyname\n-     (Name     : C.char_array;\n-      Proto    : C.char_array;\n-      Ret      : not null access Servent;\n-      Buf      : System.Address;\n-      Buflen   : C.int) return C.int;\n+     (Name   : C.char_array;\n+      Proto  : C.char_array;\n+      Ret    : not null access Servent;\n+      Buf    : System.Address;\n+      Buflen : C.int) return C.int;\n \n    function C_Getservbyport\n-     (Port     : C.int;\n-      Proto    : C.char_array;\n-      Ret      : not null access Servent;\n-      Buf      : System.Address;\n-      Buflen   : C.int) return C.int;\n+     (Port   : C.int;\n+      Proto  : C.char_array;\n+      Ret    : not null access Servent;\n+      Buf    : System.Address;\n+      Buflen : C.int) return C.int;\n \n    ------------------------------------\n    -- Scatter/gather vector handling --"}, {"sha": "bdd9702af94329369fb162b1fd6ea431a18eb1c9", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -741,7 +741,7 @@ begin\n       --  Acquire all information in ALI files that have been read in\n \n       for Index in ALIs.First .. ALIs.Last loop\n-         Read_ALI (Index);\n+         Read_Withed_ALIs (Index);\n       end loop;\n \n       --  Quit if some file needs compiling"}, {"sha": "5614553c77b935a76880c3f8766c36f002ede407", "filename": "gcc/ada/s-intman-vxworks.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fs-intman-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fs-intman-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.ads?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,8 +59,7 @@ package System.Interrupt_Management is\n \n    type Interrupt_Set is array (Interrupt_ID) of Boolean;\n \n-   subtype Signal_ID is Interrupt_ID\n-     range 0 .. Interfaces.C.\"-\" (System.OS_Interface.NSIG, 1);\n+   subtype Signal_ID is Interrupt_ID range 0 .. System.OS_Interface.NSIG - 1;\n \n    type Signal_Set is array (Signal_ID) of Boolean;\n \n@@ -74,7 +73,7 @@ package System.Interrupt_Management is\n    --  convention that ID zero is not used for any \"real\" signals, and SIGRARE\n    --  = 0 when SIGRARE is not one of the locally supported signals, we can\n    --  write:\n-   --     Reserved (SIGRARE) := true;\n+   --     Reserved (SIGRARE) := True;\n    --  and the initialization code will be portable.\n \n    Abort_Task_Interrupt : Signal_ID;"}, {"sha": "c33083006b66997fe76c264e75d7ee7c0766c963", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -1385,9 +1385,17 @@ package body Sem_Ch4 is\n    procedure Analyze_Conditional_Expression (N : Node_Id) is\n       Condition : constant Node_Id := First (Expressions (N));\n       Then_Expr : constant Node_Id := Next (Condition);\n-      Else_Expr : constant Node_Id := Next (Then_Expr);\n+      Else_Expr : Node_Id;\n \n    begin\n+      --  Defend against error of missing expressions from previous error\n+\n+      if No (Then_Expr) then\n+         return;\n+      end if;\n+\n+      Else_Expr := Next (Then_Expr);\n+\n       if Comes_From_Source (N) then\n          Check_Compiler_Unit (N);\n       end if;"}, {"sha": "3ab997b22aa29df38a0f3add83b17d869328a45c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -8105,6 +8105,7 @@ package body Sem_Res is\n          end if;\n \n       elsif Is_Entity_Name (Name)\n+        or else Nkind (Name) = N_Explicit_Dereference\n         or else (Nkind (Name) = N_Function_Call\n                   and then not Is_Constrained (Etype (Name)))\n       then"}, {"sha": "4fff3f4fcdb24e3aaa66816fc961b700599161ee", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c994759f3581d979a57ce31cfab10cd5329bb44/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=6c994759f3581d979a57ce31cfab10cd5329bb44", "patch": "@@ -1251,14 +1251,20 @@ package body Sprint is\n             declare\n                Condition : constant Node_Id := First (Expressions (Node));\n                Then_Expr : constant Node_Id := Next (Condition);\n-               Else_Expr : constant Node_Id := Next (Then_Expr);\n+\n             begin\n                Write_Str_With_Col_Check_Sloc (\"(if \");\n                Sprint_Node (Condition);\n                Write_Str_With_Col_Check (\" then \");\n-               Sprint_Node (Then_Expr);\n-               Write_Str_With_Col_Check (\" else \");\n-               Sprint_Node (Else_Expr);\n+\n+               --  Defense against junk here!\n+\n+               if Present (Then_Expr) then\n+                  Sprint_Node (Then_Expr);\n+                  Write_Str_With_Col_Check (\" else \");\n+                  Sprint_Node (Next (Then_Expr));\n+               end if;\n+\n                Write_Char (')');\n             end;\n "}]}