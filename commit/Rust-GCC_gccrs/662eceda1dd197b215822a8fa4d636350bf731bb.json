{"sha": "662eceda1dd197b215822a8fa4d636350bf731bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyZWNlZGExZGQxOTdiMjE1ODIyYThmYTRkNjM2MzUwYmY3MzFiYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-11-12T23:48:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-11-12T23:48:25Z"}, "message": "tree.c (build_target_expr_with_type): Treate VA_ARG_EXPR like CONSTRUCTOR.\n\n\t* tree.c (build_target_expr_with_type): Treate VA_ARG_EXPR like\n\tCONSTRUCTOR.\n\nFrom-SVN: r73521", "tree": {"sha": "dc96649f06a0a81734786c3bb79e2278ae5cdfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc96649f06a0a81734786c3bb79e2278ae5cdfeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662eceda1dd197b215822a8fa4d636350bf731bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662eceda1dd197b215822a8fa4d636350bf731bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662eceda1dd197b215822a8fa4d636350bf731bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662eceda1dd197b215822a8fa4d636350bf731bb/comments", "author": null, "committer": null, "parents": [{"sha": "0c7c472e8833a0538326f2ddf0fcfb01b25531d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c7c472e8833a0538326f2ddf0fcfb01b25531d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c7c472e8833a0538326f2ddf0fcfb01b25531d5"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "0584924080d08b6c5bd1fe24ff93057c15fab8e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662eceda1dd197b215822a8fa4d636350bf731bb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662eceda1dd197b215822a8fa4d636350bf731bb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=662eceda1dd197b215822a8fa4d636350bf731bb", "patch": "@@ -1,5 +1,8 @@\n 2003-11-12  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* tree.c (build_target_expr_with_type): Treate VA_ARG_EXPR like\n+\tCONSTRUCTOR.\n+\n \t* decl.c (cp_make_fname_decl): When creating a top-level\n \t__FUNCTION__-like symbol, do register it with pushdecl.\n "}, {"sha": "c14289d0d9031913b94dabe2225e3c29af325aa9", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662eceda1dd197b215822a8fa4d636350bf731bb/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662eceda1dd197b215822a8fa4d636350bf731bb/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=662eceda1dd197b215822a8fa4d636350bf731bb", "patch": "@@ -312,11 +312,13 @@ build_target_expr_with_type (tree init, tree type)\n     return init;\n   else if (CLASS_TYPE_P (type) && !TYPE_HAS_TRIVIAL_INIT_REF (type)\n \t   && TREE_CODE (init) != COND_EXPR\n-\t   && TREE_CODE (init) != CONSTRUCTOR)\n+\t   && TREE_CODE (init) != CONSTRUCTOR\n+\t   && TREE_CODE (init) != VA_ARG_EXPR)\n     /* We need to build up a copy constructor call.  COND_EXPR is a special\n        case because we already have copies on the arms and we don't want\n        another one here.  A CONSTRUCTOR is aggregate initialization, which\n-       is handled separately.  */\n+       is handled separately.  A VA_ARG_EXPR is magic creation of an\n+       aggregate; there's no additional work to be done.  */\n     return force_rvalue (init);\n \n   slot = build_decl (VAR_DECL, NULL_TREE, type);"}]}