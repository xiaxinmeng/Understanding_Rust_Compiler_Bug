{"sha": "e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU5YmFhMWY4M2ZkMDUzOTc5YzYzN2YxMmY4OWNkZjA0ZDFkNWVkNQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2003-04-18T22:11:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-18T22:11:57Z"}, "message": "integrate.c (expand_inline_function): Ensure non-const actuals don't end up const in the caller's flow after...\n\n        * integrate.c (expand_inline_function): Ensure non-const actuals\n        don't end up const in the caller's flow after conversion to possibly\n        const formal type.\n\nFrom-SVN: r65794", "tree": {"sha": "6969ca4ed91ad3bb2b2cec1840cf3c2ba1608f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6969ca4ed91ad3bb2b2cec1840cf3c2ba1608f4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59baa1f83fd053979c637f12f89cdf04d1d5ed5/comments", "author": null, "committer": null, "parents": [{"sha": "8dcea3f35aa46a95aef9b4841b686744214f5690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dcea3f35aa46a95aef9b4841b686744214f5690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dcea3f35aa46a95aef9b4841b686744214f5690"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "0a9d5e23e1093f34ebbb527fc4fdf13df5a5afcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59baa1f83fd053979c637f12f89cdf04d1d5ed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59baa1f83fd053979c637f12f89cdf04d1d5ed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "patch": "@@ -1,3 +1,9 @@\n+2003-04-18  Olivier Hainque <hainque@act-europe.fr>\n+\n+        * integrate.c (expand_inline_function): Ensure non-const actuals\n+        don't end up const in the caller's flow after conversion to possibly\n+        const formal type.\n+\n 2003-04-18  Vincent Celier  <celier@gnat.com>\n \n         * dwarf2out.c (loc_descriptor_from_tree): Treat all *_MOD_EXPR"}, {"sha": "60fa2acd13a6609688be8bb9bf531a42099084ad", "filename": "gcc/integrate.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59baa1f83fd053979c637f12f89cdf04d1d5ed5/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59baa1f83fd053979c637f12f89cdf04d1d5ed5/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=e59baa1f83fd053979c637f12f89cdf04d1d5ed5", "patch": "@@ -810,6 +810,14 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n       else\n \targ_vals[i] = 0;\n \n+      /* If the formal type was const but the actual was not, we might\n+\t end up here with an rtx wrongly tagged unchanging in the caller's\n+\t context.  Fix that.  */\n+      if (arg_vals[i] != 0 \n+\t  && (GET_CODE (arg_vals[i]) == REG || GET_CODE (arg_vals[i]) == MEM)\n+\t  && ! TREE_READONLY (TREE_VALUE (actual)))\n+\tRTX_UNCHANGING_P (arg_vals[i]) = 0;      \n+\n       if (arg_vals[i] != 0\n \t  && (! TREE_READONLY (formal)\n \t      /* If the parameter is not read-only, copy our argument through"}]}