{"sha": "ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwMjkyMTNkZjc4NzZhYzZlNzVjNGMzZTNkYjBjMWI1ZmRhZGE1MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-12-18T05:50:43Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-18T05:50:43Z"}, "message": "calls.c (load_register_parameters): Don't use LOAD_ARGS_REVERSED.\n\n\t* calls.c (load_register_parameters): Don't use\n\tLOAD_ARGS_REVERSED.\n\t* system.h (LOAD_ARGS_REVERSED): Poison.\n\t* doc/tm.texi (LOAD_ARGS_REVERSED): Remove.\n\nFrom-SVN: r74773", "tree": {"sha": "2c522ad24a6bbc5f260c67e592fbe1fd8c08871f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c522ad24a6bbc5f260c67e592fbe1fd8c08871f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/comments", "author": null, "committer": null, "parents": [{"sha": "f9bed9d36e206ceb6a353371bf8d33f1a4491889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9bed9d36e206ceb6a353371bf8d33f1a4491889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9bed9d36e206ceb6a353371bf8d33f1a4491889"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "b0c3a3018c95567e1b0fdc689b80f238a54cf3e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "patch": "@@ -1,3 +1,10 @@\n+2003-12-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* calls.c (load_register_parameters): Don't use\n+\tLOAD_ARGS_REVERSED.\n+\t* system.h (LOAD_ARGS_REVERSED): Poison.\n+\t* doc/tm.texi (LOAD_ARGS_REVERSED): Remove.\n+\n 2003-12-17  Per Bothner  <per@bothner.com>\n \n \t* emit-rtl.c (set_new_first_and_last_label_num):  Remove function."}, {"sha": "e589de10440aef5f6217586f0f380d0ff20bdcce", "filename": "gcc/calls.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "patch": "@@ -1601,11 +1601,7 @@ load_register_parameters (struct arg_data *args, int num_actuals,\n {\n   int i, j;\n \n-#ifdef LOAD_ARGS_REVERSED\n-  for (i = num_actuals - 1; i >= 0; i--)\n-#else\n   for (i = 0; i < num_actuals; i++)\n-#endif\n     {\n       rtx reg = ((flags & ECF_SIBCALL)\n \t\t ? args[i].tail_call_reg : args[i].reg);"}, {"sha": "028e59dd9e943133ce657ae2a04a980aee4fcc58", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "patch": "@@ -3811,13 +3811,6 @@ be passed in a pair of floating point registers, even though a complex\n float would fit in one 64-bit floating point register.\n @end defmac\n \n-@defmac LOAD_ARGS_REVERSED\n-If defined, the order in which arguments are loaded into their\n-respective argument registers is reversed so that the last\n-argument is loaded first.  This macro only affects arguments\n-passed in registers.\n-@end defmac\n-\n @node Scalar Return\n @subsection How Scalar Function Values Are Returned\n @cindex return values in registers"}, {"sha": "5bcdd36baf7964d85e7b77bba94102064767b057", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba029213df7876ac6e75c4c3e3db0c1b5fdada51/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=ba029213df7876ac6e75c4c3e3db0c1b5fdada51", "patch": "@@ -619,7 +619,8 @@ typedef char _Bool;\n \tDBX_WORKING_DIRECTORY INSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t   \\\n \tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE NEED_ATEXIT ON_EXIT\t   \\\n \tEXIT_BODY OBJECT_FORMAT_ROSE MULTIBYTE_CHARS MAP_CHARACTER\t   \\\n-\tLIBGCC_NEEDS_DOUBLE FINAL_PRESCAN_LABEL DEFAULT_CALLER_SAVES\n+\tLIBGCC_NEEDS_DOUBLE FINAL_PRESCAN_LABEL DEFAULT_CALLER_SAVES\t   \\\n+\tLOAD_ARGS_REVERSED\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}