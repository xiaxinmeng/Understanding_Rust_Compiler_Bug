{"sha": "ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEzMzZkZDUxMGJmMjBiNWEzZTNkN2RhODRjODEwOGM0MmU0NGI2Mw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2007-08-18T20:53:02Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-08-18T20:53:02Z"}, "message": "tree-affine.h (print_aff): New prototype.\n\n2007-08-18  Andrew Pinski  <pinskia@gmail.com>\n\n        * tree-affine.h (print_aff): New prototype.\n        (debug_aff): Likewise.\n        * tree-affine.c (print_aff): New function.\n        (debug_aff): Likewise.\n\nFrom-SVN: r127615", "tree": {"sha": "7ae0a361840bc2824923927c3b59ff16ea8325e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae0a361840bc2824923927c3b59ff16ea8325e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cda5e672d80cf69da6901c62ec155a0731277b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cda5e672d80cf69da6901c62ec155a0731277b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cda5e672d80cf69da6901c62ec155a0731277b95"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "2b1d5caa60947c52dfb65ff3ac822d7d9c629c00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "patch": "@@ -1,3 +1,10 @@\n+2007-08-18  Andrew Pinski  <pinskia@gmail.com>\n+\n+\t* tree-affine.h (print_aff): New prototype.\n+\t(debug_aff): Likewise.\n+\t* tree-affine.c (print_aff): New function.\n+\t(debug_aff): Likewise.\n+\n 2007-08-18  Paul Brook  <paul@codesourcery.com>\n             Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "b6c47d60618e29eb74a38ab49c8560f76f8cb733", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "patch": "@@ -719,3 +719,48 @@ aff_combination_constant_multiple_p (aff_tree *val, aff_tree *div,\n   gcc_assert (mult_set);\n   return true;\n }\n+\n+/* Prints the affine VAL to the FILE. */\n+\n+void\n+print_aff (FILE *file, aff_tree *val)\n+{\n+  unsigned i;\n+  bool uns = TYPE_UNSIGNED (val->type);\n+  if (POINTER_TYPE_P (val->type))\n+    uns = false;\n+  fprintf (file, \"{\\n  type = \");\n+  print_generic_expr (file, val->type, TDF_VOPS|TDF_MEMSYMS);\n+  fprintf (file, \"\\n  offset = \");\n+  dump_double_int (file, val->offset, uns);\n+  if (val->n > 0)\n+    {\n+      fprintf (file, \"\\n  elements = {\\n\");\n+      for (i = 0; i < val->n; i++)\n+\t{\n+\t  fprintf (file, \"    [%d] = \", i);\n+\t  print_generic_expr (file, val->elts[i].val, TDF_VOPS|TDF_MEMSYMS);\n+\t  \n+\t  fprintf (file, \" * \");\n+\t  dump_double_int (file, val->elts[i].coef, uns);\n+\t  if (i != val->n - 1)\n+\t    fprintf (file, \", \\n\");\n+\t}\n+      fprintf (file, \"\\n  }\");\n+  }\n+  if (val->rest)\n+    {\n+      fprintf (file, \"\\n  rest = \");\n+      print_generic_expr (file, val->rest, TDF_VOPS|TDF_MEMSYMS);\n+    }\n+  fprintf (file, \"\\n}\");\n+}\n+\n+/* Prints the affine VAL to the standard error, used for debugging.  */\n+\n+void\n+debug_aff (aff_tree *val)\n+{\n+  print_aff (stderr, val);\n+  fprintf (stderr, \"\\n\");\n+}"}, {"sha": "c7dafab8f4ee9f36522bcae7379cf5aec8178657", "filename": "gcc/tree-affine.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2Ftree-affine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea336dd510bf20b5a3e3d7da84c8108c42e44b63/gcc%2Ftree-affine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.h?ref=ea336dd510bf20b5a3e3d7da84c8108c42e44b63", "patch": "@@ -74,3 +74,7 @@ bool aff_combination_constant_multiple_p (aff_tree *, aff_tree *, double_int *);\n void tree_to_aff_combination_expand (tree, tree, aff_tree *,\n \t\t\t\t     struct pointer_map_t **);\n void free_affine_expand_cache (struct pointer_map_t **);\n+\n+/* Debugging functions.  */\n+void print_aff (FILE *, aff_tree *);\n+void debug_aff (aff_tree *);"}]}