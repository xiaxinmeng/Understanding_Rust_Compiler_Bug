{"sha": "e6121733d569202d5e790c1e085c852748364f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxMjE3MzNkNTY5MjAyZDVlNzkwYzFlMDg1Yzg1Mjc0ODM2NGY5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-20T09:26:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-20T09:26:48Z"}, "message": "re PR tree-optimization/63962 ([x86] Code pessimization after r217213)\n\n2014-11-20  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/63962\n\t* match.pd ((p +p off1) +p off2 -> (p +p (off1 + off2))):\n\tGuard with single-use operand 0.\n\n\t* gcc.dg/tree-ssa/forwprop-30.c: New testcase.\n\nFrom-SVN: r217828", "tree": {"sha": "9922d9c8cb2ed3b5af82ccc946330f23519ebf59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9922d9c8cb2ed3b5af82ccc946330f23519ebf59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6121733d569202d5e790c1e085c852748364f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6121733d569202d5e790c1e085c852748364f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6121733d569202d5e790c1e085c852748364f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6121733d569202d5e790c1e085c852748364f99/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b00734dfd64b2014140f84b821d1fdcd4a53affe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00734dfd64b2014140f84b821d1fdcd4a53affe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00734dfd64b2014140f84b821d1fdcd4a53affe"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "2a4d0099884f5f65add01321f13ee3060791c414", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6121733d569202d5e790c1e085c852748364f99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6121733d569202d5e790c1e085c852748364f99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6121733d569202d5e790c1e085c852748364f99", "patch": "@@ -1,3 +1,9 @@\n+2014-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63962\n+\t* match.pd ((p +p off1) +p off2 -> (p +p (off1 + off2))):\n+\tGuard with single-use operand 0.\n+\n 2014-11-20   Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63677"}, {"sha": "01f610c6b6f3e69be24d767d39611b39e0e1d679", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6121733d569202d5e790c1e085c852748364f99/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6121733d569202d5e790c1e085c852748364f99/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=e6121733d569202d5e790c1e085c852748364f99", "patch": "@@ -370,8 +370,9 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Associate (p +p off1) +p off2 as (p +p (off1 + off2)).  */\n (simplify\n-  (pointer_plus (pointer_plus @0 @1) @3)\n-  (pointer_plus @0 (plus @1 @3)))\n+  (pointer_plus (pointer_plus@2 @0 @1) @3)\n+  (if (TREE_CODE (@2) != SSA_NAME || has_single_use (@2))\n+   (pointer_plus @0 (plus @1 @3))))\n \n /* Pattern match\n      tem1 = (long) ptr1;"}, {"sha": "853a83b52bcb6096141427ec53cf9b84c54ac22c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6121733d569202d5e790c1e085c852748364f99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6121733d569202d5e790c1e085c852748364f99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6121733d569202d5e790c1e085c852748364f99", "patch": "@@ -1,3 +1,8 @@\n+2014-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63962\n+\t* gcc.dg/tree-ssa/forwprop-30.c: New testcase.\n+\n 2014-11-20   Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63677"}, {"sha": "96554f2c70a3c7821a6b5f93b7241d67d4e4ad77", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-30.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6121733d569202d5e790c1e085c852748364f99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6121733d569202d5e790c1e085c852748364f99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-30.c?ref=e6121733d569202d5e790c1e085c852748364f99", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int *p;\n+int *foo (int *q, int i, int j)\n+{\n+  p = q + i;\n+  return p + j;\n+}\n+\n+/* We shouldn't associate (q + i) + j to q + (i + j) here as we\n+   need q + i as well.  */\n+\n+/* { dg-final { scan-tree-dump-times \"\\\\+\" 2 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}