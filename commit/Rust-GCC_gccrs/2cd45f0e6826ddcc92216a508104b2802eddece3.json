{"sha": "2cd45f0e6826ddcc92216a508104b2802eddece3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkNDVmMGU2ODI2ZGRjYzkyMjE2YTUwODEwNGIyODAyZWRkZWNlMw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@mips.com", "date": "2012-12-10T22:19:16Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2012-12-10T22:19:16Z"}, "message": "re PR target/54061 (gcc.c-torture/compile/mipscop-*.c ICEs with -g)\n\n2012-12-10  Steve Ellcey  <sellcey@mips.com>\n\n\tPR target/54061\n\trtl.h (IGNORED_DWARF_REGNUM): New.\n\t* dwarf2out.c (reg_loc_descriptor): Check for IGNORED_DWARF_REGNUM.\n\t(mem_loc_descriptor): Ditto.\n\t* config/mips/mips.h (ALL_COP_REG_FIRST): New.\n\t(ALL_COP_REG_LAST): New.\n\t(ALL_COP_REG_NUM): Redefine using above macros.\n\t* config/mips/mips.c (mips_option_override): Set mips_dbx_regno\n\tcoprocessor entries to IGNORED_DWARF_REGNUM.\n\nFrom-SVN: r194372", "tree": {"sha": "163fb7c1ecdd76bc467cb24ccfc8f7a0280d9fc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/163fb7c1ecdd76bc467cb24ccfc8f7a0280d9fc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cd45f0e6826ddcc92216a508104b2802eddece3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd45f0e6826ddcc92216a508104b2802eddece3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd45f0e6826ddcc92216a508104b2802eddece3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd45f0e6826ddcc92216a508104b2802eddece3/comments", "author": null, "committer": null, "parents": [{"sha": "4d63a95eecca6f1cce4c11a463108d741c630ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d63a95eecca6f1cce4c11a463108d741c630ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d63a95eecca6f1cce4c11a463108d741c630ff5"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "7eb94371385f2435ebd4c1ad8c33790b8a885310", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cd45f0e6826ddcc92216a508104b2802eddece3", "patch": "@@ -1,3 +1,15 @@\n+2012-12-10  Steve Ellcey  <sellcey@mips.com>\n+\n+\tPR target/54061\n+\trtl.h (IGNORED_DWARF_REGNUM): New.\n+\t* dwarf2out.c (reg_loc_descriptor): Check for IGNORED_DWARF_REGNUM.\n+\t(mem_loc_descriptor): Ditto.\n+\t* config/mips/mips.h (ALL_COP_REG_FIRST): New.\n+\t(ALL_COP_REG_LAST): New.\n+\t(ALL_COP_REG_NUM): Redefine using above macros.\n+\t* config/mips/mips.c (mips_option_override): Set mips_dbx_regno\n+\tcoprocessor entries to IGNORED_DWARF_REGNUM.\n+\n 2012-12-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/55466"}, {"sha": "820b228d3a648446d47ffb26326d7008abb51026", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=2cd45f0e6826ddcc92216a508104b2802eddece3", "patch": "@@ -16757,6 +16757,9 @@ mips_option_override (void)\n   for (i = FP_REG_FIRST; i <= FP_REG_LAST; i++)\n     mips_dbx_regno[i] = i + start;\n \n+  for (i = ALL_COP_REG_FIRST; i <= ALL_COP_REG_LAST; i++)\n+    mips_dbx_regno[i] = IGNORED_DWARF_REGNUM;\n+\n   /* Accumulator debug registers use big-endian ordering.  */\n   mips_dbx_regno[HI_REGNUM] = MD_DBX_FIRST + 0;\n   mips_dbx_regno[LO_REGNUM] = MD_DBX_FIRST + 1;"}, {"sha": "60b26cb2099111946cfc6ce40aba3f014b54efa3", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=2cd45f0e6826ddcc92216a508104b2802eddece3", "patch": "@@ -1641,8 +1641,11 @@ struct mips_cpu_info {\n #define COP3_REG_FIRST 144\n #define COP3_REG_LAST 175\n #define COP3_REG_NUM (COP3_REG_LAST - COP3_REG_FIRST + 1)\n-/* ALL_COP_REG_NUM assumes that COP0,2,and 3 are numbered consecutively.  */\n-#define ALL_COP_REG_NUM (COP3_REG_LAST - COP0_REG_FIRST + 1)\n+\n+/* These definitions assume that COP0, 2 and 3 are numbered consecutively.  */\n+#define ALL_COP_REG_FIRST COP0_REG_FIRST\n+#define ALL_COP_REG_LAST COP3_REG_LAST\n+#define ALL_COP_REG_NUM (ALL_COP_REG_LAST - ALL_COP_REG_FIRST + 1)\n \n #define DSP_ACC_REG_FIRST 176\n #define DSP_ACC_REG_LAST 181"}, {"sha": "c92fa4bd4b58e393b157ee28aae04c6bafbffeb6", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2cd45f0e6826ddcc92216a508104b2802eddece3", "patch": "@@ -10499,7 +10499,12 @@ reg_loc_descriptor (rtx rtl, enum var_init_status initialized)\n   if (hard_regno_nregs[REGNO (rtl)][GET_MODE (rtl)] > 1 || regs)\n     return multiple_reg_loc_descriptor (rtl, regs, initialized);\n   else\n-    return one_reg_loc_descriptor (dbx_reg_number (rtl), initialized);\n+    {\n+      unsigned int dbx_regnum = dbx_reg_number (rtl);\n+      if (dbx_regnum == IGNORED_DWARF_REGNUM)\n+\treturn 0;\n+      return one_reg_loc_descriptor (dbx_regnum, initialized);\n+    }\n }\n \n /* Return a location descriptor that designates a machine register for\n@@ -11926,6 +11931,7 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n \t      ))\n \t{\n \t  dw_die_ref type_die;\n+\t  unsigned int dbx_regnum;\n \n \t  if (dwarf_strict)\n \t    break;\n@@ -11935,8 +11941,12 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n \t\t\t\t\t GET_MODE_CLASS (mode) == MODE_INT);\n \t  if (type_die == NULL)\n \t    break;\n+\n+\t  dbx_regnum = dbx_reg_number (rtl);\n+\t  if (dbx_regnum == IGNORED_DWARF_REGNUM)\n+\t    break;\n \t  mem_loc_result = new_loc_descr (DW_OP_GNU_regval_type,\n-\t\t\t\t\t  dbx_reg_number (rtl), 0);\n+\t\t\t\t\t  dbx_regnum, 0);\n \t  mem_loc_result->dw_loc_oprnd2.val_class = dw_val_class_die_ref;\n \t  mem_loc_result->dw_loc_oprnd2.v.val_die_ref.die = type_die;\n \t  mem_loc_result->dw_loc_oprnd2.v.val_die_ref.external = 0;\n@@ -12138,9 +12148,13 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n \t    op0 = mem_loc_descriptor (ENTRY_VALUE_EXP (rtl), mode,\n \t\t\t\t      VOIDmode, VAR_INIT_STATUS_INITIALIZED);\n \t  else\n-\t    op0\n-\t      = one_reg_loc_descriptor (dbx_reg_number (ENTRY_VALUE_EXP (rtl)),\n-\t\t\t\t\tVAR_INIT_STATUS_INITIALIZED);\n+\t    {\n+              unsigned int dbx_regnum = dbx_reg_number (ENTRY_VALUE_EXP (rtl));\n+\t      if (dbx_regnum == IGNORED_DWARF_REGNUM)\n+\t\treturn NULL;\n+\t      op0 = one_reg_loc_descriptor (dbx_regnum,\n+\t\t\t\t\t    VAR_INIT_STATUS_INITIALIZED);\n+\t    }\n \t}\n       else if (MEM_P (ENTRY_VALUE_EXP (rtl))\n \t       && REG_P (XEXP (ENTRY_VALUE_EXP (rtl), 0)))"}, {"sha": "c121f13bdc3a8e057bdaf4218ba7d65dc6e7e32f", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd45f0e6826ddcc92216a508104b2802eddece3/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2cd45f0e6826ddcc92216a508104b2802eddece3", "patch": "@@ -2439,6 +2439,9 @@ extern rtx gen_rtx_MEM (enum machine_mode, rtx);\n /* REGNUM never really appearing in the INSN stream.  */\n #define INVALID_REGNUM\t\t\t(~(unsigned int) 0)\n \n+/* REGNUM for which no debug information can be generated.  */\n+#define IGNORED_DWARF_REGNUM            (INVALID_REGNUM - 1)\n+\n extern rtx output_constant_def (tree, int);\n extern rtx lookup_constant_def (tree);\n "}]}