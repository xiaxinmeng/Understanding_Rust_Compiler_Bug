{"sha": "0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU4ODc5Y2IzNmVjYTE3ZTdiMWZmOGYyMTI0YmJjNWVjM2M2ZGM5MQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-04T21:21:21Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-04T21:21:21Z"}, "message": "PR fortran.91959\n\n2019-10-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran.91959\n\t* fortran/decl.c (variable_decl): Re-arrange code for matching %FILL.\n\n2019-10-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran.91959\n\t* gfortran.dg/pr91959.f90: New test.\n\nFrom-SVN: r276601", "tree": {"sha": "fd3df1f93a3f6ab12af8579221760afa0f7cf4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd3df1f93a3f6ab12af8579221760afa0f7cf4b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/comments", "author": null, "committer": null, "parents": [{"sha": "36edf9cab1d4a444497c2aaf57c4ce61f7a67901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36edf9cab1d4a444497c2aaf57c4ce61f7a67901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36edf9cab1d4a444497c2aaf57c4ce61f7a67901"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "dc1e19ac78bce50246edb48b2de137c43cdc3e71", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "patch": "@@ -1,3 +1,8 @@\n+2019-10-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran.91959\n+\t* fortran/decl.c (variable_decl): Re-arrange code for matching %FILL.\n+\n 2019-10-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* error (error_print, gfc_format_decoder): Fix off-by one issue with %C."}, {"sha": "d439906eca9de505c5fb683d05df690d482350df", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 33, "deletions": 27, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "patch": "@@ -2441,6 +2441,7 @@ variable_decl (int elem)\n   match m;\n   bool t;\n   gfc_symbol *sym;\n+  char c;\n \n   initializer = NULL;\n   as = NULL;\n@@ -2454,40 +2455,45 @@ variable_decl (int elem)\n      name to be '%FILL' which gives it an anonymous (inaccessible) name.  */\n   m = MATCH_NO;\n   gfc_gobble_whitespace ();\n-  if (gfc_peek_ascii_char () == '%')\n+  c = gfc_peek_ascii_char ();\n+  if (c == '%')\n     {\n-      gfc_next_ascii_char ();\n+      gfc_next_ascii_char ();\t/* Burn % character.  */\n       m = gfc_match (\"fill\");\n-    }\n-\n-  if (m != MATCH_YES)\n-    {\n-      m = gfc_match_name (name);\n-      if (m != MATCH_YES)\n-\tgoto cleanup;\n-    }\n-\n-  else\n-    {\n-      m = MATCH_ERROR;\n-      if (gfc_current_state () != COMP_STRUCTURE)\n+      if (m == MATCH_YES)\n \t{\n-\t  if (flag_dec_structure)\n-\t    gfc_error (\"%qs not allowed outside STRUCTURE at %C\", \"%FILL\");\n-\t  else\n-\t    gfc_error (\"%qs at %C is a DEC extension, enable with \"\n+\t  if (gfc_current_state () != COMP_STRUCTURE)\n+\t    {\n+\t      if (flag_dec_structure)\n+\t\tgfc_error (\"%qs not allowed outside STRUCTURE at %C\", \"%FILL\");\n+\t      else\n+\t\tgfc_error (\"%qs at %C is a DEC extension, enable with \"\n \t\t       \"%<-fdec-structure%>\", \"%FILL\");\n-\t  goto cleanup;\n-\t}\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n+\n+\t  if (attr_seen)\n+\t    {\n+\t      gfc_error (\"%qs entity cannot have attributes at %C\", \"%FILL\");\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n \n-      if (attr_seen)\n+\t  /* %FILL components are given invalid fortran names.  */\n+\t  snprintf (name, GFC_MAX_SYMBOL_LEN + 1, \"%%FILL%u\", fill_id++);\n+\t}\n+      else\n \t{\n-\t  gfc_error (\"%qs entity cannot have attributes at %C\", \"%FILL\");\n-\t  goto cleanup;\n+\t  gfc_error (\"Invalid character %qc in variable name at %C\", c);\n+\t  return MATCH_ERROR;\n \t}\n-\n-      /* %FILL components are given invalid fortran names.  */\n-      snprintf (name, GFC_MAX_SYMBOL_LEN + 1, \"%%FILL%u\", fill_id++);\n+    }\n+  else\n+    {\n+      m = gfc_match_name (name);\n+      if (m != MATCH_YES)\n+\tgoto cleanup;\n     }\n \n   var_locus = gfc_current_locus;"}, {"sha": "f9eefadf22baa6f06b936acfdf50a584ccd5f0e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "patch": "@@ -1,3 +1,8 @@\n+2019-10-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran.91959\n+\t* gfortran.dg/pr91959.f90: New test.\n+\n 2019-10-04  Rafael Tsuha  <rafael.tsuha@usp.br>\n \n         * gcc.dg/sinhovercosh-1.c: New test."}, {"sha": "788b413c447a2dc908243d9a1044d7d2de32b0c1", "filename": "gcc/testsuite/gfortran.dg/pr91959.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91959.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91959.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91959.f90?ref=0e8879cb36eca17e7b1ff8f2124bbc5ec3c6dc91", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/91959\n+! Code contributed by Gerhard Steinmetz\n+program p\n+   implicit none\n+   integer :: %a  ! { dg-error \"Invalid character\" }\n+   a = 1          ! { dg-error \"has no IMPLICIT type\" }\n+   print *, a \n+end"}]}