{"sha": "4267a4a6ce7a778a24e50fa36106ad0672aeb424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2N2E0YTZjZTdhNzc4YTI0ZTUwZmEzNjEwNmFkMDY3MmFlYjQyNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-01-08T14:10:44Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-01-08T14:10:44Z"}, "message": "re PR debug/55579 (SRA doesn't create debug stmts when they would be useful)\n\n2013-01-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR debug/55579\n\t* tree-sra.c (analyze_access_subtree): Return true also after\n\tpotentially creating a debug-only replacement.\n\ntestsuite/\n\t* gcc.dg/tree-ssa/pr55579.c: New test.\n\nFrom-SVN: r195015", "tree": {"sha": "bf20a1a93aced6f048f916251195f06361aa0722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf20a1a93aced6f048f916251195f06361aa0722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4267a4a6ce7a778a24e50fa36106ad0672aeb424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4267a4a6ce7a778a24e50fa36106ad0672aeb424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4267a4a6ce7a778a24e50fa36106ad0672aeb424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4267a4a6ce7a778a24e50fa36106ad0672aeb424/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80a8d5212e6f3841c5c20a04f3b479d4fb6f9b9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a8d5212e6f3841c5c20a04f3b479d4fb6f9b9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a8d5212e6f3841c5c20a04f3b479d4fb6f9b9d"}], "stats": {"total": 60, "additions": 42, "deletions": 18}, "files": [{"sha": "a4c8481ff5591eadee13bc82cd401bd811feaf38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4267a4a6ce7a778a24e50fa36106ad0672aeb424", "patch": "@@ -1,3 +1,9 @@\n+2013-01-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR debug/55579\n+\t* tree-sra.c (analyze_access_subtree): Return true also after\n+\tpotentially creating a debug-only replacement.\n+\n 2013-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/55890"}, {"sha": "5d6acaf6194529b04ce5bf8d183ce92e084d5011", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4267a4a6ce7a778a24e50fa36106ad0672aeb424", "patch": "@@ -1,3 +1,8 @@\n+2013-01-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR debug/55579\n+\t* gcc.dg/tree-ssa/pr55579.c: New test.\n+\n 2013-01-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* g++.dg/debug/dwarf2/pr54508.C: Allow for more whitespace after"}, {"sha": "a4f18253b736410040c84d44bd9adb5ddc3527f3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr55579.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr55579.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr55579.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr55579.c?ref=4267a4a6ce7a778a24e50fa36106ad0672aeb424", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -fdump-tree-esra\" } */\n+\n+struct S { int a; char b; char c; short d; };\n+\n+int\n+foo (int x)\n+{\n+  struct S s = { x + 1, x + 2, x + 3, x + 4 };\n+  char *p = &s.c;\n+  return x;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Created a debug-only replacement for s\" \"esra\" } } */"}, {"sha": "af5a36e57efd3bab310be98ce0c4e44fada127c3", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4267a4a6ce7a778a24e50fa36106ad0672aeb424/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=4267a4a6ce7a778a24e50fa36106ad0672aeb424", "patch": "@@ -2197,20 +2197,25 @@ analyze_access_subtree (struct access *root, struct access *parent,\n     }\n   else\n     {\n-      if (MAY_HAVE_DEBUG_STMTS && allow_replacements\n+      if (allow_replacements\n \t  && scalar && !root->first_child\n \t  && (root->grp_scalar_write || root->grp_assignment_write))\n \t{\n \t  gcc_checking_assert (!root->grp_scalar_read\n \t\t\t       && !root->grp_assignment_read);\n-\t  root->grp_to_be_debug_replaced = 1;\n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t  sth_created = true;\n+\t  if (MAY_HAVE_DEBUG_STMTS)\n \t    {\n-\t      fprintf (dump_file, \"Marking \");\n-\t      print_generic_expr (dump_file, root->base, 0);\n-\t      fprintf (dump_file, \" offset: %u, size: %u \",\n-\t\t       (unsigned) root->offset, (unsigned) root->size);\n-\t      fprintf (dump_file, \" to be replaced with debug statements.\\n\");\n+\t      root->grp_to_be_debug_replaced = 1;\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t{\n+\t\t  fprintf (dump_file, \"Marking \");\n+\t\t  print_generic_expr (dump_file, root->base, 0);\n+\t\t  fprintf (dump_file, \" offset: %u, size: %u \",\n+\t\t\t   (unsigned) root->offset, (unsigned) root->size);\n+\t\t  fprintf (dump_file, \" to be replaced with debug \"\n+\t\t\t   \"statements.\\n\");\n+\t\t}\n \t    }\n \t}\n \n@@ -2220,17 +2225,11 @@ analyze_access_subtree (struct access *root, struct access *parent,\n \troot->grp_total_scalarization = 0;\n     }\n \n-  if (sth_created\n-      && (!hole || root->grp_total_scalarization))\n-    {\n-      root->grp_covered = 1;\n-      return true;\n-    }\n-  if (root->grp_write || TREE_CODE (root->base) == PARM_DECL)\n+  if (!hole || root->grp_total_scalarization)\n+    root->grp_covered = 1;\n+  else if (root->grp_write || TREE_CODE (root->base) == PARM_DECL)\n     root->grp_unscalarized_data = 1; /* not covered and written to */\n-  if (sth_created)\n-    return true;\n-  return false;\n+  return sth_created;\n }\n \n /* Analyze all access trees linked by next_grp by the means of"}]}