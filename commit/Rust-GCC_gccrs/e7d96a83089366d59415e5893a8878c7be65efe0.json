{"sha": "e7d96a83089366d59415e5893a8878c7be65efe0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdkOTZhODMwODkzNjZkNTk0MTVlNTg5M2E4ODc4YzdiZTY1ZWZlMA==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2001-03-09T06:28:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-03-09T06:28:21Z"}, "message": "rtlanal.c (rtx_varies_p): Check operand 0 of a LO_SUM unless for_alias is set.\n\n        * rtlanal.c (rtx_varies_p): Check operand 0 of a\n        LO_SUM unless for_alias is set.\n\nFrom-SVN: r40340", "tree": {"sha": "e58d0b35b7101314a27ffafff223d1f068cc7c75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e58d0b35b7101314a27ffafff223d1f068cc7c75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7d96a83089366d59415e5893a8878c7be65efe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d96a83089366d59415e5893a8878c7be65efe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7d96a83089366d59415e5893a8878c7be65efe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d96a83089366d59415e5893a8878c7be65efe0/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ce693cd329cc4e6b7330403188c087b8abbf72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce693cd329cc4e6b7330403188c087b8abbf72c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce693cd329cc4e6b7330403188c087b8abbf72c"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "062ba490fe57ea27d5917b34eb983a6a31eb843e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d96a83089366d59415e5893a8878c7be65efe0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d96a83089366d59415e5893a8878c7be65efe0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7d96a83089366d59415e5893a8878c7be65efe0", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar  8 23:29:37 2001  John Wehle  (john@feith.com)\n+\n+\t* rtlanal.c (rtx_varies_p): Check operand 0 of a\n+\tLO_SUM unless for_alias is set.\n+\n 2001-03-08  Stan Shebs  <shebs@apple.com>\n \n \t* objc/objc-act.c: Fix old typos in comments, add comments for"}, {"sha": "be9374e68ebfadcb81cdf3a3288180ad0e8cfd46", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d96a83089366d59415e5893a8878c7be65efe0/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d96a83089366d59415e5893a8878c7be65efe0/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=e7d96a83089366d59415e5893a8878c7be65efe0", "patch": "@@ -163,8 +163,10 @@ rtx_varies_p (x, for_alias)\n \n     case LO_SUM:\n       /* The operand 0 of a LO_SUM is considered constant\n-\t (in fact is it related specifically to operand 1).  */\n-      return rtx_varies_p (XEXP (x, 1), for_alias);\n+\t (in fact it is related specifically to operand 1)\n+\t during alias analysis.  */\n+      return (! for_alias && rtx_varies_p (XEXP (x, 0), for_alias))\n+\t     || rtx_varies_p (XEXP (x, 1), for_alias);\n       \n     case ASM_OPERANDS:\n       if (MEM_VOLATILE_P (x))"}]}