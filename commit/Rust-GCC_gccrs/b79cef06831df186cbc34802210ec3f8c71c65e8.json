{"sha": "b79cef06831df186cbc34802210ec3f8c71c65e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc5Y2VmMDY4MzFkZjE4NmNiYzM0ODAyMjEwZWMzZjhjNzFjNjVlOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-24T21:20:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-24T21:20:33Z"}, "message": "re PR libstdc++/14252 (Problems with count and iterator_traits<istreambuf_iterator<char> >::difference_type)\n\n2004-02-24  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/14252\n\t* include/bits/postypes.h (class streamoff): Add operator++(),\n\toperator++(int), operator--() and operator--(int).\n\t* testsuite/27_io/fpos/14252.cc: New.\n\nFrom-SVN: r78388", "tree": {"sha": "4a9acb063388c3513db1b24c72f4a91ef0095f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a9acb063388c3513db1b24c72f4a91ef0095f99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b79cef06831df186cbc34802210ec3f8c71c65e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b79cef06831df186cbc34802210ec3f8c71c65e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b79cef06831df186cbc34802210ec3f8c71c65e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b79cef06831df186cbc34802210ec3f8c71c65e8/comments", "author": null, "committer": null, "parents": [{"sha": "212063a8446bfacef005a5060d7d316a763a7862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212063a8446bfacef005a5060d7d316a763a7862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212063a8446bfacef005a5060d7d316a763a7862"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "7751810a5c63fbb3dece8e0b9ce5c472b1ed73cb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b79cef06831df186cbc34802210ec3f8c71c65e8", "patch": "@@ -1,3 +1,10 @@\n+2004-02-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/14252\n+\t* include/bits/postypes.h (class streamoff): Add operator++(),\n+\toperator++(int), operator--() and operator--(int).\n+\t* testsuite/27_io/fpos/14252.cc: New.\n+\n 2004-02-24  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* include/bits/locale_facets.tcc (num_get::_M_extract_int): Fix bounds"}, {"sha": "b82b36e817fb751200a055314321a775b754958c", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=b79cef06831df186cbc34802210ec3f8c71c65e8", "patch": "@@ -126,6 +126,36 @@ namespace std\n       _M_off -= __off;\n       return *this;\n     }\n+\n+    streamoff&\n+    operator++()\n+    {\n+      ++_M_off;\n+      return *this;\n+    }\n+\n+    streamoff\n+    operator++(int)\n+    {\n+      const streamoff __tmp(*this);\n+      ++_M_off;\n+      return __tmp;\n+    }\n+\n+    streamoff&\n+    operator--()\n+    {\n+      --_M_off;\n+      return *this;\n+    }\n+\n+    streamoff\n+    operator--(int)\n+    {\n+      const streamoff __tmp(*this);\n+      --_M_off;\n+      return __tmp;\n+    }\n   };\n \n   /**"}, {"sha": "bc201a213f045a8cd7dbe304e24ea9c3fa076527", "filename": "libstdc++-v3/testsuite/27_io/fpos/14252.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14252.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b79cef06831df186cbc34802210ec3f8c71c65e8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14252.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14252.cc?ref=b79cef06831df186cbc34802210ec3f8c71c65e8", "patch": "@@ -0,0 +1,62 @@\n+// 2004-02-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.4.3 template class fpos\n+\n+#include <ios>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14252\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::streamoff off01 = 10;\n+  std::streamoff off02 = 2;\n+  std::streamoff off03 = 2004;\n+  std::streamoff off04 = 1;\n+\n+  VERIFY( off01++ == 10 );\n+  VERIFY( off01 == 11 );\n+  \n+  VERIFY( ++off02 == 3 );\n+  VERIFY( off02 == 3 );\n+\n+  VERIFY( off03-- == 2004 );\n+  VERIFY( off03 == 2003 );\n+\n+  VERIFY( --off04 == 0 );\n+  VERIFY( off04 == 0 );\n+} \n+\n+int main() \n+{\n+  test01();\n+  return 0;\n+}"}]}