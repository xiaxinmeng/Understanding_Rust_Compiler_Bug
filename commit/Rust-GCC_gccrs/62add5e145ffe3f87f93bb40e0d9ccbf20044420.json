{"sha": "62add5e145ffe3f87f93bb40e0d9ccbf20044420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhZGQ1ZTE0NWZmZTNmODdmOTNiYjQwZTBkOWNjYmYyMDA0NDQyMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-28T16:13:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-28T16:13:50Z"}, "message": "Core 898\n\n\tCore 898\n\t* semantics.c (constexpr_fn_retval): New.  Allow using-declaration\n\tand using-definition.\n\t(register_constexpr_fundef): Call it.\n\nFrom-SVN: r171611", "tree": {"sha": "00c7516b10cc587b3cba7257e430c1e64a83a2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c7516b10cc587b3cba7257e430c1e64a83a2e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62add5e145ffe3f87f93bb40e0d9ccbf20044420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62add5e145ffe3f87f93bb40e0d9ccbf20044420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62add5e145ffe3f87f93bb40e0d9ccbf20044420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62add5e145ffe3f87f93bb40e0d9ccbf20044420/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0309d28824f040972a212183b34c45d59449b529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0309d28824f040972a212183b34c45d59449b529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0309d28824f040972a212183b34c45d59449b529"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "baaf94e9a536242b0b9056c97ba77aa4ee64994d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62add5e145ffe3f87f93bb40e0d9ccbf20044420", "patch": "@@ -1,5 +1,10 @@\n 2011-03-28  Jason Merrill  <jason@redhat.com>\n \n+\tCore 898\n+\t* semantics.c (constexpr_fn_retval): New.  Allow using-declaration\n+\tand using-definition.\n+\t(register_constexpr_fundef): Call it.\n+\n \t* except.c (build_noexcept_spec): Call cxx_constant_value after\n \tconverting to bool.\n "}, {"sha": "6906c1be825960da4adbcac8b6c8966fa92a340c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 48, "deletions": 2, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=62add5e145ffe3f87f93bb40e0d9ccbf20044420", "patch": "@@ -5585,6 +5585,52 @@ build_constexpr_constructor_member_initializers (tree type, tree body)\n     return error_mark_node;\n }\n \n+/* Subroutine of register_constexpr_fundef.  BODY is the body of a function\n+   declared to be constexpr, or a sub-statement thereof.  Returns the\n+   return value if suitable, error_mark_node for a statement not allowed in\n+   a constexpr function, or NULL_TREE if no return value was found.  */\n+\n+static tree\n+constexpr_fn_retval (tree body)\n+{\n+  switch (TREE_CODE (body))\n+    {\n+    case STATEMENT_LIST:\n+      {\n+\ttree_stmt_iterator i;\n+\ttree expr = NULL_TREE;\n+\tfor (i = tsi_start (body); !tsi_end_p (i); tsi_next (&i))\n+\t  {\n+\t    tree s = constexpr_fn_retval (tsi_stmt (i));\n+\t    if (s == error_mark_node)\n+\t      return error_mark_node;\n+\t    else if (s == NULL_TREE)\n+\t      /* Keep iterating.  */;\n+\t    else if (expr)\n+\t      /* Multiple return statements.  */\n+\t      return error_mark_node;\n+\t    else\n+\t      expr = s;\n+\t  }\n+\treturn expr;\n+      }\n+\n+    case RETURN_EXPR:\n+      return unshare_expr (TREE_OPERAND (body, 0));\n+\n+    case DECL_EXPR:\n+      if (TREE_CODE (DECL_EXPR_DECL (body)) == USING_DECL)\n+\treturn NULL_TREE;\n+      return error_mark_node;\n+\n+    case USING_STMT:\n+      return NULL_TREE;\n+\n+    default:\n+      return error_mark_node;\n+    }\n+}\n+\n /* We are processing the definition of the constexpr function FUN.\n    Check that its BODY fulfills the propriate requirements and\n    enter it in the constexpr function definition table.\n@@ -5610,13 +5656,13 @@ register_constexpr_fundef (tree fun, tree body)\n \tbody = TREE_OPERAND (body, 0);\n       if (TREE_CODE (body) == CLEANUP_POINT_EXPR)\n         body = TREE_OPERAND (body, 0);\n-      if (TREE_CODE (body) != RETURN_EXPR)\n+      body = constexpr_fn_retval (body);\n+      if (body == NULL_TREE || body == error_mark_node)\n         {\n           error (\"body of constexpr function %qD not a return-statement\", fun);\n           DECL_DECLARED_CONSTEXPR_P (fun) = false;\n           return NULL;\n         }\n-      body = unshare_expr (TREE_OPERAND (body, 0));\n     }\n \n   if (!potential_rvalue_constant_expression (body))"}, {"sha": "35b8c53064987fdb8e34913eab921b6c84b2feef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62add5e145ffe3f87f93bb40e0d9ccbf20044420", "patch": "@@ -1,5 +1,7 @@\n 2011-03-28  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-using.C: New.\n+\n \t* g++.dg/cpp0x/constexpr-noexcept.C: New.\n \n 2011-03-28  H.J. Lu  <hongjiu.lu@intel.com>"}, {"sha": "fc794e9abdf04aa6a240da3ba908b561e62ae6ed", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-using.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62add5e145ffe3f87f93bb40e0d9ccbf20044420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C?ref=62add5e145ffe3f87f93bb40e0d9ccbf20044420", "patch": "@@ -0,0 +1,27 @@\n+// Core issue 898\n+// { dg-options -std=c++0x }\n+\n+namespace N { const int i = 42; }\n+namespace M { const int j = 42; }\n+\n+constexpr int g() {\n+  using namespace N;\n+  using M::j;\n+  static_assert (i == 42, \"i == 42\");\n+  return i + j;\n+}\n+\n+template <class T>\n+constexpr int h() {\n+  using namespace N;\n+  using M::j;\n+  static_assert (i == 42, \"i == 42\");\n+  return i + j;\n+}\n+\n+constexpr int i = g();\n+constexpr int i2 = h<int>();\n+\n+static_assert (i == 84, \"i == 84\");\n+static_assert (i2 == 84, \"i2 == 84\");\n+"}]}