{"sha": "451c4fba283e31e1272573a04672056390e49e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxYzRmYmEyODNlMzFlMTI3MjU3M2EwNDY3MjA1NjM5MGU0OWUwMg==", "commit": {"author": {"name": "Petr Murzin", "email": "petr.murzin@intel.com", "date": "2014-06-09T11:32:03Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-06-09T11:32:03Z"}, "message": "avx512f-vaddpd-2.c: Add static void for CALC, void for TEST instead of static void.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512f-vaddpd-2.c:  Add static void for CALC,\n\tvoid for TEST instead of static void.\n\t* gcc.target/i386/avx512f-vaddps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vblendmpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vblendmps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vbroadcastf32x4-2.c:Ditto.\n\t* gcc.target/i386/avx512f-vbroadcastf64x4-2.c:Ditto.\n\t* gcc.target/i386/avx512f-vbroadcasti32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vbroadcasti64x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vbroadcastsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vbroadcastss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtps2dq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvttps2dq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vdivpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vdivps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vextractf32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vextracti32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmaxpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmaxps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vminpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vminps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmulpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmulps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpaddd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpaddq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpblendmd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpblendmq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpbroadcastd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpbroadcastq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpeqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpeqq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpgtd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpgtq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovdb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovdw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovqb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovqw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsdb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsdw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpslld-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpslldi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsllq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsllqi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrad-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsradi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsraq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsraqi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsravd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsravq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsubd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsubq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vptestmd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vptestmq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vptestnmd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vptestnmq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpunpckhdq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpunpckhqdq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpunpckldq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpunpcklqdq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vscalefpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vscalefps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshuff32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshuff64x2-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshufi32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshufi64x2-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vsubpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vsubps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovdb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovdw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovqb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovqw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsdb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsdw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsqw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsllvd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsllvq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrld-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrldi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrlq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrlqi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrlvd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpsrlvq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpshufd-2.c: Delete variables, void for TEST\n\tinstead of static void.\n\t* gcc.target/i386/avx512f-vpcmpged-2.c: Add static void for CALC,\n\tdelete unused variables.\n\t* gcc.target/i386/avx512f-vpcmpgeq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpgeud-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpgeuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpled-2.c: Add static void for CALC,\n\tdelete unused variables, void for TEST instead of static void.\n\t* gcc.target/i386/avx512f-vpcmpleq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpleud-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpleuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpltd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpltq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpltud-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpltuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpneqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpneqq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpnequd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpnequq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmaxsd-2.c: Add static void for CALC,\n\tinitialize variables.\n\t* gcc.target/i386/avx512f-vpmaxsq-2.c:Ditto.\n\t* gcc.target/i386/avx512f-vpminsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpminsq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvttsd2si-1.c: Add missed type.\n\t* gcc.target/i386/avx512f-vcvttss2si-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vcmpsd-2.c: Delete unused variables.\n\t* gcc.target/i386/avx512f-vcmpss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmuldq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrndscalepd-2.c: Ditto.\n\t* gcc.target/i386/i386.exp: Ditto.\n\t* gcc.target/i386/avx512cd-vpbroadcastmb2q-2.c: Add static void for CALC,\n\tvoid for TEST instead of static void, initialize variables.\n\t* gcc.target/i386/avx512cd-vpbroadcastmw2d-2.c: Ditto.\n\t* gcc.target/i386/avx512cd-vpconflictd-2.c: Void for TEST instead of\n\tstatic void.\n\t* gcc.target/i386/avx512cd-vpconflictq-2.c: Ditto.\n\t* gcc.target/i386/avx512cd-vplzcntd-2.c: Ditto.\n\t* gcc.target/i386/avx512cd-vplzcntq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-valignd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-valignq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcmppd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcmpps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcompresspd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcompressps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtdq2pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtdq2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtpd2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtph2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtps2pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtps2ph-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvttpd2dq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vexpandpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vexpandps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfixupimmss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmaddXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmaddXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmaddsubXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmaddsubXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmsubXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmsubXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmsubaddXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfmsubaddXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfnmaddXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfnmaddXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfnmsubXXXpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfnmsubXXXps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetmantpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetmantps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vinsertf32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vinserti32x4-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovapd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovaps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovddup-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqa32-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqa64-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqu32-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqu64-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovshdup-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovsldup-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovupd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovups-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpabsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpabsq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpandd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpandnd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpandnq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpandq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpud-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcompressd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcompressq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermi2d-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermi2pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermi2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermi2q-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermilpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermilpdi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermilps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermilpsi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermpdi-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermq-imm-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermq-var-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermt2d-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermt2pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermt2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpermt2q-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpexpandd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpexpandq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsxbd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsxbq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsxdq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsxwd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovsxwq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovzxbd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovzxbq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovzxdq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovzxwd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovzxwq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmulld-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpord-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vporq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpslld-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpternlogd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpternlogq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpxord-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpxorq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrcp14pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrcp14ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrndscaleps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14pd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshufpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vshufps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vsqrtpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vsqrtps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vunpckhpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vunpckhps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vunpcklpd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vunpcklps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprold-2.c: Put parentheses, void for TEST\n\tinstead of static void.\n\t* gcc.target/i386/avx512f-vprolq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprolvd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprolvq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprord-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprorq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprorvd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vprorvq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfixupimmpd-2.c: Void for TEST instead of\n\tstatic void, delete unused variables.\n\t* gcc.target/i386/avx512f-vfixupimmps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vfixupimmsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetexppd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetexpps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmuludq-2.c: Void for TEST instead of\n\tstatic void, delete unused variables, Change parameters for\n\tUNION_CHECK, MASK_MERGE and MASK_ZERO.\n\t* gcc.target/i386/avx512f-vcvtpd2dq-2.c: Change type of parameter in\n\tCALC,  void for TEST instead of static void.\n\t* gcc.target/i386/avx512f-vcvtpd2udq-2.c: Change parameters for\n\tUNION_CHECK, MASK_MERGE and MASK_ZERO, void for TEST instead of static\n\tvoid.\n\t* gcc.target/i386/avx512f-vcvttpd2udq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtudq2pd-2.c: Void for TEST instead of\n\tstatic void, change type  of parameter for UNION_TYPE.\n\t* gcc.target/i386/avx512f-vcvtudq2ps-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vcvtps2udq-2.c: Add static void for CALC,\n\tvoid for TEST instead of static void, delete unused variables, change\n\tparameters for UNION_CHECK, MASK_MERGE and MASK_ZERO.\n\t* gcc.target/i386/avx512f-vcvttps2udq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovusdb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovusdw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovusqb-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovusqd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmovusqw-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpmaxud-2.c: Add static void for CALC,\n\tvoid for TEST instead of static void, change parameters for UNION_CHECK,\n\tUNION_TYPE, MASK_MERGE and MASK_ZERO.\n\t* gcc.target/i386/avx512f-vpmaxuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpminud-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vpminuq-2.c: Ditto.\n\t* gcc.target/i386/avx512f-additional-reg-names.c: Add\n\t__attribute__((unused)).\n\t* gcc.target/i386/avx512f-dummy.c: Delete unused variables, add\n\t__attribute__((unused)).\n\t* gcc.target/i386/avx512f-kandnw-1.c: Initialize variables.\n\t* gcc.target/i386/avx512f-kandw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-klogic-2.c: Ditto.\n\t* gcc.target/i386/avx512f-knotw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-korw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-kunpckbw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-kxnorw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-kxorw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-kortestw-1.c: Initialize variables,\n\tadd __attribute__((unused)).\n\t* gcc.target/i386/avx512f-vcvttsd2si-2.c: Exclude \"avx512f-helper.h\"\n\t* gcc.target/i386/avx512f-vcvttss2si-2.c:Ditto.\n\t* gcc.target/i386/avx512f-vgetexpsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetexpss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrndscalesd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrndscaless-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vscalefsd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vscalefss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vgetmantsd-2.c: Exclude \"avx512f-helper.h\",\n\tdelete unused variables.\n\t* gcc.target/i386/avx512f-vgetmantss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrcp14sd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrcp14ss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14sd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14ss-2.c: Ditto.\n\t* gcc.target/i386/avx512f-helper.h: Void for test_512() instead of\n\tstatic void, mask_merging and zero_masking for unsigned types.\n\t* gcc.target/i386/m128-check.h: Add new unions, CHECK_EXP and\n\tCHECK_ARRAY for unsigned types.\n\t* gcc.target/i386/m256-check.h: Ditto.\n\t* gcc.target/i386/m512-check.h: Ditto.\n\nFrom-SVN: r211372", "tree": {"sha": "da576b3baf14e1a987c00ec9aaab9f325c0278b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da576b3baf14e1a987c00ec9aaab9f325c0278b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/451c4fba283e31e1272573a04672056390e49e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451c4fba283e31e1272573a04672056390e49e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451c4fba283e31e1272573a04672056390e49e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451c4fba283e31e1272573a04672056390e49e02/comments", "author": null, "committer": null, "parents": [{"sha": "545fb0e8ec59835782935bf89d91fc52aa18ff7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545fb0e8ec59835782935bf89d91fc52aa18ff7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545fb0e8ec59835782935bf89d91fc52aa18ff7e"}], "stats": {"total": 1488, "additions": 972, "deletions": 516}, "files": [{"sha": "544b80be58473a5892dde8f8ae6917c3a70c9769", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 314, "deletions": 0, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -1,3 +1,317 @@\n+2014-06-09  Petr Murzin  <petr.murzin@intel.com>\n+\n+\t* gcc.target/i386/avx512f-vaddpd-2.c:  Add static void for CALC,\n+\tvoid for TEST instead of static void.\n+\t* gcc.target/i386/avx512f-vaddps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vblendmpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vblendmps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcastf32x4-2.c:Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcastf64x4-2.c:Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcasti32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcasti64x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcastsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vbroadcastss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtps2dq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvttps2dq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vdivpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vdivps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vextractf32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vextracti32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmaxpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmaxps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vminpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vminps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmulpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmulps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpaddd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpaddq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpblendmd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpblendmq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpbroadcastd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpbroadcastq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpeqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpeqq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpgtd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpgtq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovdb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovdw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovqb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovqw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsdb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsdw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpslld-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpslldi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsllq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsllqi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrad-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsradi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsraq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsraqi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsravd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsravq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsubd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsubq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vptestmd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vptestmq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vptestnmd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vptestnmq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpunpckhdq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpunpckhqdq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpunpckldq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpunpcklqdq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vscalefpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vscalefps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshuff32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshuff64x2-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshufi32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshufi64x2-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vsubpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vsubps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovdb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovdw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovqb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovqw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsdb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsdw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsqw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsllvd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsllvq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrld-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrldi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrlq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrlqi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrlvd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpsrlvq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpshufd-2.c: Delete variables, void for TEST\n+\tinstead of static void.\n+\t* gcc.target/i386/avx512f-vpcmpged-2.c: Add static void for CALC,\n+\tdelete unused variables.\n+\t* gcc.target/i386/avx512f-vpcmpgeq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpgeud-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpgeuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpled-2.c: Add static void for CALC,\n+\tdelete unused variables, void for TEST instead of static void.\n+\t* gcc.target/i386/avx512f-vpcmpleq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpleud-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpleuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpltd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpltq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpltud-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpltuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpneqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpneqq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpnequd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpnequq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmaxsd-2.c: Add static void for CALC,\n+\tinitialize variables.\n+\t* gcc.target/i386/avx512f-vpmaxsq-2.c:Ditto.\n+\t* gcc.target/i386/avx512f-vpminsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpminsq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvttsd2si-1.c: Add missed type.\n+\t* gcc.target/i386/avx512f-vcvttss2si-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcmpsd-2.c: Delete unused variables.\n+\t* gcc.target/i386/avx512f-vcmpss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmuldq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrndscalepd-2.c: Ditto.\n+\t* gcc.target/i386/i386.exp: Ditto.\n+\t* gcc.target/i386/avx512cd-vpbroadcastmb2q-2.c: Add static void for CALC,\n+\tvoid for TEST instead of static void, initialize variables.\n+\t* gcc.target/i386/avx512cd-vpbroadcastmw2d-2.c: Ditto.\n+\t* gcc.target/i386/avx512cd-vpconflictd-2.c: Void for TEST instead of\n+\tstatic void.\n+\t* gcc.target/i386/avx512cd-vpconflictq-2.c: Ditto.\n+\t* gcc.target/i386/avx512cd-vplzcntd-2.c: Ditto.\n+\t* gcc.target/i386/avx512cd-vplzcntq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-valignd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-valignq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcmppd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcmpps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcompresspd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcompressps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtdq2pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtdq2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtpd2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtph2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtps2pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtps2ph-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvttpd2dq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vexpandpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vexpandps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfixupimmss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmaddXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmaddXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmaddsubXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmaddsubXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmsubXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmsubXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmsubaddXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfmsubaddXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfnmaddXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfnmaddXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfnmsubXXXpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfnmsubXXXps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetmantpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetmantps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vinsertf32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vinserti32x4-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovapd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovaps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovddup-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovdqa32-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovdqa64-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovdqu32-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovdqu64-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovshdup-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovsldup-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovupd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vmovups-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpabsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpabsq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpandd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpandnd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpandnq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpandq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpud-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcmpuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcompressd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpcompressq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermi2d-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermi2pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermi2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermi2q-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermilpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermilpdi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermilps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermilpsi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermpdi-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermq-imm-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermq-var-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermt2d-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermt2pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermt2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpermt2q-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpexpandd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpexpandq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsxbd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsxbq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsxdq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsxwd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovsxwq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovzxbd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovzxbq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovzxdq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovzxwd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovzxwq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmulld-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpord-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vporq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpslld-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpternlogd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpternlogq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpxord-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpxorq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrcp14pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrcp14ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrndscaleps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14pd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshufpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vshufps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vsqrtpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vsqrtps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vunpckhpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vunpckhps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vunpcklpd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vunpcklps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprold-2.c: Put parentheses, void for TEST\n+\tinstead of static void.\n+\t* gcc.target/i386/avx512f-vprolq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprolvd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprolvq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprord-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprorq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprorvd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vprorvq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfixupimmpd-2.c: Void for TEST instead of\n+\tstatic void, delete unused variables.\n+\t* gcc.target/i386/avx512f-vfixupimmps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vfixupimmsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetexppd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetexpps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmuludq-2.c: Void for TEST instead of\n+\tstatic void, delete unused variables, Change parameters for\n+\tUNION_CHECK, MASK_MERGE and MASK_ZERO.\n+\t* gcc.target/i386/avx512f-vcvtpd2dq-2.c: Change type of parameter in\n+\tCALC,  void for TEST instead of static void.\n+\t* gcc.target/i386/avx512f-vcvtpd2udq-2.c: Change parameters for\n+\tUNION_CHECK, MASK_MERGE and MASK_ZERO, void for TEST instead of static\n+\tvoid.\n+\t* gcc.target/i386/avx512f-vcvttpd2udq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtudq2pd-2.c: Void for TEST instead of\n+\tstatic void, change type  of parameter for UNION_TYPE.\n+\t* gcc.target/i386/avx512f-vcvtudq2ps-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vcvtps2udq-2.c: Add static void for CALC,\n+\tvoid for TEST instead of static void, delete unused variables, change\n+\tparameters for UNION_CHECK, MASK_MERGE and MASK_ZERO.\n+\t* gcc.target/i386/avx512f-vcvttps2udq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovusdb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovusdw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovusqb-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovusqd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmovusqw-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpmaxud-2.c: Add static void for CALC,\n+\tvoid for TEST instead of static void, change parameters for UNION_CHECK,\n+\tUNION_TYPE, MASK_MERGE and MASK_ZERO.\n+\t* gcc.target/i386/avx512f-vpmaxuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpminud-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vpminuq-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-additional-reg-names.c: Add\n+\t__attribute__((unused)).\n+\t* gcc.target/i386/avx512f-dummy.c: Delete unused variables, add\n+\t__attribute__((unused)).\n+\t* gcc.target/i386/avx512f-kandnw-1.c: Initialize variables.\n+\t* gcc.target/i386/avx512f-kandw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-klogic-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-knotw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-korw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-kunpckbw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-kxnorw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-kxorw-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-kortestw-1.c: Initialize variables,\n+\tadd __attribute__((unused)).\n+\t* gcc.target/i386/avx512f-vcvttsd2si-2.c: Exclude \"avx512f-helper.h\"\n+\t* gcc.target/i386/avx512f-vcvttss2si-2.c:Ditto.\n+\t* gcc.target/i386/avx512f-vgetexpsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetexpss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrndscalesd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrndscaless-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vscalefsd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vscalefss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vgetmantsd-2.c: Exclude \"avx512f-helper.h\",\n+\tdelete unused variables.\n+\t* gcc.target/i386/avx512f-vgetmantss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrcp14sd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrcp14ss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14sd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14ss-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-helper.h: Void for test_512() instead of\n+\tstatic void, mask_merging and zero_masking for unsigned types.\n+\t* gcc.target/i386/m128-check.h: Add new unions, CHECK_EXP and\n+\tCHECK_ARRAY for unsigned types.\n+\t* gcc.target/i386/m256-check.h: Ditto.\n+\t* gcc.target/i386/m512-check.h: Ditto.\n+\n 2014-06-09  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tPR target/61062"}, {"sha": "2e0a082c13aa01c0e1e4c1cc8aae9992ce736449", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vpbroadcastmb2q-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmb2q-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmb2q-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmb2q-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n \n #define SIZE (AVX512F_LEN / 64)\n \n+static void\n CALC (long long *res, __mmask8 src)\n {\n   int i;\n@@ -17,13 +18,13 @@ CALC (long long *res, __mmask8 src)\n     res[i] = src;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) res;\n   long long res_ref[SIZE];\n-  __mmask8 src;\n+  __mmask8 src = 0;\n \n   for (i = 0; i < SIZE; i++)\n     {"}, {"sha": "f4bd7e7a60e9876a2d8cbd85fbe51bc621aa30cf", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vpbroadcastmw2d-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmw2d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmw2d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpbroadcastmw2d-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n \n #define SIZE (AVX512F_LEN / 32)\n \n+static void\n CALC (int *res, __mmask16 src)\n {\n   int i;\n@@ -17,13 +18,13 @@ CALC (int *res, __mmask16 src)\n     res[i] = src;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) res;\n   int res_ref[SIZE];\n-  __mmask16 src;\n+  __mmask16 src = 0;\n \n   for (i = 0; i < SIZE; i++)\n     {"}, {"sha": "47bfc6702828baf2bde828a959525ccb93332a2c", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vpconflictd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (int *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s, res1, res2, res3;"}, {"sha": "c36025b63131dc40716a119cccd4e8c5f3b092f0", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vpconflictq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vpconflictq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (long long *s, long long *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s, res1, res2, res3;"}, {"sha": "ce495317cb1f756542a6ffe18638aed5fbe108f6", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vplzcntd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (int *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s, res1, res2, res3;"}, {"sha": "42bd7970e7d1decd545374daffdaa56ef0bfddf3", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-vplzcntq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-vplzcntq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (long long *s, long long *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s, res1, res2, res3;"}, {"sha": "164a1deb08eca152e461bb9886b30540deb30b87", "filename": "gcc/testsuite/gcc.target/i386/avx512f-additional-reg-names.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-additional-reg-names.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-additional-reg-names.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-additional-reg-names.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -3,7 +3,7 @@\n \n void foo ()\n {\n-  register int zmm_var asm (\"zmm9\");\n+  register int zmm_var asm (\"zmm9\") __attribute__((unused));\n \n   __asm__ __volatile__(\"vxorpd %%zmm0, %%zmm0, %%zmm7\\n\" : : : \"zmm7\" );\n }"}, {"sha": "0ef000389feec6e8046e2de03fdec98e129d906b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-dummy.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-dummy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-dummy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-dummy.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -7,7 +7,7 @@\n void static\n avx512f_test (void)\n {\n-  union512i_q u, s1, s2;\n+  union512i_q u;\n   long long e[8];\n-  volatile int tst = check_union512i_q (u, e);\n+  volatile int tst __attribute__((unused)) = check_union512i_q (u, e);\n }"}, {"sha": "9beabdf5e43acddf258629f715b94d134fa6e833", "filename": "gcc/testsuite/gcc.target/i386/avx512f-helper.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -40,6 +40,10 @@ MAKE_MASK_MERGE(i_d, int)\n MAKE_MASK_MERGE(i_q, long long)\n MAKE_MASK_MERGE(, float)\n MAKE_MASK_MERGE(d, double)\n+MAKE_MASK_MERGE(i_ub, unsigned char)\n+MAKE_MASK_MERGE(i_uw, unsigned short)\n+MAKE_MASK_MERGE(i_ud, unsigned int)\n+MAKE_MASK_MERGE(i_uq, unsigned long long)\n \n #define MASK_MERGE(TYPE) merge_masking_##TYPE\n \n@@ -61,6 +65,11 @@ MAKE_MASK_ZERO(i_d, int)\n MAKE_MASK_ZERO(i_q, long long)\n MAKE_MASK_ZERO(, float)\n MAKE_MASK_ZERO(d, double)\n+MAKE_MASK_ZERO(i_ub, unsigned char)\n+MAKE_MASK_ZERO(i_uw, unsigned short)\n+MAKE_MASK_ZERO(i_ud, unsigned int)\n+MAKE_MASK_ZERO(i_uq, unsigned long long)\n+\n \n #define MASK_ZERO(TYPE) zero_masking_##TYPE\n \n@@ -82,7 +91,8 @@ MAKE_MASK_ZERO(d, double)\n \n #define AVX512F_LEN 512\n #define AVX512F_LEN_HALF 256\n-static void test_512 ();\n+\n+void test_512 ();\n \n #if defined (AVX512F)\n void"}, {"sha": "b81fa6e3f3e73581b66dacef9266941e06515d23", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kandnw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps();\n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "78ab14305f43547a48d4ed448469d92fdad03f6e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kandw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps();\n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "48d4d84df4f907c47484059e5b53bc63fcbfd84c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-klogic-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-klogic-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-klogic-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-klogic-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test (void)\n {\n   __mmask16 dst, src1, src2, dst_ref;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps(); \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (src1) : \"r\" (0x0FFF) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (src2) : \"r\" (0x0F0F) );"}, {"sha": "32715a31bca9780a0aed0e48706fc560396e4af7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-knotw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-knotw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-knotw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-knotw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps(); \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (45) );\n "}, {"sha": "a33dbf23d5e8827b08fe0d6dc13bf3effa49d2e6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kortestw-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kortestw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kortestw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kortestw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -6,12 +6,12 @@\n \n void\n avx512f_test () {\n-  volatile __mmask16 k1;\n-  __mmask16 k2;\n-  volatile __mmask8 k3;\n-  __mmask8 k4;\n+  volatile __mmask16 k1 = 0;\n+  __mmask16 k2 = 0;\n+  volatile __mmask8 k3 = 0;\n+  __mmask8 k4 = 0;\n \n-  volatile short r;\n+  volatile short r __attribute__((unused));\n \n   /* Check that appropriate insn sequence is generated at -O0.  */\n   r = _mm512_kortestc (k1, k2);"}, {"sha": "9168dd3b571b70b2ac9764e09f367e169b40a162", "filename": "gcc/testsuite/gcc.target/i386/avx512f-korw-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-korw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-korw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-korw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,8 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps();\n+  \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "f82a9c87a77ee74c709e3e2de9ca28212c588da3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kunpckbw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -7,7 +7,7 @@\n void\n avx512f_test () {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps(); \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "15df525217b7defe01375eb6b2eefee3551b14b2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kxnorw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxnorw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxnorw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxnorw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps(); \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "e45462449c8d85ae56ad9dcd8673044fccb1a3c9", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kxorw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxorw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxorw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kxorw-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -8,7 +8,7 @@ void\n avx512f_test ()\n {\n   __mmask16 k1, k2, k3;\n-  volatile __m512 x;\n+  volatile __m512 x = _mm512_setzero_ps(); \n \n   __asm__( \"kmovw %1, %0\" : \"=k\" (k1) : \"r\" (1) );\n   __asm__( \"kmovw %1, %0\" : \"=k\" (k2) : \"r\" (2) );"}, {"sha": "a2467185b29d17933a8f08c9d81a77d0430da714", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vaddpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "e1ea3df5a8ef3cc5ff8b9abd4bbde5a0159405bb", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vaddps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vaddps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "e0cf231b6a818c9395c4dc473eeb4fd5addbd8ac", "filename": "gcc/testsuite/gcc.target/i386/avx512f-valignd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -27,7 +27,7 @@ CALC (int *s1, int *s2, int *r)\n     r[i] = s[i + N];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, s1, s2;"}, {"sha": "92d01440a94ee2b673bde2a16be6203a4ded188b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-valignq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-valignq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -27,7 +27,7 @@ CALC (long long *s1, long long *s2, long long *r)\n     r[i] = s[i + N];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, s1, s2;"}, {"sha": "027a74fcd99ff0d9d84c95d5c1529cb45d700c9e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vblendmpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2, MASK_TYPE mask)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2, MASK_TYPE mask)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "e0c9c692287cfe425a2fc8592fe554dbf6d5366c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vblendmps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vblendmps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2, MASK_TYPE mask)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2, MASK_TYPE mask)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "d0a3f7e6492a0702e85d54e140237195b9f0c037", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcastf32x4-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "f646b2c9eff3dc9b8b89a4d5664a75859e1654ee", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcastf64x4-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf64x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf64x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastf64x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "37fb0d0424bfbe8cbf41665898253ca177396ace", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcasti32x4-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "a54e9872b642ff0ca586227d920b1244b6c1d77f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcasti64x4-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti64x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti64x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcasti64x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "b2c056ce6968fe285fabaf1e953abad987bbf5d5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcastsd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "ac9ab1ac62b89b8b5e6f86206a68f5a8a77e201f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vbroadcastss-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vbroadcastss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "a81f36256cd35663701a48608b466b41fc21a58d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcmppd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmppd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmppd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmppd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -26,7 +26,7 @@\n     if ((dst_ref & mask) != dst2) abort();\n #endif\n \n-static void\n+void\n TEST ()\n {\n     UNION_TYPE (AVX512F_LEN, d) source1, source2;"}, {"sha": "88dc8908596f4cedfa6962e03063527f1b587b4d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcmpps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -26,7 +26,7 @@\n     if ((dst_ref & mask) != dst2) abort();\n #endif\n \n-static void\n+void\n TEST ()\n {\n     UNION_TYPE (AVX512F_LEN,) source1, source2;"}, {"sha": "0190722e7f4b7d9b1dd9a4485e0308458d83e8c1", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcmpsd-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -27,7 +27,6 @@ avx512f_test ()\n     __m128d source1, source2;\n     __mmask8 dst, dst2, mask;\n     mask = 1;\n-    int i;\n \n     CMP(_CMP_EQ_OQ, !isunordered(s1[0], s2[0]) && s1[0] == s2[0]);\n     CMP(_CMP_LT_OS, !isunordered(s1[0], s2[0]) && s1[0] < s2[0]);"}, {"sha": "4a014f1440cb6391a3d34ef3a8c82a63d5f51eed", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcmpss-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcmpss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -26,7 +26,6 @@ avx512f_test ()\n {\n     __m128 source1, source2;\n     __mmask8 dst, dst2, mask;\n-    int i;\n \n     mask = 1;\n "}, {"sha": "04553da5f7ba277d8ce57303a86b9610b5fa739c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcompresspd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompresspd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompresspd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompresspd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (double *s, double *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s, res1, res2;"}, {"sha": "e934a5f55e0ee4706f1b802828a7ee8653f50755", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcompressps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompressps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompressps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcompressps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (float *s, float *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s, res1, res2;"}, {"sha": "2e4f051a5a3bcf69963cc04a7434a2379ee5f1c1", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtdq2pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (int *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN_HALF, i_d) s;"}, {"sha": "ca8e56e4254d252887180e95dc371830b55f3924", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtdq2ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtdq2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (int *s, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s;"}, {"sha": "cdaa182f31b5279ef197877c39f874b647f8b678", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtpd2dq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2dq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2dq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2dq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -11,7 +11,7 @@\n #define DST_SIZE ((AVX512F_LEN_HALF) / 32)\n \n static void\n-CALC (double *s, unsigned *r)\n+CALC (double *s, int *r)\n {\n   int i;\n \n@@ -22,7 +22,7 @@ CALC (double *s, unsigned *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s;"}, {"sha": "e79e014e61dc072e99def016968228f212117c48", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtpd2ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,7 +17,7 @@ CALC (float *e, UNION_TYPE (AVX512F_LEN, d) s1)\n     e[i] = (float) s1.a[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1;"}, {"sha": "1873cf8e08e3dec362c5beedef8fa73a0e2d8a0c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtpd2udq-2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2udq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2udq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtpd2udq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,11 +21,11 @@ CALC (double *s, unsigned *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s;\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_ud) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[DST_SIZE] = { 0 };\n   int i;\n@@ -44,14 +44,14 @@ TEST (void)\n \n   CALC (s.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SRC_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SRC_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SRC_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SRC_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "ec98f4b3ad548ccda166f8d9a04148b68164e0a8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtph2ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtph2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtph2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtph2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN_HALF, i_w) val;"}, {"sha": "35edd69088f8363f370d15dd91524e3ab7cb75a4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtps2dq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2dq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2dq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2dq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,14 +9,15 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, float *s)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n     r[i] = (s[i] >= 0) ? (int) (s[i] + 0.5) : (int) (s[i] - 0.5);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "6dc6d209b67f3754d7a92c363f2a55e2cf4d5302", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtps2pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (float *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN_HALF, ) s;"}, {"sha": "540bf29a4f9cdfbeb5df5766d782b9bad8a42ec8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtps2ph-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2ph-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2ph-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2ph-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) val;"}, {"sha": "f97e9f5acd086a2a32d6eff47a724a1b8f6ecdb6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtps2udq-2.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2udq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2udq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtps2udq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,18 +9,19 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (unsigned *r, float *s)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n     r[i] = (unsigned) (s[i] + 0.5);\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, res2, res3;\n   UNION_TYPE (AVX512F_LEN,) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[SIZE];\n@@ -37,14 +38,14 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "cba83ca8df899f67a0e2bd6fac942990c68ad841", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttpd2dq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2dq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2dq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2dq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s;"}, {"sha": "5345589c4f963131da4c5a221d2a8da7d1619877", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttpd2udq-2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2udq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2udq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttpd2udq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,11 +21,11 @@ CALC (double *s, unsigned *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s;\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_ud) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[DST_SIZE] = { 0 };\n   int i;\n@@ -44,14 +44,14 @@ TEST (void)\n \n   CALC (s.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SRC_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SRC_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SRC_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SRC_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "ed8fe5e093d1ffe6b0521cc6aacfca943b045bc6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttps2dq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2dq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2dq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2dq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,14 +9,15 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, float *s)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n     r[i] = (int) s[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "e1ab847a54de32ed2139ce9107b6a81a74412abf", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttps2udq-2.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2udq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2udq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttps2udq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,18 +9,19 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (unsigned *r, float *s)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n     r[i] = (unsigned) s[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, res2, res3;\n   UNION_TYPE (AVX512F_LEN,) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[SIZE];\n@@ -37,14 +38,14 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "a5517aefd986380e0293da95638f688977dcabd0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttsd2si-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -5,7 +5,7 @@\n #include <immintrin.h>\n \n volatile __m128d x;\n-volatile y;\n+volatile int y;\n \n void extern\n avx512f_test (void)"}, {"sha": "6584fc860a2048bf879088b8f011b04cb5b08fda", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttsd2si-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include \"avx512f-check.h\"\n #include \"avx512f-mask-type.h\"\n-#include \"avx512f-helper.h\"\n \n static int\n __attribute__ ((noinline, unused))"}, {"sha": "32d57cc08aa2ad55fd13107b5caa8a5cafdd397e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttss2si-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -5,7 +5,7 @@\n #include <immintrin.h>\n \n volatile __m128 x;\n-volatile y;\n+volatile int y;\n \n void extern\n avx512f_test (void)"}, {"sha": "dae96c6e2e9079ea36e70bd81046f333c4f8de72", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttss2si-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include \"avx512f-check.h\"\n #include \"avx512f-mask-type.h\"\n-#include \"avx512f-helper.h\"\n \n static int\n __attribute__ ((noinline, unused))"}, {"sha": "977141d0c40c109d3ffbee1c61e89f05165175ba", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtudq2pd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,10 +21,10 @@ CALC (unsigned *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) s;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_ud) s;\n   UNION_TYPE (AVX512F_LEN, d) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   double res_ref[DST_SIZE];"}, {"sha": "28c174ee8ef96cd6660340932128605a58a9eb74", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtudq2ps-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtudq2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned *s, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  UNION_TYPE (AVX512F_LEN, i_d) s;\n+  UNION_TYPE (AVX512F_LEN, i_ud) s;\n   UNION_TYPE (AVX512F_LEN, ) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   float res_ref[SIZE];"}, {"sha": "397aa41ecd2b8110bff99dfb7d3a41169cf3b2fb", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vdivpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "ce591af85d7593976bb2894931ec6f82ad5dcf46", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vdivps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vdivps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "9c0589a2900c5ccb7aaac5d7826ceefcacada24a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vexpandpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s, double *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, res2, res3, res4, res5;"}, {"sha": "7b6a5404f6d9b248306026a115825ebd2239fb80", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vexpandps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vexpandps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (float *s, float *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, res2, res3, res4, res5;"}, {"sha": "39d463d9697c0873a298c21f9df2bd7696e1d70f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vextractf32x4-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextractf32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextractf32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextractf32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,14 +10,14 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (UNION_TYPE (AVX512F_LEN,) s1, float *res_ref, int mask)\n {\n   memset (res_ref, 0, 16);\n   memcpy (res_ref, s1.a + mask * 4, 16);\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s1;"}, {"sha": "b51b6ce24e87daf3969e2b480b7002014faa2fc2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vextracti32x4-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextracti32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextracti32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vextracti32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,14 +10,14 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (UNION_TYPE (AVX512F_LEN, i_d) s1, int *res_ref, int mask)\n {\n   memset (res_ref, 0, 16);\n   memcpy (res_ref, s1.a + mask * 4, 16);\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1;"}, {"sha": "3f338b9e90d1c050dde93e715cb2e75db882f9e7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfixupimmpd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -70,10 +70,10 @@ CALC (double *r, double src, long long tbl)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, j, k;\n+  int i, j;\n   UNION_TYPE (AVX512F_LEN, d) res1, res2, res3, s1;\n   UNION_TYPE (AVX512F_LEN, i_q) s2;\n   double res_ref[SIZE];"}, {"sha": "bc334ff3b058e9f4dad67196e1afdfee7df6be63", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfixupimmps-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -71,10 +71,10 @@ CALC (float *r, float src, int tbl)\n }\n \n \n-void static\n+void\n TEST (void)\n {\n-  int i, j, k;\n+  int i, j;\n   UNION_TYPE (AVX512F_LEN,) res1, res2, res3, s1;\n   UNION_TYPE (AVX512F_LEN, i_d) s2;\n   float res_ref[SIZE];"}, {"sha": "a0139da00e475f62557accad8e1201a3eee7ef78", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfixupimmsd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -67,13 +67,13 @@ compute_fixupimmpd (double *r, double src, long long tbl)\n     }\n }\n \n-void static\n+void\n avx512f_test (void)\n {\n   union128d s1, res1, res2, res3;\n   union128i_q s2;\n   double res_ref[2];\n-  int i, j, k;\n+  int i, j;\n \n   float vals[2] = { -10, 10 };\n   int controls[10] = { 0x11111111,"}, {"sha": "692d15ec92921a4c086273a0c931b63ffa42e9d5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfixupimmss-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfixupimmss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -67,7 +67,7 @@ compute_fixupimmps (float *r, float src, int tbl)\n     }\n }\n \n-void static\n+void\n avx512f_test (void)\n {\n   union128 s1, res1, res2, res3;"}, {"sha": "165cd7260aec875afa204a50e2336dc089239e9f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmaddXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "5e6647d0d53272764cb4840f0f3b2db043ea9bd6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmaddXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "a243e6c2df9e05cddbb2239e56e004db17bccfef", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmaddsubXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "4cafccc45c520f7c39d5dae163be1b75127ead9f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmaddsubXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmaddsubXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "1cd0ae0d8130bd25524f1baf41ce5260f122bb09", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmsubXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "5952f9d14ee2c19018ea98cb6ad8eb4a03ec0964", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmsubXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "e32eec829c58e1b7d120733e00b23a092ba2e2d4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmsubaddXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "3971c4ed60221346ec36c4ceb4cc4be21e38882b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfmsubaddXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfmsubaddXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "a1d694aea89bf47dee51f7843fa65b3b615664e4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfnmaddXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "3f8785d11ae1aeff88a0994dfa8ea1e209001b76", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfnmaddXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmaddXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "bf93501601001ab5abcf5eb99ecfa608124ea55c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfnmsubXXXpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (double *s1, double *s2, double *s3, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "e2831c4358270d5411c1b732db1c1b7410bddf29", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vfnmsubXXXps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vfnmsubXXXps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s1, float *s2, float *s3, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, s3, res1, res2, res3, res4;"}, {"sha": "96740e8a47bcbeb424c9e8780c4d7e9d5c47b368", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetexppd-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexppd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexppd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexppd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,13 +18,12 @@ CALC (double *s, double *r)\n     r[i] = floor (log (s[i]) / log (2));\n }\n \n-void static\n+void\n TEST (void)\n {\n   int j;\n   UNION_TYPE (AVX512F_LEN, d) res1, res2, res3, s;\n   double res_ref[SIZE];\n-  double res_ref_mask[SIZE];\n \n   MASK_TYPE mask = MASK_VALUE;\n "}, {"sha": "6bce4166957d699ad510a0f0a3bdccd1ea8da9af", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetexpps-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,13 +18,12 @@ CALC (float *s, float *r)\n     r[i] = floor (log (s[i]) / log (2));\n }\n \n-void static\n+void\n TEST (void)\n {\n   int j;\n   UNION_TYPE (AVX512F_LEN, ) res1,res2,res3,s;\n   float res_ref[SIZE];\n-  float res_ref_mask[SIZE];\n \n   MASK_TYPE mask = MASK_VALUE;\n "}, {"sha": "4f7c94db9ae2902e7430a1b31bd816536dc66fe4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetexpsd-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -6,7 +6,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vgetexpsd (double *s, double *r)"}, {"sha": "926f4d87ffb7a9c04738989298cc695f94a3e480", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetexpss-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetexpss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -6,7 +6,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vgetexpss (float *s, float *r)"}, {"sha": "cb24b97f1597e7a6afa4619eae28c634d575c737", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetmantpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -83,7 +83,7 @@ CALC (double *r, double *s, int interv, int signctrl)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "480dd743b5171d4dd212156002c491f6ba9bcda4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetmantps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -84,7 +84,7 @@ CALC (float *r, float *s, int interv, int signctrl)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "3a34ca4f05ddfca160c9158ccefa2fd08e32a851", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetmantsd-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n /* { dg-require-effective-target c99_runtime } */\n \n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n #include <math.h>\n \n union fp_int_t\n@@ -77,7 +76,6 @@ compute_vgetmantsd (double *r, double *s1, double *s2, int interv,\n static void\n avx512f_test (void)\n {\n-  int i, sign;\n   union128d res1, src1, src2;\n   double res_ref[2];\n   int interv = _MM_MANT_NORM_p5_1;"}, {"sha": "7c30ea7d8e66fe1c52501d9343905afe7f6cae4a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vgetmantss-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vgetmantss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n /* { dg-require-effective-target c99_runtime } */\n \n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n #include <math.h>\n \n union fp_int_t\n@@ -82,7 +81,6 @@ compute_vgetmantss (float *r, float *s1, float *s2, int interv,\n static void\n avx512f_test (void)\n {\n-  int i, sign;\n   union128 res1, src1, src2;\n   float res_ref[4];\n   int interv = _MM_MANT_NORM_p5_1;"}, {"sha": "2a6c51a905d8a305117d59b437320baf2a092f28", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vinsertf32x4-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinsertf32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinsertf32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinsertf32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,7 +17,7 @@ CALC (UNION_TYPE (AVX512F_LEN,) s1, union128 s2, float *res_ref, int imm)\n   memcpy (res_ref + imm * 4, s2.a, 16);\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s1, res1, res2, res3;"}, {"sha": "0140f04511a4639f46afecf38341d7dfb8f23351", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vinserti32x4-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinserti32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinserti32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vinserti32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,7 +17,7 @@ CALC (UNION_TYPE (AVX512F_LEN, i_d) s1, union128i_d s2, int *res_ref, int imm)\n   memcpy (res_ref + imm * 4, s2.a, 16);\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, res1, res2, res3;"}, {"sha": "334f0edbc756b8ef8c1fa70b45ccbd35909f29c8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmaxpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "01f8ed0b9c273bb87a241125be5ba3dea7d14638", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmaxps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmaxps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "9a13129a1e46e394eb6cb17fe6c829b78b7aa950", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vminpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "d63c3d3dfb490be1af0a6878ad7c9b717cc4a364", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vminps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vminps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "f2116ca2d236c33e79b0f6ce32b41e69617e7618", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovapd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define ALIGN ((AVX512F_LEN) / 8)\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s2, s3, res1, res3, res4, res5, res6;"}, {"sha": "74be618840f40fe41de6d604bce01958979f5aeb", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovaps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define ALIGN ((AVX512F_LEN) / 8)\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s2, s3, res1, res3, res4, res5, res6;"}, {"sha": "b789bc179c762b78e62bcd6005dec5047e5c3c90", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovddup-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovddup-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovddup-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovddup-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s, double *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s, res1, res2, res3;"}, {"sha": "91a0350908ea1493e54704b8c7eb5fdd229e6dc5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqa32-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define ALIGN ((AVX512F_LEN) / 8)\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s2, s3, res1, res2, res5, res6, res7, res8;"}, {"sha": "2a7136fb1934cf0084a8020b77940b8751159cc8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqa64-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define ALIGN ((AVX512F_LEN) / 8)\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s2, s3, res1, res3, res4, res5, res6;"}, {"sha": "f2edc3dff7b5d6296e6ff08c848ce6c0bbfffc6d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqu32-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu32-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,7 +15,7 @@ typedef struct\n   int a[SIZE];\n } __attribute__ ((packed)) EVAL(unaligned_array, AVX512F_LEN,);\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s2, res1, res3, res4;"}, {"sha": "14176965ace37dbe059c1232f234c944ef8c1f06", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqu64-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqu64-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,7 +15,7 @@ typedef struct\n   long long a[SIZE];\n } __attribute__ ((packed)) EVAL(unaligned_array, AVX512F_LEN,);\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s2, res1, res2;"}, {"sha": "e2f06a5d7de6a6df91e10a2d1720770d37533306", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovshdup-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovshdup-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovshdup-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovshdup-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s, res1, res2, res3;"}, {"sha": "2b91467aee180c3e153d0a9fce7d7752a308cae1", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovsldup-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovsldup-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovsldup-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovsldup-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s, res1, res2, res3;"}, {"sha": "bf602f52d36a6b01d63194c5896c90230a3af31b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovupd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovupd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovupd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovupd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) res1, res2, res3, s2;"}, {"sha": "a937fd136b83380d8a00866b86e42d71f1e370a5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovups-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovups-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovups-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovups-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) res1, res2, res3, s2;"}, {"sha": "08bfe04ac53f13767d184a23ec89908f32d76071", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmulpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "ec61ae72e067347654bab479cbe3e700b2a244c3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmulps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmulps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "533bd7876adccabcf23a2d644cbae941cb614280", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpabsd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (int *i1, int *r)\n       r[i] = i1[i];\n }\n \n-static void\n+void\n TEST (void)\n {\n   int ck[SIZE];"}, {"sha": "2918eb9ccca1fb599ba4ee7d1344499d59c833b8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpabsq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpabsq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (long long *i1, long long *r)\n       r[i] = i1[i];\n }\n \n-static void\n+void\n TEST (void)\n {\n   long long ck[SIZE];"}, {"sha": "243c2b70b8b17c72337aa1db63689ca5e5e255c8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpaddd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s1, int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "d35c60ec734546a17e5795111ab49593f8a7a215", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpaddq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpaddq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "b5654d2fe8c6ed320d7c15494ba695a8a48e59f4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpandd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (int *s1, int *s2, int *r)\n     r[i] = s1[i] & s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3, res4;"}, {"sha": "418b96e6edf634e95e31cdc3e255a0c784f9849a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpandnd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (int *s1, int *s2, int *r)\n     r[i] = (~s1[i]) & s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3, res4;"}, {"sha": "585d2885991907d2c728cff53308a6a9d31187b2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpandnq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandnq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (long long *s1, long long *s2, long long *r)\n     r[i] = (~s1[i]) & s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "b2f39456449ce6823d0ffd310cc7eb045049a001", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpandq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpandq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (long long *s1, long long *s2, long long *r)\n     r[i] = s1[i] & s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "04a586bfee9a16714ced4580b33f8d809ce3c833", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpblendmd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2, MASK_TYPE mask)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s1, int *s2, MASK_TYPE mask)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "cd85676142d43652189b006160d8eb9c10075d05", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpblendmq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpblendmq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2, MASK_TYPE mask)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s1, long long *s2, MASK_TYPE mask)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "895c99a97cbca19bc1978bd3d3a8cf0a1c8087a5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpbroadcastd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "cbd9d7b85d4ea17ee168876b46a43feff94f616b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpbroadcastq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpbroadcastq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "3a2dccfd4bd85476940fa70f4309b48319b86a80", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@\n     if ((mask & dst_ref) != dst2) abort();\n #endif\n \n-static void\n+void\n TEST ()\n {\n     UNION_TYPE (AVX512F_LEN, i_d) source1, source2;"}, {"sha": "42089f81997ae8d198efbbcb8ec56ba5d6bc9a31", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpeqd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "7f2ea5787b3fd1c0b649433eff5774e4ff7db4d7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpeqq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpeqq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "f2e781281582c7f43872f602ed558f899ffbd6fd", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpged-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpged-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpged-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpged-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "b77798a3512c7a376b6c9716f2161dee460c5d0f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpgeq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "ed739347cee5a4e3b58e96b3281ab1ef3fa3f583", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpgeud-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "a4ae995dbc1fe3b34fe2483504c46e075c4e04d3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpgeuq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgeuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "87146dd36b485800db253e292379ae3c7f0bc166", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpgtd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "39dfd76d3d1dea653eff023d1061d20674bd4036", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpgtq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpgtq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "1def42156d57bcc284d83057a50c7f8f41a45e70", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpled-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpled-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpled-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpled-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "9ed536def825b16cad242e8154252ee42fda7116", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpleq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "56dcc81a8291443efc3b7ded8b3960182495ed23", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpleud-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "d0c3587b5434c231d7443703c589699f6977f2e6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpleuq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpleuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "f0033f60902a809c36f30853024b3deebf13399b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpltd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "f4e68cff7f6bcc7579e1e0990a7f51dc9c12a037", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpltq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "5168e56460401875d8ec11b2cce078232ae5fb0d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpltud-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "df813d533783cb58355a6de2a6797710c7d13cff", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpltuq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpltuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "0655779af11b056dc6bd303527317d0341e1d2f0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpneqd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "69685843f7a4d703d9be8e0e70ac15baab591182", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpneqq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpneqq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "3ca100bc2af9144633b91c38705fe203b4ab564b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpnequd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, int *s1, int *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, int *s1, int *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2;\n   MASK_TYPE res_ref, res1;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "b3298068cb188ce18bfe303b17b6bafee05ca32e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpnequq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpnequq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,13 +21,12 @@ CALC (MASK_TYPE *r, long long *s1, long long *s2)\n       *r = *r | (one << i);\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2;\n   MASK_TYPE res1, res_ref;\n-  MASK_TYPE mask = MASK_VALUE;\n   res1 = 0;\n \n   for (i = 0; i < SIZE / 2; i++)"}, {"sha": "7c9b888b255ca2de04298ee0ee9faa647d155d1d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ __mmask8 dst_ref;\n     if (dst_ref != dst1) abort();\t\t\t\\\n     if ((mask & dst_ref) != dst2) abort();\n \n-static void\n+void\n TEST ()\n {\n     UNION_TYPE (AVX512F_LEN, i_d) source1, source2;"}, {"sha": "7a1ed898271466ef6a3b203e0b0972e0987fa188", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpud-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@\n     if ((mask & dst_ref) != dst2) abort();\n #endif\n \n-static void\n+void\n TEST ()\n {\n     unsigned int s1[16] = {2134,  6678,  453, 54646,"}, {"sha": "f8db6c643a9f79b416dafaef73e85be53c4109a8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpuq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@\n     if ((mask & dst_ref) != dst2) abort();\n #endif\n \n-static void\n+void\n TEST ()\n {\n     UNION_TYPE (AVX512F_LEN, i_q) source1, source2;"}, {"sha": "ce06b33c2deb51e2dc37f03ce1c0639910bbb755", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcompressd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (int *s, int *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s, res1, res2;"}, {"sha": "ebec241751926ec8d09e3cae5ee5391d712e95f1", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcompressq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcompressq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (long long *s, long long *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s, res1, res2;"}, {"sha": "1b2ce756abbb4f89bc3277a0f764aed04f2de17f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (int *mask, int *src1, int *dst)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, src1, src2;"}, {"sha": "1c4a80d4ec524d184718bb1f4c770bb0e2342638", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermi2d-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2d-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (int *dst, int *src1, int *ind, int *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "af73a172c2b3c5e9faba51e071c747c17e986902", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermi2pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (double *dst, double *src1, long long *ind, double *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, k;"}, {"sha": "aa6fbb10a17558576429a1ef36d237536cd44ac4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermi2ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (float *dst, float *src1, int *ind, float *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, k;"}, {"sha": "c1adb13a2a94a64ce93458a6e1299b940951d52a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermi2q-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2q-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2q-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermi2q-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (long long *dst, long long *src1, long long *ind, long long *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "800c7f358f51d15a9b11bd3074ffa4faf8d76941", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermilpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (double *s1, long long *s2, double *r)\n     r[i] = s1[(2 * (i / 2)) + ((s2[i] & 0x02) >> 1)];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, res1, res2, res3;"}, {"sha": "26f5a775c73d2f8adb17595b069e1ea42a9be93b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermilpdi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpdi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpdi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpdi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -24,7 +24,7 @@ CALC (double *s1, int s2, double *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, res1, res2, res3;"}, {"sha": "fc1ded7b4b60c469a207794550d6e4d61d267e7a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermilps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (float *s1, int *s2, float *r)\n     r[i] = s1[(4 * (i / 4)) + (s2[i] & 0x03)];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s1, res1, res2, res3;"}, {"sha": "986dbd17aa284bb484a2643cb8ea0d1cdcbfa73a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermilpsi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermilpsi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -49,7 +49,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s1, res1, res2, res3;"}, {"sha": "1007aef9b15ee5a34e7d471686b3cbc6027c89c8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (long long *mask, double *s1, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) src1, res1, res2, res3;"}, {"sha": "d979828a6324eaa67c3f0cf0ad797e1ef4926407", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermpdi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpdi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpdi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermpdi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -24,7 +24,7 @@ CALC (double *s1, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) src1, res1, res2, res3;"}, {"sha": "ce95fc315683871cc0e55af6eed7642e73161a75", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (int *mask, float *s1, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) src1, res1, res2, res3;"}, {"sha": "dd88cd46c0b18c4903fff1c370fa0296d90a2c0a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermq-imm-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (long long *src1, int mask, long long *dst)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1;"}, {"sha": "b7c36a5f1410483b003ebbc21bd9e07736593347", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermq-var-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-var-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-var-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-var-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (long long *mask, long long *src1, long long *dst)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1, src2;"}, {"sha": "f9bd6b5e5949164d78a3309d0dd7179a7a26497b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermt2d-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2d-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (int *dst, int *src1, int *ind, int *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "4a72aa4773e4862257f5fbada295639081ae3f0f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermt2pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (double *dst, double *src1, long long *ind, double *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "0c35df14d8301c19d2bd7ffdc5fb64a44fe3bac0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermt2ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (float *dst, float *src1, int *ind, float *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "c38729093519d6f5a3739753525aca94c263c073", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermt2q-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2q-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2q-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermt2q-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -25,7 +25,7 @@ CALC (long long *dst, long long *src1, long long *ind, long long *src2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;"}, {"sha": "7fb0590f7fcade3978abb1204aee39aac8b4ba41", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpexpandd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (int *s, int *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, res1, res2, res3, res4;"}, {"sha": "c346382bae2fd28e24a58c8b4bece976a5ef1761", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpexpandq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpexpandq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (long long *s, long long *r, MASK_TYPE mask)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, res1, res2, res3, res4;"}, {"sha": "765ce6215ba43472a27441e35de1948eff886103", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmaxsd-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-\n+void static\n CALC (int *src1, int *src2, int *dst)\n {\n   int i;\n@@ -18,10 +18,10 @@ CALC (int *src1, int *src2, int *dst)\n     dst[i] = src1[i] > src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n+  int i, sign = 1;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   int res_ref[SIZE];"}, {"sha": "4c2993f72010d4db22229cfbe267e03b6eedfdac", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmaxsq-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxsq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-\n+void static\n CALC (long long *src1, long long *src2, long long *dst)\n {\n   int i;\n@@ -18,10 +18,10 @@ CALC (long long *src1, long long *src2, long long *dst)\n     dst[i] = src1[i] > src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n+  int i, sign = 1;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long res_ref[SIZE];"}, {"sha": "860539403c691cfdcfa4a9130ef7bf989449201a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmaxud-2.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-\n+static void\n CALC (unsigned *src1, unsigned *src2,\n       unsigned *dst)\n {\n@@ -19,14 +19,13 @@ CALC (unsigned *src1, unsigned *src2,\n     dst[i] = src1[i] > src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_d) src1, src2, res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN, i_ud) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[SIZE];\n-\n   for (i = 0; i < SIZE; i++)\n     {\n       src1.a[i] =  i;\n@@ -40,14 +39,14 @@ TEST (void)\n \n   CALC (src1.a, src2.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "fbd42de2c2333ec79c0eb855532dab33ace39c90", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmaxuq-2.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmaxuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-\n+static void\n CALC (unsigned long long *src1, unsigned long long *src2,\n     unsigned long long *dst)\n {\n@@ -19,11 +19,11 @@ CALC (unsigned long long *src1, unsigned long long *src2,\n     dst[i] = src1[i] > src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_q) src1, src2, res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN, i_uq) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[SIZE];\n \n@@ -40,14 +40,14 @@ TEST (void)\n \n   CALC (src1.a, src2.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n }"}, {"sha": "1f8ec1dd3373ce868f087c94ec12465b80a8fe36", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpminsd-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-\n+void static\n CALC (int *src1, int *src2, int *dst)\n {\n   int i;\n@@ -18,10 +18,10 @@ CALC (int *src1, int *src2, int *dst)\n     dst[i] = src1[i] < src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n+  int i, sign = 1;\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   int res_ref[SIZE];"}, {"sha": "519873f9d129f045d6f6912b5ca057bfaef5b257", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpminsq-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminsq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-\n+void static\n CALC (long long *src1, long long *src2, long long *dst)\n {\n   int i;\n@@ -18,10 +18,10 @@ CALC (long long *src1, long long *src2, long long *dst)\n     dst[i] = src1[i] < src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n+  int i, sign = 1;\n   UNION_TYPE (AVX512F_LEN, i_q) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long res_ref[SIZE];"}, {"sha": "d66df8ad8562d9b87e0dc316f7ffe17989b9d7fe", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpminud-2.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminud-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminud-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminud-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-\n+static void\n CALC (unsigned *src1, unsigned *src2,\n       unsigned *dst)\n {\n@@ -19,11 +19,11 @@ CALC (unsigned *src1, unsigned *src2,\n     dst[i] = src1[i] < src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_d) src1, src2, res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN, i_ud) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned res_ref[SIZE];\n \n@@ -40,14 +40,14 @@ TEST (void)\n \n   CALC (src1.a, src2.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "34d0723be97019f08e9e6b2ceb7575c89fd3cf8f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpminuq-2.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminuq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminuq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpminuq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-\n+static void\n CALC (unsigned long long *src1, unsigned long long *src2,\n     unsigned long long *dst)\n {\n@@ -19,11 +19,11 @@ CALC (unsigned long long *src1, unsigned long long *src2,\n     dst[i] = src1[i] < src2[i] ? src1[i] : src2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_q) src1, src2, res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN, i_uq) src1, src2, res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[SIZE];\n \n@@ -40,14 +40,14 @@ TEST (void)\n \n   CALC (src1.a, src2.a, res_ref);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n }"}, {"sha": "0e418f98ed272a76fbfd13dab36f2f0887e65f27", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovdb-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (char *r, int *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (char *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "376c105c0b22f2f2eb301432c6ecd1c1cf490eaf", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovdw-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovdw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define SIZE_HALF (AVX512F_LEN_HALF / 16)\n \n+void static\n CALC (short *r, int *s)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (short *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "892ad74e0d187f004ba0eb64cf7a39f4b1b680f6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovqb-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (char *r, long long *s, int mem)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (char *r, long long *s, int mem)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "57170faf8f84ba2ca77cc1b538a7f41387b00103", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovqd-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #define SIZE_HALF (AVX512F_LEN_HALF / 32)\n \n+void static\n CALC (int *r, long long *s)\n {\n   int i;\n@@ -19,11 +20,11 @@ CALC (int *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) res1, res2, res3, res5;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_d) res1, res2, res3;\n   int res4[SIZE_HALF];\n   UNION_TYPE (AVX512F_LEN, i_q) src;\n   MASK_TYPE mask = MASK_VALUE;"}, {"sha": "27b816511da04971fe57876078bbc44f8e83c74e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovqw-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovqw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (short *r, long long *s)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (short *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "116c8b69e717d6095700edb1d392990efd26829f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsdb-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+static void\n CALC (char *r, int *s)\n {\n   int i;\n@@ -25,7 +26,7 @@ CALC (char *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "e175cce1c48bf6e98622d465f285b88d1591a214", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsdw-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsdw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -11,6 +11,7 @@\n #define SIZE_HALF (AVX512F_LEN_HALF / 16)\n #include <limits.h>\n \n+static void\n CALC (short *r, int *s)\n {\n   int i;\n@@ -26,7 +27,7 @@ CALC (short *r, int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "babe6e22b99f1109336711947b5a8fe1effe8a5b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsqb-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+void static\n CALC (char *r, long long *s, int mem)\n {\n   int i;\n@@ -26,7 +27,7 @@ CALC (char *r, long long *s, int mem)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "342f9cb76b52ef1e07372842f145dc1a55eb5ad7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsqd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -11,6 +11,7 @@\n #define SIZE_HALF (AVX512F_LEN_HALF / 32)\n #include <limits.h>\n \n+static void\n CALC (int *r, long long *s)\n {\n   int i;\n@@ -26,7 +27,7 @@ CALC (int *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "bc1619a8308b44052d82e2f19abb2894db205ba9", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsqw-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsqw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+void static\n CALC (short *r, long long *s)\n {\n   int i;\n@@ -25,7 +26,7 @@ CALC (short *r, long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "2e8e2cbeea48388c9d23a15f79f558e73d18dbe4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsxbd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (char *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   union128i_b s;"}, {"sha": "18b6c1b4f561a4f9aaaa56bcd04165ff2bc63679", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsxbq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxbq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (char *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   union128i_b s;"}, {"sha": "aaa94223aae7f237d5db20f116a146b350ebc0e9", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsxdq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxdq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (int *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN_HALF, i_d) s;"}, {"sha": "56aa43da1e0db4b65b6b035c56d6add28146e7ed", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsxwd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (short *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN_HALF, i_w) s;"}, {"sha": "c77607bd46644972e8c66a9d17a4c55421f9b898", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovsxwq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovsxwq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (short *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   union128i_w s;"}, {"sha": "8907a72f3ea8317ff5217ce164a215ad9b6e49a9", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovusdb-2.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+static void\n CALC (unsigned char *r, unsigned int *s)\n {\n   int i;\n@@ -20,13 +21,13 @@ CALC (unsigned char *r, unsigned int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (128, i_b) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (128, i_ub) res1, res2, res3;\n   unsigned char res4[16];\n-  UNION_TYPE (AVX512F_LEN, i_d) src;\n+  UNION_TYPE (AVX512F_LEN, i_ud) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned char res_ref[16];\n \n@@ -44,17 +45,17 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (128, i_b) (res1, res_ref))\n+  if (UNION_CHECK (128, i_ub) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_b) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_b) (res2, res_ref))\n+  MASK_MERGE (i_ub) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_ub) (res2, res_ref))\n     abort ();\n \n-  if (checkVc (res4, res_ref, 16))\n+  if (checkVuc (res4, res_ref, 16))\n     abort ();\n \n-  MASK_ZERO (i_b) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_b) (res3, res_ref))\n+  MASK_ZERO (i_ub) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_ub) (res3, res_ref))\n     abort ();\n }"}, {"sha": "c2c2624b498791f9603c4ddacc74076222a2ba80", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovusdw-2.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusdw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -11,6 +11,7 @@\n #define SIZE_HALF (AVX512F_LEN_HALF / 16)\n #include <limits.h>\n \n+static void\n CALC (unsigned short *r, unsigned int *s)\n {\n   int i;\n@@ -21,13 +22,13 @@ CALC (unsigned short *r, unsigned int *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (AVX512F_LEN_HALF, i_w) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_uw) res1, res2, res3;\n   unsigned short res4[SIZE_HALF];\n-  UNION_TYPE (AVX512F_LEN, i_d) src;\n+  UNION_TYPE (AVX512F_LEN, i_ud) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned short res_ref[SIZE_HALF];\n \n@@ -45,17 +46,17 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_w) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_uw) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_w) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_w) (res2, res_ref))\n+  MASK_MERGE (i_uw) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_uw) (res2, res_ref))\n     abort ();\n \n-  if (checkVs (res4, res_ref, SIZE_HALF))\n+  if (checkVus (res4, res_ref, SIZE_HALF))\n     abort ();\n \n-  MASK_ZERO (i_w) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_w) (res3, res_ref))\n+  MASK_ZERO (i_uw) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_uw) (res3, res_ref))\n     abort ();\n }"}, {"sha": "8c20544524b7d6ee77ff1c516c587abc3e31ef80", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovusqb-2.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqb-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+static void\n CALC (unsigned char *r, unsigned long long *s, int mem)\n {\n   int i;\n@@ -21,13 +22,13 @@ CALC (unsigned char *r, unsigned long long *s, int mem)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (128, i_b) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (128, i_ub) res1, res2, res3;\n   unsigned char res4[16];\n-  UNION_TYPE (AVX512F_LEN, i_q) src;\n+  UNION_TYPE (AVX512F_LEN, i_uq) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned char res_ref[16];\n   unsigned char res_ref2[16];\n@@ -51,23 +52,23 @@ TEST (void)\n \n   CALC (res_ref, src.a, 0);\n \n-  if (UNION_CHECK (128, i_b) (res1, res_ref))\n+  if (UNION_CHECK (128, i_ub) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_b) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_b) (res2, res_ref))\n+  MASK_MERGE (i_ub) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_ub) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_b) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_b) (res3, res_ref))\n+  MASK_ZERO (i_ub) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_ub) (res3, res_ref))\n     abort ();\n \n   INTRINSIC (_mask_cvtusepi64_storeu_epi8) (res4, mask, src.x);\n \n   CALC (res_ref2, src.a, 1);\n-  MASK_MERGE (i_b) (res_ref2, mask, SIZE);\n+  MASK_MERGE (i_ub) (res_ref2, mask, SIZE);\n \n-  if (checkVc (res4, res_ref2, 16))\n+  if (checkVuc (res4, res_ref2, 16))\n     abort ();\n \n }"}, {"sha": "f500ea3c2850234a9e0b17ab62d492b9d32dd9c8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovusqd-2.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -11,6 +11,7 @@\n #define SIZE_HALF (AVX512F_LEN_HALF / 32)\n #include <limits.h>\n \n+static void\n CALC (unsigned int *r, unsigned long long *s)\n {\n   int i;\n@@ -21,13 +22,13 @@ CALC (unsigned int *r, unsigned long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_ud) res1, res2, res3;\n   unsigned int res4[SIZE_HALF];\n-  UNION_TYPE (AVX512F_LEN, i_q) src;\n+  UNION_TYPE (AVX512F_LEN, i_uq) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned int res_ref[SIZE_HALF];\n \n@@ -45,17 +46,17 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res2, res_ref))\n     abort ();\n \n-  if (checkVi (res4, res_ref, SIZE_HALF))\n+  if (checkVui (res4, res_ref, SIZE_HALF))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN_HALF, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN_HALF, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "c1ce9ed65bc313e1b47bbef2e252d0e6538b5859", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovusqw-2.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovusqw-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <limits.h>\n \n+static void\n CALC (unsigned short *r, unsigned long long *s)\n {\n   int i;\n@@ -20,13 +21,13 @@ CALC (unsigned short *r, unsigned long long *s)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n-  int i, sign;\n-  UNION_TYPE (128, i_w) res1, res2, res3;\n+  int i;\n+  UNION_TYPE (128, i_uw) res1, res2, res3;\n   unsigned short res4[8];\n-  UNION_TYPE (AVX512F_LEN, i_q) src;\n+  UNION_TYPE (AVX512F_LEN, i_uq) src;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned short res_ref[8];\n \n@@ -44,17 +45,17 @@ TEST (void)\n \n   CALC (res_ref, src.a);\n \n-  if (UNION_CHECK (128, i_w) (res1, res_ref))\n+  if (UNION_CHECK (128, i_uw) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_w) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_w) (res2, res_ref))\n+  MASK_MERGE (i_uw) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_uw) (res2, res_ref))\n     abort ();\n \n-  if (checkVs (res4, res_ref, 8))\n+  if (checkVus (res4, res_ref, 8))\n     abort ();\n \n-  MASK_ZERO (i_w) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (128, i_w) (res3, res_ref))\n+  MASK_ZERO (i_uw) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (128, i_uw) (res3, res_ref))\n     abort ();\n }"}, {"sha": "2184d8e1550d08c0f70df5068f4515442d7ca497", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovzxbd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned char *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  union128i_b s;\n+  union128i_ub s;\n   UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   int res_ref[SIZE];"}, {"sha": "6d9c935f14bd28c38386f4a973f7a781a03fd28d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovzxbq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxbq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned char *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  union128i_b s;\n+  union128i_ub s;\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long int res_ref[SIZE];"}, {"sha": "650be93be5ec8e1287f32aa6fde45329a7d54d27", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovzxdq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxdq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  UNION_TYPE (AVX512F_LEN_HALF, i_d) s;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_ud) s;\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long int res_ref[SIZE];"}, {"sha": "8823b892060cac1c0c317f58a2c2b4f745f3772d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovzxwd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned short *s, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  UNION_TYPE (AVX512F_LEN_HALF, i_w) s;\n+  UNION_TYPE (AVX512F_LEN_HALF, i_uw) s;\n   UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   int res_ref[SIZE];"}, {"sha": "fcff47bd4c975a59e714e44f71898c633a85f4a0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmovzxwq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmovzxwq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,10 +20,10 @@ CALC (unsigned short *s, long long int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n-  union128i_w s;\n+  union128i_uw s;\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long int res_ref[SIZE];"}, {"sha": "a827c99f3eff7476dea617231baaa2e28d11bf95", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmuldq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuldq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuldq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuldq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -19,14 +19,14 @@ CALC (int *s1, int *s2, long long int *r)\n     r[i] = s1[i * 2] * s2[i * 2];\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2;\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   long long res_ref[DST_SIZE];\n-  int i, sign = 1;\n+  int i;\n \n   for (i = 0; i < SRC_SIZE; i++)\n     {"}, {"sha": "71b964085a0d68438e76d3d4f55be628819bcf58", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmulld-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmulld-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmulld-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmulld-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -19,7 +19,7 @@ CALC (int *src1, int *src2, int *dst)\n     dst[i] = src1[i] * src2[i];\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) src1, src2, res1, res2, res3;"}, {"sha": "e7e087229ee0bdea47e68d05a0109060f024b468", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmuludq-2.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuludq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuludq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmuludq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -19,14 +19,14 @@ CALC (unsigned int *s1, unsigned int *s2, unsigned long long *r)\n     r[i] = s1[i * 2] * s2[i * 2];\n }\n \n-static void\n+void\n TEST (void)\n {\n-  UNION_TYPE (AVX512F_LEN, i_d) s1, s2;\n-  UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3;\n+  UNION_TYPE (AVX512F_LEN, i_ud) s1, s2;\n+  UNION_TYPE (AVX512F_LEN, i_uq) res1, res2, res3;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[DST_SIZE];\n-  int i, sign = 1;\n+  int i;\n \n   for (i = 0; i < SRC_SIZE; i++)\n     {\n@@ -42,14 +42,14 @@ TEST (void)\n   res2.x = INTRINSIC (_mask_mul_epu32) (res2.x, mask, s1.x, s2.x);\n   res3.x = INTRINSIC (_maskz_mul_epu32) (mask, s1.x, s2.x);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, DST_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, DST_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, DST_SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, DST_SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n }"}, {"sha": "5656a81e3fb9a5e36042bbcbdd2ee475af232b0a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpord-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpord-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpord-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpord-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (int *s1, int *s2, int *r)\n     r[i] = s1[i] | s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3, res4;"}, {"sha": "9af7172e31c23008ab5fd9861cfce7914b794725", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vporq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vporq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vporq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vporq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (long long *s1, long long *s2, long long *r)\n     r[i] = s1[i] | s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "350b2ff5aeab45c70de2eab6799647fb9d8be852", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprold-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprold-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprold-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprold-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,10 +17,10 @@ CALC (int *s1, int count, int *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] << count) | (s1[i] >> sizeof (s1[i]) * 8 - count);\n+    r[i] = (s1[i] << count) | (s1[i] >> (sizeof (s1[i]) * 8 - count));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, res1, res2, res3;"}, {"sha": "8a5718fbddbe89727eab5cfde474a23dd713980a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprolq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,10 +17,10 @@ CALC (long long *s1, int count, long long *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] << count) | (s1[i] >> sizeof (s1[i]) * 8 - count);\n+    r[i] = (s1[i] << count) | (s1[i] >> (sizeof (s1[i]) * 8 - count));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, res1, res2, res3;"}, {"sha": "2d6f4d33f6b0f63d61fe92187226988e11b2fdfb", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprolvd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,10 +15,10 @@ CALC (int *s1, int *s2, int *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] << s2[i]) | (s1[i] >> sizeof (s1[i]) * 8 - s2[i]);\n+    r[i] = (s1[i] << s2[i]) | (s1[i] >> (sizeof (s1[i]) * 8 - s2[i]));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3;"}, {"sha": "bcfeb057fc2841d77a1e153d622962679a312072", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprolvq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprolvq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,10 +15,10 @@ CALC (long long *s1, long long *s2, long long *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] << s2[i]) | (s1[i] >> sizeof (s1[i]) * 8 - s2[i]);\n+    r[i] = (s1[i] << s2[i]) | (s1[i] >> (sizeof (s1[i]) * 8 - s2[i]));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "7592e3e4194e92954722842bc4132f5bb2df9776", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprord-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprord-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprord-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprord-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,10 +17,10 @@ CALC (int *s1, int count, int *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] >> count) | (s1[i] << sizeof (s1[i]) * 8 - count);\n+    r[i] = (s1[i] >> count) | (s1[i] << (sizeof (s1[i]) * 8 - count));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, res1, res2, res3;"}, {"sha": "95c9bdaae092e9ec8a2f3ddc6db39472505f4377", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprorq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -17,10 +17,10 @@ CALC (long long *s1, int count, long long *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] >> count) | (s1[i] << sizeof (s1[i]) * 8 - count);\n+    r[i] = (s1[i] >> count) | (s1[i] << (sizeof (s1[i]) * 8 - count));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, res1, res2, res3;"}, {"sha": "0be8d69e9f9755e787d29ab2ed207a1d20fa678b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprorvd-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,10 +15,10 @@ CALC (int *s1, int *s2, int *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] >> s2[i]) | (s1[i] << sizeof (s1[i]) * 8 - s2[i]);\n+    r[i] = (s1[i] >> s2[i]) | (s1[i] << (sizeof (s1[i]) * 8 - s2[i]));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3;"}, {"sha": "b8738bf2618674e46b1fc6eac894ca6d8c2fa7f5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vprorvq-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vprorvq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -15,10 +15,10 @@ CALC (long long *s1, long long *s2, long long *r)\n   unsigned int i;\n \n   for (i = 0; i < SIZE; i++)\n-    r[i] = (s1[i] >> s2[i]) | (s1[i] << sizeof (s1[i]) * 8 - s2[i]);\n+    r[i] = (s1[i] >> s2[i]) | (s1[i] << (sizeof (s1[i]) * 8 - s2[i]));\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "6bab108659daf40f43cf011e4fb5ed3cee864362", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpshufd-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpshufd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpshufd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpshufd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,17 +23,17 @@ CALC (int *s1, unsigned char imm, int *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, res1, res2, res3;\n   int res_ref[SIZE];\n-  int i, j, sign = 1;\n+  int j, sign = 1;\n   MASK_TYPE mask = MASK_VALUE;\n \n   for (j = 0; j < SIZE; j++)\n     {\n-      s1.a[j] = j * i * sign;\n+      s1.a[j] = j * sign;\n       res1.a[j] = DEFAULT_VALUE;\n       res2.a[j] = DEFAULT_VALUE;\n       res3.a[j] = DEFAULT_VALUE;"}, {"sha": "b11f7f7db88e99f0e92088fa01a0f72aa93cab0a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpslld-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslld-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslld-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslld-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, long long* s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (int *r, int *s1, long long* s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "638b882ab17837109713651ae04d2d3acb3f0592", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpslldi-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslldi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslldi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpslldi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int count)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s1, int count)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "0f818fd2a27fd427725769ac75b065b250f39a95", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsllq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1,  long long* s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (long long *r, long long *s1,  long long* s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "39be492d0e3016a7fe4969b0c9625188e838a8fd", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsllqi-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllqi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllqi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllqi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long count)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s1, long long count)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "5f094ddd475f331dade95965766bbc4e15118464", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsllvd-2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,8 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned int *r, unsigned int *s1, unsigned int *s2)\n+static void\n+CALC (int *r, int *s1, int *s2)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n@@ -18,13 +19,13 @@ CALC (unsigned int *r, unsigned int *s1, unsigned int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, src1, src2;\n   MASK_TYPE mask = MASK_VALUE;\n-  unsigned int res_ref[SIZE];\n+  int res_ref[SIZE];\n \n   for (i = 0; i < SIZE; i++)\n     {"}, {"sha": "7ddacdffe66e75e2c4e92cb07cc9bb5090d2876a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsllvq-2.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsllvq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,8 +9,9 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned long long *r, unsigned long long *s1,\n-      unsigned long long *s2)\n+static void\n+CALC (long long *r, long long *s1,\n+      long long *s2)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n@@ -19,13 +20,13 @@ CALC (unsigned long long *r, unsigned long long *s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n   UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1, src2;\n   MASK_TYPE mask = MASK_VALUE;\n-  unsigned long long res_ref[SIZE];\n+  long long res_ref[SIZE];\n \n   for (i = 0; i < SIZE; i++)\n     {"}, {"sha": "7b433e0c1fe2da118b6a0007e54d23e5697ccd8d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrad-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrad-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrad-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrad-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, long long *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (int *r, int *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "c74d085b2d6b3e0ae67065d534b5d38dbf9d7419", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsradi-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsradi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsradi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsradi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int count)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (int *r, int *s1, int count)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "575291a82d6ab6a2ff8cef26ff725c01e6b3a49b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsraq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -21,7 +22,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "d45a620df5402dedbf7681ad3cf8d180d2bb5ec3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsraqi-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraqi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraqi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsraqi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long count)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (long long *r, long long *s1, long long count)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "ff97489b7b639f37bf6f3a09dd6aa4be5924f7cd", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsravd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (int *r, int *s1, int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "57d2a94011829001cdf3b26cf44ccb6e9dc88a70", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsravq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsravq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "1bd748a1ba8b6e6fc7088ec714e9dd25287c42d3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrld-2.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrld-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrld-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrld-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,8 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned int *r, unsigned int *s1,  unsigned long long* s2)\n+static void\n+CALC (unsigned int *r, unsigned int *s1, unsigned long long *s2)\n {\n   int i;\n   unsigned int count = s2[0];\n@@ -19,12 +20,12 @@ CALC (unsigned int *r, unsigned int *s1,  unsigned long long* s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, src1;\n-  UNION_TYPE (128, i_q) src2;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, res2, res3, src1;\n+  UNION_TYPE (128, i_uq) src2;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned int res_ref[SIZE];\n \n@@ -46,15 +47,15 @@ TEST (void)\n \n       CALC (res_ref, src1.a, src2.a);\n \n-      if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+      if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n \tabort ();\n \n-      MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-      if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+      MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+      if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n \tabort ();\n \n-      MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-      if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+      MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+      if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n \tabort ();\n     }\n }"}, {"sha": "0e73097939834181946753a1f7585e79b8cb677e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrldi-2.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrldi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrldi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrldi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,8 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned int *r, unsigned int *s1, unsigned int count)\n+static void\n+CALC (unsigned int *r, unsigned int *s1, int count)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n@@ -18,11 +19,11 @@ CALC (unsigned int *r, unsigned int *s1, unsigned int count)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, src1;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, res2, res3, src1;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned int res_ref[SIZE];\n \n@@ -41,15 +42,15 @@ TEST (void)\n \n   CALC (res_ref, src1.a, 3);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n \n \n@@ -63,14 +64,14 @@ TEST (void)\n \n   CALC (res_ref, src1.a, 33);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "8f362bce8ddd63b69b31371b5622feee9b6f000c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrlq-2.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,7 +9,8 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned long long *r, unsigned long long *s1,  unsigned long long* s2)\n+static void\n+CALC (unsigned long long *r, unsigned long long *s1, unsigned long long* s2)\n {\n   int i;\n   unsigned long long count = s2[0];\n@@ -19,12 +20,12 @@ CALC (unsigned long long *r, unsigned long long *s1,  unsigned long long* s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1;\n-  UNION_TYPE (128, i_q) src2;\n+  UNION_TYPE (AVX512F_LEN, i_uq) res1, res2, res3, src1;\n+  UNION_TYPE (128, i_uq) src2;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[SIZE];\n \n@@ -46,15 +47,15 @@ TEST (void)\n \n       CALC (res_ref, src1.a, src2.a);\n \n-      if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+      if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n \tabort ();\n \n-      MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-      if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+      MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+      if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n \tabort ();\n \n-      MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-      if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+      MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+      if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n \tabort ();\n     }\n }"}, {"sha": "c68a629b8f8099e55ee81e490d90534faabb5d32", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrlqi-2.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlqi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlqi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlqi-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (unsigned long long *r, unsigned long long *s1,\n       unsigned long long count)\n {\n@@ -19,11 +20,11 @@ CALC (unsigned long long *r, unsigned long long *s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1;\n+  UNION_TYPE (AVX512F_LEN, i_uq) res1, res2, res3, src1;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[SIZE];\n \n@@ -42,15 +43,15 @@ TEST (void)\n \n   CALC (res_ref, src1.a, 3);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n \n \n@@ -64,14 +65,14 @@ TEST (void)\n \n   CALC (res_ref, src1.a, 65);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n }"}, {"sha": "8e04d6db4913827550dd36b4b5237363fe4789e2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrlvd-2.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (unsigned int *r, unsigned int *s1, unsigned int *s2)\n {\n   int i;\n@@ -18,11 +19,11 @@ CALC (unsigned int *r, unsigned int *s1, unsigned int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_d) res1, res2, res3, src1, src2;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, res2, res3, src1, src2;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned int res_ref[SIZE];\n \n@@ -41,14 +42,14 @@ TEST (void)\n \n   CALC (res_ref, src1.a, src2.a);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res2, res_ref))\n+  MASK_MERGE (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_d) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_d) (res3, res_ref))\n+  MASK_ZERO (i_ud) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res3, res_ref))\n     abort ();\n }"}, {"sha": "3cc4b11be99685ebf4e585ae404c60c654b6ce5e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsrlvq-2.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsrlvq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,8 +9,8 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n-CALC (unsigned long long *r, unsigned long long *s1,\n-      unsigned long long *s2)\n+static void\n+CALC (unsigned long long *r, unsigned long long *s1, unsigned long long *s2)\n {\n   int i;\n   for (i = 0; i < SIZE; i++)\n@@ -19,11 +19,11 @@ CALC (unsigned long long *r, unsigned long long *s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i;\n-  UNION_TYPE (AVX512F_LEN, i_q) res1, res2, res3, src1, src2;\n+  UNION_TYPE (AVX512F_LEN, i_uq) res1, res2, res3, src1, src2;\n   MASK_TYPE mask = MASK_VALUE;\n   unsigned long long res_ref[SIZE];\n \n@@ -42,14 +42,14 @@ TEST (void)\n \n   CALC (res_ref, src1.a, src2.a);\n \n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res1, res_ref))\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res1, res_ref))\n     abort ();\n \n-  MASK_MERGE (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res2, res_ref))\n+  MASK_MERGE (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res2, res_ref))\n     abort ();\n \n-  MASK_ZERO (i_q) (res_ref, mask, SIZE);\n-  if (UNION_CHECK (AVX512F_LEN, i_q) (res3, res_ref))\n+  MASK_ZERO (i_uq) (res_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_uq) (res3, res_ref))\n     abort ();\n }"}, {"sha": "902ccffba5b272564f97fa91a89868eea53af67b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsubd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (int *r, int *s1, int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "a78d85f6ab4065c20b228f4562a96489a9526d7b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpsubq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpsubq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "67df0d46581372a65c58685010305c8bccc520bc", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpternlogd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -32,7 +32,7 @@ CALC (int *src1, int *src2, int *src3, int imm, int *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) src2, src3, res1, res2, res3;"}, {"sha": "4bbb864a0cbd26610df0aef28b5e7f8a820f320e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpternlogq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpternlogq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -34,7 +34,7 @@ CALC (long long *src1, long long *src2, long long *src3,\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) src2, src3, res1, res2, res3;"}, {"sha": "e776fdc7e368bf40e3f940c749e16be6509b7dac", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestmd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *res, int *src1, int *src2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *res, int *src1, int *src2)\n       *res = *res | one << i;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i, sign = 1;"}, {"sha": "283a8447145f2bbc041a8762ac73275da96f8840", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestmq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestmq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *res, long long *src1, long long *src2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *res, long long *src1, long long *src2)\n       *res = *res | one << i;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i, sign = 1;"}, {"sha": "f72954b9969a512cd80051ce2b017a4ee3c4bb84", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *res, int *src1, int *src2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *res, int *src1, int *src2)\n       *res = *res | one << i;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i, sign = 1;"}, {"sha": "d35a944259a91ece9a025c7a5ebf31bdb5ddcdb0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (MASK_TYPE *res, long long *src1, long long *src2)\n {\n   int i;\n@@ -20,7 +21,7 @@ CALC (MASK_TYPE *res, long long *src1, long long *src2)\n       *res = *res | one << i;\n }\n \n-static void\n+void\n TEST (void)\n {\n   int i, sign = 1;"}, {"sha": "f499fdf5318e6ce0c1b91ab3c57f3bf8ed06233e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpunpckhdq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhdq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2)\n {\n   int i;\n@@ -21,7 +22,7 @@ CALC (int *r, int *s1, int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "b0c8c2324df61e865c47f6b72c0aafc705c902aa", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpunpckhqdq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhqdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhqdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckhqdq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "7cdaa74358c78989a5f40f07a0ac983b40753e87", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpunpckldq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckldq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckldq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpckldq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (int *r, int *s1, int *s2)\n {\n   int i;\n@@ -21,7 +22,7 @@ CALC (int *r, int *s1, int *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "2d84fb98cb30ffd5038badf5cfa1f56c743466aa", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpunpcklqdq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpcklqdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpcklqdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpunpcklqdq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (long long *r, long long *s1, long long *s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (long long *r, long long *s1, long long *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "fa431aed14087419d3eaf055c00ce447a432371a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpxord-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxord-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxord-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxord-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (int *s1, int *s2, int *r)\n     r[i] = s1[i] ^ s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) s1, s2, res1, res2, res3, res4;"}, {"sha": "ef605476bbcd2fee2e8755dcff11fbfb853eb325", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpxorq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxorq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxorq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpxorq-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -18,7 +18,7 @@ CALC (long long *s1, long long *s2, long long *r)\n     r[i] = s1[i] ^ s2[i];\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) s1, s2, res1, res2, res3;"}, {"sha": "00e3308716d05f3c4d40b7255054dac8e58dd682", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrcp14pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (double *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s, res1, res2, res3;"}, {"sha": "d730a0642c2511b23f71c6775e145804a7050ec3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrcp14ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -20,7 +20,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s, res1, res2, res3;"}, {"sha": "cb405c38b084fc45a1469c7cf4b6f82617d76203", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrcp14sd-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14sd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14sd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14sd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -3,7 +3,6 @@\n /* { dg-require-effective-target avx512f } */\n \n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vrcp14sd (double *s1, double *s2, double *r)\n@@ -15,12 +14,11 @@ compute_vrcp14sd (double *s1, double *s2, double *r)\n static void\n avx512f_test (void)\n {\n-  union128d s1, s2, res1, res2, res3;\n+  union128d s1, s2, res1;\n   double res_ref[2];\n \n   s1.x = _mm_set_pd (-3.0, 111.111);\n   s2.x = _mm_set_pd (222.222, -2.0);\n-  res2.a[0] = DEFAULT_VALUE;\n \n   res1.x = _mm_rcp14_sd (s1.x, s2.x);\n "}, {"sha": "40025896a28162abefc62e337f6693bb839f345d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrcp14ss-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrcp14ss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -3,7 +3,6 @@\n /* { dg-require-effective-target avx512f } */\n \n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vrcp14ss (float *s1, float *s2, float *r)\n@@ -17,12 +16,11 @@ compute_vrcp14ss (float *s1, float *s2, float *r)\n static void\n avx512f_test (void)\n {\n-  union128 s1, s2, res1, res2, res3;\n+  union128 s1, s2, res1;\n   float res_ref[4];\n \n   s1.x = _mm_set_ps (-24.043, 68.346, -43.35, 546.46);\n   s2.x = _mm_set_ps (222.222, 333.333, 444.444, -2.0);\n-  res2.a[0] = DEFAULT_VALUE;\n \n   res1.x = _mm_rcp14_ss (s1.x, s2.x);\n "}, {"sha": "d882d2fb2edf2b7acf52accfef8d8b12ae106030", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrndscalepd-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalepd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalepd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalepd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -31,13 +31,12 @@ CALC (double *s, double *r, int imm)\n       }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int imm, i, j;\n   UNION_TYPE (AVX512F_LEN, d) res1,res2,res3,s;\n   double res_ref[SIZE];\n-  double res_ref_mask[SIZE];\n \n   MASK_TYPE mask = 6 ^ (0xff >> SIZE);\n "}, {"sha": "ca8edad8f406326ecaf4b26b015ddc1348457eb0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrndscaleps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaleps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaleps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaleps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -31,7 +31,7 @@ CALC (float *s, float *r, int imm)\n       }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int imm, i, j;"}, {"sha": "b96aa462790e31107d2b34c48ab42bf67e61ea7a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrndscalesd-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalesd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalesd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscalesd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -6,7 +6,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_rndscalesd (double *s1, double *s2, double *r, int imm)"}, {"sha": "42dd645ab8797ab7b27b616e15714a037df699ee", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrndscaless-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaless-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaless-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrndscaless-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -6,7 +6,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_rndscaless (float *s1, float *s2, float *r, int imm)"}, {"sha": "3648fcc135c100e3ff1c7d529896909bad6b3851", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14pd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14pd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14pd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14pd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s, res1, res2, res3;"}, {"sha": "2c120a2d64a23d35199d485fee43ad987b5f568d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s, res1, res2, res3;"}, {"sha": "dc96158b289e77342cee13e21dd86d5a5de58362", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14sd-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vrsqrt14sd (double *s1, double *s2, double *r)\n@@ -16,12 +15,11 @@ compute_vrsqrt14sd (double *s1, double *s2, double *r)\n static void\n avx512f_test (void)\n {\n-  union128d s1, s2, res1, res2, res3;\n+  union128d s1, s2, res1;\n   double res_ref[2];\n \n   s1.x = _mm_set_pd (-3.0, 111.111);\n   s2.x = _mm_set_pd (222.222, 4.0);\n-  res2.a[0] = DEFAULT_VALUE;\n \n   res1.x = _mm_rsqrt14_sd (s1.x, s2.x);\n "}, {"sha": "10d8664cda8e630dba1d43c6a3ebba0aa364a9af", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14ss-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n static void\n compute_vrsqrt14ss (float *s1, float *s2, float *r)\n@@ -18,12 +17,11 @@ compute_vrsqrt14ss (float *s1, float *s2, float *r)\n static void\n avx512f_test (void)\n {\n-  union128 s1, s2, res1, res2, res3;\n+  union128 s1, s2, res1;\n   float res_ref[4];\n \n   s1.x = _mm_set_ps (-24.43, 68.346, -43.35, 546.46);\n   s2.x = _mm_set_ps (222.222, 333.333, 444.444, 4.0);\n-  res2.a[0] = DEFAULT_VALUE;\n \n   res1.x = _mm_rsqrt14_ss (s1.x, s2.x);\n "}, {"sha": "cbfe3de91e682533033375b10c64e903dea8bf96", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <math.h>\n \n+void static\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "bf4a25a3cb503f8c93ee2f9fc503ba23944b31d3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,6 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include <math.h>\n \n+void static\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -19,7 +20,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "28738f7783786bf317be8ca355656be0a7af7825", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefsd-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n #define SIZE (128 / 64)\n "}, {"sha": "935618438a1bd50d2f283dbde252389c0c381090", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefss-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -4,7 +4,6 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n-#include \"avx512f-helper.h\"\n \n #define SIZE (128 / 32)\n "}, {"sha": "fa976260af497df5fa3d4060432c0f9bbbd6cdb8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshuff32x4-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (float *e, UNION_TYPE (AVX512F_LEN,) s1, UNION_TYPE (AVX512F_LEN,) s2,\n       int imm)\n {\n@@ -31,7 +31,7 @@ CALC (float *e, UNION_TYPE (AVX512F_LEN,) s1, UNION_TYPE (AVX512F_LEN,) s2,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) u1, u2, u3, s1, s2;"}, {"sha": "9f5e093b39b37c68849caf32d96f6fd5868ff878", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshuff64x2-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff64x2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff64x2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshuff64x2-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (double *e, UNION_TYPE (AVX512F_LEN, d) s1,\n       UNION_TYPE (AVX512F_LEN, d) s2, int imm)\n {\n@@ -31,7 +31,7 @@ CALC (double *e, UNION_TYPE (AVX512F_LEN, d) s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) u1, u2, u3, s1, s2;"}, {"sha": "b51eec7d97f5db662f0e06a0bfbcc3cb0c9a2933", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshufi32x4-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi32x4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi32x4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi32x4-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (int *e, UNION_TYPE (AVX512F_LEN, i_d) s1,\n       UNION_TYPE (AVX512F_LEN, i_d) s2, int imm)\n {\n@@ -31,7 +31,7 @@ CALC (int *e, UNION_TYPE (AVX512F_LEN, i_d) s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_d) u1, u2, u3, s1, s2;"}, {"sha": "5428eaeeb6089a416958d7cd77ee34f2233a2cda", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshufi64x2-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi64x2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi64x2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufi64x2-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -10,7 +10,7 @@\n #include \"avx512f-mask-type.h\"\n #include \"string.h\"\n \n-void\n+static void\n CALC (long long *e, UNION_TYPE (AVX512F_LEN, i_q) s1,\n       UNION_TYPE (AVX512F_LEN, i_q) s2, int imm)\n {\n@@ -31,7 +31,7 @@ CALC (long long *e, UNION_TYPE (AVX512F_LEN, i_q) s1,\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, i_q) u1, u2, u3, s1, s2;"}, {"sha": "3645fd7e21a9e42a0d3eaf379d78b584a0ed49a9", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshufpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -26,7 +26,7 @@ CALC (double *e, UNION_TYPE (AVX512F_LEN, d) s1,\n #endif\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) u1, u2, u3, s1, s2;"}, {"sha": "c3243812947e5a4bb790c2757908cf0b675ba4d3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vshufps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vshufps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -35,7 +35,7 @@ CALC (float *e, UNION_TYPE (AVX512F_LEN,) s1, UNION_TYPE (AVX512F_LEN,) s2,\n #endif\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) u1, u2, u3, s1, s2;"}, {"sha": "b334079f91fcda78951ef37e6887d821372d3250", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vsqrtpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s, double *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s, res1, res2, res3;"}, {"sha": "19fb9e9751a295562c8b69d17073bf319bb233b6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vsqrtps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsqrtps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (float *s, float *r)\n     }\n }\n \n-static void\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s, res1, res2, res3;"}, {"sha": "98291942dacfdbbca166282f4954632de817ec59", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vsubpd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 64)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (double *r, double *s1, double *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (double *r, double *s1, double *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "921be5b996fbfddd036261754d8ad745141ca8df", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vsubps-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vsubps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -9,6 +9,7 @@\n #define SIZE (AVX512F_LEN / 32)\n #include \"avx512f-mask-type.h\"\n \n+static void\n CALC (float *r, float *s1, float *s2)\n {\n   int i;\n@@ -18,7 +19,7 @@ CALC (float *r, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   int i, sign;"}, {"sha": "35172ef4fe3cefc0622b88d7085af7430111076a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vunpckhpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s1, double *s2, double *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, res1, res2, res3;"}, {"sha": "d77806823007bf4277e5fa8a579f71bbfea05392", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vunpckhps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpckhps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -23,7 +23,7 @@ CALC (float *s1, float *s2, float *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, ) s1, s2, res1, res2, res3;"}, {"sha": "1b9a06ff5c6585783e22ab2ae66dd28b4c08cee4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vunpcklpd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklpd-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -21,7 +21,7 @@ CALC (double *s1, double *s2, double *r)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN, d) s1, s2, res1, res2, res3;"}, {"sha": "e30c6c516a977556e23723e97ca731ed79fadfd2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vunpcklps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vunpcklps-2.c?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -22,7 +22,7 @@ CALC (float *e, float *s1, float *s2)\n     }\n }\n \n-void static\n+void\n TEST (void)\n {\n   UNION_TYPE (AVX512F_LEN,) s1, s2, u1, u2, u3;"}, {"sha": "c753a2b6658ac02757814059ffd00a8300be4762", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -261,8 +261,7 @@ proc check_effective_target_avx512f { } {\n \t__v8di\n \tmm512_and_epi64  (__v8di __X, __v8di __Y)\n \t{\n-            __v8di __W;\n-            return __builtin_ia32_pandq512_mask (__X, __Y, __W, -1);\n+            return __builtin_ia32_pandq512_mask (__X, __Y, __X, -1);\n \t}\n     } \"-mavx512f\" ]\n }\n@@ -288,8 +287,7 @@ proc check_effective_target_avx512er { } {\n \t__v16sf\n \tmm512_exp2a23_ps  (__v16sf __X)\n \t{\n-        __v16sf __W;\n-\t    return __builtin_ia32_exp2ps_mask (__X, __W, -1, 4);\n+\t    return __builtin_ia32_exp2ps_mask (__X, __X, -1, 4);\n \t}\n    } \"-Wno-psabi -mavx512er\" ]\n }"}, {"sha": "abb792b09dc521ab0b8c07720165be7d00a0f6e4", "filename": "gcc/testsuite/gcc.target/i386/m128-check.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm128-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm128-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm128-check.h?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -34,12 +34,25 @@ typedef union\n   int a[4];\n } union128i_d;\n \n+typedef union\n+{\n+  __m128i x;\n+  unsigned int a[4];\n+} union128i_ud;\n+\n typedef union\n {\n   __m128i x;\n   long long a[2];\n } union128i_q;\n \n+typedef union\n+{\n+  __m128i x;\n+  unsigned long long a[2];\n+} union128i_uq;\n+\n+\n typedef union\n {\n   __m128d x;\n@@ -87,7 +100,9 @@ CHECK_EXP (union128i_ub, unsigned char, \"%d\")\n CHECK_EXP (union128i_w, short, \"%d\")\n CHECK_EXP (union128i_uw, unsigned short, \"%d\")\n CHECK_EXP (union128i_d, int, \"0x%x\")\n+CHECK_EXP (union128i_ud, unsigned int, \"0x%x\")\n CHECK_EXP (union128i_q, long long, \"0x%llx\")\n+CHECK_EXP (union128i_uq, unsigned long long, \"0x%llx\")\n CHECK_EXP (union128d, double, \"%f\")\n #endif\n \n@@ -117,6 +132,12 @@ CHECK_ARRAY(c, char, \"0x%hhx\")\n CHECK_ARRAY(s, short, \"0x%hx\")\n CHECK_ARRAY(i, int, \"0x%x\")\n CHECK_ARRAY(l, long long, \"0x%llx\")\n+CHECK_ARRAY(uc, unsigned char, \"0x%hhx\")\n+CHECK_ARRAY(us, unsigned short, \"0x%hx\")\n+CHECK_ARRAY(ui, unsigned int, \"0x%x\")\n+CHECK_ARRAY(ul, unsigned long long, \"0x%llx\")\n+\n+\n \n #define CHECK_FP_ARRAY(ARRAY, TYPE, ESP, FMT)                   \\\n static int                                              \\"}, {"sha": "6dbc3a0d9d76fbd9acd326efa3c5b73c8956fff6", "filename": "gcc/testsuite/gcc.target/i386/m256-check.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -44,12 +44,40 @@ typedef union\n   double a[4];\n } union256d;\n \n+typedef union\n+{\n+  __m256i x;\n+  unsigned char a[32];\n+} union256i_ub;\n+         \n+typedef union\n+{\n+  __m256i x;\n+  unsigned short a[16];\n+} union256i_uw;\n+                 \n+typedef union\n+{\n+  __m256i x;\n+  unsigned int a[8];\n+} union256i_ud;\n+  \n+typedef union\n+{\n+  __m256i x;\n+  unsigned long long a[4];\n+} union256i_uq;\n+                          \n CHECK_EXP (union256i_b, char, \"%d\")\n CHECK_EXP (union256i_w, short, \"%d\")\n CHECK_EXP (union256i_d, int, \"0x%x\")\n CHECK_EXP (union256i_q, long long, \"0x%llx\")\n CHECK_EXP (union256, float, \"%f\")\n CHECK_EXP (union256d, double, \"%f\")\n+CHECK_EXP (union256i_ub, unsigned char, \"%d\")\n+CHECK_EXP (union256i_uw, unsigned short, \"%d\")\n+CHECK_EXP (union256i_ud, unsigned int, \"0x%x\")\n+CHECK_EXP (union256i_uq, unsigned long long, \"0x%llx\")\n \n #define CHECK_FP_EXP(UINON_TYPE, VALUE_TYPE, ESP, FMT)\t\t\\\n static int\t\t\t\t\t\t\t\\"}, {"sha": "64e085bc60262365cafd0a26ee50283787ad0de4", "filename": "gcc/testsuite/gcc.target/i386/m512-check.h", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm512-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451c4fba283e31e1272573a04672056390e49e02/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm512-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm512-check.h?ref=451c4fba283e31e1272573a04672056390e49e02", "patch": "@@ -37,12 +37,42 @@ typedef union\n   double a[8];\n } union512d;\n \n+typedef union\n+{\n+  __m512i x;\n+  unsigned char a[64];\n+} union512i_ub;\n+          \n+typedef union\n+{\n+ __m512i x;\n+ unsigned short a[32];\n+ } union512i_uw;\n+                      \n+typedef union\n+{\n+ __m512i x;\n+ unsigned int a[16];\n+} union512i_ud;\n+                  \n+typedef union\n+{\n+ __m512i x;\n+ unsigned long long a[8];\n+} union512i_uq;\n+                                    \n+\n CHECK_EXP (union512i_b, char, \"%d\")\n CHECK_EXP (union512i_w, short, \"%d\")\n CHECK_EXP (union512i_d, int, \"0x%x\")\n CHECK_EXP (union512i_q, long long, \"0x%llx\")\n CHECK_EXP (union512, float, \"%f\")\n CHECK_EXP (union512d, double, \"%f\")\n+CHECK_EXP (union512i_ub, unsigned char, \"%d\")\n+CHECK_EXP (union512i_uw, unsigned short, \"%d\")\n+CHECK_EXP (union512i_ud, unsigned int, \"0x%x\")\n+CHECK_EXP (union512i_uq, unsigned long long, \"0x%llx\")\n+     \n \n CHECK_FP_EXP (union512, float, ESP_FLOAT, \"%f\")\n CHECK_FP_EXP (union512d, double, ESP_DOUBLE, \"%f\")"}]}