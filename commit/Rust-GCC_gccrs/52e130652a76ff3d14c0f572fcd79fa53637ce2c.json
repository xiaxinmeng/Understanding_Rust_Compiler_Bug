{"sha": "52e130652a76ff3d14c0f572fcd79fa53637ce2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJlMTMwNjUyYTc2ZmYzZDE0YzBmNTcyZmNkNzlmYTUzNjM3Y2UyYw==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2021-06-03T03:54:08Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2021-06-03T16:42:15Z"}, "message": "Fix operand order to subf for p10 fusion.\n\nThis certainly causes a bootstrap miscompare, and might also be\nresponsible for PR/100820. The operands to subf were reversed\nin the logical-add/sub fusion patterns, and I screwed up my\nbootstrap test which is how it ended up getting committed.\n\ngcc/ChangeLog\n\n\t* config/rs6000/genfusion.pl (gen_logical_addsubf): Fix input\n\torder to subf instruction.\n\t* config/rs6000/fusion.md: Regenerate.", "tree": {"sha": "3aaf5949bd1ca62d6bef239562e5484a091f37a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3aaf5949bd1ca62d6bef239562e5484a091f37a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52e130652a76ff3d14c0f572fcd79fa53637ce2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e130652a76ff3d14c0f572fcd79fa53637ce2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e130652a76ff3d14c0f572fcd79fa53637ce2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e130652a76ff3d14c0f572fcd79fa53637ce2c/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0614bbbe59c6953e088cffa39dfe63d86fc1fa96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0614bbbe59c6953e088cffa39dfe63d86fc1fa96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0614bbbe59c6953e088cffa39dfe63d86fc1fa96"}], "stats": {"total": 84, "additions": 43, "deletions": 41}, "files": [{"sha": "e642ff5f95fe011cbe35e0b0cca0ae4f8fe3fdec", "filename": "gcc/config/rs6000/fusion.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e130652a76ff3d14c0f572fcd79fa53637ce2c/gcc%2Fconfig%2Frs6000%2Ffusion.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e130652a76ff3d14c0f572fcd79fa53637ce2c/gcc%2Fconfig%2Frs6000%2Ffusion.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffusion.md?ref=52e130652a76ff3d14c0f572fcd79fa53637ce2c", "patch": "@@ -1733,10 +1733,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   and %3,%1,%0\\;subf %3,%3,%2\n-   and %3,%1,%0\\;subf %3,%3,%2\n-   and %3,%1,%0\\;subf %3,%3,%2\n-   and %4,%1,%0\\;subf %3,%4,%2\"\n+   and %3,%1,%0\\;subf %3,%2,%3\n+   and %3,%1,%0\\;subf %3,%2,%3\n+   and %3,%1,%0\\;subf %3,%2,%3\n+   and %4,%1,%0\\;subf %3,%2,%4\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1751,10 +1751,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   nand %3,%1,%0\\;subf %3,%3,%2\n-   nand %3,%1,%0\\;subf %3,%3,%2\n-   nand %3,%1,%0\\;subf %3,%3,%2\n-   nand %4,%1,%0\\;subf %3,%4,%2\"\n+   nand %3,%1,%0\\;subf %3,%2,%3\n+   nand %3,%1,%0\\;subf %3,%2,%3\n+   nand %3,%1,%0\\;subf %3,%2,%3\n+   nand %4,%1,%0\\;subf %3,%2,%4\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1769,10 +1769,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   nor %3,%1,%0\\;subf %3,%3,%2\n-   nor %3,%1,%0\\;subf %3,%3,%2\n-   nor %3,%1,%0\\;subf %3,%3,%2\n-   nor %4,%1,%0\\;subf %3,%4,%2\"\n+   nor %3,%1,%0\\;subf %3,%2,%3\n+   nor %3,%1,%0\\;subf %3,%2,%3\n+   nor %3,%1,%0\\;subf %3,%2,%3\n+   nor %4,%1,%0\\;subf %3,%2,%4\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1787,10 +1787,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   or %3,%1,%0\\;subf %3,%3,%2\n-   or %3,%1,%0\\;subf %3,%3,%2\n-   or %3,%1,%0\\;subf %3,%3,%2\n-   or %4,%1,%0\\;subf %3,%4,%2\"\n+   or %3,%1,%0\\;subf %3,%2,%3\n+   or %3,%1,%0\\;subf %3,%2,%3\n+   or %3,%1,%0\\;subf %3,%2,%3\n+   or %4,%1,%0\\;subf %3,%2,%4\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1805,10 +1805,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   and %3,%1,%0\\;subf %3,%2,%3\n-   and %3,%1,%0\\;subf %3,%2,%3\n-   and %3,%1,%0\\;subf %3,%2,%3\n-   and %4,%1,%0\\;subf %3,%2,%4\"\n+   and %3,%1,%0\\;subf %3,%3,%2\n+   and %3,%1,%0\\;subf %3,%3,%2\n+   and %3,%1,%0\\;subf %3,%3,%2\n+   and %4,%1,%0\\;subf %3,%4,%2\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1823,10 +1823,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   nand %3,%1,%0\\;subf %3,%2,%3\n-   nand %3,%1,%0\\;subf %3,%2,%3\n-   nand %3,%1,%0\\;subf %3,%2,%3\n-   nand %4,%1,%0\\;subf %3,%2,%4\"\n+   nand %3,%1,%0\\;subf %3,%3,%2\n+   nand %3,%1,%0\\;subf %3,%3,%2\n+   nand %3,%1,%0\\;subf %3,%3,%2\n+   nand %4,%1,%0\\;subf %3,%4,%2\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1841,10 +1841,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   nor %3,%1,%0\\;subf %3,%2,%3\n-   nor %3,%1,%0\\;subf %3,%2,%3\n-   nor %3,%1,%0\\;subf %3,%2,%3\n-   nor %4,%1,%0\\;subf %3,%2,%4\"\n+   nor %3,%1,%0\\;subf %3,%3,%2\n+   nor %3,%1,%0\\;subf %3,%3,%2\n+   nor %3,%1,%0\\;subf %3,%3,%2\n+   nor %4,%1,%0\\;subf %3,%4,%2\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])\n@@ -1859,10 +1859,10 @@\n    (clobber (match_scratch:GPR 4 \"=X,X,X,&r\"))]\n   \"(TARGET_P10_FUSION && TARGET_P10_FUSION_LOGADD)\"\n   \"@\n-   or %3,%1,%0\\;subf %3,%2,%3\n-   or %3,%1,%0\\;subf %3,%2,%3\n-   or %3,%1,%0\\;subf %3,%2,%3\n-   or %4,%1,%0\\;subf %3,%2,%4\"\n+   or %3,%1,%0\\;subf %3,%3,%2\n+   or %3,%1,%0\\;subf %3,%3,%2\n+   or %3,%1,%0\\;subf %3,%3,%2\n+   or %4,%1,%0\\;subf %3,%4,%2\"\n   [(set_attr \"type\" \"fused_arith_logical\")\n    (set_attr \"cost\" \"6\")\n    (set_attr \"length\" \"8\")])"}, {"sha": "577b9553deb46623f5fd6d48df095972391cacb2", "filename": "gcc/config/rs6000/genfusion.pl", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e130652a76ff3d14c0f572fcd79fa53637ce2c/gcc%2Fconfig%2Frs6000%2Fgenfusion.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e130652a76ff3d14c0f572fcd79fa53637ce2c/gcc%2Fconfig%2Frs6000%2Fgenfusion.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fgenfusion.pl?ref=52e130652a76ff3d14c0f572fcd79fa53637ce2c", "patch": "@@ -166,7 +166,7 @@ sub gen_logical_addsubf\n \t$outer_op, $outer_comp, $outer_inv, $outer_rtl, $inner, @inner_ops,\n \t$inner_comp, $inner_inv, $inner_rtl, $inner_op, $both_commute, $c4,\n \t$bc, $inner_arg0, $inner_arg1, $inner_exp, $outer_arg2, $outer_exp,\n-\t$target_flag, $ftype, $insn, $is_rsubf, $outer_32, $outer_42,\n+\t$target_flag, $ftype, $insn, $is_subf, $is_rsubf, $outer_32, $outer_42,\n \t$outer_name, $fuse_type);\n   KIND: foreach $kind ('scalar','vector') {\n       @outer_ops = @logicals;\n@@ -188,11 +188,10 @@ sub gen_logical_addsubf\n       $c4 = \"${constraint},${constraint},${constraint},${constraint}\";\n     OUTER: foreach $outer ( @outer_ops ) {\n \t$outer_name = \"${vchr}${outer}\";\n-\tif ( $outer eq \"rsubf\" ) {\n-\t    $is_rsubf = 1;\n+\t$is_subf = ( $outer eq \"subf\" );\n+\t$is_rsubf = ( $outer eq \"rsubf\" );\n+\tif ( $is_rsubf ) {\n \t    $outer = \"subf\";\n-\t} else {\n-\t    $is_rsubf = 0;\n \t}\n \t$outer_op = \"${vchr}${outer}\";\n \t$outer_comp = $complement{$outer};\n@@ -241,16 +240,19 @@ sub gen_logical_addsubf\n \t  if ( ($outer_comp & 2) == 2 ) {\n \t      $inner_exp = \"(not:${mode} $inner_exp)\";\n \t  }\n+\t  if ( $is_subf ) {\n+\t      $outer_32 = \"%2,%3\";\n+\t      $outer_42 = \"%2,%4\";\n+\t  } else {\n+\t      $outer_32 = \"%3,%2\";\n+\t      $outer_42 = \"%4,%2\";\n+\t  }\n \t  if ( $is_rsubf == 1 ) {\n \t      $outer_exp = \"(${outer_rtl}:${mode} ${outer_arg2}\n                  ${inner_exp})\";\n-\t      $outer_32 = \"%2,%3\";\n-\t      $outer_42 = \"%2,%4\";\n \t  } else {\n \t      $outer_exp = \"(${outer_rtl}:${mode} ${inner_exp}\n                  ${outer_arg2})\";\n-\t      $outer_32 = \"%3,%2\";\n-\t      $outer_42 = \"%4,%2\";\n \t  }\n \t  if ( $outer_inv == 1 ) {\n \t      $outer_exp = \"(not:${mode} $outer_exp)\";"}]}