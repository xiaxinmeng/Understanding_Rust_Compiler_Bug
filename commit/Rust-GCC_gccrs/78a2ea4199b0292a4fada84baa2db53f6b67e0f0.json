{"sha": "78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhMmVhNDE5OWIwMjkyYTRmYWRhODRiYWEyZGI1M2Y2YjY3ZTBmMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-13T17:56:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-13T17:56:05Z"}, "message": "re PR c++/56135 ([c++11] this incorrectly captured as null in template member function)\n\n\tPR c++/56135\n\t* pt.c (tsubst_copy_and_build): Don't forget any new\n\tcaptures that arose from use of dependent names.\n\nFrom-SVN: r196021", "tree": {"sha": "6757bf0aacf35f9eab5e3c69821c4770fcc2e684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6757bf0aacf35f9eab5e3c69821c4770fcc2e684"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70cc32885899d283acc811b075c4e6aa8199e173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cc32885899d283acc811b075c4e6aa8199e173", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cc32885899d283acc811b075c4e6aa8199e173"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "e3b927bc9db41f40b6ac0386510e83e6c91f6e09", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "patch": "@@ -1,3 +1,9 @@\n+2013-02-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56135\n+\t* pt.c (tsubst_copy_and_build): Don't forget any new\n+\tcaptures that arose from use of dependent names.\n+\n 2013-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56302"}, {"sha": "2aadd4d0bf410766e156e10fbb0ea527327dd7f2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "patch": "@@ -14457,9 +14457,11 @@ tsubst_copy_and_build (tree t,\n \tcomplete_type (type);\n \n \t/* The capture list refers to closure members, so this needs to\n-\t   wait until after we finish instantiating the type.  */\n+\t   wait until after we finish instantiating the type.  Also keep\n+\t   any captures that may have been added during instantiation.  */\n \tLAMBDA_EXPR_CAPTURE_LIST (r)\n-\t  = RECUR (LAMBDA_EXPR_CAPTURE_LIST (t));\n+\t  = chainon (RECUR (LAMBDA_EXPR_CAPTURE_LIST (t)),\n+\t\t     LAMBDA_EXPR_CAPTURE_LIST (r));\n \tLAMBDA_EXPR_THIS_CAPTURE (r) = NULL_TREE;\n \n \tRETURN (build_lambda_object (r));"}, {"sha": "9309a44d8792b9f6968cbe11af9ffd1aa66dac78", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this8.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a2ea4199b0292a4fada84baa2db53f6b67e0f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C?ref=78a2ea4199b0292a4fada84baa2db53f6b67e0f0", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/56135\n+// { dg-do run { target c++11 } }\n+\n+#include <functional>\n+\n+extern \"C\" void abort() throw();\n+\n+struct test {\n+  template<typename T>\n+  std::function<void()> broken(int x) {\n+    return [=] { +x; print<T>(); };\n+  }\n+\n+  std::function<void()> works0() {\n+    return [=] { print<int>(); };\n+  }\n+\n+  template<typename T>\n+  std::function<void()> works1() {\n+    return [=] { print<int>(); };\n+  }\n+\n+  template<typename T>\n+  std::function<void()> works2() {\n+    return [=] { this->print<T>(); };\n+  }\n+\n+  template<typename T>\n+  void print() { if (this == NULL) abort (); }\n+};\n+\n+int main(void) {\n+  test().broken<int>(1)();\n+  test().works0()();\n+  test().works1<int>()();\n+  test().works2<int>()();\n+\n+  return 0;\n+}"}]}