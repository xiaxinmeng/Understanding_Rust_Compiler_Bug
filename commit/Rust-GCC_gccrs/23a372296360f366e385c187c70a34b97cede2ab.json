{"sha": "23a372296360f366e385c187c70a34b97cede2ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNhMzcyMjk2MzYwZjM2NmUzODVjMTg3YzcwYTM0Yjk3Y2VkZTJhYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-27T13:48:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-27T13:48:15Z"}, "message": "re PR tree-optimization/68104 (ice in vect_update_misalignment_for_peel with -O3)\n\n2015-10-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68104\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Move\n\tstrided access check ...\n\t(vect_compute_data_refs_alignment): ... here.\n\n\t* gcc.dg/torture/pr68104.c: New testcase.\n\nFrom-SVN: r229440", "tree": {"sha": "dfcea40f6c79636f4f3b24778642a5a745689386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfcea40f6c79636f4f3b24778642a5a745689386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23a372296360f366e385c187c70a34b97cede2ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a372296360f366e385c187c70a34b97cede2ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23a372296360f366e385c187c70a34b97cede2ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a372296360f366e385c187c70a34b97cede2ab/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e44e857e05c165f6f01aeb56a7a43ee765bfc99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e44e857e05c165f6f01aeb56a7a43ee765bfc99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e44e857e05c165f6f01aeb56a7a43ee765bfc99"}], "stats": {"total": 73, "additions": 55, "deletions": 18}, "files": [{"sha": "9659978a60815f7fc11829c55ab3fa2dddb7053f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a372296360f366e385c187c70a34b97cede2ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a372296360f366e385c187c70a34b97cede2ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23a372296360f366e385c187c70a34b97cede2ab", "patch": "@@ -1,3 +1,10 @@\n+2015-10-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68104\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Move\n+\tstrided access check ...\n+\t(vect_compute_data_refs_alignment): ... here.\n+\n 2015-10-27  Daniel Jacobowitz  <dan@codesourcery.com>\n \t    Joseph Myers  <joseph@codesourcery.com>\n \t    Mark Shinwell  <shinwell@codesourcery.com>"}, {"sha": "bcadb0c390019f7899cc5ecfe5b2e353553c4412", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23a372296360f366e385c187c70a34b97cede2ab", "patch": "@@ -1,3 +1,8 @@\n+2015-10-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68104\n+\t* gcc.dg/torture/pr68104.c: New testcase.\n+\n 2015-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.dg/vect/vect-strided-shift-1.c: New."}, {"sha": "5db0282cdc765a78fcb202a577089ce27e38c6e4", "filename": "gcc/testsuite/gcc.dg/torture/pr68104.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68104.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68104.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68104.c?ref=23a372296360f366e385c187c70a34b97cede2ab", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+\n+typedef struct\n+{\n+  char vl;\n+  char weight;\n+} ib_vl_arb_element_t;\n+typedef struct { ib_vl_arb_element_t vl_entry[32]; } ib_vl_arb_table_t;\n+typedef enum { IB_SUCCESS } ib_api_status_t;\n+int a, b, d;\n+char c;\n+void fn1();\n+ib_api_status_t fn2()\n+{\n+  int e = b;\n+  ib_vl_arb_table_t f;\n+  if (e)\n+    for (a = 0; a < d; a++)\n+      f.vl_entry[a].vl &= c;\n+  fn1(f);\n+  return IB_SUCCESS;\n+}"}, {"sha": "51cea9ecb31fc2f1892be55de526b36aab0c1bbf", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a372296360f366e385c187c70a34b97cede2ab/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=23a372296360f366e385c187c70a34b97cede2ab", "patch": "@@ -629,12 +629,6 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n   /* Initialize misalignment to unknown.  */\n   SET_DR_MISALIGNMENT (dr, -1);\n \n-  /* Strided accesses perform only component accesses, misalignment information\n-     is irrelevant for them.  */\n-  if (STMT_VINFO_STRIDED_P (stmt_info)\n-      && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n-    return true;\n-\n   if (tree_fits_shwi_p (DR_STEP (dr)))\n     misalign = DR_INIT (dr);\n   aligned_to = DR_ALIGNED_TO (dr);\n@@ -794,18 +788,27 @@ vect_compute_data_refs_alignment (vec_info *vinfo)\n   unsigned int i;\n \n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n-    if (STMT_VINFO_VECTORIZABLE (vinfo_for_stmt (DR_STMT (dr)))\n-        && !vect_compute_data_ref_alignment (dr))\n-      {\n-        if (is_a <bb_vec_info> (vinfo))\n-          {\n-            /* Mark unsupported statement as unvectorizable.  */\n-            STMT_VINFO_VECTORIZABLE (vinfo_for_stmt (DR_STMT (dr))) = false;\n-            continue;\n-          }\n-        else\n-          return false;\n-      }\n+    {\n+      stmt_vec_info stmt_info = vinfo_for_stmt (DR_STMT (dr));\n+      if (STMT_VINFO_VECTORIZABLE (stmt_info)\n+\t  && !vect_compute_data_ref_alignment (dr))\n+\t{\n+\t  /* Strided accesses perform only component accesses, misalignment\n+\t     information is irrelevant for them.  */\n+\t  if (STMT_VINFO_STRIDED_P (stmt_info)\n+\t      && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n+\t    continue;\n+\n+\t  if (is_a <bb_vec_info> (vinfo))\n+\t    {\n+\t      /* Mark unsupported statement as unvectorizable.  */\n+\t      STMT_VINFO_VECTORIZABLE (vinfo_for_stmt (DR_STMT (dr))) = false;\n+\t      continue;\n+\t    }\n+\t  else\n+\t    return false;\n+\t}\n+    }\n \n   return true;\n }"}]}