{"sha": "4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM5ZmI4NzA0YWUzODkzYWMzOTcyOWU5NzEzZjgwNDZmYWM2ZTFkNw==", "commit": {"author": {"name": "Lee Millward", "email": "lee.millward@codesourcery.com", "date": "2006-10-20T20:13:42Z"}, "committer": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-10-20T20:13:42Z"}, "message": "re PR c++/28053 (ICE deriving from class with invalid bitfield)\n\n        PR c++/28053\n        * decl2.c (grokbitfield): Detect invalid non-integral \n        types earlier when possible.\n\n        * g++.dg/parse/bitfield1.C: Adjust error markers.\n        * g++.dg/parse/bitfield2.C: New test. \n\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r117910", "tree": {"sha": "c490295d80e90317c5432e6da339f8379c7bf200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c490295d80e90317c5432e6da339f8379c7bf200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/comments", "author": null, "committer": null, "parents": [{"sha": "5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "a0cfbc0bf39f5dae5465e376a317bd36b7c61ec2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "patch": "@@ -1,3 +1,10 @@\n+2006-10-20  Lee Millward  <lee.millward@codesourcery.com>\n+            Mark Mitchell <mark@codesourcery.com>\n+\n+        PR c++/28053\n+        * decl2.c (grokbitfield): Detect invalid non-integral \n+        types earlier when possible.\n+\t\n 2006-10-18  Mark Shinwell  <shinwell@codesourcery.com>\n \n \tPR c++/26884"}, {"sha": "3b23638e71ad1a12d12848b700562075c7b34b8c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "patch": "@@ -946,6 +946,14 @@ grokbitfield (const cp_declarator *declarator,\n   if (TREE_CODE (value) == VOID_TYPE)\n     return void_type_node;\n \n+  if (!INTEGRAL_TYPE_P (TREE_TYPE (value))\n+      && (POINTER_TYPE_P (value)\n+          || !dependent_type_p (TREE_TYPE (value))))\n+    {\n+      error (\"bit-field %qD with non-integral type\", value);\n+      return error_mark_node;\n+    }\n+\n   if (TREE_CODE (value) == TYPE_DECL)\n     {\n       error (\"cannot declare %qD to be a bit-field type\", value);"}, {"sha": "8634b8e41ec32b2e0398b942ef63b38c783393ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "patch": "@@ -1,3 +1,9 @@\n+2006-10-20  Lee Millward  <lee.millward@codesourcery.com>\n+        \n+        PR c++/28053\n+        * g++.dg/parse/bitfield1.C: Adjust error markers.\n+        * g++.dg/parse/bitfield2.C: New test. \n+\t\n 2006-10-20  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.dg/tree-ssa/ivopts-2.c: Match final candidates line only."}, {"sha": "2e076058508fbdbfe724d7addacb9eb36aaec516", "filename": "gcc/testsuite/g++.dg/parse/bitfield1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C?ref=4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "patch": "@@ -7,5 +7,5 @@ struct A\n \n void foo(A& a)\n {\n-  (char)a.i;\n+  (char)a.i;    // { dg-error \"no member\" }\n }"}, {"sha": "49aace1dc764be75794edd233cbf55dcb3a4cb0a", "filename": "gcc/testsuite/g++.dg/parse/bitfield2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9fb8704ae3893ac39729e9713f8046fac6e1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C?ref=4c9fb8704ae3893ac39729e9713f8046fac6e1d7", "patch": "@@ -0,0 +1,34 @@\n+//PR c++/28053\n+\n+struct X {};\n+\n+struct A\n+{\n+    X x : 2;            // { dg-error \"non-integral type\" }\n+};\n+struct B : A {};\n+\n+template <typename T>\n+struct C\n+{\n+  T t : 3;\n+};\n+\n+C<int> c;\n+\n+template <typename T>\n+struct D\n+{\n+  T t : 3;              // { dg-error \"non-integral type\" }\n+};\n+\n+D<double> d;            // { dg-error \"instantiated\" }\n+\n+template <typename T>\n+struct E\n+{\n+  typedef T* U;\n+  U t : 3;             // { dg-error \"non-integral type\" }\n+};\n+\n+E<double> e;"}]}