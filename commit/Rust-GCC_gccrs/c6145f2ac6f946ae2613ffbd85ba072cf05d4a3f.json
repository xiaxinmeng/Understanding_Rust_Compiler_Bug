{"sha": "c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYxNDVmMmFjNmY5NDZhZTI2MTNmZmJkODViYTA3MmNmMDVkNGEzZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-11-07T17:06:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-07T17:06:43Z"}, "message": "optc-save-gen.awk: Generate cl_target_option_free and cl_optimization_option_free.\n\n\n\t* optc-save-gen.awk: Generate cl_target_option_free\n\tand cl_optimization_option_free.\n\t* opth-en.awk: Declare cl_target_option_free\n\tand cl_optimization_option_free.\n\t* tree.c (free_node): Use it.\n\nFrom-SVN: r277926", "tree": {"sha": "9c4e29310f176f5355cb165b1abc2ecfac45974f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c4e29310f176f5355cb165b1abc2ecfac45974f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/comments", "author": null, "committer": null, "parents": [{"sha": "4629ea55608ee2f1e04186dce2c7f55af0537ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4629ea55608ee2f1e04186dce2c7f55af0537ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4629ea55608ee2f1e04186dce2c7f55af0537ccb"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "bfe0ebcb010a6d5945f12a122b1820c95e9954c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "patch": "@@ -1,3 +1,11 @@\n+2019-11-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* optc-save-gen.awk: Generate cl_target_option_free\n+\tand cl_optimization_option_free.\n+\t* opth-en.awk: Declare cl_target_option_free\n+\tand cl_optimization_option_free.\n+\t* tree.c (free_node): Use it.\n+\n 2019-11-06  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-streamer-in.c: Include alloc-pool.h."}, {"sha": "1c23836c7f11be25d86b545c42607de14ca2df85", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "patch": "@@ -802,6 +802,17 @@ for (i = 0; i < n_target_val; i++) {\n \n print \"}\";\n \n+print \"/* free heap memory used by target options  */\";\n+print \"void\";\n+print \"cl_target_option_free (struct cl_target_option *ptr ATTRIBUTE_UNUSED)\";\n+print \"{\";\n+for (i = 0; i < n_target_str; i++) {\n+\tname = var_target_str[i]\n+\tprint \"  if (ptr->\" name\")\";\n+\tprint \"    free (const_cast <char *>(ptr->\" name\"));\";\n+}\n+print \"}\";\n+\n n_opt_val = 4;\n var_opt_val[0] = \"x_optimize\"\n var_opt_val_type[0] = \"char \"\n@@ -921,4 +932,18 @@ for (i = 0; i < n_opt_val; i++) {\n \t      print \"  ptr->\" name\" = (\" var_opt_val_type[i] \") bp_unpack_value (bp, 64);\";\n }\n print \"}\";\n+print \"/* Free heap memory used by optimization options  */\";\n+print \"void\";\n+print \"cl_optimization_option_free (struct cl_optimization *ptr ATTRIBUTE_UNUSED)\";\n+print \"{\";\n+for (i = 0; i < n_opt_val; i++) {\n+\tname = var_opt_val[i]\n+\totype = var_opt_val_type[i];\n+\tif (otype ~ \"^const char \\\\**$\")\n+\t{\n+\t      print \"  if (ptr->\" name\")\";\n+\t      print \"    free (const_cast <char *>(ptr->\" name\"));\";\n+\t}\n+}\n+print \"}\";\n }"}, {"sha": "218e772810e89fb13b9e5f711d7a171727d09ec5", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "patch": "@@ -303,6 +303,9 @@ print \"\";\n print \"/* Compare two target option variables from a structure.  */\";\n print \"extern bool cl_target_option_eq (const struct cl_target_option *, const struct cl_target_option *);\";\n print \"\";\n+print \"/* Free heap memory used by target option variables.  */\";\n+print \"extern void cl_target_option_free (struct cl_target_option *);\";\n+print \"\";\n print \"/* Hash option variables from a structure.  */\";\n print \"extern hashval_t cl_target_option_hash (const struct cl_target_option *);\";\n print \"\";\n@@ -312,6 +315,9 @@ print \"\";\n print \"/* Compare two optimization options.  */\";\n print \"extern bool cl_optimization_option_eq (cl_optimization const *ptr1, cl_optimization const *ptr2);\"\n print \"\";\n+print \"/* Free heap memory used by optimization options.  */\";\n+print \"extern void cl_optimization_option_free (cl_optimization *ptr1);\"\n+print \"\";\n print \"/* Generator files may not have access to location_t, and don't need these.  */\"\n print \"#if defined(UNKNOWN_LOCATION)\"\n print \"bool                                                                  \""}, {"sha": "d2c9fe35995332eb31e91f1157cef558698a61d8", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c6145f2ac6f946ae2613ffbd85ba072cf05d4a3f", "patch": "@@ -1170,6 +1170,10 @@ free_node (tree node)\n     vec_free (BLOCK_NONLOCALIZED_VARS (node));\n   else if (code == TREE_BINFO)\n     vec_free (BINFO_BASE_ACCESSES (node));\n+  else if (code == OPTIMIZATION_NODE)\n+    cl_optimization_option_free (TREE_OPTIMIZATION (node));\n+  else if (code == TARGET_OPTION_NODE)\n+    cl_target_option_free (TREE_TARGET_OPTION (node));\n   ggc_free (node);\n }\n \f"}]}