{"sha": "4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZmMmI2ZGNjOThkNDJmYjc1YzQ0OTFhYjM4NzFjZWYxMDg1N2ViZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T12:47:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T12:47:56Z"}, "message": "[multiple changes]\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, osint.adb, osint.ads: Minor reformatting.\n\n2014-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb (Derive_Type_Declaration,\n\tProcess_Discriminants): Remove SPARK-specific legality checks.\n\n2014-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sechas.ads, g-sechas.adb (HMAC_Initial_Context): New subprogram.\n\t* gnat_rm.texi (GNAT.MD5/SHA1/SHA224/SHA256/SHA512): Document support\n\tfor HMAC.\n\nFrom-SVN: r213577", "tree": {"sha": "f3848bfb928022bf983a63f33a0f1da48ac0aa85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3848bfb928022bf983a63f33a0f1da48ac0aa85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/comments", "author": null, "committer": null, "parents": [{"sha": "e72a92e447fc0d13a6744e4d4a5e2c50c8515f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72a92e447fc0d13a6744e4d4a5e2c50c8515f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72a92e447fc0d13a6744e4d4a5e2c50c8515f79"}], "stats": {"total": 206, "additions": 142, "deletions": 64}, "files": [{"sha": "6a2564369d55f678c356fee15dac8cba55ce3491", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -1,3 +1,18 @@\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, osint.adb, osint.ads: Minor reformatting.\n+\n+2014-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Type_Declaration,\n+\tProcess_Discriminants): Remove SPARK-specific legality checks.\n+\n+2014-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sechas.ads, g-sechas.adb (HMAC_Initial_Context): New subprogram.\n+\t* gnat_rm.texi (GNAT.MD5/SHA1/SHA224/SHA256/SHA512): Document support\n+\tfor HMAC.\n+\n 2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch7.adb (Analyze_Package_Body_Helper): When verifying the"}, {"sha": "0e70b5dd48f3a0df25f6c371dd3273db306d3ac0", "filename": "gcc/ada/g-sechas.adb", "status": "modified", "additions": 70, "deletions": 4, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fg-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fg-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.adb?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -218,8 +218,8 @@ package body GNAT.Secure_Hashes is\n       --  the message size in bits (excluding padding).\n \n       procedure Final\n-        (C          : Context;\n-         Hash_Bits  : out Stream_Element_Array)\n+        (C         : Context;\n+         Hash_Bits : out Stream_Element_Array)\n       is\n          FC : Context := C;\n \n@@ -274,8 +274,73 @@ package body GNAT.Secure_Hashes is\n          pragma Assert (FC.M_State.Last = 0);\n \n          Hash_State.To_Hash (FC.H_State, Hash_Bits);\n+\n+         --  HMAC case: hash outer pad\n+\n+         if C.KL /= 0 then\n+            declare\n+               Outer_C : Context;\n+               Opad    : Stream_Element_Array :=\n+                 (1 .. Stream_Element_Offset (Block_Length) => 16#5c#);\n+\n+            begin\n+               for J in C.Key'Range loop\n+                  Opad (J) := Opad (J) xor C.Key (J);\n+               end loop;\n+\n+               Update (Outer_C, Opad);\n+               Update (Outer_C, Hash_Bits);\n+\n+               Final (Outer_C, Hash_Bits);\n+            end;\n+         end if;\n       end Final;\n \n+      --------------------------\n+      -- HMAC_Initial_Context --\n+      --------------------------\n+\n+      function HMAC_Initial_Context (Key : String) return Context is\n+      begin\n+         if Key'Length = 0 then\n+            raise Constraint_Error with \"null key\";\n+         end if;\n+\n+         return C : Context (KL => (if Key'Length <= Key_Length'Last\n+                                    then Key'Length\n+                                    else Stream_Element_Offset (Hash_Length)))\n+         do\n+            --  Set Key (if longer than block length, first hash it)\n+\n+            if C.KL = Key'Length then\n+               declare\n+                  SK : String (1 .. Key'Length);\n+                  for SK'Address use C.Key'Address;\n+                  pragma Import (Ada, SK);\n+               begin\n+                  SK := Key;\n+               end;\n+\n+            else\n+               C.Key := Digest (Key);\n+            end if;\n+\n+            --  Hash inner pad\n+\n+            declare\n+               Ipad : Stream_Element_Array :=\n+                 (1 .. Stream_Element_Offset (Block_Length) => 16#36#);\n+\n+            begin\n+               for J in C.Key'Range loop\n+                  Ipad (J) := Ipad (J) xor C.Key (J);\n+               end loop;\n+\n+               Update (C, Ipad);\n+            end;\n+         end return;\n+      end HMAC_Initial_Context;\n+\n       ------------\n       -- Update --\n       ------------\n@@ -285,11 +350,12 @@ package body GNAT.Secure_Hashes is\n          S           : String;\n          Fill_Buffer : Fill_Buffer_Access)\n       is\n-         Last : Natural := S'First - 1;\n+         Last : Natural;\n \n       begin\n          C.M_State.Length := C.M_State.Length + S'Length;\n \n+         Last := S'First - 1;\n          while Last < S'Last loop\n             Fill_Buffer (C.M_State, S, Last + 1, Last);\n "}, {"sha": "c00150e17ba22d69ff71f7118c7b03bbc1d9b624", "filename": "gcc/ada/g-sechas.ads", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fg-sechas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fg-sechas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.ads?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,6 +144,9 @@ package GNAT.Secure_Hashes is\n       --  Initial value of a Context object. May be used to reinitialize\n       --  a Context value by simple assignment of this value to the object.\n \n+      function HMAC_Initial_Context (Key : String) return Context;\n+      --  Initial Context for HMAC computation with the given Key\n+\n       procedure Update      (C : in out Context; Input : String);\n       procedure Wide_Update (C : in out Context; Input : Wide_String);\n       procedure Update\n@@ -163,7 +166,7 @@ package GNAT.Secure_Hashes is\n       --  the hash in binary representation.\n \n       function Digest (C : Context) return Binary_Message_Digest;\n-      --  Return hash for the data accumulated with C\n+      --  Return hash or HMAC for the data accumulated with C\n \n       function Digest      (S : String)      return Binary_Message_Digest;\n       function Wide_Digest (W : Wide_String) return Binary_Message_Digest;\n@@ -178,7 +181,7 @@ package GNAT.Secure_Hashes is\n       --  hexadecimal representation.\n \n       function Digest (C : Context) return Message_Digest;\n-      --  Return hash for the data accumulated with C in hexadecimal\n+      --  Return hash or HMAC for the data accumulated with C in hexadecimal\n       --  representation.\n \n       function Digest      (S : String)               return Message_Digest;\n@@ -193,15 +196,23 @@ package GNAT.Secure_Hashes is\n       Block_Length : constant Natural := Block_Words * Word_Length;\n       --  Length in bytes of a data block\n \n-      type Context is record\n+      subtype Key_Length is\n+        Stream_Element_Offset range 0 .. Stream_Element_Offset (Block_Length);\n+\n+      --  KL is 0 for a normal hash context, > 0 for HMAC\n+\n+      type Context (KL : Key_Length := 0) is record\n+         Key : Stream_Element_Array (1 .. KL);\n+         --  HMAC key\n+\n          H_State : Hash_State.State (0 .. State_Words - 1) := Initial_State;\n          --  Function-specific state\n \n          M_State : Message_State (Block_Length);\n          --  Function-independent state (block buffer)\n       end record;\n \n-      Initial_Context : constant Context := (others => <>);\n+      Initial_Context : constant Context (KL => 0) := (others => <>);\n       --  Initial values are provided by default initialization of Context\n \n    end H;"}, {"sha": "8dce342e15418b8070ac1799b272cc78fcb76b2e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -19952,7 +19952,9 @@ a modified version of the Blum-Blum-Shub generator.\n @cindex Message Digest MD5\n \n @noindent\n-Implements the MD5 Message-Digest Algorithm as described in RFC 1321.\n+Implements the MD5 Message-Digest Algorithm as described in RFC 1321, and\n+the HMAC-MD5 message authentication function as described in RFC 2104 and\n+FIPS PUB 198.\n \n @node GNAT.Memory_Dump (g-memdum.ads)\n @section @code{GNAT.Memory_Dump} (@file{g-memdum.ads})\n@@ -20088,39 +20090,48 @@ port. This is only supported on GNU/Linux and Windows.\n \n @noindent\n Implements the SHA-1 Secure Hash Algorithm as described in FIPS PUB 180-3\n-and RFC 3174.\n+and RFC 3174, and the HMAC-SHA1 message authentication function as described\n+in RFC 2104 and FIPS PUB 198.\n \n @node GNAT.SHA224 (g-sha224.ads)\n @section @code{GNAT.SHA224} (@file{g-sha224.ads})\n @cindex @code{GNAT.SHA224} (@file{g-sha224.ads})\n @cindex Secure Hash Algorithm SHA-224\n \n @noindent\n-Implements the SHA-224 Secure Hash Algorithm as described in FIPS PUB 180-3.\n+Implements the SHA-224 Secure Hash Algorithm as described in FIPS PUB 180-3,\n+and the HMAC-SHA224 message authentication function as described\n+in RFC 2104 and FIPS PUB 198.\n \n @node GNAT.SHA256 (g-sha256.ads)\n @section @code{GNAT.SHA256} (@file{g-sha256.ads})\n @cindex @code{GNAT.SHA256} (@file{g-sha256.ads})\n @cindex Secure Hash Algorithm SHA-256\n \n @noindent\n-Implements the SHA-256 Secure Hash Algorithm as described in FIPS PUB 180-3.\n+Implements the SHA-256 Secure Hash Algorithm as described in FIPS PUB 180-3,\n+and the HMAC-SHA256 message authentication function as described\n+in RFC 2104 and FIPS PUB 198.\n \n @node GNAT.SHA384 (g-sha384.ads)\n @section @code{GNAT.SHA384} (@file{g-sha384.ads})\n @cindex @code{GNAT.SHA384} (@file{g-sha384.ads})\n @cindex Secure Hash Algorithm SHA-384\n \n @noindent\n-Implements the SHA-384 Secure Hash Algorithm as described in FIPS PUB 180-3.\n+Implements the SHA-384 Secure Hash Algorithm as described in FIPS PUB 180-3,\n+and the HMAC-SHA384 message authentication function as described\n+in RFC 2104 and FIPS PUB 198.\n \n @node GNAT.SHA512 (g-sha512.ads)\n @section @code{GNAT.SHA512} (@file{g-sha512.ads})\n @cindex @code{GNAT.SHA512} (@file{g-sha512.ads})\n @cindex Secure Hash Algorithm SHA-512\n \n @noindent\n-Implements the SHA-512 Secure Hash Algorithm as described in FIPS PUB 180-3.\n+Implements the SHA-512 Secure Hash Algorithm as described in FIPS PUB 180-3,\n+and the HMAC-SHA512 message authentication function as described\n+in RFC 2104 and FIPS PUB 198.\n \n @node GNAT.Signals (g-signal.ads)\n @section @code{GNAT.Signals} (@file{g-signal.ads})"}, {"sha": "9ba18083fea0c9f1333d0be1677090e801cc64ad", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -1174,7 +1174,8 @@ package body Osint is\n       T         : File_Type;\n       Found     : out File_Name_Type;\n       Attr      : access File_Attributes;\n-      Full_Name : Boolean := False) is\n+      Full_Name : Boolean := False)\n+   is\n    begin\n       Get_Name_String (N);\n \n@@ -1200,9 +1201,8 @@ package body Osint is\n             if T = Config and then Full_Name then\n                declare\n                   Full_Path : constant String :=\n-                           Normalize_Pathname (Get_Name_String (N));\n+                                Normalize_Pathname (Get_Name_String (N));\n                   Full_Size : constant Natural := Full_Path'Length;\n-\n                begin\n                   Name_Buffer (1 .. Full_Size) := Full_Path;\n                   Name_Len := Full_Size;"}, {"sha": "eb569c01e1f4b08290f9f5edff58b7163aaa7c2d", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -77,6 +77,7 @@ package Osint is\n    --  set and the file name ends in \".dg\", in which case we look for the\n    --  generated file only in the current directory, since that is where it is\n    --  always built.\n+   --\n    --  In the case of configuration files, full path names are needed for some\n    --  ASIS queries. The flag Full_Name indicates that the name of the file\n    --  should be normalized to include a full path."}, {"sha": "424cc696bfb01140531c5e87507b07cad345a964", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 19, "deletions": 45, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -15062,17 +15062,6 @@ package body Sem_Ch3 is\n \n          else\n             Check_SPARK_05_Restriction (\"discriminant type is not allowed\", N);\n-\n-            --  The following check is only relevant when SPARK_Mode is on as\n-            --  it is not a standard Ada legality rule. A derived type cannot\n-            --  have discriminants if the parent type is discriminated.\n-\n-            if SPARK_Mode = On and then Has_Discriminants (Parent_Type) then\n-               SPARK_Msg_N\n-                 (\"discriminants not allowed if parent type is discriminated\",\n-                  Defining_Identifier\n-                    (First (Discriminant_Specifications (N))));\n-            end if;\n          end if;\n       end if;\n \n@@ -18038,44 +18027,29 @@ package body Sem_Ch3 is\n             end if;\n          end if;\n \n-         --  The following checks are only relevant when SPARK_Mode is on as\n-         --  they are not standard Ada legality rules.\n-\n-         if SPARK_Mode = On then\n-            if Is_Access_Type (Discr_Type) then\n-               SPARK_Msg_N\n-                 (\"discriminant cannot have an access type\",\n-                  Discriminant_Type (Discr));\n-\n-            elsif not Is_Discrete_Type (Discr_Type) then\n-               SPARK_Msg_N\n-                 (\"discriminant must have a discrete type\",\n-                  Discriminant_Type (Discr));\n-            end if;\n+         --  Handling of discriminants that are access types\n \n-         --  Normal Ada rules\n+         if Is_Access_Type (Discr_Type) then\n \n-         else\n-            if Is_Access_Type (Discr_Type) then\n+            --  Ada 2005 (AI-230): Access discriminant allowed in non-\n+            --  limited record types\n \n-               --  Ada 2005 (AI-230): Access discriminant allowed in non-\n-               --  limited record types\n-\n-               if Ada_Version < Ada_2005 then\n-                  Check_Access_Discriminant_Requires_Limited\n-                    (Discr, Discriminant_Type (Discr));\n-               end if;\n-\n-               if Ada_Version = Ada_83 and then Comes_From_Source (Discr) then\n-                  Error_Msg_N\n-                    (\"(Ada 83) access discriminant not allowed\", Discr);\n-               end if;\n+            if Ada_Version < Ada_2005 then\n+               Check_Access_Discriminant_Requires_Limited\n+                 (Discr, Discriminant_Type (Discr));\n+            end if;\n \n-            elsif not Is_Discrete_Type (Discr_Type) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (Discr) then\n                Error_Msg_N\n-                 (\"discriminants must have a discrete or access type\",\n-                  Discriminant_Type (Discr));\n+                 (\"(Ada 83) access discriminant not allowed\", Discr);\n             end if;\n+\n+         --  If not access type, must be a discrete type\n+\n+         elsif not Is_Discrete_Type (Discr_Type) then\n+            Error_Msg_N\n+              (\"discriminants must have a discrete or access type\",\n+               Discriminant_Type (Discr));\n          end if;\n \n          Set_Etype (Defining_Identifier (Discr), Discr_Type);\n@@ -18085,8 +18059,8 @@ package body Sem_Ch3 is\n          --  expression of the discriminant; the default expression must be of\n          --  the type of the discriminant. (RM 3.7.1) Since this expression is\n          --  a default expression, we do the special preanalysis, since this\n-         --  expression does not freeze (see \"Handling of Default and Per-\n-         --  Object Expressions\" in spec of package Sem).\n+         --  expression does not freeze (see section \"Handling of Default and\n+         --  Per-Object Expressions\" in spec of package Sem).\n \n          if Present (Expression (Discr)) then\n             Preanalyze_Spec_Expression (Expression (Discr), Discr_Type);"}, {"sha": "40ce62ff47176d8c9bcf05dc8ad777c34aa3f56c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "patch": "@@ -19359,7 +19359,7 @@ package body Sem_Prag is\n                   elsif not Comes_From_Source (Stmt)\n                     and then\n                       (Nkind (Stmt) /= N_Subprogram_Declaration\n-                         or else No (Generic_Parent (Specification (Stmt))))\n+                        or else No (Generic_Parent (Specification (Stmt))))\n                   then\n                      null;\n "}]}