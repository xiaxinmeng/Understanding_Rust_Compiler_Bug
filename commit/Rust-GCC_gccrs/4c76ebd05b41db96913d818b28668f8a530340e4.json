{"sha": "4c76ebd05b41db96913d818b28668f8a530340e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3NmViZDA1YjQxZGI5NjkxM2Q4MThiMjg2NjhmOGE1MzAzNDBlNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-03T10:42:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-03T10:42:14Z"}, "message": "Fix typo in index comparison of CONSTRUCTOR.\n\n2019-06-03  Martin Liska  <mliska@suse.cz>\n\n\t* fold-const.c (operand_equal_p): Fix typo as compare_tree_int\n\treturns 0 when operands are equal.\n\nFrom-SVN: r271859", "tree": {"sha": "c30814df0c5866d615752f7f816fd282175a137d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c30814df0c5866d615752f7f816fd282175a137d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c76ebd05b41db96913d818b28668f8a530340e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c76ebd05b41db96913d818b28668f8a530340e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c76ebd05b41db96913d818b28668f8a530340e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c76ebd05b41db96913d818b28668f8a530340e4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efb34006e9c3f9592edd77bda2e57ce14c65579b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb34006e9c3f9592edd77bda2e57ce14c65579b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb34006e9c3f9592edd77bda2e57ce14c65579b"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "6529d0e24a0c71c9b55bf19ec28c493725794d01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c76ebd05b41db96913d818b28668f8a530340e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c76ebd05b41db96913d818b28668f8a530340e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c76ebd05b41db96913d818b28668f8a530340e4", "patch": "@@ -1,3 +1,8 @@\n+2019-06-03  Martin Liska  <mliska@suse.cz>\n+\n+\t* fold-const.c (operand_equal_p): Fix typo as compare_tree_int\n+\treturns 0 when operands are equal.\n+\n 2019-06-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90716"}, {"sha": "3e066a2ecc49008264fb279d30653a4c100a69e9", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c76ebd05b41db96913d818b28668f8a530340e4/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c76ebd05b41db96913d818b28668f8a530340e4/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4c76ebd05b41db96913d818b28668f8a530340e4", "patch": "@@ -3508,10 +3508,10 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \t\t     positives for GENERIC.  */\n \t\t  || (c0->index\n \t\t      && (TREE_CODE (c0->index) != INTEGER_CST \n-\t\t\t  || !compare_tree_int (c0->index, i)))\n+\t\t\t  || compare_tree_int (c0->index, i)))\n \t\t  || (c1->index\n \t\t      && (TREE_CODE (c1->index) != INTEGER_CST \n-\t\t\t  || !compare_tree_int (c1->index, i))))\n+\t\t\t  || compare_tree_int (c1->index, i))))\n \t\treturn 0;\n \t    }\n \t  return 1;"}]}