{"sha": "5f026f90f02bf603474d4c81f80b2cb7043d8d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwMjZmOTBmMDJiZjYwMzQ3NGQ0YzgxZjgwYjJjYjcwNDNkOGQ5MA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-11T03:49:52Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-11T03:49:52Z"}, "message": "re PR fortran/34411 (hang-up during read of non-expected input)\n\n2007-12-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/34411\n\t* io/read.c (convert_real, read_l, read_decimal, read_radix, read_f):\n\tCall next_record after bad read or overflow error.\n\nFrom-SVN: r130767", "tree": {"sha": "c68aa3b52f8823046ab599afd408349d1ce385c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c68aa3b52f8823046ab599afd408349d1ce385c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f026f90f02bf603474d4c81f80b2cb7043d8d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f026f90f02bf603474d4c81f80b2cb7043d8d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f026f90f02bf603474d4c81f80b2cb7043d8d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f026f90f02bf603474d4c81f80b2cb7043d8d90/comments", "author": null, "committer": null, "parents": [{"sha": "36b46907d25e5ad1017a4cd4828916717d4f25b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b46907d25e5ad1017a4cd4828916717d4f25b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b46907d25e5ad1017a4cd4828916717d4f25b4"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "e23d362a89c246fa78b82221a4a35c7212a3104d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f026f90f02bf603474d4c81f80b2cb7043d8d90/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f026f90f02bf603474d4c81f80b2cb7043d8d90/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5f026f90f02bf603474d4c81f80b2cb7043d8d90", "patch": "@@ -1,3 +1,9 @@\n+2007-12-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/34411\n+\t* io/read.c (convert_real, read_l, read_decimal, read_radix, read_f):\n+\tCall next_record after bad read or overflow error.\n+\n 2007-12-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34404"}, {"sha": "b5f16ac72609dca97598b0a4711a15bb74d6feca", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f026f90f02bf603474d4c81f80b2cb7043d8d90/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f026f90f02bf603474d4c81f80b2cb7043d8d90/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=5f026f90f02bf603474d4c81f80b2cb7043d8d90", "patch": "@@ -177,6 +177,7 @@ convert_real (st_parameter_dt *dtp, void *dest, const char *buffer, int length)\n     {\n       generate_error (&dtp->common, LIBERROR_READ_VALUE,\n \t\t      \"Error during floating point read\");\n+      next_record (dtp, 1);\n       return 1;\n     }\n \n@@ -225,6 +226,7 @@ read_l (st_parameter_dt *dtp, const fnode *f, char *dest, int length)\n     bad:\n       generate_error (&dtp->common, LIBERROR_READ_VALUE,\n \t\t      \"Bad value on logical read\");\n+      next_record (dtp, 1);\n       break;\n     }\n }\n@@ -395,11 +397,13 @@ read_decimal (st_parameter_dt *dtp, const fnode *f, char *dest, int length)\n  bad:\n   generate_error (&dtp->common, LIBERROR_READ_VALUE,\n \t\t  \"Bad value during integer read\");\n+  next_record (dtp, 1);\n   return;\n \n  overflow:\n   generate_error (&dtp->common, LIBERROR_READ_OVERFLOW,\n \t\t  \"Value overflowed during integer read\");\n+  next_record (dtp, 1);\n   return;\n }\n \n@@ -539,11 +543,13 @@ read_radix (st_parameter_dt *dtp, const fnode *f, char *dest, int length,\n  bad:\n   generate_error (&dtp->common, LIBERROR_READ_VALUE,\n \t\t  \"Bad value during integer read\");\n+  next_record (dtp, 1);\n   return;\n \n  overflow:\n   generate_error (&dtp->common, LIBERROR_READ_OVERFLOW,\n \t\t  \"Value overflowed during integer read\");\n+  next_record (dtp, 1);\n   return;\n }\n \n@@ -659,6 +665,7 @@ read_f (st_parameter_dt *dtp, const fnode *f, char *dest, int length)\n  bad_float:\n   generate_error (&dtp->common, LIBERROR_READ_VALUE,\n \t\t  \"Bad value during floating point read\");\n+  next_record (dtp, 1);\n   return;\n \n   /* The value read is zero */"}]}