{"sha": "2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "node_id": "C_kwDOANBUbNoAKDJiMWE2MDRhOWIyOGZiZjRmMzgyMDYwYmViZDA0YWRiODNhY2MyZjk", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-12-19T18:37:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-12-21T03:34:55Z"}, "message": "libgo: check for makecontext in -lucontext\n\nPatch from S\u00f6ren Tempel.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/458396", "tree": {"sha": "bee35ab7e97274b0d4528c5a41bdd39e6da485d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bee35ab7e97274b0d4528c5a41bdd39e6da485d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb73bfdb67789f10378ed855b0da7f85376e4b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb73bfdb67789f10378ed855b0da7f85376e4b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb73bfdb67789f10378ed855b0da7f85376e4b6f"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "d123c746fb25917458bcc2c024f005c6d2e5fe91", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "patch": "@@ -1,4 +1,4 @@\n-9906861dc86c1733bb304d3d45b1534adb32712c\n+ecc2a2e70e44fa76a75b12d0893bc1702b72a1b4\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a607dbff68eb2451d46f1f05c4dd0ccfb41c4943", "filename": "libgo/configure", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "patch": "@@ -14818,6 +14818,63 @@ fi\n \n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing makecontext\" >&5\n+$as_echo_n \"checking for library containing makecontext... \" >&6; }\n+if ${ac_cv_search_makecontext+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char makecontext ();\n+int\n+main ()\n+{\n+return makecontext ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+for ac_lib in '' ucontext; do\n+  if test -z \"$ac_lib\"; then\n+    ac_res=\"none required\"\n+  else\n+    ac_res=-l$ac_lib\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+  fi\n+  if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_search_makecontext=$ac_res\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext\n+  if ${ac_cv_search_makecontext+:} false; then :\n+  break\n+fi\n+done\n+if ${ac_cv_search_makecontext+:} false; then :\n+\n+else\n+  ac_cv_search_makecontext=no\n+fi\n+rm conftest.$ac_ext\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_makecontext\" >&5\n+$as_echo \"$ac_cv_search_makecontext\" >&6; }\n+ac_res=$ac_cv_search_makecontext\n+if test \"$ac_res\" != no; then :\n+  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n+\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing sched_yield\" >&5\n $as_echo_n \"checking for library containing sched_yield... \" >&6; }\n if ${ac_cv_search_sched_yield+:} false; then :"}, {"sha": "a59aa091d1dce507ac9a08d9103dcd393b72614d", "filename": "libgo/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1a604a9b28fbf4f382060bebd04adb83acc2f9/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=2b1a604a9b28fbf4f382060bebd04adb83acc2f9", "patch": "@@ -570,6 +570,9 @@ PTHREAD_LIBS=\n AC_CHECK_LIB([pthread], [pthread_create], PTHREAD_LIBS=-lpthread)\n AC_SUBST(PTHREAD_LIBS)\n \n+dnl Test if -lucontext is required for makecontext.\n+AC_SEARCH_LIBS([makecontext], [ucontext])\n+\n dnl Test if -lrt is required for sched_yield or nanosleep or clock_gettime.\n AC_SEARCH_LIBS([sched_yield], [rt])\n AC_SEARCH_LIBS([nanosleep], [rt])"}]}