{"sha": "d233ee5f50926d58da601e4f8633d98632ced3d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzM2VlNWY1MDkyNmQ1OGRhNjAxZTRmODYzM2Q5ODYzMmNlZDNkMg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-11-05T07:11:24Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-11-05T07:11:24Z"}, "message": "re PR fortran/67564 (Segfault on sourced allocattion statement with class(*) arrays)\n\n2016-11-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/67564\n\t* trans-expr.c (gfc_conv_class_to_class): Return _len component\n\tof unlimited polymorphic entities.\n\n2016-11-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/67564\n\t* gfortran.dg/select_type_39.f03: New test.\n\nFrom-SVN: r241869", "tree": {"sha": "fcf8b51f76ca765ffff8c3d6689854e1dc684506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf8b51f76ca765ffff8c3d6689854e1dc684506"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d233ee5f50926d58da601e4f8633d98632ced3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d233ee5f50926d58da601e4f8633d98632ced3d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d233ee5f50926d58da601e4f8633d98632ced3d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d233ee5f50926d58da601e4f8633d98632ced3d2/comments", "author": null, "committer": null, "parents": [{"sha": "655a8355666bc3a238e6461409995f30817aff67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655a8355666bc3a238e6461409995f30817aff67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655a8355666bc3a238e6461409995f30817aff67"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "bf85619bcc983cedd3d99641c1f8e0b0e6d39f52", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d233ee5f50926d58da601e4f8633d98632ced3d2", "patch": "@@ -1,4 +1,10 @@\n-2016-04-19  Paul Thomas  <pault@gcc.gnu.org>\n+2016-11-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/67564\n+\t* trans-expr.c (gfc_conv_class_to_class): Return _len component\n+\tof unlimited polymorphic entities.\n+\n+2016-11-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/64933\n \t* primary.c (gfc_match_varspec): If selector expression is"}, {"sha": "309f5023ab4804a37f62102c7c48eb1eb6740e15", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=d233ee5f50926d58da601e4f8633d98632ced3d2", "patch": "@@ -1091,6 +1091,12 @@ gfc_conv_class_to_class (gfc_se *parmse, gfc_expr *e, gfc_typespec class_ts,\n \ttmp = integer_zero_node;\n       gfc_add_modify (&parmse->pre, ctree,\n \t\t      fold_convert (TREE_TYPE (ctree), tmp));\n+\n+      /* Return the len component, except in the case of scalarized array\n+\treferences, where the dynamic type cannot change.  */\n+      if (!elemental && full_array && copyback)\n+\t  gfc_add_modify (&parmse->post, tmp,\n+\t\t\t  fold_convert (TREE_TYPE (tmp), ctree));\n     }\n \n   if (optional)"}, {"sha": "4369222f1d4398d6b23818ed1de6394a2c42a233", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d233ee5f50926d58da601e4f8633d98632ced3d2", "patch": "@@ -1,4 +1,9 @@\n-2016-04-19  Paul Thomas  <pault@gcc.gnu.org>\n+2016-11-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/67564\n+\t* gfortran.dg/select_type_39.f03: New test.\n+\n+2016-11-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/64933\n \t* gfortran.dg/associate_23.f90: New test."}, {"sha": "08d619536ab10959bcfeed01202b3eb664229b9f", "filename": "gcc/testsuite/gfortran.dg/select_type_39.f03", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_39.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d233ee5f50926d58da601e4f8633d98632ced3d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_39.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_39.f03?ref=d233ee5f50926d58da601e4f8633d98632ced3d2", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+!\n+! Tests the fix for PR67564 comment #9.\n+!\n+! Contributed by Neil Carlson  <neil.n.carlson@gmail.com>\n+!\n+class(*), allocatable :: val(:)\n+call get_value (val)\n+select type (val)\n+type is (character(*))\n+  if (size (val) .ne. 2) call abort\n+  if (len(val) .ne. 3) call abort\n+  if (any (val .ne. ['foo','bar'])) call abort\n+end select\n+contains\n+  subroutine get_value (value)\n+    class(*), allocatable, intent(out) :: value(:)\n+    allocate(value, source=['foo','bar'])\n+  end subroutine\n+end"}]}