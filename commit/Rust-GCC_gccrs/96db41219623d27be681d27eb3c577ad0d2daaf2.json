{"sha": "96db41219623d27be681d27eb3c577ad0d2daaf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkYjQxMjE5NjIzZDI3YmU2ODFkMjdlYjNjNTc3YWQwZDJkYWFmMg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-01-09T19:52:06Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-01-09T19:52:06Z"}, "message": "re PR tree-optimization/51759 (miscompile writes past end of bitfield)\n\n2012-01-09  Martin Jambor  <mjambor@suse.cz>\n\n        PR tree-optimization/51759\n\t* g++.dg/ipa/pr51759.C: New test.\n\nFrom-SVN: r183029", "tree": {"sha": "9e2af5d43695fb783d72152a2c4cae2e111aeecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e2af5d43695fb783d72152a2c4cae2e111aeecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96db41219623d27be681d27eb3c577ad0d2daaf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96db41219623d27be681d27eb3c577ad0d2daaf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96db41219623d27be681d27eb3c577ad0d2daaf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96db41219623d27be681d27eb3c577ad0d2daaf2/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef2be24905e5133c356ffc606560954df3874bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2be24905e5133c356ffc606560954df3874bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2be24905e5133c356ffc606560954df3874bd1"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "8b2f465665cd8c7ebc48e9c16c93c4c482fffd5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96db41219623d27be681d27eb3c577ad0d2daaf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96db41219623d27be681d27eb3c577ad0d2daaf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96db41219623d27be681d27eb3c577ad0d2daaf2", "patch": "@@ -1,3 +1,8 @@\n+2012-01-09  Martin Jambor  <mjambor@suse.cz>\n+\n+        PR tree-optimization/51759\n+\t* g++.dg/ipa/pr51759.C: New test.\n+\n 2012-01-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51758"}, {"sha": "accfaf2dcc2df0d92e3d694f699d0be9b5b35730", "filename": "gcc/testsuite/g++.dg/ipa/pr51759.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96db41219623d27be681d27eb3c577ad0d2daaf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr51759.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96db41219623d27be681d27eb3c577ad0d2daaf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr51759.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr51759.C?ref=96db41219623d27be681d27eb3c577ad0d2daaf2", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\"  } */\n+\n+extern \"C\" void abort (void);\n+struct S\n+{\n+  void __attribute__((noinline)) set(unsigned val)\n+    {\n+      data = val;\n+      if (data != val)\n+        abort ();\n+    }\n+  int pad0;\n+  unsigned pad1 : 8;\n+  unsigned data : 24;\n+  int pad2;\n+};\n+int main()\n+{\n+  S s;\n+  s.pad2 = -1;\n+  s.set(0);\n+  if (s.pad2 != -1)\n+    abort ();\n+}\n+"}]}