{"sha": "0f2d27e5fe82467329e0bbe8295bb4857b5da53c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYyZDI3ZTVmZTgyNDY3MzI5ZTBiYmU4Mjk1YmI0ODU3YjVkYTUzYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-05-18T20:36:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:50Z"}, "message": "[Ada] Fix inaccurate -gnatR output for derived untagged types\n\ngcc/ada/\n\n\t* repinfo.adb (Compute_Max_Length): Skip hidden discriminants.\n\t(List_Record_Layout): Likewise.\n\t(List_Structural_Record_Layout): Use First_Discriminant instead\n\tof First_Stored_Discriminant and Next_Discriminant instead of\n\tNext_Stored_Discriminant to walk the list of discriminants.", "tree": {"sha": "8caf70e6411b70b15ba0bc184c32317fe42f0632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8caf70e6411b70b15ba0bc184c32317fe42f0632"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f2d27e5fe82467329e0bbe8295bb4857b5da53c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2d27e5fe82467329e0bbe8295bb4857b5da53c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2d27e5fe82467329e0bbe8295bb4857b5da53c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2d27e5fe82467329e0bbe8295bb4857b5da53c/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "1b6eb8a8abfddb0a52297804463ebe46f80711f9", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2d27e5fe82467329e0bbe8295bb4857b5da53c/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2d27e5fe82467329e0bbe8295bb4857b5da53c/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=0f2d27e5fe82467329e0bbe8295bb4857b5da53c", "patch": "@@ -1006,10 +1006,12 @@ package body Repinfo is\n          Comp := First_Component_Or_Discriminant (Ent);\n          while Present (Comp) loop\n \n-            --  Skip discriminant in unchecked union (since it is not there!)\n+            --  Skip a completely hidden discriminant or a discriminant in an\n+            --  unchecked union (since it is not there).\n \n             if Ekind (Comp) = E_Discriminant\n-              and then Is_Unchecked_Union (Ent)\n+              and then (Is_Completely_Hidden (Comp)\n+                         or else Is_Unchecked_Union (Ent))\n             then\n                goto Continue;\n             end if;\n@@ -1278,10 +1280,12 @@ package body Repinfo is\n          Comp := First_Component_Or_Discriminant (Ent);\n          while Present (Comp) loop\n \n-            --  Skip discriminant in unchecked union (since it is not there!)\n+            --  Skip a completely hidden discriminant or a discriminant in an\n+            --  unchecked union (since it is not there).\n \n             if Ekind (Comp) = E_Discriminant\n-              and then Is_Unchecked_Union (Ent)\n+              and then (Is_Completely_Hidden (Comp)\n+                         or else Is_Unchecked_Union (Ent))\n             then\n                goto Continue;\n             end if;\n@@ -1370,7 +1374,7 @@ package body Repinfo is\n             Derived_Disc : Entity_Id;\n \n          begin\n-            Derived_Disc := First_Stored_Discriminant (Outer_Ent);\n+            Derived_Disc := First_Discriminant (Outer_Ent);\n \n             --  Loop over the discriminants of the extension\n \n@@ -1394,7 +1398,7 @@ package body Repinfo is\n                   end if;\n                end if;\n \n-               Next_Stored_Discriminant (Derived_Disc);\n+               Next_Discriminant (Derived_Disc);\n             end loop;\n \n             --  Disc is not constrained by a discriminant of Outer_Ent\n@@ -1463,12 +1467,13 @@ package body Repinfo is\n                end if;\n \n                --  If the record has discriminants and is not an unchecked\n-               --  union, then display them now.\n+               --  union, then display them now. Note that, even if this is\n+               --  a structural layout, we list the visible discriminants.\n \n                if Has_Discriminants (Ent)\n                  and then not Is_Unchecked_Union (Ent)\n                then\n-                  Disc := First_Stored_Discriminant (Ent);\n+                  Disc := First_Discriminant (Ent);\n                   while Present (Disc) loop\n \n                      --  If this is a record extension and the discriminant is\n@@ -1506,7 +1511,7 @@ package body Repinfo is\n                      List_Component_Layout (Listed_Disc, Indent => Indent);\n \n                   <<Continue_Disc>>\n-                     Next_Stored_Discriminant (Disc);\n+                     Next_Discriminant (Disc);\n                   end loop;\n                end if;\n "}]}