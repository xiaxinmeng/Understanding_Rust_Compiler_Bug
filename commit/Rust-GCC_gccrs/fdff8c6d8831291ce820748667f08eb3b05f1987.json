{"sha": "fdff8c6d8831291ce820748667f08eb3b05f1987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRmZjhjNmQ4ODMxMjkxY2U4MjA3NDg2NjdmMDhlYjNiMDVmMTk4Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-23T12:30:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-23T12:30:04Z"}, "message": "(expand_call): Functions may be const or volatile from their type.\n\nFrom-SVN: r6611", "tree": {"sha": "3077b8d8bd0b75b794bad3757cdae8b37fae92c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3077b8d8bd0b75b794bad3757cdae8b37fae92c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdff8c6d8831291ce820748667f08eb3b05f1987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdff8c6d8831291ce820748667f08eb3b05f1987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdff8c6d8831291ce820748667f08eb3b05f1987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdff8c6d8831291ce820748667f08eb3b05f1987/comments", "author": null, "committer": null, "parents": [{"sha": "a0b25e45b7a2e2b816055f853ecebb1c28a3b8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b25e45b7a2e2b816055f853ecebb1c28a3b8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0b25e45b7a2e2b816055f853ecebb1c28a3b8e0"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "07588e14e9229e4d0305abe1af85de5e1c00c29f", "filename": "gcc/calls.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdff8c6d8831291ce820748667f08eb3b05f1987/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdff8c6d8831291ce820748667f08eb3b05f1987/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=fdff8c6d8831291ce820748667f08eb3b05f1987", "patch": "@@ -555,9 +555,7 @@ expand_call (exp, target, ignore)\n   int old_stack_arg_under_construction;\n   int old_inhibit_defer_pop = inhibit_defer_pop;\n   tree old_cleanups = cleanups_this_call;\n-\n   rtx use_insns = 0;\n-\n   register tree p;\n   register int i, j;\n \n@@ -569,12 +567,7 @@ expand_call (exp, target, ignore)\n     {\n       fndecl = TREE_OPERAND (p, 0);\n       if (TREE_CODE (fndecl) != FUNCTION_DECL)\n-\t{\n-\t  /* May still be a `const' function if it is\n-\t     a call through a pointer-to-const.\n-\t     But we don't handle that.  */\n-\t  fndecl = 0;\n-\t}\n+\tfndecl = 0;\n       else\n \t{\n \t  if (!flag_no_inline\n@@ -603,6 +596,14 @@ expand_call (exp, target, ignore)\n \t}\n     }\n \n+  /* If we don't have specific function to call, see if we have a \n+     constant or `noreturn' function from the type.  */\n+  if (fndecl == 0)\n+    {\n+      is_const = TREE_READONLY (TREE_TYPE (TREE_TYPE (p)));\n+      is_volatile = TREE_THIS_VOLATILE (TREE_TYPE (TREE_TYPE (p)));\n+    }\n+\n #ifdef REG_PARM_STACK_SPACE\n #ifdef MAYBE_REG_PARM_STACK_SPACE\n   reg_parm_stack_space = MAYBE_REG_PARM_STACK_SPACE;"}]}