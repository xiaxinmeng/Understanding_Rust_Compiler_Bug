{"sha": "1aee1fb38d2776cb3fb336138e77da61aef8aab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlZTFmYjM4ZDI3NzZjYjNmYjMzNjEzOGU3N2RhNjFhZWY4YWFiMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:00:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:00:38Z"}, "message": "[multiple changes]\n\n2013-02-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch6.adb (Check_For_Primitive_Subprogram): Test for\n\tthe special case of a user-defined equality that overrides\n\tthe predefined equality of a nonderived type declared in a\n\tdeclarative part.\n\t* sem_util.adb (Collect_Primitive_Operations): Add test for\n\tIs_Primitive when looping over the subprograms following a type,\n\tto catch the case of primitives such as a user-defined equality,\n\twhich otherwise won't be found when the type is not a derived\n\ttype and is declared in a declarative part.\n\n2013-02-06  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Check_Target): Always return True when Target\n\tis empty (Get_Or_Create_Configuration_File.Get_Project_Target):\n\tNew procedure to get the value of attribute Target in the main\n\tproject.\n\t(Get_Or_Create_Configuration_File.Do_Autoconf): No\n\tneed to get the value of attribute Target in the main project.\n\t(Get_Or_Create_Configuration_File): Call Get_Project_Target and\n\tuse the target fom this call.\n\n2013-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* erroutc.adb (Validate_Specific_Warning): Do not issue the\n\twarning about an ineffective Pragma Warnings for -Wxxx warnings.\n\t* sem_prag.adb (Analyze_Pragma) <Warnings>: Accept -Wxxx warnings.\n\t* gnat_rm.texi (Pragma Warnings): Document coordination with\n\twarnings of the GCC back-end.\n\nFrom-SVN: r195786", "tree": {"sha": "bba29117d6ac951a5fef1335f9a8704e416b7bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bba29117d6ac951a5fef1335f9a8704e416b7bc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aee1fb38d2776cb3fb336138e77da61aef8aab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aee1fb38d2776cb3fb336138e77da61aef8aab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aee1fb38d2776cb3fb336138e77da61aef8aab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aee1fb38d2776cb3fb336138e77da61aef8aab1/comments", "author": null, "committer": null, "parents": [{"sha": "2ae395d6c2478de339b17ffffdb83144e6518ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae395d6c2478de339b17ffffdb83144e6518ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae395d6c2478de339b17ffffdb83144e6518ea9"}], "stats": {"total": 256, "additions": 188, "deletions": 68}, "files": [{"sha": "708e807d93ce794d138a6ae398f8b21ad1924b64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -1,3 +1,34 @@\n+2013-02-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch6.adb (Check_For_Primitive_Subprogram): Test for\n+\tthe special case of a user-defined equality that overrides\n+\tthe predefined equality of a nonderived type declared in a\n+\tdeclarative part.\n+\t* sem_util.adb (Collect_Primitive_Operations): Add test for\n+\tIs_Primitive when looping over the subprograms following a type,\n+\tto catch the case of primitives such as a user-defined equality,\n+\twhich otherwise won't be found when the type is not a derived\n+\ttype and is declared in a declarative part.\n+\n+2013-02-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Check_Target): Always return True when Target\n+\tis empty (Get_Or_Create_Configuration_File.Get_Project_Target):\n+\tNew procedure to get the value of attribute Target in the main\n+\tproject.\n+\t(Get_Or_Create_Configuration_File.Do_Autoconf): No\n+\tneed to get the value of attribute Target in the main project.\n+\t(Get_Or_Create_Configuration_File): Call Get_Project_Target and\n+\tuse the target fom this call.\n+\n+2013-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* erroutc.adb (Validate_Specific_Warning): Do not issue the\n+\twarning about an ineffective Pragma Warnings for -Wxxx warnings.\n+\t* sem_prag.adb (Analyze_Pragma) <Warnings>: Accept -Wxxx warnings.\n+\t* gnat_rm.texi (Pragma Warnings): Document coordination with\n+\twarnings of the GCC back-end.\n+\n 2013-02-06  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Do not build the body"}, {"sha": "bb4995da9ee118b302be1f2bb4b5796e0ae39d60", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1282,7 +1282,14 @@ package body Erroutc is\n                   Eproc.all\n                     (\"?pragma Warnings Off with no matching Warnings On\",\n                      SWE.Start);\n-               elsif not SWE.Used then\n+\n+               --  Do not issue this warning for -Wxxx messages since the\n+               --  back-end doesn't report the information.\n+\n+               elsif not SWE.Used\n+                 and then not (SWE.Msg'Length > 2\n+                                 and then SWE.Msg (1 .. 2) = \"-W\")\n+               then\n                   Eproc.all\n                     (\"?no warning suppressed by this pragma\", SWE.Start);\n                end if;"}, {"sha": "6cd4b7bff37ef9d7f7238ae1269f7c2508247a6a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -6153,6 +6153,14 @@ the list of warnings switches supported. For\n full details see @ref{Warning Message Control,,, gnat_ugn, @value{EDITION}\n User's Guide}.\n \n+@noindent\n+The warnings controlled by the `-gnatw' switch are generated by the front end\n+of the compiler. The `GCC' back end can provide additional warnings and they\n+are controlled by the `-W' switch.\n+The form with a single static_string_EXPRESSION argument also works for the\n+latters, but the string must be a single full `-W' switch in this case.\n+The above reference lists a few examples of these additional warnings.\n+\n @noindent\n The specified warnings will be in effect until the end of the program\n or another pragma Warnings is encountered. The effect of the pragma is\n@@ -6173,6 +6181,12 @@ message @code{warning: 960 bits of \"a\" unused}. No other regular\n expression notations are permitted. All characters other than asterisk in\n these three specific cases are treated as literal characters in the match.\n \n+@noindent\n+The fourth form also works for the additional warnings of the `GCC' back end,\n+but the string must again be a single full `-W' switch in this case. Note that\n+the message issued for these warnings explicitly lists the full `-W' switch\n+they are associated with.\n+\n There are two ways to use the pragma in this form. The OFF form can be used as a\n configuration pragma. The effect is to suppress all warnings (if any)\n that match the pattern string throughout the compilation."}, {"sha": "89e1831959bd000104bb3d84eaf4a8e131676a62", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 68, "deletions": 53, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006-2012, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2013, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -565,12 +565,11 @@ package body Prj.Conf is\n          Tgt_Name := Variable.Value;\n       end if;\n \n-      if Target = \"\" then\n-         OK := Autoconf_Specified or else Tgt_Name = No_Name;\n-      else\n-         OK := Tgt_Name /= No_Name\n-                 and then Target = Get_Name_String (Tgt_Name);\n-      end if;\n+      OK :=\n+        Target = \"\"\n+        or else\n+          (Tgt_Name /= No_Name\n+           and then Target = Get_Name_String (Tgt_Name));\n \n       if not OK then\n          if Autoconf_Specified then\n@@ -625,6 +624,8 @@ package body Prj.Conf is\n       --  The configuration project file name. May be modified if there are\n       --  switches --config= in the Builder package of the main project.\n \n+      Selected_Target : String_Access := new String'(Target_Name);\n+\n       function Default_File_Name return String;\n       --  Return the name of the default config file that should be tested\n \n@@ -635,6 +636,10 @@ package body Prj.Conf is\n       procedure Check_Builder_Switches;\n       --  Check for switches --config and --RTS in package Builder\n \n+      procedure Get_Project_Target;\n+      --  Target_Name is empty, get the specifiedtarget in the project file,\n+      --  if any.\n+\n       function Get_Config_Switches return Argument_List_Access;\n       --  Return the --config switches to use for gprconfig\n \n@@ -766,6 +771,47 @@ package body Prj.Conf is\n          end if;\n       end Check_Builder_Switches;\n \n+      ------------------------\n+      -- Get_Project_Target --\n+      ------------------------\n+\n+      procedure Get_Project_Target is\n+      begin\n+         if Selected_Target'Length = 0 then\n+            --  Check if attribute Target is specified in the main\n+            --  project, or in a project it extends. If it is, use this\n+            --  target to invoke gprconfig.\n+\n+            declare\n+               Variable : Variable_Value;\n+               Proj     : Project_Id;\n+               Tgt_Name : Name_Id := No_Name;\n+\n+            begin\n+               Proj := Project;\n+               Project_Loop :\n+               while Proj /= No_Project loop\n+                  Variable :=\n+                    Value_Of (Name_Target, Proj.Decl.Attributes, Shared);\n+\n+                  if Variable /= Nil_Variable_Value\n+                    and then not Variable.Default\n+                    and then Variable.Value /= No_Name\n+                  then\n+                     Tgt_Name := Variable.Value;\n+                     exit Project_Loop;\n+                  end if;\n+\n+                  Proj := Proj.Extends;\n+               end loop Project_Loop;\n+\n+               if Tgt_Name /= No_Name then\n+                  Selected_Target := new String'(Get_Name_String (Tgt_Name));\n+               end if;\n+            end;\n+         end if;\n+      end Get_Project_Target;\n+\n       -----------------------\n       -- Default_File_Name --\n       -----------------------\n@@ -775,13 +821,14 @@ package body Prj.Conf is\n          Tmp     : String_Access;\n \n       begin\n-         if Target_Name /= \"\" then\n+         if Selected_Target'Length /= 0 then\n             if Ada_RTS /= \"\" then\n                return\n-                 Target_Name & '-' & Ada_RTS & Config_Project_File_Extension;\n+                 Selected_Target.all & '-' &\n+                 Ada_RTS & Config_Project_File_Extension;\n             else\n                return\n-                 Target_Name & Config_Project_File_Extension;\n+                 Selected_Target.all & Config_Project_File_Extension;\n             end if;\n \n          elsif Ada_RTS /= \"\" then\n@@ -972,51 +1019,17 @@ package body Prj.Conf is\n             if Normalized_Hostname = \"\" then\n                Arg_Last := 3;\n             else\n-               if Target_Name = \"\" then\n-\n-                  --  Check if attribute Target is specified in the main\n-                  --  project, or in a project it extends. If it is, use this\n-                  --  target to invoke gprconfig.\n-\n-                  declare\n-                     Variable : Variable_Value;\n-                     Proj     : Project_Id;\n-                     Tgt_Name : Name_Id := No_Name;\n-\n-                  begin\n-                     Proj := Project;\n-                     Project_Loop :\n-                     while Proj /= No_Project loop\n-                        Variable :=\n-                          Value_Of (Name_Target, Proj.Decl.Attributes, Shared);\n-\n-                        if Variable /= Nil_Variable_Value\n-                          and then not Variable.Default\n-                          and then Variable.Value /= No_Name\n-                        then\n-                           Tgt_Name := Variable.Value;\n-                           exit Project_Loop;\n-                        end if;\n+               if Selected_Target'Length = 0 then\n+                  if At_Least_One_Compiler_Command then\n+                     Args (4) := new String'(\"--target=all\");\n \n-                        Proj := Proj.Extends;\n-                     end loop Project_Loop;\n-\n-                     if Tgt_Name /= No_Name then\n-                        Args (4) :=\n-                          new String'(\"--target=\" &\n-                                      Get_Name_String (Tgt_Name));\n-\n-                     elsif At_Least_One_Compiler_Command then\n-                        Args (4) := new String'(\"--target=all\");\n-\n-                     else\n-                        Args (4) :=\n-                          new String'(\"--target=\" & Normalized_Hostname);\n-                     end if;\n-                  end;\n+                  else\n+                     Args (4) :=\n+                       new String'(\"--target=\" & Normalized_Hostname);\n+                  end if;\n \n                else\n-                  Args (4) := new String'(\"--target=\" & Target_Name);\n+                  Args (4) := new String'(\"--target=\" & Selected_Target.all);\n                end if;\n \n                Arg_Last := 4;\n@@ -1348,6 +1361,7 @@ package body Prj.Conf is\n       Free (Config_File_Path);\n       Config := No_Project;\n \n+      Get_Project_Target;\n       Check_Builder_Switches;\n \n       if Conf_File_Name'Length > 0 then\n@@ -1448,7 +1462,8 @@ package body Prj.Conf is\n \n       if not Automatically_Generated\n         and then not\n-          Check_Target (Config, Autoconf_Specified, Project_Tree, Target_Name)\n+          Check_Target\n+            (Config, Autoconf_Specified, Project_Tree, Selected_Target.all)\n       then\n          Automatically_Generated := True;\n          goto Process_Config_File;"}, {"sha": "e75b00da27958a3c8402f240816dae68c37313f3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -9754,6 +9754,30 @@ package body Sem_Ch6 is\n \n                Next_Formal (Formal);\n             end loop;\n+\n+         --  Special case: An equality function can be redefined for a type\n+         --  occurring in a declarative part, and won't otherwise be treated as\n+         --  a primitive because it doesn't occur in a package spec and doesn't\n+         --  override an inherited subprogram. It's important that we mark it\n+         --  primitive so it can be returned by Collect_Primitive_Operations\n+         --  and be used in composing the equality operation of later types\n+         --  that have a component of the type.\n+\n+         elsif Chars (S) = Name_Op_Eq\n+           and then Etype (S) = Standard_Boolean\n+         then\n+            B_Typ := Base_Type (Etype (First_Formal (S)));\n+\n+            if Scope (B_Typ) = Current_Scope\n+              and then\n+                Base_Type (Etype (Next_Formal (First_Formal (S)))) = B_Typ\n+              and then not Is_Limited_Type (B_Typ)\n+            then\n+               Is_Primitive := True;\n+               Set_Is_Primitive (S);\n+               Set_Has_Primitive_Operations (B_Typ);\n+               Check_Private_Overriding (B_Typ);\n+            end if;\n          end if;\n       end Check_For_Primitive_Subprogram;\n "}, {"sha": "935a26d3bf9830bc6c986799e6842684ea4b5604", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -16017,9 +16017,23 @@ package body Sem_Prag is\n                            if OK then\n                               Chr := Get_Character (C);\n \n+                              --  Dash case: only -Wxxx is accepted\n+\n+                              if J = 1\n+                                and then J < Len\n+                                and then Chr = '-'\n+                              then\n+                                 J := J + 1;\n+                                 C := Get_String_Char (Str, J);\n+                                 Chr := Get_Character (C);\n+                                 if Chr = 'W' then\n+                                    exit;\n+                                 end if;\n+                                 OK := False;\n+\n                               --  Dot case\n \n-                              if J < Len and then Chr = '.' then\n+                              elsif J < Len and then Chr = '.' then\n                                  J := J + 1;\n                                  C := Get_String_Char (Str, J);\n                                  Chr := Get_Character (C);"}, {"sha": "aa585605843a082d803e3ed414e7084dbe412085", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee1fb38d2776cb3fb336138e77da61aef8aab1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1aee1fb38d2776cb3fb336138e77da61aef8aab1", "patch": "@@ -2577,6 +2577,7 @@ package body Sem_Util is\n       Op_List        : Elist_Id;\n       Formal         : Entity_Id;\n       Is_Prim        : Boolean;\n+      Is_Type_In_Pkg : Boolean;\n       Formal_Derived : Boolean := False;\n       Id             : Entity_Id;\n \n@@ -2636,12 +2637,9 @@ package body Sem_Util is\n             null;\n          end if;\n \n-      elsif (Is_Package_Or_Generic_Package (B_Scope)\n-              and then\n-                Nkind (Parent (Declaration_Node (First_Subtype (T)))) /=\n-                                                            N_Package_Body)\n-        or else Is_Derived_Type (B_Type)\n-      then\n+      --  Locate the primitive subprograms of the type\n+\n+      else\n          --  The primitive operations appear after the base type, except\n          --  if the derivation happens within the private part of B_Scope\n          --  and the type is a private type, in which case both the type\n@@ -2657,13 +2655,30 @@ package body Sem_Util is\n             Id := Next_Entity (B_Type);\n          end if;\n \n+         --  Set flag if this is a type in a package spec\n+\n+         Is_Type_In_Pkg :=\n+           Is_Package_Or_Generic_Package (B_Scope)\n+             and then\n+               Nkind (Parent (Declaration_Node (First_Subtype (T)))) /=\n+                                                           N_Package_Body;\n+\n          while Present (Id) loop\n \n-            --  Note that generic formal subprograms are not\n-            --  considered to be primitive operations and thus\n-            --  are never inherited.\n+            --  Test whether the result type or any of the parameter types of\n+            --  each subprogram following the type match that type when the\n+            --  type is declared in a package spec, is a derived type, or the\n+            --  subprogram is marked as primitive. (The Is_Primitive test is\n+            --  needed to find primitives of nonderived types in declarative\n+            --  parts that happen to override the predefined \"=\" operator.)\n+\n+            --  Note that generic formal subprograms are not considered to be\n+            --  primitive operations and thus are never inherited.\n \n             if Is_Overloadable (Id)\n+              and then (Is_Type_In_Pkg\n+                         or else Is_Derived_Type (B_Type)\n+                         or else Is_Primitive (Id))\n               and then Nkind (Parent (Parent (Id)))\n                          not in N_Formal_Subprogram_Declaration\n             then\n@@ -2684,9 +2699,9 @@ package body Sem_Util is\n                   end loop;\n                end if;\n \n-               --  For a formal derived type, the only primitives are the\n-               --  ones inherited from the parent type. Operations appearing\n-               --  in the package declaration are not primitive for it.\n+               --  For a formal derived type, the only primitives are the ones\n+               --  inherited from the parent type. Operations appearing in the\n+               --  package declaration are not primitive for it.\n \n                if Is_Prim\n                  and then (not Formal_Derived"}]}