{"sha": "87a34442667d0ecd397e141e26a64419fb71850c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdhMzQ0NDI2NjdkMGVjZDM5N2UxNDFlMjZhNjQ0MTlmYjcxODUwYw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-05-17T12:37:58Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-05-17T12:37:58Z"}, "message": "re PR tree-optimization/61140 (wrong code at -O1 and above on x86_64-linux-gnu)\n\n2014-05-17  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/61140\n\tPR tree-optimization/61150\n\tPR tree-optimization/61197\ngcc/\n\t* tree-ssa-phiopt.c (value_replacement): Punt on multiple phis.\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/pr61140.c: New file.\n\t* gcc.dg/tree-ssa/pr61150.c: New file.\n\t* gcc.dg/tree-ssa/pr61197.c: New file.\n\nFrom-SVN: r210554", "tree": {"sha": "9c6585b0e1d0714051cd59a6525632df8fb094bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c6585b0e1d0714051cd59a6525632df8fb094bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87a34442667d0ecd397e141e26a64419fb71850c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87a34442667d0ecd397e141e26a64419fb71850c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87a34442667d0ecd397e141e26a64419fb71850c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87a34442667d0ecd397e141e26a64419fb71850c/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ca74b5cf0e747981fed0a8e8e71cba37c03bd8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca74b5cf0e747981fed0a8e8e71cba37c03bd8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca74b5cf0e747981fed0a8e8e71cba37c03bd8b"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "daf6e1a1137157d26522ae67be44b0f2266ef294", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -1,3 +1,10 @@\n+2014-05-17  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/61140\n+\tPR tree-optimization/61150\n+\tPR tree-optimization/61197\n+\t* tree-ssa-phiopt.c (value_replacement): Punt on multiple phis.\n+\n 2014-05-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* doc/invoke.texi (free): Mention Alpha.  Also enabled at -Os."}, {"sha": "3c7ff36e95fa42454a87093a39897730d7e5a13f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -1,3 +1,12 @@\n+2014-05-17  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/61140\n+\tPR tree-optimization/61150\n+\tPR tree-optimization/61197\n+\t* gcc.dg/tree-ssa/pr61140.c: New file.\n+\t* gcc.dg/tree-ssa/pr61150.c: New file.\n+\t* gcc.dg/tree-ssa/pr61197.c: New file.\n+\n 2014-05-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/pr60969.C: Compile for all ilp32 x86 targets."}, {"sha": "2f175cb7e2dc337924e888044d8716e011a23d3f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61140.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61140.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61140.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61140.c?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int a[1] = { 1 }, b = 1, c; \n+\n+int\n+main ()\n+{\n+  for (; c < 1; c++)\n+    if (a[0])\n+    {\n+      a[0] &= 1;\n+      b = 0;\n+    }\n+  if (b)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c11798cace4e94735a8393295302821e61e0a23d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61150.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61150.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61150.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61150.c?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+int a, b, c, d = 1;\n+\n+int\n+main ()\n+{\n+  int e = d;\n+  for (b = 0; b < 5; b++)\n+  {\n+    for (a = 0; a < 1; a++)\n+    {\n+      if (e)\n+\tbreak;\n+      for (c = 0; c < 1; c++)\n+\t;\n+    }\n+    e |= 1;\n+  }\n+  if (c)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "919578b7ff7f953be8bd6de96c09c8ffeadab555", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61197.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61197.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61197.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61197.c?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+int a, b = 1, *c = &a; \n+\n+int\n+foo ()\n+{\n+  if (b)\n+    b |= 1;\n+  else\n+    {\n+      b = 1;\n+      return 0;\n+    }\n+  return 1;\n+}\n+\n+int\n+main ()\n+{\n+  *c = foo ();\n+  if (a != 1) \n+    __builtin_abort (); \n+  return 0;\n+}"}, {"sha": "e3b6f1dd6a37c777255accac193f01a6deb1a759", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87a34442667d0ecd397e141e26a64419fb71850c/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=87a34442667d0ecd397e141e26a64419fb71850c", "patch": "@@ -849,6 +849,10 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t  && !POINTER_TYPE_P (TREE_TYPE (arg0))))\n     return 0;\n \n+  /* Only transform if it removes the condition.  */\n+  if (!single_non_singleton_phi_for_edges (phi_nodes (gimple_bb (phi)), e0, e1))\n+    return 0;\n+\n   /* Size-wise, this is always profitable.  */\n   if (optimize_bb_for_speed_p (cond_bb)\n       /* The special case is useless if it has a low probability.  */"}]}