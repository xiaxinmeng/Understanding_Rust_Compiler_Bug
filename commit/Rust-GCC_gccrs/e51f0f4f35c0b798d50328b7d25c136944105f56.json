{"sha": "e51f0f4f35c0b798d50328b7d25c136944105f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxZjBmNGYzNWMwYjc5OGQ1MDMyOGI3ZDI1YzEzNjk0NDEwNWY1Ng==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-24T00:32:54Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-24T00:32:54Z"}, "message": "add default for HAVE_load_multiple\n\ngcc/ChangeLog:\n\n2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (gen_load_multiple): New function.\n\t(HAVE_load_multiple): Add default value.\n\t* expr.c (move_block_to_reg): Adjust.\n\nFrom-SVN: r223623", "tree": {"sha": "facaf5f3e7d884da07c5ea43600c5fce017e32c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/facaf5f3e7d884da07c5ea43600c5fce017e32c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e51f0f4f35c0b798d50328b7d25c136944105f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51f0f4f35c0b798d50328b7d25c136944105f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51f0f4f35c0b798d50328b7d25c136944105f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51f0f4f35c0b798d50328b7d25c136944105f56/comments", "author": null, "committer": null, "parents": [{"sha": "15469812ac10f2c390e1da454a5dbf3635c9d690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15469812ac10f2c390e1da454a5dbf3635c9d690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15469812ac10f2c390e1da454a5dbf3635c9d690"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "5d609d456c3529d728e46b972c5b401b98c1700e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e51f0f4f35c0b798d50328b7d25c136944105f56", "patch": "@@ -1,3 +1,9 @@\n+2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (gen_load_multiple): New function.\n+\t(HAVE_load_multiple): Add default value.\n+\t* expr.c (move_block_to_reg): Adjust.\n+\n 2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h (gen_mem_signal_fence): New function."}, {"sha": "ea5ff804897acc8822baf536603e965d4699437a", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=e51f0f4f35c0b798d50328b7d25c136944105f56", "patch": "@@ -1474,6 +1474,16 @@ gen_mem_signal_fence (rtx)\n }\n #endif\n \n+#ifndef HAVE_load_multiple\n+#define HAVE_load_multiple 0\n+static inline rtx\n+gen_load_multiple (rtx, rtx, rtx)\n+{\n+  gcc_unreachable ();\n+  return NULL;\n+}\n+#endif\n+\n #endif /* GCC_INSN_FLAGS_H  */\n \n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "c4b39f4be90cb841907e1a79f4afb7f840275080", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51f0f4f35c0b798d50328b7d25c136944105f56/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e51f0f4f35c0b798d50328b7d25c136944105f56", "patch": "@@ -1507,10 +1507,8 @@ void\n move_block_to_reg (int regno, rtx x, int nregs, machine_mode mode)\n {\n   int i;\n-#ifdef HAVE_load_multiple\n   rtx pat;\n   rtx_insn *last;\n-#endif\n \n   if (nregs == 0)\n     return;\n@@ -1519,7 +1517,6 @@ move_block_to_reg (int regno, rtx x, int nregs, machine_mode mode)\n     x = validize_mem (force_const_mem (mode, x));\n \n   /* See if the machine can do this with a load multiple insn.  */\n-#ifdef HAVE_load_multiple\n   if (HAVE_load_multiple)\n     {\n       last = get_last_insn ();\n@@ -1533,7 +1530,6 @@ move_block_to_reg (int regno, rtx x, int nregs, machine_mode mode)\n       else\n \tdelete_insns_since (last);\n     }\n-#endif\n \n   for (i = 0; i < nregs; i++)\n     emit_move_insn (gen_rtx_REG (word_mode, regno + i),"}]}