{"sha": "ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxZmRiMjJiOGRmMDYyMjUyOGEyYzdhZDdkOTBlMWFkMTZjYWU2Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-06-09T22:05:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-09T22:05:49Z"}, "message": "fold-const.c (fold): Even with otherwise constant trees...\n\n        * fold-const.c (fold): Even with otherwise constant trees, look for\n        opportunities to combine integer constants.\n\nFrom-SVN: r20392", "tree": {"sha": "9f0f1d2cdf1394505c0c9e20d41471dcd5c8f5d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f0f1d2cdf1394505c0c9e20d41471dcd5c8f5d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67/comments", "author": null, "committer": null, "parents": [{"sha": "1c5d60f5019eec17bdad384ebc39721f0037bb25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c5d60f5019eec17bdad384ebc39721f0037bb25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c5d60f5019eec17bdad384ebc39721f0037bb25"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "072b82a7c59f8571ed2180ea3026f5d06616fe27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "patch": "@@ -1,3 +1,8 @@\n+Tue Jun  9 22:05:34 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* fold-const.c (fold): Even with otherwise constant trees, look for\n+\topportunities to combine integer constants.\n+\n Wed Jun  3 23:41:24 EDT 1998  John Wehle  (john@feith.com)\n \n \t* i386.md (movsfcc, movdfcc, movxfcc): The floating point"}, {"sha": "18e83852d1b8c81777abfb4c38051066852dc897", "filename": "gcc/fold-const.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ac1fdb22b8df0622528a2c7ad7d90e1ad16cae67", "patch": "@@ -4433,9 +4433,12 @@ fold (expr)\n \t\t    return convert (TREE_TYPE (t), con);\n \t\t    \n \t\t  /* If ARG0 is a constant, don't change things around;\n-\t\t     instead keep all the constant computations together.  */\n+\t\t     instead keep all the constant computations together.\n+\t\t     Notice, however, if we can merge integer constants.  */\n \n-\t\t  if (TREE_CONSTANT (arg0))\n+\t\t  if (TREE_CONSTANT (arg0)\n+\t\t      && !(TREE_CODE (con) == INTEGER_CST\n+\t\t\t   && TREE_CODE (arg1) == INTEGER_CST))\n \t\t    return t;\n \n \t\t  /* Otherwise return (CON +- ARG1) - VAR.  */\n@@ -4450,9 +4453,12 @@ fold (expr)\n \t\t    return convert (TREE_TYPE (t), con);\n \t\t    \n \t\t  /* If ARG0 is a constant, don't change things around;\n-\t\t     instead keep all the constant computations together.  */\n+\t\t     instead keep all the constant computations together.\n+\t\t     Notice, however, if we can merge integer constants.  */\n \n-\t\t  if (TREE_CONSTANT (arg0))\n+\t\t  if (TREE_CONSTANT (arg0)\n+\t\t      && !(TREE_CODE (con) == INTEGER_CST\n+\t\t\t   && TREE_CODE (arg1) == INTEGER_CST))\n \t\t    return t;\n \n \t\t  /* Otherwise return VAR +- (ARG1 +- CON).  */\n@@ -4481,7 +4487,13 @@ fold (expr)\n \n \t  if (split_tree (arg1, code, &var, &con, &varsign))\n \t    {\n-\t      if (TREE_CONSTANT (arg1))\n+\t      /* If ARG1 is a constant, don't change things around;\n+\t\t instead keep all the constant computations together.\n+\t\t Notice, however, if we can merge integer constants.  */\n+\n+\t      if (TREE_CONSTANT (arg1)\n+\t\t  && !(TREE_CODE (con) == INTEGER_CST\n+\t\t       && TREE_CODE (arg0) == INTEGER_CST))\n \t\treturn t;\n \n \t      if (varsign == -1)"}]}