{"sha": "345a8c1712df339941e1b61425f0aa02e55ed364", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ1YThjMTcxMmRmMzM5OTQxZTFiNjE0MjVmMGFhMDJlNTVlZDM2NA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-02-02T14:13:57Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-02-02T14:13:57Z"}, "message": "libgomp: Normalize the names of a few functions of the libgomp plugin API\n\n\tlibgomp/\n\t* libgomp-plugin.h (GOMP_OFFLOAD_openacc_parallel): Rename to\n\tGOMP_OFFLOAD_openacc_exec.  Adjust all users.\n\t(GOMP_OFFLOAD_openacc_get_current_cuda_device): Rename to\n\tGOMP_OFFLOAD_openacc_cuda_get_current_device.  Adjust all users.\n\t(GOMP_OFFLOAD_openacc_get_current_cuda_context): Rename to\n\tGOMP_OFFLOAD_openacc_cuda_get_current_context.  Adjust all users.\n\t(GOMP_OFFLOAD_openacc_get_cuda_stream): Rename to\n\tGOMP_OFFLOAD_openacc_cuda_get_stream.  Adjust all users.\n\t(GOMP_OFFLOAD_openacc_set_cuda_stream): Rename to\n\tGOMP_OFFLOAD_openacc_cuda_set_stream.  Adjust all users.\n\nFrom-SVN: r245125", "tree": {"sha": "faf0068f952501848e4ff07c39f38134178020b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf0068f952501848e4ff07c39f38134178020b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/345a8c1712df339941e1b61425f0aa02e55ed364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345a8c1712df339941e1b61425f0aa02e55ed364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345a8c1712df339941e1b61425f0aa02e55ed364", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345a8c1712df339941e1b61425f0aa02e55ed364/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da75ca93f8f17847f75ff50d00796e98ccf8509d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da75ca93f8f17847f75ff50d00796e98ccf8509d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da75ca93f8f17847f75ff50d00796e98ccf8509d"}], "stats": {"total": 59, "additions": 36, "deletions": 23}, "files": [{"sha": "5f05cdb9b4665380c247c970ef6dace8cbc71332", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=345a8c1712df339941e1b61425f0aa02e55ed364", "patch": "@@ -1,3 +1,16 @@\n+2017-02-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* libgomp-plugin.h (GOMP_OFFLOAD_openacc_parallel): Rename to\n+\tGOMP_OFFLOAD_openacc_exec.  Adjust all users.\n+\t(GOMP_OFFLOAD_openacc_get_current_cuda_device): Rename to\n+\tGOMP_OFFLOAD_openacc_cuda_get_current_device.  Adjust all users.\n+\t(GOMP_OFFLOAD_openacc_get_current_cuda_context): Rename to\n+\tGOMP_OFFLOAD_openacc_cuda_get_current_context.  Adjust all users.\n+\t(GOMP_OFFLOAD_openacc_get_cuda_stream): Rename to\n+\tGOMP_OFFLOAD_openacc_cuda_get_stream.  Adjust all users.\n+\t(GOMP_OFFLOAD_openacc_set_cuda_stream): Rename to\n+\tGOMP_OFFLOAD_openacc_cuda_set_stream.  Adjust all users.\n+\n 2017-01-31  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* libgomp-plugin.h: #include <stdbool.h>."}, {"sha": "ff81350ccc784bd6aae8f9dc1b0c32aa78d10601", "filename": "libgomp/libgomp-plugin.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Flibgomp-plugin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Flibgomp-plugin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp-plugin.h?ref=345a8c1712df339941e1b61425f0aa02e55ed364", "patch": "@@ -93,8 +93,8 @@ extern bool GOMP_OFFLOAD_dev2dev (int, void *, const void *, size_t);\n extern bool GOMP_OFFLOAD_can_run (void *);\n extern void GOMP_OFFLOAD_run (int, void *, void *, void **);\n extern void GOMP_OFFLOAD_async_run (int, void *, void *, void **, void *);\n-extern void GOMP_OFFLOAD_openacc_parallel (void (*) (void *), size_t, void **,\n-\t\t\t\t\t   void **, int, unsigned *, void *);\n+extern void GOMP_OFFLOAD_openacc_exec (void (*) (void *), size_t, void **,\n+\t\t\t\t       void **, int, unsigned *, void *);\n extern void GOMP_OFFLOAD_openacc_register_async_cleanup (void *, int);\n extern int GOMP_OFFLOAD_openacc_async_test (int);\n extern int GOMP_OFFLOAD_openacc_async_test_all (void);\n@@ -105,10 +105,10 @@ extern void GOMP_OFFLOAD_openacc_async_wait_all_async (int);\n extern void GOMP_OFFLOAD_openacc_async_set_async (int);\n extern void *GOMP_OFFLOAD_openacc_create_thread_data (int);\n extern void GOMP_OFFLOAD_openacc_destroy_thread_data (void *);\n-extern void *GOMP_OFFLOAD_openacc_get_current_cuda_device (void);\n-extern void *GOMP_OFFLOAD_openacc_get_current_cuda_context (void);\n-extern void *GOMP_OFFLOAD_openacc_get_cuda_stream (int);\n-extern int GOMP_OFFLOAD_openacc_set_cuda_stream (int, void *);\n+extern void *GOMP_OFFLOAD_openacc_cuda_get_current_device (void);\n+extern void *GOMP_OFFLOAD_openacc_cuda_get_current_context (void);\n+extern void *GOMP_OFFLOAD_openacc_cuda_get_stream (int);\n+extern int GOMP_OFFLOAD_openacc_cuda_set_stream (int, void *);\n \n #ifdef __cplusplus\n }"}, {"sha": "1769a489fe8e137c1540f8b192079befdfa7b2b1", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=345a8c1712df339941e1b61425f0aa02e55ed364", "patch": "@@ -882,7 +882,7 @@ typedef struct acc_dispatch_t\n   struct target_mem_desc *data_environ;\n \n   /* Execute.  */\n-  __typeof (GOMP_OFFLOAD_openacc_parallel) *exec_func;\n+  __typeof (GOMP_OFFLOAD_openacc_exec) *exec_func;\n \n   /* Async cleanup callback registration.  */\n   __typeof (GOMP_OFFLOAD_openacc_register_async_cleanup)\n@@ -905,12 +905,12 @@ typedef struct acc_dispatch_t\n \n   /* NVIDIA target specific routines.  */\n   struct {\n-    __typeof (GOMP_OFFLOAD_openacc_get_current_cuda_device)\n+    __typeof (GOMP_OFFLOAD_openacc_cuda_get_current_device)\n       *get_current_device_func;\n-    __typeof (GOMP_OFFLOAD_openacc_get_current_cuda_context)\n+    __typeof (GOMP_OFFLOAD_openacc_cuda_get_current_context)\n       *get_current_context_func;\n-    __typeof (GOMP_OFFLOAD_openacc_get_cuda_stream) *get_stream_func;\n-    __typeof (GOMP_OFFLOAD_openacc_set_cuda_stream) *set_stream_func;\n+    __typeof (GOMP_OFFLOAD_openacc_cuda_get_stream) *get_stream_func;\n+    __typeof (GOMP_OFFLOAD_openacc_cuda_set_stream) *set_stream_func;\n   } cuda;\n } acc_dispatch_t;\n "}, {"sha": "0284c7ff6049054a5924f51a5067a654cc0a58ba", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=345a8c1712df339941e1b61425f0aa02e55ed364", "patch": "@@ -1922,9 +1922,9 @@ GOMP_OFFLOAD_dev2dev (int ord, void *dst, const void *src, size_t n)\n void (*device_run) (int n, void *fn_ptr, void *vars) = NULL;\n \n void\n-GOMP_OFFLOAD_openacc_parallel (void (*fn) (void *), size_t mapnum,\n-\t\t\t       void **hostaddrs, void **devaddrs,\n-\t\t\t       int async, unsigned *dims, void *targ_mem_desc)\n+GOMP_OFFLOAD_openacc_exec (void (*fn) (void *), size_t mapnum,\n+\t\t\t   void **hostaddrs, void **devaddrs,\n+\t\t\t   int async, unsigned *dims, void *targ_mem_desc)\n {\n   nvptx_exec (fn, mapnum, hostaddrs, devaddrs, async, dims, targ_mem_desc);\n }\n@@ -2014,29 +2014,29 @@ GOMP_OFFLOAD_openacc_destroy_thread_data (void *data)\n }\n \n void *\n-GOMP_OFFLOAD_openacc_get_current_cuda_device (void)\n+GOMP_OFFLOAD_openacc_cuda_get_current_device (void)\n {\n   return nvptx_get_current_cuda_device ();\n }\n \n void *\n-GOMP_OFFLOAD_openacc_get_current_cuda_context (void)\n+GOMP_OFFLOAD_openacc_cuda_get_current_context (void)\n {\n   return nvptx_get_current_cuda_context ();\n }\n \n /* NOTE: This returns a CUstream, not a ptx_stream pointer.  */\n \n void *\n-GOMP_OFFLOAD_openacc_get_cuda_stream (int async)\n+GOMP_OFFLOAD_openacc_cuda_get_stream (int async)\n {\n   return nvptx_get_cuda_stream (async);\n }\n \n /* NOTE: This takes a CUstream, not a ptx_stream pointer.  */\n \n int\n-GOMP_OFFLOAD_openacc_set_cuda_stream (int async, void *stream)\n+GOMP_OFFLOAD_openacc_cuda_set_stream (int async, void *stream)\n {\n   return nvptx_set_cuda_stream (async, stream);\n }"}, {"sha": "3dd119f52e5d77ec8110f1b7b9b689caeb96c489", "filename": "libgomp/target.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345a8c1712df339941e1b61425f0aa02e55ed364/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=345a8c1712df339941e1b61425f0aa02e55ed364", "patch": "@@ -2399,7 +2399,7 @@ gomp_load_plugin_for_device (struct gomp_device_descr *device,\n     }\n   if (device->capabilities & GOMP_OFFLOAD_CAP_OPENACC_200)\n     {\n-      if (!DLSYM_OPT (openacc.exec, openacc_parallel)\n+      if (!DLSYM_OPT (openacc.exec, openacc_exec)\n \t  || !DLSYM_OPT (openacc.register_async_cleanup,\n \t\t\t openacc_register_async_cleanup)\n \t  || !DLSYM_OPT (openacc.async_test, openacc_async_test)\n@@ -2423,11 +2423,11 @@ gomp_load_plugin_for_device (struct gomp_device_descr *device,\n \n       unsigned cuda = 0;\n       cuda += DLSYM_OPT (openacc.cuda.get_current_device,\n-\t\t\t openacc_get_current_cuda_device);\n+\t\t\t openacc_cuda_get_current_device);\n       cuda += DLSYM_OPT (openacc.cuda.get_current_context,\n-\t\t\t openacc_get_current_cuda_context);\n-      cuda += DLSYM_OPT (openacc.cuda.get_stream, openacc_get_cuda_stream);\n-      cuda += DLSYM_OPT (openacc.cuda.set_stream, openacc_set_cuda_stream);\n+\t\t\t openacc_cuda_get_current_context);\n+      cuda += DLSYM_OPT (openacc.cuda.get_stream, openacc_cuda_get_stream);\n+      cuda += DLSYM_OPT (openacc.cuda.set_stream, openacc_cuda_set_stream);\n       if (cuda && cuda != 4)\n \t{\n \t  /* Make sure all the CUDA functions are there if any of them are.  */"}]}