{"sha": "eb862a88ba7046dbeea77ce41f6cc90f1b436412", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4NjJhODhiYTcwNDZkYmVlYTc3Y2U0MWY2Y2M5MGYxYjQzNjQxMg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-01-22T21:50:56Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-01-22T21:50:56Z"}, "message": "s390.md (\"doloop_si64\"): Reload input value directly into the register being decremented.\n\n\t* config/s390/s390.md (\"doloop_si64\"): Reload input value directly\n\tinto the register being decremented.\n\t(\"doloop_si31\", \"doloop_di\"): Likewise.\n\t(\"*doloop_si_long\"): Adapt pattern.\n\nFrom-SVN: r94078", "tree": {"sha": "2c2adb1804762fb6d8b154312f9b4ec27962e49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c2adb1804762fb6d8b154312f9b4ec27962e49a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb862a88ba7046dbeea77ce41f6cc90f1b436412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb862a88ba7046dbeea77ce41f6cc90f1b436412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb862a88ba7046dbeea77ce41f6cc90f1b436412", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb862a88ba7046dbeea77ce41f6cc90f1b436412/comments", "author": null, "committer": null, "parents": [{"sha": "3776ada0a9401308543312b21cc310502beed24e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3776ada0a9401308543312b21cc310502beed24e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3776ada0a9401308543312b21cc310502beed24e"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "5d3e5530bbbc7b368f949ce5474bf8df2be65e34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb862a88ba7046dbeea77ce41f6cc90f1b436412/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb862a88ba7046dbeea77ce41f6cc90f1b436412/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb862a88ba7046dbeea77ce41f6cc90f1b436412", "patch": "@@ -1,3 +1,10 @@\n+2005-01-21  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"doloop_si64\"): Reload input value directly\n+\tinto the register being decremented.\n+\t(\"doloop_si31\", \"doloop_di\"): Likewise.\n+\t(\"*doloop_si_long\"): Adapt pattern.\n+\n 2005-01-21  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.h (HARD_REGNO_NREGS): Fix computation for"}, {"sha": "4b8b58ad45c0cb0b129e92cb614dcb0e649a916f", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb862a88ba7046dbeea77ce41f6cc90f1b436412/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb862a88ba7046dbeea77ce41f6cc90f1b436412/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=eb862a88ba7046dbeea77ce41f6cc90f1b436412", "patch": "@@ -7266,7 +7266,7 @@\n           (pc)))\n    (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&d\"))\n+   (clobber (match_scratch:SI 3 \"=X,&1\"))\n    (clobber (reg:CC 33))]\n   \"TARGET_CPU_ZARCH\"\n {\n@@ -7280,8 +7280,7 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(set (match_dup 3) (match_dup 1))\n-   (parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN 33)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n@@ -7305,7 +7304,7 @@\n           (pc)))\n    (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&d\"))\n+   (clobber (match_scratch:SI 3 \"=X,&1\"))\n    (clobber (reg:CC 33))]\n   \"!TARGET_CPU_ZARCH\"\n {\n@@ -7319,8 +7318,7 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(set (match_dup 3) (match_dup 1))\n-   (parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN 33)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n@@ -7347,7 +7345,7 @@\n           (pc)))\n    (set (match_operand:SI 2 \"register_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&d\"))\n+   (clobber (match_scratch:SI 3 \"=X,&1\"))\n    (clobber (reg:CC 33))]\n   \"!TARGET_CPU_ZARCH\"\n {\n@@ -7369,9 +7367,9 @@\n               (const_int 1))\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))\n-   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,?*m*r\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:DI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:DI 3 \"=X,&d\"))\n+   (clobber (match_scratch:DI 3 \"=X,&1\"))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n {\n@@ -7385,8 +7383,7 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(set (match_dup 3) (match_dup 1))\n-   (parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN 33)\n                    (compare:CCAN (plus:DI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:DI (match_dup 3) (const_int -1)))])"}]}