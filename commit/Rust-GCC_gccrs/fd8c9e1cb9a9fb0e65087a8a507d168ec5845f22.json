{"sha": "fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ4YzllMWNiOWE5ZmIwZTY1MDg3YThhNTA3ZDE2OGVjNTg0NWYyMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-23T23:21:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-23T23:21:45Z"}, "message": "(define_attr \"type\"): New type \"ibranch\".\n\n(define_attr \"length\"): Set length for \"ibranch\" type.\n(define_attr \"in_delay_slot\"): Add new type \"ibranch\"; for \"branch\", only has\ndelay slot if length is 4.\n(define_attr \"cc_type\"): Add new type \"ibranch\".\n(indirect branches): Now type \"ibranch\".\n\nFrom-SVN: r2213", "tree": {"sha": "019439d8c2217b097f52a37bba7fa7ef64363c91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/019439d8c2217b097f52a37bba7fa7ef64363c91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22/comments", "author": null, "committer": null, "parents": [{"sha": "305aa9e2b1256fb8c170e9ff4832ed728f30a029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305aa9e2b1256fb8c170e9ff4832ed728f30a029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305aa9e2b1256fb8c170e9ff4832ed728f30a029"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "93d61c4615b91e753b60f8a8ec85845d3b2cb896", "filename": "gcc/config/romp/romp.md", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22/gcc%2Fconfig%2Fromp%2Fromp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22/gcc%2Fconfig%2Fromp%2Fromp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.md?ref=fd8c9e1cb9a9fb0e65087a8a507d168ec5845f22", "patch": "@@ -26,7 +26,7 @@\n ;; Insn type.  Used to default other attribute values.\n \n (define_attr \"type\"\n-  \"branch,return,fp,load,loadz,store,call,address,arith,compare,multi,misc\"\n+  \"branch,ibranch,return,fp,load,loadz,store,call,address,arith,compare,multi,misc\"\n   (const_string \"arith\"))\n \n ;; Length in bytes.\n@@ -39,7 +39,7 @@\n \t\t\t\t(const_int 254)))\n \t\t       (const_int 2)\n \t\t       (const_int 4))\n-\t (eq_attr \"type\" \"return\")\t(const_int 2)\n+\t (eq_attr \"type\" \"return,ibranch\") (const_int 2)\n \t (eq_attr \"type\" \"fp\")\t\t(const_int 10)\n \t (eq_attr \"type\" \"call\")\t(const_int 4)\n \t (eq_attr \"type\" \"load\")\n@@ -60,12 +60,19 @@\n \n (define_attr \"in_delay_slot\" \"yes,no\" \n   (cond [(eq_attr \"length\" \"8,10,38\")\t\t\t(const_string \"no\")\n-\t (eq_attr \"type\" \"branch,return,call,multi\")\t(const_string \"no\")]\n+\t (eq_attr \"type\" \"branch,ibranch,return,call,multi\")\n+\t (const_string \"no\")]\n \t(const_string \"yes\")))\n \n-;; Whether insn needs a delay slot.\n+;; Whether insn needs a delay slot.  We have to say that two-byte\n+;; branches do not need a delay slot.  Otherwise, branch shortening will\n+;; try to do something with delay slot insns (we want it to on the PA).\n+;; This is a kludge, which should be cleaned up at some point.\n+\n (define_attr \"needs_delay_slot\" \"yes,no\"\n-  (if_then_else (eq_attr \"type\" \"branch,return,call\")\n+  (if_then_else (ior (and (eq_attr \"type\" \"branch\")\n+\t\t\t  (eq_attr \"length\" \"4\"))\n+\t\t     (eq_attr \"type\" \"ibranch,return,call\"))\n \t\t(const_string \"yes\") (const_string \"no\")))\n \n ;; What insn does to the condition code.\n@@ -75,7 +82,7 @@\n   (cond [(eq_attr \"type\" \"load,loadz\")\t\t(const_string \"change0\")\n \t (eq_attr \"type\" \"store\")\t\t(const_string \"none\")\n \t (eq_attr \"type\" \"fp,call\")\t\t(const_string \"clobber\")\n-\t (eq_attr \"type\" \"branch,return\")\t(const_string \"none\")\n+\t (eq_attr \"type\" \"branch,ibranch,return\") (const_string \"none\")\n \t (eq_attr \"type\" \"address\")\t\t(const_string \"change0\")\n \t (eq_attr \"type\" \"compare\")\t\t(const_string \"compare\")\n \t (eq_attr \"type\" \"arith\")\t\t(const_string \"sets\")]\n@@ -2711,8 +2718,7 @@\n   [(set (pc) (match_operand:SI 0 \"register_operand\" \"r\"))]\n   \"\"\n   \"br%# %0\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"2\")])\n+  [(set_attr \"type\" \"ibranch\")])\n \n ;; Table jump for switch statements:\n (define_insn \"tablejump\"\n@@ -2721,8 +2727,7 @@\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n   \"br%# %0\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"2\")])\n+  [(set_attr \"type\" \"ibranch\")])\n \f\n ;;- Local variables:\n ;;- mode:emacs-lisp"}]}