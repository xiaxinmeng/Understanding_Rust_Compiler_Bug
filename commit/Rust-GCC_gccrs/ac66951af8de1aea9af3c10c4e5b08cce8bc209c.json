{"sha": "ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2Njk1MWFmOGRlMWFlYTlhZjNjMTBjNGU1YjA4Y2NlOGJjMjA5Yw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-07-17T12:59:45Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-07-17T12:59:45Z"}, "message": "[ARC] [LRA] Avoid emitting COND_EXEC during expand.\n\nEmmitting COND_EXEC rtxes during expand does introduces errors due to LRA handling of them. Issue discovered while running dejagnu test suit with mlra option on.\n\ngcc/\n2017-07-17  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (clzsi2): Expand to an arc_clzsi2 instruction\n\tthat also clobbers the CC register. The old expand code is moved\n\tto ...\n\t(*arc_clzsi2): ... here.\n\t(ctzsi2): Expand to an arc_ctzsi2 instruction that also clobbers\n\tthe CC register. The old expand code is moved to ...\n\t(arc_ctzsi2): ... here.\n\nFrom-SVN: r250275", "tree": {"sha": "fd0255d31b78cecb7586825651c6fa5a9b34a79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd0255d31b78cecb7586825651c6fa5a9b34a79e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac66951af8de1aea9af3c10c4e5b08cce8bc209c/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f26322a6f74f7d22bdee3a11b6b3ffbd1c2867a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f26322a6f74f7d22bdee3a11b6b3ffbd1c2867a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f26322a6f74f7d22bdee3a11b6b3ffbd1c2867a9"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "0bbebc8b9f57ca75b94b4d6f1c557731af5ea945", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac66951af8de1aea9af3c10c4e5b08cce8bc209c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac66951af8de1aea9af3c10c4e5b08cce8bc209c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "patch": "@@ -1,3 +1,13 @@\n+2017-07-17  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (clzsi2): Expand to an arc_clzsi2 instruction\n+\tthat also clobbers the CC register. The old expand code is moved\n+\tto ...\n+\t(*arc_clzsi2): ... here.\n+\t(ctzsi2): Expand to an arc_ctzsi2 instruction that also clobbers\n+\tthe CC register. The old expand code is moved to ...\n+\t(arc_ctzsi2): ... here.\n+\n 2017-07-17  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.opt (mindexed-loads): Use initial value"}, {"sha": "630c84ab1c245d8be8a540e92ec059e892f1a544", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac66951af8de1aea9af3c10c4e5b08cce8bc209c/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac66951af8de1aea9af3c10c4e5b08cce8bc209c/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=ac66951af8de1aea9af3c10c4e5b08cce8bc209c", "patch": "@@ -4533,9 +4533,21 @@\n    (set_attr \"type\" \"two_cycle_core,two_cycle_core\")])\n \n (define_expand \"clzsi2\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"\")\n-\t(clz:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t  (clz:SI (match_operand:SI 1 \"register_operand\" \"\")))\n+     (clobber (match_dup 2))])]\n+  \"TARGET_NORM\"\n+  \"operands[2] = gen_rtx_REG (CC_ZNmode, CC_REG);\")\n+\n+(define_insn_and_split \"*arc_clzsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(clz:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+   (clobber (reg:CC_ZN CC_REG))]\n   \"TARGET_NORM\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n {\n   emit_insn (gen_norm_f (operands[0], operands[1]));\n   emit_insn\n@@ -4552,20 +4564,34 @@\n })\n \n (define_expand \"ctzsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(ctz:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n+  [(match_operand:SI 0 \"register_operand\" \"\")\n+   (match_operand:SI 1 \"register_operand\" \"\")]\n   \"TARGET_NORM\"\n+  \"\n+  emit_insn (gen_arc_ctzsi2 (operands[0], operands[1]));\n+  DONE;\n+\")\n+\n+(define_insn_and_split \"arc_ctzsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ctz:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+   (clobber (reg:CC_ZN CC_REG))\n+   (clobber (match_scratch:SI 2 \"=&r\"))]\n+  \"TARGET_NORM\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n {\n   rtx temp = operands[0];\n \n   if (reg_overlap_mentioned_p (temp, operands[1])\n       || (REGNO (temp) < FIRST_PSEUDO_REGISTER\n \t  && !TEST_HARD_REG_BIT (reg_class_contents[GENERAL_REGS],\n \t\t\t\t REGNO (temp))))\n-    temp = gen_reg_rtx (SImode);\n+    temp = operands[2];\n   emit_insn (gen_addsi3 (temp, operands[1], constm1_rtx));\n   emit_insn (gen_bic_f_zn (temp, temp, operands[1]));\n-  emit_insn (gen_clrsbsi2 (temp, temp));\n+  emit_insn (gen_clrsbsi2 (operands[0], temp));\n   emit_insn\n     (gen_rtx_COND_EXEC\n       (VOIDmode,\n@@ -4575,7 +4601,8 @@\n     (gen_rtx_COND_EXEC\n       (VOIDmode,\n        gen_rtx_GE (VOIDmode, gen_rtx_REG (CC_ZNmode, CC_REG), const0_rtx),\n-       gen_rtx_SET (operands[0], gen_rtx_MINUS (SImode, GEN_INT (31), temp))));\n+       gen_rtx_SET (operands[0], gen_rtx_MINUS (SImode, GEN_INT (31),\n+\t\t\t\t\t\toperands[0]))));\n   DONE;\n })\n "}]}