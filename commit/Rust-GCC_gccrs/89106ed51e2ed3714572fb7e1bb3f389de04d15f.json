{"sha": "89106ed51e2ed3714572fb7e1bb3f389de04d15f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxMDZlZDUxZTJlZDM3MTQ1NzJmYjdlMWJiM2YzODlkZTA0ZDE1Zg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-04T02:34:07Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-04T02:34:07Z"}, "message": "timevar.c (timevar_enable): Change from static.\n\n2004-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * timevar.c (timevar_enable): Change from\n        static.\n        (timevar_push): Rename to ...\n        (timevar_push_1): this and remove the\n        enabled check.\n        (timevar_pop): Rename to ...\n        (timevar_pop_1): this and remove the\n        enabled check.\n        * timevar.h (POP_TIMEVAR_AND_RETURN): Use do/while loops.\n        (timevar_pop): New macro.\n        (timevar_push): New macro.\n        (timevar_enable): Declare.\n\nFrom-SVN: r90050", "tree": {"sha": "8bcea0845b926942621e50fa49e9ac094ef7b106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bcea0845b926942621e50fa49e9ac094ef7b106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89106ed51e2ed3714572fb7e1bb3f389de04d15f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89106ed51e2ed3714572fb7e1bb3f389de04d15f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89106ed51e2ed3714572fb7e1bb3f389de04d15f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89106ed51e2ed3714572fb7e1bb3f389de04d15f/comments", "author": null, "committer": null, "parents": [{"sha": "b336747402980567163bc6d61556a8d34c0efd7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b336747402980567163bc6d61556a8d34c0efd7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b336747402980567163bc6d61556a8d34c0efd7b"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "8b4baa1cab257754703589f5b2afefc24161d9ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89106ed51e2ed3714572fb7e1bb3f389de04d15f", "patch": "@@ -1,3 +1,18 @@\n+2004-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* timevar.c (timevar_enable): Change from\n+\tstatic.\n+\t(timevar_push): Rename to ...\n+\t(timevar_push_1): this and remove the\n+\tenabled check.\n+\t(timevar_pop): Rename to ...\n+\t(timevar_pop_1): this and remove the\n+\tenabled check.\n+\t* timevar.h (POP_TIMEVAR_AND_RETURN): Use do/while loops.\n+\t(timevar_pop): New macro.\n+\t(timevar_push): New macro.\n+\t(timevar_enable): Declare.\n+\n 2004-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* config/darwin.h (REAL_LIBGCC_SPEC): Define to use shared"}, {"sha": "ffcd9e008764c8e26c15b605b50efb6cb6f474c9", "filename": "gcc/timevar.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=89106ed51e2ed3714572fb7e1bb3f389de04d15f", "patch": "@@ -113,7 +113,7 @@ static double clocks_to_msec;\n #include \"flags.h\"\n #include \"timevar.h\"\n \n-static bool timevar_enable;\n+bool timevar_enable;\n \n /* See timevar.h for an explanation of timing variables.  */\n \n@@ -250,15 +250,12 @@ timevar_init (void)\n    TIMEVAR cannot be running as a standalone timer.  */\n \n void\n-timevar_push (timevar_id_t timevar)\n+timevar_push_1 (timevar_id_t timevar)\n {\n   struct timevar_def *tv = &timevars[timevar];\n   struct timevar_stack_def *context;\n   struct timevar_time_def now;\n \n-  if (!timevar_enable)\n-    return;\n-\n   /* Mark this timing variable as used.  */\n   tv->used = 1;\n \n@@ -300,14 +297,11 @@ timevar_push (timevar_id_t timevar)\n    timing variable.  */\n \n void\n-timevar_pop (timevar_id_t timevar)\n+timevar_pop_1 (timevar_id_t timevar)\n {\n   struct timevar_time_def now;\n   struct timevar_stack_def *popped = stack;\n \n-  if (!timevar_enable)\n-    return;\n-\n   gcc_assert (&timevars[timevar] == stack->timevar);\n   \n   /* What time is it?  */"}, {"sha": "e8366004c018f58fb5689bef8f69f64671f2a321", "filename": "gcc/timevar.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2Ftimevar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89106ed51e2ed3714572fb7e1bb3f389de04d15f/gcc%2Ftimevar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.h?ref=89106ed51e2ed3714572fb7e1bb3f389de04d15f", "patch": "@@ -77,16 +77,20 @@ timevar_id_t;\n #undef DEFTIMEVAR\n \n /* Execute the sequence: timevar_pop (TV), return (E);  */\n-#define POP_TIMEVAR_AND_RETURN(TV, E)  return (timevar_pop (TV), (E))\n+#define POP_TIMEVAR_AND_RETURN(TV, E)  do { timevar_pop (TV); return (E); }while(0)\n+#define timevar_pop(TV) do { if (timevar_enable) timevar_pop_1 (TV); }while(0)\n+#define timevar_push(TV) do { if (timevar_enable) timevar_push_1 (TV); }while(0)\n \n extern void timevar_init (void);\n-extern void timevar_push (timevar_id_t);\n-extern void timevar_pop (timevar_id_t);\n+extern void timevar_push_1 (timevar_id_t);\n+extern void timevar_pop_1 (timevar_id_t);\n extern void timevar_start (timevar_id_t);\n extern void timevar_stop (timevar_id_t);\n extern void timevar_print (FILE *);\n \n /* Provided for backward compatibility.  */\n extern void print_time (const char *, long);\n \n+extern bool timevar_enable;\n+\n #endif /* ! GCC_TIMEVAR_H */"}]}