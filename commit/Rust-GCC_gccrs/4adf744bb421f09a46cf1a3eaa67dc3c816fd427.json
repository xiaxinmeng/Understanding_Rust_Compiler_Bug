{"sha": "4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFkZjc0NGJiNDIxZjA5YTQ2Y2YxYTNlYWE2N2RjM2M4MTZmZDQyNw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-04-01T16:16:53Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-04-01T16:16:53Z"}, "message": "* config/c4x/c4x.h: Added more comments.\n\nFrom-SVN: r26107", "tree": {"sha": "c2df378861e95ead714afe1d2a177302a7ec160c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2df378861e95ead714afe1d2a177302a7ec160c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4adf744bb421f09a46cf1a3eaa67dc3c816fd427/comments", "author": null, "committer": null, "parents": [{"sha": "305902b0060c25d10dd886506e6593ee680b8be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305902b0060c25d10dd886506e6593ee680b8be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305902b0060c25d10dd886506e6593ee680b8be1"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "7b482c8447f0d87dbee95a5cb14a2a4275ef29dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf744bb421f09a46cf1a3eaa67dc3c816fd427/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf744bb421f09a46cf1a3eaa67dc3c816fd427/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "patch": "@@ -1,3 +1,7 @@\n+Fri Apr  2 12:16:15 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.h: Added more comments.\n+\n Fri Apr  2 11:58:22 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_emit_move_sequence): Force invalid QImode"}, {"sha": "347ce2c141b4498f2c57b4d22dc3aeaa298b2a10", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf744bb421f09a46cf1a3eaa67dc3c816fd427/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf744bb421f09a46cf1a3eaa67dc3c816fd427/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=4adf744bb421f09a46cf1a3eaa67dc3c816fd427", "patch": "@@ -1589,11 +1589,18 @@ extern struct rtx_def *c4x_gen_compare_reg ();\n #define HAVE_PRE_MODIFY_DISP 1\n #define HAVE_POST_MODIFY_DISP 1\n \n-#define HAVE_MULTIPLE_PACK 2\n-\n-/* What about LABEL_REF?  */\n+/* The number of insns that can be packed into a single opcode.  */\n+#define MULTIPACK_INSNS 2\n+\n+/* Recognize any constant value that is a valid address. \n+   We could allow arbitrary constant addresses in the large memory\n+   model but for the small memory model we can only accept addresses\n+   within the data page.  I suppose we could also allow\n+   CONST PLUS SYMBOL_REF.  */\n #define CONSTANT_ADDRESS_P(X) (GET_CODE (X) == SYMBOL_REF)\n \n+/* Maximum number of registers that can appear in a valid memory\n+   address.  */\n #define MAX_REGS_PER_ADDRESS\t2\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx"}]}