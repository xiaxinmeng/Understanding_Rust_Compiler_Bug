{"sha": "a203a2215b2acd8610716b87fd653ecccb6977ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIwM2EyMjE1YjJhY2Q4NjEwNzE2Yjg3ZmQ2NTNlY2NjYjY5NzdjZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-03-30T22:35:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-03-30T22:35:22Z"}, "message": "tree-eh.c (make_eh_edges): Set probability 100% to first edge out of RESX.\n\n\n\t* tree-eh.c (make_eh_edges): Set probability 100% to first edge out of RESX.\n\t(tree_remove_unreachable_handlers): Cleanup EH predecestor detection and label\n\thandling.\n\nFrom-SVN: r145322", "tree": {"sha": "7ca8a4ba57aa58c8e75cd7662adaef1ed69d0a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ca8a4ba57aa58c8e75cd7662adaef1ed69d0a64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a203a2215b2acd8610716b87fd653ecccb6977ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a203a2215b2acd8610716b87fd653ecccb6977ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a203a2215b2acd8610716b87fd653ecccb6977ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a203a2215b2acd8610716b87fd653ecccb6977ce/comments", "author": null, "committer": null, "parents": [{"sha": "7db6438d78aa2a1dcf2a8f3bf454ee68402bfb95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db6438d78aa2a1dcf2a8f3bf454ee68402bfb95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db6438d78aa2a1dcf2a8f3bf454ee68402bfb95"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "7509e62c6a944e46f8dc04fc1769135d388b3d0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a203a2215b2acd8610716b87fd653ecccb6977ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a203a2215b2acd8610716b87fd653ecccb6977ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a203a2215b2acd8610716b87fd653ecccb6977ce", "patch": "@@ -1,3 +1,9 @@\n+2009-03-30  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-eh.c (make_eh_edges): Set probability 100% to first edge out of RESX.\n+\t(tree_remove_unreachable_handlers): Cleanup EH predecestor detection and label\n+\thandling.\n+\n 2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-int.h (ira_allocno): Rename left_conflicts_num to"}, {"sha": "f55a4172b10473173165fa320584e3dace3be0ec", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a203a2215b2acd8610716b87fd653ecccb6977ce/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a203a2215b2acd8610716b87fd653ecccb6977ce/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=a203a2215b2acd8610716b87fd653ecccb6977ce", "patch": "@@ -1974,6 +1974,7 @@ make_eh_edges (gimple stmt)\n   int region_nr;\n   bool is_resx;\n   bool inlinable = false;\n+  basic_block bb;\n \n   if (gimple_code (stmt) == GIMPLE_RESX)\n     {\n@@ -1990,6 +1991,13 @@ make_eh_edges (gimple stmt)\n     }\n \n   foreach_reachable_handler (region_nr, is_resx, inlinable, make_eh_edge, stmt);\n+\n+  /* Make CFG profile more consistent assuming that exception will resume to first\n+     available EH handler.  In practice this makes little difference, but we get\n+     fewer consistency errors in the dumps.  */\n+  bb = gimple_bb (stmt);\n+  if (is_resx && EDGE_COUNT (bb->succs))\n+    EDGE_SUCC (bb, 0)->probability = REG_BR_PROB_BASE;\n }\n \n static bool mark_eh_edge_found_error;\n@@ -2659,12 +2667,7 @@ tree_remove_unreachable_handlers (void)\n   {\n     gimple_stmt_iterator gsi;\n     int region;\n-    bool has_eh_preds = false;\n-    edge e;\n-    edge_iterator ei;\n-\n-    FOR_EACH_EDGE (e, ei, bb->preds) if (e->flags & EDGE_EH)\n-      has_eh_preds = true;\n+    bool has_eh_preds = bb_has_eh_pred (bb);\n \n     for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n       {\n@@ -2673,11 +2676,8 @@ tree_remove_unreachable_handlers (void)\n \tif (gimple_code (stmt) == GIMPLE_LABEL && has_eh_preds)\n \t  {\n \t    int uid = LABEL_DECL_UID (gimple_label_label (stmt));\n-\t    if (uid <= cfun->cfg->last_label_uid)\n-\t      {\n-\t\tint region = VEC_index (int, label_to_region, uid);\n-\t\tSET_BIT (reachable, region);\n-\t      }\n+\t    int region = VEC_index (int, label_to_region, uid);\n+\t    SET_BIT (reachable, region);\n \t  }\n \tif (gimple_code (stmt) == RESX)\n \t  SET_BIT (reachable, gimple_resx_region (stmt));\n@@ -2824,14 +2824,15 @@ cleanup_empty_eh (basic_block bb)\n \t  if (!stmt_can_throw_internal (last_stmt (src)))\n \t    continue;\n \t  make_eh_edges (last_stmt (src));\n-\t  FOR_EACH_EDGE (e, ei, src->succs) if (e->flags & EDGE_EH)\n-\t    {\n-\t      dominance_info_invalidated = true;\n-\t      for (si = gsi_start_phis (e->dest); !gsi_end_p (si);\n-\t\t   gsi_next (&si))\n-\t\tmark_sym_for_renaming (SSA_NAME_VAR\n-\t\t\t\t       (PHI_RESULT (gsi_stmt (si))));\n-\t    }\n+\t  FOR_EACH_EDGE (e, ei, src->succs)\n+\t    if (e->flags & EDGE_EH)\n+\t      {\n+\t\tdominance_info_invalidated = true;\n+\t\tfor (si = gsi_start_phis (e->dest); !gsi_end_p (si);\n+\t\t     gsi_next (&si))\n+\t\t  mark_sym_for_renaming (SSA_NAME_VAR\n+\t\t\t\t\t (PHI_RESULT (gsi_stmt (si))));\n+\t      }\n \t}\n       if (dump_file)\n \tfprintf (dump_file, \"Empty EH handler %i removed\\n\", region);"}]}