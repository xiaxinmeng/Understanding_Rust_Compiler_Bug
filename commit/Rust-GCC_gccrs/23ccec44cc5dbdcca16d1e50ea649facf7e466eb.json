{"sha": "23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjY2VjNDRjYzVkYmRjY2ExNmQxZTUwZWE2NDlmYWNmN2U0NjZlYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-08T21:52:23Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-08T21:52:23Z"}, "message": "(store_constructor_field): Add explanatory comment.\n\nCall store_field if bitpos is nonzero and target is not a MEM.\n\nFrom-SVN: r11503", "tree": {"sha": "c9c34bfb875b01459b86d03fd14de41c5f94e421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9c34bfb875b01459b86d03fd14de41c5f94e421"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ccec44cc5dbdcca16d1e50ea649facf7e466eb/comments", "author": null, "committer": null, "parents": [{"sha": "29e8f73f36eb5b6facbeef366f22fb7f8e19908d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e8f73f36eb5b6facbeef366f22fb7f8e19908d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e8f73f36eb5b6facbeef366f22fb7f8e19908d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f4e2444c4cb5eb3a4eadf9fbf5b1b9b44dd94f5b", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ccec44cc5dbdcca16d1e50ea649facf7e466eb/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ccec44cc5dbdcca16d1e50ea649facf7e466eb/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "patch": "@@ -3261,7 +3261,12 @@ mostly_zeros_p (exp)\n /* Helper function for store_constructor.\n    TARGET, BITSIZE, BITPOS, MODE, EXP are as for store_field.\n    TYPE is the type of the CONSTRUCTOR, not the element type.\n-   CLEARED is as for store_constructor.  */\n+   CLEARED is as for store_constructor.\n+\n+   This provides a recursive shortcut back to store_constructor when it isn't\n+   necessary to go through store_field.  This is so that we can pass through\n+   the cleared field to let store_constructor know that we may not have to\n+   clear a substructure if the outer structure has already been cleared.  */\n \n static void\n store_constructor_field (target, bitsize, bitpos,\n@@ -3273,7 +3278,11 @@ store_constructor_field (target, bitsize, bitpos,\n      int cleared;\n {\n   if (TREE_CODE (exp) == CONSTRUCTOR\n-      && (bitpos % BITS_PER_UNIT) == 0)\n+      && bitpos % BITS_PER_UNIT == 0\n+      /* If we have a non-zero bitpos for a register target, then we just\n+\t let store_field do the bitfield handling.  This is unlikely to\n+\t generate unnecessary clear instructions anyways.  */\n+      && (bitpos == 0 || GET_CODE (target) == MEM))\n     {\n       if (bitpos != 0)\n \ttarget = change_address (target, VOIDmode,"}]}