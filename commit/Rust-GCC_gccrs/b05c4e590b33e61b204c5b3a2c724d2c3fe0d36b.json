{"sha": "b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1YzRlNTkwYjMzZTYxYjIwNGM1YjNhMmM3MjRkMmMzZmUwZDM2Yg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-01-28T21:08:34Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-01-28T21:08:34Z"}, "message": "* libiberty.h (C_alloca): Add ATTRIBUTE_MALLOC.\n\nFrom-SVN: r49299", "tree": {"sha": "6c24e5586f9409c5eefa69f054761d9676ccf2fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c24e5586f9409c5eefa69f054761d9676ccf2fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b/comments", "author": null, "committer": null, "parents": [{"sha": "11e174221bc5ff7212198f2e549e884675dac31c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e174221bc5ff7212198f2e549e884675dac31c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e174221bc5ff7212198f2e549e884675dac31c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "582554291f566044c19f05b271335adfce5f2834", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "patch": "@@ -1,3 +1,7 @@\n+2002-01-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* libiberty.h (C_alloca): Add ATTRIBUTE_MALLOC.\n+\n 2001-12-06  Richard Henderson  <rth@redhat.com>\n \n \t* demangle.h (no_demangling): New."}, {"sha": "3e0ca096c02800f7f696d76543fafde61ad8d257", "filename": "include/libiberty.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=b05c4e590b33e61b204c5b3a2c724d2c3fe0d36b", "patch": "@@ -1,6 +1,6 @@\n /* Function declarations for libiberty.\n \n-   Copyright 2001 Free Software Foundation, Inc.\n+   Copyright 2001, 2002 Free Software Foundation, Inc.\n    \n    Note - certain prototypes declared in this header file are for\n    functions whoes implementation copyright does not belong to the\n@@ -283,7 +283,7 @@ extern int vasprintf PARAMS ((char **, const char *, va_list))\n    USE_C_ALLOCA yourself.  The canonical autoconf macro C_ALLOCA is\n    also set/unset as it is often used to indicate whether code needs\n    to call alloca(0).  */\n-extern PTR C_alloca PARAMS((size_t));\n+extern PTR C_alloca PARAMS ((size_t)) ATTRIBUTE_MALLOC;\n #undef alloca\n #if GCC_VERSION >= 2000 && !defined USE_C_ALLOCA\n # define alloca(x) __builtin_alloca(x)"}]}