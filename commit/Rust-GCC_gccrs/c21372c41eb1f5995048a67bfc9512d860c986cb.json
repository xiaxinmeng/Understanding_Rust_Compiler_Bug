{"sha": "c21372c41eb1f5995048a67bfc9512d860c986cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxMzcyYzQxZWIxZjU5OTUwNDhhNjdiZmM5NTEyZDg2MGM5ODZjYg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-03-18T16:07:53Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-03-18T16:07:53Z"}, "message": "re PR middle-end/43419 (gcc replaces pow(x, 0.5) by sqrt(x), invalid when x is -0)\n\n\tPR middle-end/43419\n\t* builtins.c (expand_builtin_pow): Don't transform pow(x, 0.5)\n\tinto sqrt(x) if we need to preserve signed zeros.\n\ntestsuite/\n\t* gcc.dg/pr43419.c: New testcase.\n\nFrom-SVN: r157543", "tree": {"sha": "4ff7adbdf79516249e130b74195c2cb0583b9375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ff7adbdf79516249e130b74195c2cb0583b9375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21372c41eb1f5995048a67bfc9512d860c986cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21372c41eb1f5995048a67bfc9512d860c986cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21372c41eb1f5995048a67bfc9512d860c986cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21372c41eb1f5995048a67bfc9512d860c986cb/comments", "author": null, "committer": null, "parents": [{"sha": "82fa5f8aa727db4ab9f172ddc454fc25325b82ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82fa5f8aa727db4ab9f172ddc454fc25325b82ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82fa5f8aa727db4ab9f172ddc454fc25325b82ca"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "31b4340609882a0b9f49c435a4b54953ffd3d4a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c21372c41eb1f5995048a67bfc9512d860c986cb", "patch": "@@ -1,3 +1,9 @@\n+2010-03-18  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43419\n+\t* builtins.c (expand_builtin_pow): Don't transform pow(x, 0.5)\n+\tinto sqrt(x) if we need to preserve signed zeros.\n+\n 2010-03-18  Steven Bosscher  <steven@gcc.gnu.org>\n \t    Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "705a25598b0e8eabe1df808bce93cc82a393e3f6", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c21372c41eb1f5995048a67bfc9512d860c986cb", "patch": "@@ -2980,7 +2980,10 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n \t  && ((flag_unsafe_math_optimizations\n \t       && optimize_insn_for_speed_p ()\n \t       && powi_cost (n/2) <= POWI_MAX_MULTS)\n-\t      || n == 1))\n+\t      /* Even the c==0.5 case cannot be done unconditionally\n+\t         when we need to preserve signed zeros, as\n+\t\t pow (-0, 0.5) is +0, while sqrt(-0) is -0.  */\n+\t      || (!HONOR_SIGNED_ZEROS (mode) && n == 1)))\n \t{\n \t  tree call_expr = build_call_nofold (fn, 1, narg0);\n \t  /* Use expand_expr in case the newly built call expression"}, {"sha": "4a0ef16621821c9a492669c8780a5ae7db3eaaf9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c21372c41eb1f5995048a67bfc9512d860c986cb", "patch": "@@ -1,3 +1,8 @@\n+2010-03-18  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43419\n+\t* gcc.dg/pr43419.c: New testcase.\n+\n 2010-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/43360\n@@ -16,10 +21,10 @@\n 2010-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/43265\n-\t*gfortran.dg/read_empty_file.f: New test.\n-\t*gfortran.dg/read_eof_all.f90: New test.\n-\t*gfortran.dg/namelist_27.f90: Eliminate infinite loop posibility.\n-\t*gfortran.dg/namelist_28.f90: Eliminate infinite loop posibility.\n+\t* gfortran.dg/read_empty_file.f: New test.\n+\t* gfortran.dg/read_eof_all.f90: New test.\n+\t* gfortran.dg/namelist_27.f90: Eliminate infinite loop posibility.\n+\t* gfortran.dg/namelist_28.f90: Eliminate infinite loop posibility.\n \n 2010-03-17  Michael Matz  <matz@suse.de>\n "}, {"sha": "a4306f04855e0e3c3b1746deb5e43b5334f4a02d", "filename": "gcc/testsuite/gcc.dg/pr43419.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43419.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21372c41eb1f5995048a67bfc9512d860c986cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43419.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43419.c?ref=c21372c41eb1f5995048a67bfc9512d860c986cb", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-add-options ieee } */\n+#include <math.h>\n+\n+extern void abort (void);\n+void __attribute__((noinline)) f (double x)\n+{\n+  double pluszero = pow (x, 0.5);\n+  double minuszero = sqrt (x);\n+  if (signbit (pluszero) == signbit (minuszero))\n+    abort ();\n+}\n+\n+int main(void)\n+{\n+  f (-0.0);\n+  return 0;\n+}"}]}