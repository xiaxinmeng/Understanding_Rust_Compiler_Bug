{"sha": "ee569894e73717bcc0ee7598a0fd250d0e07b50f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU1Njk4OTRlNzM3MTdiY2MwZWU3NTk4YTBmZDI1MGQwZTA3YjUwZg==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-10-04T20:49:39Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-10-04T20:49:39Z"}, "message": "re PR libfortran/17631 (libfortran: intrinsic subroutine MVBITS not implemented)\n\nPR fortran/17631\nfortran/\n* intrinsic.c (add_sym_5): Remove.\n(add_subroutines): Add resolution function for MVBITS.\n* intrinsic.h (gfc_resolve_mvbits): Declare resolution function for\nMVBITS\n* iresolve.c (gfc_resolve_mvbits): New function.\n(gfc_resolve_random_number): Remove empty line at end of function.\nlibgfortran/\n* Makefile.am (gfor_helper_src): Add intrinsics/mvbits.h.\n* intrinsics/mvbits.h: New file.\ntestsuite/\n* gfortran.fortran-torture/execute/intrinsic_mvbits.f90: New test.\n\nFrom-SVN: r88527", "tree": {"sha": "9811180d0efc726048a113005d15b0b59e736fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9811180d0efc726048a113005d15b0b59e736fae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee569894e73717bcc0ee7598a0fd250d0e07b50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee569894e73717bcc0ee7598a0fd250d0e07b50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee569894e73717bcc0ee7598a0fd250d0e07b50f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee569894e73717bcc0ee7598a0fd250d0e07b50f/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c5b409e89f4250bddf1ba114b3058d4dfab718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58c5b409e89f4250bddf1ba114b3058d4dfab718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58c5b409e89f4250bddf1ba114b3058d4dfab718"}], "stats": {"total": 117, "additions": 68, "deletions": 49}, "files": [{"sha": "c0b6d151a327e5f76e3083de93100b5400755257", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -4,6 +4,14 @@\n \t* iresolve.c (gfc_resolve_pack): Choose function depending if mask\n \tis scalar.\n \n+\tPR fortran/17631\n+\t* intrinsic.c (add_sym_5): Remove.\n+\t(add_subroutines): Add resolution function for MVBITS.\n+\t* intrinsic.h (gfc_resolve_mvbits): Declare resolution function for\n+\tMVBITS\n+\t* iresolve.c (gfc_resolve_mvbits): New function.\n+\t(gfc_resolve_random_number): Remove empty line at end of function.\n+\n 2004-10-04  Erik Schnetter  <schnetter@aei.mpg.de>\n \n \t* scanner.c (preprocessor_line): Accept preprocessor lines without"}, {"sha": "2875321ec9a96c5ccb13cf7a53140db601b59118", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 5, "deletions": 35, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -600,35 +600,6 @@ static void add_sym_4s (const char *name, int elemental, int actual_ok,\n }\n \n \n-static void add_sym_5 (const char *name, int elemental, int actual_ok, bt type,\n-\t\t       int kind,\n-\t\t       try (*check)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n-\t\t       gfc_expr *(*simplify)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n-\t\t       void (*resolve)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n-\t\t       const char* a1, bt type1, int kind1, int optional1,\n-\t\t       const char* a2, bt type2, int kind2, int optional2,\n-\t\t       const char* a3, bt type3, int kind3, int optional3,\n-\t\t       const char* a4, bt type4, int kind4, int optional4,\n-\t\t       const char* a5, bt type5, int kind5, int optional5\n-\t\t       ) {\n-  gfc_check_f cf;\n-  gfc_simplify_f sf;\n-  gfc_resolve_f rf;\n-\n-  cf.f5 = check;\n-  sf.f5 = simplify;\n-  rf.f5 = resolve;\n-\n-  add_sym (name, elemental, actual_ok, type, kind, cf, sf, rf,\n-\t   a1, type1, kind1, optional1,\n-\t   a2, type2, kind2, optional2,\n-\t   a3, type3, kind3, optional3,\n-\t   a4, type4, kind4, optional4,\n-\t   a5, type5, kind5, optional5,\n-\t   (void*)0);\n-}\n-\n-\n static void add_sym_5s  \n (\n  const char *name, int elemental, int actual_ok, bt type, int kind,\n@@ -1960,12 +1931,11 @@ add_subroutines (void)\n \t     trim_name, BT_LOGICAL, dl, 1);\n \n \n-  /* This needs changing to add_sym_5s if it gets a resolution function.  */\n-  add_sym_5 (\"mvbits\", 1, 1, BT_UNKNOWN, 0,\n-\t     gfc_check_mvbits, gfc_simplify_mvbits, NULL,\n-\t     f, BT_INTEGER, di, 0, fp, BT_INTEGER, di, 0,\n-\t     ln, BT_INTEGER, di, 0, t, BT_INTEGER, di, 0,\n-\t     tp, BT_INTEGER, di, 0);\n+  add_sym_5s (\"mvbits\", 1, 1, BT_UNKNOWN, 0,\n+\t      gfc_check_mvbits, gfc_simplify_mvbits, gfc_resolve_mvbits,\n+\t      f, BT_INTEGER, di, 0, fp, BT_INTEGER, di, 0,\n+\t      ln, BT_INTEGER, di, 0, t, BT_INTEGER, di, 0,\n+\t      tp, BT_INTEGER, di, 0);\n \n   add_sym_1s (\"random_number\", 0, 1, BT_UNKNOWN, 0,\n \t      gfc_check_random_number, NULL, gfc_resolve_random_number,"}, {"sha": "ec68828df12bbcc47f92486e24fbb9884a5025fd", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -323,6 +323,7 @@ void gfc_resolve_verify (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *);\n \n /* Intrinsic subroutine resolution.  */\n void gfc_resolve_cpu_time (gfc_code *);\n+void gfc_resolve_mvbits (gfc_code *);\n void gfc_resolve_system_clock(gfc_code *);\n void gfc_resolve_random_number (gfc_code *);\n void gfc_resolve_getarg (gfc_code *);"}, {"sha": "9ae912ef73c7488ffee682e9a285b382699d6cce", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -1461,6 +1461,19 @@ gfc_resolve_cpu_time (gfc_code * c ATTRIBUTE_UNUSED)\n }\n \n \n+void\n+gfc_resolve_mvbits (gfc_code * c)\n+{\n+  const char *name;\n+  int kind;\n+\n+  kind = c->ext.actual->expr->ts.kind;\n+  name = gfc_get_string (PREFIX(\"mvbits_i%d\"), kind);\n+\n+  c->resolved_sym = gfc_get_intrinsic_sub_symbol (name);\n+}\n+\n+\n void\n gfc_resolve_random_number (gfc_code * c ATTRIBUTE_UNUSED)\n {\n@@ -1474,7 +1487,6 @@ gfc_resolve_random_number (gfc_code * c ATTRIBUTE_UNUSED)\n     name = gfc_get_string (PREFIX(\"arandom_r%d\"), kind);\n   \n   c->resolved_sym = gfc_get_intrinsic_sub_symbol (name);\n-\n }\n \n "}, {"sha": "6bb5309db71f16dcc92dd392bb7cdf380bd42ab9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -3,6 +3,9 @@\n \tPR fortran/17283\n \t* gfortran.fortran-torture/execute/intrinsic_pack.f90: Add more tests.\n \n+\tPR fortran/17631\n+\t* gfortran.fortran-torture/execute/intrinsic_mvbits.f90: New test.\n+\n 2004-10-04  Chao-ying Fu  <fu@mips.com>\n \n \t* gcc.dg/vect/pr16105.c: Enable for mipsisa64*-*-*."}, {"sha": "8aaaf09dd26aa3f4fe19b07cb4e3db9608e82d0b", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_mvbits.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mvbits.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mvbits.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mvbits.f90?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -0,0 +1,10 @@\n+! Test the MVBITS intrinsic subroutine\n+INTEGER*4 :: from, to, result\n+\n+DATA from / z'0003FFFC' /\n+DATA to / z'77760000' /\n+DATA result / z'7777FFFE' /\n+\n+CALL mvbits(from, 2, 16, to, 1)\n+if (to /= result) CALL abort()\n+end"}, {"sha": "8b9d6a7ef4153d01ef2db42a6b416a7fa0b5d933", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -7,6 +7,11 @@\n \t* runtime/memory.c (internal_malloc, internal_malloc64): Allow\n \tallocating zero memory.\n \n+\tPR fortran/17631\n+\t* Makefile.am (gfor_helper_src): Add intrinsics/mvbits.h.\n+\t* Makefile.in: Regenerate.\n+\t* intrinsics/mvbits.h: New file.\n+\n 2004-10-04  Paul Brook  <paul@codesourcery.com>\n \tBud Davis  <bdavis9659@comcast.net>\n "}, {"sha": "d34a3dd6e66c71913ba235d1b3eddf2f06294d94", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -52,6 +52,7 @@ intrinsics/etime.c \\\n intrinsics/getcwd.c \\\n intrinsics/getXid.c \\\n intrinsics/ishftc.c \\\n+intrinsics/mvbits.c \\\n intrinsics/pack_generic.c \\\n intrinsics/size.c \\\n intrinsics/spread_generic.c \\"}, {"sha": "219baa69b49354ee146d3b624be4569d8d579986", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee569894e73717bcc0ee7598a0fd250d0e07b50f/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=ee569894e73717bcc0ee7598a0fd250d0e07b50f", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.8.5 from Makefile.am.\n+# Makefile.in generated by automake 1.8.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n@@ -121,11 +121,12 @@ am__objects_32 = backspace.lo close.lo endfile.lo format.lo inquire.lo \\\n am__objects_33 = associated.lo abort.lo args.lo bessel.lo \\\n \tc99_functions.lo cpu_time.lo cshift0.lo date_and_time.lo \\\n \tenv.lo erf.lo eoshift0.lo eoshift2.lo etime.lo getcwd.lo \\\n-\tgetXid.lo ishftc.lo pack_generic.lo size.lo spread_generic.lo \\\n-\tstring_intrinsics.lo rand.lo random.lo reshape_generic.lo \\\n-\treshape_packed.lo selected_int_kind.lo selected_real_kind.lo \\\n-\tsystem_clock.lo transpose_generic.lo unpack_generic.lo \\\n-\tin_pack_generic.lo in_unpack_generic.lo normalize.lo\n+\tgetXid.lo ishftc.lo mvbits.lo pack_generic.lo size.lo \\\n+\tspread_generic.lo string_intrinsics.lo rand.lo random.lo \\\n+\treshape_generic.lo reshape_packed.lo selected_int_kind.lo \\\n+\tselected_real_kind.lo system_clock.lo transpose_generic.lo \\\n+\tunpack_generic.lo in_pack_generic.lo in_unpack_generic.lo \\\n+\tnormalize.lo\n am__objects_34 =\n am__objects_35 = _abs_c4.lo _abs_c8.lo _abs_i4.lo _abs_i8.lo \\\n \t_abs_r4.lo _abs_r8.lo _exp_r4.lo _exp_r8.lo _exp_c4.lo \\\n@@ -324,6 +325,7 @@ intrinsics/etime.c \\\n intrinsics/getcwd.c \\\n intrinsics/getXid.c \\\n intrinsics/ishftc.c \\\n+intrinsics/mvbits.c \\\n intrinsics/pack_generic.c \\\n intrinsics/size.c \\\n intrinsics/spread_generic.c \\\n@@ -740,7 +742,7 @@ clean-toolexeclibLTLIBRARIES:\n \t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n \t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n \t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n-\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  test \"$$dir\" = \"$$p\" && dir=.; \\\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n@@ -2114,6 +2116,15 @@ ishftc.obj: intrinsics/ishftc.c\n ishftc.lo: intrinsics/ishftc.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ishftc.lo `test -f 'intrinsics/ishftc.c' || echo '$(srcdir)/'`intrinsics/ishftc.c\n \n+mvbits.o: intrinsics/mvbits.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mvbits.o `test -f 'intrinsics/mvbits.c' || echo '$(srcdir)/'`intrinsics/mvbits.c\n+\n+mvbits.obj: intrinsics/mvbits.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mvbits.obj `if test -f 'intrinsics/mvbits.c'; then $(CYGPATH_W) 'intrinsics/mvbits.c'; else $(CYGPATH_W) '$(srcdir)/intrinsics/mvbits.c'; fi`\n+\n+mvbits.lo: intrinsics/mvbits.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mvbits.lo `test -f 'intrinsics/mvbits.c' || echo '$(srcdir)/'`intrinsics/mvbits.c\n+\n pack_generic.o: intrinsics/pack_generic.c\n \t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pack_generic.o `test -f 'intrinsics/pack_generic.c' || echo '$(srcdir)/'`intrinsics/pack_generic.c\n \n@@ -2932,11 +2943,9 @@ TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n \t  done | \\\n \t  $(AWK) '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n-\tif test -z \"$(ETAGS_ARGS)$$tags$$unique\"; then :; else \\\n-\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n-\t  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n-\t    $$tags $$unique; \\\n-\tfi\n+\ttest -z \"$(ETAGS_ARGS)$$tags$$unique\" \\\n+\t  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t     $$tags $$unique\n ctags: CTAGS\n CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n@@ -3032,7 +3041,7 @@ distcheck: dist\n \t*.tar.Z*) \\\n \t  uncompress -c $(distdir).tar.Z | $(AMTAR) xf - ;;\\\n \t*.shar.gz*) \\\n-\t  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\\\n+\t  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | unshar ;;\\\n \t*.zip*) \\\n \t  unzip $(distdir).zip ;;\\\n \tesac"}]}