{"sha": "99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkMmVhN2UzNmQyZjU2ZDVlZTM4NDdjZGI1ZDBjZjhlMTQyODVmNQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2006-05-31T23:12:09Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2006-05-31T23:12:09Z"}, "message": "gcj.texi (Extensions): Document the new gcj-dbtool-based classname-to-library resolution mechanism.\n\n2006-05-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gcj.texi (Extensions): Document the new gcj-dbtool-based\n\tclassname-to-library resolution mechanism.\n\tDeclare the old gnu.gcj.runtime.VMClassLoader.library_control\n\tmechanism deprecated.\n\t(libgcj Runtime Properties): Document\n\tgnu.gcj.runtime.VMClassLoader.library_control's new default.\n\nFrom-SVN: r114282", "tree": {"sha": "d8f59d7c64714486fbf35bab84a09347819ed6b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f59d7c64714486fbf35bab84a09347819ed6b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5/comments", "author": null, "committer": null, "parents": [{"sha": "07471dfbf7afc818a9e52f8507fb727d20250516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07471dfbf7afc818a9e52f8507fb727d20250516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07471dfbf7afc818a9e52f8507fb727d20250516"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "d0b65aee617141c84b9b878299bad7469baba1ba", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "patch": "@@ -1,3 +1,12 @@\n+2006-05-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gcj.texi (Extensions): Document the new gcj-dbtool-based\n+\tclassname-to-library resolution mechanism.\n+\tDeclare the old gnu.gcj.runtime.VMClassLoader.library_control\n+\tmechanism deprecated.\n+\t(libgcj Runtime Properties): Document\n+\tgnu.gcj.runtime.VMClassLoader.library_control's new default.\n+\n 2006-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* javaop.h (int16, int32, int64): Define to exactly 16 (resp. 32, 64)"}, {"sha": "2f82d7f981bc45c2652bde9d69507befbf1dcce4", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=99d2ea7e36d2f56d5ee3847cdb5d0cf8e14285f5", "patch": "@@ -670,16 +670,26 @@ added are to facilitate this functionality.\n @xref{About CNI}, for more info on how to use this in your programs.\n \n @item\n-When you compile your classes into a shared library they can be automatically\n-loaded by the @code{libgcj} system classloader.  When trying to load a class\n-@code{gnu.pkg.SomeClass} the system classloader will first try to load the\n-shared library @file{lib-gnu-pkg-SomeClass.so}, if that fails to load the\n-class then it will try to load @file{lib-gnu-pkg.so} and finally when the\n-class is still not loaded it will try to load @file{lib-gnu.so}.  Note that\n+When you compile your classes into a shared library using\n+@code{-findirect-dispatch} then add them to the system-wide\n+classmap.db file using @code{gcj-dbtool}, they will be automatically\n+loaded by the @code{libgcj} system classloader.  This is the new,\n+preferred classname-to-library resolution mechanism.  @xref{Invoking\n+gcj-dbtool}, for more information on using the classmap database.\n+\n+@item\n+The old classname-to-library lookup mechanism is still supported\n+through the @code{gnu.gcj.runtime.VMClassLoader.library_control}\n+property, but it is deprecated and will likely be removed in some\n+future release.  When trying to load a class @code{gnu.pkg.SomeClass}\n+the system classloader will first try to load the shared library\n+@file{lib-gnu-pkg-SomeClass.so}, if that fails to load the class then\n+it will try to load @file{lib-gnu-pkg.so} and finally when the class\n+is still not loaded it will try to load @file{lib-gnu.so}.  Note that\n all @samp{.}s will be transformed into @samp{-}s and that searching\n-for inner classes starts with their outermost outer class.  If the class\n-cannot be found this way the system classloader tries to use\n-the @code{libgcj} bytecode interpreter to load the class from the standard\n+for inner classes starts with their outermost outer class.  If the\n+class cannot be found this way the system classloader tries to use the\n+@code{libgcj} bytecode interpreter to load the class from the standard\n classpath.  This process can be controlled to some degree via the\n @code{gnu.gcj.runtime.VMClassLoader.library_control} property;\n @xref{libgcj Runtime Properties}.\n@@ -2787,8 +2797,8 @@ frequently.\n This controls how shared libraries are automatically loaded by the\n built-in class loader.  If this property is set to @samp{full}, a full\n search is done for each requested class.  If this property is set to\n-@samp{cache} (the default), then any failed lookups are cached and not\n-tried again.  If this property is set to @samp{never}, then lookups\n+@samp{cache}, then any failed lookups are cached and not tried again.\n+If this property is set to @samp{never} (the default), then lookups\n are never done.  For more information, @xref{Extensions}.\n \n @item gnu.gcj.runtime.endorsed.dirs"}]}