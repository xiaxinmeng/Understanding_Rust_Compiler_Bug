{"sha": "2d2d5a918acab15f113b4efaa0afd339cbbd4053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyZDVhOTE4YWNhYjE1ZjExM2I0ZWZhYTBhZmQzMzljYmJkNDA1Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-04-21T06:24:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-21T06:24:30Z"}, "message": "i386.md (bswap<mode>2): Macroize expander from bswap{si,di}2 using SWI48 mode iterator.\n\n\t* config/i386/i386.md (bswap<mode>2): Macroize expander from\n\tbswap{si,di}2 using SWI48 mode iterator.\n\t(*bswap<mode>2_movbe): Macroize insn from *bswap{si,di}_movbe using\n\tSWI48 mode iterator.  Set type attribute of bswap insn to bitmanip,\n\tset modrm attribute of bswap insn to 0 and remove length attribute.\n\t(*bswap<mode>2_1): Macroize insn from *bswap{si,di}_1 using SWI48 mode\n\titerator.  Set type attribute to bitmanip, set modrm attribute to 0,\n\tset mode attribute to <MODE> and remove length attribute.\n\nFrom-SVN: r158587", "tree": {"sha": "877dca5e7a86c25eddf6fe33f4e002abd56b2b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877dca5e7a86c25eddf6fe33f4e002abd56b2b45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d2d5a918acab15f113b4efaa0afd339cbbd4053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2d5a918acab15f113b4efaa0afd339cbbd4053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d2d5a918acab15f113b4efaa0afd339cbbd4053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2d5a918acab15f113b4efaa0afd339cbbd4053/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88274c4d22e7cd9261fdf779dcd740d3056d60db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88274c4d22e7cd9261fdf779dcd740d3056d60db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88274c4d22e7cd9261fdf779dcd740d3056d60db"}], "stats": {"total": 76, "additions": 29, "deletions": 47}, "files": [{"sha": "4348d3d13313e3f429e141eb66002b108b3d1545", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d2d5a918acab15f113b4efaa0afd339cbbd4053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d2d5a918acab15f113b4efaa0afd339cbbd4053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d2d5a918acab15f113b4efaa0afd339cbbd4053", "patch": "@@ -1,3 +1,14 @@\n+2010-04-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (bswap<mode>2): Macroize expander from\n+\tbswap{si,di}2 using SWI48 mode iterator.\n+\t(*bswap<mode>2_movbe): Macroize insn from *bswap{si,di}_movbe using\n+\tSWI48 mode iterator.  Set type attribute of bswap insn to bitmanip,\n+\tset modrm attribute of bswap insn to 0 and remove length attribute.\n+\t(*bswap<mode>2_1): Macroize insn from *bswap{si,di}_1 using SWI48 mode\n+\titerator.  Set type attribute to bitmanip, set modrm attribute to 0,\n+\tset mode attribute to <MODE> and remove length attribute.\n+\n 2010-04-20  James E. Wilson  <wilson@codesourcery.com>\n \n \tPR rtl-optimization/43520"}, {"sha": "eb0588d76f5ed7dbc2bd1a619332a53866231875", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 47, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d2d5a918acab15f113b4efaa0afd339cbbd4053/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d2d5a918acab15f113b4efaa0afd339cbbd4053/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2d2d5a918acab15f113b4efaa0afd339cbbd4053", "patch": "@@ -12366,18 +12366,12 @@\n    (set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_expand \"bswapdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(bswap:DI (match_operand:DI 1 \"register_operand\" \"\")))]\n-  \"TARGET_64BIT\"\n-  \"\")\n-\n-(define_expand \"bswapsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(bswap:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n+(define_expand \"bswap<mode>2\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"\")\n+\t(bswap:SWI48 (match_operand:SWI48 1 \"register_operand\" \"\")))]\n   \"\"\n {\n-  if (!(TARGET_BSWAP || TARGET_MOVBE))\n+  if (<MODE>mode == SImode && !(TARGET_BSWAP || TARGET_MOVBE))\n     {\n       rtx x = operands[0];\n \n@@ -12389,52 +12383,29 @@\n     }\n })\n \n-(define_insn \"*bswapdi_movbe\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m\")\n-\t(bswap:DI (match_operand:DI 1 \"nonimmediate_operand\" \"0,m,r\")))]\n-  \"TARGET_64BIT && TARGET_MOVBE\n+(define_insn \"*bswap<mode>2_movbe\"\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,r,m\")\n+\t(bswap:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\" \"0,m,r\")))]\n+  \"TARGET_MOVBE\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n     bswap\\t%0\n     movbe\\t{%1, %0|%0, %1}\n     movbe\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"*,imov,imov\")\n-   (set_attr \"modrm\" \"*,1,1\")\n-   (set_attr \"prefix_0f\" \"1\")\n-   (set_attr \"prefix_extra\" \"*,1,1\")\n-   (set_attr \"length\" \"3,*,*\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"*bswapsi_movbe\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m\")\n-\t(bswap:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,m,r\")))]\n-  \"TARGET_MOVBE && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"@\n-    bswap\\t%0\n-    movbe\\t{%1, %0|%0, %1}\n-    movbe\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"*,imov,imov\")\n-   (set_attr \"modrm\" \"*,1,1\")\n-   (set_attr \"prefix_0f\" \"1\")\n+  [(set_attr \"type\" \"bitmanip,imov,imov\")\n+   (set_attr \"modrm\" \"0,1,1\")\n+   (set_attr \"prefix_0f\" \"*,1,1\")\n    (set_attr \"prefix_extra\" \"*,1,1\")\n-   (set_attr \"length\" \"2,*,*\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"*bswapdi_1\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(bswap:DI (match_operand:DI 1 \"register_operand\" \"0\")))]\n-  \"TARGET_64BIT\"\n-  \"bswap\\t%0\"\n-  [(set_attr \"prefix_0f\" \"1\")\n-   (set_attr \"length\" \"3\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*bswapsi_1\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(bswap:SI (match_operand:SI 1 \"register_operand\" \"0\")))]\n+(define_insn \"*bswap<mode>2_1\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(bswap:SWI48 (match_operand:SWI48 1 \"register_operand\" \"0\")))]\n   \"TARGET_BSWAP\"\n   \"bswap\\t%0\"\n-  [(set_attr \"prefix_0f\" \"1\")\n-   (set_attr \"length\" \"2\")])\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"modrm\" \"0\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*bswaphi_lowpart_1\"\n   [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+Q,r\"))"}]}