{"sha": "5c71225085d9b18c54d39bc2601f080c16d99834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3MTIyNTA4NWQ5YjE4YzU0ZDM5YmMyNjAxZjA4MGMxNmQ5OTgzNA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-04-21T21:55:35Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-04-21T21:55:35Z"}, "message": "Reuse the saved_scope structures allocated by push_to_top_level\n\ngcc/cp/ChangeLog:\n\n\t* name-lookup.c (free_saved_scope): New free list of saved_scope\n\tstructures.\n\t(push_to_top_level): Attempt to reuse a saved_scope struct\n\tfrom free_saved_scope instead of allocating a new one each time.\n\t(pop_from_top_level_1): Chain the now-unused saved_scope structure\n\tonto free_saved_scope.\n\nFrom-SVN: r235351", "tree": {"sha": "1e483df6c812e44c59a5a71f90692d835c245a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e483df6c812e44c59a5a71f90692d835c245a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c71225085d9b18c54d39bc2601f080c16d99834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c71225085d9b18c54d39bc2601f080c16d99834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c71225085d9b18c54d39bc2601f080c16d99834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c71225085d9b18c54d39bc2601f080c16d99834/comments", "author": null, "committer": null, "parents": [{"sha": "617d8e43f95f1dc7fdeebf980723a675a233b0db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617d8e43f95f1dc7fdeebf980723a675a233b0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617d8e43f95f1dc7fdeebf980723a675a233b0db"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "ecfad0fe5fec4756cfc70b90cbf83aac56d1bdb1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c71225085d9b18c54d39bc2601f080c16d99834/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c71225085d9b18c54d39bc2601f080c16d99834/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c71225085d9b18c54d39bc2601f080c16d99834", "patch": "@@ -1,3 +1,12 @@\n+2016-04-21  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* name-lookup.c (free_saved_scope): New free list of saved_scope\n+\tstructures.\n+\t(push_to_top_level): Attempt to reuse a saved_scope struct\n+\tfrom free_saved_scope instead of allocating a new one each time.\n+\t(pop_from_top_level_1): Chain the now-unused saved_scope structure\n+\tonto free_saved_scope.\n+\n 2016-04-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70540"}, {"sha": "86d260c83c100085d0f92bff8a74f9accb5db1ff", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c71225085d9b18c54d39bc2601f080c16d99834/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c71225085d9b18c54d39bc2601f080c16d99834/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=5c71225085d9b18c54d39bc2601f080c16d99834", "patch": "@@ -6135,6 +6135,10 @@ store_class_bindings (vec<cp_class_binding, va_gc> *names,\n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n }\n \n+/* A chain of saved_scope structures awaiting reuse.  */\n+\n+static GTY((deletable)) struct saved_scope *free_saved_scope;\n+\n void\n push_to_top_level (void)\n {\n@@ -6145,7 +6149,21 @@ push_to_top_level (void)\n   bool need_pop;\n \n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n-  s = ggc_cleared_alloc<saved_scope> ();\n+\n+  /* Reuse or create a new structure for this saved scope.  */\n+  if (free_saved_scope != NULL)\n+    {\n+      s = free_saved_scope;\n+      free_saved_scope = s->prev;\n+\n+      vec<cxx_saved_binding, va_gc> *old_bindings = s->old_bindings;\n+      memset (s, 0, sizeof (*s));\n+      /* Also reuse the structure's old_bindings vector.  */\n+      vec_safe_truncate (old_bindings, 0);\n+      s->old_bindings = old_bindings;\n+    }\n+  else\n+    s = ggc_cleared_alloc<saved_scope> ();\n \n   b = scope_chain ? current_binding_level : 0;\n \n@@ -6238,6 +6256,11 @@ pop_from_top_level_1 (void)\n   current_function_decl = s->function_decl;\n   cp_unevaluated_operand = s->unevaluated_operand;\n   c_inhibit_evaluation_warnings = s->inhibit_evaluation_warnings;\n+\n+  /* Make this saved_scope structure available for reuse by\n+     push_to_top_level.  */\n+  s->prev = free_saved_scope;\n+  free_saved_scope = s;\n }\n \n /* Wrapper for pop_from_top_level_1.  */"}]}