{"sha": "5a2c19863869535ff6487951a5732adb114bfb4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEyYzE5ODYzODY5NTM1ZmY2NDg3OTUxYTU3MzJhZGIxMTRiZmI0YQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-09-14T09:21:15Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-09-14T09:21:15Z"}, "message": "re PR tree-optimization/45470 (ICE: verify_flow_info failed: BB 2 can not throw but has an EH edge with -ftree-vectorize -fnon-call-exceptions)\n\n\n\tPR tree-optimization/45470\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): Fail if a statement\n\tcan throw an exception.\n\t* tree-vect-stmts.c (vectorizable_call): Likewise.\n\nFrom-SVN: r164270", "tree": {"sha": "6da9c4af4cb3e9b8356610815ee0416a055f567b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da9c4af4cb3e9b8356610815ee0416a055f567b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a2c19863869535ff6487951a5732adb114bfb4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a2c19863869535ff6487951a5732adb114bfb4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a2c19863869535ff6487951a5732adb114bfb4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a2c19863869535ff6487951a5732adb114bfb4a/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f78283b38be196f4c8050688853404d41e7d8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f78283b38be196f4c8050688853404d41e7d8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f78283b38be196f4c8050688853404d41e7d8d1"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "062d25b48053ef98bbb23349d131aaf97a740214", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -1,3 +1,10 @@\n+2010-09-14  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45470\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Fail if a statement\n+\tcan throw an exception.\n+\t* tree-vect-stmts.c (vectorizable_call): Likewise.\t\n+\n 2010-09-14  DJ Delorie  <dj@redhat.com>\n \n \tPR target/44749"}, {"sha": "56b953c7ed46e4769ab24baed58c9b905e088cd7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -1,3 +1,9 @@\n+2010-09-14  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45470\n+\t* g++.dg/vect/pr45470-a.cc: New test.\n+\t* g++.dg/vect/pr45470-a.cc: New test.\n+\n 2010-09-10  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \tPR target/42070"}, {"sha": "474f3d6479c51e46b193330946943d969f51ee8c", "filename": "gcc/testsuite/g++.dg/vect/pr45470-a.cc", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-a.cc?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -ftree-vectorize -fnon-call-exceptions\" } */\n+\n+struct A\n+{\n+  A (): a (0), b (0), c (0)\n+  {\n+  };\n+  ~A ();\n+  int a, b, c;\n+};\n+\n+struct B\n+{\n+  B ();\n+  A a1;\n+  A a2;\n+};\n+\n+B::B ()\n+{\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "279a1899cff0ca3e0bd153d189def9152a7740fb", "filename": "gcc/testsuite/g++.dg/vect/pr45470-b.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-b.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-b.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr45470-b.cc?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -ftree-vectorize -fno-vect-cost-model -fnon-call-exceptions\" } */\n+\n+template < typename _Tp > struct new_allocator\n+{\n+  typedef _Tp * pointer;\n+    template < typename > struct rebind\n+  {\n+    typedef new_allocator other;\n+  };\n+\n+};\n+\n+template < typename _Tp > struct allocator:public new_allocator < _Tp >\n+{};\n+\n+template < typename _Tp, typename _Alloc > struct _Vector_base\n+{\n+  typedef typename _Alloc::template rebind < _Tp >::other _Tp_alloc_type;\n+  struct\n+  {\n+    typename _Tp_alloc_type::pointer _M_start;\n+    typename _Tp_alloc_type::pointer _M_finish;\n+    typename _Tp_alloc_type::pointer _M_end_of_storage;\n+  };\n+\n+};\n+\n+template\n+  <\n+  typename\n+  _Tp,\n+  typename\n+  _Alloc = allocator < _Tp > >struct vector:_Vector_base < _Tp, _Alloc >\n+{\n+  typedef _Vector_base < _Tp, _Alloc > _Base;\n+    vector ():_Base ()\n+  {}\n+   ~vector ();\n+}\n+;\n+struct LoadGraph\n+{\n+  LoadGraph (int);\n+    vector < struct _GdkColor >colors;\n+    vector < float >data_block;\n+};\n+\n+LoadGraph::LoadGraph (int)\n+{}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "264a107b71b105dc86effe63de9fd49109e8c3a8", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -2542,6 +2542,17 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n       offset = unshare_expr (DR_OFFSET (dr));\n       init = unshare_expr (DR_INIT (dr));\n \n+      if (stmt_could_throw_p (stmt))\n+        {\n+          if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n+            {\n+              fprintf (vect_dump, \"not vectorized: statement can throw an \"\n+                       \"exception \");\n+              print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n+            }\n+          return false;\n+        }\n+\n       /* Update DR field in stmt_vec_info struct.  */\n \n       /* If the dataref is in an inner-loop of the loop that is considered for"}, {"sha": "5069c9e55cf7e8b0cedb1f343a2bdd1378966c45", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a2c19863869535ff6487951a5732adb114bfb4a/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=5a2c19863869535ff6487951a5732adb114bfb4a", "patch": "@@ -1343,6 +1343,9 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt)\n   if (TREE_CODE (gimple_call_lhs (stmt)) != SSA_NAME)\n     return false;\n \n+  if (stmt_could_throw_p (stmt))\n+    return false;\n+\n   vectype_out = STMT_VINFO_VECTYPE (stmt_info);\n \n   /* Process function arguments.  */"}]}