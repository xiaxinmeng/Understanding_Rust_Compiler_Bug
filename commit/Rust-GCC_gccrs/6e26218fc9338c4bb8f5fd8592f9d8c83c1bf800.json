{"sha": "6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyNjIxOGZjOTMzOGM0YmI4ZjVmZDg1OTJmOWQ4YzgzYzFiZjgwMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@cygnus.com", "date": "1997-12-31T11:48:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-12-31T11:48:25Z"}, "message": "configure.in: Set and subsitute host_exeext.\n\n\t* configure.in: Set and subsitute host_exeext.  Use it when creating\n\tthe assembler and linker symlinks.\n\t* configure: Rebuild.\n\t* Makefile.in (exeext): Set to @host_exeext@.\n\t(build_exeext): New variable, set to @build_exeext@.\n\t(FLAGS_TO_PASS): Pass down build_exeext.\n\t(STAGESTUFF): Use build_exeext, not exeext, for gen* and bi*\n \tprograms.\n\nFrom-SVN: r17267", "tree": {"sha": "205781032e11e4485790eda39797ff4d8b8dbde1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/205781032e11e4485790eda39797ff4d8b8dbde1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/comments", "author": null, "committer": null, "parents": [{"sha": "1b31097e5d20d1f200992919126e633b85d323dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b31097e5d20d1f200992919126e633b85d323dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b31097e5d20d1f200992919126e633b85d323dc"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "b058f7d67af71664eb941d89e961be7a4835288f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "patch": "@@ -1,3 +1,14 @@\n+Wed Dec 31 14:42:18 1997  Ian Lance Taylor  <ian@cygnus.com>\n+\n+\t* configure.in: Set and subsitute host_exeext.  Use it when creating\n+\tthe assembler and linker symlinks.\n+\t* configure: Rebuild.\n+\t* Makefile.in (exeext): Set to @host_exeext@.\n+\t(build_exeext): New variable, set to @build_exeext@.\n+\t(FLAGS_TO_PASS): Pass down build_exeext.\n+\t(STAGESTUFF): Use build_exeext, not exeext, for gen* and bi*\n+ \tprograms.\n+\n Wed Dec 31 10:05:44 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* mn10200.md (addsi3, subsi3): Fix thinkos."}, {"sha": "d4a682a3d949de53faf074f4869389d8421d35e3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "patch": "@@ -240,7 +240,8 @@ infodir = @infodir@\n # Extension (if any) to put in installed man-page filename.\n manext = .1\n objext = .o\n-exeext = @build_exeext@\n+exeext = @host_exeext@\n+build_exeext = @build_exeext@\n \n # Directory in which to put man pages.\n mandir = @mandir@/man1\n@@ -559,6 +560,7 @@ FLAGS_TO_PASS = \\\n \t\"SHELL=$(SHELL)\" \\\n \t\"STAGE_PREFIX=@stage_prefix_set_by_configure@\" \\\n \t\"exeext=$(exeext)\" \\\n+\t\"build_exeext=$(build_exeext)\" \\\n \t\"objext=$(objext)\" \\\n \t\"exec_prefix=$(exec_prefix)\" \\\n \t\"prefix=$(prefix)\" \\\n@@ -611,12 +613,13 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  stamp-flags stamp-config stamp-codes stamp-mlib \\\n  stamp-output stamp-recog stamp-emit stamp-extract stamp-peep \\\n  stamp-attr stamp-attrtab stamp-opinit stamp-proto stamp-crt stamp-crtS stamp-crt0 \\\n- genemit$(exeext) genoutput$(exeext) genrecog$(exeext) genextract$(exeext) \\\n- genflags$(exeext) gencodes$(exeext) genconfig$(exeext) genpeep$(exeext) \\\n- genattrtab$(exeext) genattr$(exeext) genopinit$(exeext) \\\n+ genemit$(build_exeext) genoutput$(build_exeext) genrecog$(build_exeext) \\\n+ genextract$(build_exeext) genflags$(build_exeext) gencodes$(build_exeext) \\\n+ genconfig$(build_exeext) genpeep$(build_exeext) genattrtab$(build_exeext) \\\n+ genattr$(build_exeext) genopinit$(build_exeext) \\\n  $(BC_ALL) \\\n  stamp-bcarity stamp-bcopcode stamp-bcopname \\\n- bi-arity$(exeext) bi-opcode$(exeext) bi-opname$(exeext) \\\n+ bi-arity$(build_exeext) bi-opcode$(build_exeext) bi-opname$(build_exeext) \\\n  xgcc$(exeext) cc1$(exeext) cpp$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(CCCP)$(exeext) cc1obj$(exeext) enquire$(exeext) \\"}, {"sha": "00e0b6045c508bc4abeb1d824c7d90b110b8217a", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "patch": "@@ -3025,6 +3025,7 @@ build_exeext=\n host_xm_file=\n host_xmake_file=\n host_truncate_target=\n+host_exeext=\n \n # Decode the host machine, then the target machine.\n # For the host machine, we save the xm_file variable as host_xm_file;\n@@ -5522,6 +5523,7 @@ for machine in $build $host $target; do\n \t\t\thost_truncate_target=$truncate_target\n \t\t\thost_extra_gcc_objs=$extra_gcc_objs\n \t\t\thost_extra_objs=$extra_host_objs\n+\t\t\thost_exeext=$exeext\n \t\t\tpass2done=yes\n \t\tfi\n \tfi\n@@ -5775,15 +5777,15 @@ fi\n \n # If we have gas in the build tree, make a link to it.\n if [ -f ../gas/Makefile ]; then\n-\trm -f as; $symbolic_link ../gas/as-new as 2>/dev/null\n+\trm -f as; $symbolic_link ../gas/as-new$host_exeext as$host_exeext 2>/dev/null\n fi\n \n # If we have ld in the build tree, make a link to it.\n if [ -f ../ld/Makefile ]; then\n #\tif [[ x$use_collect2 = x ]]; then\n-#\t\trm -f ld; $symbolic_link ../ld/ld-new ld 2>/dev/null\n+#\t\trm -f ld; $symbolic_link ../ld/ld-new$host_exeext ld$host_exeext 2>/dev/null\n #\telse\n-\t\trm -f collect-ld; $symbolic_link ../ld/ld-new collect-ld 2>/dev/null\n+\t\trm -f collect-ld; $symbolic_link ../ld/ld-new$host_exeext collect-ld$host_exeext 2>/dev/null\n #\tfi\n fi\n \n@@ -6012,6 +6014,7 @@ ${CONFIG_SHELL-/bin/sh} $srcdir/configure.frag $srcdir \"$subdirs\" \"$dep_host_xma\n \n \n \n+\n \n \n # Echo that links are built\n@@ -6243,6 +6246,7 @@ s%@gxx_include_dir@%$gxx_include_dir%g\n s%@fixincludes@%$fixincludes%g\n s%@build_install_headers_dir@%$build_install_headers_dir%g\n s%@build_exeext@%$build_exeext%g\n+s%@host_exeext@%$host_exeext%g\n s%@float_format@%$float_format%g\n s%@will_use_collect2@%$will_use_collect2%g\n s%@maybe_use_collect2@%$maybe_use_collect2%g\n@@ -6487,6 +6491,7 @@ version='${version}'\n local_prefix='${local_prefix}'\n build_install_headers_dir='${build_install_headers_dir}'\n build_exeext='${build_exeext}'\n+host_exeext='${host_exeext}'\n out_file='${out_file}'\n gdb_needs_out_file_path='${gdb_needs_out_file_path}'\n SET_MAKE='${SET_MAKE}'"}, {"sha": "677ddaf73c3c4583945e34793b08a8ea1a04494a", "filename": "gcc/configure.in", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=6e26218fc9338c4bb8f5fd8592f9d8c83c1bf800", "patch": "@@ -201,6 +201,7 @@ build_exeext=\n host_xm_file=\n host_xmake_file=\n host_truncate_target=\n+host_exeext=\n \n # Decode the host machine, then the target machine.\n # For the host machine, we save the xm_file variable as host_xm_file;\n@@ -2698,6 +2699,7 @@ for machine in $build $host $target; do\n \t\t\thost_truncate_target=$truncate_target\n \t\t\thost_extra_gcc_objs=$extra_gcc_objs\n \t\t\thost_extra_objs=$extra_host_objs\n+\t\t\thost_exeext=$exeext\n \t\t\tpass2done=yes\n \t\tfi\n \tfi\n@@ -2951,15 +2953,15 @@ fi\n \n # If we have gas in the build tree, make a link to it.\n if [[ -f ../gas/Makefile ]]; then\n-\trm -f as; $symbolic_link ../gas/as-new as 2>/dev/null\n+\trm -f as; $symbolic_link ../gas/as-new$host_exeext as$host_exeext 2>/dev/null\n fi\n \n # If we have ld in the build tree, make a link to it.\n if [[ -f ../ld/Makefile ]]; then\n #\tif [[ x$use_collect2 = x ]]; then\n-#\t\trm -f ld; $symbolic_link ../ld/ld-new ld 2>/dev/null\n+#\t\trm -f ld; $symbolic_link ../ld/ld-new$host_exeext ld$host_exeext 2>/dev/null\n #\telse\n-\t\trm -f collect-ld; $symbolic_link ../ld/ld-new collect-ld 2>/dev/null\n+\t\trm -f collect-ld; $symbolic_link ../ld/ld-new$host_exeext collect-ld$host_exeext 2>/dev/null\n #\tfi\n fi\n \n@@ -3174,6 +3176,7 @@ AC_SUBST(gxx_include_dir)\n AC_SUBST(fixincludes)\n AC_SUBST(build_install_headers_dir)\n AC_SUBST(build_exeext)\n+AC_SUBST(host_exeext)\n AC_SUBST(float_format)\n AC_SUBST(will_use_collect2)\n AC_SUBST(maybe_use_collect2)\n@@ -3269,6 +3272,7 @@ version='${version}'\n local_prefix='${local_prefix}'\n build_install_headers_dir='${build_install_headers_dir}'\n build_exeext='${build_exeext}'\n+host_exeext='${host_exeext}'\n out_file='${out_file}'\n gdb_needs_out_file_path='${gdb_needs_out_file_path}'\n SET_MAKE='${SET_MAKE}'"}]}