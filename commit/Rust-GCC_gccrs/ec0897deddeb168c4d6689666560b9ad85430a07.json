{"sha": "ec0897deddeb168c4d6689666560b9ad85430a07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwODk3ZGVkZGViMTY4YzRkNjY4OTY2NjU2MGI5YWQ4NTQzMGEwNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-07-12T21:57:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-07-12T21:57:58Z"}, "message": "re PR c++/28217 (ICE in tree_int_cst_sgn)\n\n        PR c++/28217\n        * semantics.c (note_decl_for_pch): Don't premangle templates.\n\nFrom-SVN: r115399", "tree": {"sha": "f54e093ca7a337a08299d4dbe6679086cab57ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f54e093ca7a337a08299d4dbe6679086cab57ce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec0897deddeb168c4d6689666560b9ad85430a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0897deddeb168c4d6689666560b9ad85430a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec0897deddeb168c4d6689666560b9ad85430a07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0897deddeb168c4d6689666560b9ad85430a07/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f67a67d831550961badfdd84556bcffcfded5651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67a67d831550961badfdd84556bcffcfded5651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67a67d831550961badfdd84556bcffcfded5651"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c7aa9186c9332a03dfda7bc40e4b013da705b880", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0897deddeb168c4d6689666560b9ad85430a07/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0897deddeb168c4d6689666560b9ad85430a07/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec0897deddeb168c4d6689666560b9ad85430a07", "patch": "@@ -1,3 +1,8 @@\n+2006-07-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/28217\n+\t* semantics.c (note_decl_for_pch): Don't premangle templates.\n+\n 2006-07-12  Martin Michlmayr  <tbm@cyrius.com>\n \n \t* typeck.c (string_conv_p): Remove spurious quotation mark in"}, {"sha": "3d5957aa6fb8ed4397e0f1bd8564cc12bcc1630f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0897deddeb168c4d6689666560b9ad85430a07/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0897deddeb168c4d6689666560b9ad85430a07/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ec0897deddeb168c4d6689666560b9ad85430a07", "patch": "@@ -2339,8 +2339,9 @@ note_decl_for_pch (tree decl)\n \n   /* There's a good chance that we'll have to mangle names at some\n      point, even if only for emission in debugging information.  */\n-  if (TREE_CODE (decl) == VAR_DECL\n-      || TREE_CODE (decl) == FUNCTION_DECL)\n+  if ((TREE_CODE (decl) == VAR_DECL\n+       || TREE_CODE (decl) == FUNCTION_DECL)\n+      && !processing_template_decl)\n     mangle_decl (decl);\n }\n "}]}