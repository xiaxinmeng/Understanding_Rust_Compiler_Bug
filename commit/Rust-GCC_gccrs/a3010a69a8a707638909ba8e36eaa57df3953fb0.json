{"sha": "a3010a69a8a707638909ba8e36eaa57df3953fb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMwMTBhNjlhOGE3MDc2Mzg5MDliYThlMzZlYWE1N2RmMzk1M2ZiMA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-01-14T18:51:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-01-14T18:51:46Z"}, "message": "cris.h (ASM_SPEC, [...]): Check for mcpu not cpu.\n\n\t* config/cris/cris.h (ASM_SPEC, CRIS_ASM_SUBTARGET_SPEC): Check\n\tfor mcpu not cpu.\n\t* config/cris/linux.h (CRIS_CPP_SUBTARGET_SPEC,\n\tCRIS_CC1_SUBTARGET_SPEC, CRIS_ASM_SUBTARGET_SPEC): Check for mcpu\n\tnot cpu.\n\t(CRIS_LINK_SUBTARGET_SPEC): Don't generate -rpath-link options.\n\tDon't handle -shlib.\n\nFrom-SVN: r168808", "tree": {"sha": "158f5b6c33a52be2b8fe40e25602d56c76f100bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/158f5b6c33a52be2b8fe40e25602d56c76f100bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3010a69a8a707638909ba8e36eaa57df3953fb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3010a69a8a707638909ba8e36eaa57df3953fb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3010a69a8a707638909ba8e36eaa57df3953fb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3010a69a8a707638909ba8e36eaa57df3953fb0/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7f2f53750d33ca0926925646c041abec3c76634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f2f53750d33ca0926925646c041abec3c76634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f2f53750d33ca0926925646c041abec3c76634"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "2e7f4034386446098b7fc088f0eac3276b1430f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3010a69a8a707638909ba8e36eaa57df3953fb0", "patch": "@@ -1,3 +1,13 @@\n+2011-01-14  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/cris/cris.h (ASM_SPEC, CRIS_ASM_SUBTARGET_SPEC): Check\n+\tfor mcpu not cpu.\n+\t* config/cris/linux.h (CRIS_CPP_SUBTARGET_SPEC,\n+\tCRIS_CC1_SUBTARGET_SPEC, CRIS_ASM_SUBTARGET_SPEC): Check for mcpu\n+\tnot cpu.\n+\t(CRIS_LINK_SUBTARGET_SPEC): Don't generate -rpath-link options.\n+\tDon't handle -shlib.\n+\n 2011-01-14  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/avr/avr.h (CPP_SPEC): Don't handle -posix."}, {"sha": "0e69e694893ad28b0f25a6d3159e8063d9ac086c", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=a3010a69a8a707638909ba8e36eaa57df3953fb0", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for GCC.  Part of the machine description for CRIS.\n    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008,\n-   2009, 2010 Free Software Foundation, Inc.\n+   2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n \n This file is part of GCC.\n@@ -193,12 +193,12 @@ extern int cris_cpu_version;\n #define ASM_SPEC \\\n  MAYBE_AS_NO_MUL_BUG_ABORT \\\n  \"%(asm_subtarget)\\\n- %{march=*:%{cpu=*:%edo not specify both -march=... and -mcpu=...}}\\\n+ %{march=*:%{mcpu=*:%edo not specify both -march=... and -mcpu=...}}\\\n  %{march=v32:--march=v32} %{mcpu=v32:--march=v32}\"\n \n /* For the cris-*-elf subtarget.  */\n #define CRIS_ASM_SUBTARGET_SPEC \\\n- \"--em=criself %{!march=*:%{!cpu=*:\" CRIS_DEFAULT_ASM_ARCH_OPTION \"}}\"\n+ \"--em=criself %{!march=*:%{!mcpu=*:\" CRIS_DEFAULT_ASM_ARCH_OPTION \"}}\"\n \n /* FIXME: We should propagate the -melf option to make the criself\n    \"emulation\" unless a linker script is provided (-T*), but I don't know\n@@ -207,10 +207,8 @@ extern int cris_cpu_version;\n    time being.\n \n    Note that -melf overrides -maout except that a.out-compiled libraries\n-   are linked in (multilibbing).  The somewhat cryptic -rpath-link pair is\n-   to avoid *only* picking up the linux multilib subdir from the \"-B./\"\n-   option during build, while still giving it preference.  We'd need some\n-   %s-variant that checked for existence of some specific file.  */\n+   are linked in (multilibbing).  We'd need some %s-variant that\n+   checked for existence of some specific file.  */\n #undef LINK_SPEC\n #define LINK_SPEC \\\n  \"%{v:--verbose}\\"}, {"sha": "bf2f5f9c954ab2bc980c00cd8584c0761bbe2e86", "filename": "gcc/config/cris/linux.h", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3010a69a8a707638909ba8e36eaa57df3953fb0/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=a3010a69a8a707638909ba8e36eaa57df3953fb0", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for GCC.  Part of the machine description for CRIS.\n-   Copyright (C) 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n \n@@ -56,35 +56,35 @@ along with GCC; see the file COPYING3.  If not see\n #if TARGET_CPU_DEFAULT == 32\n # define CRIS_CPP_SUBTARGET_SPEC \\\n   \"%{pthread:-D_REENTRANT}\\\n-   %{!march=*:%{!cpu=*:-D__arch_v32 -D__CRIS_arch_version=32}}\"\n+   %{!march=*:%{!mcpu=*:-D__arch_v32 -D__CRIS_arch_version=32}}\"\n #else\n # define CRIS_CPP_SUBTARGET_SPEC \\\n   \"%{pthread:-D_REENTRANT}\\\n-   %{!march=*:%{!cpu=*:-D__arch_v10 -D__CRIS_arch_version=10}}\"\n+   %{!march=*:%{!mcpu=*:-D__arch_v10 -D__CRIS_arch_version=10}}\"\n #endif\n \n #undef CRIS_CC1_SUBTARGET_SPEC\n #if TARGET_CPU_DEFAULT == 32\n # define CRIS_CC1_SUBTARGET_SPEC \\\n- \"%{!march=*:%{!cpu=*:-march=v32}}\"\n+ \"%{!march=*:%{!mcpu=*:-march=v32}}\"\n #define CRIS_SUBTARGET_DEFAULT_ARCH MASK_AVOID_GOTPLT\n #else\n # define CRIS_CC1_SUBTARGET_SPEC \\\n- \"%{!march=*:%{!cpu=*:-march=v10}}\"\n+ \"%{!march=*:%{!mcpu=*:-march=v10}}\"\n #define CRIS_SUBTARGET_DEFAULT_ARCH 0\n #endif\n \n #undef CRIS_ASM_SUBTARGET_SPEC\n #if TARGET_CPU_DEFAULT == 32\n # define CRIS_ASM_SUBTARGET_SPEC \\\n  \"--em=criself \\\n-  %{!march=*:%{!cpu=*:--march=v32}} \\\n+  %{!march=*:%{!mcpu=*:--march=v32}} \\\n   %{!fleading-underscore:--no-underscore}\\\n   %{fPIC|fpic|fPIE|fpie: --pic}\"\n #else\n # define CRIS_ASM_SUBTARGET_SPEC \\\n  \"--em=criself \\\n-  %{!march=*:%{!cpu=*:--march=v10}} \\\n+  %{!march=*:%{!mcpu=*:--march=v10}} \\\n   %{!fleading-underscore:--no-underscore}\\\n   %{fPIC|fpic|fPIE|fpie: --pic}\"\n #endif\n@@ -105,15 +105,11 @@ along with GCC; see the file COPYING3.  If not see\n \n #define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n \n-/* We need an -rpath-link to ld.so.1, and presumably to each directory\n-   specified with -B.  */\n #undef CRIS_LINK_SUBTARGET_SPEC\n #define CRIS_LINK_SUBTARGET_SPEC \\\n  \"-mcrislinux\\\n-  %{B*:-rpath-link %*}\\\n-  %{!nostdlib:-rpath-link ../sys-include/asm/../../lib%s}\\\n   %{shared} %{static}\\\n-  %{symbolic:-Bdynamic} %{shlib:-Bdynamic} %{static:-Bstatic}\\\n+  %{symbolic:-Bdynamic} %{static:-Bstatic}\\\n   %{!shared:%{!static:\\\n               %{rdynamic:-export-dynamic}\\\n               -dynamic-linker \" LINUX_DYNAMIC_LINKER \"}}\\"}]}