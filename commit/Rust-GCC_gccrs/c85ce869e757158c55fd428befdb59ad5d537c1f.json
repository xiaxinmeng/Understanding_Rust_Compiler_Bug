{"sha": "c85ce869e757158c55fd428befdb59ad5d537c1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1Y2U4NjllNzU3MTU4YzU1ZmQ0MjhiZWZkYjU5YWQ1ZDUzN2MxZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-07-02T13:19:59Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-07-02T13:19:59Z"}, "message": "c.opt, [...]: Remove \".\" from end of help texts.\n\n\t* c.opt, common.opt, config/bfin/bfin.opt, config/pa/pa.opt,\n\tconfig/rs6000/rs6000.opt, params.def: Remove \".\" from end of help\n\ttexts.\n\t* config/avr/avr.c: Do not use '`' as left quote.\n\t* config/rs6000/rs6000.c, config/s390/s390.c, opts.c, tree.c:\n\tRemove \".\" from end of diagnostics.  Make diagnostics start with\n\tlowercase letter.\n\ncp:\n\t* name-lookup.c, parser.c: Use %q, %< and %> to quote in\n\tdiagnostics.\n\nfortran:\n\t* lang.opt: Remove \".\" from end of help texts.\n\nobjc:\n\t* objc-act.c: Use %q to quote in diagnostics.\n\nFrom-SVN: r101533", "tree": {"sha": "3339d42d6bdaab3f873b91e89993fa54cc7f96e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3339d42d6bdaab3f873b91e89993fa54cc7f96e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c85ce869e757158c55fd428befdb59ad5d537c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85ce869e757158c55fd428befdb59ad5d537c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c85ce869e757158c55fd428befdb59ad5d537c1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85ce869e757158c55fd428befdb59ad5d537c1f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee158440e16ef7272d823b9bd5e6d414968fd8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee158440e16ef7272d823b9bd5e6d414968fd8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dee158440e16ef7272d823b9bd5e6d414968fd8a"}], "stats": {"total": 141, "additions": 82, "deletions": 59}, "files": [{"sha": "ca0762e7d45e5b61b755909d46ed6b58febf3412", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -1,3 +1,13 @@\n+2005-07-02  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* c.opt, common.opt, config/bfin/bfin.opt, config/pa/pa.opt,\n+\tconfig/rs6000/rs6000.opt, params.def: Remove \".\" from end of help\n+\ttexts.\n+\t* config/avr/avr.c: Do not use '`' as left quote.\n+\t* config/rs6000/rs6000.c, config/s390/s390.c, opts.c, tree.c:\n+\tRemove \".\" from end of diagnostics.  Make diagnostics start with\n+\tlowercase letter.\n+\n 2005-07-02  Zack Weinberg  <zack@codesourcery.com>\n             Joseph S. Myers  <joseph@codesourcery.com>\n "}, {"sha": "b45df36120a914bfb5cec7371e181488a18822c1", "filename": "gcc/c.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -417,11 +417,11 @@ Give strings the type \\\"array of char\\\"\n \n Wpointer-sign\n C ObjC Var(warn_pointer_sign) Init(1)\n-Warn when a pointer differs in signedness in an assignment.\n+Warn when a pointer differs in signedness in an assignment\n \n ansi\n C ObjC C++ ObjC++\n-A synonym for -std=c89 (for C) or -std=c++98 (for C++).\n+A synonym for -std=c89 (for C) or -std=c++98 (for C++)\n \n d\n C ObjC C++ ObjC++ Joined\n@@ -493,7 +493,7 @@ C ObjC C++ ObjC++ Joined RejectNegative\n \n finput-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n--finput-charset=<cset>\tSpecify the default character set for source files.\n+-finput-charset=<cset>\tSpecify the default character set for source files\n \n \n fexternal-templates\n@@ -680,7 +680,7 @@ C++ ObjC++\n \n fthreadsafe-statics\n C++ ObjC++\n--fno-threadsafe-statics\tDo not generate thread-safe code for initializing local statics.\n+-fno-threadsafe-statics\tDo not generate thread-safe code for initializing local statics\n \n funsigned-bitfields\n C ObjC C++ ObjC++\n@@ -798,7 +798,7 @@ Generate C header of platform-specific features\n \n print-pch-checksum\n C ObjC C++ ObjC++\n-Print a checksum of the executable for PCH validity checking, and stop.\n+Print a checksum of the executable for PCH validity checking, and stop\n \n remap\n C ObjC C++ ObjC++"}, {"sha": "ddac0b4f0a31aa99a6a785055b31d7b71701a984", "filename": "gcc/common.opt", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -345,7 +345,7 @@ Common Joined RejectNegative\n \n fdiagnostics-show-option\n Common\n-Amend appropriate diagnostic messages with the command line option that controls them.\n+Amend appropriate diagnostic messages with the command line option that controls them\n \n fdump-\n Common Joined RejectNegative\n@@ -433,7 +433,7 @@ elimination\n fgcse-after-reload\n Common Report Var(flag_gcse_after_reload)\n Perform global common subexpression elimination after register allocation\n-has finished.\n+has finished\n \n fguess-branch-probability\n Common Report Var(flag_guess_branch_prob)\n@@ -552,15 +552,15 @@ Move loop invariant computations out of loops\n \n fmudflap\n Common RejectNegative Report Var(flag_mudflap)\n-Add mudflap bounds-checking instrumentation for single-threaded program.\n+Add mudflap bounds-checking instrumentation for single-threaded program\n \n fmudflapth\n Common RejectNegative Report Var(flag_mudflap_threads)\n-Add mudflap bounds-checking instrumentation for multi-threaded program.\n+Add mudflap bounds-checking instrumentation for multi-threaded program\n \n fmudflapir\n Common RejectNegative Report Var(flag_mudflap_ignore_reads)\n-Ignore read operations when inserting mudflap instrumentation.\n+Ignore read operations when inserting mudflap instrumentation\n \n freschedule-modulo-scheduled-loops\n Common Report Var(flag_resched_modulo_sched)\n@@ -753,7 +753,7 @@ Mark data as shared rather than private\n \n fshow-column\n Common C ObjC C++ ObjC++ Report Var(flag_show_column) Init(1)\n-Show column numbers in diagnostics, when available.  Default on.\n+Show column numbers in diagnostics, when available.  Default on\n \n fsignaling-nans\n Common Report Var(flag_signaling_nans)\n@@ -769,11 +769,11 @@ Use value profiling for speculative prefetching\n \n fsplit-ivs-in-unroller\n Common Report Var(flag_split_ivs_in_unroller) Init(1)\n-Split lifetimes of induction variables when loops are unrolled.\n+Split lifetimes of induction variables when loops are unrolled\n \n fvariable-expansion-in-unroller\n Common Report Var(flag_variable_expansion_in_unroller) \n-Apply variable expansion when loops are unrolled.\n+Apply variable expansion when loops are unrolled\n \n ; Emit code to probe the stack, to help detect stack overflow; also\n ; may cause large objects to be allocated dynamically.\n@@ -869,7 +869,7 @@ Coalesce memory temporaries in the SSA->normal pass\n \n ftree-copyrename\n Common Report Var(flag_tree_copyrename)\n-Replace SSA temporaries with better names in copies.\n+Replace SSA temporaries with better names in copies\n \n ftree-copy-prop\n Common Report Var(flag_tree_copy_prop)\n@@ -933,7 +933,7 @@ Replace temporary expressions in the SSA->normal pass\n \n ftree-lrs\n Common Report Var(flag_tree_live_range_split)\n-Perform live range splitting during the SSA->normal pass.\n+Perform live range splitting during the SSA->normal pass\n \n ftree-vrp\n Common Report Var(flag_tree_vrp) Init(0)"}, {"sha": "e061021a2b07f17b6ec4a7d86a9cab217eed2c61", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -269,7 +269,7 @@ avr_override_options (void)\n \n   if (!t->name)\n     {\n-      fprintf (stderr, \"unknown MCU `%s' specified\\nKnown MCU names:\\n\",\n+      fprintf (stderr, \"unknown MCU '%s' specified\\nKnown MCU names:\\n\",\n \t       avr_mcu_name);\n       for (t = avr_mcu_types; t->name; t++)\n \tfprintf (stderr,\"   %s\\n\", t->name);\n@@ -4684,15 +4684,15 @@ avr_handle_fndecl_attribute (tree *node, tree name,\n         {\n           if (strncmp (func_name, \"__vector\", strlen (\"__vector\")) != 0)\n             {\n-              warning (0, \"`%s' appears to be a misspelled interrupt handler\",\n+              warning (0, \"%qs appears to be a misspelled interrupt handler\",\n                        func_name);\n             }\n         }\n       else if (strncmp (attr, \"signal\", strlen (\"signal\")) == 0)\n         {\n           if (strncmp (func_name, \"__vector\", strlen (\"__vector\")) != 0)\n             {\n-              warning (0, \"`%s' appears to be a misspelled signal handler\",\n+              warning (0, \"%qs appears to be a misspelled signal handler\",\n                        func_name);\n             }\n         }"}, {"sha": "da5fd59d08fe041d7046cf7ddc043d56c44e4210", "filename": "gcc/config/bfin/bfin.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -25,7 +25,7 @@ Omit frame pointer for leaf functions\n \n mlow64k\n Target Report Mask(LOW_64K)\n-Program is entirely located in low 64k of memory.\n+Program is entirely located in low 64k of memory\n \n mcsync\n Target Report Mask(CSYNC)"}, {"sha": "999af66b532f178129cec2dfd3f09a5231283753", "filename": "gcc/config/pa/pa.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fpa%2Fpa.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fpa%2Fpa.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -49,7 +49,7 @@ Generate fast indirect calls\n \n mfixed-range=\n Target RejectNegative Joined\n-Specify range of registers to make fixed.\n+Specify range of registers to make fixed\n \n mgas\n Target Report Mask(GAS)\n@@ -98,7 +98,7 @@ Use portable calling conventions\n \n mschedule=\n Target RejectNegative Joined\n-Specify CPU for scheduling purposes.  Valid arguments are 700, 7100, 7100LC, 7200, 7300, and 8000.\n+Specify CPU for scheduling purposes.  Valid arguments are 700, 7100, 7100LC, 7200, 7300, and 8000\n \n msoft-float\n Target Report Mask(SOFT_FLOAT)"}, {"sha": "a1cf22bedcf86f12905ee2fdd663f9fe007dfba2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -4051,9 +4051,9 @@ init_cumulative_args (CUMULATIVE_ARGS *cum, tree fntype,\n       && TARGET_ALTIVEC_ABI\n       && ALTIVEC_VECTOR_MODE (TYPE_MODE (TREE_TYPE (fntype))))\n     {\n-      error (\"Cannot return value in vector register because\"\n+      error (\"cannot return value in vector register because\"\n \t     \" altivec instructions are disabled, use -maltivec\"\n-\t     \" to enable them.\");\n+\t     \" to enable them\");\n     }\n }\n \f\n@@ -4297,9 +4297,9 @@ function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t{\n \t  cum->vregno++;\n \t  if (!TARGET_ALTIVEC)\n-\t    error (\"Cannot pass argument in vector register because\"\n+\t    error (\"cannot pass argument in vector register because\"\n \t\t   \" altivec instructions are disabled, use -maltivec\"\n-\t\t   \" to enable them.\");\n+\t\t   \" to enable them\");\n \n \t  /* PowerPC64 Linux and AIX allocate GPRs for a vector argument\n \t     even if it is going to be passed in a vector register."}, {"sha": "43392ddd8ea7ee51f4f6522a3658235b24ee88e1", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -164,7 +164,7 @@ Generate VRSAVE instructions when generating AltiVec code\n \n mvrsave=\n Target RejectNegative Joined\n--mvrsave=yes/no\tDeprecated option.  Use -mvrsave/-mno-vrsave instead.\n+-mvrsave=yes/no\tDeprecated option.  Use -mvrsave/-mno-vrsave instead\n \n misel\n Target Var(rs6000_isel)\n@@ -212,7 +212,7 @@ Warn about deprecated 'vector long ...' AltiVec type usage\n \n mfloat-gprs=\n Target RejectNegative Joined\n--mfloat-gprs=\tSelect GPR floating point method.\n+-mfloat-gprs=\tSelect GPR floating point method\n \n mlong-double-\n Target RejectNegative Joined UInteger"}, {"sha": "c5785337db36373fd43c7d5dc99321d2ca0ea436", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -1212,9 +1212,9 @@ override_options (void)\n \n   /* Sanity checks.  */\n   if (TARGET_ZARCH && !(s390_arch_flags & PF_ZARCH))\n-    error (\"z/Architecture mode not supported on %s.\", s390_arch_string);\n+    error (\"z/Architecture mode not supported on %s\", s390_arch_string);\n   if (TARGET_64BIT && !TARGET_ZARCH)\n-    error (\"64-bit ABI not supported in ESA/390 mode.\");\n+    error (\"64-bit ABI not supported in ESA/390 mode\");\n \n \n   /* Set processor cost function.  */\n@@ -1226,7 +1226,7 @@ override_options (void)\n \n   if (TARGET_BACKCHAIN && TARGET_PACKED_STACK && TARGET_HARD_FLOAT)\n     error (\"-mbackchain -mpacked-stack -mhard-float are not supported \"\n-\t   \"in combination.\");\n+\t   \"in combination\");\n \n   if (s390_stack_size)\n     {\n@@ -3781,7 +3781,7 @@ print_operand_address (FILE *file, rtx addr)\n   if (!s390_decompose_address (addr, &ad)\n       || (ad.base && !REG_OK_FOR_BASE_STRICT_P (ad.base))\n       || (ad.indx && !REG_OK_FOR_INDEX_STRICT_P (ad.indx)))\n-    output_operand_lossage (\"Cannot decompose address.\");\n+    output_operand_lossage (\"cannot decompose address\");\n \n   if (ad.disp)\n     output_addr_const (file, ad.disp);\n@@ -5801,7 +5801,7 @@ s390_frame_info (void)\n \n   cfun_frame_layout.frame_size = get_frame_size ();\n   if (!TARGET_64BIT && cfun_frame_layout.frame_size > 0x7fff0000)\n-    fatal_error (\"Total size of local variables exceeds architecture limit.\");\n+    fatal_error (\"total size of local variables exceeds architecture limit\");\n   \n   if (!TARGET_PACKED_STACK)\n     {"}, {"sha": "587d800789c50d7ad2c2910208b44de76c531f79", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -1,3 +1,8 @@\n+2005-07-02  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* name-lookup.c, parser.c: Use %q, %< and %> to quote in\n+\tdiagnostics.\n+\n 2005-07-02  Zack Weinberg  <zack@codesourcery.com>\n             Joseph S. Myers  <joseph@codesourcery.com>\n "}, {"sha": "d03fbb0462ee72591d5126f9c5594d41ebe221a4", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -2825,7 +2825,7 @@ set_decl_namespace (tree decl, tree scope, bool friendp)\n   if (scope == current_namespace)\n     {\n       if (at_namespace_scope_p ())\n-\terror (\"explicit qualification in declaration of `%D'\",\n+\terror (\"explicit qualification in declaration of %qD\",\n \t       decl);\n       return;\n     }"}, {"sha": "bd39a674c8667449bdca64117edb635555f8edaf", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -16290,7 +16290,7 @@ cp_parser_objc_expression (cp_parser* parser)\n \t  break;\n \t}\n     default:\n-      error (\"misplaced `@%D' Objective-C++ construct\", kwd->value);\n+      error (\"misplaced %<@%D%> Objective-C++ construct\", kwd->value);\n       cp_parser_skip_to_end_of_block_or_statement (parser);\n     }\n \n@@ -16431,7 +16431,7 @@ cp_parser_objc_encode_expression (cp_parser* parser)\n \n   if (!type)\n     {\n-      error (\"`@encode' must specify a type as an argument\");\n+      error (\"%<@encode%> must specify a type as an argument\");\n       return error_mark_node;\n     }\n \n@@ -17057,7 +17057,7 @@ cp_parser_objc_protocol_declaration (cp_parser* parser)\n   cp_lexer_consume_token (parser->lexer);  /* Eat '@protocol'.  */\n   if (cp_lexer_next_token_is_not (parser->lexer, CPP_NAME))\n     {\n-      error (\"identifier expected after `@protocol'\");\n+      error (\"identifier expected after %<@protocol%>\");\n       goto finish;\n     }\n \n@@ -17193,7 +17193,7 @@ cp_parser_objc_declaration (cp_parser* parser)\n       cp_parser_objc_end_implementation (parser);\n       break;\n     default:\n-      error (\"misplaced `@%D' Objective-C++ construct\", kwd->value);\n+      error (\"misplaced %<@%D%> Objective-C++ construct\", kwd->value);\n       cp_parser_skip_to_end_of_block_or_statement (parser);\n     }\n }\n@@ -17324,7 +17324,7 @@ cp_parser_objc_statement (cp_parser * parser) {\n     case RID_AT_THROW:\n       return cp_parser_objc_throw_statement (parser);\n     default:\n-      error (\"misplaced `@%D' Objective-C++ construct\", kwd->value);\n+      error (\"misplaced %<@%D%> Objective-C++ construct\", kwd->value);\n       cp_parser_skip_to_end_of_block_or_statement (parser);\n     }\n "}, {"sha": "55ba5ed0393a86dca82e78db63ed298020ebf4b4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -1,3 +1,7 @@\n+2005-07-02  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* lang.opt: Remove \".\" from end of help texts.\n+\n 2005-07-01  Jerry DeLisle  <jvdelisle@verizon.net>\n \n     * gfortran.texi: Fix typos and grammar."}, {"sha": "edc8a754c56dc4dfc3a7c6104b12842fc656045d", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -91,11 +91,11 @@ Specify that backslash in string introduces an escape character\n \n fdump-parse-tree\n F95\n-Display the code tree after parsing.\n+Display the code tree after parsing\n \n ff2c\n F95\n-Use f2c calling convention.\n+Use f2c calling convention\n \n ffixed-form\n F95\n@@ -127,7 +127,7 @@ F95 RejectNegative Joined UInteger\n \n fmax-identifier-length=\n F95 RejectNegative Joined UInteger\n--fmax-identifier-length=<n>\tMaximum identifier length.\n+-fmax-identifier-length=<n>\tMaximum identifier length\n \n fmax-stack-var-size=\n F95 RejectNegative Joined UInteger\n@@ -155,18 +155,18 @@ F95 RejectNegative Joined UInteger\n \n std=f95\n F95\n-Conform to the ISO Fortran 95 standard.\n+Conform to the ISO Fortran 95 standard\n \n std=f2003\n F95\n-Conform to the ISO Fortran 2003 standard.\n+Conform to the ISO Fortran 2003 standard\n \n std=gnu\n F95\n-Conform nothing in particular.\n+Conform nothing in particular\n \n std=legacy\n F95\n-Accept extensions to support legacy code.\n+Accept extensions to support legacy code\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "70972f1fc028884a72e0bf4b4c014ffde169f1f6", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -1,3 +1,7 @@\n+2005-07-02  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* objc-act.c: Use %q to quote in diagnostics.\n+\n 2005-07-02  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* objc-act.c: Use '+' flag instead of %J.  Use 'q' flag for"}, {"sha": "a3d32d8ffa6f1e5205fa1109e64fc203e7860079", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -7074,13 +7074,13 @@ add_instance_variable (tree class, int public, tree field_decl)\n \t  if (TYPE_NEEDS_CONSTRUCTING (field_type)\n \t      && !TYPE_HAS_DEFAULT_CONSTRUCTOR (field_type))\n \t    {\n-\t      warning (0, \"type `%s' has no default constructor to call\",\n+\t      warning (0, \"type %qs has no default constructor to call\",\n \t\t       type_name);\n \n \t      /* If we cannot call a constructor, we should also avoid\n \t\t calling the destructor, for symmetry.  */\n \t      if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (field_type))\n-\t\twarning (0, \"destructor for `%s' shall not be run either\",\n+\t\twarning (0, \"destructor for %qs shall not be run either\",\n \t\t\t type_name);\n \t    }\n         }\n@@ -7092,9 +7092,9 @@ add_instance_variable (tree class, int public, tree field_decl)\n \t    {\n \t      /* Vtable pointers are Real Bad(tm), since Obj-C cannot\n \t\t initialize them.  */\n-\t      error (\"type `%s' has virtual member functions\", type_name);\n-\t      error (\"illegal aggregate type `%s' specified \"\n-\t\t     \"for instance variable `%s'\",\n+\t      error (\"type %qs has virtual member functions\", type_name);\n+\t      error (\"illegal aggregate type %qs specified \"\n+\t\t     \"for instance variable %qs\",\n \t\t     type_name, ivar_name);\n \t      /* Return class as is without adding this ivar.  */\n \t      return class;\n@@ -7103,9 +7103,9 @@ add_instance_variable (tree class, int public, tree field_decl)\n \t  /* User-defined constructors and destructors are not known to Obj-C\n \t     and hence will not be called.  This may or may not be a problem. */\n \t  if (TYPE_NEEDS_CONSTRUCTING (field_type))\n-\t    warning (0, \"type `%s' has a user-defined constructor\", type_name);\n+\t    warning (0, \"type %qs has a user-defined constructor\", type_name);\n \t  if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (field_type))\n-\t    warning (0, \"type `%s' has a user-defined destructor\", type_name);\n+\t    warning (0, \"type %qs has a user-defined destructor\", type_name);\n \n \t  if (!warn_cxx_ivars)\n \t    {"}, {"sha": "db2a02bc3cae65e8eab7aa931c5d9e0341ba3f1d", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -687,7 +687,7 @@ decode_options (unsigned int argc, const char **argv)\n       && !targetm.have_named_sections)\n     {\n       inform \n-       (\"-freorder-blocks-and-partition does not work on this architecture.\");\n+       (\"-freorder-blocks-and-partition does not work on this architecture\");\n       flag_reorder_blocks_and_partition = 0;\n       flag_reorder_blocks = 1;\n     }"}, {"sha": "1428b480068f20151e4a1fb80bb85372abc7ecaf", "filename": "gcc/params.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -188,14 +188,14 @@ DEFPARAM(PARAM_MAX_GCSE_PASSES,\n    (Added loads execution count)\t\t\t\t\t  */\n DEFPARAM(PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION,\n \t\"gcse-after-reload-partial-fraction\",\n-\t\"The threshold ratio for performing partial redundancy elimination after reload.\",\n+\t\"The threshold ratio for performing partial redundancy elimination after reload\",\n         3, 0, 0)\n /* This is the threshold ratio of the critical edges execution count compared to\n    the redundant loads execution count that permits performing the load\n    redundancy elimination in gcse after reload.  */\n DEFPARAM(PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION,\n \t\"gcse-after-reload-critical-fraction\",\n-\t\"The threshold ratio of critical edges execution count that permit performing redundancy elimination after reload.\",\n+\t\"The threshold ratio of critical edges execution count that permit performing redundancy elimination after reload\",\n         10, 0, 0)\n /* This parameter limits the number of insns in a loop that will be unrolled,\n    and by how much the loop is unrolled.\n@@ -417,7 +417,7 @@ DEFPARAM(PARAM_MAX_RELOAD_SEARCH_INSNS,\n \n DEFPARAM(PARAM_MAX_ALIASED_VOPS,\n          \"max-aliased-vops\",\n-\t \"The maximum number of virtual operands allowed to represent aliases before triggering alias grouping.\",\n+\t \"The maximum number of virtual operands allowed to represent aliases before triggering alias grouping\",\n \t 500, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_REGION_BLOCKS,"}, {"sha": "76f52cdcb6dc734e77f797e818c57761f82cc00e", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c85ce869e757158c55fd428befdb59ad5d537c1f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c85ce869e757158c55fd428befdb59ad5d537c1f", "patch": "@@ -3368,15 +3368,15 @@ handle_dll_attribute (tree * pnode, tree name, tree args, int flags,\n       if (TREE_CODE (node) == FUNCTION_DECL  && DECL_INITIAL (node)\n           && !DECL_DECLARED_INLINE_P (node))\n \t{\n-\t  error (\"function %q+D definition is marked dllimport.\", node);\n+\t  error (\"function %q+D definition is marked dllimport\", node);\n \t  *no_add_attrs = true;\n \t}\n \n       else if (TREE_CODE (node) == VAR_DECL)\n \t{\n \t  if (DECL_INITIAL (node))\n \t    {\n-\t      error (\"variable %q+D definition is marked dllimport.\",\n+\t      error (\"variable %q+D definition is marked dllimport\",\n \t\t     node);\n \t      *no_add_attrs = true;\n \t    }\n@@ -3397,7 +3397,7 @@ handle_dll_attribute (tree * pnode, tree name, tree args, int flags,\n \t  || TREE_CODE (node) == FUNCTION_DECL))\n     {\n       error (\"external linkage required for symbol %q+D because of \"\n-\t     \"%qs attribute.\", node, IDENTIFIER_POINTER (name));\n+\t     \"%qs attribute\", node, IDENTIFIER_POINTER (name));\n       *no_add_attrs = true;\n     }\n "}]}