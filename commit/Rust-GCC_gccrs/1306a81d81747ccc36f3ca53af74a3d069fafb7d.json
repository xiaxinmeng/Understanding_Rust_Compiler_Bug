{"sha": "1306a81d81747ccc36f3ca53af74a3d069fafb7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwNmE4MWQ4MTc0N2NjYzM2ZjNjYTUzYWY3NGEzZDA2OWZhZmI3ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-31T08:31:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-31T08:31:52Z"}, "message": "re PR preprocessor/69869 (internal compiler error: Segmentation fault in call to skip_macro_block_comment when using '-traditional-cpp')\n\n\tPR preprocessor/69869\n\t* traditional.c (skip_macro_block_comment): Return bool, true if\n\tthe macro block comment is unterminated.\n\t(copy_comment): Use return value from skip_macro_block_comment instead\n\tof always false.\n\n\t* gcc.dg/cpp/trad/pr69869.c: New test.\n\nFrom-SVN: r257220", "tree": {"sha": "2b05a215f7e85a7a5f2b75c760f521ae28a5992d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b05a215f7e85a7a5f2b75c760f521ae28a5992d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1306a81d81747ccc36f3ca53af74a3d069fafb7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1306a81d81747ccc36f3ca53af74a3d069fafb7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1306a81d81747ccc36f3ca53af74a3d069fafb7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1306a81d81747ccc36f3ca53af74a3d069fafb7d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b56ebc34708f685bd5cf47763d13614c7e707e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b56ebc34708f685bd5cf47763d13614c7e707e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b56ebc34708f685bd5cf47763d13614c7e707e1"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "ed44f5601ef212c104ed33264f3335fa138500eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1306a81d81747ccc36f3ca53af74a3d069fafb7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1306a81d81747ccc36f3ca53af74a3d069fafb7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1306a81d81747ccc36f3ca53af74a3d069fafb7d", "patch": "@@ -1,5 +1,8 @@\n 2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR preprocessor/69869\n+\t* gcc.dg/cpp/trad/pr69869.c: New test.\n+\n \tPR c/84100\n \t* gcc.dg/pr84100.c: New test.\n "}, {"sha": "aa7aa83547b398d430e23b06fe351da2eb4a1d72", "filename": "gcc/testsuite/gcc.dg/cpp/trad/pr69869.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1306a81d81747ccc36f3ca53af74a3d069fafb7d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr69869.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1306a81d81747ccc36f3ca53af74a3d069fafb7d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr69869.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr69869.c?ref=1306a81d81747ccc36f3ca53af74a3d069fafb7d", "patch": "@@ -0,0 +1,8 @@\n+/* PR preprocessor/69869 */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-traditional-cpp\" } */\n+\n+#define C(a,b)a/**/b\n+C (foo/,**/)\n+C (foo/,*)\n+/* { dg-error \"-:unterminated comment\" \"\" {target \"*-*-*\"} .-1 } */"}, {"sha": "9c675a52d0c760e891cc9086a7e443c98caabcbe", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1306a81d81747ccc36f3ca53af74a3d069fafb7d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1306a81d81747ccc36f3ca53af74a3d069fafb7d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=1306a81d81747ccc36f3ca53af74a3d069fafb7d", "patch": "@@ -1,3 +1,11 @@\n+2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/69869\n+\t* traditional.c (skip_macro_block_comment): Return bool, true if\n+\tthe macro block comment is unterminated.\n+\t(copy_comment): Use return value from skip_macro_block_comment instead\n+\tof always false.\n+\n 2018-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/cpplib.h (enum cpp_builtin_type): Change BT_LAST_USER from"}, {"sha": "b25d5222d8a879cbeeb4982d01c907dca388be13", "filename": "libcpp/traditional.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1306a81d81747ccc36f3ca53af74a3d069fafb7d/libcpp%2Ftraditional.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1306a81d81747ccc36f3ca53af74a3d069fafb7d/libcpp%2Ftraditional.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ftraditional.c?ref=1306a81d81747ccc36f3ca53af74a3d069fafb7d", "patch": "@@ -119,8 +119,11 @@ check_output_buffer (cpp_reader *pfile, size_t n)\n }\n \n /* Skip a C-style block comment in a macro as a result of -CC.\n-   Buffer->cur points to the initial asterisk of the comment.  */\n-static void\n+   PFILE->buffer->cur points to the initial asterisk of the comment,\n+   change it to point to after the '*' and '/' characters that terminate it.\n+   Return true if the macro has not been termined, in that case set\n+   PFILE->buffer->cur to the end of the buffer.  */\n+static bool\n skip_macro_block_comment (cpp_reader *pfile)\n {\n   const uchar *cur = pfile->buffer->cur;\n@@ -131,10 +134,15 @@ skip_macro_block_comment (cpp_reader *pfile)\n \n   /* People like decorating comments with '*', so check for '/'\n      instead for efficiency.  */\n-  while(! (*cur++ == '/' && cur[-2] == '*') )\n-    ;\n+  while (! (*cur++ == '/' && cur[-2] == '*'))\n+    if (cur[-1] == '\\n')\n+      {\n+\tpfile->buffer->cur = cur - 1;\n+\treturn true;\n+      }\n \n   pfile->buffer->cur = cur;\n+  return false;\n }\n \n /* CUR points to the asterisk introducing a comment in the current\n@@ -158,7 +166,7 @@ copy_comment (cpp_reader *pfile, const uchar *cur, int in_define)\n \n   buffer->cur = cur;\n   if (pfile->context->prev)\n-    unterminated = false, skip_macro_block_comment (pfile);\n+    unterminated = skip_macro_block_comment (pfile);\n   else\n     unterminated = _cpp_skip_block_comment (pfile);\n     "}]}