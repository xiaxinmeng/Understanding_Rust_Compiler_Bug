{"sha": "0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1OWU4MWVjYjhkZTU5NTIwZTZmOGM5MDhiNjc0N2FkOWQ0NmVlMQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-07-06T23:13:51Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-07-06T23:13:51Z"}, "message": "function.c (expand_function_end): Revert part of 2005-06-27 patch.\n\n\t* function.c (expand_function_end): Revert part of 2005-06-27\n\tpatch.  Do sjlj_emit_function_exit_after after return_label.\n\nFrom-SVN: r101673", "tree": {"sha": "f2efd426934f11920300e56218db6c37a62be356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2efd426934f11920300e56218db6c37a62be356"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1/comments", "author": null, "committer": null, "parents": [{"sha": "3c2d01f108e3c527c4f37ef926fdd6ff90a93b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2d01f108e3c527c4f37ef926fdd6ff90a93b01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2d01f108e3c527c4f37ef926fdd6ff90a93b01"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "d5159ab9dd65515df1b30760920e11f32cf14acd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "patch": "@@ -1,3 +1,8 @@\n+2005-07-06  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* function.c (expand_function_end): Revert part of 2005-06-27\n+\tpatch.  Do sjlj_emit_function_exit_after after return_label.\n+\n 2005-07-06  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* doc/install.texi (--disable-libssp): New."}, {"sha": "1979185fd74a17463105001f9a381fb6fb1b1e98", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b59e81ecb8de59520e6f8c908b6747ad9d46ee1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0b59e81ecb8de59520e6f8c908b6747ad9d46ee1", "patch": "@@ -4403,6 +4403,11 @@ expand_function_end (void)\n   /* Output the label for the actual return from the function.  */\n   emit_label (return_label);\n \n+  /* Let except.c know where it should emit the call to unregister\n+     the function context for sjlj exceptions.  */\n+  if (flag_exceptions && USING_SJLJ_EXCEPTIONS)\n+    sjlj_emit_function_exit_after (get_last_insn ());\n+\n   /* If scalar return value was computed in a pseudo-reg, or was a named\n      return value that got dumped to the stack, copy that to the hard\n      return register.  */\n@@ -4530,11 +4535,6 @@ expand_function_end (void)\n   /* Output the label for the naked return from the function.  */\n   emit_label (naked_return_label);\n \n-  /* Let except.c know where it should emit the call to unregister\n-     the function context for sjlj exceptions.  */\n-  if (flag_exceptions && USING_SJLJ_EXCEPTIONS)\n-    sjlj_emit_function_exit_after (get_last_insn ());\n-\n   /* If stack protection is enabled for this function, check the guard.  */\n   if (cfun->stack_protect_guard)\n     stack_protect_epilogue ();"}]}