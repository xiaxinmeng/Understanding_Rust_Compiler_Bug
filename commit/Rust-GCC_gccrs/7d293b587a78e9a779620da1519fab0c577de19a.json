{"sha": "7d293b587a78e9a779620da1519fab0c577de19a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyOTNiNTg3YTc4ZTlhNzc5NjIwZGExNTE5ZmFiMGM1NzdkZTE5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-10-29T16:07:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-10-29T16:07:39Z"}, "message": "re PR middle-end/37870 (ICE in extract_bit_field_1)\n\n\tPR middle-end/37870\n\t* expmed.c (extract_bit_field_1): If int_mode_for_mode returns\n\tBLKmode for non-memory, convert using a wider MODE_INT mode\n\tor through memory.\n\n\t* gcc.target/i386/pr37870.c: New test.\n\nFrom-SVN: r141430", "tree": {"sha": "21f02a1ca2098a2e0f7ed9fdcbc9e7e08831ede5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f02a1ca2098a2e0f7ed9fdcbc9e7e08831ede5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d293b587a78e9a779620da1519fab0c577de19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d293b587a78e9a779620da1519fab0c577de19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d293b587a78e9a779620da1519fab0c577de19a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d293b587a78e9a779620da1519fab0c577de19a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3f7b2c67ed130a856a1d7425e76d69d47bb6006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f7b2c67ed130a856a1d7425e76d69d47bb6006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f7b2c67ed130a856a1d7425e76d69d47bb6006"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "44836d5db652605751dbf04f7e4525155d5f6b47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d293b587a78e9a779620da1519fab0c577de19a", "patch": "@@ -1,5 +1,10 @@\n 2008-10-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/37870\n+\t* expmed.c (extract_bit_field_1): If int_mode_for_mode returns\n+\tBLKmode for non-memory, convert using a wider MODE_INT mode\n+\tor through memory.\n+\n \tPR middle-end/37913\n \t* tree-cfgcleanup.c (split_bbs_on_noreturn_calls): Only split bbs\n \tthat haven't been removed yet."}, {"sha": "0c7e611e188a091bfd495e1a44c7b81e593097fe", "filename": "gcc/expmed.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=7d293b587a78e9a779620da1519fab0c577de19a", "patch": "@@ -1,7 +1,7 @@\n /* Medium-level subroutines: convert bit-field store and extract\n    and shifts, multiplies and divides to rtl instructions.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1278,16 +1278,33 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n       {\n \tif (MEM_P (op0))\n \t  op0 = adjust_address (op0, imode, 0);\n-\telse\n+\telse if (imode != BLKmode)\n \t  {\n-\t    gcc_assert (imode != BLKmode);\n \t    op0 = gen_lowpart (imode, op0);\n \n \t    /* If we got a SUBREG, force it into a register since we\n \t       aren't going to be able to do another SUBREG on it.  */\n \t    if (GET_CODE (op0) == SUBREG)\n \t      op0 = force_reg (imode, op0);\n \t  }\n+\telse if (REG_P (op0))\n+\t  {\n+\t    rtx reg, subreg;\n+\t    imode = smallest_mode_for_size (GET_MODE_BITSIZE (GET_MODE (op0)),\n+\t\t\t\t\t    MODE_INT);\n+\t    reg = gen_reg_rtx (imode);\n+\t    subreg = gen_lowpart_SUBREG (GET_MODE (op0), reg);\n+\t    emit_move_insn (subreg, op0);\n+\t    op0 = reg;\n+\t    bitnum += SUBREG_BYTE (subreg) * BITS_PER_UNIT;\n+\t  }\n+\telse\n+\t  {\n+\t    rtx mem = assign_stack_temp (GET_MODE (op0),\n+\t\t\t\t\t GET_MODE_SIZE (GET_MODE (op0)), 0);\n+\t    emit_move_insn (mem, op0);\n+\t    op0 = adjust_address (mem, BLKmode, 0);\n+\t  }\n       }\n   }\n "}, {"sha": "070840147c82a0cc06eba745796dd0f2a479a729", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d293b587a78e9a779620da1519fab0c577de19a", "patch": "@@ -1,3 +1,8 @@\n+2008-10-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/37870\n+\t* gcc.target/i386/pr37870.c: New test.\n+\n 2008-10-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/26997"}, {"sha": "19cfb2058653692fa71b8532b349f67cc8aa575a", "filename": "gcc/testsuite/gcc.target/i386/pr37870.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37870.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d293b587a78e9a779620da1519fab0c577de19a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37870.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37870.c?ref=7d293b587a78e9a779620da1519fab0c577de19a", "patch": "@@ -0,0 +1,29 @@\n+/* PR middle-end/37870 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned int\n+foo (long double x)\n+{\n+  struct { char a[8]; unsigned int b:7; } c;\n+  __builtin_memcpy (&c, &x, sizeof (c));\n+  return c.b;\n+}\n+\n+unsigned int\n+bar (long double x)\n+{\n+  union { struct { char a[8]; unsigned int b:7; } c; long double d; } u;\n+  u.d = x;\n+  return u.c.b;\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo (1.245L) != bar (1.245L)\n+      || foo (245.67L) != bar (245.67L)\n+      || foo (0.00567L) != bar (0.00567L))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}