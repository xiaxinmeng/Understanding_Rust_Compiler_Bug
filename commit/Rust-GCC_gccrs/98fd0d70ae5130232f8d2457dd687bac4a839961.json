{"sha": "98fd0d70ae5130232f8d2457dd687bac4a839961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmZDBkNzBhZTUxMzAyMzJmOGQyNDU3ZGQ2ODdiYWM0YTgzOTk2MQ==", "commit": {"author": {"name": "Mark Dettinger", "email": "dettinge@de.ibm.com", "date": "2005-01-10T16:06:21Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-01-10T16:06:21Z"}, "message": "s390.c (struct processor_costs): 4 new fields: ddbr, ddr, debr, der.\n\n2005-01-10  Mark Dettinger  <dettinge@de.ibm.com>\n\n\t* config/s390/s390.c (struct processor_costs): 4 new fields:\n\tddbr, ddr, debr, der.\n\t(s390_rtx_costs): More precise handling of divide instructions.\n\nFrom-SVN: r93142", "tree": {"sha": "82d4c7db62d2eced519a3d9e0098adac8d9ffd9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82d4c7db62d2eced519a3d9e0098adac8d9ffd9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98fd0d70ae5130232f8d2457dd687bac4a839961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fd0d70ae5130232f8d2457dd687bac4a839961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fd0d70ae5130232f8d2457dd687bac4a839961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fd0d70ae5130232f8d2457dd687bac4a839961/comments", "author": null, "committer": null, "parents": [{"sha": "99757961664c094616a532dd5bad72e42a4535f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99757961664c094616a532dd5bad72e42a4535f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99757961664c094616a532dd5bad72e42a4535f3"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "42292adbb6b5878b2ee37e11877200e6f79a6f76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fd0d70ae5130232f8d2457dd687bac4a839961/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fd0d70ae5130232f8d2457dd687bac4a839961/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98fd0d70ae5130232f8d2457dd687bac4a839961", "patch": "@@ -1,3 +1,9 @@\n+2005-01-10  Mark Dettinger  <dettinge@de.ibm.com>\n+\n+\t* config/s390/s390.c (struct processor_costs): 4 new fields:\n+\tddbr, ddr, debr, der.\n+\t(s390_rtx_costs): More precise handling of divide instructions.\n+\n 2005-01-10  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/t-aix43 (BOOT_LDFLAGS): Define."}, {"sha": "2ce2cc833dc049bf90d86ac1d8f6786d70a41ed5", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fd0d70ae5130232f8d2457dd687bac4a839961/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fd0d70ae5130232f8d2457dd687bac4a839961/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=98fd0d70ae5130232f8d2457dd687bac4a839961", "patch": "@@ -90,6 +90,7 @@ static enum machine_mode s390_cc_modes_compatible (enum machine_mode,\n \n struct processor_costs \n {\n+  /* multiplication */\n   const int m;        /* cost of an M instruction.  */\n   const int mghi;     /* cost of an MGHI instruction.  */\n   const int mh;       /* cost of an MH instruction.  */\n@@ -103,10 +104,17 @@ struct processor_costs\n   const int msgr;     /* cost of an MSGR instruction.  */\n   const int msr;      /* cost of an MSR instruction.  */\n   const int mult_df;  /* cost of multiplication in DFmode.  */\n+  /* square root */\n   const int sqdbr;    /* cost of square root in DFmode.  */\n   const int sqebr;    /* cost of square root in SFmode.  */\n+  /* multiply and add */\n   const int madbr;    /* cost of multiply and add in DFmode.  */\n   const int maebr;    /* cost of multiply and add in SFmode.  */\n+  /* division */\n+  const int ddbr;\n+  const int ddr;\n+  const int debr;\n+  const int der;\n };\n \n const struct processor_costs *s390_cost;\n@@ -131,6 +139,10 @@ struct processor_costs z900_cost =\n   COSTS_N_INSNS (35),    /* SQEBR */\n   COSTS_N_INSNS (18),    /* MADBR */\n   COSTS_N_INSNS (13),    /* MAEBR */\n+  COSTS_N_INSNS (30),    /* DDBR */\n+  COSTS_N_INSNS (30),    /* DDR  */\n+  COSTS_N_INSNS (27),    /* DEBR */\n+  COSTS_N_INSNS (26),    /* DER  */\n };\n \n static const\n@@ -153,6 +165,10 @@ struct processor_costs z990_cost =\n   COSTS_N_INSNS (38),    /* SQEBR */\n   COSTS_N_INSNS (1),     /* MADBR */\n   COSTS_N_INSNS (1),     /* MAEBR */\n+  COSTS_N_INSNS (40),    /* DDBR */\n+  COSTS_N_INSNS (44),    /* DDR  */\n+  COSTS_N_INSNS (26),    /* DDBR */\n+  COSTS_N_INSNS (28),    /* DER  */\n };\n \n \n@@ -1982,6 +1998,24 @@ s390_rtx_costs (rtx x, int code, int outer_code, int *total)\n       return false;\n \n     case DIV:\n+      if (GET_MODE (x) == SFmode)\n+\t{\n+\t  if (TARGET_IEEE_FLOAT)\n+\t    *total = s390_cost->debr;\n+\t  else /* TARGET_IBM_FLOAT */\n+\t    *total = s390_cost->der;\n+\t}\n+      else if (GET_MODE (x) == DFmode)\n+\t{\n+\t  if (TARGET_IEEE_FLOAT)\n+\t    *total = s390_cost->ddbr;\n+\t  else /* TARGET_IBM_FLOAT */\n+\t    *total = s390_cost->ddr;\n+\t}\n+      else\n+\t*total = COSTS_N_INSNS (33);\n+      return false;\n+\n     case UDIV:\n     case MOD:\n     case UMOD:"}]}