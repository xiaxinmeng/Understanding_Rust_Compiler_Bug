{"sha": "92f202027ed5fc6d64808cc27103f88ae95cca52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmMjAyMDI3ZWQ1ZmM2ZDY0ODA4Y2MyNzEwM2Y4OGFlOTVjY2E1Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-06-18T07:41:19Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-06-18T07:41:19Z"}, "message": "re PR c/57630 (Error should include -std=c11 and friends)\n\n\tPR c/57630\n\t* c-decl.c (check_for_loop_decls): Improve diagnostics messages.\n\nFrom-SVN: r200163", "tree": {"sha": "b8b63c55c1422f16decfa41d1211602d71e3a3c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8b63c55c1422f16decfa41d1211602d71e3a3c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92f202027ed5fc6d64808cc27103f88ae95cca52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f202027ed5fc6d64808cc27103f88ae95cca52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f202027ed5fc6d64808cc27103f88ae95cca52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f202027ed5fc6d64808cc27103f88ae95cca52/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69eff9da489b0e8bbf4d1795afc3d5e014a6d025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69eff9da489b0e8bbf4d1795afc3d5e014a6d025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69eff9da489b0e8bbf4d1795afc3d5e014a6d025"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "05766caa8ff8d82b33b3990f0e349afdb3619209", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f202027ed5fc6d64808cc27103f88ae95cca52/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f202027ed5fc6d64808cc27103f88ae95cca52/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=92f202027ed5fc6d64808cc27103f88ae95cca52", "patch": "@@ -1,3 +1,8 @@\n+2013-06-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/57630\n+\t* c-decl.c (check_for_loop_decls): Improve diagnostics messages.\n+\n 2013-06-12  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-array-notation.c (build_array_notation_expr): Reject array notation"}, {"sha": "8170a80ac6d08d1d44a9df343c6109365bb38206", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f202027ed5fc6d64808cc27103f88ae95cca52/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f202027ed5fc6d64808cc27103f88ae95cca52/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=92f202027ed5fc6d64808cc27103f88ae95cca52", "patch": "@@ -8503,11 +8503,12 @@ check_for_loop_decls (location_t loc, bool turn_off_iso_c99_error)\n \t the C99 for loop scope.  This doesn't make much sense, so don't\n \t allow it.  */\n       error_at (loc, \"%<for%> loop initial declarations \"\n-\t\t\"are only allowed in C99 mode\");\n+\t\t\"are only allowed in C99 or C11 mode\");\n       if (hint)\n \t{\n \t  inform (loc,\n-\t\t  \"use option -std=c99 or -std=gnu99 to compile your code\");\n+\t\t  \"use option -std=c99, -std=gnu99, -std=c11 or -std=gnu11 \"\n+\t\t  \"to compile your code\");\n \t  hint = false;\n \t}\n       return NULL_TREE;"}]}