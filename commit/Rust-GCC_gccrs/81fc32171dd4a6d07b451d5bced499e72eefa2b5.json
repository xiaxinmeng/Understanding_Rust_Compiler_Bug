{"sha": "81fc32171dd4a6d07b451d5bced499e72eefa2b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmYzMyMTcxZGQ0YTZkMDdiNDUxZDViY2VkNDk5ZTcyZWVmYTJiNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-14T17:41:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-14T17:41:13Z"}, "message": "ChangeLog: Fix shitespace.\n\n\t* ChangeLog: Fix shitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r227756", "tree": {"sha": "37d6a3e7faca192836d0e77f6e0ec8f0b861e0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37d6a3e7faca192836d0e77f6e0ec8f0b861e0f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81fc32171dd4a6d07b451d5bced499e72eefa2b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fc32171dd4a6d07b451d5bced499e72eefa2b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fc32171dd4a6d07b451d5bced499e72eefa2b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fc32171dd4a6d07b451d5bced499e72eefa2b5/comments", "author": null, "committer": null, "parents": [{"sha": "b4e240a156e612b156c81080220284a8237173e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e240a156e612b156c81080220284a8237173e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e240a156e612b156c81080220284a8237173e4"}], "stats": {"total": 83, "additions": 42, "deletions": 41}, "files": [{"sha": "fa20d73dd3aeb22514ff34172cf85e3989a6998c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fc32171dd4a6d07b451d5bced499e72eefa2b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fc32171dd4a6d07b451d5bced499e72eefa2b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81fc32171dd4a6d07b451d5bced499e72eefa2b5", "patch": "@@ -13,22 +13,22 @@\n \n 2015-09-14  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-    \tPR target/63304\n-    \t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Handle\n-    \tnopcrelative_literal_loads.\n-    \t(aarch64_classify_address): Likewise.\n-    \t(aarch64_constant_pool_reload_icode): Define.\n-    \t(aarch64_secondary_reload): Handle secondary reloads for\n-    \tliteral pools.\n-    \t(aarch64_override_options): Handle nopcrelative_literal_loads.\n-    \t(aarch64_classify_symbol): Handle nopcrelative_literal_loads.\n-    \t* config/aarch64/aarch64.md (aarch64_reload_movcp<GPF_TF:mode><P:mode>):\n-    \tDefine.\n-    \t(aarch64_reload_movcp<VALL:mode><P:mode>): Likewise.\n-    \t* config/aarch64/aarch64.opt (mpc-relative-literal-loads): New option.\n-    \t* config/aarch64/predicates.md (aarch64_constant_pool_symref): New\n-    \tpredicate.\n-    \t* doc/invoke.texi (mpc-relative-literal-loads): Document.\n+\tPR target/63304\n+\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Handle\n+\tnopcrelative_literal_loads.\n+\t(aarch64_classify_address): Likewise.\n+\t(aarch64_constant_pool_reload_icode): Define.\n+\t(aarch64_secondary_reload): Handle secondary reloads for\n+\tliteral pools.\n+\t(aarch64_override_options): Handle nopcrelative_literal_loads.\n+\t(aarch64_classify_symbol): Handle nopcrelative_literal_loads.\n+\t* config/aarch64/aarch64.md (aarch64_reload_movcp<GPF_TF:mode><P:mode>):\n+\tDefine.\n+\t(aarch64_reload_movcp<VALL:mode><P:mode>): Likewise.\n+\t* config/aarch64/aarch64.opt (mpc-relative-literal-loads): New option.\n+\t* config/aarch64/predicates.md (aarch64_constant_pool_symref): New\n+\tpredicate.\n+\t* doc/invoke.texi (mpc-relative-literal-loads): Document.\n \n 2015-09-14  John David Anglin  <danglin@gcc.gnu.org>\n \n@@ -141,8 +141,8 @@\n \t(struct checksum_attributes): Likewise.\n \t(collect_checksum_attributes): Likewise.\n \t(die_checksum_ordered): Likewise.\n-\t\t\t(same_die_p): Likewise.\n-\t\t\t(is_declaration_die): Likewise.\n+\t(same_die_p): Likewise.\n+\t(is_declaration_die): Likewise.\n \t(clone_die): Likewise.\n \t(clone_as_declaration): Likewise.\n \t(copy_declaration_context): Likewise.\n@@ -351,31 +351,31 @@\n \n 2015-09-11  Aditya Kumar  <aditya.k7@samsung.com>\n \n-        * graphite-optimize-isl.c (disable_tiling): Remove.\n+\t* graphite-optimize-isl.c (disable_tiling): Remove.\n \t(get_schedule_for_band): Do not use disable_tiling.\n \t(get_prevector_map): Delete function.\n \t(enable_polly_vector): Remove.\n-        (get_schedule_for_band_list): Remove dead code.\n+\t(get_schedule_for_band_list): Remove dead code.\n \n 2015-09-11  Aditya Kumar  <aditya.k7@samsung.com>\n \n-        * graphite-optimize-isl.c (get_tile_map): Refactor.\n-        (get_schedule_for_band): Same.\n-        (getScheduleForBand): Same.\n-        (get_prevector_map): Same.\n-        (get_schedule_for_band_list): Same.\n-        (get_schedule_map): Same.\n-        (get_single_map): Same.\n-        (apply_schedule_map_to_scop): Same.\n-        (optimize_isl): Same.\n+\t* graphite-optimize-isl.c (get_tile_map): Refactor.\n+\t(get_schedule_for_band): Same.\n+\t(getScheduleForBand): Same.\n+\t(get_prevector_map): Same.\n+\t(get_schedule_for_band_list): Same.\n+\t(get_schedule_map): Same.\n+\t(get_single_map): Same.\n+\t(apply_schedule_map_to_scop): Same.\n+\t(optimize_isl): Same.\n \n 2015-09-10  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/63304\n-        * config/aarch64/aarch.md (mov<mode>:GPF_F16): Use GPF_TF_F16.\n-        (movtf): Delete.\n-        * config/aarch64/iterators.md (GPF_TF_F16): New.\n-        (GPF_F16): Delete.\n+\t* config/aarch64/aarch.md (mov<mode>:GPF_F16): Use GPF_TF_F16.\n+\t(movtf): Delete.\n+\t* config/aarch64/iterators.md (GPF_TF_F16): New.\n+\t(GPF_F16): Delete.\n \n 2015-09-10  Nathan Sidwell  <nathan@acm.org>\n \n@@ -569,7 +569,7 @@\n \t(compute_deps): Same.\n \n 2015-09-08  Aditya Kumar  <hiraditya@msn.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-isl-ast-to-gimple.c (gcc_expression_from_isl_ast_expr_id):\n \tReturn the parameter if it was saved in corresponding\n@@ -10337,7 +10337,7 @@\n \n \t* tree-vect-slp.c (vect_build_slp_tree_1): Init vectype.\n \n-2015-06-24 Renlin Li <renlin.li@arm.com>\n+2015-06-24  Renlin Li <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.h(TARGET_CPU_CPP_BUILTINS): Add\n \t__ARM_ALIGN_MAX_PWR, __ARM_ALIGN_MAX_STACK_PWR."}, {"sha": "7c0354c3315735f7c97c4b7759dcca54f67cad6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fc32171dd4a6d07b451d5bced499e72eefa2b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fc32171dd4a6d07b451d5bced499e72eefa2b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81fc32171dd4a6d07b451d5bced499e72eefa2b5", "patch": "@@ -175,7 +175,7 @@\n \t* gcc.dg/gomp/pr67495.c: New test.\n \n 2015-09-09  Aditya Kumar  <hiraditya@msn.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \tPR tree-optimization/53852\n \t* gcc.dg/graphite/uns-interchange-12.c: Adjust pattern to pass with\n@@ -185,7 +185,7 @@\n \t* gcc.dg/graphite/uns-interchange-mvt.c: Same.\n \n 2015-09-08  Aditya Kumar  <hiraditya@msn.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* gcc.dg/graphite/block-0.c: Modifed test case to match current output.\n \t* gcc.dg/graphite/block-1.c: Same.\n@@ -440,7 +440,8 @@\n \t* lib/ubsan-dg.exp: Likewise.\n \n 2015-09-01  Kenneth Zadeck <zadeck@naturalbridge.com>\n-        * gcc.c-torture/execute/ieee/20000320-1.c Fixed misplaced test case.\n+\n+\t* gcc.c-torture/execute/ieee/20000320-1.c Fixed misplaced test case.\n \n 2015-09-01  Matthew Fortune  <matthew.fortune@imgtec.com>\n \t    Andrew Bennett  <andrew.bennett@imgtec.com>\n@@ -528,7 +529,7 @@\n \n \t* gcc.target/powerpc/swaps-p8-19.c: New test.\n \n-2015-08-29 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-08-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/67367\n \t* gfortran.dg/read_dir.f90: New test. May fail on some platforms.\n@@ -1098,8 +1099,8 @@\n \tPR tree-optimization/67221\n \t* gcc.dg/torture/pr67221.c: New testcase.\n \n-2015-08-17 Mike Stump  <mikestump@comcast.net>\n-           Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+2015-08-17  Mike Stump  <mikestump@comcast.net>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/memcpy-aligned-1.c: New test.\n "}]}