{"sha": "250ddf4c0b44de26e9c6cab237c7e248e408e95c", "node_id": "C_kwDOANBUbNoAKDI1MGRkZjRjMGI0NGRlMjZlOWM2Y2FiMjM3YzdlMjQ4ZTQwOGU5NWM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-08T10:35:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-11T19:35:51Z"}, "message": "libstdc++: Add wrapper for internal uses of std::terminate\n\nThis adds an inline wrapper for std::terminate that doesn't add the\ndeclaration of std::terminate to namespace std. This allows the\nlibrary to terminate without including all of <exception>.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/atomic_timed_wait.h: Remove unused header.\n\t* include/bits/c++config (std:__terminate): Define.\n\t* include/bits/semaphore_base.h: Remove <exception> and use\n\t__terminate instead of terminate.\n\t* include/bits/std_thread.h: Likewise.\n\t* libsupc++/eh_terminate.cc (std::terminate): Use qualified-id\n\tto call __cxxabiv1::__terminate.", "tree": {"sha": "8b7fdadbf4f0e9c9c3635617f00d3014a14f3b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7fdadbf4f0e9c9c3635617f00d3014a14f3b17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/250ddf4c0b44de26e9c6cab237c7e248e408e95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250ddf4c0b44de26e9c6cab237c7e248e408e95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250ddf4c0b44de26e9c6cab237c7e248e408e95c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250ddf4c0b44de26e9c6cab237c7e248e408e95c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "247bac507e63b32d4dc23ef1c55f300aafea24c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247bac507e63b32d4dc23ef1c55f300aafea24c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247bac507e63b32d4dc23ef1c55f300aafea24c6"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "efbe3da8b6c70162e5da4709e9d7b7efe32a4bda", "filename": "libstdc++-v3/include/bits/atomic_timed_wait.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_timed_wait.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_timed_wait.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_timed_wait.h?ref=250ddf4c0b44de26e9c6cab237c7e248e408e95c", "patch": "@@ -40,7 +40,6 @@\n #include <bits/chrono.h>\n \n #ifdef _GLIBCXX_HAVE_LINUX_FUTEX\n-#include <exception> // std::terminate\n #include <sys/time.h>\n #endif\n "}, {"sha": "b76ffeb2562178727fbdc15424fe8600b7a88a6f", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=250ddf4c0b44de26e9c6cab237c7e248e408e95c", "patch": "@@ -293,6 +293,15 @@ namespace std\n #if __cplusplus >= 201103L\n   typedef decltype(nullptr)\tnullptr_t;\n #endif\n+\n+  // This allows the library to terminate without including all of <exception>\n+  // and without making the declaration of std::terminate visible to users.\n+  __attribute__ ((__noreturn__, __always_inline__))\n+  inline void __terminate() _GLIBCXX_USE_NOEXCEPT\n+  {\n+    void terminate() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__noreturn__));\n+    terminate();\n+  }\n }\n \n #define _GLIBCXX_USE_DUAL_ABI"}, {"sha": "afd636704e8c357437d42982682e8dc895d6b535", "filename": "libstdc++-v3/include/bits/semaphore_base.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h?ref=250ddf4c0b44de26e9c6cab237c7e248e408e95c", "patch": "@@ -40,7 +40,6 @@\n #endif // __cpp_lib_atomic_wait\n \n #ifdef _GLIBCXX_HAVE_POSIX_SEMAPHORE\n-# include <exception>\t// std::terminate\n # include <cerrno>\t// errno, EINTR, EAGAIN etc.\n # include <limits.h>\t// SEM_VALUE_MAX\n # include <semaphore.h>\t// sem_t, sem_init, sem_wait, sem_post etc.\n@@ -80,7 +79,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (__err && (errno == EINTR))\n \t    continue;\n \t  else if (__err)\n-\t    std::terminate();\n+\t    std::__terminate();\n \t  else\n \t    break;\n \t}\n@@ -97,7 +96,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  else if (__err && (errno == EAGAIN))\n \t    return false;\n \t  else if (__err)\n-\t    std::terminate();\n+\t    std::__terminate();\n \t  else\n \t    break;\n \t}\n@@ -111,7 +110,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n \t   auto __err = sem_post(&_M_semaphore);\n \t   if (__err)\n-\t     std::terminate();\n+\t     std::__terminate();\n \t}\n     }\n \n@@ -138,7 +137,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      else if (errno == ETIMEDOUT || errno == EINVAL)\n \t\treturn false;\n \t      else\n-\t\tstd::terminate();\n+\t\tstd::__terminate();\n \t    }\n \t  else\n \t    break;"}, {"sha": "801033b00ad62723b3927f46b455b129ea295e54", "filename": "libstdc++-v3/include/bits/std_thread.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h?ref=250ddf4c0b44de26e9c6cab237c7e248e408e95c", "patch": "@@ -35,7 +35,6 @@\n #if __cplusplus >= 201103L\n #include <bits/c++config.h>\n \n-#include <exception>\t\t// std::terminate\n #include <iosfwd>\t\t// std::basic_ostream\n #include <tuple>\t\t// std::tuple\n #include <bits/functional_hash.h> // std::hash\n@@ -149,7 +148,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     ~thread()\n     {\n       if (joinable())\n-\tstd::terminate();\n+\tstd::__terminate();\n     }\n \n     thread(const thread&) = delete;\n@@ -162,7 +161,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     thread& operator=(thread&& __t) noexcept\n     {\n       if (joinable())\n-\tstd::terminate();\n+\tstd::__terminate();\n       swap(__t);\n       return *this;\n     }"}, {"sha": "af257b63369f885daf0e591e8d329c947e4cf4bc", "filename": "libstdc++-v3/libsupc++/eh_terminate.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250ddf4c0b44de26e9c6cab237c7e248e408e95c/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc?ref=250ddf4c0b44de26e9c6cab237c7e248e408e95c", "patch": "@@ -55,7 +55,7 @@ __cxxabiv1::__terminate (std::terminate_handler handler) throw ()\n void\n std::terminate () throw()\n {\n-  __terminate (get_terminate ());\n+  __cxxabiv1::__terminate (get_terminate ());\n }\n \n void"}]}