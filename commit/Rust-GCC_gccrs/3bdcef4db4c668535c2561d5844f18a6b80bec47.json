{"sha": "3bdcef4db4c668535c2561d5844f18a6b80bec47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JkY2VmNGRiNGM2Njg1MzVjMjU2MWQ1ODQ0ZjE4YTZiODBiZWM0Nw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-11-20T06:14:54Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-11-20T06:14:54Z"}, "message": "loop.c (record_giv): Initialize not_replaceable.\n\n\t* loop.c (record_giv): Initialize not_replaceable.\n\t(check_final_value): Likewise.\n\nFrom-SVN: r59288", "tree": {"sha": "35048f66654a01191b6e7e41d9dab1f76d29d4d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35048f66654a01191b6e7e41d9dab1f76d29d4d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bdcef4db4c668535c2561d5844f18a6b80bec47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bdcef4db4c668535c2561d5844f18a6b80bec47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bdcef4db4c668535c2561d5844f18a6b80bec47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bdcef4db4c668535c2561d5844f18a6b80bec47/comments", "author": null, "committer": null, "parents": [{"sha": "ad2ae3b294ddf550c982d115d5df83bece726aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2ae3b294ddf550c982d115d5df83bece726aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2ae3b294ddf550c982d115d5df83bece726aac"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "4f18c0606fb46fe404d36e69547a37d16bad58bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bdcef4db4c668535c2561d5844f18a6b80bec47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bdcef4db4c668535c2561d5844f18a6b80bec47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bdcef4db4c668535c2561d5844f18a6b80bec47", "patch": "@@ -1,3 +1,8 @@\n+2002-11-19  Andreas Jaeger  <aj@suse.de>\n+\n+\t* loop.c (record_giv): Initialize not_replaceable.\n+\t(check_final_value): Likewise.\n+\n 2002-11-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_init_once): Replace 1 with\n@@ -91,7 +96,7 @@ Tue Nov 19 23:50:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/netbsd-elf.h (STARTFILE_SPEC): Add if-exists(crti%O%s).\n \t(ENDFILE_SPEC): Add if-exists(crtn%O%s).\n \t* config/alpha/netbsd.h (ENDFILE_SPEC): Likewise.\n-    \n+\n \t* doc/invoke.texi: Document spec functions.\n \n \t* cppspec.c (lang_specific_spec_functions): New.\n@@ -240,7 +245,7 @@ Sat Nov 16 02:06:02 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-11-15  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390.c (optimization_options): Set \n+\t* config/s390/s390.c (optimization_options): Set\n \tflag_asynchronous_unwind_tables to 1 by default.\n \n 2002-11-15  Ulrich Weigand  <uweigand@de.ibm.com>"}, {"sha": "4814cdd6e9b978c5599b4f3ca195352c9167bf3e", "filename": "gcc/loop.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bdcef4db4c668535c2561d5844f18a6b80bec47/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bdcef4db4c668535c2561d5844f18a6b80bec47/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=3bdcef4db4c668535c2561d5844f18a6b80bec47", "patch": "@@ -5835,7 +5835,10 @@ record_giv (loop, v, insn, src_reg, dest_reg, mult_val, add_val, ext_val,\n     abort ();\n \n   if (type == DEST_ADDR)\n-    v->replaceable = 1;\n+    {\n+      v->replaceable = 1;\n+      v->not_replaceable = 0;\n+    }\n   else\n     {\n       /* The giv can be replaced outright by the reduced register only if all\n@@ -5870,6 +5873,7 @@ record_giv (loop, v, insn, src_reg, dest_reg, mult_val, add_val, ext_val,\n \t     using this biv anyways.  */\n \n \t  v->replaceable = 1;\n+\t  v->not_replaceable = 0;\n \t  for (b = bl->biv; b; b = b->next_iv)\n \t    {\n \t      if (INSN_UID (b->insn) >= max_uid_for_loop\n@@ -5981,6 +5985,7 @@ check_final_value (loop, v)\n       rtx last_giv_use;\n \n       v->replaceable = 1;\n+      v->not_replaceable = 0;\n \n       /* When trying to determine whether or not a biv increment occurs\n \t during the lifetime of the giv, we can ignore uses of the variable"}]}