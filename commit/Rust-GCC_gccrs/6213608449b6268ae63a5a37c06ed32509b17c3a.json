{"sha": "6213608449b6268ae63a5a37c06ed32509b17c3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxMzYwODQ0OWI2MjY4YWU2M2E1YTM3YzA2ZWQzMjUwOWIxN2MzYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-15T18:34:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-15T18:34:29Z"}, "message": "toplev.c (wrapup_global_declarations): Don't write out artificial static variables that aren't needed.\n\n\t* toplev.c (wrapup_global_declarations): Don't write out\n\tartificial static variables that aren't needed.\n\n\t* decl.c (wrapup_globals_for_namespace): Don't mark things\n\tTREE_ASM_WRITTEN when they're not.\n\nFrom-SVN: r37485", "tree": {"sha": "165532ff43c9b809fc905ebd72d93c8dd913c186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/165532ff43c9b809fc905ebd72d93c8dd913c186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6213608449b6268ae63a5a37c06ed32509b17c3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6213608449b6268ae63a5a37c06ed32509b17c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6213608449b6268ae63a5a37c06ed32509b17c3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6213608449b6268ae63a5a37c06ed32509b17c3a/comments", "author": null, "committer": null, "parents": [{"sha": "adcee32ccbe783c41ca2874bed6febc7954d0c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcee32ccbe783c41ca2874bed6febc7954d0c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adcee32ccbe783c41ca2874bed6febc7954d0c38"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "dfed0a725efa06db27cc1c49ecb0bc8dd336485e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6213608449b6268ae63a5a37c06ed32509b17c3a", "patch": "@@ -1,3 +1,8 @@\n+2000-11-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* toplev.c (wrapup_global_declarations): Don't write out\n+\tartificial static variables that aren't needed.\n+\n 2000-11-15  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* ia64.c (struct group): New structure."}, {"sha": "5294676ff7a37178da97b0b4ac0078524dc34e89", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6213608449b6268ae63a5a37c06ed32509b17c3a", "patch": "@@ -1,3 +1,8 @@\n+2000-11-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (wrapup_globals_for_namespace): Don't mark things\n+\tTREE_ASM_WRITTEN when they're not.\n+\n 2000-11-15  Jason Merrill  <jason@redhat.com>\n \n \t* typeck2.c (friendly_abort): Uncount the error before handing"}, {"sha": "192a7cd857ed1562173badbba8eb4262b1246d76", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6213608449b6268ae63a5a37c06ed32509b17c3a", "patch": "@@ -1926,20 +1926,8 @@ wrapup_globals_for_namespace (namespace, data)\n \n   /* Process the decls in reverse order--earliest first.\n      Put them into VEC from back to front, then take out from front.  */\n-\n   for (i = 0, decl = globals; i < len; i++, decl = TREE_CHAIN (decl))\n-    {\n-      /* Pretend we've output an unused static variable.  This ensures\n-         that the toplevel __FUNCTION__ etc won't be emitted, unless\n-         needed. */\n-      if (TREE_CODE (decl) == VAR_DECL && DECL_ARTIFICIAL (decl)\n-\t  && !TREE_PUBLIC (decl) && !TREE_USED (decl))\n-\t{\n-\t  TREE_ASM_WRITTEN (decl) = 1;\n-\t  DECL_IGNORED_P (decl) = 1;\n-\t}\n-      vec[len - i - 1] = decl;\n-    }\n+    vec[len - i - 1] = decl;\n \n   if (last_time)\n     {"}, {"sha": "d25085a715c2ddd33ed91e130597914356ff4c49", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6213608449b6268ae63a5a37c06ed32509b17c3a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6213608449b6268ae63a5a37c06ed32509b17c3a", "patch": "@@ -1950,7 +1950,9 @@ wrapup_global_declarations (vec, len)\n \t  if (TREE_CODE (decl) == VAR_DECL && TREE_STATIC (decl)\n \t      && (! TREE_READONLY (decl)\n \t\t  || TREE_PUBLIC (decl)\n-\t\t  || (!optimize && flag_keep_static_consts)\n+\t\t  || (!optimize \n+\t\t      && flag_keep_static_consts\n+\t\t      && !DECL_ARTIFICIAL (decl))\n \t\t  || TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))))\n \t    {\n \t      reconsider = 1;"}]}