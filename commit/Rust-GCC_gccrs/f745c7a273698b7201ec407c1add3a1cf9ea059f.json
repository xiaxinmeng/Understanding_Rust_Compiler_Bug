{"sha": "f745c7a273698b7201ec407c1add3a1cf9ea059f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0NWM3YTI3MzY5OGI3MjAxZWM0MDdjMWFkZDNhMWNmOWVhMDU5Zg==", "commit": {"author": {"name": "Alasdair Baird", "email": "alasdair@wildcat.demon.co.uk", "date": "1998-01-25T21:00:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-25T21:00:42Z"}, "message": "recog.c (validate_replace_rtx_1): Only perform substitutions of arguments to commutative and comparison operators...\n\n        * recog.c (validate_replace_rtx_1): Only perform substitutions\n        of arguments to commutative and comparison operators once.\n\nFrom-SVN: r17482", "tree": {"sha": "63f5fda08d9629db3f1295efbbe79e27da9aad2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f5fda08d9629db3f1295efbbe79e27da9aad2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f745c7a273698b7201ec407c1add3a1cf9ea059f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f745c7a273698b7201ec407c1add3a1cf9ea059f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f745c7a273698b7201ec407c1add3a1cf9ea059f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f745c7a273698b7201ec407c1add3a1cf9ea059f/comments", "author": null, "committer": null, "parents": [{"sha": "6a093053a3fabfd66e58debfe36783c0b8fa444a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a093053a3fabfd66e58debfe36783c0b8fa444a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a093053a3fabfd66e58debfe36783c0b8fa444a"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "d0f76d280b1a64ab72016617b77840b36b134a71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f745c7a273698b7201ec407c1add3a1cf9ea059f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f745c7a273698b7201ec407c1add3a1cf9ea059f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f745c7a273698b7201ec407c1add3a1cf9ea059f", "patch": "@@ -1,3 +1,8 @@\n+Sun Jan 25 22:00:25 1998  Alasdair Baird <alasdair@wildcat.demon.co.uk>\n+\n+\t* recog.c (validate_replace_rtx_1): Only perform substitutions\n+\tof arguments to commutative and comparison operators once.\n+\n Sun Jan 25 12:30:18 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* sparc.c (output_cbranch): Add default case in"}, {"sha": "ef8d7626e3f716e2448ac6572e2dcf6fe0c2dc32", "filename": "gcc/recog.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f745c7a273698b7201ec407c1add3a1cf9ea059f/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f745c7a273698b7201ec407c1add3a1cf9ea059f/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=f745c7a273698b7201ec407c1add3a1cf9ea059f", "patch": "@@ -510,14 +510,19 @@ validate_replace_rtx_1 (loc, from, to, object)\n       break;\n     }\n       \n-  fmt = GET_RTX_FORMAT (code);\n-  for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n+  /* For commutative or comparison operations we've already performed\n+     replacements.  Don't try to perform them again.  */\n+  if (GET_RTX_CLASS (code) != '<' && GET_RTX_CLASS (code) != 'c')\n     {\n-      if (fmt[i] == 'e')\n-\tvalidate_replace_rtx_1 (&XEXP (x, i), from, to, object);\n-      else if (fmt[i] == 'E')\n-\tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n-\t  validate_replace_rtx_1 (&XVECEXP (x, i, j), from, to, object);\n+      fmt = GET_RTX_FORMAT (code);\n+      for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n+        {\n+          if (fmt[i] == 'e')\n+            validate_replace_rtx_1 (&XEXP (x, i), from, to, object);\n+          else if (fmt[i] == 'E')\n+            for (j = XVECLEN (x, i) - 1; j >= 0; j--)\n+              validate_replace_rtx_1 (&XVECEXP (x, i, j), from, to, object);\n+        }\n     }\n }\n "}]}