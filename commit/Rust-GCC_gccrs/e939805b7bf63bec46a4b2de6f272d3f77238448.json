{"sha": "e939805b7bf63bec46a4b2de6f272d3f77238448", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzOTgwNWI3YmY2M2JlYzQ2YTRiMmRlNmYyNzJkM2Y3NzIzODQ0OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-01-15T15:44:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-15T15:44:41Z"}, "message": "re PR middle-end/37843 (unaligned stack in main due to tail call optimization)\n\ngcc/\n\n2009-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n\t    Joey Ye  <joey.ye@intel.com>\n\n\tPR middle-end/37843\n\t* cfgexpand.c (expand_stack_alignment): Don't update stack\n\tboundary nor check incoming stack boundary here.\n\t(gimple_expand_cfg): Update stack boundary and check incoming\n\tstack boundary here.\n\ngcc/testsuite/\n\n2009-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/37843\n\t* gcc.target/i386/pr37843-3.c: Replace _Decimal128 with __m128.\n\nCo-Authored-By: Joey Ye <joey.ye@intel.com>\n\nFrom-SVN: r143400", "tree": {"sha": "26ee8baa1110a4cd957e834e172e0e3ca28e4648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ee8baa1110a4cd957e834e172e0e3ca28e4648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e939805b7bf63bec46a4b2de6f272d3f77238448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e939805b7bf63bec46a4b2de6f272d3f77238448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e939805b7bf63bec46a4b2de6f272d3f77238448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e939805b7bf63bec46a4b2de6f272d3f77238448/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "750900dba0c3d968f7d059c5dc1ff27a246f05f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750900dba0c3d968f7d059c5dc1ff27a246f05f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750900dba0c3d968f7d059c5dc1ff27a246f05f5"}], "stats": {"total": 58, "additions": 40, "deletions": 18}, "files": [{"sha": "4afe53fec258db9d81c375dd2733fa7ce825a3d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e939805b7bf63bec46a4b2de6f272d3f77238448", "patch": "@@ -1,3 +1,12 @@\n+2009-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Joey Ye  <joey.ye@intel.com>\n+\n+\tPR middle-end/37843\n+\t* cfgexpand.c (expand_stack_alignment): Don't update stack\n+\tboundary nor check incoming stack boundary here.\n+\t(gimple_expand_cfg): Update stack boundary and check incoming\n+\tstack boundary here.\n+\n 2009-01-15  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* dce.c (find_call_stack_args, delete_unmarked_insns): Fixed"}, {"sha": "6d7fe772fe789ce18deed043242a949ae5c81dd8", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=e939805b7bf63bec46a4b2de6f272d3f77238448", "patch": "@@ -2215,7 +2215,7 @@ static void\n expand_stack_alignment (void)\n {\n   rtx drap_rtx;\n-  unsigned int preferred_stack_boundary, incoming_stack_boundary;\n+  unsigned int preferred_stack_boundary;\n \n   if (! SUPPORTS_STACK_ALIGNMENT)\n     return;\n@@ -2228,10 +2228,6 @@ expand_stack_alignment (void)\n   gcc_assert (crtl->stack_alignment_needed\n \t      <= crtl->stack_alignment_estimated);\n \n-  /* Update stack boundary if needed.  */\n-  if (targetm.calls.update_stack_boundary)\n-    targetm.calls.update_stack_boundary (); \n-\n   /* Update crtl->stack_alignment_estimated and use it later to align\n      stack.  We check PREFERRED_STACK_BOUNDARY if there may be non-call\n      exceptions since callgraph doesn't collect incoming stack alignment\n@@ -2246,15 +2242,8 @@ expand_stack_alignment (void)\n   if (preferred_stack_boundary > crtl->stack_alignment_needed)\n     crtl->stack_alignment_needed = preferred_stack_boundary;\n \n-  /* The incoming stack frame has to be aligned at least at\n-     parm_stack_boundary.  */\n-  if (crtl->parm_stack_boundary > INCOMING_STACK_BOUNDARY)\n-    incoming_stack_boundary = crtl->parm_stack_boundary;\n-  else\n-    incoming_stack_boundary = INCOMING_STACK_BOUNDARY;\n-\n   crtl->stack_realign_needed\n-    = incoming_stack_boundary < crtl->stack_alignment_estimated;\n+    = INCOMING_STACK_BOUNDARY < crtl->stack_alignment_estimated;\n   crtl->stack_realign_tried = crtl->stack_realign_needed;\n \n   crtl->stack_realign_processed = true;\n@@ -2359,6 +2348,23 @@ gimple_expand_cfg (void)\n   if (crtl->stack_protect_guard)\n     stack_protect_prologue ();\n \n+  /* Update stack boundary if needed.  */\n+  if (SUPPORTS_STACK_ALIGNMENT)\n+    {\n+      /* Call update_stack_boundary here to update incoming stack\n+\t boundary before TARGET_FUNCTION_OK_FOR_SIBCALL is called.\n+\t TARGET_FUNCTION_OK_FOR_SIBCALL needs to know the accurate\n+\t incoming stack alignment to check if it is OK to perform\n+\t sibcall optimization since sibcall optimization will only\n+\t align the outgoing stack to incoming stack boundary.  */\n+      if (targetm.calls.update_stack_boundary)\n+\ttargetm.calls.update_stack_boundary ();\n+      \n+      /* The incoming stack frame has to be aligned at least at\n+\t parm_stack_boundary.  */\n+      gcc_assert (crtl->parm_stack_boundary <= INCOMING_STACK_BOUNDARY);\n+    }\n+\n   /* Register rtl specific functions for cfg.  */\n   rtl_register_cfg_hooks ();\n "}, {"sha": "0876ea0d0c48f4a1638a40ed09b1074bdf88f59f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e939805b7bf63bec46a4b2de6f272d3f77238448", "patch": "@@ -1,3 +1,8 @@\n+2009-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/37843\n+\t* gcc.target/i386/pr37843-3.c: Replace _Decimal128 with __m128.\n+\n 2009-01-15  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/38636"}, {"sha": "a475e4143ff05168e0c22d07fe9f5d9d4de64564", "filename": "gcc/testsuite/gcc.target/i386/pr37843-3.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e939805b7bf63bec46a4b2de6f272d3f77238448/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c?ref=e939805b7bf63bec46a4b2de6f272d3f77238448", "patch": "@@ -1,13 +1,15 @@\n /* Test for stack alignment with sibcall optimization.  */\n-/* { dg-do compile { target { *-*-linux* && { ilp32 && nonpic } } } } */\n-/* { dg-options \"-O2 -std=gnu99 -mpreferred-stack-boundary=4 -mincoming-stack-boundary=2\" } */\n+/* { dg-do compile { target { ilp32 && nonpic } } } */\n+/* { dg-options \"-O2 -msse2 -mpreferred-stack-boundary=4 -mstackrealign\" } */\n /* { dg-final { scan-assembler-not \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n /* { dg-final { scan-assembler-not \"call\\[\\\\t \\]*foo\" } } */\n /* { dg-final { scan-assembler \"jmp\\[\\\\t \\]*foo\" } } */\n \n-extern int foo (_Decimal128);\n+#include <emmintrin.h>\n \n-int bar (_Decimal128 x)\n+extern int foo (__m128, __m128, __m128, __m128);\n+\n+int bar (__m128 x1, __m128 x2, __m128 x3, __m128 x4)\n {\n-    return foo(x);\n+    return foo (x1, x2, x3, x4);\n }"}]}