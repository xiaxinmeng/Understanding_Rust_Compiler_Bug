{"sha": "5b953740da1976d90d974055c6d825c509c6e654", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5NTM3NDBkYTE5NzZkOTBkOTc0MDU1YzZkODI1YzUwOWM2ZTY1NA==", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2021-05-19T14:52:45Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2021-05-19T14:52:45Z"}, "message": "arm: Fix ICE with CMSE nonsecure calls on Armv8.1-M [PR100333]\n\nAs the PR shows, we ICE shortly after expanding nonsecure calls for Armv8.1-M.\nFor Armv8.1-M, we have TARGET_HAVE_FPCXT_CMSE. As it stands, the expander\n(arm.md:nonsecure_call_internal) moves the callee's address to a register (with\ncopy_to_suggested_reg) only if !TARGET_HAVE_FPCXT_CMSE.\n\nHowever, looking at the pattern which the insn appears to be intended to\nmatch (thumb2.md:*nonsecure_call_reg_thumb2_fpcxt), it requires the\ncallee's address to be in a register.\n\nThis patch therefore just forces the callee's address into a register in\nthe expander.\n\ngcc/ChangeLog:\n\n\tPR target/100333\n\t* config/arm/arm.md (nonsecure_call_internal): Always ensure\n\tcallee's address is in a register.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/100333\n\t* gcc.target/arm/cmse/pr100333.c: New test.", "tree": {"sha": "d41a13ba370687872483bfdc46d0e1f2b69f08f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41a13ba370687872483bfdc46d0e1f2b69f08f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b953740da1976d90d974055c6d825c509c6e654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b953740da1976d90d974055c6d825c509c6e654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b953740da1976d90d974055c6d825c509c6e654", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b953740da1976d90d974055c6d825c509c6e654/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "beeb01541ae845b445837b873126a7f968b8f654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beeb01541ae845b445837b873126a7f968b8f654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beeb01541ae845b445837b873126a7f968b8f654"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "064604808cccb2a9d747e1f3055d757217a08db2", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b953740da1976d90d974055c6d825c509c6e654/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b953740da1976d90d974055c6d825c509c6e654/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=5b953740da1976d90d974055c6d825c509c6e654", "patch": "@@ -8580,18 +8580,21 @@\n \t      (use (match_operand 2 \"\" \"\"))\n \t      (clobber (reg:SI LR_REGNUM))])]\n   \"use_cmse\"\n-  \"\n   {\n+    rtx addr = XEXP (operands[0], 0);\n+    rtx tmp = REG_P (addr) ? addr : force_reg (SImode, addr);\n+\n     if (!TARGET_HAVE_FPCXT_CMSE)\n       {\n-\trtx tmp =\n-\t  copy_to_suggested_reg (XEXP (operands[0], 0),\n-\t\t\t\t gen_rtx_REG (SImode, R4_REGNUM),\n-\t\t\t\t SImode);\n-\n-\toperands[0] = replace_equiv_address (operands[0], tmp);\n+\trtx r4 = gen_rtx_REG (SImode, R4_REGNUM);\n+\temit_move_insn (r4, tmp);\n+\ttmp = r4;\n       }\n-  }\")\n+\n+    if (tmp != addr)\n+      operands[0] = replace_equiv_address (operands[0], tmp);\n+  }\n+)\n \n (define_insn \"*call_reg_armv5\"\n   [(call (mem:SI (match_operand:SI 0 \"s_register_operand\" \"r\"))"}, {"sha": "d8e3d809f73c719248fedce11aa94a8ac9ba4d2b", "filename": "gcc/testsuite/gcc.target/arm/cmse/pr100333.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b953740da1976d90d974055c6d825c509c6e654/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fpr100333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b953740da1976d90d974055c6d825c509c6e654/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fpr100333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fpr100333.c?ref=5b953740da1976d90d974055c6d825c509c6e654", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-mcmse\" } */\n+typedef void __attribute__((cmse_nonsecure_call)) t(void);\n+t g;\n+void f() {\n+  g();\n+}"}]}