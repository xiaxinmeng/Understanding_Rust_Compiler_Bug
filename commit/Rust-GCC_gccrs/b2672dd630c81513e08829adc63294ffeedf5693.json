{"sha": "b2672dd630c81513e08829adc63294ffeedf5693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI2NzJkZDYzMGM4MTUxM2UwODgyOWFkYzYzMjk0ZmZlZWRmNTY5Mw==", "commit": {"author": {"name": "Fei Yang", "email": "felix.yang@huawei.com", "date": "2020-06-02T17:17:34Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-06-02T17:17:34Z"}, "message": "aarch64: Fix an ICE in aarch64_short_vector_p [PR95459]\n\nIn aarch64_short_vector_p, we are simply checking whether a type (and a mode)\nis a 64/128-bit short vector or not.  This should not be affected by the value\nof TARGET_SVE.  Simply leave later code to report an error if SVE is disabled.\n\n2020-06-02  Felix Yang  <felix.yang@huawei.com>\n\ngcc/\n\tPR target/95459\n\t* config/aarch64/aarch64.c (aarch64_short_vector_p):\n\tLeave later code to report an error if SVE is disabled.\n\ngcc/testsuite/\n\tPR target/95459\n\t* gcc.target/aarch64/mgeneral-regs_6.c: New test.", "tree": {"sha": "be703c8771f526c5ebc24a71eda0d6e1358ce009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be703c8771f526c5ebc24a71eda0d6e1358ce009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2672dd630c81513e08829adc63294ffeedf5693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2672dd630c81513e08829adc63294ffeedf5693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2672dd630c81513e08829adc63294ffeedf5693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2672dd630c81513e08829adc63294ffeedf5693/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eca833b81289438ec5ae3ed4c77ffb49cfb65f34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca833b81289438ec5ae3ed4c77ffb49cfb65f34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca833b81289438ec5ae3ed4c77ffb49cfb65f34"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "6352d4ff78ad183d5e7de86e62b267803347ddfe", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2672dd630c81513e08829adc63294ffeedf5693/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2672dd630c81513e08829adc63294ffeedf5693/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b2672dd630c81513e08829adc63294ffeedf5693", "patch": "@@ -16800,7 +16800,8 @@ aarch64_short_vector_p (const_tree type,\n     {\n       /* Rely only on the type, not the mode, when processing SVE types.  */\n       if (type && aarch64_some_values_include_pst_objects_p (type))\n-\tgcc_assert (aarch64_sve_mode_p (mode));\n+\t/* Leave later code to report an error if SVE is disabled.  */\n+\tgcc_assert (!TARGET_SVE || aarch64_sve_mode_p (mode));\n       else\n \tsize = GET_MODE_SIZE (mode);\n     }"}, {"sha": "427ae6a0e4bc988ce6e969b4d01ce45b34a2d95c", "filename": "gcc/testsuite/gcc.target/aarch64/mgeneral-regs_6.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2672dd630c81513e08829adc63294ffeedf5693/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmgeneral-regs_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2672dd630c81513e08829adc63294ffeedf5693/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmgeneral-regs_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmgeneral-regs_6.c?ref=b2672dd630c81513e08829adc63294ffeedf5693", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-options \"-O2 -march=armv8.2-a+sve\" } */\n+/* { dg-prune-output \"compilation terminated\" } */\n+\n+#include <arm_sve.h>\n+\n+#pragma GCC push_options\n+#pragma GCC target \"general-regs-only\"\n+\n+svint8x2_t\n+foo (svint8_t x0, svint8_t x1) /* { dg-error {'foo' requires the SVE ISA extension} } */\n+{\n+  return svcreate2 (x0, x1); /* { dg-error {ACLE function 'svcreate2_s8' is incompatible with the use of '-mgeneral-regs-only'} } */\n+}\n+\n+#pragma GCC pop_options"}]}