{"sha": "49d8b8028170af3242cb705fe2fabf46697843c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlkOGI4MDI4MTcwYWYzMjQyY2I3MDVmZTJmYWJmNDY2OTc4NDNjMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-08-06T09:35:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-06T09:35:17Z"}, "message": "sem_ch3.adb (Access_Subprogram_Declaration): If the return type is incomplete...\n\n2008-08-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Access_Subprogram_Declaration): If the return type is\n\tincomplete, add the access_to_subprogram type to the list of private\n\tdependents only if the incomplete type will be completed in the current\n\tscope.\n\t(Build_Discriminant_Constraints): If the type of the discriminant is\n\taccess_to_variable, reject a constraint that is access_to_constant.\n\nFrom-SVN: r138784", "tree": {"sha": "786dc57f45902b0dbd0b3d295c5241210bb656d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786dc57f45902b0dbd0b3d295c5241210bb656d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49d8b8028170af3242cb705fe2fabf46697843c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d8b8028170af3242cb705fe2fabf46697843c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d8b8028170af3242cb705fe2fabf46697843c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d8b8028170af3242cb705fe2fabf46697843c1/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66aa7643363c7c7b6246649b35f5e6a6b7948c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66aa7643363c7c7b6246649b35f5e6a6b7948c6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66aa7643363c7c7b6246649b35f5e6a6b7948c6b"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "bc16c08cb27b65f9129c86572ed9e64ce372345f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d8b8028170af3242cb705fe2fabf46697843c1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d8b8028170af3242cb705fe2fabf46697843c1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=49d8b8028170af3242cb705fe2fabf46697843c1", "patch": "@@ -1179,8 +1179,13 @@ package body Sem_Ch3 is\n          end loop;\n       end if;\n \n+      --  If the return type is incomplete, this is legal as long as the\n+      --  type is declared in the current scope and will be completed in\n+      --  it (rather than being part of limited view).\n+\n       if Ekind (Etype (Desig_Type)) = E_Incomplete_Type\n         and then not Has_Delayed_Freeze (Desig_Type)\n+        and then In_Open_Scopes (Scope (Etype (Desig_Type)))\n       then\n          Append_Elmt (Desig_Type, Private_Dependents (Etype (Desig_Type)));\n          Set_Has_Delayed_Freeze (Desig_Type);\n@@ -2567,7 +2572,7 @@ package body Sem_Ch3 is\n            and then Is_Access_Constant (Etype (E))\n          then\n             Error_Msg_N\n-              (\"object that is an access to variable cannot be initialized \" &\n+              (\"access to variable cannot be initialized \" &\n                 \"with an access-to-constant expression\", E);\n          end if;\n \n@@ -7622,6 +7627,15 @@ package body Sem_Ch3 is\n                          (Designated_Type (Etype (Discr_Expr (J))))\n             then\n                Wrong_Type (Discr_Expr (J), Etype (Discr));\n+\n+            elsif Is_Access_Type (Etype (Discr))\n+              and then not Is_Access_Constant (Etype (Discr))\n+              and then Is_Access_Type (Etype (Discr_Expr (J)))\n+              and then Is_Access_Constant (Etype (Discr_Expr (J)))\n+            then\n+               Error_Msg_NE\n+                 (\"constraint for discriminant& must be access to variable\",\n+                    Def, Discr);\n             end if;\n          end if;\n "}]}