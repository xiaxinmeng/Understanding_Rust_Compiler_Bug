{"sha": "4bcdd4d0b29c8053d86b78d802eba6750a5840d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjZGQ0ZDBiMjljODA1M2Q4NmI3OGQ4MDJlYmE2NzUwYTU4NDBkOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-17T11:36:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-17T11:36:47Z"}, "message": "(push_secondary_reload): Don't strip paradoxical SUBREG if\nreload_class is CLASS_CANNOT_CHANGE_SIZE.\n\nFrom-SVN: r10782", "tree": {"sha": "f9414f9f944e3d3c7bcb81b761e75f26449a78d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9414f9f944e3d3c7bcb81b761e75f26449a78d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bcdd4d0b29c8053d86b78d802eba6750a5840d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcdd4d0b29c8053d86b78d802eba6750a5840d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcdd4d0b29c8053d86b78d802eba6750a5840d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcdd4d0b29c8053d86b78d802eba6750a5840d8/comments", "author": null, "committer": null, "parents": [{"sha": "db3ec607e7d38be216c44d6d29004a17c1998083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3ec607e7d38be216c44d6d29004a17c1998083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3ec607e7d38be216c44d6d29004a17c1998083"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "53569e7ca714849776ca6e6535a0f98ecfaa0bfa", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcdd4d0b29c8053d86b78d802eba6750a5840d8/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcdd4d0b29c8053d86b78d802eba6750a5840d8/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=4bcdd4d0b29c8053d86b78d802eba6750a5840d8", "patch": "@@ -360,6 +360,9 @@ push_secondary_reload (in_p, x, opnum, optional, reload_class, reload_mode,\n   /* If X is a paradoxical SUBREG, use the inner value to determine both the\n      mode and object being reloaded.  */\n   if (GET_CODE (x) == SUBREG\n+#ifdef CLASS_CANNOT_CHANGE_SIZE\n+      && reload_class != CLASS_CANNOT_CHANGE_SIZE\n+#endif\n       && (GET_MODE_SIZE (GET_MODE (x))\n \t  > GET_MODE_SIZE (GET_MODE (SUBREG_REG (x)))))\n     {"}]}