{"sha": "da5029563979b1c49b06c75cf44ace86de2e9156", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE1MDI5NTYzOTc5YjFjNDliMDZjNzVjZjQ0YWNlODZkZTJlOTE1Ng==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2001-05-21T12:31:14Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-05-21T12:31:14Z"}, "message": "linux.h (MD_FALLBACK_FRAME_STATE_FOR): New.\n\n2001-05-17  Andrew Haley  <aph@redhat.com>\n\n        * config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): New.\n\nFrom-SVN: r42386", "tree": {"sha": "0a15309b1f84d1549cdd918a0bb0a169c3cf4c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a15309b1f84d1549cdd918a0bb0a169c3cf4c5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da5029563979b1c49b06c75cf44ace86de2e9156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5029563979b1c49b06c75cf44ace86de2e9156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da5029563979b1c49b06c75cf44ace86de2e9156", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5029563979b1c49b06c75cf44ace86de2e9156/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0ef84a27fb676f973232da37b7c8c6ceed9b96a"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "01a4e4d02fdd61c93a81d1dd9b775788bcc4730c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da5029563979b1c49b06c75cf44ace86de2e9156/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da5029563979b1c49b06c75cf44ace86de2e9156/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da5029563979b1c49b06c75cf44ace86de2e9156", "patch": "@@ -1,3 +1,7 @@\n+2001-05-17  Andrew Haley  <aph@redhat.com>\n+\n+\t* config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): New.\n+\n 2001-05-21  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2out.c (DEBUG_FRAME_SECTION): Rename from FRAME_SECTION."}, {"sha": "285cf55e5c1056b25bf0f3e411e5018dd5873ba4", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da5029563979b1c49b06c75cf44ace86de2e9156/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da5029563979b1c49b06c75cf44ace86de2e9156/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=da5029563979b1c49b06c75cf44ace86de2e9156", "patch": "@@ -66,3 +66,56 @@ Boston, MA 02111-1307, USA.  */\n #ifndef USE_GNULIBC_1\n #define DEFAULT_VTABLE_THUNKS 1\n #endif\n+\n+/* Do code reading to identify a signal frame, and set the frame\n+   state data appropriately.  See unwind-dw2.c for the structs.  */\n+\n+#ifdef IN_LIBGCC2\n+#include <signal.h>\n+#include <sys/ucontext.h>\n+#endif\n+\n+#define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n+    struct sigcontext *sc_;\t\t\t\t\t\t\\\n+    long new_cfa_;\t\t\t\t\t\t\t\\\n+    int i_;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* li r0, 0x7777; sc  (rt_sigreturn)  */\t\t\t\t\\\n+    /* li r0, 0x6666; sc  (sigreturn)  */\t\t\t\t\\\n+    if (((*(unsigned int *) (pc_+0) == 0x38007777)\t\t\t\\\n+\t || (*(unsigned int *) (pc_+0) == 0x38006666))\t\t\t\\\n+\t&& (*(unsigned int *) (pc_+4)  == 0x44000002))\t\t\t\\\n+\tsc_ = (CONTEXT)->cfa + __SIGNAL_FRAMESIZE;\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    \t\t\t\t\t\t\t\t\t\\\n+    new_cfa_ = sc_->regs->gpr[STACK_POINTER_REGNUM];\t\t\t\\\n+    (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n+    (FS)->cfa_reg = STACK_POINTER_REGNUM;\t\t\t\t\\\n+    (FS)->cfa_offset = new_cfa_ - (long) (CONTEXT)->cfa;\t\t\\\n+    \t\t\t\t\t\t\t\t\t\\\n+    for (i_ = 0; i_ < 32; i_++)\t\t\t\t\t\t\\\n+      if (i_ != STACK_POINTER_REGNUM)\t\t\t\t\t\\\n+\t{\t    \t\t\t\t\t\t\t\\\n+\t  (FS)->regs.reg[i_].how = REG_SAVED_OFFSET;\t\t\t\\\n+\t  (FS)->regs.reg[i_].loc.offset \t\t\t\t\\\n+\t    = (long)&(sc_->regs->gpr[i_]) - new_cfa_;\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    (FS)->regs.reg[LINK_REGISTER_REGNUM].how = REG_SAVED_OFFSET;\t\\\n+    (FS)->regs.reg[LINK_REGISTER_REGNUM].loc.offset \t\t\t\\\n+      = (long)&(sc_->regs->link) - new_cfa_;\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* The unwinder expects the IP to point to the following insn,\t\\\n+       whereas the kernel returns the address of the actual\t\t\\\n+       faulting insn.  */\t\t\t\t\t\t\\\n+    sc_->regs->nip += 4;  \t\t\t\t\t\t\\\n+    (FS)->regs.reg[CR0_REGNO].how = REG_SAVED_OFFSET;\t\t\t\\\n+    (FS)->regs.reg[CR0_REGNO].loc.offset \t\t\t\t\\\n+      = (long)&(sc_->regs->nip) - new_cfa_;\t\t\t\t\\\n+    (FS)->retaddr_column = CR0_REGNO;\t\t\t\t\t\\\n+    goto SUCCESS;\t\t\t\t\t\t\t\\\n+  } while (0)\n+"}]}