{"sha": "63254915a9dc280e52f033da0fe40441727758c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMyNTQ5MTVhOWRjMjgwZTUyZjAzM2RhMGZlNDA0NDE3Mjc3NThjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-06-11T09:18:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:18:39Z"}, "message": "[Ada] Simplify expansion of \"and then\" in CodePeer mode\n\n2018-06-11  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Record_Equality): Remove extraneous \"True and\n\tthen\" and general logical \"ada\" in codepeer mode.\n\nFrom-SVN: r261418", "tree": {"sha": "ab1f252e97183e5c33b72a0c66b60f792122f48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab1f252e97183e5c33b72a0c66b60f792122f48c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63254915a9dc280e52f033da0fe40441727758c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63254915a9dc280e52f033da0fe40441727758c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63254915a9dc280e52f033da0fe40441727758c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63254915a9dc280e52f033da0fe40441727758c0/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09adaa8d122955d9661b01d2fe005975e1331f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09adaa8d122955d9661b01d2fe005975e1331f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09adaa8d122955d9661b01d2fe005975e1331f46"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "97dbbf3f41d94d0cc51cde1619081b9600eebc7d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63254915a9dc280e52f033da0fe40441727758c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63254915a9dc280e52f033da0fe40441727758c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=63254915a9dc280e52f033da0fe40441727758c0", "patch": "@@ -1,3 +1,8 @@\n+2018-06-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_Record_Equality): Remove extraneous \"True and\n+\tthen\" and general logical \"ada\" in codepeer mode.\n+\n 2018-06-11  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch9.adb (Expand_N_Protected_Body): Add missing handling of"}, {"sha": "c29ba76f11328e9358348eedbe5e56c8aca1ea4a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63254915a9dc280e52f033da0fe40441727758c0/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63254915a9dc280e52f033da0fe40441727758c0/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=63254915a9dc280e52f033da0fe40441727758c0", "patch": "@@ -12154,12 +12154,11 @@ package body Exp_Ch4 is\n       --  Generates the following code: (assuming that Typ has one Discr and\n       --  component C2 is also a record)\n \n-      --   True\n-      --     and then Lhs.Discr1 = Rhs.Discr1\n-      --     and then Lhs.C1 = Rhs.C1\n-      --     and then Lhs.C2.C1=Rhs.C2.C1 and then ... Lhs.C2.Cn=Rhs.C2.Cn\n-      --     and then ...\n-      --     and then Lhs.Cmpn = Rhs.Cmpn\n+      --  Lhs.Discr1 = Rhs.Discr1\n+      --    and then Lhs.C1 = Rhs.C1\n+      --    and then Lhs.C2.C1=Rhs.C2.C1 and then ... Lhs.C2.Cn=Rhs.C2.Cn\n+      --    and then ...\n+      --    and then Lhs.Cmpn = Rhs.Cmpn\n \n       Result := New_Occurrence_Of (Standard_True, Loc);\n       C := Element_To_Compare (First_Entity (Typ));\n@@ -12171,7 +12170,6 @@ package body Exp_Ch4 is\n \n          begin\n             if First_Time then\n-               First_Time := False;\n                New_Lhs := Lhs;\n                New_Rhs := Rhs;\n             else\n@@ -12199,13 +12197,28 @@ package body Exp_Ch4 is\n                Set_Etype (Result, Standard_Boolean);\n                exit;\n             else\n-               Result :=\n-                 Make_And_Then (Loc,\n-                   Left_Opnd  => Result,\n-                   Right_Opnd => Check);\n+               if First_Time then\n+                  Result := Check;\n+\n+               --  Generate logical \"and\" for CodePeer to simplify the\n+               --  generated code and analysis.\n+\n+               elsif CodePeer_Mode then\n+                  Result :=\n+                    Make_Op_And (Loc,\n+                      Left_Opnd  => Result,\n+                      Right_Opnd => Check);\n+\n+               else\n+                  Result :=\n+                    Make_And_Then (Loc,\n+                      Left_Opnd  => Result,\n+                      Right_Opnd => Check);\n+               end if;\n             end if;\n          end;\n \n+         First_Time := False;\n          C := Element_To_Compare (Next_Entity (C));\n       end loop;\n "}]}