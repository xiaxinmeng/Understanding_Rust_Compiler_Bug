{"sha": "7fb66c15276446a48da02af39fb5d3e363ef8e32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiNjZjMTUyNzY0NDZhNDhkYTAyYWYzOWZiNWQzZTM2M2VmOGUzMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-12-06T13:10:31Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-12-06T13:10:31Z"}, "message": "re PR tree-optimization/64183 (Complete unroll doesn't happen for a while-loop)\n\n\tPR tree-optimization/64183\n\t* c-gimplify.c (c_gimplify_expr): Don't convert the RHS of a\n\tshift-expression if it is integer_type_node.  Use types_compatible_p.\n\n\t* gcc.dg/tree-ssa/pr64183.c: New test.\n\nFrom-SVN: r218447", "tree": {"sha": "14338b4c19e81b2d5f62b0e78a9d232cce2e975b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14338b4c19e81b2d5f62b0e78a9d232cce2e975b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fb66c15276446a48da02af39fb5d3e363ef8e32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb66c15276446a48da02af39fb5d3e363ef8e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb66c15276446a48da02af39fb5d3e363ef8e32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb66c15276446a48da02af39fb5d3e363ef8e32/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7c816408314bd7e971543bfa91250d464e45540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c816408314bd7e971543bfa91250d464e45540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c816408314bd7e971543bfa91250d464e45540"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "1cb8968c38fb7ca8fae62be1dac71933ea1ec4bb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7fb66c15276446a48da02af39fb5d3e363ef8e32", "patch": "@@ -1,3 +1,9 @@\n+2014-12-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/64183\n+\t* c-gimplify.c (c_gimplify_expr): Don't convert the RHS of a\n+\tshift-expression if it is integer_type_node.  Use types_compatible_p.\n+\n 2014-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.c (convert_vector_to_pointer_for_subscript): Remove NULL"}, {"sha": "4781cf24c6437f6022812d3f2d69d0e2da4d0d9b", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=7fb66c15276446a48da02af39fb5d3e363ef8e32", "patch": "@@ -255,7 +255,10 @@ c_gimplify_expr (tree *expr_p, gimple_seq *pre_p ATTRIBUTE_UNUSED,\n \t   type demotion/promotion pass.  */\n \ttree *op1_p = &TREE_OPERAND (*expr_p, 1);\n \tif (TREE_CODE (TREE_TYPE (*op1_p)) != VECTOR_TYPE\n-\t    && TYPE_MAIN_VARIANT (TREE_TYPE (*op1_p)) != unsigned_type_node)\n+\t    && !types_compatible_p (TYPE_MAIN_VARIANT (TREE_TYPE (*op1_p)),\n+\t\t\t\t    unsigned_type_node)\n+\t    && !types_compatible_p (TYPE_MAIN_VARIANT (TREE_TYPE (*op1_p)),\n+\t\t\t\t    integer_type_node))\n \t  *op1_p = convert (unsigned_type_node, *op1_p);\n \tbreak;\n       }"}, {"sha": "abeacd0a55d6105b00084e6a7d6c01c4e7c89f13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fb66c15276446a48da02af39fb5d3e363ef8e32", "patch": "@@ -1,3 +1,8 @@\n+2014-12-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/64183\n+\t* gcc.dg/tree-ssa/pr64183.c: New test.\n+\n 2014-12-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/64200"}, {"sha": "0563739c16963b074cd6aadd77540acde24c0e4a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr64183.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb66c15276446a48da02af39fb5d3e363ef8e32/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c?ref=7fb66c15276446a48da02af39fb5d3e363ef8e32", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-cunroll-details\" } */\n+\n+int bits;\n+unsigned int size;\n+int max_code;\n+\n+void\n+test ()\n+{\n+ int code = 0;\n+\n+ while (code < max_code)\n+   code |= ((unsigned int) (size >> (--bits)));\n+\n+ while (bits < (unsigned int)25)\n+   bits += 8;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Loop 2 iterates at most 4 times\" \"cunroll\"} } */\n+/* { dg-final { cleanup-tree-dump \"cunroll\" } } */"}]}