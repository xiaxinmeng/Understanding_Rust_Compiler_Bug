{"sha": "c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlNDNjYzQ1YjI3ZTM5MDE2YWExZGVhZDAyM2RjNWVkYmQzNGViMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-03-26T18:45:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-03-26T18:45:56Z"}, "message": "re PR target/42113 (Internal Compiler error with -O3, breaking commit known)\n\n\tPR target/42113\n\t* config/alpha/alpha.md (*cmp_sadd_si): Change mode\n\tof scratch register to DImode.  Split to DImode comparison operator.\n\tUse SImode subreg of scratch register in the multiplication.\n\t(*cmp_sadd_sidi): Ditto.\n\t(*cmp_ssub_si): Ditto.\n\t(*cmp_ssub_sidi): Ditto.\n\nFrom-SVN: r157759", "tree": {"sha": "407d2363cac73f350d0cefb2cf44c0dc1bb31d0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/407d2363cac73f350d0cefb2cf44c0dc1bb31d0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e43cc45b27e39016aa1dead023dc5edbd34eb2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb04bb842fb8e5eb49f8066953da8e9064c24453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb04bb842fb8e5eb49f8066953da8e9064c24453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb04bb842fb8e5eb49f8066953da8e9064c24453"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "1dbd25ba7d992e161360e23bbecc8657c707d625", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e43cc45b27e39016aa1dead023dc5edbd34eb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e43cc45b27e39016aa1dead023dc5edbd34eb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "patch": "@@ -1,3 +1,13 @@\n+2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42113\n+\t* config/alpha/alpha.md (*cmp_sadd_si): Change mode\n+\tof scratch register to DImode.  Split to DImode comparison operator.\n+\tUse SImode subreg of scratch register in the multiplication.\n+\t(*cmp_sadd_sidi): Ditto.\n+\t(*cmp_ssub_si): Ditto.\n+\t(*cmp_ssub_sidi): Ditto.\n+\n 2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43524"}, {"sha": "e5f8c12cb033337e6566f02880ab0ba13f8ca912", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e43cc45b27e39016aa1dead023dc5edbd34eb2/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e43cc45b27e39016aa1dead023dc5edbd34eb2/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "patch": "@@ -4186,20 +4186,22 @@\n \t\t   (match_operand:SI 3 \"const48_operand\" \"I\")\n \t\t   (const_int 0))\n \t         (match_operand:SI 4 \"sext_add_operand\" \"rIO\")))\n-   (clobber (match_scratch:SI 5 \"=r\"))]\n+   (clobber (match_scratch:DI 5 \"=r\"))]\n   \"\"\n   \"#\"\n   \"\"\n   [(set (match_dup 5)\n-\t(match_op_dup:SI 1 [(match_dup 2) (const_int 0)]))\n+\t(match_op_dup:DI 1 [(match_dup 2) (const_int 0)]))\n    (set (match_dup 0)\n-\t(plus:SI (mult:SI (match_dup 5) (match_dup 3))\n+\t(plus:SI (mult:SI (match_dup 6) (match_dup 3))\n \t\t (match_dup 4)))]\n {\n   if (can_create_pseudo_p ())\n-    operands[5] = gen_reg_rtx (SImode);\n+    operands[5] = gen_reg_rtx (DImode);\n   else if (reg_overlap_mentioned_p (operands[5], operands[4]))\n-    operands[5] = operands[0];\n+    operands[5] = gen_lowpart (DImode, operands[0]);\n+\n+  operands[6] = gen_lowpart (SImode, operands[5]);\n })\n \n (define_insn_and_split \"*cmp_sadd_sidi\"\n@@ -4212,20 +4214,22 @@\n \t\t     (match_operand:SI 3 \"const48_operand\" \"I\")\n \t\t     (const_int 0))\n \t           (match_operand:SI 4 \"sext_add_operand\" \"rIO\"))))\n-   (clobber (match_scratch:SI 5 \"=r\"))]\n+   (clobber (match_scratch:DI 5 \"=r\"))]\n   \"\"\n   \"#\"\n   \"\"\n   [(set (match_dup 5)\n-\t(match_op_dup:SI 1 [(match_dup 2) (const_int 0)]))\n+\t(match_op_dup:DI 1 [(match_dup 2) (const_int 0)]))\n    (set (match_dup 0)\n-\t(sign_extend:DI (plus:SI (mult:SI (match_dup 5) (match_dup 3))\n+\t(sign_extend:DI (plus:SI (mult:SI (match_dup 6) (match_dup 3))\n \t\t\t\t (match_dup 4))))]\n {\n   if (can_create_pseudo_p ())\n-    operands[5] = gen_reg_rtx (SImode);\n+    operands[5] = gen_reg_rtx (DImode);\n   else if (reg_overlap_mentioned_p (operands[5], operands[4]))\n-    operands[5] = gen_lowpart (SImode, operands[0]);\n+    operands[5] = operands[0];\n+\n+  operands[6] = gen_lowpart (SImode, operands[5]);\n })\n \n (define_insn_and_split \"*cmp_ssub_di\"\n@@ -4262,20 +4266,22 @@\n \t\t    (match_operand:SI 3 \"const48_operand\" \"I\")\n \t\t    (const_int 0))\n \t          (match_operand:SI 4 \"reg_or_8bit_operand\" \"rI\")))\n-   (clobber (match_scratch:SI 5 \"=r\"))]\n+   (clobber (match_scratch:DI 5 \"=r\"))]\n   \"\"\n   \"#\"\n   \"\"\n   [(set (match_dup 5)\n-\t(match_op_dup:SI 1 [(match_dup 2) (const_int 0)]))\n+\t(match_op_dup:DI 1 [(match_dup 2) (const_int 0)]))\n    (set (match_dup 0)\n-\t(minus:SI (mult:SI (match_dup 5) (match_dup 3))\n+\t(minus:SI (mult:SI (match_dup 6) (match_dup 3))\n \t\t (match_dup 4)))]\n {\n   if (can_create_pseudo_p ())\n-    operands[5] = gen_reg_rtx (SImode);\n+    operands[5] = gen_reg_rtx (DImode);\n   else if (reg_overlap_mentioned_p (operands[5], operands[4]))\n-    operands[5] = operands[0];\n+    operands[5] = gen_lowpart (DImode, operands[0]);\n+\n+  operands[6] = gen_lowpart (SImode, operands[5]);\n })\n \n (define_insn_and_split \"*cmp_ssub_sidi\"\n@@ -4288,20 +4294,22 @@\n \t\t      (match_operand:SI 3 \"const48_operand\" \"I\")\n \t\t      (const_int 0))\n \t            (match_operand:SI 4 \"reg_or_8bit_operand\" \"rI\"))))\n-   (clobber (match_scratch:SI 5 \"=r\"))]\n+   (clobber (match_scratch:DI 5 \"=r\"))]\n   \"\"\n   \"#\"\n   \"\"\n   [(set (match_dup 5)\n-\t(match_op_dup:SI 1 [(match_dup 2) (const_int 0)]))\n+\t(match_op_dup:DI 1 [(match_dup 2) (const_int 0)]))\n    (set (match_dup 0)\n-\t(sign_extend:DI (minus:SI (mult:SI (match_dup 5) (match_dup 3))\n+\t(sign_extend:DI (minus:SI (mult:SI (match_dup 6) (match_dup 3))\n \t\t\t\t  (match_dup 4))))]\n {\n   if (can_create_pseudo_p ())\n-    operands[5] = gen_reg_rtx (SImode);\n+    operands[5] = gen_reg_rtx (DImode);\n   else if (reg_overlap_mentioned_p (operands[5], operands[4]))\n-    operands[5] = gen_lowpart (SImode, operands[0]);\n+    operands[5] = operands[0];\n+\n+  operands[6] = gen_lowpart (SImode, operands[5]);\n })\n \f\n ;; Here are the CALL and unconditional branch insns.  Calls on NT and OSF"}]}