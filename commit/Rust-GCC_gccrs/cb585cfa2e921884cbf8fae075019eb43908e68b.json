{"sha": "cb585cfa2e921884cbf8fae075019eb43908e68b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1ODVjZmEyZTkyMTg4NGNiZjhmYWUwNzUwMTllYjQzOTA4ZTY4Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-03T09:12:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-03T09:12:27Z"}, "message": "Remove questionable files\n\nFrom-SVN: r28456", "tree": {"sha": "52dc381f8fd7bb65c25d1cea891b9683d00ef4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52dc381f8fd7bb65c25d1cea891b9683d00ef4dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb585cfa2e921884cbf8fae075019eb43908e68b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb585cfa2e921884cbf8fae075019eb43908e68b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb585cfa2e921884cbf8fae075019eb43908e68b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb585cfa2e921884cbf8fae075019eb43908e68b/comments", "author": null, "committer": null, "parents": [{"sha": "6285c904f784dd3d93813e2753cefa4f7cc01df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6285c904f784dd3d93813e2753cefa4f7cc01df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6285c904f784dd3d93813e2753cefa4f7cc01df6"}], "stats": {"total": 3078, "additions": 0, "deletions": 3078}, "files": [{"sha": "de46668484bcdee3093bb425fe7468fa276fbf37", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash19.C", "status": "removed", "additions": 0, "deletions": 1704, "changes": 1704, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6285c904f784dd3d93813e2753cefa4f7cc01df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6285c904f784dd3d93813e2753cefa4f7cc01df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C?ref=6285c904f784dd3d93813e2753cefa4f7cc01df6", "patch": "@@ -1,1704 +0,0 @@\n-// Special g++ Options:\n-// Build don't link: \n-// GROUPS passed old-abort\n-typedef unsigned long _G_clock_t;\n-typedef long _G_dev_t;\n-typedef long int _G_fpos_t;\n-typedef long _G_gid_t;\n-typedef unsigned long _G_ino_t;\n-typedef unsigned short _G_mode_t;\n-typedef short _G_nlink_t;\n-typedef long _G_off_t;\n-typedef long _G_pid_t;\n-typedef int _G_ptrdiff_t;\n-typedef int   _G_sigset_t;\n-typedef unsigned int _G_size_t;\n-typedef long _G_time_t;\n-typedef long _G_uid_t;\n-typedef unsigned int _G_wchar_t;\n-typedef int _G_ssize_t;\n-typedef double * _G_va_list;\n-class ostream; class streambuf; class backupbuf;\n-extern \"C\" int __underflow(streambuf*);\n-extern \"C\" int __overflow(streambuf*, int);\n-typedef _G_off_t streamoff;\n-typedef _G_off_t streampos;  \n-typedef unsigned long __fmtflags;\n-typedef unsigned char __iostate;\n-struct _ios_fields {  \n-    streambuf *_strbuf;\n-    ostream* _tie;\n-    int _width;\n-    __fmtflags _flags;\n-    _G_wchar_t _fill;\n-    __iostate _state;\n-    __iostate _exceptions;\n-    int _precision;\n-};\n-enum state_value {\n-    _good = 0 ,\n-    _eof = 1 ,\n-    _fail = 2 ,\n-    _bad = 4  };\n-enum open_mode {\n-    input = 1 ,\n-    output = 2 ,\n-    atend = 4 ,\n-    append = 8  };\n-class ios : public _ios_fields {\n-  public:\n-    typedef __fmtflags fmtflags;\n-    typedef int iostate;\n-    typedef int openmode;\n-    enum io_state {\n-\tgoodbit = 0 ,\n-\teofbit = 1 ,\n-\tfailbit = 2 ,\n-\tbadbit = 4  };\n-    enum open_mode {\n-\tin = 1 ,\n-\tout = 2 ,\n-\tate = 4 ,\n-\tapp = 8 ,\n-\ttrunc = 16 ,\n-\tnocreate = 32 ,\n-\tnoreplace = 64 ,\n-\tbin = 128  };\n-    enum seek_dir { beg, cur, end};\n-    enum { skipws=01, left=02, right=04, internal=010,\n-\t   dec=020, oct=040, hex=0100,\n-\t   showbase=0200, showpoint=0400, uppercase=01000, showpos=02000,\n-\t   scientific=04000, fixed=010000, unitbuf=020000, stdio=040000,\n-\t   dont_close=0x80000000  \n-\t   };\n-    enum {  \n-\tbasefield=dec+oct+hex,\n-\tfloatfield = scientific+fixed,\n-\tadjustfield = left+right+internal\n-    };\n-    ostream* tie() const { return _tie; }\n-    ostream* tie(ostream* val) { ostream* save=_tie; _tie=val; return save; }\n-    _G_wchar_t fill() const { return (_G_wchar_t)_fill; }\n-    _G_wchar_t fill(_G_wchar_t newf)\n-\t{_G_wchar_t oldf = (_G_wchar_t)_fill; _fill = (char)newf; return oldf;}\n-    fmtflags flags() const { return _flags; }\n-    fmtflags flags(fmtflags new_val) {\n-\tfmtflags old_val = _flags; _flags = new_val; return old_val; }\n-    int precision() const { return _precision; }\n-    int precision(int newp) {\n-\tunsigned short oldp = _precision; _precision = (unsigned short)newp;\n-\treturn oldp; }\n-    fmtflags setf(fmtflags val) {\n-\tfmtflags oldbits = _flags;\n-\t_flags |= val; return oldbits; }\n-    fmtflags setf(fmtflags val, fmtflags mask) {\n-\tfmtflags oldbits = _flags;\n-\t_flags = (_flags & ~mask) | (val & mask); return oldbits; }\n-    fmtflags unsetf(fmtflags mask) {\n-\tfmtflags oldbits = _flags & mask;\n-\t_flags &= ~mask; return oldbits; }\n-    int width() const { return _width; }\n-    int width(int val) { int save = _width; _width = val; return save; }\n-    void _throw_failure() { }\n-    streambuf* rdbuf() const { return _strbuf; }\n-    void clear(iostate state = 0) {\n-\t_state = _strbuf ? state : state|badbit;\n-\tif (_state & _exceptions) _throw_failure(); }\n-    void set(iostate flag) { _state |= flag;\n-\tif (_state & _exceptions) _throw_failure(); }\n-    int good() const { return _state == 0; }\n-    int eof() const { return _state & ios::eofbit; }\n-    int fail() const { return _state & (ios::badbit|ios::failbit); }\n-    int bad() const { return _state & ios::badbit; }\n-    iostate rdstate() const { return _state; }\n-    operator void*() const { return fail() ? (void*)0 : (void*)(-1); }\n-    int operator!() const { return fail(); }\n-    iostate exception(iostate enable) {\n-\tiostate old = _exceptions; _exceptions = enable;\n-\tif (_state & _exceptions) _throw_failure();\n-\treturn old; }\n-    static int sync_with_stdio(int on);\n-    static void sync_with_stdio() { sync_with_stdio(1); }\n-    void unset(state_value flag) { _state &= ~flag; }\n-    void close();\n-    int is_open();\n-    int readable();\n-    int writable();\n-  protected:\n-    ios(streambuf* sb = 0, ostream* tie = 0);\n-    virtual ~ios();\n-    void init(streambuf* sb) { _state=0; _strbuf=sb; }\n-};\n-typedef ios::seek_dir _seek_dir;\n-class streammarker {\n-    friend class streambuf;\n-    friend int __underflow(streambuf*);\n-    struct streammarker *_next;   \n-    streambuf *_sbuf;  \n-    streampos _spos;  \n-    void set_streampos(streampos sp) { _spos = sp; }\n-    void set_offset(int offset) { _pos = offset; _spos = (streampos)(-2); }\n-    int _pos;\n-  public:\n-    streammarker(streambuf *sb);\n-    ~streammarker();\n-    int saving() { return  _spos == -2; }\n-    int delta(streammarker&);\n-    int delta();\n-};\n-struct __streambuf {\n-    int _flags;\t\t \n-    char* _gptr;\t \n-    char* _egptr;\t \n-    char* _eback;\t \n-    char* _pbase; // ERROR - inacessible\n-    char* _pptr;  // ERROR - inacessible\t \n-    char* _epptr;\t \n-    char* _base;\t \n-    char* _ebuf;\t \n-    struct streambuf *_chain;\n-    friend class streammarker;\n-    char *_other_gbase;  \n-    char *_aux_limit;   \n-    char *_other_egptr;  \n-    streammarker *_markers;\n-    unsigned short _cur_column;\n-    char _unused;\n-    char _shortbuf[1];\n-};\n-extern unsigned __adjust_column(unsigned start, const char *line, int count);\n-struct streambuf : private __streambuf {\n-    friend class ios;\n-    friend class istream;\n-    friend class ostream;\n-    friend class streammarker;\n-    friend int __underflow(streambuf*);\n-  protected:\n-    static streambuf* _list_all;  \n-    streambuf*& xchain() { return _chain; }\n-    void _un_link();\n-    void _link_in();\n-    char* gptr() const { return _gptr; }\n-    char* pptr() const { return _pptr; }\n-    char* egptr() const { return _egptr; }\n-    char* epptr() const { return _epptr; }\n-    char* pbase() const { return _pbase; }\n-    char* eback() const { return _eback; }\n-    char* base() const { return _base; }\n-    char* ebuf() const { return _ebuf; }\n-    int blen() const { return _ebuf - _base; }\n-    void xput_char(char c) { *_pptr++ = c; }\n-    int xflags() { return _flags; }\n-    int xflags(int f) { int fl = _flags; _flags = f; return fl; }\n-    void xsetflags(int f) { _flags |= f; }\n-    void xsetflags(int f, int mask) { _flags = (_flags & ~mask) | (f & mask); }\n-    void gbump(int n) { _gptr += n; }\n-    void pbump(int n) { _pptr += n; }\n-    void setb(char* b, char* eb, int a=0);\n-    void setp(char* p, char* ep) { _pbase=_pptr=p; _epptr=ep; }\n-    void setg(char* eb, char* g, char *eg) { _eback=eb; _gptr=g; _egptr=eg; }\n-    char *shortbuf() { return _shortbuf; }\n-    int in_backup() { return _flags & 0x100 ; }\n-    char *Gbase() { return in_backup() ? _other_gbase : _eback; }\n-    char *eGptr() { return in_backup() ? _other_egptr : _egptr; }\n-    char *Bbase() { return in_backup() ? _eback : _other_gbase; }\n-    char *Bptr() { return _aux_limit; }\n-    char *eBptr() { return in_backup() ? _egptr : _other_egptr; }\n-    char *Nbase() { return _other_gbase; }\n-    char *eNptr() { return _other_egptr; }\n-    int have_backup() { return _other_gbase != __null ; }\n-    int have_markers() { return _markers != __null ; }\n-    int _least_marker();\n-    void switch_to_main_get_area();\n-    void switch_to_backup_area();\n-    void free_backup_area();\n-    void unsave_markers();  \n-    int put_mode() { return _flags & 0x800 ; }\n-    int switch_to_get_mode();\n-    streambuf(int flags=0);\n-  public:\n-    static int flush_all();\n-    static void flush_all_linebuffered();  \n-    virtual int underflow() = 0;  \n-    virtual int overflow(int c = (-1) ) = 0;  \n-    virtual int doallocate();\n-    virtual streampos seekoff(streamoff, _seek_dir, int mode=ios::in|ios::out);\n-    virtual streampos seekpos(streampos pos, int mode = ios::in|ios::out);\n-    int seekmark(streammarker& mark, int delta = 0);\n-    int sputbackc(char c);\n-    int sungetc();\n-    virtual ~streambuf();\n-    int unbuffered() { return _flags & 2  ? 1 : 0; }\n-    int linebuffered() { return _flags & 0x200  ? 1 : 0; }\n-    void unbuffered(int i)\n-\t{ if (i) _flags |= 2 ; else _flags &= ~2 ; }\n-    void linebuffered(int i)\n-\t{ if (i) _flags |= 0x200 ; else _flags &= ~0x200 ; }\n-    int allocate() {  \n-\tif (base() || unbuffered()) return 0;\n-\telse return doallocate(); }\n-    void allocbuf() { if (base() == __null ) doallocbuf(); }\n-    void doallocbuf();\n-    virtual int sync();\n-    virtual int pbackfail(int c);\n-    virtual streambuf* setbuf(char* p, int len);\n-    int in_avail() { return _egptr - _gptr; }\n-    int out_waiting() { return _pptr - _pbase; }\n-    virtual int xsputn(const char* s, int n);\n-    int sputn(const char* s, int n) { return xsputn(s, n); }\n-    int padn(char pad, int n);  \n-    virtual int xsgetn(char* s, int n);\n-    int sgetn(char* s, int n) { return xsgetn(s, n); }\n-    int ignore(int);\n-    virtual int get_column();\n-    virtual int set_column(int);\n-    long sgetline(char* buf, _G_size_t n, char delim, int putback_delim);\n-    int sbumpc() {\n-\tif (_gptr >= _egptr && __underflow(this) == (-1) ) return (-1) ;\n-\telse return *(unsigned char*)_gptr++; }\n-    int sgetc() {\n-\tif (_gptr >= _egptr && __underflow(this) == (-1) ) return (-1) ;\n-\telse return *(unsigned char*)_gptr; }\n-    int snextc() {\n-\tif (_gptr >= _egptr && __underflow(this) == (-1) ) return (-1) ;\n-\treturn _gptr++, sgetc(); }\n-    int sputc(int c) {\n-\tif (_pptr >= _epptr) return __overflow(this, (unsigned char)c);\n-\telse return *_pptr++ = c, (unsigned char)c; }\n-    void stossc() { if (_gptr < _egptr) _gptr++; }\n-    int vscan(char const *fmt0, _G_va_list ap, ios* stream = __null );\n-    int scan(char const *fmt0 ...);\n-    int vform(char const *fmt0, _G_va_list ap);\n-    int form(char const *fmt0 ...);\n-};\n-class backupbuf : public streambuf {\n-    friend class streammarker;\n-  protected:\n-    backupbuf(int flags=0) : streambuf(flags| 0x4000 ) { }\n-  public:\n-    virtual int pbackfail(int c);\n-    virtual int underflow();\n-    virtual int overflow(int c = (-1) );\n-};\n-struct __file_fields {\n-    short _fileno;\n-    int _blksize;\n-    _G_fpos_t _offset;\n-};\n-class filebuf : public backupbuf {\n-  protected:\n-    struct __file_fields _fb;\n-    void init();\n-  public:\n-    static const int openprot;  \n-    filebuf();\n-    filebuf(int fd);\n-    filebuf(int fd, char* p, int len);\n-    ~filebuf();\n-    filebuf* attach(int fd);\n-    filebuf* open(const char *filename, const char *mode);\n-    filebuf* open(const char *filename, ios::openmode mode, int prot = 0664);\n-    virtual int underflow();\n-    virtual int overflow(int c = (-1) );\n-    int is_open() const { return _fb._fileno >= 0; }\n-    int fd() const { return is_open() ? _fb._fileno : (-1) ; }\n-    filebuf* close();\n-    virtual int doallocate();\n-    virtual streampos seekoff(streamoff, _seek_dir, int mode=ios::in|ios::out);\n-    virtual streambuf* setbuf(char* p, int len);\n-    int xsputn(const char* s, int n);\n-    int xsgetn(char* s, int n);\n-    virtual int sync();\n-  protected:  \n-    int is_reading() { return eback() != egptr(); }\n-    char* cur_ptr() { return is_reading() ?  gptr() : pptr(); }\n-    char* file_ptr() { return eGptr(); }\n-    int do_write(const char *data, int to_do);\n-    int do_flush() { return do_write(_pbase, _pptr-_pbase); }// ERROR - \n-    virtual _G_ssize_t sys_read(char* buf, _G_size_t size);\n-    virtual _G_fpos_t sys_seek(_G_fpos_t, _seek_dir);\n-    virtual _G_ssize_t sys_write(const void*, long);\n-    virtual int sys_stat(void*);  \n-    virtual int sys_close();\n-};\n-inline ios::ios(streambuf* sb  , ostream* tie  ) {\n-\t\t_state = sb ? ios::goodbit : ios::badbit; _exceptions=0;\n-\t\t_strbuf=sb; _tie = tie; _width=0; _fill=' ';\n-\t\t_flags=ios::skipws|ios::dec; _precision=6; }\n-inline ios::~ios() {\n-    if (!(_flags & (unsigned int)ios::dont_close)) delete _strbuf; }\n-class istream; class ostream;\n-typedef ios& (*__manip)(ios&);\n-typedef istream& (*__imanip)(istream&);\n-typedef ostream& (*__omanip)(ostream&);\n-extern istream& ws(istream& ins);\n-extern ostream& flush(ostream& outs);\n-extern ostream& endl(ostream& outs);\n-extern ostream& ends(ostream& outs);\n-class ostream : virtual public ios\n-{\n-    void do_osfx();\n-  public:\n-    ostream() { }\n-    ostream(streambuf* sb, ostream* tied=__null );\n-    int opfx() {\n-\tif (!good()) return 0; else { if (_tie) _tie->flush(); return 1;} }\n-    void osfx() { if (flags() & (ios::unitbuf|ios::stdio))\n-\t\t      do_osfx(); }\n-    streambuf* ostreambuf() const { return _strbuf; }\n-    ostream& flush();\n-    ostream& put(char c) { _strbuf->sputc(c); return *this; }\n-    ostream& put(unsigned char c) { return put((char)c); }\n-    ostream& write(const char *s, int n);\n-    ostream& write(const unsigned char *s, int n) { return write((const char*)s, n);}\n-    ostream& put(signed char c) { return put((char)c); }\n-    ostream& write(const signed char *s, int n) { return write((const char*)s, n);}\n-    ostream& write(const void *s, int n) { return write((const char*)s, n);}\n-    ostream& seekp(streampos);\n-    ostream& seekp(streamoff, _seek_dir);\n-    streampos tellp();\n-    ostream& form(const char *format ...);\n-    ostream& vform(const char *format, _G_va_list args);\n-    ostream& operator<<(char c);\n-    ostream& operator<<(unsigned char c) { return (*this) << (char)c; }\n-    ostream& operator<<(signed char c) { return (*this) << (char)c; }\n-    ostream& operator<<(const char *s);\n-    ostream& operator<<(const unsigned char *s)\n-\t{ return (*this) << (const char*)s; }\n-    ostream& operator<<(const signed char *s)\n-\t{ return (*this) << (const char*)s; }\n-    ostream& operator<<(void *p);\n-    ostream& operator<<(int n);\n-    ostream& operator<<(unsigned int n);\n-    ostream& operator<<(long n);\n-    ostream& operator<<(unsigned long n);\n-    ostream& operator<<(long long n);\n-    ostream& operator<<(unsigned long long n);\n-    ostream& operator<<(short n) {return operator<<((int)n);}\n-    ostream& operator<<(unsigned short n) {return operator<<((unsigned int)n);}\n-    ostream& operator<<(double n);\n-    ostream& operator<<(float n) { return operator<<((double)n); }\n-    ostream& operator<<(__omanip func) { return (*func)(*this); }\n-    ostream& operator<<(__manip func) {(*func)(*this); return *this;}\n-    ostream& operator<<(streambuf*);\n-};\n-class istream : virtual public ios\n-{\n-    _G_ssize_t _gcount;\n-    int _skip_ws();\n-  public:\n-    istream() { _gcount = 0; }\n-    istream(streambuf* sb, ostream*tied=__null );\n-    streambuf* istreambuf() const { return _strbuf; }\n-    istream& get(char* ptr, int len, char delim = '\\n');\n-    istream& get(unsigned char* ptr, int len, char delim = '\\n')\n-\t{ return get((char*)ptr, len, delim); }\n-    istream& get(char& c);\n-    istream& get(unsigned char& c) { return get((char&)c); }\n-    istream& getline(char* ptr, int len, char delim = '\\n');\n-    istream& getline(unsigned char* ptr, int len, char delim = '\\n')\n-\t{ return getline((char*)ptr, len, delim); }\n-    istream& get(signed char& c)  { return get((char&)c); }\n-    istream& get(signed char* ptr, int len, char delim = '\\n')\n-\t{ return get((char*)ptr, len, delim); }\n-    istream& getline(signed char* ptr, int len, char delim = '\\n')\n-\t{ return getline((char*)ptr, len, delim); }\n-    istream& read(char *ptr, int n);\n-    istream& read(unsigned char *ptr, int n) { return read((char*)ptr, n); }\n-    istream& read(signed char *ptr, int n) { return read((char*)ptr, n); }\n-    istream& read(void *ptr, int n) { return read((char*)ptr, n); }\n-    istream& get(streambuf& sb, char delim = '\\n');\n-    istream& gets(char **s, char delim = '\\n');\n-    int ipfx(int need) {\n-\tif (!good()) { set(ios::failbit); return 0; }\n-\tif (_tie && (need == 0 || rdbuf()->in_avail() < need)) _tie->flush();\n-\tif (!need && (flags() & ios::skipws)) return _skip_ws();\n-\treturn 1;\n-    }\n-    int ipfx0() {  \n-\tif (!good()) { set(ios::failbit); return 0; }\n-\tif (_tie) _tie->flush();\n-\tif (flags() & ios::skipws) return _skip_ws();\n-\treturn 1;\n-    }\n-    int ipfx1() {  \n-\tif (!good()) { set(ios::failbit); return 0; }\n-\tif (_tie && rdbuf()->in_avail() == 0) _tie->flush();\n-\treturn 1;\n-    }\n-    int get() { if (!ipfx1()) return (-1) ;\n-\t\tint ch = _strbuf->sbumpc();\n-\t\tif (ch == (-1) ) set(ios::eofbit);\n-\t\treturn ch; }\n-    int peek() { if (!ipfx1()) return (-1) ;\n-\t\tint ch = _strbuf->sgetc();\n-\t\tif (ch == (-1) ) set(ios::eofbit);\n-\t\treturn ch; }\n-    _G_ssize_t gcount() { return _gcount; }\n-    istream& ignore(int n=1, int delim = (-1) );\n-    istream& seekg(streampos);\n-    istream& seekg(streamoff, _seek_dir);\n-    streampos tellg();\n-    istream& putback(char ch) {\n-\tif (good() && _strbuf->sputbackc(ch) == (-1) ) clear(ios::badbit);\n-\treturn *this;}\n-    istream& unget() {\n-\tif (good() && _strbuf->sungetc() == (-1) ) clear(ios::badbit);\n-\treturn *this;}\n-    istream& scan(const char *format ...);\n-    istream& vscan(const char *format, _G_va_list args);\n-    istream& unget(char ch) { return putback(ch); }\n-    int skip(int i);\n-    istream& operator>>(char*);\n-    istream& operator>>(unsigned char* p) { return operator>>((char*)p); }\n-    istream& operator>>(signed char*p) { return operator>>((char*)p); }\n-    istream& operator>>(char& c);\n-    istream& operator>>(unsigned char& c) {return operator>>((char&)c);}\n-    istream& operator>>(signed char& c) {return operator>>((char&)c);}\n-    istream& operator>>(int&);\n-    istream& operator>>(long&);\n-    istream& operator>>(long long&);\n-    istream& operator>>(short&);\n-    istream& operator>>(unsigned int&);\n-    istream& operator>>(unsigned long&);\n-    istream& operator>>(unsigned long long&);\n-    istream& operator>>(unsigned short&);\n-    istream& operator>>(float&);\n-    istream& operator>>(double&);\n-    istream& operator>>( __manip func) {(*func)(*this); return *this;}\n-    istream& operator>>(__imanip func) { return (*func)(*this); }\n-    istream& operator>>(streambuf*);\n-};\n-class iostream : public istream, public ostream\n-{\n-    _G_ssize_t _gcount;\n-  public:\n-    iostream() { _gcount = 0; }\n-    iostream(streambuf* sb, ostream*tied=__null );\n-};\n-extern istream cin;\n-extern ostream cout, cerr, clog;  \n-struct Iostream_init { } ;   \n-inline ios& dec(ios& i)\n-{ i.setf(ios::dec, ios::dec|ios::hex|ios::oct); return i; }\n-inline ios& hex(ios& i)\n-{ i.setf(ios::hex, ios::dec|ios::hex|ios::oct); return i; }\n-inline ios& oct(ios& i)\n-{ i.setf(ios::oct, ios::dec|ios::hex|ios::oct); return i; }\n-extern char* form(const char*, ...);\n-extern char* dec(long, int=0);\n-extern char* dec(int, int=0);\n-extern char* dec(unsigned long, int=0);\n-extern char* dec(unsigned int, int=0);\n-extern char* hex(long, int=0);\n-extern char* hex(int, int=0);\n-extern char* hex(unsigned long, int=0);\n-extern char* hex(unsigned int, int=0);\n-extern char* oct(long, int=0);\n-extern char* oct(int, int=0);\n-extern char* oct(unsigned long, int=0);\n-extern char* oct(unsigned int, int=0);\n-inline istream& WS(istream& str) { return ws(str); }\n-typedef double *__gnuc_va_list;\n-extern \"C\" {\n-   typedef struct {\n-\tint\t\t __cnt;\n-\tunsigned char\t*__ptr;\n-\tunsigned char\t*__base;\n-\tunsigned short\t __flag;\n-\tunsigned char \t __fileL;\t\t \n-\tunsigned char \t __fileH;\t\t \n-   } FILE;\n-   typedef struct {\n-\tint\t\t __cnt;\n-\tunsigned char\t*__ptr;\n-\tunsigned char\t*__base;\n-\tunsigned short\t __flag;\n-\tunsigned char \t __fileL;\t\t \n-\tunsigned char \t __fileH;\t\t \n-\tunsigned char\t*__bufendp;\t \n-\tunsigned char\t __smbuf[8 ];  \n-   } _FILEX;\n-     typedef unsigned int size_t;\n-   typedef long int fpos_t;\n-     typedef double *__va_list;\n-   extern FILE __iob[];\n-     extern int remove(const char *);\n-     extern int rename(const char *, const char *);\n-     extern FILE *tmpfile(void);\n-     extern char *tmpnam(char *);\n-     extern int fclose(FILE *);\n-     extern int fflush(FILE *);\n-     extern FILE *fopen(const char *, const char *);\n-     extern FILE *freopen(const char *, const char *, FILE *);\n-     extern void setbuf(FILE *, char *);\n-     extern int setvbuf(FILE *, char *, int, size_t);\n-     extern int fprintf(FILE *, const char *, ...);\n-     extern int fscanf(FILE *, const char *,...);\n-     extern int printf(const char *,...);\n-     extern int scanf(const char *,...);\n-     extern int sprintf(char *, const char *,...);\n-     extern int sscanf(const char *, const char *,...);\n-     extern int vprintf(const char *, __va_list);\n-     extern int vfprintf(FILE *, const char *, __va_list);\n-     extern int vsprintf(char *, const char *, __va_list);\n-     extern int fgetc(FILE *);\n-     extern char *fgets(char *, int, FILE *);\n-     extern int fputc(int, FILE *);\n-     extern int fputs(const char *, FILE *);\n-     extern int getc(FILE *);\n-     extern int getchar(void);\n-     extern char *gets(char *);\n-     extern int putc(int, FILE *);\n-     extern int putchar(int);\n-     extern int puts(const char *);\n-     extern int ungetc(int, FILE *);\n-     extern int fgetpos(FILE *, fpos_t *);\n-     extern int fseek(FILE *, long int, int);\n-     extern int fsetpos(FILE *, const fpos_t *);\n-     extern long int ftell(FILE *);\n-     extern void rewind(FILE *);\n-     extern void clearerr(FILE *);\n-     extern int feof(FILE *);\n-     extern int ferror(FILE *);\n-     extern void perror(const char *);\n-       extern size_t fread(void *, size_t, size_t, FILE *);\n-       extern size_t fwrite(const void *, size_t, size_t, FILE *);\n-     extern int __flsbuf(unsigned char, FILE *);\n-     extern int __filbuf(FILE *);\n-     extern int fileno(FILE *);\n-     extern FILE *fdopen(int, const char *);\n-     extern int getw(FILE *);\n-     extern int putw(int, FILE *);\n-     extern int pclose(FILE *);\n-     extern FILE *popen(const char *, const char *);\n-     extern char *tempnam(const char *, const char *);\n-     extern char *ctermid(char *);\n-     extern char *cuserid(char *);\n-     extern int nl_fprintf(FILE *, const char * ,...);\n-     extern int nl_fscanf(FILE *, const char * ,...);\n-     extern int nl_printf(const char * ,...);\n-     extern int nl_scanf(const char * ,...);\n-     extern int nl_sprintf(char *, const char * ,...);\n-     extern int nl_sscanf(const char *, const char * ,...);\n-   extern unsigned char *__bufendtab[];\n-}\n-extern \"C\" {\n-   extern int __nl_char_size;\n-   typedef struct {\n-\tint quot;\t \n-\tint rem;\t \n-   } div_t;\n-   typedef struct {\n-\tlong int quot;\t \n-\tlong int rem;\t \n-   } ldiv_t;\n-     typedef unsigned int wchar_t;\n-       extern double atof(const char *);\n-     extern int atoi(const char *);\n-     extern long int atol(const char *);\n-     extern double strtod(const char *, char **);\n-     extern long int strtol(const char *, char **, int);\n-     extern unsigned long int strtoul(const char *, char **, int);\n-     extern int rand(void);\n-     extern void srand(unsigned int);\n-     extern int atexit(void (*) (void));\n-     extern void exit(int);\n-     extern char *getenv(const char *);\n-     extern int system(const char *);\n-       inline int abs(int d) { return (d>0)?d:-d; }\n-     extern div_t div(int, int);\n-     extern ldiv_t ldiv(long int, long int);\n-     extern long int labs(long int);\n-     extern int mblen(const char *, size_t);\n-     extern int mbtowc(wchar_t *, const char *, size_t);\n-     extern int wctomb(char *, wchar_t);\n-     extern size_t mbstowcs(wchar_t *, const char *, size_t);\n-     extern size_t wcstombs(char *, const wchar_t *, size_t);\n-     extern void free(void *);\n-     extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));\n-       extern void abort(void);\n-       extern void *bsearch(const void *, const void *, size_t, size_t, int (*) (const void *, const void *));\n-       extern void *calloc(size_t, size_t);\n-       extern void *malloc(size_t);\n-       extern void *realloc(void *, size_t);\n-     extern void setkey(const char *);\n-     extern void lcong48( unsigned short [] );\n-     extern double wcstod( const wchar_t *, wchar_t ** );\n-     extern long wcstol( const wchar_t *, wchar_t **, int );\n-     extern unsigned long wcstoul( const wchar_t *, wchar_t **, int );\n-     extern double drand48(void);\n-     extern double erand48(unsigned short []);\n-     extern long jrand48(unsigned short []);\n-     extern long lrand48(void);\n-     extern long mrand48(void);\n-     extern long nrand48(unsigned short []);\n-     extern void srand48(long);\n-     extern unsigned short *seed48(unsigned short []);\n-     extern int putenv(const char *);\n-    extern int clearenv(void);\n-    extern int getopt(int, char * const [], const char *);\n-    extern char *getpass(const char *);\n-  extern char *optarg;\n-  extern int optind;\n-  extern int opterr;\n-  struct mallinfo  {\n-\tint arena;\t \n-\tint ordblks;\t \n-\tint smblks;\t \n-\tint hblks;\t \n-\tint hblkhd;\t \n-\tint usmblks;\t \n-\tint fsmblks;\t \n-\tint uordblks;\t \n-\tint fordblks;\t \n-\tint keepcost;\t \n-  };\t\n-     typedef struct {\n-       unsigned int word1, word2, word3, word4;\n-     } long_double;\n-extern \"C\" {\n-     typedef long gid_t;\n-     typedef long uid_t;\n-   struct passwd {\n-\tchar\t*pw_name;\n-\tchar \t*pw_passwd;\n-\tuid_t\tpw_uid;\n-\tgid_t\tpw_gid;\n-\tchar \t*pw_age;\n-\tchar\t*pw_comment;\n-\tchar\t*pw_gecos;\n-\tchar\t*pw_dir;\n-\tchar\t*pw_shell;\n-\tlong\tpw_audid;\n-\tint\tpw_audflg;\n-   };\n-     extern struct passwd *getpwuid(uid_t);\n-     extern struct passwd *getpwnam(const char *);\n-   struct s_passwd {\n-       char    *pw_name;\n-       char    *pw_passwd;\n-       char    *pw_age;\n-       long     pw_audid;\n-       int     pw_audflg;\n-   };\n-   struct comment {\n-\tchar\t*c_dept;\n-\tchar\t*c_name;\n-\tchar\t*c_acct;\n-\tchar\t*c_bin;\n-   };\n-     extern void setpwent(void);\n-     extern void endpwent(void);\n-     extern struct passwd *getpwent(void);\n-     extern struct passwd *fgetpwent(FILE *);\n-     extern struct s_passwd *getspwent(void);\n-     extern struct s_passwd *getspwuid(int);\n-     extern struct s_passwd *getspwaid(int);\n-     extern struct s_passwd *getspwnam(char *);\n-     extern struct s_passwd *fgetspwent(FILE *);\n-}\n-extern int errno;\n-     extern \"C\" {\n-         extern int errno;\n-     }\n-extern \"C\" {\n-    extern void perror(const char*);\n-    extern int sys_nerr;\n-    extern char *sys_errlist[];\n-    extern char *strerror (int);\n-}\n-     extern const char *fcvt(double, size_t, int *, int *);\n-     extern char *gcvt(double, size_t, char *);\n-     extern char *ecvt(double, size_t, int *, int *);\n-     extern char *nl_gcvt(double, size_t, char *, int);\n-     extern char *_ldecvt(long_double, size_t, int *, int *);\n-     extern char *_ldfcvt(long_double, size_t, int *, int *);\n-     extern char *_ldgcvt(long_double, size_t, char *);\n-     extern int getpw(int, char *);\n-     extern long a64l(const char *);\n-     extern char *l64a(long);\n-     extern void l3tol(long *, const char *, int);\n-     extern void ltol3(char *, const long *, int);\n-     extern char *getmsg(int, int, int, char *, int);\n-     extern double nl_atof(const char *, int);\n-     extern double nl_strtod(const char *, char **, int);\n-     extern char *ltostr(long, int);\n-     extern char *ultostr(unsigned long, int);\n-     extern char *ltoa(long);\n-     extern char *ultoa(unsigned long);\n-     extern void memorymap(int);\n-     extern struct mallinfo mallinfo(void);\n-     extern int mallopt(int, int);\n-}\n-typedef void * POINTER;\n-typedef FILE * FILE_PTR;\n-typedef void (*DISPLAYER)   (POINTER obj, FILE_PTR fp, FILE_PTR errorFile)  ;\n-typedef void (*DESTROYER)   (POINTER obj, FILE_PTR errorFile)  ;\n-typedef void (*RCOUNT_INC)  (POINTER obj, FILE_PTR errorFile)  ;\n-typedef int  (*COMPARE)     (POINTER obj1, POINTER obj2)  ;\n-typedef\tunsigned long (*HASH_ADDR)  (POINTER obj, FILE_PTR errorFile)  ;\n-typedef\tunsigned long (*HASH_SKIP)  (POINTER obj, FILE_PTR errorFile)  ;\n-typedef POINTER\n-\t(*ACCESS_FCT)  (POINTER target, POINTER sample, FILE_PTR errorFile)  ;\n-typedef POINTER DATA_PTR;\n-     typedef long dev_t;\t\t \n-     typedef unsigned long ino_t;\t \n-     typedef unsigned short mode_t; \t \n-     typedef short nlink_t;\t\t \n-     typedef long off_t;\t\t \n-     typedef long pid_t;\t\t \n-     typedef long time_t;\t\t \n-      typedef int ssize_t;\t\t \n-     typedef unsigned short __site_t;\t \n-     typedef unsigned short __cnode_t;\t \n-     typedef unsigned long clock_t;\t \n-      typedef long key_t;\t\t \n-   typedef unsigned short __ushort;\t \n-   typedef long\t__daddr_t;\t\t \n-   typedef char *__caddr_t;\t\t \n-   typedef long __swblk_t;\n-   typedef unsigned char\tu_char;\t    \n-   typedef unsigned short\tu_short;    \n-   typedef unsigned int\t\tu_int;      \n-   typedef unsigned long\tu_long;     \n-   typedef unsigned int\t\tuint;\t    \n-   typedef unsigned short\tushort;\t    \n-   typedef __swblk_t\t\tswblk_t;\n-   typedef __daddr_t\t\tdaddr_t;\n-   typedef __site_t\t\tsite_t;\n-   typedef __cnode_t\t\tcnode_t;\n-     typedef __caddr_t\t\tcaddr_t;    \n-   typedef long\t\t\tpaddr_t;\n-   typedef short\t\tcnt_t;\n-   typedef unsigned int\t\tspace_t;\n-   typedef unsigned int    \tprot_t;\n-   typedef unsigned long        cdno_t;\n-   typedef unsigned short\tuse_t;\n-   typedef struct _physadr { int r[1]; } *physadr;\n-   typedef struct _quad { long val[2]; } quad;\n-     typedef short cpu_t;\n-     typedef struct label_t {\n-\tint\tlbl_rp;\n-       \tint\tlbl_sp;\n-       \tint\tlbl_s[17];\n-       \tint\tlbl_ss[1];\n-\tdouble\tlbl_sf[4];\n-     } label_t;\n-   typedef char *dm_message;\n-      typedef long\taid_t;\n-   typedef pid_t\t\tsid_t;\t    \n-     typedef long fd_mask;\n-     typedef struct fd_set {\n-       fd_mask fds_bits[ (((       2048   )+((  (sizeof(fd_mask) * 8)      )-1))/(  (sizeof(fd_mask) * 8)      )) ];\n-     } fd_set;\n-POINTER malloc  (size_t size )  ;\n-POINTER calloc  (size_t n , size_t size )  ;\n-void  free  (POINTER c )  ;\n-void mem_report  (void )  ;\n-typedef  int         BOOLEAN;\n-typedef enum\n-{\n-  eNoErrors\t\t\t= -1,\n-  eUnknownProcessingError       = 0,\n-  eAlgorithmFailure\t\t= 100,\n-  eAlreadyLocked                = 200,\n-  eAttCount\t\t\t= 300,\n-  eAttRedefinition\t\t= 400,\n-  eBasicMatrixError\t\t= 500,\n-  eBadAddress\t\t\t= 600,\n-  eBadAttribute\t\t\t= 700,\n-  eBadFileNumber\t\t= 800,\n-  eBadMode\t\t\t= 900,\n-  eBadVersion\t\t\t= 1000,\n-  eColumnError\t\t\t= 1100,\n-  eConstraintError\t\t= 1200,\n-  eLBConstraintError\t\t= 1300,\n-  eUBConstraintError\t\t= 1400,\n-  eDatabaseError\t\t= 1500,\n-  eDataExists\t\t\t= 1600,\n-  eDataNotFound\t\t\t= 1700,\n-  eDictError\t\t\t= 1800,\n-  eDiffAtt\t\t\t= 1900,\n-  eDomain\t\t\t= 2000,\n-  eDuplicateAtt\t\t\t= 2100,\n-  eDuplicateKey\t\t\t= 2200,\n-  eElementMismatch\t\t= 2300,\n-  eEmptyAtt\t\t\t= 2400,\n-  eEmptyDict\t\t\t= 2450,\n-  eEmptyLink\t\t\t= 2500,\n-  eEmptyQueue\t\t\t= 2600,\n-  eEmptyStack\t\t\t= 2700,\n-  eEntityExists\t\t\t= 2800,\n-  eEntityNotFound\t\t= 2900,\n-  eEtaComputeError\t\t= 3000,\n-  eEtaFileError\t\t\t= 3100,\n-  eEtaInverseConsistency\t= 3200,\n-  eFileExists\t\t\t= 3300,\n-  eFileNotFound\t\t\t= 3400,\n-  eFunctionMismatch\t\t= 3500,\n-  eFunctionNotAvailable\t\t= 3600,\n-  eFunctionNotFound\t\t= 3700,\n-  eFunctionTypeConflict\t\t= 3800,\n-  eGraphError\t\t\t= 3900,\n-  eIllegalBMatrixOp\t\t= 4000,\n-  eIllegalData\t\t\t= 4100,\n-  eIllegalDeletion\t\t= 4200,\n-  eIllegalDictOp\t\t= 4300,\n-  eIllegalEtaFileOp\t\t= 4400,\n-  eIllegalFunctionRequest\t= 4500,\n-  eIllegalFunctionType\t\t= 4600,\n-  eIllegalGraphOp\t\t= 4700,\n-  eIllegalGraphType\t\t= 4800,\n-  eIllegalIndex\t\t\t= 4900,\n-  eIllegalInsertion\t\t= 5000,\n-  eIllegalListOp\t\t= 5100,\n-  eIllegalLPTokenOp\t\t= 5200,\n-  eIllegalLPTokenType\t\t= 5300,\n-  eIllegalMatrixOp\t\t= 5400,\n-  eIllegalMatrixSize\t\t= 5500,\n-  eIllegalMatrixState\t\t= 5600,\n-  eIllegalMatrixType\t\t= 5700,\n-  eIllegalNBMatrixOp\t\t= 5800,\n-  eIllegalOperation\t\t= 5900,\n-  eIllegalOption\t\t= 6000,\n-  eIllegalOverload\t\t= 6100,\n-  eIllegalSeek\t\t\t= 6200,\n-  eIllegalType\t\t\t= 6300,\n-  eIllegalVectorOp\t\t= 6400,\n-  eIllegalVectorType\t\t= 6500,\n-  eIllFormedADT\t\t\t= 6600,\n-  eInconsistentData\t\t= 6700,\n-  eInternalError\t\t= 6800,\n-  eInUse\t\t\t= 6900,\n-  eInvalidArgument\t\t= 7000,\n-  eInvalidAtt\t\t\t= 7100,\n-  eInvalidData\t\t\t= 7200,\n-  eInvalidIndex\t\t\t= 7300,\n-  eInvalidMatrixOp\t\t= 7400,\n-  eInvalidOperation\t\t= 7500,\n-  eInvalidOption\t\t= 7600,\n-  eInvalidParam\t\t\t= 7700,\n-  eInvalidVectorOp\t\t= 7800,\n-  eKeyNotFound\t\t\t= 7900,\n-  eLinkNotEmpty\t\t\t= 8000,\n-  eListError\t\t\t= 8100,\n-  eLockAccess\t\t\t= 8200,\n-  eLockExists\t\t\t= 8300,\n-  eLockNotFound\t\t\t= 8400,\n-  eLockReadOnly\t\t\t= 8500,\n-  eLockTrunc\t\t\t= 8600,\n-  eLPTokenError\t\t\t= 8700,\n-  eLPTokenMisuse\t\t= 8800,\n-  eMatrixError\t\t\t= 8900,\n-  eMatrixMismatch\t\t= 9000,\n-  eMatrixMultiplicationError\t= 9100,\n-  eMissingData\t\t\t= 9200,\n-  eMysteryError\t\t\t= 9300,\n-  eNameTooLong\t\t\t= 9400,\n-  eNeverLocked\t\t\t= 9500,\n-  eNoAccess\t\t\t= 9600,\n-  eNoLockReq\t\t\t= 9800,\n-  eNoMoreAtt\t\t\t= 9900,\n-  eNoMoreElements\t\t= 10000,\n-  eNonBasicMatrixError\t\t= 10100,\n-  eNonInvertibleMatrix\t\t= 10200,\n-  eNonsenseData\t\t\t= 10300,\n-  eNoSuchKey\t\t\t= 10400,\n-  eNotEnoughSpace\t\t= 10500,\n-  eNotFetched\t\t\t= 10600,\n-  eNotLocked\t\t\t= 10700,\n-  eNotSupported\t\t\t= 10800,\n-  eNullPointer\t\t\t= 10900,\n-  eNullInternalPointer\t\t= 11000,\n-  eNullCompare\t\t\t= 11050,\n-  eNullData\t\t\t= 11070,\n-  eNullDestroyer\t\t= 11100,\n-  eNullDisplayer\t\t= 11200,\n-  eNullFunction\t\t\t= 11300,\n-  eRemove\t\t\t= 11400,\n-  eRoundoff\t\t\t= 11500,\n-  eQueueNotEmpty\t\t= 11600,\n-  eSparseGraphError\t\t= 11700,\n-  eStackError\t\t\t= 11800,\n-  eStackNotEmpty\t\t= 11900,\n-  eTLRSProceduralError\t\t= 12000,\n-  eTooManyAtt\t\t\t= 12100,\n-  eTooManyLocks\t\t\t= 12200,\n-  eTypeConflict\t\t\t= 12300,\n-  eUnexpectedType\t\t= 12400,\n-  eUnixError\t\t\t= 12500,\n-  eVectorMismatch\t\t= 12600,\n-  eProcessingError\t\t= 15000, \n-  eActionKludge\t\t\t= 15100,\n-  eNotImplemented\t\t= 15200,\n-  eNotStable\t\t\t= 15300,\n-  eNotReleased\t\t\t= 15400,\n-  eBeingWorkedOn\t\t= 15500\n-} eErrorState;\n-extern \"C\" {\n-extern\teErrorState\tspider_errno;\n-extern\tchar\t\terr_string[];\n-POINTER mallocate  (size_t n )  ;\n-size_t pagesize  (void )  ;\n-POINTER page_mallocate  (void )  ;\n-POINTER make_memory_token  (int size , int page_cnt, const char *name)  ;\n-POINTER mem_malloc  (POINTER mptr )  ;\n-void mem_free  (POINTER mptr , POINTER obj )  ;\n-const char *get_double_string  (char *buffer , double num )  ;\n-int spider_strcat  (const char *proc , char *str1 , const char *str2 , int maxlen )  ;\n-void init_errors  (void )  ;\n-void append_abort  (const char *proc )  ;\n-void append_message  (const char *proc , const char *msg )  ;\n-void set_errno  (eErrorState err )  ;\n-void spider_perror  (const char *proc , FILE_PTR errorFile )  ;\n-void append_not_implemented  (const char *proc , int *target_errno )  ;\n-const char *GetBooleanString  (BOOLEAN bool )  ;// ERROR - use of bool as identifier\n-double truncate_value  (double x , double epsilon )  ;\n-double log2  (double x )  ;\n-int ceil_log2  (double x )  ;\n-int floor_log2  (double x )  ;\n-}\n-extern \"C\" {\n-extern  char char80[], char128[], char160[], char512[];\n-extern  char char1000[], char2000[];\n-extern  char char320[];\t \n-BOOLEAN Get_EM_StderrFlag  (void )  ;\n-void Set_EM_StderrFlag  (BOOLEAN printToStderr )  ;\n-void CheckReleaseState  (eErrorState releaseState , const char *procName, \t\t\t  FILE_PTR errorFile )  ;\n-void PrintErrorString  (const char *errorString , FILE_PTR errorFile )  ;\n-const char *get_error_header  (eErrorState errorState )  ;\n-void print_error_header  (eErrorState errorState , FILE_PTR errorFile )  ;\n-void PrintErrorMessage  (eErrorState errorState , const char *message , \t\t\t  FILE_PTR errorFile )  ;\n-}\n-extern \"C\" {\n-extern short show_increment_rcount;\n-extern int errno;\n-extern int bmk_errno;\n-extern int ck_errno;\n-extern int db_errno;\n-extern int dict_errno;\n-extern int glh_errno;\n-extern int graph_errno;\n-extern int hash_errno;\n-extern int link_errno;\n-extern int lp_errno;\n-extern int matrix_errno;\n-extern int nbmk_errno;\n-extern int network_errno;\n-extern int queue_errno;\n-extern int set_kernel_errno;\n-extern int stack_errno;\n-}\n-extern \"C\" {\n-const char *spider_version_string  (void )  ;\n-int  spider_version  (void )  ;\n-const char *spider_errstring  (void )  ;\n-void append_perror  (const char *s )  ;\n-void unix_perror  (const char *s )  ;\n-}\n-typedef struct node a_dict_node, * DICT_NODE;\n-struct node {\n-\tPOINTER info;\t\t \n-\tDICT_NODE left;\t\t \n-\tDICT_NODE right;\t \n-\tDICT_NODE prev;\t\t \n-\tDICT_NODE next;\t\t \n-};\n-typedef struct tree a_dict, * DICT;\n-struct tree {\n-\tint\t  size;\t\t\t \n-\tCOMPARE   comp; \t\t \n-\tDICT_NODE header;\t\t \n-\tDICT_NODE last_accessed;\t \n-\tDICT_NODE list_head;\t\t \n-\tDICT_NODE list_tail;\t\t \n-};\n-typedef enum { PREORDER = -1, INORDER, POSTORDER } traversal_t;\n-extern \"C\" {\n-void dict_set_nopages  (int desired_nopages )  ;\n-void dict_err  (void )  ;\n-const char *traversal_string  (traversal_t tr )  ;\n-DICT make_dictionary  (COMPARE cmp )  ;\n-int dict_insert  (POINTER item , DICT dict )  ;\n-int dict_delete  (POINTER item , DICT dict )  ;\n-POINTER dict_access  (POINTER item , DICT dict )  ;\n-POINTER dict_low  (DICT dict )  ;\n-POINTER dict_nlow  (DICT dict )  ;\n-POINTER dict_big  (DICT dict )  ;\n-POINTER dict_nbig  (DICT dict )  ;\n-POINTER dict_first  (DICT dict )  ;\n-POINTER dict_next  (DICT dict )  ;\n-POINTER dict_last  (DICT dict )  ;\n-POINTER dict_prev  (DICT dict )  ;\n-int clear_dictionary  (DICT dict , DESTROYER destroy , FILE *errorFile )  ;\n-int dict_size  (const a_dict *dict )  ;\n-POINTER dict_elem  (int index , DICT dict )  ;\n-int dict_compare  (DICT d1 , DICT d2 )  ;\n-DICT dict_copy  (DICT di , COMPARE cmp )  ;\n-int dict_change_compare  (DICT di , COMPARE cmp )  ;\n-int dict_height  (DICT di )  ;\n-void dict_print_stats  (FILE *fp , DICT di )  ;\n-void dict_print  (FILE *fp , DICT di , traversal_t tr , DISPLAYER display )  ;\n-const char *dict_version  (void )  ;\n-void init_dict_errors  (void )  ;\n-const char *dict_errstring  (void )  ;\n-void dict_append_perror  (const char *s )  ;\n-void dict_perror  (const char *s )  ;\n-extern int  dict_errno;\n-}\n-typedef struct q_item {\n-  struct q_item *next;\n-  POINTER data;\n-} a_q_item, *Q_ITEM;\n-typedef struct {\n-  int rcount;\n-  Q_ITEM first;\n-  Q_ITEM last;\n-  int count;\n-} a_queue, *QUEUE;\n-extern \"C\" {\n-void queue_err  (void)  ;\n-void queue_set_nopages  (int desired_nopages)  ;\n-QUEUE make_queue  (void )  ;\n-POINTER queue_look  (const a_queue * Q )  ;\n-POINTER queue_last  (const a_queue * Q )  ;\n-POINTER queue_remove  (QUEUE Q )  ;\n-int queue_append  (QUEUE Q , POINTER data )  ;\n-int queue_size  (const a_queue * Q )  ;\n-void queue_destroy  (POINTER ptr , FILE_PTR errorFile )  ;\n-void IncrementQRCount  (POINTER ptr , FILE_PTR errorFile )  ;\n-const char *queue_version  (void )  ;\n-void init_queue_errors  (void )  ;\n-const char *queue_errstring  (void )  ;\n-void queue_append_perror  (const char *s )  ;\n-void queue_perror  (const char *s )  ;\n-extern int queue_errno;\n-}\n-typedef struct s_item {\n-  struct s_item *next;\n-  POINTER data;\n-} a_s_item, *S_ITEM;\n-typedef struct stack {\n-  int rcount;\n-  S_ITEM top;\n-  int count;\n-} a_stack, *STACK;\n-extern \"C\" {\n-void stack_err  (void)  ;\n-void stack_set_nopages  (int desired_nopages)  ;\n-STACK make_stack  (void )  ;\n-POINTER stack_look  (const a_stack * S )  ;\n-POINTER stack_pop  (STACK S )  ;\n-int stack_push  (STACK S , POINTER data )  ;\n-int stack_size  (const a_stack * S )  ;\n-void stack_destroy  (POINTER ptr , FILE_PTR errorFile )  ;\n-void IncrementSRCount  (POINTER ptr , FILE_PTR errorFile )  ;\n-const char *stack_version  (void )  ;\n-void init_stack_errors  (void )  ;\n-const char *stack_errstring  (void )  ;\n-void stack_append_perror  (const char *s )  ;\n-void stack_perror  (const char *s )  ;\n-extern int stack_errno;\n-}\n-typedef const char *(*STRINGER)(const void *ptr);\n-int default_compare(const void *p1, const void *p2);\n-void default_displayer(const void *ptr, FILE *fp, FILE *errorFile);\n-const char *default_stringer(const void *ptr);\n-const char *object_stringer(const void *ptr);\n-class object {\n-\tstatic long current_id;\n-\tstatic long next_id();\n-protected:\n-\tvoid display2(ostream &fp = cout) const;\n-\tlong id;\n-public:\n-\tobject()                  { id = next_id(); }\n-\tobject(const object &obj) { id = next_id(); }\n-\tvirtual ~object()\n-\t{\n-\t\tif (799  >=  999 ) cout <<   \"~object() executing...\"  << '\\n'; ;\n-\t}\n-\tobject & operator = (const object & obj)\n-\t{\n-\t\treturn( *this );\n-\t}\n-\tvirtual int compare(const void *p2) const;\n-\tvirtual void display(ostream & fp = cout) const\n-\t{\n-\t\tdisplay2(fp);\n-\t}\n-\toperator char *() const;\n-};\n-ostream & operator << (ostream & fp, object & obj);\n-int operator < (object & obj1, object & obj2);\n-int operator <= (object & obj1, object & obj2);\n-int operator > (object & obj1, object & obj2);\n-int operator >= (object & obj1, object & obj2);\n-int operator == (object & obj1, object & obj2);\n-int operator != (object & obj1, object & obj2);\n-void null_destroy(void *p, FILE *errorFile);\n-void object_destroy(void *p, FILE *errorFile);\n-int  object_compare(const void *p1, const void *p2);\n-void object_display(const void *p, FILE *fp, FILE *errorFile);\n-class dict : public object {\n-\tclass internal {\n-\tpublic:\n-\t\tDICT di;\n-\t\tint errno;\n-\t\tCOMPARE compare_f;\n-\t\tDISPLAYER display_f;\n-\t\tDESTROYER destroy_f;\n-\t\tSTRINGER string_f;\n-\t\tint count;\n-\t\tvoid append_error(int expr, const char *proc)\n-\t\t{\n-\t\t\tif (expr) dict_append_perror(proc);\n-\t\t\terrno = dict_errno;\n-\t\t}\n-\t\tvoid obj_error(int expr, const char *proc, const void *obj)\n-\t\t{\n-\t\t\tif (expr) {\n-\t\t\t\tdict_append_perror((*string_f)(obj));\n-\t\t\t\tdict_append_perror(proc);\n-\t\t\t}\n-\t\t\terrno = dict_errno;\n-\t\t}\n-\t\tinternal(COMPARE cmp, DESTROYER destroyer,\n-\t\t\t DISPLAYER displayer, STRINGER str_f)\n-\t\t{// ERROR - candidate for bad call\n-\t\t\tif (799  >=  800 ) cout <<  \"Creating new dictionary...\"  << '\\n'; ;\n-\t\t\tif (cmp == __null )       cmp = (COMPARE) &default_compare;\n-\t\t\tif (displayer == __null ) displayer = (DISPLAYER) &default_displayer;\n-\t\t\tif (str_f == __null )     str_f = &default_stringer;\n-\t\t\tcompare_f = cmp;\n-\t\t\tdisplay_f = displayer;\n-\t\t\tdestroy_f = destroyer;\n-\t\t\tstring_f  = str_f;\n-\t\t\tdi = make_dictionary(compare_f);\n-\t\t\tappend_error(di == __null , \"dict internal\");\n-\t\t\tif (di == __null ) {\n-\t\t\t\tdict_perror(\"build dictionary\");\n-\t\t\t\texit(errno);\n-\t\t\t}\n-\t\t\tcount = 1;\n-\t\t}\n-\t\t~internal()\n-\t\t{\n-\t\t\tif (799  >=  800 ) cout <<  \"dict ~internal executing\"  << '\\n'; ;\n-\t\t\tint err = clear_dictionary(di, destroy_f, (&__iob[2]) );\n-\t\t\tappend_error(err, \"clear dictionary\");\n-\t\t\tif (err) dict_perror(\"dict ~internal\");\n-\t\t\tfree((void *)di);\n-\t\t}\n-\t};// ERROR - candidate list for bad call\n-\tinternal *rep;\n-protected:\n-\tint & errno()         { return( rep->errno );     }\n-\tCOMPARE compare_f()   { return( rep->compare_f ); }\n-\tDISPLAYER display_f() { return( rep->display_f ); }\n-\tDESTROYER destroy_f() { return( rep->destroy_f ); }\n-\tSTRINGER string_f()   { return( rep->string_f  ); }\n-\tvoid append_error(int expr, const char *proc)\n-\t{\n-\t\trep->append_error(expr, proc);\n-\t}\n-\tvoid obj_error(int expr, const char *proc, const void *obj)\n-\t{\n-\t\trep->obj_error(expr, proc, obj);\n-\t}\n-public:\n-\tstatic int err;\n-\tstatic int val;\n-\tstatic void *p;\n-\tdict()\n-\t{\n-\t\tif (799  >=  800 ) cout <<  \"Default constructor executing...\"  << '\\n'; ;\n-\t\trep = new internal( &default_compare,   &null_destroy,\n-\t\t\t\t    &default_displayer, &default_stringer);// ERROR - no matching fn call\n-\t}\n-\tdict(COMPARE cmp,\n-\t     DESTROYER destroyer = __null ,\n-\t     DISPLAYER displayer = &default_displayer,\n-\t     STRINGER str_f = &default_stringer)\n-\t{// ERROR - invalid type for default argument -- not expecting const\n-\t\trep = new internal(cmp, destroyer, displayer, str_f);\n-\t}\n-\tdict(const dict &di2)\n-\t{\n-\t\trep = di2.rep;\n-\t\trep->count ++;\n-\t\tif (799  >=  800 ) cout <<  \"Incrementing count to \" << rep->count  << '\\n'; ;\n-\t}\n-\tdict & operator = (const dict &di2)\n-\t{\n-\t\tdi2.rep->count ++;   \n-\t\tif (799  >=  800 ) cout <<  \"Incrementing di2 count to \" << di2.rep->count  << '\\n'; ;\n-\t\tif (799  >=  800 ) cout <<  \"Decrementing lvalue count to \" << rep->count-1  << '\\n'; ;\n-\t\tif (--rep->count <= 0) {\n-\t\t\tdelete rep;\n-\t\t}\n-\t\trep = di2.rep;\n-\t\treturn( *this );\n-\t}\n-\t~dict()\n-\t{\n-\t\tif (799  >=  800 ) cout <<  \"~dict executing...\"  << '\\n'; ;\n-\t\tif (799  >=  800 ) cout <<  \"Decrementing dict::internal count to \" << rep->count-1  << '\\n'; ;\n-\t\tif (--rep->count <= 0) delete rep;\n-\t}\n-\tint insert(POINTER item)\n-\t{\n-\t\terr = dict_insert(item, rep->di);\n-\t\tobj_error(err, \"insert\", item);\n-\t\treturn errno();\n-\t}\n-\tint remove(POINTER item)\n-\t{\n-\t\terr = dict_delete(item, rep->di);\n-\t\tobj_error(err, \"remove\", item);\n-\t\treturn errno();\n-\t}\n-\tPOINTER access(POINTER item)\n-\t{\n-\t\tp = dict_access(item, rep->di);\n-\t\tobj_error(p == __null , \"access\", item);\n-\t\treturn(p);\n-\t}\n-\tPOINTER low()\n-\t{\n-\t\tp = dict_low(rep->di);\n-\t\tappend_error(p == __null , \"low\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER nlow()\n-\t{\n-\t\tp = dict_nlow(rep->di);\n-\t\tappend_error(p == __null , \"nlow\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER big()\n-\t{\n-\t\tp = dict_big(rep->di);\n-\t\tappend_error(p == __null , \"big\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER nbig()\n-\t{\n-\t\tp = dict_nbig(rep->di);\n-\t\tappend_error(p == __null , \"nbig\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER first()\n-\t{\n-\t\tp = dict_first(rep->di);\n-\t\tappend_error(p == __null , \"first\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER last()\n-\t{\n-\t\tp = dict_last(rep->di);\n-\t\tappend_error(p == __null , \"last\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER next()\n-\t{\n-\t\tp = dict_next(rep->di);\n-\t\tappend_error(p == __null , \"next\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER prev()\n-\t{\n-\t\tp = dict_prev(rep->di);\n-\t\tappend_error(p == __null , \"prev\");\n-\t\treturn(p);\n-\t}\n-\tint clear(DESTROYER destroy, FILE *fp = (&__iob[2]) )\n-\t{\n-\t\terr = clear_dictionary(rep->di, destroy, fp);\n-\t\tappend_error(err, \"clear\");\n-\t\treturn errno();\n-\t}\n-\tint clear(FILE *fp = (&__iob[2]) )\n-\t{\n-\t\terr = clear_dictionary(rep->di, rep->destroy_f, fp);\n-\t\tappend_error(err, \"clear\");\n-\t\treturn errno();\n-\t}\n-\tint size()\n-\t{\n-\t\tval = dict_size(rep->di);\n-\t\tappend_error(val < 0, \"size\");\n-\t\treturn(val);\n-\t}\n-\tPOINTER elem(int index)\n-\t{\n-\t\tp = dict_elem(index, rep->di);\n-\t\tappend_error(p == __null , \"elem\");\n-\t\treturn(p);\n-\t}\n-\tint compare(dict &di2)\n-\t{\n-\t\tval = dict_compare(rep->di, di2.rep->di);\n-\t\treturn(val);\n-\t}\n-\tint height()\n-\t{\n-\t\tval = dict_height(rep->di);\n-\t\tappend_error(val < 0, \"height\");\n-\t\treturn(val);\n-\t}\n-\tconst char * version()\n-\t{\n-\t\treturn( dict_version() );\n-\t}\n-\tvoid display(FILE *fp = (&__iob[1]) )\n-\t{\n-\t\tdict_print_stats(fp, rep->di);\n-\t}\n-\tvoid print(FILE *fp = (&__iob[1]) , traversal_t tr = INORDER)\n-\t{\n-\t\tfprintf(fp, \"====== DICTIONARY (count=%d) ======\\n\",\n-\t\t\trep->count);\n-\t\tdict_print(fp, rep->di, tr, rep->display_f);\n-\t}\n-\tvoid print(traversal_t tr, FILE *fp = (&__iob[1]) )\n-\t{\n-\t\tfprintf(fp, \"====== DICTIONARY (count=%d) ======\\n\",\n-\t\t\trep->count);\n-\t\tdict_print(fp, rep->di, tr, rep->display_f);\n-\t}\n-\tvoid error(const char *s = \"class dict\")\n-\t{\n-\t\tdict_errno = errno();\n-\t\tdict_perror(s);\n-\t\terrno() = 0;\n-\t}\n-\tvoid error_append(const char *s = \"class dict\")\n-\t{\n-\t\tdict_append_perror(s);\n-\t}\n-\tconst char * errstring()\n-\t{\n-\t\treturn( dict_errstring() );\n-\t}\n-};\n-ostream & operator << (ostream & fp, traversal_t tr);\n-class queue : public object {\n-\tclass internal {\n-\tpublic:\n-\t\tQUEUE Q;\n-\t\tQUEUE Q2;\n-\t\tint errno;\n-\t\tDISPLAYER display_f;\n-\t\tDESTROYER destroy_f;\n-\t\tSTRINGER string_f;\n-\t\tint count;\n-\t        int swap()\n-\t\t{\n-\t\t\tQUEUE tmp = Q;\n-\t\t\tQ = Q2;\n-\t\t\tQ2 = tmp;\n-\t\t}\n-\t\tvoid append_error(int expr, const char *proc)\n-\t\t{\n-\t\t\tif (expr) queue_append_perror(proc);\n-\t\t\terrno = queue_errno;\n-\t\t}\n-\t\tvoid obj_error(int expr, const char *proc, const void *obj)\n-\t\t{\n-\t\t\tif (expr) {\n-\t\t\t\tqueue_append_perror((*string_f)(obj));\n-\t\t\t\tqueue_append_perror(proc);\n-\t\t\t}\n-\t\t\terrno = queue_errno;\n-\t\t}\n-\t\tinternal(DESTROYER destroyer,\n-\t\t         DISPLAYER displayer, STRINGER str_f)\n-\t\t{// ERROR - candidate for bad call\n-\t\t\tif (799  >=  800 ) cout <<  \"Creating new queue...\"  << '\\n'; ;\n-\t\t\tif (displayer == __null ) displayer = (DISPLAYER) &default_displayer;\n-\t\t\tif (str_f == __null )     str_f = &default_stringer;\n-\t\t\tdisplay_f = displayer;\n-\t\t\tdestroy_f = destroyer;\n-\t\t\tstring_f  = str_f;\n-\t\t\tQ = make_queue();\n-\t\t\tappend_error(Q == __null , \"queue internal\");\n-\t\t\terrno = queue_errno;\n-\t\t\tif (Q == __null ) {\n-\t\t\t\tqueue_perror(\"build queue\");\n-\t\t\t\texit(errno);\n-\t\t\t}\n-\t\t\tQ2 = make_queue();\n-\t\t\tappend_error(Q2 == __null , \"queue internal\");\n-\t\t\tif (Q2 == __null ) {\n-\t\t\t\tqueue_perror(\"build second queue\");\n-\t\t\t\texit(errno);\n-\t\t\t}\n-\t\t\tcount = 1;\n-\t\t}\n-\t\t~internal()\n-\t\t{\n-\t\t\tif (799  >=  800 ) cout <<  \"queue ~internal executing\"  << '\\n'; ;\n-\t\t\twhile ((p = queue_remove(Q)) != __null ) {\n-\t\t\t\tif (destroy_f != __null ) {\n-\t\t\t\t\t(*destroy_f)((POINTER)&p, (&__iob[2]) );\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tqueue_errno = 0;\n-\t\t\tqueue_destroy((POINTER)&Q, (&__iob[2]) );\n-\t\t\tif (queue_errno) {\n-\t\t\t\tappend_error(queue_errno,\n-\t\t\t\t\t     \"queue_destroy(Q)\");\n-\t\t\t\tqueue_perror(\"queue ~internal\");\n-\t\t\t}\n-\t\t\tqueue_errno = 0;\n-\t\t\tqueue_destroy((POINTER)&Q2, (&__iob[2]) );\n-\t\t\tif (queue_errno) {\n-\t\t\t\tappend_error(queue_errno,\n-\t\t\t\t\t     \"queue_destroy(Q2)\");\n-\t\t\t\tqueue_perror(\"queue ~internal\");\n-\t\t\t}\n-\t\t}\n-\t};// ERROR - list of candidates for bad call\n-\tinternal *rep;\n-protected:\n-\tint & errno()         { return( rep->errno );     }\n-\tDISPLAYER display_f() { return( rep->display_f ); }\n-\tDESTROYER destroy_f() { return( rep->destroy_f ); }\n-\tSTRINGER string_f()   { return( rep->string_f  ); }\n-\tvoid append_error(int expr, const char *proc)\n-\t{\n-\t\trep->append_error(expr, proc);\n-\t}\n-\tvoid obj_error(int expr, const char *proc, const void *obj)\n-\t{\n-\t\trep->obj_error(expr, proc, obj);\n-\t}\n-public:\n-\tstatic int err;\n-\tstatic int val;\n-\tstatic void *p;\n-\tqueue()\n-\t{\n-\t\tif (799  >=  800 ) cout <<  \"Default constructor executing...\"  << '\\n'; ;\n-\t\trep = new internal( &null_destroy,\n-\t\t\t\t    &default_displayer, &default_stringer);// ERROR - no matching fn for call\n-\t}\n-\tqueue(DESTROYER destroyer = __null ,\n-\t      DISPLAYER displayer = &default_displayer,\n-\t      STRINGER str_f = &default_stringer)\n-\t{// ERROR - invalid type for default argument -- not expecting const \n-\t\trep = new internal(destroyer, displayer, str_f);\n-\t}\n-\tqueue(const queue &Q2)\n-\t{\n-\t\trep = Q2.rep;\n-\t\trep->count ++;\n-\t\tif (799  >=  800 ) cout <<  \"Incrementing count to \" << rep->count  << '\\n'; ;\n-\t}\n-\tqueue & operator = (const queue &Q2)\n-\t{\n-\t\tQ2.rep->count ++;   \n-\t\tif (799  >=  800 ) cout <<  \"Incrementing Q2 count to \" << Q2.rep->count  << '\\n'; ;\n-\t\tif (799  >=  800 ) cout <<  \"Decrementing lvalue count to \" << rep->count-1  << '\\n'; ;\n-\t\tif (--rep->count <= 0) {\n-\t\t\tdelete rep;\n-\t\t}\n-\t\trep = Q2.rep;\n-\t\treturn( *this );\n-\t}\n-\t~queue()\n-\t{\n-\t\tif (799  >=  800 ) cout <<  \"~queue executing...\"  << '\\n'; ;\n-\t\tif (799  >=  800 ) cout <<  \"Decrementing queue::internal count to \" << rep->count-1  << '\\n'; ;\n-\t\tif (--rep->count <= 0) delete rep;\n-\t}\n-\tvoid error(const char *s = \"class queue\")\n-\t{\n-\t\tqueue_errno = errno();\n-\t\tqueue_perror(s);\n-\t\terrno() = 0;\n-\t}\n-\tvoid error_append(const char *s = \"class queue\")\n-\t{\n-\t\tqueue_append_perror(s);\n-\t}\n-\tconst char * errstring()\n-\t{\n-\t\treturn( queue_errstring() );\n-\t}\n-\tint append(POINTER item)\n-\t{\n-\t\terr = queue_append(rep->Q, (POINTER)item);\n-\t\tobj_error(err, \"append\", item);\n-\t\treturn errno();\n-\t}\n-\tPOINTER remove()\n-\t{\n-\t\tp = queue_remove(rep->Q);\n-\t\tappend_error(p == __null , \"remove\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER look(POINTER item)\n-\t{\n-\t\tp = queue_look(rep->Q);\n-\t\tappend_error(p == __null , \"look\");\n-\t\treturn(p);\n-\t}\n-\tPOINTER last(POINTER item)\n-\t{\n-\t\tp = queue_last(rep->Q);\n-\t\tappend_error(p == __null , \"last\");\n-\t\treturn(p);\n-\t}\n-\tint size()\n-\t{\n-\t\tval = queue_size(rep->Q);\n-\t\tappend_error(val < 0, \"size\");\n-\t\treturn(val);\n-\t}\n-\tconst char * version()\n-\t{\n-\t\treturn( queue_version() );\n-\t}\n-\tvoid display(FILE *fp = (&__iob[1]) )\n-\t{\n-\t\tint i = 1;\n-\t\tPOINTER ptr;\n-\t\tfprintf(fp, \"====== QUEUE DISPLAY (size %d) ======\\n\",\n-\t\t\tsize());\n-\t\twhile (ptr = remove()) {\n-\t\t\terr = queue_append(rep->Q2, ptr);\n-\t\t\tif (err) {\n-\t\t\t\tobj_error(err, \"append\", ptr);\n-\t\t\t\terror(\"queue_append(rep->Q2)\");\n-\t\t\t}\n-\t\t\tfprintf(fp, \"[%d] \", i++);\n-\t\t\t(*rep->display_f)(ptr, fp, (&__iob[2]) );\n-\t\t}\n-\t\trep->swap();\n-\t}\n-};\n-long object::current_id = 0;\n-long object::next_id()\n-{\n-\treturn( ++current_id );\n-}\n-void object::display2(ostream & fp) const\n-{\n-\tfp << \"object #\" << id;\n-}\n-ostream & operator << (ostream & fp, object & obj)\n-{\n-\tobj.display(fp);\n-\treturn(fp);\n-}\n-int object::compare(const void *p2) const\n-{\n-\tconst object & z2 = *(const object *) p2;\n-\tif (799  >=  1000 ) cout <<  \"*** object::compare \" << *this << \" with \" << z2  << '\\n'; ;\n-\treturn( id - z2.id );\n-}\n-int operator < (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) < 0) return(1);\n-\telse return(0);\n-}\n-int operator <= (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) <= 0) return(1);\n-\telse return(0);\n-}\n-int operator > (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) > 0) return(1);\n-\telse return(0);\n-}\n-int operator >= (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) >= 0) return(1);\n-\telse return(0);\n-}\n-int operator == (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) == 0) return(1);\n-\telse return(0);\n-}\n-int operator != (object & obj1, object & obj2)\n-{\n-\tif (obj1.compare( &obj2 ) != 0) return(1);\n-\telse return(0);\n-}\n-void null_destroy(void *p, FILE *errorFile)\n-{\n-}\n-int object_compare(const void *p1, const void *p2)\n-{\n-\tconst object *obj1 = (const object *) p1;\n-\tif (799  >=  1000 ) cout <<   \"*** Comparing \" << *obj1 << \" to address \" << long(p2)  << '\\n'; ;\n-\treturn( obj1->compare(p2) );\n-}\n-void object_display(const void *p, FILE *fp, FILE *errorFile)\n-{\n-\tcout << *(object *)p << '\\n';\n-}\n-void object_destroy(void *p, FILE *errorFile)\n-{\n-\tobject **pObj = (object **)p;\n-\tobject *obj = *pObj;\n-\tif (obj == __null ) {\n-\t\tif (799  >=  10 ) cout <<   \"+ object_destroy: NIL object passed in\"  << '\\n'; ;\n-\t\treturn;\n-\t}\n-\tif (799  >=  998 ) cout <<   \"+ object_destroy: delete obj:\"  << '\\n'; ;\n-\tif (799  >=  998 ) cout <<   *obj  << '\\n'; ;\n-\tif (799  >=  998 ) cout <<   \"====================================================\"  << '\\n'; ;\n-\tdelete obj;\n-\t*pObj = __null ;\n-}\n-int default_compare(const void *p1, const void *p2)\n-{\n-\tlong L1 = long(p1);\n-\tlong L2 = long(p2);\n-\tif (799  >=  1000 ) cout <<  \"+ default_compare \" << long(p1) << ',' << long(p2)  << '\\n'; ;\n-\tif (L1 < L2) return(-1);\n-\telse if (L1 > L2) return(1);\n-\telse return(0);\n-}\n-const char * default_stringer(const void *ptr)\n-{\n-\tstatic char buf[100];\n-\tsprintf(buf, \"ADDRESS %lu\", (unsigned long)ptr);\n-\treturn(buf);\n-}\n-void default_displayer(const void *ptr, FILE *fp, FILE *errorFile)\n-{\n-\tfprintf(fp, \"%s\\n\", default_stringer(ptr));\n-}\n-object::operator char *() const\n-{\n-\tconst int max = 10;\n-\tconst int maxChar = 16;\n-\tstatic char buf[max][maxChar];\n-\tstatic int index = 0;\n-\tchar *s = buf[index++ % max];\n-\tsprintf(s, \"object #%d\", id);\n-\treturn(s);\n-}\n-const char * object_stringer(const void *ptr)\n-{\n-\tobject & obj = *(object *)ptr;\n-\treturn((char *)obj);\n-}\n-int dict::err;\n-int dict::val;\n-POINTER dict::p;\n-ostream & operator << (ostream & fp, traversal_t tr)\n-{\n-\tfp << traversal_string(tr);\n-\treturn(fp);\n-}\n-int queue::err;\n-int queue::val;\n-POINTER queue::p;"}, {"sha": "ab6e5599d6a8ae3032b732768d3f3ce092b2461a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash59.C", "status": "removed", "additions": 0, "deletions": 1374, "changes": 1374, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6285c904f784dd3d93813e2753cefa4f7cc01df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6285c904f784dd3d93813e2753cefa4f7cc01df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash59.C?ref=6285c904f784dd3d93813e2753cefa4f7cc01df6", "patch": "@@ -1,1374 +0,0 @@\n-// Build don't link: \n-// Special g++ Options: -w\n-// GROUPS passed old-abort\n-typedef char * __gnuc_va_list;\n-void va_end (__gnuc_va_list);\t\t \n-enum __va_type_classes {\n-  __no_type_class = -1,\n-  __void_type_class,\n-  __integer_type_class,\n-  __char_type_class,\n-  __enumeral_type_class,\n-  __boolean_type_class,\n-  __pointer_type_class,\n-  __reference_type_class,\n-  __offset_type_class,\n-  __real_type_class,\n-  __complex_type_class,\n-  __function_type_class,\n-  __method_type_class,\n-  __record_type_class,\n-  __union_type_class,\n-  __array_type_class,\n-  __string_type_class,\n-  __set_type_class,\n-  __file_type_class,\n-  __lang_type_class\n-};\n-typedef __gnuc_va_list va_list;\n-typedef\tint jmp_buf[9 ];\n-typedef\tint sigjmp_buf[9 +1];\n-int\tsetjmp  (jmp_buf)  ;\n-int\t_setjmp  (jmp_buf)  ;\n-int\tsigsetjmp  (sigjmp_buf, int)  ;\n-void\tlongjmp  (jmp_buf, int)  ;\n-void\t_longjmp  (jmp_buf, int)  ;\n-void\tsiglongjmp  (sigjmp_buf, int)  ;\n-const int BOR_C_DIR\t= 0;\t\t \n-const int BOR_C_REV\t= 1;\t\t \n-const int BOR_C\t\t= 0x1;\n-const int BOR_BD_DIR\t= (0<<1);\t \n-const int BOR_BD_REV\t= (1<<1);\t \n-const int BOR_BD\t= 0x2;\n-const int SERVICE_DATA\t = (1<<( 0 )) ;\t \n-const int SERVICE_CLASS1 = (1<<( 1 )) ;\t \n-const int SERVICE_CLASS2 = (1<<( 2 )) ;\t \n-const int SERVICE_CLASS20 = (1<<( 3 )) ;\t \n-const int SERVICE_VOICE\t = (1<<( 8 )) ;\t \n-const int SERVICE_ALL\t = (1<<( 9 )) -1;\n-const int VR_NORMAL\t= 0;\t\t \n-const int VR_FINE\t= 1;\t\t \n-const int VR_ALL\t= (1<<( VR_FINE+1 )) -1;\n-const int BR_2400\t= 0;\t\t \n-const int BR_4800\t= 1;\t\t \n-const int BR_7200\t= 2;\t\t \n-const int BR_9600\t= 3;\t\t \n-const int BR_12000\t= 4;\t\t \n-const int BR_14400\t= 5;\t\t \n-const int BR_ALL\t= (1<<( BR_14400+1 )) -1;\n-const int WD_1728\t= 0;\t\t \n-const int WD_2048\t= 1;\t\t \n-const int WD_2432\t= 2;\t\t \n-const int WD_1216\t= 3;\t\t \n-const int WD_864\t= 4;\t\t \n-const int WD_ALL\t= (1<<( WD_864+1 )) -1;\n-const int LN_A4\t\t= 0;\t\t \n-const int LN_B4\t\t= 1;\t\t \n-const int LN_INF\t= 2;\t\t \n-const int LN_ALL\t= (1<<( LN_INF+1 )) -1;\n-const int DF_1DMR\t= 0;\t\t \n-const int DF_2DMR\t= 1;\t\t \n-const int DF_2DMRUNCOMP\t= 2;\t\t \n-const int DF_2DMMR\t= 3;\t\t \n-const int DF_ALL\t= (1<<( DF_2DMMR+1 )) -1;\n-const int EC_DISABLE\t= 0;\t\t \n-const int EC_ENABLE\t= 1;\t\t \n-const int EC_ALL\t= 0x3;\n-const int BF_DISABLE\t= 0;\t\t \n-const int BF_ENABLE\t= 1;\t\t \n-const int BF_ALL\t= 0x3;\n-const int ST_0MS\t= 0;\t\t \n-const int ST_5MS\t= 1;\t\t \n-const int ST_10MS2\t= 2;\t\t \n-const int ST_10MS\t= 3;\t\t \n-const int ST_20MS2\t= 4;\t\t \n-const int ST_20MS\t= 5;\t\t \n-const int ST_40MS2\t= 6;\t\t \n-const int ST_40MS\t= 7;\t\t \n-const int ST_ALL\t= (1<<( ST_40MS+1 )) -1;\n-const int PPM_MPS\t= 0;\t\t \n-const int PPM_EOM\t= 1;\t\t \n-const int PPM_EOP\t= 2;\t\t \n-const int PPM_PRI_MPS\t= 4;\t\t \n-const int PPM_PRI_EOM\t= 5;\t\t \n-const int PPM_PRI_EOP\t= 6;\t\t \n-const int PPR_MCF\t= 1;\t\t \n-const int PPR_RTN\t= 2;\t\t \n-const int PPR_RTP\t= 3;\t\t \n-const int PPR_PIN\t= 4;\t\t \n-const int PPR_PIP\t= 5;\t\t \n-const int DLE = 16;\t\t \n-const int SUB = 26;\t\t \n-const int ETX = 3;\t\t \n-const int DC1 = 17;\t\t \n-const int DC2 = 18;\t\t \n-const int CAN = 24;\t\t \n-typedef\tint\t\tsigset_t;\t \n-typedef\tunsigned int\tspeed_t;\t \n-typedef\tunsigned long\ttcflag_t;\t \n-typedef\tunsigned char\tcc_t;\t\t \n-typedef\tint\t\tpid_t;\t\t \n-typedef\tunsigned short\tmode_t;\t\t \n-typedef\tshort\t\tnlink_t;\t \n-typedef\tlong\t\tclock_t;\t \n-typedef\tlong\t\ttime_t;\t\t \n-typedef __SIZE_TYPE__ size_t;\t\t \n-typedef int ptrdiff_t;\t \n-typedef __wchar_t wchar_t;\t \n-extern unsigned int _mb_cur_max;\n-extern void\tabort( );\n-extern int\tabs  (int)  ;\n-extern double\tatof  (const char *)  ;\n-extern int\tatoi  (const char *)  ;\n-extern long int\tatol  (const char *)  ;\n-extern char *\tbsearch  (const void *, const void *, long unsigned int , long unsigned int , int (*) (const void *, const void *))  ;\n-extern void *\tcalloc  (long unsigned int , long unsigned int )  ;\n-extern void\texit  (int)  ;\n-extern void\tfree  (void *)  ;\n-extern char *\tgetenv  (const char *)  ;\n-extern void *\tmalloc  (long unsigned int )  ;\n-extern int\tqsort  (void *, long unsigned int , long unsigned int , int (*) (const void *, const void *))  ;\n-extern int\trand( );\n-extern void *\trealloc  (void *, long unsigned int )  ;\n-extern int\tsrand  (unsigned int)  ;\n-extern int    mbtowc  (__wchar_t *, const char *, long unsigned int )  ;\n-extern int    wctomb  (char *, __wchar_t )  ;\n-extern size_t mbstowcs  (__wchar_t *, const char *, long unsigned int )  ;\n-extern size_t wcstombs  (char *, const __wchar_t *, long unsigned int )  ;\n-extern int atexit (void (*) (void));\n-extern long int labs (long int);\n-extern int putenv (char *);\n-extern double strtod (const char *, char **);\n-extern long int strtol (const char *, char **, int);\n-extern long unsigned int strtoul (const char *, char **, int);\n-extern int system (const char *);\n-extern char *\tstrcat  (char *, const char *)  ;\n-extern char *\tstrchr  (const char *, int)  ;\n-extern int\tstrcmp  (const char *, const char *)  ;\n-extern char *\tstrcpy  (char *, const char *)  ;\n-extern size_t\tstrcspn  (const char *, const char *)  ;\n-extern char *\tstrdup  (const char *)  ;\n-extern size_t\tstrlen  (const char *)  ;\n-extern char *\tstrncat  (char *, const char *, long unsigned int )  ;\n-extern int\tstrncmp  (const char *, const char *, long unsigned int )  ;\n-extern char *\tstrncpy  (char *, const char *, long unsigned int )  ;\n-extern char *\tstrpbrk  (const char *, const char *)  ;\n-extern char *\tstrrchr  (const char *, int)  ;\n-extern size_t\tstrspn  (const char *, const char *)  ;\n-extern char *\tstrstr  (const char *, const char *)  ;\n-extern char *\tstrtok  (char *, const char *)  ;\n-extern void * memchr (const void *, int, long unsigned int );\n-extern int memcmp (const void *, const void *, long unsigned int );\n-extern void * memcpy (void *, const void *, long unsigned int );\n-extern void * memmove (void *, const void *, long unsigned int );\n-extern void * memset (void *, int, long unsigned int );\n-extern int strcoll (const char *, const char *);\n-extern char * strerror (int);\n-extern long unsigned int strxfrm (char *, const char *, long unsigned int );\n-extern \"C\" {\n-extern void __eprintf (const char *, const char *, unsigned, const char *);\n-}\n-extern\tstruct\t_iobuf {\n-\tint\t_cnt;\n-\tunsigned char *_ptr;\n-\tunsigned char *_base;\n-\tint\t_bufsiz;\n-\tshort\t_flag;\n-\tchar\t_file;\t\t \n-} _iob[];\n-extern struct _iobuf \t*fopen  (const char *, const char *)  ;\n-extern struct _iobuf \t*fdopen  (int, const char *)  ;\n-extern struct _iobuf \t*freopen  (const char *, const char *, struct _iobuf  *)  ;\n-extern struct _iobuf \t*popen  (const char *, const char *)  ;\n-extern struct _iobuf \t*tmpfile();\n-extern long\tftell  (struct _iobuf  *)  ;\n-extern char\t*fgets  (char *, int, struct _iobuf  *)  ;\n-extern char\t*gets  (char *)  ;\n-extern char\t*sprintf  (char *, const char *, ...)  ;\n-extern char\t*ctermid  (char *)  ;\n-extern char\t*cuserid  (char *)  ;\n-extern char\t*tempnam  (const char *, const char *)  ;\n-extern char\t*tmpnam  (char *)  ;\n-extern int fclose (struct _iobuf  *);\n-extern int fflush (struct _iobuf  *);\n-extern int fgetc (struct _iobuf  *);\n-extern int fgetpos (struct _iobuf  *, long *);\n-extern int fprintf (struct _iobuf  *, const char *, ...);\n-extern int fputc (int, struct _iobuf  *);\n-extern int fputs (const char *, struct _iobuf  *);\n-extern long unsigned int fread (void *, long unsigned int , long unsigned int , struct _iobuf  *);\n-extern int fscanf (struct _iobuf  *, const char *, ...);\n-extern int fseek (struct _iobuf  *, long int, int);\n-extern int fsetpos (struct _iobuf  *, const long *);\n-extern long unsigned int fwrite (const void *, long unsigned int , long unsigned int , struct _iobuf  *);\n-extern int pclose (struct _iobuf  *);\n-extern void perror (const char *);\n-extern int printf (const char *, ...);\n-extern int puts (const char *);\n-extern int remove (const char *);\n-extern int rename (const char *, const char *);\n-extern void rewind (struct _iobuf  *);\n-extern int scanf (const char *, ...);\n-extern void setbuf (struct _iobuf  *, char *);\n-extern int setvbuf (struct _iobuf  *, char *, int, long unsigned int );\n-extern int sscanf (const char *, const char *, ...);\n-extern int vprintf (const char *, __gnuc_va_list);\n-extern int vsprintf (char *, const char *, __gnuc_va_list);\n-extern int vfprintf (struct _iobuf  *, const char *, __gnuc_va_list);\n-extern int ungetc (int, struct _iobuf  *);\n-extern int _flsbuf (unsigned int, struct _iobuf  *);\n-extern int _filbuf (struct _iobuf  *);\n-typedef long _G_clock_t;\n-typedef short _G_dev_t;\n-typedef long   _G_fpos_t;\n-typedef unsigned short _G_gid_t;\n-typedef unsigned long _G_ino_t;\n-typedef unsigned short _G_mode_t;\n-typedef short _G_nlink_t;\n-typedef long _G_off_t;\n-typedef int _G_pid_t;\n-typedef int _G_ptrdiff_t;\n-typedef int _G_sigset_t;\n-typedef long unsigned int _G_size_t;\n-typedef long _G_time_t;\n-typedef unsigned short _G_uid_t;\n-typedef __wchar_t _G_wchar_t;\n-typedef int   _G_ssize_t;\n-typedef int _G_wint_t;\n-typedef char * _G_va_list;\n-typedef signed char _G_int8_t;\n-typedef unsigned char _G_uint8_t;\n-typedef short _G_int16_t;\n-typedef unsigned short _G_uint16_t;\n-typedef long _G_int32_t;\n-typedef unsigned long _G_uint32_t;\n-const size_t NPOS = (size_t)(-1);\n-typedef void fvoid_t();\n-typedef _G_wint_t wint_t;\n-enum capacity { default_size, reserve };\n-extern \"C\" fvoid_t *set_new_handler(fvoid_t *);\n-extern fvoid_t *__new_handler;\n-extern \"C\" void __default_new_handler();\n-inline void *operator new(size_t, void *place) { return place; }\n-inline void *operator new[](size_t, void *place) { return place; }\n-typedef\tunsigned char\tu_char;\n-typedef\tunsigned short\tu_short;\n-typedef\tunsigned int\tu_int;\n-typedef\tunsigned long\tu_long;\n-typedef\tunsigned short\tushort;\t\t \n-typedef\tunsigned int\tuint;\t\t \n-typedef\tstruct  _physadr_t { int r[1]; } *physadr_t;\n-typedef\tstruct label_t {\n-\tint\tval[2];\n-} label_t;\n-typedef\tstruct\t_quad_t { long val[2]; } quad_t;\n-typedef\tlong\tdaddr_t;\n-typedef\tchar *\tcaddr_t;\n-typedef\tunsigned long\tino_t;\n-typedef\tshort\tdev_t;\n-typedef\tlong\toff_t;\n-typedef\tunsigned short\tuid_t;\n-typedef\tunsigned short\tgid_t;\n-typedef\tlong\tkey_t;\n-typedef\tchar *\taddr_t;\n-typedef\tlong\tfd_mask;\n-typedef\tstruct fd_set {\n-\tfd_mask\tfds_bits[((( 256  )+((  (sizeof (fd_mask) * 8 )  )-1))/(  (sizeof (fd_mask) * 8 )  )) ];\n-} fd_set;\n-extern \"C\" {\n-extern int mkstemp(char *);\n-extern int strncasecmp(const char*, const char*, size_t);\n-extern int strcasecmp(const char*, const char*);\n-extern long random(void);\n-extern int seteuid(uid_t);\n-extern int setegid(gid_t);\n-extern int ftruncate(int, off_t);\n-extern int getdtablesize(void);\n-struct fd_set;\n-struct timeval;\n-extern int select(int,struct fd_set*,struct fd_set*,struct fd_set*,struct timeval*);\n-extern int ioctl(int, int, ...);\n-extern int fchown(int, uid_t, gid_t);\n-extern int gethostname(char*, int);\n-extern char* optarg;\n-extern int opterr;\n-extern int optind;\n-extern char* mktemp(char*);\n-extern void syslog(int, const char*, ...);\n-extern void vsyslog(int, const char*, va_list);\n-extern void closelog(void);\n-extern void openlog(const char*, int, int);\n-extern int fchmod(int, mode_t);\n-struct timezone;\n-struct timeval;\n-extern int gettimeofday(struct timeval*, struct timezone*);\n-extern void endpwent(void);\n-extern int getpeername(int,void*,int*);\n-extern int getsockname(int,void*,int*);\n-extern int socket(int, int, int);\n-extern int connect(int, const void*, int);\n-extern int flock(int, int);\n-}\n-typedef unsigned char fxBool;\n-inline int fxmin(int a, int b)\t\t{ return (a < b) ? a : b; }\n-inline u_long fxmin(u_long a, u_long b)\t{ return (a < b) ? a : b; }\n-inline u_int fxmin(u_int a, u_int b)\t{ return (a < b) ? a : b; }\n-inline int fxmax(int a, int b)\t\t{ return (a > b) ? a : b; }\n-inline u_long fxmax(u_long a, u_long b)\t{ return (a > b) ? a : b; }\n-inline u_int fxmax(u_int a, u_int b)\t{ return (a > b) ? a : b; }\n-extern \"C\" void _fxassert(const char*, const char*, int);\n-class fxObj {\n-public:\n-    fxObj();\n-    virtual ~fxObj();\n-    void inc();\n-    void dec();\n-    u_long getReferenceCount();\n-    virtual const char* className() const;\n-    int compare(const fxObj *) const;\n-    virtual void subClassMustDefine(const char* method) const;\n-protected:\n-    u_long\treferenceCount;\n-};\n-inline fxObj::fxObj()\t\t\t\t{ referenceCount = 0; }\n-inline void fxObj::inc()\t\t\t{ ++referenceCount; }\n-inline void fxObj::dec() {\n-    if ( referenceCount>0 ); else _fxassert( \"Bogus object reference count\" ,\"../util/Obj.h\",54); ;\n-    if (0 >= --referenceCount) delete this;\n-}\n-inline u_long fxObj::getReferenceCount()\t{ return referenceCount; }\n-class fxStr;\n-class fxTempStr {\n-public:\n-    fxTempStr(fxTempStr const &other);\n-    ~fxTempStr();\n-    friend fxTempStr operator|(fxStr const&, fxStr const&);\n-    friend fxTempStr operator|(fxStr const&, char const*);\n-    friend fxTempStr operator|(char const*, fxStr const&);\n-    friend fxTempStr& operator|(const fxTempStr&, fxStr const& b);\n-    friend fxTempStr& operator|(const fxTempStr&, char const* b);\n-    operator char*() const;\n-    operator int() const;\n-    operator float() const;\n-    operator double() const;\n-    u_int length() const;\n-protected:\n-    char\tindata[100];\t\t \n-    char*\tdata;\t\t\t \n-    u_int\tslength;\t\t \n-    friend class fxStr;\n-    fxTempStr(char const *, u_int, char const *, u_int);\n-    fxTempStr& concat(char const* b, u_int bl);\n-};\n-inline fxTempStr::operator char*() const\t{ return data; }\n-inline fxTempStr::operator int() const\t\t{ return atoi(data); }\n-inline fxTempStr::operator float() const\t{ return float(atof(data)); }\n-inline fxTempStr::operator double() const\t{ return double(atof(data)); }\n-inline u_int fxTempStr::length() const\t\t{ return slength - 1; }\n-class fxStr {\n-    friend class fxTempStr;\n-public:\n-    fxStr(u_int l=0);\n-    fxStr(char const *s);\n-    fxStr(char const *s, u_int len);\n-    fxStr(fxStr const&);\n-    fxStr(int, char const* format);\n-    fxStr(long, char const* format);\n-    fxStr(float, char const* format);\n-    fxStr(double, char const* format);\n-    fxStr(const fxTempStr&);\n-    ~fxStr();\n-    u_long hash() const;\n-    operator char*() const\n-\t{ return data; }\n-    operator int() const\n-\t{ return atoi(data); }\n-    operator float() const\n-\t{ return float(atof(data)); }\n-    operator double() const\n-\t{ return double(atof(data)); }\n-    u_int length() const { return slength-1; }\n-    char& operator[](u_int i) const\n-    {   if ( i<slength-1 ); else _fxassert( \"Invalid Str[] index\" ,\"../util/Str.h\",109); ;\n-\treturn data[i]; }\n-    void operator=(const fxTempStr& s);\n-    void operator=(fxStr const& s);\n-    void operator=(char const *s);\n-    friend fxBool operator==(fxStr const&, fxStr const&);\n-    friend fxBool operator==(fxStr const&, char const*);\n-    friend fxBool operator==(fxStr const&, char *);\n-    friend fxBool operator==(char const*, fxStr const&);\n-    friend fxBool operator!=(fxStr const&, fxStr const&);\n-    friend fxBool operator!=(fxStr const&, char const*);\n-    friend fxBool operator!=(char const*, fxStr const&);\n-    friend fxBool operator>=(fxStr const&, fxStr const&);\n-    friend fxBool operator>=(fxStr const&, char const*);\n-    friend fxBool operator>=(char const*, fxStr const&);\n-    friend fxBool operator<=(fxStr const&, fxStr const&);\n-    friend fxBool operator<=(fxStr const&, char const*);\n-    friend fxBool operator<=(char const*, fxStr const&);\n-    friend fxBool operator>(fxStr const&, fxStr const&);\n-    friend fxBool operator>(fxStr const&, char const*);\n-    friend fxBool operator>(char const*, fxStr const&);\n-    friend fxBool operator<(fxStr const&, fxStr const&);\n-    friend fxBool operator<(fxStr const&, char const*);\n-    friend fxBool operator<(char const*, fxStr const&);\n-    int compare(fxStr const *a) const { return ::compare(*this, *a); }\n-    friend int compare(fxStr const&, fxStr const&);\n-    friend int compare(fxStr const&, char const*);\n-    friend int compare(char const*, fxStr const&);\n-    friend fxTempStr& operator|(const fxTempStr&, fxStr const&);\n-    friend fxTempStr& operator|(const fxTempStr&, char const*);\n-    friend fxTempStr operator|(fxStr const&, fxStr const&);\n-    friend fxTempStr operator|(fxStr const&, char const*);\n-    friend fxTempStr operator|(char const*, fxStr const&);\n-    fxStr copy() const;\n-    fxStr extract(u_int start,u_int len) const;\n-    fxStr cut(u_int start,u_int len);\n-    fxStr head(u_int) const;\n-    fxStr tail(u_int) const;\n-    void lowercase(u_int posn=0, u_int len=0);\n-    void raisecase(u_int posn=0, u_int len=0);\n-    void remove(u_int posn,u_int len=1);\n-    void resize(u_int len, fxBool reallocate = ((fxBool)0) );\n-    void setMaxLength(u_int maxlen);\n-    void append(char a);\n-    void append(char const *s, u_int len=0);\n-    void append(const fxTempStr& s)\n-\t{ append((char*)s, s.slength-1); }\n-    void append(fxStr const& s)\n-\t{ append((char*)s, s.slength-1); }\n-    void insert(char a, u_int posn=0);\n-    void insert(char const *, u_int posn=0, u_int len=0);\n-    void insert(const fxTempStr& s, u_int posn=0)\n-\t{ insert((char*)s, posn, s.slength-1); }\n-    void insert(fxStr const& s, u_int posn=0)\n-\t{ insert((char*)s, posn, s.slength-1); }\n-    u_int next(u_int posn, char delimiter) const;\n-    u_int next(u_int posn, char const *delimiters, u_int len=0) const;\n-    u_int next(u_int posn, fxStr const& delimiters) const\n-\t{ return next(posn, (char*)delimiters, delimiters.slength-1); }\n-    u_int nextR(u_int posn, char delimiter) const;\n-    u_int nextR(u_int posn, char const*, u_int len=0) const;\n-    u_int nextR(u_int posn, fxStr const& delimiters) const\n-\t{ return nextR(posn, (char*)delimiters, delimiters.slength-1); }\n-    u_int skip(u_int posn, char a) const; \n-    u_int skip(u_int posn, char const *, u_int len=0) const;\n-    u_int skip(u_int posn, fxStr const& delimiters) const\n-\t{ return skip(posn, (char*)delimiters, delimiters.slength-1); }\n-    u_int skipR(u_int posn, char a) const;\n-    u_int skipR(u_int posn, char const *, u_int len=0) const;\n-    u_int skipR(u_int posn, fxStr const& delimiters) const\n-\t{ return skipR(posn, (char*)delimiters, delimiters.slength-1); }\n-    fxStr token(u_int & posn, char delimiter) const;\n-    fxStr token(u_int & posn, char const * delimiters,\n-\tu_int delimiters_len = 0) const;\n-    fxStr token(u_int & posn, fxStr const & delimiters) const\n-\t{ return token(posn, delimiters.data, delimiters.slength-1); }\n-    fxStr tokenR(u_int & posn, char delimiter) const;\n-    fxStr tokenR(u_int & posn, char const * delimiters,\n-\tu_int delimiters_len = 0) const;\n-    fxStr tokenR(u_int & posn, fxStr const & delimiters) const\n-\t{ return tokenR(posn, delimiters.data, delimiters.slength-1); }\n-protected:\n-    u_int slength;\n-    char * data; \n-    static char emptyString;\n-    void fxStr::resizeInternal(u_int);\n-    int findEndBuffer(const char *, u_int buflen) const;\n-    int findBuffer(const char *buf, u_int buflen) const;\n-    void bracketBuffer(const char *, u_int buflen, int &, int &) const;\n-};\n-struct Class2Params {\n-    u_int vr;\t\t \n-    u_int br;\t\t \n-    u_int wd;\t\t \n-    u_int ln;\t\t \n-    u_int df;\t\t \n-    u_int ec;\t\t \n-    u_int bf;\t\t \n-    u_int st;\t\t \n-    static u_int vrDISTab[2];\t\t \n-    static u_int dfDISTab[4];\t\t \n-    static u_int wdDISTab[8];\t\t \n-    static u_int lnDISTab[3];\t\t \n-    static u_int stDISTab[8];\t\t \n-    static u_int stDCSTab[8];\t\t \n-    static u_int brDISTab[8];\t\t \n-    static u_int brDCSTab[8];\t\t \n-    static u_int DISvrTab[2];\t\t \n-    static u_int DISdfTab[2];\t\t \n-    static u_int DISwdTab[4];\t\t \n-    static u_int DISlnTab[4];\t\t \n-    static u_int DISstTab[8];\t\t \n-    static u_int DISbrTab[16];\t\t \n-    static u_int DCSbrTab[16];\t\t \n-    static const char* bitRateNames[8];\t\t \n-    static const char* dataFormatNames[4];\t \n-    static const char* vresNames[2];\t\t \n-    static const char* pageWidthNames[8];\t \n-    static const char* pageLengthNames[4];\t \n-    static const char* scanlineTimeNames[8];\t \n-    Class2Params();\n-    int operator==(const Class2Params&) const;\n-    int operator!=(const Class2Params&) const;\n-    fxStr cmd() const;\t\t\t \n-    void setFromDIS(u_int dis, u_int xinfo = 0);\n-    void setFromDCS(u_int dcs, u_int xinfo = 0);\n-    u_int getDCS() const;\n-    fxBool is2D() const;\n-    u_int pageWidth() const;\n-    u_int transferSize(u_int ms) const;\n-    u_int minScanlineSize() const;\n-    fxStr encode() const;\t\t \n-    void decode(const fxStr&);\t\t \n-};\n-typedef\tstruct {\n-\tunsigned short tiff_magic;\t \n-\tunsigned short tiff_version;\t \n-\tunsigned long  tiff_diroff;\t \n-} TIFFHeader;\n-typedef\tstruct {\n-\tunsigned short tdir_tag;\t \n-\tunsigned short tdir_type;\t \n-\tunsigned long  tdir_count;\t \n-\tunsigned long  tdir_offset;\t \n-} TIFFDirEntry;\n-typedef\tenum {\n-\tTIFF_NOTYPE\t= 0,\t \n-\tTIFF_BYTE\t= 1,\t \n-\tTIFF_ASCII\t= 2,\t \n-\tTIFF_SHORT\t= 3,\t \n-\tTIFF_LONG\t= 4,\t \n-\tTIFF_RATIONAL\t= 5,\t \n-\tTIFF_SBYTE\t= 6,\t \n-\tTIFF_UNDEFINED\t= 7,\t \n-\tTIFF_SSHORT\t= 8,\t \n-\tTIFF_SLONG\t= 9,\t \n-\tTIFF_SRATIONAL\t= 10,\t \n-\tTIFF_FLOAT\t= 11,\t \n-\tTIFF_DOUBLE\t= 12\t \n-} TIFFDataType;\n-typedef\tstruct tiff TIFF;\n-extern int fclose (struct _iobuf  *);\n-extern int fflush (struct _iobuf  *);\n-extern int fgetc (struct _iobuf  *);\n-extern int fgetpos (struct _iobuf  *, long *);\n-extern int fprintf (struct _iobuf  *, const char *, ...);\n-extern int fputc (int, struct _iobuf  *);\n-extern int fputs (const char *, struct _iobuf  *);\n-extern long unsigned int fread (void *, long unsigned int , long unsigned int , struct _iobuf  *);\n-extern int fscanf (struct _iobuf  *, const char *, ...);\n-extern int fseek (struct _iobuf  *, long int, int);\n-extern int fsetpos (struct _iobuf  *, const long *);\n-extern long unsigned int fwrite (const void *, long unsigned int , long unsigned int , struct _iobuf  *);\n-extern int pclose (struct _iobuf  *);\n-extern void perror (const char *);\n-extern int printf (const char *, ...);\n-extern int puts (const char *);\n-extern int remove (const char *);\n-extern int rename (const char *, const char *);\n-extern void rewind (struct _iobuf  *);\n-extern int scanf (const char *, ...);\n-extern void setbuf (struct _iobuf  *, char *);\n-extern int setvbuf (struct _iobuf  *, char *, int, long unsigned int );\n-extern int sscanf (const char *, const char *, ...);\n-extern int vprintf (const char *, __gnuc_va_list);\n-extern int vsprintf (char *, const char *, __gnuc_va_list);\n-extern int vfprintf (struct _iobuf  *, const char *, __gnuc_va_list);\n-extern int ungetc (int, struct _iobuf  *);\n-extern int _flsbuf (unsigned int, struct _iobuf  *);\n-extern int _filbuf (struct _iobuf  *);\n-typedef\tvoid (*TIFFErrorHandler)(const char* module, const char* fmt, va_list);\n-typedef\tint (*TIFFReadWriteProc)(void*, char*, unsigned long);\n-typedef\tlong (*TIFFSeekProc)(void*, long, int);\n-typedef\tint (*TIFFCloseProc)(void*);\n-typedef\tlong (*TIFFSizeProc)(void*);\n-typedef\tint (*TIFFMapFileProc)(void*, char**, long*);\n-typedef\tvoid (*TIFFUnmapFileProc)(void*, char*, long);\n-extern \"C\" {\n-extern\tconst char* TIFFGetVersion();\n-extern\tvoid TIFFClose(TIFF*);\n-extern\tint TIFFFlush(TIFF*);\n-extern\tint TIFFFlushData(TIFF*);\n-extern\tint TIFFGetField(TIFF*, unsigned int, ...);\n-extern\tint TIFFVGetField(TIFF*, unsigned int, va_list);\n-extern\tint TIFFGetFieldDefaulted(TIFF*, unsigned int, ...);\n-extern\tint TIFFVGetFieldDefaulted(TIFF*, unsigned int, va_list);\n-extern\tint TIFFReadDirectory(TIFF*);\n-extern\tunsigned long TIFFScanlineSize(TIFF*);\n-extern\tunsigned long TIFFStripSize(TIFF*);\n-extern\tunsigned long TIFFVStripSize(TIFF*, unsigned long);\n-extern\tunsigned long TIFFTileRowSize(TIFF*);\n-extern\tunsigned long TIFFTileSize(TIFF*);\n-extern\tunsigned long TIFFVTileSize(TIFF*, unsigned long);\n-extern\tint TIFFFileno(TIFF*);\n-extern\tint TIFFGetMode(TIFF*);\n-extern\tint TIFFIsTiled(TIFF*);\n-extern\tlong TIFFCurrentRow(TIFF*);\n-extern\tint TIFFCurrentDirectory(TIFF*);\n-extern\tint TIFFCurrentStrip(TIFF*);\n-extern\tint TIFFCurrentTile(TIFF*);\n-extern\tint TIFFReadBufferSetup(TIFF*, char*, unsigned long);\n-extern\tint TIFFLastDirectory(TIFF*);\n-extern\tint TIFFSetDirectory(TIFF*, int);\n-extern\tint TIFFSetField(TIFF*, unsigned int, ...);\n-extern\tint TIFFVSetField(TIFF*, unsigned int, va_list);\n-extern\tint TIFFWriteDirectory(TIFF *);\n-extern\tvoid TIFFPrintDirectory(TIFF*, struct _iobuf *, long = 0);\n-extern\tint TIFFReadScanline(TIFF*, unsigned char*, unsigned, unsigned = 0);\n-extern\tint TIFFWriteScanline(TIFF*, unsigned char*, unsigned, unsigned = 0);\n-extern\tint TIFFReadRGBAImage(TIFF*,\n-\t    unsigned long, unsigned long, unsigned long*, int stop = 0);\n-extern\tTIFF* TIFFOpen(const char*, const char*);\n-extern\tTIFF* TIFFFdOpen(int, const char*, const char*);\n-extern\tTIFF* TIFFClientOpen(const char* name, const char* mode,\n-\t    void* clientdata,\n-\t    TIFFReadWriteProc readproc, TIFFReadWriteProc writeproc,\n-\t    TIFFSeekProc seekproc, TIFFCloseProc closeproc,\n-\t    TIFFSizeProc sizeproc,\n-\t    TIFFMapFileProc mapproc, TIFFUnmapFileProc unmapproc);\n-extern\tconst char* TIFFFileName(TIFF*);\n-extern\tvoid TIFFError(const char*, const char*, ...);\n-extern\tvoid TIFFWarning(const char*, const char*, ...);\n-extern\tTIFFErrorHandler TIFFSetErrorHandler(TIFFErrorHandler handler);\n-extern\tTIFFErrorHandler TIFFSetWarningHandler(TIFFErrorHandler handler);\n-extern\tunsigned int TIFFComputeTile(TIFF*,\n-\t    unsigned long, unsigned long, unsigned long, unsigned int);\n-extern\tint TIFFCheckTile(TIFF*,\n-\t    unsigned long, unsigned long, unsigned long, unsigned);\n-extern\tunsigned int TIFFNumberOfTiles(TIFF*);\n-extern\tint TIFFReadTile(TIFF*,\n-\t    unsigned char*,\n-\t    unsigned long, unsigned long, unsigned long,\n-\t    unsigned int);\n-extern\tint TIFFWriteTile(TIFF*,\n-\t    unsigned char*,\n-\t    unsigned long, unsigned long, unsigned long,\n-\t    unsigned int);\n-extern\tunsigned int TIFFComputeStrip(TIFF*, unsigned long, unsigned int);\n-extern\tunsigned int TIFFNumberOfStrips(TIFF*);\n-extern\tint TIFFReadEncodedStrip(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFReadRawStrip(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFReadEncodedTile(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFReadRawTile(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFWriteEncodedStrip(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFWriteRawStrip(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFWriteEncodedTile(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tint TIFFWriteRawTile(TIFF*, unsigned, unsigned char*, unsigned long);\n-extern\tvoid TIFFSetWriteOffset(TIFF*, unsigned long);\n-extern\tvoid TIFFSwabShort(unsigned short *);\n-extern\tvoid TIFFSwabLong(unsigned long *);\n-extern\tvoid TIFFSwabArrayOfShort(unsigned short *, unsigned long);\n-extern\tvoid TIFFSwabArrayOfLong(unsigned long *, unsigned long);\n-extern\tvoid TIFFReverseBits(unsigned char *, unsigned long);\n-extern\tconst unsigned char* TIFFGetBitRevTable(int);\n-}\n-struct G3Base {\n-    short\tdata;\t\t \n-    short\tbit;\t\t \n-    fxBool\tis2D;\t\t \n-    enum { G3_1D, G3_2D } tag;\t \n-    const u_char* bitmap;\t \n-    static const u_char zeroruns[256];\n-    static const u_char oneruns[256];\n-    static int findspan(const u_char**, int, int, const u_char*);\n-    static int finddiff(const u_char*, int, int);\n-    static void fillspan(u_char* cp, int x, int count);\n-    void setup(const u_char*, fxBool is2d);\n-};\n-class fxStackBuffer;\n-class G3Decoder : private G3Base {\n-private:\n-    short\tbytePending;\t \n-    short\tprevByte;\t \n-    u_char*\trefline;\t \n-    fxStackBuffer* recvBuf;\t \n-    fxBool\tdecode1DRow(u_char*, u_int);\n-    fxBool\tdecode2DRow(u_char*, u_int);\n-    int\t\tnextBit();\n-    void\tungetBit();\n-    int\t\tnextByte();\n-    int\t\tdecodeWhiteRun();\n-    int\t\tdecodeBlackRun();\n-    int\t\tdecodeUncompCode();\n-    void\tskipToEOL(int len);\n-protected:\n-    G3Decoder();\n-    void\traiseEOF();\n-    void\traiseRTC();\n-    void\tsetPendingByte(u_char);\n-    virtual int decodeNextByte() = 0;\n-    void\tsetRefLine(u_char*);\n-    u_char*\tgetRefLine();\n-    virtual void invalidCode(const char* type, int x);\n-    virtual void prematureEOL(const char* type, int x);\n-    virtual void badPixelCount(const char* type, int x);\n-    virtual void badDecodingState(const char* type, int x);\n-public:\n-    sigjmp_buf\tjmpEOF;\t\t \n-    sigjmp_buf\tjmpRTC;\t\t \n-    virtual ~G3Decoder();\n-    void\tsetupDecoder(u_int, fxBool is2D);\n-    void\tdecode(void* raster, u_int w, u_int h);\n-    void\tskip(u_int h);\n-    void\tskipLeader();\n-    fxBool\tdecodeRow(void* scanline, u_int w);\n-    void\tskipRow();\n-    fxBool\tisLastRow1D();\n-    fxBool\tisNextRow1D();\n-    fxBool\tisByteAligned();\n-    void\tsetRecvBuf(fxStackBuffer&);\n-    fxStackBuffer* getRecvBuf();\n-    void\tflushRecvBuf();\n-};\n-inline void G3Decoder::setRecvBuf(fxStackBuffer& b){ recvBuf = &b; }\n-inline fxStackBuffer* G3Decoder::getRecvBuf()\t{ return recvBuf; }\n-inline void G3Decoder::setRefLine(u_char* b)\t{ refline = b; }\n-inline u_char* G3Decoder::getRefLine()\t\t{ return refline; }\n-inline fxBool G3Decoder::isLastRow1D()\t\t{ return tag == G3_1D; }\n-enum FaxSendStatus {\n-    send_retry,\t\t\t \n-    send_failed,\t\t \n-    send_done,\t\t\t \n-    send_reformat,\t\t \n-};\n-class FaxServer;\n-class FaxMachineInfo;\n-class ModemConfig;\n-class fxStackBuffer;\n-class FaxFont;\n-class FaxRequest;\n-typedef unsigned int CallStatus;\t \n-typedef\tunsigned int CallType;\t\t \n-typedef\tunsigned int AnswerType;\t \n-typedef unsigned int SpeakerVolume;\n-typedef\tunsigned int ATResponse;\t \n-typedef\tunsigned int BaudRate;\t\t \n-typedef\tunsigned int FlowControl;\t \n-typedef\tunsigned int SetAction;\t\t \n-typedef struct {\n-    const char*\tmsg;\t\t \n-    u_short\tlen;\t\t \n-    ATResponse\texpect;\t\t \n-    CallStatus\tstatus;\t\t \n-    CallType\ttype;\t\t \n-} AnswerMsg;\n-class FaxModem : public G3Decoder {\n-public:\n-    static FaxModem* deduceModem(FaxServer&, const ModemConfig& config);\n-    enum {\t\t\t \n-\tOK\t   = 0,\t\t \n-\tBUSY\t   = 1,\t\t \n-\tNOCARRIER  = 2,\t\t \n-\tNOANSWER   = 3,\t\t \n-\tNODIALTONE = 4,\t\t \n-\tERROR\t   = 5,\t\t \n-\tFAILURE\t   = 6,\t\t \n-\tNOFCON\t   = 7,\t\t \n-\tDATACONN   = 8,\t\t \n-    };\n-    enum {\t\t\t \n-\tCALLTYPE_ERROR\t= 0,\t \n-\tCALLTYPE_DATA\t= 1,\t \n-\tCALLTYPE_FAX\t= 2,\t \n-\tCALLTYPE_VOICE\t= 3,\t \n-\tCALLTYPE_UNKNOWN = 4,\t \n-    };\n-    enum {\t\t\t \n-\tOFF\t= 0,\t\t \n-\tQUIET\t= 1,\t\t \n-\tLOW\t= 2,\t\t \n-\tMEDIUM\t= 3,\t\t \n-\tHIGH\t= 4,\t\t \n-    };\n-    enum {\t\t\t \n-\tBR0\t= 0,\t\t \n-\tBR300\t= 1,\t\t \n-\tBR1200\t= 2,\t\t \n-\tBR2400\t= 3,\t\t \n-\tBR4800\t= 4,\t\t \n-\tBR9600\t= 5,\t\t \n-\tBR19200\t= 6,\t\t \n-\tBR38400\t= 7,\t\t \n-\tBR57600\t= 8,\t\t \n-\tBR76800\t= 9,\t\t \n-    };\n-    enum {\t\t\t \n-\tFLOW_NONE\t= 0,\t \n-\tFLOW_XONXOFF\t= 1,\t \n-\tFLOW_RTSCTS\t= 2\t \n-    };\n-    enum {\t\t\t \n-\tACT_NOW\t\t= 0,\t \n-\tACT_DRAIN\t= 1,\t \n-\tACT_FLUSH\t= 2,\t \n-    };\n-    enum {\t\t\t \n-\tANSTYPE_ANY\t= 0,\t \n-\tANSTYPE_DATA\t= 1,\t \n-\tANSTYPE_FAX\t= 2,\t \n-\tANSTYPE_VOICE\t= 3,\t \n-    };\n-    enum {\t\t\t \n-\tAT_NOTHING\t= 0,\t \n-\tAT_OK\t\t= 1,\t \n-\tAT_CONNECT\t= 2,\t \n-\tAT_NOANSWER\t= 3,\t \n-\tAT_NOCARRIER\t= 4,\t \n-\tAT_NODIALTONE\t= 5,\t \n-\tAT_BUSY\t\t= 6,\t \n-\tAT_OFFHOOK\t= 7,\t \n-\tAT_RING\t\t= 8,\t \n-\tAT_ERROR\t= 9,\t \n-\tAT_EMPTYLINE\t= 10,\t \n-\tAT_TIMEOUT\t= 11,\t \n-\tAT_OTHER\t= 12,\t \n-    };\n-private:\n-    FaxServer&\tserver;\t\t \n-    fxStr\tresetCmds;\t \n-    long\tdataTimeout;\t \n-    BaudRate\trate;\t\t \n-    FlowControl\tiFlow;\t\t \n-    FlowControl\toFlow;\t\t \n-    u_int\tpageNumber;\t \n-    FaxFont*\ttagLineFont;\t \n-    u_int\ttagLineSlop;\t \n-    fxStr\ttagLine;\t \n-    u_int\ttagLineFields;\t \n-    void\tsetupTagLine(const FaxRequest&);\n-    u_int\tcblc;\t\t \n-    fxBool\tlastRowBad;\t \n-    u_long\trecvEOLCount;\t \n-    u_long\trecvBadLineCount;\n-    u_long\trecvConsecutiveBadLineCount;\n-    u_int\trecvCC;\t\t \n-    fxStackBuffer* recvBuf;\t \n-    u_long\tsavedWriteOff;\t \n-    void\trecvRow(TIFF* tif, fxStackBuffer& row, u_char* buf);\n-    void\tinvalidCode(const char* type, int x);\n-    void\tprematureEOL(const char* type, int x);\n-    void\tbadPixelCount(const char* type, int x);\n-    void\tbadDecodingState(const char* type, int x);\n-protected:\n-    const ModemConfig& conf;\t \n-    FlowControl\tflowControl;\t \n-    u_int\tmodemServices;\t \n-    fxStr\tmodemMfr;\t \n-    fxStr\tmodemModel;\t \n-    fxStr\tmodemRevision;\t \n-    Class2Params modemParams;\t \n-    char\trbuf[1024];\t \n-    ATResponse\tlastResponse;\t \n-    fxStr\tmfrQueryCmd;\t \n-    fxStr\tmodelQueryCmd;\t \n-    fxStr\trevQueryCmd;\t \n-    static const char* serviceNames[9];\t  \n-    static const u_char digitMap[12*2+1]; \n-    static const char* callStatus[9];\t  \n-    FaxModem(FaxServer&, const ModemConfig&);\n-    virtual fxBool selectBaudRate(BaudRate max, FlowControl i, FlowControl o);\n-    virtual fxBool setupModem() = 0;\n-    virtual fxBool setupManufacturer(fxStr& mfr);\n-    virtual fxBool setupModel(fxStr& model);\n-    virtual fxBool setupRevision(fxStr& rev);\n-    fxBool doQuery(const fxStr& queryCmd, fxStr& result, long ms = 30*1000);\n-    virtual const AnswerMsg* findAnswer(const char* s);\n-    virtual CallType answerResponse(fxStr& emsg);\n-    virtual CallStatus dialResponse(fxStr& emsg) = 0;\n-    void\tsetDataTimeout(long secs, u_int br);\n-    long\tgetDataTimeout() const;\n-    void\tpause(u_int ms);\n-    void\tcountPage();\n-    void\tmodemTrace(const char* fmt, ...);\n-    void\tmodemSupports(const char* fmt, ...);\n-    void\tmodemCapability(const char* fmt, ...);\n-    void\tprotoTrace(const char* fmt, ...);\n-    void\trecvTrace(const char* fmt, ...);\n-    void\tcopyQualityTrace(const char* fmt, ...);\n-    void\tserverTrace(const char* fmt, ...);\n-    void\ttraceBits(u_int bits, const char* bitNames[]);\n-    void\ttraceModemParams();\n-    void\ttracePPR(const char* dir, u_int ppr);\n-    void\ttracePPM(const char* dir, u_int ppm);\n-    void\ttrimModemLine(char buf[], int& cc);\n-    int\t\tgetModemLine(char buf[], u_int bufSize, long ms = 0);\n-    void\tbeginTimedTransfer();\n-    void\tendTimedTransfer();\n-    fxBool\twasTimeout();\n-    void\tsetTimeout(fxBool);\n-    void\tflushModemInput();\n-    fxBool\tputModem(void* data, int n, long ms = 0);\n-    fxBool\tputModemData(void* data, int n);\n-    fxBool\tputModemDLEData(const u_char* data, u_int,\n-\t\t    const u_char* brev, long ms);\n-    fxBool\tputModemLine(const char* cp);\n-    int\t\tgetModemChar(long ms = 0);\n-    int\t\tgetModemDataChar();\n-    void\tstartTimeout(long ms);\n-    void\tstopTimeout(const char* whichdir);\n-    static const char* ATresponses[13];\n-    virtual ATResponse atResponse(char* buf, long ms = 30*1000);\n-    virtual fxBool waitFor(ATResponse wanted, long ms = 30*1000);\n-    fxBool\tatCmd(const fxStr& cmd, ATResponse = AT_OK, long ms = 30*1000);\n-    fxBool\tatQuery(const char* what, u_int& v, long ms = 30*1000);\n-    fxBool\tatQuery(const char* what, fxStr& v, long ms = 30*1000);\n-    u_int\tfromHex(const char*, int = -1);\n-    fxStr\ttoHex(int, int ndigits);\n-    fxBool\tparseRange(const char*, u_int&);\n-    fxBool\tvparseRange(const char*, int nargs ...);\n-    fxBool\tvatFaxCmd(ATResponse resp, const char* cmd ... );\n-    fxBool\tsendBreak(fxBool pause);\n-    fxBool\tsetBaudRate(BaudRate rate);\n-    fxBool\tsetBaudRate(BaudRate rate, FlowControl i, FlowControl o);\n-    fxBool\tsetXONXOFF(FlowControl i, FlowControl o, SetAction);\n-    fxBool\tsetDTR(fxBool on);\n-    fxBool\tsetInputBuffering(fxBool on);\n-    fxBool\tmodemStopOutput();\n-    FlowControl\tgetInputFlow();\n-    FlowControl\tgetOutputFlow();\n-    fxBool\tgetProtocolTracing();\n-    fxBool\tgetHDLCTracing();\n-    FaxSendStatus sendSetupParams(TIFF*, Class2Params&,\n-\t\t    FaxMachineInfo&, fxStr&);\n-    fxBool\trecvCheckTSI(const fxStr&);\n-    void\trecvCSI(fxStr&);\n-    void\trecvDCS(Class2Params&);\n-    void\trecvNSF(u_int nsf);\n-    void\trecvSetupPage(TIFF* tif, long group3opts, int fillOrder);\n-    void\trecvResetPage(TIFF* tif);\n-    fxBool\tabortRequested();\n-    fxBool\tdecodePPM(const fxStr& pph, u_int& ppm, fxStr& emsg);\n-    fxBool\trecvPageDLEData(TIFF* tif, fxBool checkQuality,\n-\t\t    const Class2Params& params, fxStr& emsg);\n-    virtual void abortPageRecv() = 0;\n-    virtual int decodeNextByte();\n-    fxBool\tcheckQuality();\n-    fxBool\tisQualityOK(const Class2Params&);\n-    u_long\tgetRecvEOLCount() const;\n-    u_long\tgetRecvBadLineCount() const;\n-    u_long\tgetRecvConsecutiveBadLineCount() const;\n-    fxBool\tsetupTagLineSlop(const Class2Params&);\n-    u_int\tgetTagLineSlop() const;\n-    u_char*\timageTagLine(u_char* buf, u_int fillorder, const Class2Params&);\n-public:\n-    virtual ~FaxModem();\n-    virtual fxBool dataService();\t\t \n-    virtual fxBool voiceService();\t\t \n-    virtual fxBool sync(long ms = 0);\t\t \n-    virtual fxBool reset(long ms = 5*1000);\t \n-    virtual void hangup();\t\t\t \n-    virtual void setSpeakerVolume(SpeakerVolume);\n-    virtual void setLID(const fxStr& number) = 0;\n-    const fxStr& getModel() const;\n-    const fxStr& getManufacturer() const;\n-    const fxStr& getRevision() const;\n-    virtual fxBool supports2D() const;\n-    virtual fxBool supportsEOLPadding() const;\n-    virtual fxBool supportsVRes(float res) const;\n-    virtual fxBool supportsPageWidth(u_int w) const;\n-    virtual fxBool supportsPageLength(u_int l) const;\n-    virtual fxBool supportsPolling() const;\n-    virtual int selectSignallingRate(int br) const;\n-    u_int getBestSignallingRate() const;\n-    u_int getBestScanlineTime() const;\n-    virtual int selectScanlineTime(int st) const;\n-    u_int getBestVRes() const;\n-    u_int getBestDataFormat() const;\n-    u_int getBestPageWidth() const;\n-    u_int getBestPageLength() const;\n-    u_int modemDIS() const;\n-    virtual CallStatus dial(const char* number,\n-\tconst Class2Params& dis, fxStr& emsg);\n-    virtual void sendBegin(const FaxRequest&);\n-    virtual fxBool getPrologue(Class2Params&,\n-\tu_int& nsf, fxStr& csi, fxBool& hasDoc) = 0;\n-    virtual void sendSetupPhaseB();\n-    virtual FaxSendStatus sendPhaseB(TIFF*, Class2Params&, FaxMachineInfo&,\n-\tfxStr& pph, fxStr& emsg) = 0;\n-    virtual void sendEnd();\n-    virtual void sendAbort() = 0;\n-    virtual fxBool waitForRings(u_int rings);\n-    virtual CallType answerCall(AnswerType, fxStr& emsg);\n-    virtual fxBool recvBegin(fxStr& emsg) = 0;\n-    virtual fxBool recvPage(TIFF*, int& ppm, fxStr& em) = 0;\n-    virtual fxBool recvEnd(fxStr& emsg) = 0;\n-    virtual void recvAbort() = 0;\n-    virtual fxBool requestToPoll() = 0;\n-    virtual fxBool pollBegin(const fxStr& pollID, fxStr& emsg) = 0;\n-};\n-inline long FaxModem::getDataTimeout() const\t\t{ return dataTimeout; }\n-inline const fxStr& FaxModem::getModel() const\t\t{ return modemModel; }\n-inline const fxStr& FaxModem::getManufacturer() const\t{ return modemMfr; }\n-inline const fxStr& FaxModem::getRevision() const\t{ return modemRevision; }\n-inline FlowControl FaxModem::getInputFlow()\t\t{ return iFlow; }\n-inline FlowControl FaxModem::getOutputFlow()\t\t{ return oFlow; }\n-inline u_int FaxModem::getTagLineSlop() const\t\t{ return tagLineSlop; }\n-struct ModemConfig {\n-    fxStr\ttype;\t\t\t \n-    fxStr\tresetCmds;\t\t \n-    fxStr\tdialCmd;\t\t \n-    fxStr\tanswerAnyCmd;\t\t \n-    fxStr\tanswerDataCmd;\t\t \n-    fxStr\tanswerFaxCmd;\t\t \n-    fxStr\tanswerVoiceCmd;\t\t \n-    fxStr\tflowControlCmd;\t\t \n-    fxStr\tsetupDTRCmd;\t\t \n-    fxStr\tsetupDCDCmd;\t\t \n-    fxStr\tsetupAACmd;\t\t \n-    fxStr\tnoAutoAnswerCmd;\t \n-    fxStr\tsetVolumeCmd[5];\t \n-    fxStr\techoOffCmd;\t\t \n-    fxStr\tverboseResultsCmd;\t \n-    fxStr\tresultCodesCmd;\t\t \n-    fxStr\tonHookCmd;\t\t \n-    fxStr\tsoftResetCmd;\t\t \n-    fxStr\twaitTimeCmd;\t\t \n-    fxStr\tpauseTimeCmd;\t\t \n-    fxStr\tmfrQueryCmd;\t\t \n-    fxStr\tmodelQueryCmd;\t\t \n-    fxStr\trevQueryCmd;\t\t \n-    fxStr\tanswerAnyBeginCmd;\t \n-    fxStr\tanswerDataBeginCmd;\t \n-    fxStr\tanswerFaxBeginCmd;\t \n-    fxStr\tanswerVoiceBeginCmd;\t \n-    fxStr\tsendBeginCmd;\t\t \n-    u_int\tt1Timer;\t\t \n-    u_int\tt2Timer;\t\t \n-    u_int\tt4Timer;\t\t \n-    u_int\tdialResponseTimeout;\t \n-    u_int\tanswerResponseTimeout;\t \n-    u_int\tpageStartTimeout;\t \n-    u_int\tpageDoneTimeout;\t \n-    fxStr\tclass1Cmd;\t\t \n-    u_int\tclass1TCFResponseDelay;\t \n-    u_int\tclass1SendPPMDelay;\t \n-    u_int\tclass1SendTCFDelay;\t \n-    u_int\tclass1TrainingRecovery;\t \n-    u_int\tclass1RecvAbortOK;\t \n-    u_int\tclass1FrameOverhead;\t \n-    u_int\tclass1RecvIdentTimer;\t \n-    u_int\tclass1TCFMaxNonZero;\t \n-    u_int\tclass1TCFMinRun;\t \n-    fxStr\tclass2Cmd;\t\t \n-    fxStr\tclass2DCCQueryCmd;\t \n-    fxStr\tclass2CQQueryCmd;\t \n-    fxStr\tclass2BORCmd;\t\t \n-    fxStr\tclass2RELCmd;\t\t \n-    fxStr\tclass2CQCmd;\t\t \n-    fxStr\tclass2AbortCmd;\t\t \n-    fxStr\tclass2TBCCmd;\t\t \n-    fxStr\tclass2CRCmd;\t\t \n-    fxStr\tclass2PHCTOCmd;\t\t \n-    fxStr\tclass2BUGCmd;\t\t \n-    fxStr\tclass2LIDCmd;\t\t \n-    fxStr\tclass2DCCCmd;\t\t \n-    fxStr\tclass2DISCmd;\t\t \n-    fxStr\tclass2DDISCmd;\t\t \n-    fxStr\tclass2CIGCmd;\t\t \n-    fxStr\tclass2SPLCmd;\t\t \n-    fxStr\tclass2PTSCmd;\t\t \n-    fxStr\tclass2RecvDataTrigger;\t \n-    fxBool\tclass2XmitWaitForXON;\t \n-    fxStr\tclass2PIECmd;\t\t \n-    fxStr\tclass2NRCmd;\t\t \n-    FlowControl\tflowControl;\t\t \n-    BaudRate\tmaxRate;\t\t \n-    u_int\trecvFillOrder;\t\t \n-    u_int\tsendFillOrder;\t\t \n-    u_int\tframeFillOrder;\t\t \n-    u_int\tresetDelay;\t\t \n-    u_int\tbaudRateDelay;\t\t \n-    u_int\tmaxPacketSize;\t\t \n-    u_int\tinterPacketDelay;\t \n-    u_int\tpercentGoodLines;\t \n-    u_int\tmaxConsecutiveBadLines;\t \n-    fxBool\twaitForConnect;\t\t \n-    fxStr\ttagLineFmt;\t\t \n-    fxStr\ttagLineFontFile;\t \n-    ModemConfig();\n-    ~ModemConfig();\n-    fxBool parseItem(const char* tag, const char* value);\n-    void setVolumeCmds(const fxStr& value);\n-    fxStr parseATCmd(const char*);\n-};\n-ModemConfig::ModemConfig()\n-    : type(\"unknown\")\n-    , dialCmd(\"DT%s\")\t\t\t \n-    , noAutoAnswerCmd(\"S0=0\")\n-    , echoOffCmd(\"E0\")\n-    , verboseResultsCmd(\"V1\")\n-    , resultCodesCmd(\"Q0\")\n-    , onHookCmd(\"H0\")\n-    , softResetCmd(\"Z\")\n-    , waitTimeCmd(\"S7=30\")\t\t \n-    , pauseTimeCmd(\"S8=2\")\t\t \n-    , class1Cmd(\"+FCLASS=1\")\t\t \n-    , class2CQQueryCmd(\"+FCQ=?\")\t \n-    , tagLineFmt(\"From %%n|%c|Page %%p of %%t\")\n-{\n-    class2XmitWaitForXON = ((fxBool)1) ;\t \n-    setVolumeCmds(\"M0 L0M1 L1M1 L2M1 L3M1\");\n-    answerAnyCmd = \"A\";\n-    flowControl = FaxModem::FLOW_NONE;\t \n-    maxRate = FaxModem::BR19200;\t \n-    sendFillOrder = 2 ;\t \n-    recvFillOrder = 2 ;\t \n-    frameFillOrder = 2 ;\t \n-    resetDelay = 2600;\t\t\t \n-    baudRateDelay = 0;\t\t\t \n-    t1Timer = ((35+5)*1000) ;\t\t\t \n-    t2Timer = ((6+1)*1000) ;\t\t\t \n-    t4Timer = 3100 ;\t\t\t \n-    dialResponseTimeout = 3*60*1000;\t \n-    answerResponseTimeout = 3*60*1000;\t \n-    pageStartTimeout = 3*60*1000;\t \n-    pageDoneTimeout = 3*60*1000;\t \n-    class1TCFResponseDelay = 75;\t \n-    class1SendPPMDelay = 75;\t\t \n-    class1SendTCFDelay = 75;\t\t \n-    class1TrainingRecovery = 1500;\t \n-    class1RecvAbortOK = 200;\t\t \n-    class1FrameOverhead = 4;\t\t \n-    class1RecvIdentTimer = t1Timer;\t \n-    class1TCFMinRun = (2*1500 )/3; \n-    class1TCFMaxNonZero = 10;\t\t \n-    maxPacketSize = 16*1024;\t\t \n-    interPacketDelay = 0;\t\t \n-    waitForConnect = ((fxBool)0) ;\t\t \n-    percentGoodLines = 95;\t\t \n-    maxConsecutiveBadLines = 5;\t\t \n-}\n-ModemConfig::~ModemConfig()\n-{\n-}\n-static fxBool getBoolean(const char* cp)\n-    { return ((strcasecmp( cp ,  \"on\" )==0)  || (strcasecmp( cp ,  \"yes\" )==0) ); }\n-static BaudRate\n-findRate(const char* cp)\n-{\n-    static const struct {\n-\tconst char* name;\n-\tBaudRate    br;\n-    } rates[] = {\n-\t{   \"300\", FaxModem::BR300 },\n-\t{  \"1200\", FaxModem::BR1200 },\n-\t{  \"2400\", FaxModem::BR2400 },\n-\t{  \"4800\", FaxModem::BR4800 },\n-\t{  \"9600\", FaxModem::BR9600 },\n-\t{ \"19200\", FaxModem::BR19200 },\n-\t{ \"38400\", FaxModem::BR38400 },\n-\t{ \"57600\", FaxModem::BR57600 },\n-\t{ \"76800\", FaxModem::BR76800 },\n-    };\n-    for (int i = (sizeof ( rates ) / sizeof ( rates [0])) -1; i >= 0; i--)\n-\tif ((strcasecmp( cp ,  rates[i].name )==0) )\n-\t    return (rates[i].br);\n-    return (FaxModem::BR0);\n-}\n-static BaudRate\n-getRate(const char* cp)\n-{\n-    BaudRate br = findRate(cp);\n-    if (br == FaxModem::BR0) {\n-\tsyslog(3 , \"Unknown baud rate \\\"%s\\\", using 19200\", cp);\n-\tbr = FaxModem::BR19200;\t\t\t \n-    }\n-    return (br);\n-}\n-static u_int\n-getFill(const char* cp)\n-{\n-    if ((strcasecmp( cp ,  \"LSB2MSB\" )==0) )\n-\treturn (2 );\n-    else if ((strcasecmp( cp ,  \"MSB2LSB\" )==0) )\n-\treturn (1 );\n-    else {\n-\tsyslog(3 , \"Unknown fill order \\\"%s\\\"\", cp);\n-        return ((u_int) -1);\n-    }\n-}\n-static FlowControl\n-getFlow(const char* cp)\n-{\n-    if ((strcasecmp( cp ,  \"xonxoff\" )==0) )\n-\treturn (FaxModem::FLOW_XONXOFF);\n-    else if ((strcasecmp( cp ,  \"rtscts\" )==0) )\n-\treturn (FaxModem::FLOW_RTSCTS);\n-    else if ((strcasecmp( cp ,  \"none\" )==0) )\n-\treturn (FaxModem::FLOW_NONE);\n-    else {\n-\tsyslog(3 , \"Unknown flow control \\\"%s\\\", using xonxoff\", cp);\n-\treturn (FaxModem::FLOW_XONXOFF);\t \n-    }\n-}\n-void\n-ModemConfig::setVolumeCmds(const fxStr& tag)\n-{\n-    u_int l = 0;\n-    for (int i = FaxModem::OFF; i <= FaxModem::HIGH; i++) {\n-\tfxStr tmp = tag.token(l, \" \\t\");\t\t \n-\tsetVolumeCmd[i] = parseATCmd(tmp);\n-    }\n-}\n-fxStr\n-ModemConfig::parseATCmd(const char* cp)\n-{\n-    fxStr cmd(cp);\n-    u_int pos = 0;\n-    while ((pos = cmd.next(pos, '<')) != cmd.length()) {\n-\tu_int epos = pos+1;\n-\tfxStr esc = cmd.token(epos, '>');\n-\tesc.lowercase();\n-\tchar ecode;\n-\tif (esc == \"xon\")\n-\t    ecode = (0x80|0xf) ;\n-\telse if (esc == \"rts\")\n-\t    ecode = (0x80|0xe) ;\n-\telse if (esc == \"none\")\n-\t    ecode = (0x80|0xd) ;\n-\telse if (esc == \"\")\t\t \n-\t    ecode = '<';\n-\telse {\n-\t    BaudRate br = findRate(esc);\n-\t    if (br == FaxModem::BR0) {\n-\t\tsyslog(3 , \"Unknown AT escape code \\\"%s\\\"\", (char*) esc);\n-\t\tpos = epos;\n-\t\tcontinue;\n-\t    }\n-\t    ecode = 0x80| ((int)( br )) ;\n-\t}\n-\tcmd.remove(pos, epos-pos);\n-\tcmd.insert(ecode, pos);\n-    }\n-    return (cmd);\n-}\n-static const struct {\n-    const char*\t\t name;\n-    fxStr ModemConfig::* p;\n-} atcmds[] = {\n-    { \"ModemAnswerCmd\",\t\t\t&ModemConfig::answerAnyCmd },\n-    { \"ModemAnswerAnyCmd\",\t\t&ModemConfig::answerAnyCmd },\n-    { \"ModemAnswerFaxCmd\",\t\t&ModemConfig::answerFaxCmd },\n-    { \"ModemAnswerDataCmd\",\t\t&ModemConfig::answerDataCmd },\n-    { \"ModemAnswerVoiceCmd\",\t\t&ModemConfig::answerVoiceCmd },\n-    { \"ModemAnswerFaxBeginCmd\",\t\t&ModemConfig::answerFaxBeginCmd },\n-    { \"ModemAnswerDataBeginCmd\",\t&ModemConfig::answerDataBeginCmd },\n-    { \"ModemAnswerVoiceBeginCmd\",\t&ModemConfig::answerVoiceBeginCmd },\n-    { \"ModemResetCmds\",\t\t\t&ModemConfig::resetCmds },\n-    { \"ModemResetCmd\",\t\t\t&ModemConfig::resetCmds },\n-    { \"ModemDialCmd\",\t\t\t&ModemConfig::dialCmd },\n-    { \"ModemFlowControlCmd\",\t\t&ModemConfig::flowControlCmd },\n-    { \"ModemSetupAACmd\",\t\t&ModemConfig::setupAACmd },\n-    { \"ModemSetupDTRCmd\",\t\t&ModemConfig::setupDTRCmd },\n-    { \"ModemSetupDCDCmd\",\t\t&ModemConfig::setupDCDCmd },\n-    { \"ModemNoAutoAnswerCmd\",\t\t&ModemConfig::noAutoAnswerCmd },\n-    { \"ModemEchoOffCmd\",\t\t&ModemConfig::echoOffCmd },\n-    { \"ModemVerboseResultsCmd\",\t\t&ModemConfig::verboseResultsCmd },\n-    { \"ModemResultCodesCmd\",\t\t&ModemConfig::resultCodesCmd },\n-    { \"ModemOnHookCmd\",\t\t\t&ModemConfig::onHookCmd },\n-    { \"ModemSoftResetCmd\",\t\t&ModemConfig::softResetCmd },\n-    { \"ModemWaitTimeCmd\",\t\t&ModemConfig::waitTimeCmd },\n-    { \"ModemCommaPauseTimeCmd\",\t\t&ModemConfig::pauseTimeCmd },\n-    { \"ModemMfrQueryCmd\",\t\t&ModemConfig::mfrQueryCmd },\n-    { \"ModemModelQueryCmd\",\t\t&ModemConfig::modelQueryCmd },\n-    { \"ModemRevQueryCmd\",\t\t&ModemConfig::revQueryCmd },\n-    { \"ModemSendBeginCmd\",\t\t&ModemConfig::sendBeginCmd },\n-    { \"Class1Cmd\",\t\t\t&ModemConfig::class1Cmd },\n-    { \"Class2Cmd\",\t\t\t&ModemConfig::class2Cmd },\n-    { \"Class2BORCmd\",\t\t\t&ModemConfig::class2BORCmd },\n-    { \"Class2RELCmd\",\t\t\t&ModemConfig::class2RELCmd },\n-    { \"Class2CQCmd\",\t\t\t&ModemConfig::class2CQCmd },\n-    { \"Class2AbortCmd\",\t\t\t&ModemConfig::class2AbortCmd },\n-    { \"Class2CQQueryCmd\",\t\t&ModemConfig::class2CQQueryCmd },\n-    { \"Class2DCCQueryCmd\",\t\t&ModemConfig::class2DCCQueryCmd },\n-    { \"Class2TBCCmd\",\t\t\t&ModemConfig::class2TBCCmd },\n-    { \"Class2CRCmd\",\t\t\t&ModemConfig::class2CRCmd },\n-    { \"Class2PHCTOCmd\",\t\t\t&ModemConfig::class2PHCTOCmd },\n-    { \"Class2BUGCmd\",\t\t\t&ModemConfig::class2BUGCmd },\n-    { \"Class2LIDCmd\",\t\t\t&ModemConfig::class2LIDCmd },\n-    { \"Class2DCCCmd\",\t\t\t&ModemConfig::class2DCCCmd },\n-    { \"Class2DISCmd\",\t\t\t&ModemConfig::class2DISCmd },\n-    { \"Class2DDISCmd\",\t\t\t&ModemConfig::class2DDISCmd },\n-    { \"Class2CIGCmd\",\t\t\t&ModemConfig::class2CIGCmd },\n-    { \"Class2PTSCmd\",\t\t\t&ModemConfig::class2PTSCmd },\n-    { \"Class2SPLCmd\",\t\t\t&ModemConfig::class2SPLCmd },\n-    { \"Class2PIECmd\",\t\t\t&ModemConfig::class2PIECmd },\n-    { \"Class2NRCmd\",\t\t\t&ModemConfig::class2NRCmd },\n-    { \"TagLineFont\",\t\t\t&ModemConfig::tagLineFontFile },\n-    { \"TagLineFormat\",\t\t\t&ModemConfig::tagLineFmt },\n-};\n-static const struct {\n-    const char*\t\t name;\n-    u_int ModemConfig::* p;\n-} fillorders[] = {\n-    { \"ModemRecvFillOrder\",\t\t&ModemConfig::recvFillOrder },\n-    { \"ModemSendFillOrder\",\t\t&ModemConfig::sendFillOrder },\n-    { \"ModemFrameFillOrder\",\t\t&ModemConfig::frameFillOrder },\n-};\n-static const struct {\n-    const char*\t\t name;\n-    u_int ModemConfig::* p;\n-} numbers[] = {\n-    { \"ModemResetDelay\",\t\t&ModemConfig::resetDelay },\n-    { \"ModemBaudRateDelay\",\t\t&ModemConfig::baudRateDelay },\n-    { \"ModemMaxPacketSize\",\t\t&ModemConfig::maxPacketSize },\n-    { \"ModemInterPacketDelay\",\t\t&ModemConfig::interPacketDelay },\n-    { \"FaxT1Timer\",\t\t\t&ModemConfig::t1Timer },\n-    { \"FaxT2Timer\",\t\t\t&ModemConfig::t2Timer },\n-    { \"FaxT4Timer\",\t\t\t&ModemConfig::t4Timer },\n-    { \"ModemDialResponseTimeout\",\t&ModemConfig::dialResponseTimeout },\n-    { \"ModemAnswerResponseTimeout\",\t&ModemConfig::answerResponseTimeout },\n-    { \"ModemPageStartTimeout\",\t\t&ModemConfig::pageStartTimeout },\n-    { \"ModemPageDoneTimeout\",\t\t&ModemConfig::pageDoneTimeout },\n-    { \"Class1TCFResponseDelay\",\t\t&ModemConfig::class1TCFResponseDelay },\n-    { \"Class1SendPPMDelay\",\t\t&ModemConfig::class1SendPPMDelay },\n-    { \"Class1SendTCFDelay\",\t\t&ModemConfig::class1SendTCFDelay },\n-    { \"Class1TrainingRecovery\",\t\t&ModemConfig::class1TrainingRecovery },\n-    { \"Class1RecvAbortOK\",\t\t&ModemConfig::class1RecvAbortOK },\n-    { \"Class1FrameOverhead\",\t\t&ModemConfig::class1FrameOverhead },\n-    { \"Class1RecvIdentTimer\",\t\t&ModemConfig::class1RecvIdentTimer },\n-    { \"Class1TCFMaxNonZero\",\t\t&ModemConfig::class1TCFMaxNonZero },\n-    { \"Class1TCFMinRun\",\t\t&ModemConfig::class1TCFMinRun },\n-    { \"PercentGoodLines\",\t\t&ModemConfig::percentGoodLines },\n-    { \"MaxConsecutiveBadLines\",\t\t&ModemConfig::maxConsecutiveBadLines },\n-};\n-fxBool\n-ModemConfig::parseItem(const char* tag, const char* value)\n-{\n-    int i;\n-    for (i = (sizeof ( atcmds ) / sizeof ( atcmds [0])) -1; i >= 0; i--)\n-\tif ((strcasecmp( tag ,  atcmds[i].name )==0) ) {\n-\t    (*this).*atcmds[i].p = parseATCmd(value);\n-\t    return (((fxBool)1) );\n-\t}\n-    for (i = (sizeof ( fillorders ) / sizeof ( fillorders [0])) -1; i >= 0 ; i--)\n-\tif ((strcasecmp( tag ,  fillorders[i].name )==0) ) {\n-\t    (*this).*fillorders[i].p = getFill(value);\n-\t    return (((fxBool)1) );\n-\t}\n-    for (i = (sizeof ( numbers ) / sizeof ( numbers [0])) -1; i >= 0 ; i--)\n-\tif ((strcasecmp( tag ,  numbers[i].name )==0) ) {\n-\t    (*this).*numbers[i].p = atoi(value);\n-\t    return (((fxBool)1) );\n-\t}\n-    fxBool recognized = ((fxBool)1) ;\n-    if ((strcasecmp( tag ,  \"ModemType\" )==0) )\n-\ttype = value;\n-    else if ((strcasecmp( tag ,  \"ModemSetVolumeCmd\" )==0) )\n-\tsetVolumeCmds(value);\n-    else if ((strcasecmp( tag ,  \"ModemFlowControl\" )==0) )\n-\tflowControl = getFlow(value);\n-    else if ((strcasecmp( tag ,  \"ModemMaxRate\" )==0)  || (strcasecmp( tag ,  \"ModemRate\" )==0) )\n-\tmaxRate = getRate(value);\n-    else if ((strcasecmp( tag ,  \"ModemWaitForConnect\" )==0) )\n-\twaitForConnect = getBoolean(value);\n-    else if ((strcasecmp( tag ,  \"Class2RecvDataTrigger\" )==0) )\n-\tclass2RecvDataTrigger = value;\n-    else if ((strcasecmp( tag ,  \"Class2XmitWaitForXON\" )==0) )\n-\tclass2XmitWaitForXON = getBoolean(value);\n-    else\n-\trecognized = ((fxBool)0) ;\n-    return (recognized);\n-}"}]}