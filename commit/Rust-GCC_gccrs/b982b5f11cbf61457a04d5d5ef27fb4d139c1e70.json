{"sha": "b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4MmI1ZjExY2JmNjE0NTdhMDRkNWQ1ZWYyN2ZiNGQxMzljMWU3MA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2005-03-28T18:19:12Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2005-03-28T18:19:12Z"}, "message": "re PR target/19890 (gcc.dg/20020219-1.c execution test fails on ia64-hpux with -milp32)\n\n\tPR target/19890\n\t* gcc.dg/20020219-1.c: Skip on IA64 HP-UX in ILP32 mode.\n\nFrom-SVN: r97136", "tree": {"sha": "22795662e47e6e6cb2b561f31899312384682fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22795662e47e6e6cb2b561f31899312384682fe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70/comments", "author": null, "committer": null, "parents": [{"sha": "fd6e874db015a3ad5ea8fa7187db271701a4bf29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6e874db015a3ad5ea8fa7187db271701a4bf29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6e874db015a3ad5ea8fa7187db271701a4bf29"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c0087b77747e4e26134afe3abe33ae4509376e92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "patch": "@@ -1,3 +1,8 @@\n+2005-03-28  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/19890\n+\t* gcc.dg/20020219-1.c: Skip on IA64 HP-UX in ILP32 mode.\n+\n 2005-03-28  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/20635"}, {"sha": "36649490e7d6f2544968a3ca1a6aa3d323377945", "filename": "gcc/testsuite/gcc.dg/20020219-1.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982b5f11cbf61457a04d5d5ef27fb4d139c1e70/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c?ref=b982b5f11cbf61457a04d5d5ef27fb4d139c1e70", "patch": "@@ -1,13 +1,18 @@\n /* PR c/4389\n    This testcase failed because host_integerp (x, 0) was returning\n-   1 even for constants bigger than 2^31.  It fails under under hpux\n-   without -mdisable-indexing because the pointer x - 1 is used as\n-   the base address of an indexed load.  Because the struct A is not\n+   1 even for constants bigger than 2^31.  It fails under under hppa\n+   hpux without -mdisable-indexing because the pointer x - 1 is used\n+   as the base address of an indexed load.  Because the struct A is not\n    actually allocated, x - 1 lies in the text segment and this causes\n-   the wrong space register to be selected for the load.  */\n+   the wrong space register to be selected for the load.  It fails on\n+   IA64 hpux in ILP32 mode because extending x - 1 before adding the\n+   array offset gives a different answer then adding first and then\n+   extending.  The underlying problem is the same as with hppa, x - 1 is\n+   not a legal data address.  */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -mdisable-indexing\" { target hppa*-*-hpux* } } */\n+/* { dg-skip-if \"\" { \"ia64-*-hpux*\" } \"*\" \"-mlp64\" } */\n \n /* Disable the test entirely for 16-bit targets.  */\n #if __INT_MAX__ > 32767"}]}