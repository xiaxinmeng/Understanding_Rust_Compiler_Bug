{"sha": "4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQxYzc0MjE0ZWY3NjIxNmFkNTI5YjIzM2RmYWM2M2NjZjBjZjdiNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-25T14:24:59Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-25T14:24:59Z"}, "message": "system.h [...]: Wrap C function declarations in extern \"C\".\n\n\tgcc:\n\t* system.h [__cplusplus]: Wrap C function declarations in extern \"C\".\n\n\tinclude:\n\t* xregex.h (regoff_t): Define.\n\nFrom-SVN: r176747", "tree": {"sha": "f9bf9d2997edf89b4628f4a012d7aa90b35109e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9bf9d2997edf89b4628f4a012d7aa90b35109e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fdab8d4fcbcf41eb5a5cd4f529734d4a5e0d990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fdab8d4fcbcf41eb5a5cd4f529734d4a5e0d990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fdab8d4fcbcf41eb5a5cd4f529734d4a5e0d990"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "6af45fe4a4f917da5e83d6b860a188dad465cebf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "patch": "@@ -1,3 +1,7 @@\n+2011-07-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* system.h [__cplusplus]: Wrap C function declarations in extern \"C\".\n+\n 2011-07-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49822"}, {"sha": "7ac98596bc750c53bf51126327708ef32d5be704", "filename": "gcc/system.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "patch": "@@ -90,6 +90,10 @@ along with GCC; see the file COPYING3.  If not see\n #  define fputc(C, Stream) fputc_unlocked (C, Stream)\n # endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n # ifdef HAVE_CLEARERR_UNLOCKED\n #  undef clearerr\n #  define clearerr(Stream) clearerr_unlocked (Stream)\n@@ -170,6 +174,10 @@ extern int fprintf_unlocked (FILE *, const char *, ...);\n #  endif\n # endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif\n \n /* ??? Glibc's fwrite/fread_unlocked macros cause\n@@ -390,6 +398,10 @@ extern int errno;\n    here.  These checks will be in the undefined state while configure\n    is running so be careful to test \"defined (HAVE_DECL_*)\".  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #if defined (HAVE_DECL_ATOF) && !HAVE_DECL_ATOF\n extern double atof (const char *);\n #endif\n@@ -430,10 +442,18 @@ extern void *sbrk (int);\n extern char *strstr (const char *, const char *);\n #endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #ifdef HAVE_MALLOC_H\n #include <malloc.h>\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #if defined (HAVE_DECL_MALLOC) && !HAVE_DECL_MALLOC\n extern void *malloc (size_t);\n #endif\n@@ -446,6 +466,10 @@ extern void *calloc (size_t, size_t);\n extern void *realloc (void *, size_t);\n #endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #ifdef HAVE_STDINT_H\n #include <stdint.h>\n #endif\n@@ -454,6 +478,10 @@ extern void *realloc (void *, size_t);\n #include <inttypes.h>\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* If the system doesn't provide strsignal, we get it defined in\n    libiberty but no declaration is supplied.  */\n #if !defined (HAVE_STRSIGNAL) \\\n@@ -493,6 +521,10 @@ extern int snprintf (char *, size_t, const char *, ...);\n extern int vsnprintf(char *, size_t, const char *, va_list);\n #endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* 1 if we have C99 designated initializers.  */\n #if !defined(HAVE_DESIGNATED_INITIALIZERS)\n #define HAVE_DESIGNATED_INITIALIZERS \\"}, {"sha": "32f4c6f8fb02c3fa4f39f77605be886ec900338c", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "patch": "@@ -1,3 +1,7 @@\n+2011-07-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* xregex.h (regoff_t): Define.\n+\n 2011-07-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2.h (DW_AT_GNU_macros): New."}, {"sha": "4c5ef9345560e9358684d980438213b599afcd42", "filename": "include/xregex.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/include%2Fxregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1c74214ef76216ad529b233dfac63ccf0cf7b5/include%2Fxregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fxregex.h?ref=4d1c74214ef76216ad529b233dfac63ccf0cf7b5", "patch": "@@ -8,6 +8,7 @@\n #  define regexec xregexec\n #  define regcomp xregcomp\n #  define regerror xregerror\n+#  define regoff_t xregoff_t\n #  define re_set_registers xre_set_registers\n #  define re_match_2 xre_match_2\n #  define re_match xre_match"}]}