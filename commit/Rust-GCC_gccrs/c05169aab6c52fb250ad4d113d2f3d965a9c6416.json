{"sha": "c05169aab6c52fb250ad4d113d2f3d965a9c6416", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1MTY5YWFiNmM1MmZiMjUwYWQ0ZDExM2QyZjNkOTY1YTljNjQxNg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2016-12-28T02:34:29Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2016-12-28T02:34:29Z"}, "message": "cppdiropts.texi, [...]: New files, split from...\n\n2016-12-27  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/cppdiropts.texi, doc/cppwarnopts.texi:  New files, split from...\n\t* doc/cppopts.texi: .... here.\n\t* doc/cpp.texi (Invocation): Adjust includes.\n\t* doc/invoke.texi (Option Summary): Add missing preprocesor-related\n\toptions.  Adjust sorting and formatting.\n\t(Warning Options): Include cppwarnopts.texi.\n\t(Preprocessor Options): Add pointers and list the specific \n\tpreprocessor options from cppopts.texi first instead of last.\n\t(Directory Options): Move/merge documentation of -I, -iquote, and\n\t-I- to cppdiropts.texi.  Include that file here.\n\nFrom-SVN: r243954", "tree": {"sha": "5d7ec466663a7b8bd6d6a98c4f3d96f913491a5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7ec466663a7b8bd6d6a98c4f3d96f913491a5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05169aab6c52fb250ad4d113d2f3d965a9c6416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05169aab6c52fb250ad4d113d2f3d965a9c6416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05169aab6c52fb250ad4d113d2f3d965a9c6416", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05169aab6c52fb250ad4d113d2f3d965a9c6416/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c50fe2da057dc16506ace024dde32638a30f8562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50fe2da057dc16506ace024dde32638a30f8562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50fe2da057dc16506ace024dde32638a30f8562"}], "stats": {"total": 523, "additions": 272, "deletions": 251}, "files": [{"sha": "c8e2c420936f8f34ce8a16c2d1bf802b695d1e4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -1,3 +1,16 @@\n+2016-12-27  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/cppdiropts.texi, doc/cppwarnopts.texi:  New files, split from...\n+\t* doc/cppopts.texi: .... here.\n+\t* doc/cpp.texi (Invocation): Adjust includes.\n+\t* doc/invoke.texi (Option Summary): Add missing preprocesor-related\n+\toptions.  Adjust sorting and formatting.\n+\t(Warning Options): Include cppwarnopts.texi.\n+\t(Preprocessor Options): Add pointers and list the specific \n+\tpreprocessor options from cppopts.texi first instead of last.\n+\t(Directory Options): Move/merge documentation of -I, -iquote, and\n+\t-I- to cppdiropts.texi.  Include that file here.\n+\n 2016-12-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/predicates.md (const_0_to_12_operand): Rename"}, {"sha": "c469dba2668f2a23e60633d1d5c165eabdb83bc6", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -4349,6 +4349,8 @@ options may @emph{not} be grouped: @option{-dM} is very different from\n \n @table @gcctabopt\n @include cppopts.texi\n+@include cppdiropts.texi\n+@include cppwarnopts.texi\n @end table\n @c man end\n "}, {"sha": "2e131a82d9da42f30eaae33d3b487c91b011e810", "filename": "gcc/doc/cppdiropts.texi", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppdiropts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppdiropts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppdiropts.texi?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -0,0 +1,135 @@\n+@c Copyright (C) 1999-2016 Free Software Foundation, Inc.\n+@c This is part of the CPP and GCC manuals.\n+@c For copying conditions, see the file gcc.texi.\n+\n+@c ---------------------------------------------------------------------\n+@c Options affecting include directory search in the preprocessor\n+@c ---------------------------------------------------------------------\n+\n+@c If this file is included with the flag ``cppmanual'' set, it is\n+@c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n+\n+@item -I @var{dir}\n+@opindex I\n+Add the directory @var{dir} to the list of directories to be searched\n+for header files.\n+@ifset cppmanual\n+@xref{Search Path}.\n+@end ifset\n+If you use more than\n+one @option{-I} option, the directories are scanned in left-to-right\n+order; the standard system directories come after.\n+\n+This can be used to override a system header\n+file, substituting your own version, since these directories are\n+searched before the system header file directories.  However, you should\n+not use this option to add directories that contain vendor-supplied\n+system header files (use @option{-isystem} for that).\n+\n+If a standard system include directory, or a directory specified with\n+@option{-isystem}, is also specified with @option{-I}, the @option{-I}\n+option is ignored.  The directory is still searched but as a\n+system directory at its normal position in the system include chain.\n+This is to ensure that GCC's procedure to fix buggy system headers and\n+the ordering for the @code{include_next} directive are not inadvertently changed.\n+If you really need to change the search order for system directories,\n+use the @option{-nostdinc} and/or @option{-isystem} options.\n+@ifset cppmanual\n+@xref{System Headers}.\n+@end ifset\n+\n+If @var{dir} begins with @code{=}, then the @code{=} is replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n+\n+@item -iquote @var{dir}\n+@opindex iquote\n+Search @var{dir} only for header files requested with\n+@code{@w{#include \"@var{file}\"}}; they are not searched for\n+@code{@w{#include <@var{file}>}}, before all directories specified by\n+@option{-I} and before the standard system directories.\n+@ifset cppmanual\n+@xref{Search Path}.\n+@end ifset\n+If @var{dir} begins with @code{=}, then the @code{=} is replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n+\n+@item -isystem @var{dir}\n+@opindex isystem\n+Search @var{dir} for header files, after all directories specified by\n+@option{-I} but before the standard system directories.  Mark it\n+as a system directory, so that it gets the same special treatment as\n+is applied to the standard system directories.\n+@ifset cppmanual\n+@xref{System Headers}.\n+@end ifset\n+If @var{dir} begins with @code{=}, then the @code{=} is replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n+\n+@item -I-\n+@opindex I-\n+Split the include path.\n+This option has been deprecated.  Please use @option{-iquote} instead for\n+@option{-I} directories before the @option{-I-} and remove the @option{-I-}\n+option.\n+\n+Any directories specified with @option{-I}\n+options before @option{-I-} are searched only for headers requested with\n+@code{@w{#include \"@var{file}\"}}; they are not searched for\n+@code{@w{#include <@var{file}>}}.  If additional directories are\n+specified with @option{-I} options after the @option{-I-}, those\n+directories are searched for all @samp{#include} directives.\n+\n+In addition, @option{-I-} inhibits the use of the directory of the current\n+file directory as the first search directory for @code{@w{#include\n+\"@var{file}\"}}.  There is no way to override this effect of @option{-I-}.\n+@ifset cppmanual\n+@xref{Search Path}.\n+@end ifset\n+\n+@item -idirafter @var{dir}\n+@opindex idirafter\n+Search @var{dir} for header files, but do it @emph{after} all\n+directories specified with @option{-I} and the standard system directories\n+have been exhausted.  @var{dir} is treated as a system include directory.\n+If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n+\n+@item -iprefix @var{prefix}\n+@opindex iprefix\n+Specify @var{prefix} as the prefix for subsequent @option{-iwithprefix}\n+options.  If the prefix represents a directory, you should include the\n+final @samp{/}.\n+\n+@item -iwithprefix @var{dir}\n+@itemx -iwithprefixbefore @var{dir}\n+@opindex iwithprefix\n+@opindex iwithprefixbefore\n+Append @var{dir} to the prefix specified previously with\n+@option{-iprefix}, and add the resulting directory to the include search\n+path.  @option{-iwithprefixbefore} puts it in the same place @option{-I}\n+would; @option{-iwithprefix} puts it where @option{-idirafter} would.\n+\n+@item -isysroot @var{dir}\n+@opindex isysroot\n+This option is like the @option{--sysroot} option, but applies only to\n+header files (except for Darwin targets, where it applies to both header\n+files and libraries).  See the @option{--sysroot} option for more\n+information.\n+\n+@item -imultilib @var{dir}\n+@opindex imultilib\n+Use @var{dir} as a subdirectory of the directory containing\n+target-specific C++ headers.\n+\n+@item -nostdinc\n+@opindex nostdinc\n+Do not search the standard system directories for header files.\n+Only the directories you have specified with @option{-I} options\n+(and the directory of the current file, if appropriate) are searched.\n+\n+@item -nostdinc++\n+@opindex nostdinc++\n+Do not search for header files in the C++-specific standard directories,\n+but do still search the other standard directories.  (This option is\n+used when building the C++ library.)\n+"}, {"sha": "82204418aa03aea04c1c0d57edf2b4d53959c015", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 0, "deletions": 179, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -47,97 +47,6 @@ standard predefined macros remain defined.\n @xref{Standard Predefined Macros}.\n @end ifset\n \n-@item -I @var{dir}\n-@opindex I\n-Add the directory @var{dir} to the list of directories to be searched\n-for header files.\n-@ifset cppmanual\n-@xref{Search Path}.\n-@end ifset\n-Directories named by @option{-I} are searched before the standard\n-system include directories.  If the directory @var{dir} is a standard\n-system include directory, the option is ignored to ensure that the\n-default search order for system directories and the special treatment\n-of system headers are not defeated\n-@ifset cppmanual\n-(@pxref{System Headers})\n-@end ifset\n-.\n-If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n-@item -Wcomment\n-@itemx -Wcomments\n-@opindex Wcomment\n-@opindex Wcomments\n-Warn whenever a comment-start sequence @samp{/*} appears in a @samp{/*}\n-comment, or whenever a backslash-newline appears in a @samp{//} comment.\n-This warning is enabled by @option{-Wall}.\n-\n-@item -Wtrigraphs\n-@opindex Wtrigraphs\n-@anchor{Wtrigraphs}\n-Warn if any trigraphs are encountered that might change the meaning of\n-the program.  Trigraphs within comments are not warned about,\n-except those that would form escaped newlines.\n-\n-This option is implied by @option{-Wall}.  If @option{-Wall} is not\n-given, this option is still enabled unless trigraphs are enabled.  To\n-get trigraph conversion without warnings, but get the other\n-@option{-Wall} warnings, use @samp{-trigraphs -Wall -Wno-trigraphs}.\n-\n-@item -Wundef\n-@opindex Wundef\n-@opindex Wno-undef\n-Warn if an undefined identifier is evaluated in an @code{#if} directive.\n-Such identifiers are replaced with zero.\n-\n-@item -Wexpansion-to-defined\n-@opindex Wexpansion-to-defined\n-Warn whenever @samp{defined} is encountered in the expansion of a macro\n-(including the case where the macro is expanded by an @samp{#if} directive).\n-Such usage is not portable.\n-This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.\n-\n-@item -Wunused-macros\n-@opindex Wunused-macros\n-Warn about macros defined in the main file that are unused.  A macro\n-is @dfn{used} if it is expanded or tested for existence at least once.\n-The preprocessor will also warn if the macro has not been used at the\n-time it is redefined or undefined.\n-\n-Built-in macros, macros defined on the command line, and macros\n-defined in include files are not warned about.\n-\n-@emph{Note:} If a macro is actually used, but only used in skipped\n-conditional blocks, then CPP will report it as unused.  To avoid the\n-warning in such a case, you might improve the scope of the macro's\n-definition by, for example, moving it into the first skipped block.\n-Alternatively, you could provide a dummy use with something like:\n-\n-@smallexample\n-#if defined the_macro_causing_the_warning\n-#endif\n-@end smallexample\n-\n-@item -Wno-endif-labels\n-@opindex Wno-endif-labels\n-@opindex Wendif-labels\n-Do not warn whenever an @code{#else} or an @code{#endif} are followed by text.\n-This usually happens in code of the form\n-\n-@smallexample\n-#if FOO\n-@dots{}\n-#else FOO\n-@dots{}\n-#endif FOO\n-@end smallexample\n-\n-@noindent\n-The second and third @code{FOO} should be in comments, but often are not\n-in older programs.  This warning is on by default.\n-\n @item -M\n @opindex M\n @cindex @command{make}\n@@ -295,36 +204,7 @@ You should not write this @code{#pragma} in your own code, but it is\n safe to edit the filename if the PCH file is available in a different\n location.  The filename may be absolute or it may be relative to GCC's\n current directory.\n-\n @end ifclear\n-@item -I-\n-@opindex I-\n-Split the include path.  Any directories specified with @option{-I}\n-options before @option{-I-} are searched only for headers requested with\n-@code{@w{#include \"@var{file}\"}}; they are not searched for\n-@code{@w{#include <@var{file}>}}.  If additional directories are\n-specified with @option{-I} options after the @option{-I-}, those\n-directories are searched for all @samp{#include} directives.\n-\n-In addition, @option{-I-} inhibits the use of the directory of the current\n-file directory as the first search directory for @code{@w{#include\n-\"@var{file}\"}}.\n-@ifset cppmanual\n-@xref{Search Path}.\n-@end ifset\n-This option has been deprecated.\n-\n-@item -nostdinc\n-@opindex nostdinc\n-Do not search the standard system directories for header files.\n-Only the directories you have specified with @option{-I} options\n-(and the directory of the current file, if appropriate) are searched.\n-\n-@item -nostdinc++\n-@opindex nostdinc++\n-Do not search for header files in the C++-specific standard directories,\n-but do still search the other standard directories.  (This option is\n-used when building the C++ library.)\n \n @item -include @var{file}\n @opindex include\n@@ -348,65 +228,6 @@ processing its declarations.\n All files specified by @option{-imacros} are processed before all files\n specified by @option{-include}.\n \n-@item -idirafter @var{dir}\n-@opindex idirafter\n-Search @var{dir} for header files, but do it @emph{after} all\n-directories specified with @option{-I} and the standard system directories\n-have been exhausted.  @var{dir} is treated as a system include directory.\n-If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n-@item -iprefix @var{prefix}\n-@opindex iprefix\n-Specify @var{prefix} as the prefix for subsequent @option{-iwithprefix}\n-options.  If the prefix represents a directory, you should include the\n-final @samp{/}.\n-\n-@item -iwithprefix @var{dir}\n-@itemx -iwithprefixbefore @var{dir}\n-@opindex iwithprefix\n-@opindex iwithprefixbefore\n-Append @var{dir} to the prefix specified previously with\n-@option{-iprefix}, and add the resulting directory to the include search\n-path.  @option{-iwithprefixbefore} puts it in the same place @option{-I}\n-would; @option{-iwithprefix} puts it where @option{-idirafter} would.\n-\n-@item -isysroot @var{dir}\n-@opindex isysroot\n-This option is like the @option{--sysroot} option, but applies only to\n-header files (except for Darwin targets, where it applies to both header\n-files and libraries).  See the @option{--sysroot} option for more\n-information.\n-\n-@item -imultilib @var{dir}\n-@opindex imultilib\n-Use @var{dir} as a subdirectory of the directory containing\n-target-specific C++ headers.\n-\n-@item -isystem @var{dir}\n-@opindex isystem\n-Search @var{dir} for header files, after all directories specified by\n-@option{-I} but before the standard system directories.  Mark it\n-as a system directory, so that it gets the same special treatment as\n-is applied to the standard system directories.\n-@ifset cppmanual\n-@xref{System Headers}.\n-@end ifset\n-If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n-@item -iquote @var{dir}\n-@opindex iquote\n-Search @var{dir} only for header files requested with\n-@code{@w{#include \"@var{file}\"}}; they are not searched for\n-@code{@w{#include <@var{file}>}}, before all directories specified by\n-@option{-I} and before the standard system directories.\n-@ifset cppmanual\n-@xref{Search Path}.\n-@end ifset\n-If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n @item -fdirectives-only\n @opindex fdirectives-only\n When preprocessing, handle directives, but do not expand macros."}, {"sha": "ea50d4f285ceb7319824fa83c208b189b76d53c6", "filename": "gcc/doc/cppwarnopts.texi", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppwarnopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Fcppwarnopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppwarnopts.texi?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -0,0 +1,83 @@\n+@c Copyright (C) 1999-2016 Free Software Foundation, Inc.\n+@c This is part of the CPP and GCC manuals.\n+@c For copying conditions, see the file gcc.texi.\n+\n+@c ---------------------------------------------------------------------\n+@c Options affecting preprocessor warnings\n+@c ---------------------------------------------------------------------\n+\n+@c If this file is included with the flag ``cppmanual'' set, it is\n+@c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n+\n+@item -Wcomment\n+@itemx -Wcomments\n+@opindex Wcomment\n+@opindex Wcomments\n+Warn whenever a comment-start sequence @samp{/*} appears in a @samp{/*}\n+comment, or whenever a backslash-newline appears in a @samp{//} comment.\n+This warning is enabled by @option{-Wall}.\n+\n+@item -Wtrigraphs\n+@opindex Wtrigraphs\n+@anchor{Wtrigraphs}\n+Warn if any trigraphs are encountered that might change the meaning of\n+the program.  Trigraphs within comments are not warned about,\n+except those that would form escaped newlines.\n+\n+This option is implied by @option{-Wall}.  If @option{-Wall} is not\n+given, this option is still enabled unless trigraphs are enabled.  To\n+get trigraph conversion without warnings, but get the other\n+@option{-Wall} warnings, use @samp{-trigraphs -Wall -Wno-trigraphs}.\n+\n+@item -Wundef\n+@opindex Wundef\n+@opindex Wno-undef\n+Warn if an undefined identifier is evaluated in an @code{#if} directive.\n+Such identifiers are replaced with zero.\n+\n+@item -Wexpansion-to-defined\n+@opindex Wexpansion-to-defined\n+Warn whenever @samp{defined} is encountered in the expansion of a macro\n+(including the case where the macro is expanded by an @samp{#if} directive).\n+Such usage is not portable.\n+This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.\n+\n+@item -Wunused-macros\n+@opindex Wunused-macros\n+Warn about macros defined in the main file that are unused.  A macro\n+is @dfn{used} if it is expanded or tested for existence at least once.\n+The preprocessor will also warn if the macro has not been used at the\n+time it is redefined or undefined.\n+\n+Built-in macros, macros defined on the command line, and macros\n+defined in include files are not warned about.\n+\n+@emph{Note:} If a macro is actually used, but only used in skipped\n+conditional blocks, then CPP will report it as unused.  To avoid the\n+warning in such a case, you might improve the scope of the macro's\n+definition by, for example, moving it into the first skipped block.\n+Alternatively, you could provide a dummy use with something like:\n+\n+@smallexample\n+#if defined the_macro_causing_the_warning\n+#endif\n+@end smallexample\n+\n+@item -Wno-endif-labels\n+@opindex Wno-endif-labels\n+@opindex Wendif-labels\n+Do not warn whenever an @code{#else} or an @code{#endif} are followed by text.\n+This usually happens in code of the form\n+\n+@smallexample\n+#if FOO\n+@dots{}\n+#else FOO\n+@dots{}\n+#endif FOO\n+@end smallexample\n+\n+@noindent\n+The second and third @code{FOO} should be in comments, but often are not\n+in older programs.  This warning is on by default.\n+"}, {"sha": "ac2a2ac647978febd8272f546aa9ef070c5daf47", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 39, "deletions": 72, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05169aab6c52fb250ad4d113d2f3d965a9c6416/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c05169aab6c52fb250ad4d113d2f3d965a9c6416", "patch": "@@ -272,7 +272,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wdisabled-optimization @gol\n -Wno-discarded-qualifiers -Wno-discarded-array-qualifiers @gol\n -Wno-div-by-zero -Wdouble-promotion -Wduplicated-cond @gol\n--Wempty-body  -Wenum-compare -Wno-endif-labels @gol\n+-Wempty-body  -Wenum-compare  -Wno-endif-labels -Wexpansion-to-defined @gol\n -Werror  -Werror=* -Wfatal-errors -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wno-format-contains-nul -Wno-format-extra-args -Wformat-length=@var{n} @gol\n -Wformat-nonliteral @gol\n@@ -316,8 +316,9 @@ Objective-C and Objective-C++ Dialects}.\n -Wtype-limits  -Wundef @gol\n -Wuninitialized  -Wunknown-pragmas  -Wunsafe-loop-optimizations @gol\n -Wunsuffixed-float-constants  -Wunused  -Wunused-function @gol\n--Wunused-label  -Wunused-local-typedefs -Wunused-parameter @gol\n--Wno-unused-result -Wunused-value @gol -Wunused-variable @gol\n+-Wunused-label  -Wunused-local-typedefs  -Wunused-macros @gol\n+-Wunused-parameter -Wno-unused-result @gol\n+-Wunused-value -Wunused-variable @gol\n -Wunused-const-variable -Wunused-const-variable=@var{n} @gol\n -Wunused-but-set-parameter -Wunused-but-set-variable @gol\n -Wuseless-cast -Wvariadic-macros -Wvector-operation-performance @gol\n@@ -463,20 +464,22 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Preprocessor Options,,Options Controlling the Preprocessor}.\n @gccoptlist{-A@var{question}=@var{answer} @gol\n -A-@var{question}@r{[}=@var{answer}@r{]} @gol\n--C  -dD  -dI  -dM  -dN @gol\n--D@var{macro}@r{[}=@var{defn}@r{]}  -E  -H @gol\n--idirafter @var{dir} @gol\n--include @var{file}  -imacros @var{file} @gol\n--iprefix @var{file}  -iwithprefix @var{dir} @gol\n--iwithprefixbefore @var{dir}  -isystem @var{dir} @gol\n--imultilib @var{dir} -isysroot @var{dir} @gol\n--M  -MM  -MF  -MG  -MP  -MQ  -MT  -nostdinc  @gol\n--P  -fdebug-cpp -ftrack-macro-expansion -fworking-directory @gol\n--remap -traditional -traditional-cpp -trigraphs  @gol\n--undef  -U@var{macro}  @gol\n--Wp,@var{option} -Xpreprocessor @var{option} -no-integrated-cpp}\n-\n-@item Assembler Option\n+-C  -CC  -D@var{macro}@r{[}=@var{defn}@r{]} @gol\n+-dD  -dI  -dM  -dN  -dU @gol\n+-fdebug-cpp  -fdirectives-only  -fdollars-in-identifiers  @gol\n+-fexec-charset=@var{charset}  -fextended-identifiers  @gol\n+-finput-charset=@var{charset}  -fno-canonical-system-headers @gol\n+-fpch-deps  -fpch-preprocess  -fpreprocessed @gol\n+-ftabstop=@var{width}  -ftrack-macro-expansion  @gol\n+-fwide-exec-charset=@var{charset}  -fworking-directory @gol\n+-H  -imacros @var{file}  -include @var{file} @gol\n+-M  -MD  -MF  -MG  -MM  -MMD  -MP  -MQ  -MT @gol\n+-no-integrated-cpp  -P  -remap @gol\n+-traditional  -traditional-cpp  -trigraphs @gol\n+-U@var{macro}  -undef  @gol\n+-Wp,@var{option}  -Xpreprocessor @var{option}}\n+\n+@item Assembler Options\n @xref{Assembler Options,,Passing Options to the Assembler}.\n @gccoptlist{-Wa,@var{option}  -Xassembler @var{option}}\n \n@@ -493,9 +496,14 @@ Objective-C and Objective-C++ Dialects}.\n \n @item Directory Options\n @xref{Directory Options,,Options for Directory Search}.\n-@gccoptlist{-B@var{prefix} -I@var{dir} -iplugindir=@var{dir} @gol\n--iquote@var{dir} -L@var{dir} -no-canonical-prefixes -I- @gol\n---sysroot=@var{dir} --no-sysroot-suffix}\n+@gccoptlist{-B@var{prefix}  -I@var{dir}  -I- @gol\n+-idirafter @var{dir} @gol\n+-imacros @var{file}  -imultilib @var{dir} @gol\n+-iplugindir=@var{dir} -iprefix @var{file} @gol\n+-iquote @var{dir}  -isysroot @var{dir}  -isystem @var{dir} @gol\n+-iwithprefix @var{dir} -iwithprefixbefore @var{dir}  @gol\n+-L@var{dir}  -no-canonical-prefixes  --no-sysroot-suffix @gol\n+-nostdinc  -nostdinc++ --sysroot=@var{dir}}\n \n @item Code Generation Options\n @xref{Code Gen Options,,Options for Code Generation Conventions}.\n@@ -5638,6 +5646,8 @@ example, warn if an unsigned variable is compared against zero with\n @code{<} or @code{>=}.  This warning is also enabled by\n @option{-Wextra}.\n \n+@include cppwarnopts.texi\n+\n @item -Wbad-function-cast @r{(C and Objective-C only)}\n @opindex Wbad-function-cast\n @opindex Wno-bad-function-cast\n@@ -11305,7 +11315,15 @@ Some of these options make sense only together with @option{-E} because\n they cause the preprocessor output to be unsuitable for actual\n compilation.\n \n+In addition to the options listed here, there are a number of options \n+to control search paths for include files documented in \n+@ref{Directory Options}.  \n+Options to control preprocessor diagnostics are listed in \n+@ref{Warning Options}.\n+\n @table @gcctabopt\n+@include cppopts.texi\n+\n @item -Wp,@var{option}\n @opindex Wp\n You can use @option{-Wp,@var{option}} to bypass the compiler driver\n@@ -11342,7 +11360,6 @@ This option may be useful in conjunction with the @option{-B} or\n perform additional processing of the program source between\n normal preprocessing and compilation.\n \n-@include cppopts.texi\n @end table\n \n @node Assembler Options\n@@ -11712,25 +11729,7 @@ These options specify directories to search for header files, for\n libraries and for parts of the compiler:\n \n @table @gcctabopt\n-@item -I@var{dir}\n-@opindex I\n-Add the directory @var{dir} to the head of the list of directories to be\n-searched for header files.  This can be used to override a system header\n-file, substituting your own version, since these directories are\n-searched before the system header file directories.  However, you should\n-not use this option to add directories that contain vendor-supplied\n-system header files (use @option{-isystem} for that).  If you use more than\n-one @option{-I} option, the directories are scanned in left-to-right\n-order; the standard system directories come after.\n-\n-If a standard system include directory, or a directory specified with\n-@option{-isystem}, is also specified with @option{-I}, the @option{-I}\n-option is ignored.  The directory is still searched but as a\n-system directory at its normal position in the system include chain.\n-This is to ensure that GCC's procedure to fix buggy system headers and\n-the ordering for the @code{include_next} directive are not inadvertently changed.\n-If you really need to change the search order for system directories,\n-use the @option{-nostdinc} and/or @option{-isystem} options.\n+@include cppdiropts.texi\n \n @item -iplugindir=@var{dir}\n @opindex iplugindir=\n@@ -11739,13 +11738,6 @@ by @option{-fplugin=@var{name}} instead of\n @option{-fplugin=@var{path}/@var{name}.so}.  This option is not meant\n to be used by the user, but only passed by the driver.\n \n-@item -iquote@var{dir}\n-@opindex iquote\n-Add the directory @var{dir} to the head of the list of directories to\n-be searched for header files only for the case of @code{#include\n-\"@var{file}\"}; they are not searched for @code{#include <@var{file}>},\n-otherwise just like @option{-I}.\n-\n @item -L@var{dir}\n @opindex L\n Add directory @var{dir} to the list of directories to be searched\n@@ -11826,31 +11818,6 @@ headers may for example be found in\n @file{@var{dir}/usr/include}.  This option disables the addition of\n such a suffix.\n \n-@item -I-\n-@opindex I-\n-This option has been deprecated.  Please use @option{-iquote} instead for\n-@option{-I} directories before the @option{-I-} and remove the @option{-I-}\n-option.\n-Any directories you specify with @option{-I} options before the @option{-I-}\n-option are searched only for the case of @code{#include \"@var{file}\"};\n-they are not searched for @code{#include <@var{file}>}.\n-\n-If additional directories are specified with @option{-I} options after\n-the @option{-I-} option, these directories are searched for all @code{#include}\n-directives.  (Ordinarily @emph{all} @option{-I} directories are used\n-this way.)\n-\n-In addition, the @option{-I-} option inhibits the use of the current\n-directory (where the current input file came from) as the first search\n-directory for @code{#include \"@var{file}\"}.  There is no way to\n-override this effect of @option{-I-}.  With @option{-I.} you can specify\n-searching the directory that is current when the compiler is\n-invoked.  That is not exactly the same as what the preprocessor does\n-by default, but it is often satisfactory.\n-\n-@option{-I-} does not inhibit the use of the standard system directories\n-for header files.  Thus, @option{-I-} and @option{-nostdinc} are\n-independent.\n @end table\n \n @node Code Gen Options"}]}