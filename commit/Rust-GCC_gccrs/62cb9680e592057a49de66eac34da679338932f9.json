{"sha": "62cb9680e592057a49de66eac34da679338932f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjYjk2ODBlNTkyMDU3YTQ5ZGU2NmVhYzM0ZGE2NzkzMzg5MzJmOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-17T12:28:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-17T12:28:48Z"}, "message": "shrink-wrap: Don't put on incoming EDGE_CROSSING [PR98289]\n\nAs mentioned in the PR, shrink-wrapping disqualifies for prologue\nplacement basic blocks that have EDGE_CROSSING incoming edge.\nI don't see why that is necessary, those edges seem to be redirected\njust fine, both on x86_64 and powerpc64.  In the former case, they\nare usually conditional jumps that patch_jump_insn can handle just fine,\nafter all, they were previously crossing and will be crossing after\nthe redirection too, just to a different label.  And in the powerpc64\ncase, it is a simple_jump instead that again seems to be handled by\npatch_jump_insn just fine.\nSure, redirecting an edge that was previously not crossing to be crossing or\nvice versa can fail, but that is not what shrink-wrapping needs.\nAlso tested in GCC 8 with this patch and don't see ICEs there either\n(though, of course, I'm not suggesting we should backport this to release\nbranches).\nThe old ICEs could have been fixed by PR87475 fix or some other one\nyears ago.\n\n2020-12-17  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/98289\n\t* shrink-wrap.c (can_get_prologue): Don't punt on EDGE_CROSSING\n\tincoming edges.\n\n\t* gcc.target/i386/pr98289.c: New test.\n\t* gcc.dg/torture/pr98289.c: New test.", "tree": {"sha": "b4be29eb7e3bfb99bb0a840e0f0d5be0632894d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4be29eb7e3bfb99bb0a840e0f0d5be0632894d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62cb9680e592057a49de66eac34da679338932f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cb9680e592057a49de66eac34da679338932f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62cb9680e592057a49de66eac34da679338932f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cb9680e592057a49de66eac34da679338932f9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a6926635c36e0ef2598b5399afdbfc2dbd4bf1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6926635c36e0ef2598b5399afdbfc2dbd4bf1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6926635c36e0ef2598b5399afdbfc2dbd4bf1f"}], "stats": {"total": 108, "additions": 107, "deletions": 1}, "files": [{"sha": "4bb63e9b5d838174e96888163339d5970935e5be", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62cb9680e592057a49de66eac34da679338932f9/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62cb9680e592057a49de66eac34da679338932f9/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=62cb9680e592057a49de66eac34da679338932f9", "patch": "@@ -494,7 +494,7 @@ can_get_prologue (basic_block pro, HARD_REG_SET prologue_clobbered)\n   edge e;\n   edge_iterator ei;\n   FOR_EACH_EDGE (e, ei, pro->preds)\n-    if (e->flags & (EDGE_COMPLEX | EDGE_CROSSING)\n+    if (e->flags & EDGE_COMPLEX\n \t&& !dominated_by_p (CDI_DOMINATORS, e->src, pro))\n       return false;\n "}, {"sha": "07094a1a08cea8479d19e211034b2ca4fa496826", "filename": "gcc/testsuite/gcc.dg/torture/pr98289.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62cb9680e592057a49de66eac34da679338932f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98289.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62cb9680e592057a49de66eac34da679338932f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98289.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98289.c?ref=62cb9680e592057a49de66eac34da679338932f9", "patch": "@@ -0,0 +1,52 @@\n+/* PR rtl-optimization/98289 */\n+/* { dg-do compile { target freorder } } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition\" } */\n+\n+int bar (void) __attribute__((cold));\n+\n+void\n+foo (int x)\n+{\n+  if (x)\n+    __builtin_abort ();\n+}\n+\n+void\n+baz (int x)\n+{\n+  if (__builtin_expect (x, 0))\n+    {\n+      bar ();\n+      bar ();\n+      bar ();\n+    }\n+}\n+\n+void\n+qux (int x, int y, int z, int w)\n+{\n+  if (x || y || z || w)\n+    __builtin_abort ();\n+}\n+\n+int\n+corge (int x, int y, int z, int w, int u)\n+{\n+  if (__builtin_expect (x, 0))\n+    goto lab;\n+  u++;\n+  if (__builtin_expect (y, 0))\n+    goto lab;\n+  u *= 2;\n+  if (__builtin_expect (z, 0))\n+    goto lab;\n+  u |= 42;\n+  if (__builtin_expect (w, 0))\n+    {\n+      lab:;\n+      bar ();\n+      bar ();\n+      if (bar () > 32) goto lab;\n+    }\n+  return u;\n+}"}, {"sha": "9c620d4016448bee7e5b2831049cc1e0333377a9", "filename": "gcc/testsuite/gcc.target/i386/pr98289.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62cb9680e592057a49de66eac34da679338932f9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98289.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62cb9680e592057a49de66eac34da679338932f9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98289.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98289.c?ref=62cb9680e592057a49de66eac34da679338932f9", "patch": "@@ -0,0 +1,54 @@\n+/* PR rtl-optimization/98289 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-require-effective-target freorder } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition -fdump-rtl-pro_and_epilogue-details\" } */\n+/* { dg-final { scan-rtl-dump-times \"Performing shrink-wrapping\" 4 \"pro_and_epilogue\" } } */\n+\n+int bar (void) __attribute__((cold));\n+\n+void\n+foo (int x)\n+{\n+  if (x)\n+    __builtin_abort ();\n+}\n+\n+void\n+baz (int x)\n+{\n+  if (__builtin_expect (x, 0))\n+    {\n+      bar ();\n+      bar ();\n+      bar ();\n+    }\n+}\n+\n+void\n+qux (int x, int y, int z, int w)\n+{\n+  if (x || y || z || w)\n+    __builtin_abort ();\n+}\n+\n+int\n+corge (int x, int y, int z, int w, int u)\n+{\n+  if (__builtin_expect (x, 0))\n+    goto lab;\n+  u++;\n+  if (__builtin_expect (y, 0))\n+    goto lab;\n+  u *= 2;\n+  if (__builtin_expect (z, 0))\n+    goto lab;\n+  u |= 42;\n+  if (__builtin_expect (w, 0))\n+    {\n+      lab:;\n+      bar ();\n+      bar ();\n+      if (bar () > 32) goto lab;\n+    }\n+  return u;\n+}"}]}