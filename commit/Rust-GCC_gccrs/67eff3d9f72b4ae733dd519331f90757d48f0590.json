{"sha": "67eff3d9f72b4ae733dd519331f90757d48f0590", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlZmYzZDlmNzJiNGFlNzMzZGQ1MTkzMzFmOTA3NTdkNDhmMDU5MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T23:19:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T23:19:43Z"}, "message": "Don't crash on calling new with an erroneous type.\n\nFrom-SVN: r168144", "tree": {"sha": "ae950f2052597a55ad479b1e12ca5a1bd9817ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae950f2052597a55ad479b1e12ca5a1bd9817ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67eff3d9f72b4ae733dd519331f90757d48f0590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67eff3d9f72b4ae733dd519331f90757d48f0590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67eff3d9f72b4ae733dd519331f90757d48f0590", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67eff3d9f72b4ae733dd519331f90757d48f0590/comments", "author": null, "committer": null, "parents": [{"sha": "9ff48ac359242322c5dca42ea9d854422360a9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ff48ac359242322c5dca42ea9d854422360a9ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ff48ac359242322c5dca42ea9d854422360a9ce"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "faea908a3bbf9528855790565cddaad8fc3551f0", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eff3d9f72b4ae733dd519331f90757d48f0590/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eff3d9f72b4ae733dd519331f90757d48f0590/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=67eff3d9f72b4ae733dd519331f90757d48f0590", "patch": "@@ -10242,9 +10242,13 @@ tree\n Allocation_expression::do_get_tree(Translate_context* context)\n {\n   tree type_tree = this->type_->get_tree(context->gogo());\n+  if (type_tree == error_mark_node)\n+    return error_mark_node;\n   tree size_tree = TYPE_SIZE_UNIT(type_tree);\n   tree space = context->gogo()->allocate_memory(this->type_, size_tree,\n \t\t\t\t\t\tthis->location());\n+  if (space == error_mark_node)\n+    return error_mark_node;\n   return fold_convert(build_pointer_type(type_tree), space);\n }\n "}]}