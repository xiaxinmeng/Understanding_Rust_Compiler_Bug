{"sha": "a005570e2ca18626a11212dc55d9942f95eaccac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwNTU3MGUyY2ExODYyNmExMTIxMmRjNTVkOTk0MmY5NWVhY2NhYw==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozefl.gcc@gmail.com", "date": "2018-02-14T07:21:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-02-14T07:21:11Z"}, "message": "re PR target/79242 (ICE in simplify_subreg, at simplify-rtx.c:6029)\n\n2018-02-14  Jozef Lawrynowicz <jozefl.gcc@gmail.com>\n\n\tPR target/79242\n\t* machmode.def: Define a complex mode for PARTIAL_INT.\n\t* genmodes.c (complex_class): Return MODE_COMPLEX_INT for\n\tMODE_PARTIAL_INT.\n\t* doc/rtl.texi: Document CSPImode.\n\t* config/msp430/msp430.c (msp430_hard_regno_nregs): Add CPSImode\n\thandling.\n\t(msp430_hard_regno_nregs_with_padding): Likewise.\n\n\tPR target/79242\n\t* gcc.target/msp430/pr79242.c: New test.\n\nFrom-SVN: r257653", "tree": {"sha": "b4330c40114871bc38e72839f7c5fd1fb9f22e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4330c40114871bc38e72839f7c5fd1fb9f22e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a005570e2ca18626a11212dc55d9942f95eaccac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a005570e2ca18626a11212dc55d9942f95eaccac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a005570e2ca18626a11212dc55d9942f95eaccac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a005570e2ca18626a11212dc55d9942f95eaccac/comments", "author": null, "committer": null, "parents": [{"sha": "3f5ddefdaaa239e5e274c0460b6e420840fc9bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5ddefdaaa239e5e274c0460b6e420840fc9bdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5ddefdaaa239e5e274c0460b6e420840fc9bdb"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "bcaf137e461e07690903301afc65e9c5dc310c9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -1,3 +1,14 @@\n+2018-02-14  Jozef Lawrynowicz <jozefl.gcc@gmail.com>\n+\n+\tPR target/79242\n+\t* machmode.def: Define a complex mode for PARTIAL_INT.\n+\t* genmodes.c (complex_class): Return MODE_COMPLEX_INT for\n+\tMODE_PARTIAL_INT.\n+\t* doc/rtl.texi: Document CSPImode.\n+\t* config/msp430/msp430.c (msp430_hard_regno_nregs): Add CPSImode\n+\thandling.\n+\t(msp430_hard_regno_nregs_with_padding): Likewise.\n+\n 2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/84279"}, {"sha": "a8fed123f7a7fae75d9c61e29fe30f6f78906d72", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -914,6 +914,8 @@ msp430_hard_regno_nregs (unsigned int, machine_mode mode)\n {\n   if (mode == PSImode && msp430x)\n     return 1;\n+  if (mode == CPSImode && msp430x)\n+    return 2;\n   return ((GET_MODE_SIZE (mode) + UNITS_PER_WORD - 1)\n \t  / UNITS_PER_WORD);\n }\n@@ -936,6 +938,8 @@ msp430_hard_regno_nregs_with_padding (int regno ATTRIBUTE_UNUSED,\n {\n   if (mode == PSImode)\n     return 2;\n+  if (mode == CPSImode)\n+    return 4;\n   return msp430_hard_regno_nregs (regno, mode);\n }\n "}, {"sha": "b5410f9689d7e966903d16ec869ad9b3c6378c28", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -1303,10 +1303,11 @@ point values.  The floating point values are in @code{QFmode},\n @findex CDImode\n @findex CTImode\n @findex COImode\n-@item CQImode, CHImode, CSImode, CDImode, CTImode, COImode\n+@findex CPSImode\n+@item CQImode, CHImode, CSImode, CDImode, CTImode, COImode, CPSImode\n These modes stand for a complex number represented as a pair of integer\n values.  The integer values are in @code{QImode}, @code{HImode},\n-@code{SImode}, @code{DImode}, @code{TImode}, and @code{OImode},\n+@code{SImode}, @code{DImode}, @code{TImode}, @code{OImode}, and @code{PSImode},\n respectively.\n \n @findex BND32mode"}, {"sha": "af0d280e208055dc8088fb4b8394e49998092cc1", "filename": "gcc/genmodes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fgenmodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fgenmodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmodes.c?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -119,6 +119,7 @@ complex_class (enum mode_class c)\n   switch (c)\n     {\n     case MODE_INT: return MODE_COMPLEX_INT;\n+    case MODE_PARTIAL_INT: return MODE_COMPLEX_INT;\n     case MODE_FLOAT: return MODE_COMPLEX_FLOAT;\n     default:\n       error (\"no complex class for class %s\", mode_class_names[c]);"}, {"sha": "9505cc3e6df8a37568d0974eb6c29fbb77939f7e", "filename": "gcc/machmode.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fmachmode.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Fmachmode.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.def?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -260,6 +260,7 @@ UACCUM_MODE (UTA, 16, 64, 64); /* 64.64 */\n \n /* Complex modes.  */\n COMPLEX_MODES (INT);\n+COMPLEX_MODES (PARTIAL_INT);\n COMPLEX_MODES (FLOAT);\n \n /* Decimal floating point modes.  */"}, {"sha": "a8dc606ad358b692c202faa9ada7d435fc63801b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Jozef Lawrynowicz <jozefl.gcc@gmail.com>\n+\n+\tPR target/79242\n+\t* gcc.target/msp430/pr79242.c: New test.\n+\n 2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/84372"}, {"sha": "d7ff8d38a3fc9e7e643501e3a028286162ae4427", "filename": "gcc/testsuite/gcc.target/msp430/pr79242.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr79242.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a005570e2ca18626a11212dc55d9942f95eaccac/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr79242.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr79242.c?ref=a005570e2ca18626a11212dc55d9942f95eaccac", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { \"*-*-*\" } { \"-mcpu=msp430\" \"-msmall\" } { \"\" } } */\n+/* { dg-options \"-mcpu=msp430x\" } */\n+\n+typedef _Complex __int20 C;\n+\n+C\n+foo (C x, C y)\n+{\n+  return x + y;\n+}"}]}