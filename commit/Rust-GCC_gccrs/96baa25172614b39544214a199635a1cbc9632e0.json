{"sha": "96baa25172614b39544214a199635a1cbc9632e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiYWEyNTE3MjYxNGIzOTU0NDIxNGExOTk2MzVhMWNiYzk2MzJlMA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-06-04T15:50:24Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-04T15:50:24Z"}, "message": "ffi.h.in: Change void (*)() to void (*)(void).\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* include/ffi.h.in: Change void (*)() to void (*)(void).\n\t* src/x86/ffi.c: Likewise.\n\nFrom-SVN: r148173", "tree": {"sha": "b8834c17e7b79b7960b9b74c1cef37451b8fcdf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8834c17e7b79b7960b9b74c1cef37451b8fcdf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96baa25172614b39544214a199635a1cbc9632e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96baa25172614b39544214a199635a1cbc9632e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96baa25172614b39544214a199635a1cbc9632e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96baa25172614b39544214a199635a1cbc9632e0/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7446546ab02823b356570bf5b4280375fd646f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7446546ab02823b356570bf5b4280375fd646f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7446546ab02823b356570bf5b4280375fd646f99"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "0b26cf52966c4e616d7359a879e5cb03fc1d77cc", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96baa25172614b39544214a199635a1cbc9632e0/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96baa25172614b39544214a199635a1cbc9632e0/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=96baa25172614b39544214a199635a1cbc9632e0", "patch": "@@ -1,3 +1,8 @@\n+2009-06-04  Andrew Haley  <aph@redhat.com>\n+\n+\t* include/ffi.h.in: Change void (*)() to void (*)(void).\n+\t* src/x86/ffi.c: Likewise.\n+\n 2009-06-04  Andrew Haley  <aph@redhat.com>\n \n \t* src/powerpc/ppc_closure.S: Insert licence header."}, {"sha": "ea45f954bf05c4b76ecc3fa4ee20b87dd0493d4b", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96baa25172614b39544214a199635a1cbc9632e0/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96baa25172614b39544214a199635a1cbc9632e0/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=96baa25172614b39544214a199635a1cbc9632e0", "patch": "@@ -222,7 +222,7 @@ typedef ffi_raw ffi_java_raw;\n \n \n void ffi_raw_call (ffi_cif *cif,\n-\t\t   void (*fn)(),\n+\t\t   void (*fn)(void),\n \t\t   void *rvalue,\n \t\t   ffi_raw *avalue);\n \n@@ -235,7 +235,7 @@ size_t ffi_raw_size (ffi_cif *cif);\n /* longs and doubles are followed by an empty 64-bit word.\t\t*/\n \n void ffi_java_raw_call (ffi_cif *cif,\n-\t\t\tvoid (*fn)(),\n+\t\t\tvoid (*fn)(void),\n \t\t\tvoid *rvalue,\n \t\t\tffi_java_raw *avalue);\n \n@@ -349,7 +349,7 @@ ffi_status ffi_prep_cif(ffi_cif *cif,\n \t\t\tffi_type **atypes);\n \n void ffi_call(ffi_cif *cif,\n-\t      void (*fn)(),\n+\t      void (*fn)(void),\n \t      void *rvalue,\n \t      void **avalue);\n "}, {"sha": "2bca56e5ccb078cf281a80d597b6c60a1ca6d5d0", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96baa25172614b39544214a199635a1cbc9632e0/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96baa25172614b39544214a199635a1cbc9632e0/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=96baa25172614b39544214a199635a1cbc9632e0", "patch": "@@ -180,15 +180,15 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n }\n \n extern void ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, unsigned *, void (*fn)());\n+\t\t\t  unsigned, unsigned, unsigned *, void (*fn)(void));\n \n #ifdef X86_WIN32\n extern void ffi_call_STDCALL(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, unsigned *, void (*fn)());\n+\t\t\t  unsigned, unsigned, unsigned *, void (*fn)(void));\n \n #endif /* X86_WIN32 */\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n \n@@ -391,16 +391,16 @@ ffi_prep_args_raw(char *stack, extended_cif *ecif)\n \n extern void\n ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *, unsigned, \n-\t      unsigned, unsigned *, void (*fn)());\n+\t      unsigned, unsigned *, void (*fn)(void));\n \n #ifdef X86_WIN32\n extern void\n ffi_call_STDCALL(void (*)(char *, extended_cif *), extended_cif *, unsigned,\n-\t\t unsigned, unsigned *, void (*fn)());\n+\t\t unsigned, unsigned *, void (*fn)(void));\n #endif /* X86_WIN32 */\n \n void\n-ffi_raw_call(ffi_cif *cif, void (*fn)(), void *rvalue, ffi_raw *fake_avalue)\n+ffi_raw_call(ffi_cif *cif, void (*fn)(void), void *rvalue, ffi_raw *fake_avalue)\n {\n   extended_cif ecif;\n   void **avalue = (void **)fake_avalue;"}]}