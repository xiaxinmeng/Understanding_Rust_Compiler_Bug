{"sha": "11cbea852b0ae2b0f17a9caeaf6344d689231c2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFjYmVhODUyYjBhZTJiMGYxN2E5Y2FlYWY2MzQ0ZDY4OTIzMWMyZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-01-13T13:13:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-01-13T13:18:23Z"}, "message": "c++: Fix cp_build_function_call_vec [PR 98626]\n\nI misunderstood the cp_build_function_call_vec API, thinking a NULL\nvector was an acceptable way of passing no arguments.  You need to\npass a vector of no elements.\n\n\tPR c++/98626\n\tgcc/cp/\n\t* module.cc (module_add_import_initializers):  Pass a\n\tzero-element argument vector.", "tree": {"sha": "2d1d4c21ed61c7a24060c4efbbc7bb2f87aa1823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d1d4c21ed61c7a24060c4efbbc7bb2f87aa1823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11cbea852b0ae2b0f17a9caeaf6344d689231c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11cbea852b0ae2b0f17a9caeaf6344d689231c2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11cbea852b0ae2b0f17a9caeaf6344d689231c2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11cbea852b0ae2b0f17a9caeaf6344d689231c2f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "264a1269b44ccd4e5c37307d49461dd4ff52457c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264a1269b44ccd4e5c37307d49461dd4ff52457c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264a1269b44ccd4e5c37307d49461dd4ff52457c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1fd0bcfe3eb5ec37f97be0b58a675c09eef4392c", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11cbea852b0ae2b0f17a9caeaf6344d689231c2f/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11cbea852b0ae2b0f17a9caeaf6344d689231c2f/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=11cbea852b0ae2b0f17a9caeaf6344d689231c2f", "patch": "@@ -18977,8 +18977,8 @@ module_add_import_initializers ()\n   if (modules)\n     {\n       tree fntype = build_function_type (void_type_node, void_list_node);\n-      vec<tree, va_gc> *args = NULL;\n-      \n+      releasing_vec args;  // There are no args\n+\n       for (unsigned ix = modules->length (); --ix;)\n \t{\n \t  module_state *import = (*modules)[ix];"}]}