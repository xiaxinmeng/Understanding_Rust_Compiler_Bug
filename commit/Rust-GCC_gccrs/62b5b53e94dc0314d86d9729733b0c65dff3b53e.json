{"sha": "62b5b53e94dc0314d86d9729733b0c65dff3b53e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiNWI1M2U5NGRjMDMxNGQ4NmQ5NzI5NzMzYjBjNjVkZmYzYjUzZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T09:51:32Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T09:51:32Z"}, "message": "Prepare git_update_version.py for real usage.\n\n\t* gcc-changelog/git_update_version.py: Prepare the script, the\n\tonly missing piece is pushing of the updated branches.", "tree": {"sha": "84f255b5025524d3f96d783d23ba6e69b3f5b202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f255b5025524d3f96d783d23ba6e69b3f5b202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b5b53e94dc0314d86d9729733b0c65dff3b53e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7GTyQACgkQTcGC3A+n\nN4WovwgAsU3/mGeM5AARiBKk05qYqQaNzfR/Hv91Z8ONENz7aaXzcJhm7nfs9uJ5\nWeCt3jHAUvphJ363huAw1KnwwXrD60bUQ5KMVCGRIJhi4rOYq9NV4GgqjcVWXdG2\nasXbFeTkTrNtqltq/A0NJKbaoHLCk/ZDQedsEySEi7p5n1YNBPmtUHBLgign9QEE\nBhZJiFDtv+JBf1kg7cMJz+kW3XJv0G6E0xMZ2g5TPCaVyGmahV0348MiiyjgLX2h\na9FDkPKHRmLMhZfmBtc8EeW4GrtqvCcgw9PIh8sofowZBAL1HL4Fn2FSDi915WnG\nJTBVV15KPkvd/njIIiCD4xlJcIy61w==\n=wu+H\n-----END PGP SIGNATURE-----", "payload": "tree 84f255b5025524d3f96d783d23ba6e69b3f5b202\nparent 9722b1399a555e697538aa9b0daec77127596dea\nauthor Martin Liska <mliska@suse.cz> 1590054692 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590054692 +0200\n\nPrepare git_update_version.py for real usage.\n\n\t* gcc-changelog/git_update_version.py: Prepare the script, the\n\tonly missing piece is pushing of the updated branches.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b5b53e94dc0314d86d9729733b0c65dff3b53e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b5b53e94dc0314d86d9729733b0c65dff3b53e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b5b53e94dc0314d86d9729733b0c65dff3b53e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9722b1399a555e697538aa9b0daec77127596dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9722b1399a555e697538aa9b0daec77127596dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9722b1399a555e697538aa9b0daec77127596dea"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "51541f141768f735c0e32b882ca69e6b4acff35c", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b5b53e94dc0314d86d9729733b0c65dff3b53e/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b5b53e94dc0314d86d9729733b0c65dff3b53e/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=62b5b53e94dc0314d86d9729733b0c65dff3b53e", "patch": "@@ -1,3 +1,8 @@\n+2020-05-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_update_version.py: Prepare the script, the\n+\tonly missing piece is pushing of the updated branches.\n+\n 2020-05-21  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Support DR entries/"}, {"sha": "ee3989beb278a9def4c86f73025bedfb017706d5", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b5b53e94dc0314d86d9729733b0c65dff3b53e/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b5b53e94dc0314d86d9729733b0c65dff3b53e/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=62b5b53e94dc0314d86d9729733b0c65dff3b53e", "patch": "@@ -24,8 +24,7 @@\n \n from git_repository import parse_git_revisions\n \n-# TODO: remove sparta suffix\n-current_timestamp = datetime.datetime.now().strftime('%Y%m%d sparta\\n')\n+current_timestamp = datetime.datetime.now().strftime('%Y%m%d\\n')\n \n \n def read_timestamp(path):\n@@ -36,11 +35,9 @@ def prepend_to_changelog_files(repo, folder, git_commit):\n     if not git_commit.success:\n         for error in git_commit.errors:\n             print(error)\n-        # TODO: add error message\n-        return\n+        raise AssertionError()\n     for entry, output in git_commit.to_changelog_entries(use_commit_ts=True):\n-        # TODO\n-        full_path = os.path.join(folder, entry, 'ChangeLog.test')\n+        full_path = os.path.join(folder, entry, 'ChangeLog')\n         print('writting to %s' % full_path)\n         if os.path.exists(full_path):\n             content = open(full_path).read()\n@@ -73,9 +70,10 @@ def prepend_to_changelog_files(repo, folder, git_commit):\n             branch = repo.branches[name]\n         else:\n             branch = repo.create_head(name, ref).set_tracking_branch(ref)\n+        print('=== Working on: %s ===' % branch, flush=True)\n         origin.pull(rebase=True)\n         branch.checkout()\n-        print('=== Working on: %s ===' % branch)\n+        print('branch pulled and checked out')\n         assert not repo.index.diff(None)\n         commit = branch.commit\n         commit_count = 1\n@@ -90,9 +88,8 @@ def prepend_to_changelog_files(repo, folder, git_commit):\n         datestamp_path = os.path.join(args.git_path, 'gcc/DATESTAMP')\n         if read_timestamp(datestamp_path) != current_timestamp:\n             print('DATESTAMP will be changed:')\n-            # TODO: set strict=True after testing period\n             commits = parse_git_revisions(args.git_path, '%s..HEAD'\n-                                          % commit.hexsha, strict=False)\n+                                          % commit.hexsha)\n             for git_commit in reversed(commits):\n                 prepend_to_changelog_files(repo, args.git_path, git_commit)\n             # update timestamp\n@@ -101,5 +98,7 @@ def prepend_to_changelog_files(repo, folder, git_commit):\n             repo.git.add(datestamp_path)\n             repo.index.commit('Daily bump.')\n             # TODO: push the repository\n+            # repo.git.push('origin', branch)\n         else:\n             print('DATESTAMP unchanged')\n+        print('branch is done\\n', flush=True)"}]}