{"sha": "785b49434d27377208f6b058e589507cd0feadb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1YjQ5NDM0ZDI3Mzc3MjA4ZjZiMDU4ZTU4OTUwN2NkMGZlYWRiMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-18T15:28:57Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-18T15:31:55Z"}, "message": "c++: Fix windows binary files [PR 98362]\n\nWindows has unique and special needs for open(2).\n\n\tgcc/cp/\n\t* module.cc (O_CLOEXEC, O_BINARY): Add window's support.\n\t(elf_in::defrost, module_state::do_import)\n\t(finish_module_processing): Use O_BINARY.", "tree": {"sha": "f6739b919d46ef139c4b9760847f79bbf2c2b914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6739b919d46ef139c4b9760847f79bbf2c2b914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/785b49434d27377208f6b058e589507cd0feadb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785b49434d27377208f6b058e589507cd0feadb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/785b49434d27377208f6b058e589507cd0feadb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785b49434d27377208f6b058e589507cd0feadb3/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce8dcc9105cbd4043d575d8b2c91309a423951a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8dcc9105cbd4043d575d8b2c91309a423951a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce8dcc9105cbd4043d575d8b2c91309a423951a9"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "fc918d296a21f7f7ad773f4f4a6380eb6edfb8e3", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785b49434d27377208f6b058e589507cd0feadb3/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785b49434d27377208f6b058e589507cd0feadb3/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=785b49434d27377208f6b058e589507cd0feadb3", "patch": "@@ -252,9 +252,23 @@ Classes used:\n #endif\n #endif\n \n-#if !HOST_HAS_O_CLOEXEC\n+/* Some open(2) flag differences, what a colourful world it is!  */\n+#if defined (O_CLOEXEC)\n+// OK\n+#elif defined (_O_NOINHERIT)\n+/* Windows' _O_NOINHERIT matches O_CLOEXEC flag */\n+#define O_CLOEXEC _O_NOINHERIT\n+#else\n #define O_CLOEXEC 0\n #endif\n+#if defined (O_BINARY)\n+// Ok?\n+#elif defined (_O_BINARY)\n+/* Windows' open(2) call defaults to text!  */\n+#define O_BINARY _O_BINARY\n+#else\n+#define O_BINARY 0\n+#endif\n \n static inline cpp_hashnode *cpp_node (tree id)\n {\n@@ -1596,7 +1610,7 @@ elf_in::defrost (const char *name)\n   gcc_checking_assert (is_frozen ());\n   struct stat stat;\n \n-  fd = open (name, O_RDONLY | O_CLOEXEC);\n+  fd = open (name, O_RDONLY | O_CLOEXEC | O_BINARY);\n   if (fd < 0 || fstat (fd, &stat) < 0)\n     set_error (errno);\n   else\n@@ -18568,7 +18582,7 @@ module_state::do_import (cpp_reader *reader, bool outermost)\n     {\n       const char *file = maybe_add_cmi_prefix (filename);\n       dump () && dump (\"CMI is %s\", file);\n-      fd = open (file, O_RDONLY | O_CLOEXEC);\n+      fd = open (file, O_RDONLY | O_CLOEXEC | O_BINARY);\n       e = errno;\n     }\n \n@@ -19704,7 +19718,8 @@ finish_module_processing (cpp_reader *reader)\n \t  if (!errorcount)\n \t    for (unsigned again = 2; ; again--)\n \t      {\n-\t\tfd = open (tmp_name, O_RDWR | O_CREAT | O_TRUNC | O_CLOEXEC,\n+\t\tfd = open (tmp_name,\n+\t\t\t   O_RDWR | O_CREAT | O_TRUNC | O_CLOEXEC | O_BINARY,\n \t\t\t   S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH);\n \t\te = errno;\n \t\tif (fd >= 0 || !again || e != ENOENT)"}]}