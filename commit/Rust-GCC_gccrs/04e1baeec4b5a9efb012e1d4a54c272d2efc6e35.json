{"sha": "04e1baeec4b5a9efb012e1d4a54c272d2efc6e35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRlMWJhZWVjNGI1YTllZmIwMTJlMWQ0YTU0YzI3MmQyZWZjNmUzNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-17T21:02:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-17T21:02:18Z"}, "message": "pa.md (movqi, [...]): Remove support for GR<->FP copies.\n\n\t* pa.md (movqi, movhi, movsi, movdi, movsf, movdf): Remove support\n\tfor GR<->FP copies.\n\t(fix_truncsfsi2, fix_truncdfsi2): Likewise.\n\nFrom-SVN: r3768", "tree": {"sha": "b17463d085eb3807f78841296751b927ce7477b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17463d085eb3807f78841296751b927ce7477b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35/comments", "author": null, "committer": null, "parents": [{"sha": "c0c29fa18d9277bfddf00e5c0c6da539c5c3db73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c29fa18d9277bfddf00e5c0c6da539c5c3db73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c29fa18d9277bfddf00e5c0c6da539c5c3db73"}], "stats": {"total": 86, "additions": 34, "deletions": 52}, "files": [{"sha": "5657887178b1b7cc7e440037a5618a351a98d315", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 34, "deletions": 52, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04e1baeec4b5a9efb012e1d4a54c272d2efc6e35/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=04e1baeec4b5a9efb012e1d4a54c272d2efc6e35", "patch": "@@ -878,8 +878,8 @@\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!*r,!fx,!fx\")\n-\t(match_operand:SI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fx,!*r,!fxM\"))]\n+  [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n+\t(match_operand:SI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fxM\"))]\n   \"register_operand (operands[0], SImode)\n    || reg_or_0_operand (operands[1], SImode)\"\n   \"@\n@@ -890,11 +890,9 @@\n    ldw%M1 %1,%0\n    stw%M0 %r1,%0\n    mtsar %r1\n-   fstws %1,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   stw %1,-16(0,%%r30)\\;fldws -16(0,%%r30),%0\n    fcpy,sgl %r1,%0\"\n-  [(set_attr \"type\" \"move,move,move,move,load,store,move,load,fpload,fpalu\")\n-   (set_attr \"length\" \"1,1,1,1,1,1,1,2,2,1\")])\n+  [(set_attr \"type\" \"move,move,move,move,load,store,move,fpalu\")\n+   (set_attr \"length\" \"1,1,1,1,1,1,1,1\")])\n \n ;; Load indexed.  We don't use unscaled modes since they can't be used\n ;; unless we can tell which of the registers is the base and which is\n@@ -1069,8 +1067,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!*r,!fx,!fx\")\n-\t(match_operand:HI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fx,!*r,!fxM\"))]\n+  [(set (match_operand:HI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n+\t(match_operand:HI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fxM\"))]\n   \"register_operand (operands[0], HImode)\n    || reg_or_0_operand (operands[1], HImode)\"\n   \"@\n@@ -1081,11 +1079,9 @@\n    ldh%M1 %1,%0\n    sth%M0 %r1,%0\n    mtsar %r1\n-   fstws %1,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   stw %1,-16(0,%%r30)\\;fldws -16(0,%%r30),%0\n    fcpy,sgl %r1,%0\"\n-  [(set_attr \"type\" \"move,move,move,move,load,store,move,load,fpload,fpalu\")\n-   (set_attr \"length\" \"1,1,1,1,1,1,1,2,2,1\")])\n+  [(set_attr \"type\" \"move,move,move,move,load,store,move,fpalu\")\n+   (set_attr \"length\" \"1,1,1,1,1,1,1,1\")])\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n@@ -1146,8 +1142,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!*r,!fx,!fx\")\n-\t(match_operand:QI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fx,!*r,!fxM\"))]\n+  [(set (match_operand:QI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n+\t(match_operand:QI 1 \"move_operand\" \"rM,J,N,K,Q,rM,rM,!fxM\"))]\n   \"register_operand (operands[0], QImode)\n    || reg_or_0_operand (operands[1], QImode)\"\n   \"@\n@@ -1158,11 +1154,9 @@\n    ldb%M1 %1,%0\n    stb%M0 %r1,%0\n    mtsar %r1\n-   fstws %1,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   stw %1,-16(0,%%r30)\\;fldws -16(0,%%r30),%0\n    fcpy,sgl %r1,%0\"\n-  [(set_attr \"type\" \"move,move,move,move,load,store,move,load,fpload,fpalu\")\n-   (set_attr \"length\" \"1,1,1,1,1,1,1,2,2,1\")])\n+  [(set_attr \"type\" \"move,move,move,move,load,store,move,fpalu\")\n+   (set_attr \"length\" \"1,1,1,1,1,1,1,1\")])\n \n (define_insn \"\"\n   [(set (match_operand:QI 3 \"register_operand\" \"=r\")\n@@ -1261,9 +1255,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=fx,*r,Q,?Q,fx,*&r,?fx,?*r\")\n+\t\t\t  \"=fx,*r,Q,?Q,fx,*&r\")\n \t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fxG,*rG,fx,*r,Q,Q,*r,fx\"))]\n+\t\t\t  \"fxG,*rG,fx,*r,Q,Q\"))]\n   \"register_operand (operands[0], DFmode)\n    || reg_or_0_operand (operands[1], DFmode)\"\n   \"*\n@@ -1273,8 +1267,8 @@\n     return output_fp_move_double (operands);\n   return output_move_double (operands);\n }\"\n-  [(set_attr \"type\" \"fpalu,move,fpstore,store,fpload,load,fpload,load\")\n-   (set_attr \"length\" \"1,2,1,2,1,2,3,3\")])\n+  [(set_attr \"type\" \"fpalu,move,fpstore,store,fpload,load\")\n+   (set_attr \"length\" \"1,2,1,2,1,2\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n@@ -1394,9 +1388,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=r,Q,&r,&r,fx,fx,*r\")\n+\t\t\t  \"=r,Q,&r,&r,fx\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t  \"rM,r,Q,i,*r,fxM,fx\"))]\n+\t\t\t  \"rM,r,Q,i,fxM\"))]\n   \"register_operand (operands[0], DImode)\n    || reg_or_0_operand (operands[1], DImode)\"\n   \"*\n@@ -1406,12 +1400,8 @@\n     return output_fp_move_double (operands);\n   return output_move_double (operands);\n }\"\n-;; Use move in the last type..  This case happens often with xmpyu\n-;; and in nearly all cases we only access the data from the first \n-;; of the two loads generated, and that can't stall on a data conflict\n-;; because of the second load.\n-  [(set_attr \"type\" \"move,store,load,misc,fpload,fpalu,move\")\n-   (set_attr \"length\" \"2,3,3,3,3,1,3\")])\n+  [(set_attr \"type\" \"move,store,load,misc,fpalu\")\n+   (set_attr \"length\" \"2,3,3,3,1\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -1444,22 +1434,20 @@\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=fx,r,*r,fx,fx,r,Q,Q\")\n+\t\t\t  \"=fx,r,fx,r,Q,Q\")\n \t(match_operand:SF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fxG,rG,!fx,!*r,Q,Q,fx,rG\"))]\n+\t\t\t  \"fxG,rG,Q,Q,fx,rG\"))]\n   \"register_operand (operands[0], SFmode)\n    || reg_or_0_operand (operands[1], SFmode)\"\n   \"@\n    fcpy,sgl %r1,%0\n    copy %r1,%0\n-   fstws %1,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   stw %r1,-16(0,%%r30)\\;fldws -16(0,%%r30),%0\n    fldws%F1 %1,%0\n    ldw%M1 %1,%0\n    fstws%F0 %r1,%0\n    stw%M0 %r1,%0\"\n-  [(set_attr \"type\" \"fpalu,move,load,fpload,fpload,load,fpstore,store\")\n-   (set_attr \"length\" \"1,1,2,2,1,1,1,1\")])\n+  [(set_attr \"type\" \"fpalu,move,fpload,load,fpstore,store\")\n+   (set_attr \"length\" \"1,1,1,1,1,1\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n@@ -1642,26 +1630,20 @@\n ;; Truncation is performed as part of the conversion.\n \n (define_insn \"fix_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,fx\")\n-\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"fx,fx\"))))\n-   (clobber (match_scratch:SI 2 \"=&fx,X\"))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=fx\")\n+\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"fx\"))))]\n   \"\"\n-  \"@\n-   fcnvfxt,sgl,sgl %1,%2\\;fstws %2,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   fcnvfxt,sgl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu,fpalu\")\n-   (set_attr \"length\" \"3,1\")])\n+  \"fcnvfxt,sgl,sgl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"1\")])\n \n (define_insn \"fix_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,fx\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"fx,fx\"))))\n-   (clobber (match_scratch:SI 2 \"=&fx,X\"))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=fx\")\n+\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"fx\"))))]\n   \"\"\n-  \"@\n-   fcnvfxt,dbl,sgl %1,%2\\;fstws %2,-16(0,%%r30)\\;ldw -16(0,%%r30),%0\n-   fcnvfxt,dbl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu,fpalu\")\n-   (set_attr \"length\" \"3,1\")])\n+  \"fcnvfxt,dbl,sgl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"1\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=fx\")"}]}