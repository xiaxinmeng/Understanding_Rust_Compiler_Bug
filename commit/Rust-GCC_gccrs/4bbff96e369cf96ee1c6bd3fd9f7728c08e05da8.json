{"sha": "4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiZmY5NmUzNjljZjk2ZWUxYzZiZDNmZDlmNzcyOGMwOGUwNWRhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-01T21:02:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-01T21:02:07Z"}, "message": "re PR c++/49932 ([C++0x] ICE on instantiating decltype(expr)::type with template)\n\n\tPR c++/49932\ngcc/cp/\n\t* mangle.c (write_prefix): Handle decltype.\nlibiberty/\n\t* cp-demangle.c (d_prefix): Handle decltype.\n\nFrom-SVN: r177074", "tree": {"sha": "e2466ac7db646acfd78689bc5c745b698c31ba6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2466ac7db646acfd78689bc5c745b698c31ba6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3748a54ca39e4aa0d38cec50b8e8ee7b7a93df09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3748a54ca39e4aa0d38cec50b8e8ee7b7a93df09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3748a54ca39e4aa0d38cec50b8e8ee7b7a93df09"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "4ce77d41553204c270bfb5877cb55d950a4f16b8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -1,5 +1,8 @@\n 2011-08-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49932\n+\t* mangle.c (write_prefix): Handle decltype.\n+\n \tPR c++/49924\n \t* semantics.c (cxx_eval_vec_init_1): Fix logic.\n "}, {"sha": "eb3f144b561accf6fea70f7f5ec37edd69875b93", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -952,6 +952,7 @@ write_nested_name (const tree decl)\n /* <prefix> ::= <prefix> <unqualified-name>\n \t    ::= <template-param>\n \t    ::= <template-prefix> <template-args>\n+\t    ::= <decltype>\n \t    ::= # empty\n \t    ::= <substitution>  */\n \n@@ -968,6 +969,12 @@ write_prefix (const tree node)\n \n   MANGLE_TRACE_TREE (\"prefix\", node);\n \n+  if (TREE_CODE (node) == DECLTYPE_TYPE)\n+    {\n+      write_type (node);\n+      return;\n+    }\n+\n   if (find_substitution (node))\n     return;\n "}, {"sha": "4ff8a1010d4fced8dc9dcd59d8692544f4bfbdb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -1,5 +1,8 @@\n 2011-08-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49932\n+\t* g++.dg/abi/mangle49.C: New.\n+\n \tPR c++/49924\n \t* g++.dg/cpp0x/constexpr-array4.C: New.\n "}, {"sha": "a258dc2d443214f110b328d85b55989961aaf9b5", "filename": "gcc/testsuite/g++.dg/abi/mangle49.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/49932\n+// { dg-options \"-std=c++0x -fabi-version=0\" }\n+\n+template < typename T >\n+auto\n+f1( T x ) // ICE on here\n+  -> typename decltype( x )::type {}\n+\n+template < typename T >\n+typename decltype( T() )::type\n+f2( T x ) {} // ICE on here\n+\n+struct S { typedef void type; };\n+\n+void g()\n+{\n+  f1( S() );\n+  f2( S() );\n+}\n+\n+// { dg-final { scan-assembler \"_Z2f1I1SENDtfp_E4typeET_\" } }\n+// { dg-final { scan-assembler \"_Z2f2I1SENDTcvT__EE4typeES1_\" } }"}, {"sha": "b88399e9e3670960918bc064698bd41407fe0693", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -1,3 +1,9 @@\n+2011-08-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49932\n+\t* cp-demangle.c (d_prefix): Handle decltype.\n+\t* testsuite/demangle-expected: Test it.\n+\n 2011-07-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/demangle-expected: Remove an extra line."}, {"sha": "d67a9e74e65471b10dd3e6b0414c79f89fbdc8ea", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -1280,6 +1280,7 @@ d_nested_name (struct d_info *di)\n /* <prefix> ::= <prefix> <unqualified-name>\n             ::= <template-prefix> <template-args>\n             ::= <template-param>\n+            ::= <decltype>\n             ::=\n             ::= <substitution>\n \n@@ -1308,10 +1309,19 @@ d_prefix (struct d_info *di)\n \t <template-param> here.  */\n \n       comb_type = DEMANGLE_COMPONENT_QUAL_NAME;\n-      if (IS_DIGIT (peek)\n+      if (peek == 'D')\n+\t{\n+\t  char peek2 = d_peek_next_char (di);\n+\t  if (peek2 == 'T' || peek2 == 't')\n+\t    /* Decltype.  */\n+\t    dc = cplus_demangle_type (di);\n+\t  else\n+\t    /* Destructor name.  */\n+\t    dc = d_unqualified_name (di);\n+\t}\n+      else if (IS_DIGIT (peek)\n \t  || IS_LOWER (peek)\n \t  || peek == 'C'\n-\t  || peek == 'D'\n \t  || peek == 'U'\n \t  || peek == 'L')\n \tdc = d_unqualified_name (di);"}, {"sha": "3737cfd7bdbc5f3390d6e2bc9719ccfeda5b732c", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=4bbff96e369cf96ee1c6bd3fd9f7728c08e05da8", "patch": "@@ -3901,6 +3901,10 @@ java resource java/util/iso4217.properties\n --format=gnu-v3\n _Z3addIidEDTplfp_fp0_ET_T0_\n decltype ({parm#1}+{parm#2}) add<int, double>(int, double)\n+# decltype scope test\n+--format=gnu-v3\n+_Z1fI1SENDtfp_E4typeET_\n+decltype ({parm#1})::type f<S>(S)\n # decltype/fn call test\n --format=gnu-v3\n _Z4add3IidEDTclL_Z1gEfp_fp0_EET_T0_"}]}