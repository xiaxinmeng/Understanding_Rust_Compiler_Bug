{"sha": "8c16199578ee7b0bcc94a807373569055678d042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxNjE5OTU3OGVlN2IwYmNjOTRhODA3MzczNTY5MDU1Njc4ZDA0Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-16T20:51:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-16T20:51:46Z"}, "message": "c-common.def (CASE_LABEL): Remove.\n\n        * c-common.def (CASE_LABEL): Remove.\n        * c-common.c (c_add_case_label): Use CASE_LABEL, not CASE_LABEL_DECL.\n        (match_case_to_enum_1): Likewise.\n        * c-common.h (c_common_stmt_codes): Remove CASE_LABEL.\n        * c-dump.c (c_dump_tree): Likewise.\n        * c-gimplify.c (c_gimplify_stmt): Likewise.\n        * c-pretty-print.c (pp_c_statement): Likewise.\n        * c-semantics.c (build_case_label): Use CASE_LABEL_EXPR.\n        * tree.h (CASE_LOW): Update commentary.\ncp/\n        * parser.c (cp_parser_labeled_statement): Update commentary.\n        * pt.c (tsubst_expr): Use CASE_LABEL_EXPR.\n        * tree.c (mark_local_for_remap_r): Likewise.\n\nFrom-SVN: r83261", "tree": {"sha": "7b0b73a938871fa1fd05c489701fd9f585e29abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0b73a938871fa1fd05c489701fd9f585e29abb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c16199578ee7b0bcc94a807373569055678d042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c16199578ee7b0bcc94a807373569055678d042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c16199578ee7b0bcc94a807373569055678d042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c16199578ee7b0bcc94a807373569055678d042/comments", "author": null, "committer": null, "parents": [{"sha": "e130a54b78b1f9b096a5ab1b98debfb263e16663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e130a54b78b1f9b096a5ab1b98debfb263e16663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e130a54b78b1f9b096a5ab1b98debfb263e16663"}], "stats": {"total": 98, "additions": 32, "deletions": 66}, "files": [{"sha": "02bd3ba8ff6b800172b963f9b9a5ea14102238c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -1,3 +1,15 @@\n+2004-06-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-common.def (CASE_LABEL): Remove.\n+\t* c-common.c (c_add_case_label): Use CASE_LABEL, not CASE_LABEL_DECL.\n+\t(match_case_to_enum_1): Likewise.\n+\t* c-common.h (c_common_stmt_codes): Remove CASE_LABEL.\n+\t* c-dump.c (c_dump_tree): Likewise.\n+\t* c-gimplify.c (c_gimplify_stmt): Likewise.\n+\t* c-pretty-print.c (pp_c_statement): Likewise.\n+\t* c-semantics.c (build_case_label): Use CASE_LABEL_EXPR.\n+\t* tree.h (CASE_LOW): Update commentary.\n+\n 2004-06-16  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.def (ASM_STMT): Remove."}, {"sha": "6ef83f04640f6a4caa838d420905c00577a5f2c7", "filename": "gcc/c-common.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -3770,8 +3770,8 @@ case_compare (splay_tree_key k1, splay_tree_key k2)\n    case label was declared using the usual C/C++ syntax, rather than\n    the GNU case range extension.  CASES is a tree containing all the\n    case ranges processed so far; COND is the condition for the\n-   switch-statement itself.  Returns the CASE_LABEL created, or\n-   ERROR_MARK_NODE if no CASE_LABEL is created.  */\n+   switch-statement itself.  Returns the CASE_LABEL_EXPR created, or\n+   ERROR_MARK_NODE if no CASE_LABEL_EXPR is created.  */\n \n tree\n c_add_case_label (splay_tree cases, tree cond, tree low_value,\n@@ -3870,7 +3870,7 @@ c_add_case_label (splay_tree cases, tree cond, tree low_value,\n   /* If there was an overlap, issue an error.  */\n   if (node)\n     {\n-      tree duplicate = CASE_LABEL_DECL ((tree) node->value);\n+      tree duplicate = CASE_LABEL ((tree) node->value);\n \n       if (high_value)\n \t{\n@@ -3935,10 +3935,10 @@ match_case_to_enum_1 (tree key, tree type, tree label)\n \n   if (TYPE_NAME (type) == 0)\n     warning (\"%Jcase value `%s' not in enumerated type\",\n-\t     CASE_LABEL_DECL (label), buf);\n+\t     CASE_LABEL (label), buf);\n   else\n     warning (\"%Jcase value `%s' not in enumerated type `%T'\",\n-\t     CASE_LABEL_DECL (label), buf, type);\n+\t     CASE_LABEL (label), buf, type);\n }\n \n static int"}, {"sha": "0c9b9f0a0b8e78c00f740881d4cc57292eecc106", "filename": "gcc/c-common.def", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.def?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -71,12 +71,6 @@ DEFTREECODE (CONTINUE_STMT, \"continue_stmt\", 'e', 0)\n    SWITCH_COND, SWITCH_BODY and SWITCH_TYPE, respectively.  */\n DEFTREECODE (SWITCH_STMT, \"switch_stmt\", 'e', 3)\n \n-/* Used to represent a CASE_LABEL. The operands are CASE_LOW and\n-   CASE_HIGH, respectively. If CASE_LOW is NULL_TREE, the label is a\n-   'default' label. If CASE_HIGH is NULL_TREE, the label is a normal case\n-   label.  The CASE_LABEL_DECL is a LABEL_DECL for this node.  */\n-DEFTREECODE (CASE_LABEL, \"case_label\", 'e', 3)\n-\n /* A STMT_EXPR represents a statement-expression.  The\n    STMT_EXPR_STMT is the statement given by the expression.  */\n DEFTREECODE (STMT_EXPR, \"stmt_expr\", 'e', 1)"}, {"sha": "740825c21f7d2f1fcdf6e1a1db887f1c576f92bb", "filename": "gcc/c-common.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -958,7 +958,6 @@ extern void finish_file\t(void);\n #define FOR_BODY(NODE)          TREE_OPERAND (FOR_STMT_CHECK (NODE), 3)\n \n #define SWITCH_TYPE(NODE)\tTREE_OPERAND (SWITCH_STMT_CHECK (NODE), 2)\n-#define CASE_LABEL_DECL(NODE)   TREE_OPERAND (CASE_LABEL_CHECK (NODE), 2)\n \n /* COMPOUND_STMT accessor. This gives access to the TREE_LIST of\n    statements associated with a compound statement. The result is the\n@@ -1007,8 +1006,7 @@ enum c_tree_code {\n    CLEANUP_STMT,\tEXPR_STMT,\tCOMPOUND_STMT,\t\\\n    DECL_STMT,\t\tIF_STMT,\tFOR_STMT,\t\\\n    WHILE_STMT,\t\tDO_STMT,\tRETURN_STMT,\t\\\n-   BREAK_STMT,\t\tCONTINUE_STMT,\t\t\t\\\n-   SWITCH_STMT,\t\tCASE_LABEL\n+   BREAK_STMT,\t\tCONTINUE_STMT,\tSWITCH_STMT\n \n /* TRUE if a code represents a statement.  The front end init\n    langhook should take care of initialization of this array.  */"}, {"sha": "9e8280774c2cbb88170661a59d7fde93d21b0974", "filename": "gcc/c-dump.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -69,14 +69,6 @@ c_dump_tree (void *dump_info, tree t)\n       dump_next_stmt (di, t);\n       break;\n \n-    case CASE_LABEL:\n-      /* Note that a case label is not like other statements; there is\n-\t no way to get the line-number of a case label.  */\n-      dump_child (\"low\", CASE_LOW (t));\n-      dump_child (\"high\", CASE_HIGH (t));\n-      dump_next_stmt (di, t);\n-      break;\n-\n     case CLEANUP_STMT:\n       dump_stmt (di, t);\n       dump_child (\"decl\", CLEANUP_DECL (t));"}, {"sha": "2e9b4b92b640096353635d500a63fc134ffeef96", "filename": "gcc/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gimplify.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -264,15 +264,6 @@ c_gimplify_stmt (tree *stmt_p)\n       ret = gimplify_decl_stmt (&stmt);\n       break;\n \n-    case CASE_LABEL:\n-      {\n-\ttree label = create_artificial_label ();\n-\tstmt = build (CASE_LABEL_EXPR, void_type_node,\n-\t\t      CASE_LOW (stmt), CASE_HIGH (stmt), label);\n-\tret = GS_OK;\n-      }\n-      break;\n-\n     case CONTINUE_STMT:\n       stmt = build_bc_goto (bc_continue);\n       ret = GS_OK;"}, {"sha": "a2ef2048874981c08b4b2bb369707ded991ad6eb", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -1907,33 +1907,6 @@ pp_c_statement (c_pretty_printer *pp, tree stmt)\n         pp_c_right_brace (pp);\n         pp_needs_newline (pp) = true;\n       }\n-      break;\n-\n-       /* labeled-statement:\n-             identifier : statement\n-             case constant-expression : statement\n-             default : statement   */\n-    case CASE_LABEL:\n-      if (pp_needs_newline (pp))\n-        pp_newline_and_indent (pp, -3);\n-      else\n-        pp_indentation (pp) -= 3;\n-      if (CASE_LOW (stmt) == NULL_TREE)\n-\tpp_identifier (pp, \"default\");\n-      else\n-\t{\n-\t  pp_c_identifier (pp, \"case\");\n-\t  pp_c_whitespace (pp);\n-\t  pp_conditional_expression (pp, CASE_LOW (stmt));\n-\t  if (CASE_HIGH (stmt))\n-\t    {\n-\t      pp_identifier (pp, \"...\");\n-\t      pp_conditional_expression (pp, CASE_HIGH (stmt));\n-\t    }\n-\t}\n-      pp_colon (pp);\n-      pp_indentation (pp) += 3;\n-      pp_needs_newline (pp) = true;\n       break;\n \n       /* compound-statement:"}, {"sha": "681887f0d02dcdf89ee6668085d26a672363d1a8", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -297,12 +297,12 @@ build_continue_stmt (void)\n   return (build_stmt (CONTINUE_STMT));\n }\n \n-/* Create a CASE_LABEL tree node and return it.  */\n+/* Create a CASE_LABEL_EXPR tree node and return it.  */\n \n tree\n build_case_label (tree low_value, tree high_value, tree label_decl)\n {\n-  return build_stmt (CASE_LABEL, low_value, high_value, label_decl);\n+  return build_stmt (CASE_LABEL_EXPR, low_value, high_value, label_decl);\n }\n \n /* We're about to expand T, a statement.  Set up appropriate context"}, {"sha": "73aec988d993d80d80f04b1206da5bd61eb4d476", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -1,3 +1,9 @@\n+2004-06-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* parser.c (cp_parser_labeled_statement): Update commentary.\n+\t* pt.c (tsubst_expr): Use CASE_LABEL_EXPR.\n+\t* tree.c (mark_local_for_remap_r): Likewise.\n+\n 2004-06-16  Richard Henderson  <rth@redhat.com>\n \n \t* parser.c (cp_parser_asm_definition): Update commentary."}, {"sha": "ced8e6aac80c5c1fcc3569c0b14b74505ed07ff7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -5720,8 +5720,8 @@ cp_parser_statement (cp_parser* parser, tree in_statement_expr)\n    labeled-statement:\n      case constant-expression ... constant-expression : statement\n \n-   Returns the new CASE_LABEL, for a `case' or `default' label.  For\n-   an ordinary label, returns a LABEL_EXPR.  */\n+   Returns the new CASE_LABEL_EXPR, for a `case' or `default' label.\n+   For an ordinary label, returns a LABEL_EXPR.  */\n \n static tree\n cp_parser_labeled_statement (cp_parser* parser, tree in_statement_expr)"}, {"sha": "57fb87156d866e74729f5253652a2cbe69190093", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -7972,7 +7972,7 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n       }\n       break;\n \n-    case CASE_LABEL:\n+    case CASE_LABEL_EXPR:\n       prep_stmt (t);\n       finish_case_label (tsubst_expr (CASE_LOW (t), args, complain, in_decl),\n \t\t\t tsubst_expr (CASE_HIGH (t), args, complain,"}, {"sha": "c06810e0a3e97a7e3fb977fe98213581b2ad69c2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -2221,8 +2221,8 @@ mark_local_for_remap_r (tree* tp,\n   else if (TREE_CODE (t) == TARGET_EXPR\n \t   && nonstatic_local_decl_p (TREE_OPERAND (t, 0)))\n     decl = TREE_OPERAND (t, 0);\n-  else if (TREE_CODE (t) == CASE_LABEL)\n-    decl = CASE_LABEL_DECL (t);\n+  else if (TREE_CODE (t) == CASE_LABEL_EXPR)\n+    decl = CASE_LABEL (t);\n   else\n     decl = NULL_TREE;\n "}, {"sha": "b43899717f0bdfe913a63451e9c4d8d5c7b5203f", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c16199578ee7b0bcc94a807373569055678d042/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=8c16199578ee7b0bcc94a807373569055678d042", "patch": "@@ -1066,7 +1066,7 @@ struct tree_vec GTY(())\n #define SWITCH_BODY(NODE)       TREE_OPERAND ((NODE), 1)\n #define SWITCH_LABELS(NODE)     TREE_OPERAND ((NODE), 2)\n \n-/* CASE_LABEL accessors. These give access to the high and low values\n+/* CASE_LABEL_EXPR accessors. These give access to the high and low values\n    of a case label, respectively.  */\n #define CASE_LOW(NODE)          TREE_OPERAND ((NODE), 0)\n #define CASE_HIGH(NODE)         TREE_OPERAND ((NODE), 1)"}]}