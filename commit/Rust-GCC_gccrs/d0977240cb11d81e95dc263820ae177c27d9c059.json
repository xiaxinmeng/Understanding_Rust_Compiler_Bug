{"sha": "d0977240cb11d81e95dc263820ae177c27d9c059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5NzcyNDBjYjExZDgxZTk1ZGMyNjM4MjBhZTE3N2MyN2Q5YzA1OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-27T23:35:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-27T23:35:23Z"}, "message": "(expand_expr, case LABEL_DECL): Treat inline_function_decl like current_function_decl.\n\n(expand_expr, case LABEL_DECL): Treat inline_function_decl like\ncurrent_function_decl.\n(expand_expr, case SAVE_EXPR): Handle top-level SVAE_EXPR by\nmoving into current function; abort if in incorrect context.\n\nFrom-SVN: r14540", "tree": {"sha": "87b2dc4440427d402a6f48a14b07aa681e2aaf6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b2dc4440427d402a6f48a14b07aa681e2aaf6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0977240cb11d81e95dc263820ae177c27d9c059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0977240cb11d81e95dc263820ae177c27d9c059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0977240cb11d81e95dc263820ae177c27d9c059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0977240cb11d81e95dc263820ae177c27d9c059/comments", "author": null, "committer": null, "parents": [{"sha": "4ac74fb88fb66c14da983ea9599f31b1e15c3fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac74fb88fb66c14da983ea9599f31b1e15c3fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac74fb88fb66c14da983ea9599f31b1e15c3fdf"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "41deddfd2c0c5a0553598e7ac57eb49137a47b73", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0977240cb11d81e95dc263820ae177c27d9c059/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0977240cb11d81e95dc263820ae177c27d9c059/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d0977240cb11d81e95dc263820ae177c27d9c059", "patch": "@@ -4730,7 +4730,8 @@ expand_expr (exp, target, tmode, modifier)\n       {\n \ttree function = decl_function_context (exp);\n \t/* Handle using a label in a containing function.  */\n-\tif (function != current_function_decl && function != 0)\n+\tif (function != current_function_decl\n+\t    && function != inline_function_decl && function != 0)\n \t  {\n \t    struct function *p = find_function_data (function);\n \t    /* Allocate in the memory associated with the function\n@@ -4747,7 +4748,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t\t   label_rtx (exp), forced_labels);\n \ttemp = gen_rtx (MEM, FUNCTION_MODE,\n \t\t\tgen_rtx (LABEL_REF, Pmode, label_rtx (exp)));\n-\tif (function != current_function_decl && function != 0)\n+\tif (function != current_function_decl\n+\t    && function != inline_function_decl && function != 0)\n \t  LABEL_REF_NONLOCAL_P (XEXP (temp, 0)) = 1;\n \treturn temp;\n       }\n@@ -4924,6 +4926,11 @@ expand_expr (exp, target, tmode, modifier)\n     case SAVE_EXPR:\n       context = decl_function_context (exp);\n \n+      /* If this SAVE_EXPR was at global context, assume we are an\n+\t initialization function and move it into our context.  */\n+      if (context == 0)\n+\tSAVE_EXPR_CONTEXT (exp) = current_function_decl;\n+\n       /* We treat inline_function_decl as an alias for the current function\n \t because that is the inline function whose vars, types, etc.\n \t are being merged into the current function.\n@@ -4934,6 +4941,10 @@ expand_expr (exp, target, tmode, modifier)\n       /* If this is non-local, handle it.  */\n       if (context)\n \t{\n+\t  /* The following call just exists to abort if the context is\n+\t     not of a containing function.  */\n+\t  find_function_data (context);\n+\n \t  temp = SAVE_EXPR_RTL (exp);\n \t  if (temp && GET_CODE (temp) == REG)\n \t    {"}]}