{"sha": "da8c1713212772aad1bf1a701bb72c08e105b11e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4YzE3MTMyMTI3NzJhYWQxYmYxYTcwMWJiNzJjMDhlMTA1YjExZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-31T20:00:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-31T20:00:12Z"}, "message": "(expand_call): Don't warn about not being able to inline if -O0.\n\nFrom-SVN: r10913", "tree": {"sha": "bebe08b8b2d5439eccf97b733c08d63d2cda2d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bebe08b8b2d5439eccf97b733c08d63d2cda2d09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da8c1713212772aad1bf1a701bb72c08e105b11e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8c1713212772aad1bf1a701bb72c08e105b11e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8c1713212772aad1bf1a701bb72c08e105b11e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8c1713212772aad1bf1a701bb72c08e105b11e/comments", "author": null, "committer": null, "parents": [{"sha": "12266a61b6951162e2c46fcd287a37286cc3e9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12266a61b6951162e2c46fcd287a37286cc3e9aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12266a61b6951162e2c46fcd287a37286cc3e9aa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b98f73016b03743be770feb59f211a78fbdd251e", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8c1713212772aad1bf1a701bb72c08e105b11e/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8c1713212772aad1bf1a701bb72c08e105b11e/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=da8c1713212772aad1bf1a701bb72c08e105b11e", "patch": "@@ -618,7 +618,8 @@ expand_call (exp, target, ignore)\n \n \t\t Use abstraction instead of setting TREE_ADDRESSABLE\n \t\t directly.  */\n-\t      if (DECL_INLINE (fndecl) && warn_inline && !flag_no_inline)\n+\t      if (DECL_INLINE (fndecl) && warn_inline && !flag_no_inline\n+\t\t  && optimize > 0)\n \t\t{\n \t\t  warning_with_decl (fndecl, \"can't inline call to `%s'\");\n \t\t  warning (\"called from here\");\n@@ -798,7 +799,7 @@ expand_call (exp, target, ignore)\n \t separately after all.  If function was declared inline,\n \t give a warning.  */\n       if (DECL_INLINE (fndecl) && warn_inline && !flag_no_inline\n-\t  && ! TREE_ADDRESSABLE (fndecl))\n+\t  && optimize > 0 && ! TREE_ADDRESSABLE (fndecl))\n \t{\n \t  warning_with_decl (fndecl, \"inlining failed in call to `%s'\");\n \t  warning (\"called from here\");"}]}