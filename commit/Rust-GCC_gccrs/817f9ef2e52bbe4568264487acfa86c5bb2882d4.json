{"sha": "817f9ef2e52bbe4568264487acfa86c5bb2882d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3ZjllZjJlNTJiYmU0NTY4MjY0NDg3YWNmYTg2YzViYjI4ODJkNA==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-11-19T02:25:25Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-11-19T02:25:25Z"}, "message": "Fix spurious warning for strstr (s, \"\").\n\n* builtins.c (fold_builtin_strstr): Pass s1 through fold_convert before\nreturning it.\n* gcc.dg/builtin-strstr.c: New.\n\nFrom-SVN: r107206", "tree": {"sha": "875aa41b0e0cf9f95daa844c1be7324c0213984a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/875aa41b0e0cf9f95daa844c1be7324c0213984a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/817f9ef2e52bbe4568264487acfa86c5bb2882d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817f9ef2e52bbe4568264487acfa86c5bb2882d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817f9ef2e52bbe4568264487acfa86c5bb2882d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817f9ef2e52bbe4568264487acfa86c5bb2882d4/comments", "author": null, "committer": null, "parents": [{"sha": "7b767e311d47363e5f0f688faa121fe28798a393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b767e311d47363e5f0f688faa121fe28798a393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b767e311d47363e5f0f688faa121fe28798a393"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "b128468e4007cd2f1b75086058758913978c540c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=817f9ef2e52bbe4568264487acfa86c5bb2882d4", "patch": "@@ -1,3 +1,8 @@\n+2005-11-18  James E Wilson  <wilson@specifix.com>\n+\n+\t* builtins.c (fold_builtin_strstr): Pass s1 through fold_convert before\n+\treturning it.\n+\n 2005-11-18  Mike Stump  <mrs@apple.com>\n \n \t* c-common.c (handle_cleanup_attribute): Use a lang hook for lookup_name."}, {"sha": "6cca5fbe37e5b6a1c07f3166844790f67aaa45b6", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=817f9ef2e52bbe4568264487acfa86c5bb2882d4", "patch": "@@ -9199,8 +9199,10 @@ fold_builtin_strstr (tree arglist, tree type)\n \t  return fold_convert (type, tem);\n \t}\n \n+      /* The argument is const char *, and the result is char *, so we need\n+\t a type conversion here to avoid a warning.  */\n       if (p2[0] == '\\0')\n-\treturn s1;\n+\treturn fold_convert (type, s1);\n \n       if (p2[1] != '\\0')\n \treturn 0;"}, {"sha": "570041ea26fa47c372b3ce4b23bb8ddc5789c721", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=817f9ef2e52bbe4568264487acfa86c5bb2882d4", "patch": "@@ -1,3 +1,7 @@\n+2005-11-18  James E Wilson  <wilson@specifix.com>\n+\n+\t* gcc.dg/builtin-strstr.c: New.\n+\n 2005-11-18  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.target/ia64/20010423-1.c, gcc.target/ia64/20020313-1.c,"}, {"sha": "b8201f416426efa6abf3eb29be625594559e8191", "filename": "gcc/testsuite/gcc.dg/builtin-strstr.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-strstr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817f9ef2e52bbe4568264487acfa86c5bb2882d4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-strstr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-strstr.c?ref=817f9ef2e52bbe4568264487acfa86c5bb2882d4", "patch": "@@ -0,0 +1,8 @@\n+/* The strstr call is expanded to just \"s\", which should not result in a\n+   warning about discarding qualifiers in an assignment.  */\n+/* { dg-do compile } */\n+extern char * strstr (const char *s1, const char * s2);\n+void foo(const char *s){\n+  char * cp;\n+  cp = strstr(s, \"\");\n+}"}]}