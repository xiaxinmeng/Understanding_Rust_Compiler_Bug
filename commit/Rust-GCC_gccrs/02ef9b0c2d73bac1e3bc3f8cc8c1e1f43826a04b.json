{"sha": "02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlZjliMGMyZDczYmFjMWUzYmMzZjhjYzhjMWUxZjQzODI2YTA0Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-11-26T20:50:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-11-26T20:50:57Z"}, "message": "re PR target/88178 (ICE in dbx_reg_number, at dwarf2out.c:13659)\n\n\tPR target/88178\n\t* config/i386/i386.c (dbx_register_map): Use IGNORED_DWARF_REGNUM\n\tfor registers for which no debug information can be generated.\n\tUse INVALID_REGNUM for non-existent registers.\n\t(dbx64_register_map): Ditto.\n\t(svr4_dbx_register_map): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/88178\n\t* gcc.target/pr88178.c: New test.\n\nFrom-SVN: r266480", "tree": {"sha": "76ea6615d56d5a888fd319a7ae4a2d2c4faa1eb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ea6615d56d5a888fd319a7ae4a2d2c4faa1eb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73d062d1184c1118c20aea50a8e2c32ad2d8e19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d062d1184c1118c20aea50a8e2c32ad2d8e19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d062d1184c1118c20aea50a8e2c32ad2d8e19a"}], "stats": {"total": 123, "additions": 93, "deletions": 30}, "files": [{"sha": "7cc8f2b8d5df66691d53c088cc18cd3aa7a876dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "patch": "@@ -1,3 +1,12 @@\n+2018-11-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88178\n+\t* config/i386/i386.c (dbx_register_map): Use IGNORED_DWARF_REGNUM\n+\tfor registers for which no debug information can be generated.\n+\tUse INVALID_REGNUM for non-existent registers.\n+\t(dbx64_register_map): Ditto.\n+\t(svr4_dbx_register_map): Ditto.\n+\n 2018-11-26  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR c/57182"}, {"sha": "851598004ccf02ec07179268ff52e7928212e1e8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 71, "deletions": 30, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "patch": "@@ -271,32 +271,58 @@ enum reg_class const regclass_map[FIRST_PSEUDO_REGISTER] =\n \n int const dbx_register_map[FIRST_PSEUDO_REGISTER] =\n {\n-  0, 2, 1, 3, 6, 7, 4, 5,\t\t/* general regs */\n-  12, 13, 14, 15, 16, 17, 18, 19,\t/* fp regs */\n-  -1, -1, -1, -1,\t\t\t/* arg, flags, fpsr, frame */\n-  21, 22, 23, 24, 25, 26, 27, 28,\t/* SSE */\n-  29, 30, 31, 32, 33, 34, 35, 36,       /* MMX */\n-  -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended integer registers */\n-  -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended SSE registers */\n-  -1, -1, -1, -1, -1, -1, -1, -1,       /* AVX-512 registers 16-23*/\n-  -1, -1, -1, -1, -1, -1, -1, -1,       /* AVX-512 registers 24-31*/\n-  93, 94, 95, 96, 97, 98, 99, 100       /* Mask registers */\n+  /* general regs */\n+  0, 2, 1, 3, 6, 7, 4, 5,\n+  /* fp regs */\n+  12, 13, 14, 15, 16, 17, 18, 19,\n+  /* arg, flags, fpsr, frame */\n+  IGNORED_DWARF_REGNUM, IGNORED_DWARF_REGNUM,\n+  IGNORED_DWARF_REGNUM, IGNORED_DWARF_REGNUM,\n+  /* SSE */\n+  21, 22, 23, 24, 25, 26, 27, 28,\n+  /* MMX */\n+  29, 30, 31, 32, 33, 34, 35, 36,\n+  /* extended integer registers */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* extended sse registers */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* AVX-512 registers 16-23 */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* AVX-512 registers 24-31 */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* Mask registers */\n+  93, 94, 95, 96, 97, 98, 99, 100\n };\n \n /* The \"default\" register map used in 64bit mode.  */\n \n int const dbx64_register_map[FIRST_PSEUDO_REGISTER] =\n {\n-  0, 1, 2, 3, 4, 5, 6, 7,\t\t/* general regs */\n-  33, 34, 35, 36, 37, 38, 39, 40,\t/* fp regs */\n-  -1, -1, -1, -1,\t\t\t/* arg, flags, fpsr, frame */\n-  17, 18, 19, 20, 21, 22, 23, 24,\t/* SSE */\n-  41, 42, 43, 44, 45, 46, 47, 48,       /* MMX */\n-  8,9,10,11,12,13,14,15,\t\t/* extended integer registers */\n-  25, 26, 27, 28, 29, 30, 31, 32,\t/* extended SSE registers */\n-  67, 68, 69, 70, 71, 72, 73, 74,       /* AVX-512 registers 16-23 */\n-  75, 76, 77, 78, 79, 80, 81, 82,       /* AVX-512 registers 24-31 */\n-  118, 119, 120, 121, 122, 123, 124, 125 /* Mask registers */\n+  /* general regs */\n+  0, 1, 2, 3, 4, 5, 6, 7,\n+  /* fp regs */\n+  33, 34, 35, 36, 37, 38, 39, 40,\n+  /* arg, flags, fpsr, frame */\n+  IGNORED_DWARF_REGNUM, IGNORED_DWARF_REGNUM,\n+  IGNORED_DWARF_REGNUM, IGNORED_DWARF_REGNUM,\n+  /* SSE */\n+  17, 18, 19, 20, 21, 22, 23, 24,\n+  /* MMX */\n+  41, 42, 43, 44, 45, 46, 47, 48,\n+  /* extended integer registers */\n+  8, 9, 10, 11, 12, 13, 14, 15,\n+  /* extended SSE registers */\n+  25, 26, 27, 28, 29, 30, 31, 32,\n+  /* AVX-512 registers 16-23 */\n+  67, 68, 69, 70, 71, 72, 73, 74,\n+  /* AVX-512 registers 24-31 */\n+  75, 76, 77, 78, 79, 80, 81, 82,\n+  /* Mask registers */\n+  118, 119, 120, 121, 122, 123, 124, 125\n };\n \n /* Define the register numbers to be used in Dwarf debugging information.\n@@ -355,16 +381,31 @@ int const dbx64_register_map[FIRST_PSEUDO_REGISTER] =\n */\n int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER] =\n {\n-  0, 2, 1, 3, 6, 7, 5, 4,\t\t/* general regs */\n-  11, 12, 13, 14, 15, 16, 17, 18,\t/* fp regs */\n-  -1, 9, -1, -1,\t\t\t/* arg, flags, fpsr, frame */\n-  21, 22, 23, 24, 25, 26, 27, 28,\t/* SSE registers */\n-  29, 30, 31, 32, 33, 34, 35, 36,\t/* MMX registers */\n-  -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended integer registers */\n-  -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended SSE registers */\n-  -1, -1, -1, -1, -1, -1, -1, -1,       /* AVX-512 registers 16-23*/\n-  -1, -1, -1, -1, -1, -1, -1, -1,       /* AVX-512 registers 24-31*/\n-  93, 94, 95, 96, 97, 98, 99, 100       /* Mask registers */\n+  /* general regs */\n+  0, 2, 1, 3, 6, 7, 5, 4,\n+  /* fp regs */\n+  11, 12, 13, 14, 15, 16, 17, 18,\n+  /* arg, flags, fpsr, frame */\n+  IGNORED_DWARF_REGNUM, 9,\n+  IGNORED_DWARF_REGNUM, IGNORED_DWARF_REGNUM,\n+  /* SSE registers */\n+  21, 22, 23, 24, 25, 26, 27, 28,\n+  /* MMX registers */\n+  29, 30, 31, 32, 33, 34, 35, 36,\n+  /* extended integer registers */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* extended sse registers */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* AVX-512 registers 16-23 */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* AVX-512 registers 24-31 */\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM, INVALID_REGNUM,\n+  /* Mask registers */\n+  93, 94, 95, 96, 97, 98, 99, 100\n };\n \n /* Define parameter passing and return registers.  */"}, {"sha": "749c573f886813c5a02e623613145e20c705db32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "patch": "@@ -1,3 +1,8 @@\n+2018-11-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88178\n+\t* gcc.target/pr88178.c: New test.\n+\n 2018-11-26  Matthias Klose  <doko@ubuntu.com>\n \n \t* jit.dg/test-long-names.c: Fix build with -Wformat-security."}, {"sha": "a5fbd35bd8fca1457950f6097f2ed20f8c747020", "filename": "gcc/testsuite/gcc.target/i386/pr88178.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88178.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88178.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88178.c?ref=02ef9b0c2d73bac1e3bc3f8cc8c1e1f43826a04b", "patch": "@@ -0,0 +1,8 @@\n+/* PR target/88178 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g\" } */\n+\n+void foo (void)\n+{\n+  register int r19 asm (\"19\");\n+}"}]}