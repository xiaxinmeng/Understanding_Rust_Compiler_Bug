{"sha": "a7bf199e10bfe7a3ce99d86421632711de48bcc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdiZjE5OWUxMGJmZTdhM2NlOTlkODY0MjE2MzI3MTFkZTQ4YmNjMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-06-18T19:07:51Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-06-18T19:07:51Z"}, "message": "c-opts.c (c_common_post_options): PCH is not compatible with no-unit-at-a-time.\n\n\n\t* c-opts.c (c_common_post_options): PCH is not compatible with\n\tno-unit-at-a-time.\n\t* opts.c (handle_options): Enable unit-at-a-time at O0 along with\n\t-fno-toplevel-reorder by default now.\n\t* gcc.dg/weak/weak-2.c: We no longer complain about incompatibilty.\n\t* gcc.dg/weak/weak-3.c: We no longer complain about incompatibilty.\n\t* gcc.dg/weak/weak-4.c: We no longer complain about incompatibilty.\n\t* gcc.dg/weak/weak-5.c: We no longer complain about incompatibilty.\n\t* gcc.dg/weak/weak-6.c: Fix thinko in previous change.\n\t* gcc.dg/weak/weak-7.c: Likewise.\n\nFrom-SVN: r136903", "tree": {"sha": "3173e61d1d42583002338162fcf951ee703f626f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3173e61d1d42583002338162fcf951ee703f626f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7bf199e10bfe7a3ce99d86421632711de48bcc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bf199e10bfe7a3ce99d86421632711de48bcc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7bf199e10bfe7a3ce99d86421632711de48bcc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bf199e10bfe7a3ce99d86421632711de48bcc3/comments", "author": null, "committer": null, "parents": [{"sha": "3f737aa91438a3586bca1452f1a5ee8de514a906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f737aa91438a3586bca1452f1a5ee8de514a906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f737aa91438a3586bca1452f1a5ee8de514a906"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "a86d857d55e92e5d1f6a3433fff5121ff6b082ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -1,3 +1,10 @@\n+2008-06-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* c-opts.c (c_common_post_options): PCH is not compatible with\n+\tno-unit-at-a-time.\n+\t* opts.c (handle_options): Enable unit-at-a-time at O0 along with\n+\t-fno-toplevel-reorder by default now.\n+\n 2008-06-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR documentation/30739"}, {"sha": "33d0e6bed26d9267c4639c4d708c6e4b7b00497f", "filename": "gcc/c-opts.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -1038,6 +1038,9 @@ c_common_post_options (const char **pfilename)\n   if (num_in_fnames > 1)\n     flag_unit_at_a_time = 1;\n \n+  if (pch_file && !flag_unit_at_a_time)\n+    sorry (\"Precompiled headers require -funit-at-a-time\");\n+\n   /* Default to ObjC sjlj exception handling if NeXT runtime.  */\n   if (flag_objc_sjlj_exceptions < 0)\n     flag_objc_sjlj_exceptions = flag_next_runtime;"}, {"sha": "6d6d380fdb75d617457fe6fa71dd4d5023752360", "filename": "gcc/opts.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -822,6 +822,13 @@ decode_options (unsigned int argc, const char **argv)\n       flag_merge_constants = 0;\n     }\n \n+  if (!no_unit_at_a_time_default)\n+    {\n+      flag_unit_at_a_time = 1;\n+      if (!optimize)\n+        flag_toplevel_reorder = 0;\n+    }\n+\n   if (optimize >= 1)\n     {\n       flag_defer_pop = 1;\n@@ -848,8 +855,6 @@ decode_options (unsigned int argc, const char **argv)\n       flag_tree_fre = 1;\n       flag_tree_copy_prop = 1;\n       flag_tree_sink = 1;\n-      if (!no_unit_at_a_time_default)\n-        flag_unit_at_a_time = 1;\n \n       if (!optimize_size)\n \t{"}, {"sha": "bf4c5b9318598206fbb2f037e2d31ca3be89a784", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -1,3 +1,12 @@\n+2008-06-16  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/weak/weak-2.c: We no longer complain about incompatibilty.\n+\t* gcc.dg/weak/weak-3.c: We no longer complain about incompatibilty.\n+\t* gcc.dg/weak/weak-4.c: We no longer complain about incompatibilty.\n+\t* gcc.dg/weak/weak-5.c: We no longer complain about incompatibilty.\n+\t* gcc.dg/weak/weak-6.c: Fix thinko in previous change.\n+\t* gcc.dg/weak/weak-7.c: Likewise.\n+\n 2008-06-16  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/asm-wide-1.c: Do not require extra errors we output"}, {"sha": "973f4c216b64d4f5f5bfe80b7fbd43f227e1329f", "filename": "gcc/testsuite/gcc.dg/weak/weak-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -24,7 +24,7 @@ void * foo1b (void)\n   return (void *)ffoo1b;\n }\n \n-extern void * ffoo1c (void);  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n+extern void * ffoo1c (void);\n void * foo1c (void)\n {\n   return (void *)ffoo1c;"}, {"sha": "748bd236cc51d6c5adf6e89828fbc4891adfa4a8", "filename": "gcc/testsuite/gcc.dg/weak/weak-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -34,7 +34,7 @@ void * foo1c (void)\n {\n   return (void *)ffoo1c;\n }\n-extern void * ffoo1c (void) __attribute__((weak)); /* { dg-warning \"weak declaration\" \"weak declaration\" } */\n+extern void * ffoo1c (void) __attribute__((weak));\n \n \n int ffoo1d (void);\n@@ -59,7 +59,7 @@ void * foo1f (void)\n   return 0;\n }\n void * ffoox1f (void) { return (void *)0; }\n-extern void * ffoo1f (void)  __attribute__((weak, alias (\"ffoox1f\"))); /* { dg-warning \"weak declaration\" \"weak declaration\" } */\n+extern void * ffoo1f (void)  __attribute__((weak, alias (\"ffoox1f\")));\n \n \n extern void * ffoo1g (void);"}, {"sha": "cd8a1e9124d568eefef517223c944fbbda5c987d", "filename": "gcc/testsuite/gcc.dg/weak/weak-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -32,7 +32,7 @@ void * foo1b (void)\n }\n \n \n-extern int vfoo1c;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n+extern int vfoo1c;\n void * foo1c (void)\n {\n   return (void *)&vfoo1c;\n@@ -64,7 +64,7 @@ void * foo1f (void)\n #pragma weak vfoo1f\n \n \n-extern int vfoo1g;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n+extern int vfoo1g;\n void * foo1g (void)\n {\n   return (void *)&vfoo1g;"}, {"sha": "e82792af3ff0d2d49174cc7c9ad45f44a6781d70", "filename": "gcc/testsuite/gcc.dg/weak/weak-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -39,7 +39,7 @@ void * foo1c (void)\n {\n   return (void *)&vfoo1c;\n }\n-extern int vfoo1c __attribute__((weak)); /* { dg-warning \"unspecified behavior\" } */\n+extern int vfoo1c __attribute__((weak));\n \n \n extern int vfoo1d __attribute__((weak));\n@@ -63,15 +63,15 @@ void * foo1f (void)\n {\n   return (void *)&vfoo1f;\n }\n-extern int vfoo1f __attribute__((weak)); /* { dg-warning \"unspecified behavior\" } */\n+extern int vfoo1f __attribute__((weak));\n \n \n extern int vfoo1g;\n void * foo1g (void)\n {\n   return (void *)&vfoo1g;\n }\n-int vfoo1g __attribute__((weak)); /* { dg-warning \"unspecified behavior\" } */\n+int vfoo1g __attribute__((weak));\n \n \n extern int vfoo1h __attribute__((weak));"}, {"sha": "6fa0d66ff2dfc6489790cb801edb237958d635b0", "filename": "gcc/testsuite/gcc.dg/weak/weak-6.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -2,5 +2,6 @@\n /* { dg-require-weak \"\" } */\n \n extern void * foo (void);\n-void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" } */\n+void * foo (void) { return (void *)foo; }\n+/* { dg-error \"function pointer\" \"pointer conversion\" { target *-*-* } 5 } */\n #pragma weak foo"}, {"sha": "07c03bc975ad228e8418848a484609a0ea318bbf", "filename": "gcc/testsuite/gcc.dg/weak/weak-7.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf199e10bfe7a3ce99d86421632711de48bcc3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c?ref=a7bf199e10bfe7a3ce99d86421632711de48bcc3", "patch": "@@ -2,5 +2,6 @@\n /* { dg-require-weak \"\" } */\n \n extern void * foo (void);\n-void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" } */\n+void * foo (void) { return (void *)foo; }\n+/* { dg-error \"function pointer\" \"pointer conversion\" { target *-*-* } 5 } */\n extern void * foo (void) __attribute__((weak));"}]}