{"sha": "1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExMzM2MGU5NTc3OWJjOWI0NjJhNGM4YzAwZGZlOGU3ODJmOGRiZA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2008-06-27T07:35:33Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-06-27T07:35:33Z"}, "message": "gimplify.c (gimplify_modify_expr_to_memset): Assert our documented assumptions.\n\n2008-06-26  Olivier Hainque  <hainque@adacore.com>\n\n\tgcc/\n\t* gimplify.c (gimplify_modify_expr_to_memset): Assert our\n\tdocumented assumptions.\n\n\ttestsuite/\n\t* gnat.dg/aligned_vla.adb: New test.\n\nFrom-SVN: r137171", "tree": {"sha": "861eda7fc77012eac08e234c6e0cdb115e8e54b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/861eda7fc77012eac08e234c6e0cdb115e8e54b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b5705609b65f43f8f06b50443684fc069788ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5705609b65f43f8f06b50443684fc069788ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5705609b65f43f8f06b50443684fc069788ffc"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "35b4818e7959313ab72a8cf95dc522d37c1d30eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "patch": "@@ -1,3 +1,8 @@\n+2008-06-26  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gimplify.c (gimplify_modify_expr_to_memset): Assert our\n+\tdocumented assumptions.\n+\n 2008-06-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* dwarf2out.c: Remove trailing white spaces.  Break long line"}, {"sha": "799ccbee52cad769f53c1a5f9822231d8fad31f2", "filename": "gcc/gimplify.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "patch": "@@ -2809,8 +2809,19 @@ gimplify_modify_expr_to_memcpy (tree *expr_p, tree size, bool want_value)\n static enum gimplify_status\n gimplify_modify_expr_to_memset (tree *expr_p, tree size, bool want_value)\n {\n-  tree t, to, to_ptr;\n+  tree t, from, to, to_ptr;\n \n+  /* Assert our assumptions, to abort instead of producing wrong code\n+     silently if they are not met.  Beware that the RHS CONSTRUCTOR might\n+     not be immediately exposed.  */\n+  from = GENERIC_TREE_OPERAND (*expr_p, 1);  \n+  if (TREE_CODE (from) == WITH_SIZE_EXPR)\n+    from = TREE_OPERAND (from, 0);\n+\n+  gcc_assert (TREE_CODE (from) == CONSTRUCTOR\n+\t      && VEC_empty (constructor_elt, CONSTRUCTOR_ELTS (from)));\n+\n+  /* Now proceed.  */\n   to = GENERIC_TREE_OPERAND (*expr_p, 0);\n \n   to_ptr = build_fold_addr_expr (to);"}, {"sha": "ed8f15bd6e40feb1a79fc337457053689fa83e2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "patch": "@@ -1,3 +1,7 @@\n+2008-06-27  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/aligned_vla.adb: New test.\n+\n 2008-06-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/inline-32.c, gcc.dg/inline-32a.c: New tests."}, {"sha": "bd3eb7158e53573773046a692a8d2c745b394814", "filename": "gcc/testsuite/gnat.dg/aligned_vla.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Ftestsuite%2Fgnat.dg%2Faligned_vla.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a13360e95779bc9b462a4c8c00dfe8e782f8dbd/gcc%2Ftestsuite%2Fgnat.dg%2Faligned_vla.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faligned_vla.adb?ref=1a13360e95779bc9b462a4c8c00dfe8e782f8dbd", "patch": "@@ -0,0 +1,23 @@\n+--  { dg-do run }\n+\n+procedure Aligned_Vla is\n+\n+   type Table is array (Integer range <>) of Integer;\n+   for Table'Alignment use Long_Float'Alignment;\n+\n+   K : constant := 1;\n+   Konstants : Table (1 .. 4) := (others => K);\n+\n+   procedure Check_Copy (Len : Integer) is\n+      My_Konstants : Table (1 .. Len) := Konstants (1 .. 1 + Len - 1);\n+   begin\n+      for I in My_Konstants'Range loop\n+         if My_Konstants (I) /= K then\n+            raise Program_Error;\n+         end if;\n+      end loop;\n+   end;\n+\n+begin\n+   Check_Copy (Len => 4);\n+end;"}]}