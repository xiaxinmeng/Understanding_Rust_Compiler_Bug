{"sha": "d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc0MmIwYzFhMDJhYWI3ZmE2MWI2ZDg5ZWVjZWU4MWIyOThmMDZjNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-20T08:32:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-20T08:32:56Z"}, "message": "re PR middle-end/90840 (ICE in simplify_subreg, at simplify-rtx.c:6441)\n\n\tPR middle-end/90840\n\t* expmed.c (store_bit_field_1): Handle the case where op0 is not a MEM\n\tand has a mode that doesn't have corresponding integral type.\n\n\t* gcc.c-torture/compile/pr90840.c: New test.\n\nFrom-SVN: r278483", "tree": {"sha": "27cfc00bd288f287714d449f817fefcce69e2c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27cfc00bd288f287714d449f817fefcce69e2c67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94cdd3b7ceff688d039a9f134013ac9069df2e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cdd3b7ceff688d039a9f134013ac9069df2e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94cdd3b7ceff688d039a9f134013ac9069df2e8c"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "f350d36167a0d66c7c96d55cc2dfd8b5fb06b8a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "patch": "@@ -1,5 +1,9 @@\n 2019-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/90840\n+\t* expmed.c (store_bit_field_1): Handle the case where op0 is not a MEM\n+\tand has a mode that doesn't have corresponding integral type.\n+\n \tPR target/90867\n \t* config/i386/i386-options.c (ix86_valid_target_attribute_tree): Don't\n \tclear opts->x_ix86_isa_flags{,2} here..."}, {"sha": "a4a25560df6e77ea3e748a3663c0552d22c4206a", "filename": "gcc/expmed.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "patch": "@@ -840,6 +840,27 @@ store_bit_field_1 (rtx str_rtx, poly_uint64 bitsize, poly_uint64 bitnum,\n       if (MEM_P (op0))\n \top0 = adjust_bitfield_address_size (op0, op0_mode.else_blk (),\n \t\t\t\t\t    0, MEM_SIZE (op0));\n+      else if (!op0_mode.exists ())\n+\t{\n+\t  if (ibitnum == 0\n+\t      && known_eq (ibitsize, GET_MODE_BITSIZE (GET_MODE (op0)))\n+\t      && MEM_P (value)\n+\t      && !reverse)\n+\t    {\n+\t      value = adjust_address (value, GET_MODE (op0), 0);\n+\t      emit_move_insn (op0, value);\n+\t      return true;\n+\t    }\n+\t  if (!fallback_p)\n+\t    return false;\n+\t  rtx temp = assign_stack_temp (GET_MODE (op0),\n+\t\t\t\t\tGET_MODE_SIZE (GET_MODE (op0)));\n+\t  emit_move_insn (temp, op0);\n+\t  store_bit_field_1 (temp, bitsize, bitnum, 0, 0, fieldmode, value,\n+\t\t\t     reverse, fallback_p);\n+\t  emit_move_insn (op0, temp);\n+\t  return true;\n+\t}\n       else\n \top0 = gen_lowpart (op0_mode.require (), op0);\n     }"}, {"sha": "7de7a43dc41b4018de226ab5c54ee38a6468817a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "patch": "@@ -1,5 +1,8 @@\n 2019-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/90840\n+\t* gcc.c-torture/compile/pr90840.c: New test.\n+\n \tPR target/90867\n \t* gcc.target/i386/pr90867.c: New test.\n "}, {"sha": "94a6f3f4bafafe087ea66586e03f3e3adfe5db59", "filename": "gcc/testsuite/gcc.c-torture/compile/pr90840.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90840.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d742b0c1a02aab7fa61b6d89eecee81b298f06c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90840.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90840.c?ref=d742b0c1a02aab7fa61b6d89eecee81b298f06c6", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/90840 */\n+struct S { long long a; int b; };\n+struct S foo (void);\n+struct __attribute__((packed)) T { long long a; char b; };\n+struct T baz (void);\n+\n+void\n+bar (void)\n+{\n+  _Complex long double c;\n+  *(struct S *) &c = foo ();\n+}\n+\n+void\n+qux (void)\n+{\n+  _Complex long double c;\n+  *(struct T *) &c = baz ();\n+}"}]}