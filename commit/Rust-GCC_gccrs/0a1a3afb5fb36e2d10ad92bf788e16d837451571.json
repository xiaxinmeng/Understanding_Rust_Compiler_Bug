{"sha": "0a1a3afb5fb36e2d10ad92bf788e16d837451571", "node_id": "C_kwDOANBUbNoAKDBhMWEzYWZiNWZiMzZlMmQxMGFkOTJiZjc4OGUxNmQ4Mzc0NTE1NzE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-14T12:37:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-14T13:31:06Z"}, "message": "tree-optimization/104528 - free niter estimates after DSE\n\nWhen DSE removes a trivially dead def we have to reset niter information\non loops since that might refer to it.  The patch also adds verification\nto make sure this does not happen.\n\n2022-02-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/104528\n\t* tree-ssa.h (find_released_ssa_name): Declare.\n\t* tree-ssa.cc (find_released_ssa_name): Export.\n\t* cfgloop.cc (verify_loop_structure): Look for released\n\tSSA names in loops nb_iterations.\n\t* tree-ssa-dse.cc (pass_dse::execute): Release number of iteration\n\testimates.\n\n\t* gfortran.dg/pr104528.f: New testcase.", "tree": {"sha": "664afa714502ef25af4cd14178dc70b457b38943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/664afa714502ef25af4cd14178dc70b457b38943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a1a3afb5fb36e2d10ad92bf788e16d837451571", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1a3afb5fb36e2d10ad92bf788e16d837451571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a1a3afb5fb36e2d10ad92bf788e16d837451571", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1a3afb5fb36e2d10ad92bf788e16d837451571/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164a761a9f4798dc69ecab80097807636dc17d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164a761a9f4798dc69ecab80097807636dc17d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164a761a9f4798dc69ecab80097807636dc17d61"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "5ffcc77d93f857bb0e1f9e3e92aec2882dc5be9d", "filename": "gcc/cfgloop.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Fcfgloop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Fcfgloop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.cc?ref=0a1a3afb5fb36e2d10ad92bf788e16d837451571", "patch": "@@ -31,6 +31,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"gimple-iterator.h\"\n #include \"dumpfile.h\"\n+#include \"tree-ssa.h\"\n+#include \"tree-pretty-print.h\"\n \n static void flow_loops_cfg_dump (FILE *);\n \f\n@@ -1561,6 +1563,17 @@ verify_loop_structure (void)\n \t\terr = 1;\n \t      }\n \t}\n+\n+      /* Check cached number of iterations for released SSA names.  */\n+      tree ref;\n+      if (loop->nb_iterations\n+\t  && (ref = walk_tree (&loop->nb_iterations,\n+\t\t\t       find_released_ssa_name, NULL, NULL)))\n+\t{\n+\t  error (\"loop %d%'s number of iterations %qE references the\"\n+\t\t \" released SSA name %qE\", i, loop->nb_iterations, ref);\n+\t  err = 1;\n+\t}\n     }\n \n   /* Check irreducible loops.  */"}, {"sha": "5b43feba97bca589a739b967d7b2c1fae0157ce5", "filename": "gcc/testsuite/gfortran.dg/pr104528.f", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr104528.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr104528.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr104528.f?ref=0a1a3afb5fb36e2d10ad92bf788e16d837451571", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fpeel-loops -ftree-loop-vectorize -fno-tree-scev-cprop --param iv-max-considered-uses=2\" }\n+      REAL               FUNCTION FOO(M, N, A, W)\n+\n+      INTEGER            M, N\n+\n+      REAL               W(*)\n+      COMPLEX            A(*)\n+\n+      INTEGER            II, JI, JJ, KK, LL, MP\n+\n+      EXTERNAL           BAR\n+\n+      INTEGER            QUX\n+      EXTERNAL           QUX\n+\n+      CALL BAR(II)\n+\n+      IF (M .EQ. 0) THEN\n+         IF (N .EQ. 0) THEN\n+            DO 140 KK = II, II + MP\n+               W(KK) = 0\n+ 140        CONTINUE\n+         ELSE\n+            KK = II + MP\n+         END IF\n+\n+         DO 130 JI = KK, KK + MP\n+            DO 120 LL = JJ, JJ + MP\n+               DO 110 KK = II, II + MP\n+                  W(KK) = (A(KK))\n+ 110           CONTINUE\n+ 120        CONTINUE\n+ 130     CONTINUE\n+\n+         IF (W(KK) .EQ. 0) THEN\n+            FOO = W(QUX(MP, W, 1))\n+         END IF\n+\n+      END IF\n+\n+      RETURN\n+\n+      END"}, {"sha": "2b22a61ad97c2e53d6a2e54e587c5bd60c61c255", "filename": "gcc/tree-ssa-dse.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa-dse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa-dse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.cc?ref=0a1a3afb5fb36e2d10ad92bf788e16d837451571", "patch": "@@ -44,6 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-modref-tree.h\"\n #include \"ipa-modref.h\"\n #include \"target.h\"\n+#include \"tree-ssa-loop-niter.h\"\n \n /* This file implements dead store elimination.\n \n@@ -1418,6 +1419,8 @@ unsigned int\n pass_dse::execute (function *fun)\n {\n   unsigned todo = 0;\n+  bool released_def = false;\n+\n   need_eh_cleanup = BITMAP_ALLOC (NULL);\n   need_ab_cleanup = BITMAP_ALLOC (NULL);\n   auto_sbitmap live_bytes (param_dse_max_object_size);\n@@ -1460,6 +1463,7 @@ pass_dse::execute (function *fun)\n \t\t  if (gsi_remove (&gsi, true) && need_eh_cleanup)\n \t\t    bitmap_set_bit (need_eh_cleanup, bb->index);\n \t\t  release_defs (stmt);\n+\t\t  released_def = true;\n \t\t}\n \t    }\n \t  if (gsi_end_p (gsi))\n@@ -1481,6 +1485,7 @@ pass_dse::execute (function *fun)\n \t\t}\n \t      remove_phi_node (&si, true);\n \t      removed_phi = true;\n+\t      released_def = true;\n \t    }\n \t  else\n \t    gsi_next (&si);\n@@ -1506,6 +1511,9 @@ pass_dse::execute (function *fun)\n   BITMAP_FREE (need_eh_cleanup);\n   BITMAP_FREE (need_ab_cleanup);\n \n+  if (released_def)\n+    free_numbers_of_iterations_estimates (fun);\n+\n   return todo;\n }\n "}, {"sha": "430875ae37a37c059cc65dcbeedfb691a69a436a", "filename": "gcc/tree-ssa.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.cc?ref=0a1a3afb5fb36e2d10ad92bf788e16d837451571", "patch": "@@ -272,7 +272,7 @@ target_for_debug_bind (tree var)\n /* Called via walk_tree, look for SSA_NAMEs that have already been\n    released.  */\n \n-static tree\n+tree\n find_released_ssa_name (tree *tp, int *walk_subtrees, void *data_)\n {\n   struct walk_stmt_info *wi = (struct walk_stmt_info *) data_;"}, {"sha": "008535454a88cc96f42e7107815fcf674e402791", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a3afb5fb36e2d10ad92bf788e16d837451571/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=0a1a3afb5fb36e2d10ad92bf788e16d837451571", "patch": "@@ -49,6 +49,7 @@ extern void init_tree_ssa (function *, int size = 0);\n extern void delete_tree_ssa (function *);\n extern bool tree_ssa_useless_type_conversion (tree);\n extern tree tree_ssa_strip_useless_type_conversions (tree);\n+extern tree find_released_ssa_name (tree *, int *, void *);\n \n \n extern bool ssa_defined_default_def_p (tree t);"}]}