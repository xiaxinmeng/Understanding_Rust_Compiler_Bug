{"sha": "f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhZDFmOWMwZDhmNjFjY2Q3MjliMGI5Njg3OTQ0ODU2ZGQ5Y2YwNw==", "commit": {"author": {"name": "Linas Vepstas", "email": "linas@linas.org", "date": "1999-09-08T06:51:23Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-08T06:51:23Z"}, "message": "Linas Vepstas  <linas@linas.org>\n\n        * c-common.c: Use ISGRAPH, ISLOWER, toupper.\n        * c-lex.c, cccp.c, cexp.c, cexp.y, cppexp.c, dwarf2out.c, genattr.c,\n        genattrtab.c, genemit.c, genextract.c, genpeep.c, tree.c: Likewise.\n        * system.h (IN_CTYPE_DOMAIN): Define to 1 if HOST_EBCDIC.\n        * defaults.h (TARGET_ESC): Add default.\n\nFrom-SVN: r29192", "tree": {"sha": "d3da13fb9f076103bbf7f7786f2153feff6380a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3da13fb9f076103bbf7f7786f2153feff6380a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/comments", "author": {"login": "linas", "id": 94368, "node_id": "MDQ6VXNlcjk0MzY4", "avatar_url": "https://avatars.githubusercontent.com/u/94368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linas", "html_url": "https://github.com/linas", "followers_url": "https://api.github.com/users/linas/followers", "following_url": "https://api.github.com/users/linas/following{/other_user}", "gists_url": "https://api.github.com/users/linas/gists{/gist_id}", "starred_url": "https://api.github.com/users/linas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linas/subscriptions", "organizations_url": "https://api.github.com/users/linas/orgs", "repos_url": "https://api.github.com/users/linas/repos", "events_url": "https://api.github.com/users/linas/events{/privacy}", "received_events_url": "https://api.github.com/users/linas/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2b368b6e91a83e3b8d48d86fcd55614b54f40aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b368b6e91a83e3b8d48d86fcd55614b54f40aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b368b6e91a83e3b8d48d86fcd55614b54f40aa"}], "stats": {"total": 846, "additions": 428, "deletions": 418}, "files": [{"sha": "4fda7dc983b128447b1d7b92cdcc92c6c4a11f67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1,3 +1,11 @@\n+Tue Sep  7 23:46:35 1999  Linas Vepstas  <linas@linas.org>\n+\n+\t* c-common.c: Use ISGRAPH, ISLOWER, toupper.\n+\t* c-lex.c, cccp.c, cexp.c, cexp.y, cppexp.c, dwarf2out.c, genattr.c,\n+\tgenattrtab.c, genemit.c, genextract.c, genpeep.c, tree.c: Likewise.\n+\t* system.h (IN_CTYPE_DOMAIN): Define to 1 if HOST_EBCDIC.\n+\t* defaults.h (TARGET_ESC): Add default.\n+\n Tue Sep  7 23:36:59 1999  Linas Vepstas  <linas@linas.org>\n \n \t* configure.in: add i370-*-openedition, i370-*-mvs and"}, {"sha": "9dc881a172459b5da67f427e1866ea06f5019914", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1795,7 +1795,7 @@ check_format_info (info, params)\n \t  ++fci;\n       if (fci->format_chars == 0)\n \t{\n-\t  if (format_char >= 040 && format_char < 0177)\n+          if (ISGRAPH(format_char))\n \t    warning (\"unknown conversion type character `%c' in format\",\n \t\t     format_char);\n \t  else"}, {"sha": "96a4b73838b531cc5f6b479a7339717f5f5c1f4b", "filename": "gcc/c-lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1015,7 +1015,7 @@ readescape (ignore_ptr)\n     case 'E':\n       if (pedantic)\n \tpedwarn (\"non-ANSI-standard escape sequence, `\\\\%c'\", c);\n-      return 033;\n+      return TARGET_ESC;\n \n     case '?':\n       return c;\n@@ -1053,7 +1053,7 @@ yyerror (msgid)\n     error (\"%s before string constant\", string);\n   else if (token_buffer[0] == '\\'')\n     error (\"%s before character constant\", string);\n-  else if (token_buffer[0] < 040 || (unsigned char) token_buffer[0] >= 0177)\n+  else if (!ISGRAPH(token_buffer[0]))\n     error (\"%s before character 0%o\", string, (unsigned char) token_buffer[0]);\n   else\n     error (\"%s before `%s'\", string, token_buffer);"}, {"sha": "b8ebe33febb7ac63b2f6dbd9fdb4eb633dc93bdf", "filename": "gcc/c-parse.c", "status": "modified", "additions": 377, "deletions": 378, "changes": 755, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -72,7 +72,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include <setjmp.h>\n-\n #include \"tree.h\"\n #include \"input.h\"\n #include \"c-lex.h\"\n@@ -97,10 +96,10 @@ const char * const language_string = \"GNU C\";\n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-#line 65 \"c-parse.y\"\n+#line 64 \"c-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 185 \"c-parse.y\"\n+#line 184 \"c-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -371,47 +370,47 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   224,   229,   243,   245,   245,   246,   248,   250,   251,   259,\n-   263,   274,   279,   284,   286,   288,   289,   290,   295,   302,\n-   304,   309,   314,   320,   322,   327,   332,   338,   340,   345,\n-   352,   354,   357,   359,   361,   363,   365,   367,   369,   373,\n-   377,   380,   383,   386,   390,   392,   395,   398,   402,   430,\n-   436,   439,   442,   445,   447,   449,   453,   457,   461,   463,\n-   466,   470,   497,   499,   501,   503,   505,   507,   509,   511,\n-   513,   515,   517,   519,   521,   523,   527,   529,   533,   535,\n-   538,   542,   544,   551,   554,   562,   573,   672,   673,   675,\n-   681,   683,   706,   715,   717,   719,   723,   729,   731,   736,\n-   738,   743,   745,   746,   756,   761,   763,   764,   765,   772,\n-   778,   783,   786,   794,   799,   801,   802,   803,   810,   821,\n-   825,   831,   836,   841,   846,   848,   850,   859,   862,   866,\n-   868,   870,   875,   879,   882,   886,   889,   891,   903,   906,\n-   908,   910,   914,   918,   920,   923,   936,   939,   943,   945,\n-   953,   954,   955,   959,   961,   967,   968,   969,   972,   974,\n-   977,   979,   982,   985,   991,   998,  1000,  1007,  1014,  1017,\n-  1024,  1027,  1031,  1034,  1038,  1043,  1046,  1050,  1053,  1055,\n-  1057,  1059,  1066,  1068,  1069,  1070,  1075,  1077,  1082,  1090,\n-  1095,  1099,  1102,  1104,  1109,  1111,  1112,  1115,  1115,  1118,\n-  1121,  1123,  1125,  1128,  1130,  1133,  1139,  1141,  1145,  1159,\n-  1167,  1171,  1185,  1193,  1200,  1202,  1207,  1210,  1215,  1217,\n-  1219,  1226,  1228,  1236,  1242,  1247,  1249,  1251,  1258,  1260,\n-  1266,  1272,  1274,  1276,  1281,  1283,  1290,  1292,  1295,  1298,\n-  1302,  1305,  1309,  1312,  1316,  1321,  1323,  1327,  1329,  1331,\n-  1333,  1337,  1339,  1342,  1345,  1348,  1351,  1355,  1357,  1360,\n-  1362,  1367,  1370,  1375,  1377,  1379,  1393,  1400,  1405,  1411,\n-  1416,  1418,  1423,  1425,  1429,  1433,  1437,  1447,  1449,  1454,\n-  1459,  1462,  1466,  1469,  1473,  1476,  1479,  1482,  1486,  1489,\n-  1493,  1497,  1499,  1501,  1503,  1505,  1507,  1509,  1511,  1515,\n-  1523,  1531,  1533,  1535,  1539,  1541,  1544,  1547,  1558,  1560,\n-  1565,  1567,  1570,  1584,  1587,  1590,  1592,  1594,  1602,  1610,\n-  1620,  1638,  1643,  1648,  1651,  1665,  1674,  1678,  1682,  1686,\n-  1692,  1696,  1701,  1704,  1709,  1712,  1713,  1730,  1735,  1738,\n-  1750,  1752,  1762,  1772,  1773,  1781,  1784,  1796,  1800,  1817,\n-  1827,  1836,  1841,  1846,  1851,  1855,  1859,  1870,  1877,  1884,\n-  1891,  1902,  1908,  1911,  1916,  1939,  1973,  2004,  2035,  2050,\n-  2064,  2068,  2072,  2075,  2080,  2082,  2085,  2087,  2091,  2096,\n-  2099,  2105,  2110,  2115,  2117,  2126,  2127,  2133,  2135,  2145,\n-  2147,  2151,  2154,  2160,  2170,  2179,  2188,  2198,  2212,  2217,\n-  2222,  2224,  2233,  2236,  2241,  2244,  2248\n+   223,   228,   242,   244,   244,   245,   247,   249,   250,   258,\n+   262,   273,   278,   283,   285,   287,   288,   289,   294,   301,\n+   303,   308,   313,   319,   321,   326,   331,   337,   339,   344,\n+   351,   353,   356,   358,   360,   362,   364,   366,   368,   372,\n+   376,   379,   382,   385,   389,   391,   394,   397,   401,   429,\n+   435,   438,   441,   444,   446,   448,   452,   456,   460,   462,\n+   465,   469,   496,   498,   500,   502,   504,   506,   508,   510,\n+   512,   514,   516,   518,   520,   522,   526,   528,   532,   534,\n+   537,   541,   543,   550,   553,   561,   572,   671,   672,   674,\n+   680,   682,   705,   714,   716,   718,   722,   728,   730,   735,\n+   737,   742,   744,   745,   755,   760,   762,   763,   764,   771,\n+   777,   782,   785,   793,   798,   800,   801,   802,   809,   820,\n+   824,   830,   835,   840,   845,   847,   849,   858,   861,   865,\n+   867,   869,   874,   878,   881,   885,   888,   890,   902,   905,\n+   907,   909,   913,   917,   919,   922,   935,   938,   942,   944,\n+   952,   953,   954,   958,   960,   966,   967,   968,   971,   973,\n+   976,   978,   981,   984,   990,   997,   999,  1006,  1013,  1016,\n+  1023,  1026,  1030,  1033,  1037,  1042,  1045,  1049,  1052,  1054,\n+  1056,  1058,  1065,  1067,  1068,  1069,  1074,  1076,  1081,  1089,\n+  1094,  1098,  1101,  1103,  1108,  1110,  1111,  1114,  1114,  1117,\n+  1120,  1122,  1124,  1127,  1129,  1132,  1138,  1140,  1144,  1158,\n+  1166,  1170,  1184,  1192,  1199,  1201,  1206,  1209,  1214,  1216,\n+  1218,  1225,  1227,  1235,  1241,  1246,  1248,  1250,  1257,  1259,\n+  1265,  1271,  1273,  1275,  1280,  1282,  1289,  1291,  1294,  1297,\n+  1301,  1304,  1308,  1311,  1315,  1320,  1322,  1326,  1328,  1330,\n+  1332,  1336,  1338,  1341,  1344,  1347,  1350,  1354,  1356,  1359,\n+  1361,  1366,  1369,  1374,  1376,  1378,  1392,  1399,  1404,  1410,\n+  1415,  1417,  1422,  1424,  1428,  1432,  1436,  1446,  1448,  1453,\n+  1458,  1461,  1465,  1468,  1472,  1475,  1478,  1481,  1485,  1488,\n+  1492,  1496,  1498,  1500,  1502,  1504,  1506,  1508,  1510,  1514,\n+  1522,  1530,  1532,  1534,  1538,  1540,  1543,  1546,  1557,  1559,\n+  1564,  1566,  1569,  1583,  1586,  1589,  1591,  1593,  1601,  1609,\n+  1619,  1637,  1642,  1647,  1650,  1664,  1673,  1677,  1681,  1685,\n+  1691,  1695,  1700,  1703,  1708,  1711,  1712,  1729,  1734,  1737,\n+  1749,  1751,  1761,  1771,  1772,  1780,  1783,  1795,  1799,  1816,\n+  1826,  1835,  1840,  1845,  1850,  1854,  1858,  1869,  1876,  1883,\n+  1890,  1901,  1907,  1910,  1915,  1938,  1972,  2003,  2034,  2049,\n+  2063,  2067,  2071,  2074,  2079,  2081,  2084,  2086,  2090,  2095,\n+  2098,  2104,  2109,  2114,  2116,  2125,  2126,  2132,  2134,  2144,\n+  2146,  2150,  2153,  2159,  2169,  2178,  2187,  2197,  2211,  2216,\n+  2221,  2223,  2232,  2235,  2240,  2243,  2247\n };\n #endif\n \n@@ -1256,7 +1255,7 @@ static const short yycheck[] = {    38,\n     53,    54\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 3 \"bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1449,7 +1448,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 196 \"bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1754,14 +1753,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 225 \"c-parse.y\"\n+#line 224 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 230 \"c-parse.y\"\n+#line 229 \"c-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -1771,15 +1770,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 244 \"c-parse.y\"\n+#line 243 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 245 \"c-parse.y\"\n+#line 244 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 9:\n-#line 252 \"c-parse.y\"\n+#line 251 \"c-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -1789,11 +1788,11 @@ case 9:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 10:\n-#line 260 \"c-parse.y\"\n+#line 259 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 11:\n-#line 265 \"c-parse.y\"\n+#line 264 \"c-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -1805,170 +1804,170 @@ case 11:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 12:\n-#line 275 \"c-parse.y\"\n+#line 274 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 13:\n-#line 280 \"c-parse.y\"\n+#line 279 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 14:\n-#line 285 \"c-parse.y\"\n+#line 284 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 15:\n-#line 287 \"c-parse.y\"\n+#line 286 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 18:\n-#line 291 \"c-parse.y\"\n+#line 290 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 19:\n-#line 297 \"c-parse.y\"\n+#line 296 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 20:\n-#line 302 \"c-parse.y\"\n+#line 301 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 21:\n-#line 304 \"c-parse.y\"\n+#line 303 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 22:\n-#line 310 \"c-parse.y\"\n+#line 309 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 23:\n-#line 315 \"c-parse.y\"\n+#line 314 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 24:\n-#line 320 \"c-parse.y\"\n+#line 319 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 25:\n-#line 322 \"c-parse.y\"\n+#line 321 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 26:\n-#line 328 \"c-parse.y\"\n+#line 327 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 27:\n-#line 333 \"c-parse.y\"\n+#line 332 \"c-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 28:\n-#line 338 \"c-parse.y\"\n+#line 337 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 29:\n-#line 340 \"c-parse.y\"\n+#line 339 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 30:\n-#line 346 \"c-parse.y\"\n+#line 345 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 33:\n-#line 358 \"c-parse.y\"\n+#line 357 \"c-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 34:\n-#line 360 \"c-parse.y\"\n+#line 359 \"c-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 35:\n-#line 362 \"c-parse.y\"\n+#line 361 \"c-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 36:\n-#line 364 \"c-parse.y\"\n+#line 363 \"c-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 37:\n-#line 366 \"c-parse.y\"\n+#line 365 \"c-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 38:\n-#line 368 \"c-parse.y\"\n+#line 367 \"c-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 39:\n-#line 370 \"c-parse.y\"\n+#line 369 \"c-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 40:\n-#line 374 \"c-parse.y\"\n+#line 373 \"c-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 41:\n-#line 379 \"c-parse.y\"\n+#line 378 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 43:\n-#line 385 \"c-parse.y\"\n+#line 384 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 387 \"c-parse.y\"\n+#line 386 \"c-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 46:\n-#line 393 \"c-parse.y\"\n+#line 392 \"c-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 47:\n-#line 396 \"c-parse.y\"\n+#line 395 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 48:\n-#line 399 \"c-parse.y\"\n+#line 398 \"c-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 49:\n-#line 403 \"c-parse.y\"\n+#line 402 \"c-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -1983,61 +1982,61 @@ case 49:\n \t\t;\n     break;}\n case 50:\n-#line 431 \"c-parse.y\"\n+#line 430 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 51:\n-#line 437 \"c-parse.y\"\n+#line 436 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 52:\n-#line 440 \"c-parse.y\"\n+#line 439 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 53:\n-#line 443 \"c-parse.y\"\n+#line 442 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 54:\n-#line 446 \"c-parse.y\"\n+#line 445 \"c-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 55:\n-#line 448 \"c-parse.y\"\n+#line 447 \"c-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 56:\n-#line 450 \"c-parse.y\"\n+#line 449 \"c-parse.y\"\n { yyval.ttype = build_va_arg (yyvsp[-3].ttype, groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 57:\n-#line 454 \"c-parse.y\"\n+#line 453 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 58:\n-#line 458 \"c-parse.y\"\n+#line 457 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 60:\n-#line 464 \"c-parse.y\"\n+#line 463 \"c-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 61:\n-#line 467 \"c-parse.y\"\n+#line 466 \"c-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 62:\n-#line 471 \"c-parse.y\"\n+#line 470 \"c-parse.y\"\n { char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -2064,90 +2063,90 @@ case 62:\n \t\t;\n     break;}\n case 64:\n-#line 500 \"c-parse.y\"\n+#line 499 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 65:\n-#line 502 \"c-parse.y\"\n+#line 501 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 66:\n-#line 504 \"c-parse.y\"\n+#line 503 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 67:\n-#line 506 \"c-parse.y\"\n+#line 505 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 508 \"c-parse.y\"\n+#line 507 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 510 \"c-parse.y\"\n+#line 509 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 512 \"c-parse.y\"\n+#line 511 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 514 \"c-parse.y\"\n+#line 513 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 516 \"c-parse.y\"\n+#line 515 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 518 \"c-parse.y\"\n+#line 517 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 520 \"c-parse.y\"\n+#line 519 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 522 \"c-parse.y\"\n+#line 521 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 76:\n-#line 524 \"c-parse.y\"\n+#line 523 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 77:\n-#line 527 \"c-parse.y\"\n+#line 526 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 78:\n-#line 530 \"c-parse.y\"\n+#line 529 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 79:\n-#line 533 \"c-parse.y\"\n+#line 532 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 80:\n-#line 536 \"c-parse.y\"\n+#line 535 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 81:\n-#line 539 \"c-parse.y\"\n+#line 538 \"c-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 82:\n-#line 542 \"c-parse.y\"\n+#line 541 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 83:\n-#line 545 \"c-parse.y\"\n+#line 544 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2156,12 +2155,12 @@ case 83:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 84:\n-#line 552 \"c-parse.y\"\n+#line 551 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 85:\n-#line 555 \"c-parse.y\"\n+#line 554 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n@@ -2171,7 +2170,7 @@ case 85:\n \t\t;\n     break;}\n case 86:\n-#line 563 \"c-parse.y\"\n+#line 562 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n@@ -2182,7 +2181,7 @@ case 86:\n \t\t;\n     break;}\n case 87:\n-#line 575 \"c-parse.y\"\n+#line 574 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2282,23 +2281,23 @@ case 87:\n \t\t;\n     break;}\n case 89:\n-#line 674 \"c-parse.y\"\n+#line 673 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 90:\n-#line 676 \"c-parse.y\"\n+#line 675 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 91:\n-#line 682 \"c-parse.y\"\n+#line 681 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 92:\n-#line 684 \"c-parse.y\"\n+#line 683 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2323,7 +2322,7 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 707 \"c-parse.y\"\n+#line 706 \"c-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2334,78 +2333,78 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 716 \"c-parse.y\"\n+#line 715 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 718 \"c-parse.y\"\n+#line 717 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 96:\n-#line 720 \"c-parse.y\"\n+#line 719 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 724 \"c-parse.y\"\n+#line 723 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 98:\n-#line 730 \"c-parse.y\"\n+#line 729 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 99:\n-#line 732 \"c-parse.y\"\n+#line 731 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 101:\n-#line 739 \"c-parse.y\"\n+#line 738 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 104:\n-#line 748 \"c-parse.y\"\n+#line 747 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 105:\n-#line 758 \"c-parse.y\"\n+#line 757 \"c-parse.y\"\n { ;\n     break;}\n case 110:\n-#line 774 \"c-parse.y\"\n+#line 773 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 111:\n-#line 779 \"c-parse.y\"\n+#line 778 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 112:\n-#line 784 \"c-parse.y\"\n+#line 783 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 787 \"c-parse.y\"\n+#line 786 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 114:\n-#line 796 \"c-parse.y\"\n+#line 795 \"c-parse.y\"\n { ;\n     break;}\n case 119:\n-#line 811 \"c-parse.y\"\n+#line 810 \"c-parse.y\"\n { yyval.itype = suspend_momentary ();\n \t\t  pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n@@ -2415,270 +2414,270 @@ case 119:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 120:\n-#line 822 \"c-parse.y\"\n+#line 821 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 121:\n-#line 827 \"c-parse.y\"\n+#line 826 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 122:\n-#line 832 \"c-parse.y\"\n+#line 831 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 123:\n-#line 837 \"c-parse.y\"\n+#line 836 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 124:\n-#line 842 \"c-parse.y\"\n+#line 841 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 125:\n-#line 847 \"c-parse.y\"\n+#line 846 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 126:\n-#line 849 \"c-parse.y\"\n+#line 848 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 127:\n-#line 851 \"c-parse.y\"\n+#line 850 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 128:\n-#line 861 \"c-parse.y\"\n+#line 860 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 129:\n-#line 863 \"c-parse.y\"\n+#line 862 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 130:\n-#line 867 \"c-parse.y\"\n+#line 866 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 131:\n-#line 869 \"c-parse.y\"\n+#line 868 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 871 \"c-parse.y\"\n+#line 870 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 876 \"c-parse.y\"\n+#line 875 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 134:\n-#line 881 \"c-parse.y\"\n+#line 880 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 135:\n-#line 883 \"c-parse.y\"\n+#line 882 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 136:\n-#line 888 \"c-parse.y\"\n+#line 887 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 137:\n-#line 890 \"c-parse.y\"\n+#line 889 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 892 \"c-parse.y\"\n+#line 891 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 139:\n-#line 905 \"c-parse.y\"\n+#line 904 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 140:\n-#line 907 \"c-parse.y\"\n+#line 906 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 141:\n-#line 909 \"c-parse.y\"\n+#line 908 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 911 \"c-parse.y\"\n+#line 910 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 916 \"c-parse.y\"\n+#line 915 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 144:\n-#line 919 \"c-parse.y\"\n+#line 918 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 145:\n-#line 921 \"c-parse.y\"\n+#line 920 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 146:\n-#line 924 \"c-parse.y\"\n+#line 923 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 147:\n-#line 938 \"c-parse.y\"\n+#line 937 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 148:\n-#line 940 \"c-parse.y\"\n+#line 939 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 149:\n-#line 944 \"c-parse.y\"\n+#line 943 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 150:\n-#line 946 \"c-parse.y\"\n+#line 945 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 956 \"c-parse.y\"\n+#line 955 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 154:\n-#line 960 \"c-parse.y\"\n+#line 959 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 155:\n-#line 962 \"c-parse.y\"\n+#line 961 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 984 \"c-parse.y\"\n+#line 983 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 164:\n-#line 986 \"c-parse.y\"\n+#line 985 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 165:\n-#line 993 \"c-parse.y\"\n+#line 992 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 166:\n-#line 998 \"c-parse.y\"\n+#line 997 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 167:\n-#line 1001 \"c-parse.y\"\n+#line 1000 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 168:\n-#line 1009 \"c-parse.y\"\n+#line 1008 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 169:\n-#line 1014 \"c-parse.y\"\n+#line 1013 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 170:\n-#line 1018 \"c-parse.y\"\n+#line 1017 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 171:\n-#line 1026 \"c-parse.y\"\n+#line 1025 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 172:\n-#line 1028 \"c-parse.y\"\n+#line 1027 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1033 \"c-parse.y\"\n+#line 1032 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 174:\n-#line 1035 \"c-parse.y\"\n+#line 1034 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 175:\n-#line 1040 \"c-parse.y\"\n+#line 1039 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 176:\n-#line 1045 \"c-parse.y\"\n+#line 1044 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 177:\n-#line 1047 \"c-parse.y\"\n+#line 1046 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 178:\n-#line 1052 \"c-parse.y\"\n+#line 1051 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1054 \"c-parse.y\"\n+#line 1053 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 180:\n-#line 1056 \"c-parse.y\"\n+#line 1055 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1058 \"c-parse.y\"\n+#line 1057 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 182:\n-#line 1060 \"c-parse.y\"\n+#line 1059 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 188:\n-#line 1078 \"c-parse.y\"\n+#line 1077 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE);\n \t\t  /* Note that the call to clear_momentary\n \t\t     is in process_init_element.  */\n \t\t  push_momentary (); ;\n     break;}\n case 189:\n-#line 1083 \"c-parse.y\"\n+#line 1082 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0);\n \t\t  if (yyval.ttype == error_mark_node\n \t\t      && ! (yychar == STRING || yychar == CONSTANT))\n@@ -2687,44 +2686,44 @@ case 189:\n \t\t    pop_momentary_nofree (); ;\n     break;}\n case 190:\n-#line 1091 \"c-parse.y\"\n+#line 1090 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 191:\n-#line 1097 \"c-parse.y\"\n+#line 1096 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 197:\n-#line 1113 \"c-parse.y\"\n+#line 1112 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 200:\n-#line 1120 \"c-parse.y\"\n+#line 1119 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 201:\n-#line 1122 \"c-parse.y\"\n+#line 1121 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 202:\n-#line 1124 \"c-parse.y\"\n+#line 1123 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 206:\n-#line 1135 \"c-parse.y\"\n+#line 1134 \"c-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 207:\n-#line 1140 \"c-parse.y\"\n+#line 1139 \"c-parse.y\"\n { set_init_index (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1142 \"c-parse.y\"\n+#line 1141 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 209:\n-#line 1147 \"c-parse.y\"\n+#line 1146 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2738,16 +2737,16 @@ case 209:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 210:\n-#line 1159 \"c-parse.y\"\n+#line 1158 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 211:\n-#line 1167 \"c-parse.y\"\n+#line 1166 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 212:\n-#line 1173 \"c-parse.y\"\n+#line 1172 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2761,371 +2760,371 @@ case 212:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 213:\n-#line 1185 \"c-parse.y\"\n+#line 1184 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 214:\n-#line 1193 \"c-parse.y\"\n+#line 1192 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 217:\n-#line 1209 \"c-parse.y\"\n+#line 1208 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 218:\n-#line 1211 \"c-parse.y\"\n+#line 1210 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 219:\n-#line 1216 \"c-parse.y\"\n+#line 1215 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 220:\n-#line 1218 \"c-parse.y\"\n+#line 1217 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 221:\n-#line 1220 \"c-parse.y\"\n+#line 1219 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 222:\n-#line 1227 \"c-parse.y\"\n+#line 1226 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 224:\n-#line 1238 \"c-parse.y\"\n+#line 1237 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 225:\n-#line 1243 \"c-parse.y\"\n+#line 1242 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 226:\n-#line 1248 \"c-parse.y\"\n+#line 1247 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 227:\n-#line 1250 \"c-parse.y\"\n+#line 1249 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 228:\n-#line 1252 \"c-parse.y\"\n+#line 1251 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 229:\n-#line 1259 \"c-parse.y\"\n+#line 1258 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 231:\n-#line 1268 \"c-parse.y\"\n+#line 1267 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1273 \"c-parse.y\"\n+#line 1272 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 233:\n-#line 1275 \"c-parse.y\"\n+#line 1274 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 234:\n-#line 1277 \"c-parse.y\"\n+#line 1276 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 235:\n-#line 1282 \"c-parse.y\"\n+#line 1281 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 236:\n-#line 1284 \"c-parse.y\"\n+#line 1283 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1291 \"c-parse.y\"\n+#line 1290 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 239:\n-#line 1297 \"c-parse.y\"\n+#line 1296 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 240:\n-#line 1299 \"c-parse.y\"\n+#line 1298 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 241:\n-#line 1304 \"c-parse.y\"\n+#line 1303 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 242:\n-#line 1306 \"c-parse.y\"\n+#line 1305 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 243:\n-#line 1311 \"c-parse.y\"\n+#line 1310 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 244:\n-#line 1313 \"c-parse.y\"\n+#line 1312 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 245:\n-#line 1318 \"c-parse.y\"\n+#line 1317 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 246:\n-#line 1322 \"c-parse.y\"\n+#line 1321 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 247:\n-#line 1324 \"c-parse.y\"\n+#line 1323 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 248:\n-#line 1328 \"c-parse.y\"\n+#line 1327 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 249:\n-#line 1330 \"c-parse.y\"\n+#line 1329 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 250:\n-#line 1332 \"c-parse.y\"\n+#line 1331 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 251:\n-#line 1334 \"c-parse.y\"\n+#line 1333 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 252:\n-#line 1338 \"c-parse.y\"\n+#line 1337 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 253:\n-#line 1340 \"c-parse.y\"\n+#line 1339 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 254:\n-#line 1343 \"c-parse.y\"\n+#line 1342 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-7].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 255:\n-#line 1346 \"c-parse.y\"\n+#line 1345 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 256:\n-#line 1349 \"c-parse.y\"\n+#line 1348 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-6].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 257:\n-#line 1352 \"c-parse.y\"\n+#line 1351 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 261:\n-#line 1363 \"c-parse.y\"\n+#line 1362 \"c-parse.y\"\n { if (pedantic && ! flag_isoc9x)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 262:\n-#line 1369 \"c-parse.y\"\n+#line 1368 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 263:\n-#line 1371 \"c-parse.y\"\n+#line 1370 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 264:\n-#line 1376 \"c-parse.y\"\n+#line 1375 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 265:\n-#line 1378 \"c-parse.y\"\n+#line 1377 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 266:\n-#line 1380 \"c-parse.y\"\n+#line 1379 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 267:\n-#line 1395 \"c-parse.y\"\n+#line 1394 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 268:\n-#line 1401 \"c-parse.y\"\n+#line 1400 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1406 \"c-parse.y\"\n+#line 1405 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 270:\n-#line 1412 \"c-parse.y\"\n+#line 1411 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1417 \"c-parse.y\"\n+#line 1416 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 272:\n-#line 1419 \"c-parse.y\"\n+#line 1418 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 274:\n-#line 1426 \"c-parse.y\"\n+#line 1425 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1431 \"c-parse.y\"\n+#line 1430 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1435 \"c-parse.y\"\n+#line 1434 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 277:\n-#line 1438 \"c-parse.y\"\n+#line 1437 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 279:\n-#line 1450 \"c-parse.y\"\n+#line 1449 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 280:\n-#line 1455 \"c-parse.y\"\n+#line 1454 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 281:\n-#line 1461 \"c-parse.y\"\n+#line 1460 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 282:\n-#line 1463 \"c-parse.y\"\n+#line 1462 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1468 \"c-parse.y\"\n+#line 1467 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1470 \"c-parse.y\"\n+#line 1469 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 285:\n-#line 1475 \"c-parse.y\"\n+#line 1474 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 287:\n-#line 1481 \"c-parse.y\"\n+#line 1480 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1483 \"c-parse.y\"\n+#line 1482 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 289:\n-#line 1488 \"c-parse.y\"\n+#line 1487 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 290:\n-#line 1490 \"c-parse.y\"\n+#line 1489 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 291:\n-#line 1495 \"c-parse.y\"\n+#line 1494 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 292:\n-#line 1498 \"c-parse.y\"\n+#line 1497 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 293:\n-#line 1500 \"c-parse.y\"\n+#line 1499 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1502 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 295:\n-#line 1504 \"c-parse.y\"\n+#line 1503 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 296:\n-#line 1506 \"c-parse.y\"\n+#line 1505 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1508 \"c-parse.y\"\n+#line 1507 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 298:\n-#line 1510 \"c-parse.y\"\n+#line 1509 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 299:\n-#line 1512 \"c-parse.y\"\n+#line 1511 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1516 \"c-parse.y\"\n+#line 1515 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 301:\n-#line 1525 \"c-parse.y\"\n+#line 1524 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 303:\n-#line 1534 \"c-parse.y\"\n+#line 1533 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 304:\n-#line 1536 \"c-parse.y\"\n+#line 1535 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 308:\n-#line 1548 \"c-parse.y\"\n+#line 1547 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3134,12 +3133,12 @@ case 308:\n \t\t;\n     break;}\n case 310:\n-#line 1561 \"c-parse.y\"\n+#line 1560 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 313:\n-#line 1572 \"c-parse.y\"\n+#line 1571 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3150,19 +3149,19 @@ case 313:\n \t\t;\n     break;}\n case 314:\n-#line 1586 \"c-parse.y\"\n+#line 1585 \"c-parse.y\"\n {;\n     break;}\n case 316:\n-#line 1590 \"c-parse.y\"\n+#line 1589 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 317:\n-#line 1593 \"c-parse.y\"\n+#line 1592 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 318:\n-#line 1595 \"c-parse.y\"\n+#line 1594 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3172,7 +3171,7 @@ case 318:\n \t\t    pop_momentary (); ;\n     break;}\n case 319:\n-#line 1603 \"c-parse.y\"\n+#line 1602 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3182,7 +3181,7 @@ case 319:\n \t\t    pop_momentary (); ;\n     break;}\n case 320:\n-#line 1611 \"c-parse.y\"\n+#line 1610 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3192,7 +3191,7 @@ case 320:\n \t\t    pop_momentary (); ;\n     break;}\n case 321:\n-#line 1622 \"c-parse.y\"\n+#line 1621 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3210,11 +3209,11 @@ case 321:\n \t\t;\n     break;}\n case 322:\n-#line 1639 \"c-parse.y\"\n+#line 1638 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 325:\n-#line 1653 \"c-parse.y\"\n+#line 1652 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3224,7 +3223,7 @@ case 325:\n \t\t  position_after_white_space (); ;\n     break;}\n case 326:\n-#line 1667 \"c-parse.y\"\n+#line 1666 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3234,43 +3233,43 @@ case 326:\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1675 \"c-parse.y\"\n+#line 1674 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 328:\n-#line 1679 \"c-parse.y\"\n+#line 1678 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 329:\n-#line 1683 \"c-parse.y\"\n+#line 1682 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 330:\n-#line 1688 \"c-parse.y\"\n+#line 1687 \"c-parse.y\"\n { ;\n     break;}\n case 331:\n-#line 1693 \"c-parse.y\"\n+#line 1692 \"c-parse.y\"\n { ;\n     break;}\n case 332:\n-#line 1698 \"c-parse.y\"\n+#line 1697 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 333:\n-#line 1703 \"c-parse.y\"\n+#line 1702 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 334:\n-#line 1705 \"c-parse.y\"\n+#line 1704 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 335:\n-#line 1711 \"c-parse.y\"\n+#line 1710 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 337:\n-#line 1714 \"c-parse.y\"\n+#line 1713 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3289,19 +3288,19 @@ case 337:\n \t\t  clear_momentary (); ;\n     break;}\n case 338:\n-#line 1731 \"c-parse.y\"\n+#line 1730 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 339:\n-#line 1735 \"c-parse.y\"\n+#line 1734 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 340:\n-#line 1739 \"c-parse.y\"\n+#line 1738 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3312,11 +3311,11 @@ case 340:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 341:\n-#line 1751 \"c-parse.y\"\n+#line 1750 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 342:\n-#line 1753 \"c-parse.y\"\n+#line 1752 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3328,7 +3327,7 @@ case 342:\n \t\t  emit_nop (); ;\n     break;}\n case 343:\n-#line 1763 \"c-parse.y\"\n+#line 1762 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3339,24 +3338,24 @@ case 343:\n \t\t  position_after_white_space (); ;\n     break;}\n case 344:\n-#line 1772 \"c-parse.y\"\n+#line 1771 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 345:\n-#line 1775 \"c-parse.y\"\n+#line 1774 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 346:\n-#line 1782 \"c-parse.y\"\n+#line 1781 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 347:\n-#line 1786 \"c-parse.y\"\n+#line 1785 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3369,12 +3368,12 @@ case 347:\n \t\t;\n     break;}\n case 348:\n-#line 1798 \"c-parse.y\"\n+#line 1797 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 349:\n-#line 1801 \"c-parse.y\"\n+#line 1800 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3392,7 +3391,7 @@ case 349:\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1817 \"c-parse.y\"\n+#line 1816 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3405,7 +3404,7 @@ case 350:\n \t\t  expand_end_loop (); ;\n     break;}\n case 351:\n-#line 1828 \"c-parse.y\"\n+#line 1827 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3415,41 +3414,41 @@ case 351:\n \t\t  position_after_white_space (); ;\n     break;}\n case 352:\n-#line 1836 \"c-parse.y\"\n+#line 1835 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 353:\n-#line 1842 \"c-parse.y\"\n+#line 1841 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 354:\n-#line 1847 \"c-parse.y\"\n+#line 1846 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 355:\n-#line 1852 \"c-parse.y\"\n+#line 1851 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 356:\n-#line 1856 \"c-parse.y\"\n+#line 1855 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 357:\n-#line 1860 \"c-parse.y\"\n+#line 1859 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3461,31 +3460,31 @@ case 357:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 358:\n-#line 1871 \"c-parse.y\"\n+#line 1870 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 359:\n-#line 1878 \"c-parse.y\"\n+#line 1877 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 360:\n-#line 1886 \"c-parse.y\"\n+#line 1885 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 361:\n-#line 1892 \"c-parse.y\"\n+#line 1891 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3498,15 +3497,15 @@ case 361:\n \t\t;\n     break;}\n case 362:\n-#line 1903 \"c-parse.y\"\n+#line 1902 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 365:\n-#line 1918 \"c-parse.y\"\n+#line 1917 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3529,14 +3528,14 @@ case 365:\n \t  ;\n     break;}\n case 366:\n-#line 1939 \"c-parse.y\"\n+#line 1938 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 367:\n-#line 1974 \"c-parse.y\"\n+#line 1973 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3569,7 +3568,7 @@ case 367:\n \t\t  position_after_white_space (); ;\n     break;}\n case 368:\n-#line 2005 \"c-parse.y\"\n+#line 2004 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3602,7 +3601,7 @@ case 368:\n \t\t  position_after_white_space (); ;\n     break;}\n case 369:\n-#line 2036 \"c-parse.y\"\n+#line 2035 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3619,7 +3618,7 @@ case 369:\n \t\t  position_after_white_space (); ;\n     break;}\n case 370:\n-#line 2051 \"c-parse.y\"\n+#line 2050 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3631,52 +3630,52 @@ case 370:\n \t\t  position_after_white_space (); ;\n     break;}\n case 371:\n-#line 2066 \"c-parse.y\"\n+#line 2065 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 372:\n-#line 2069 \"c-parse.y\"\n+#line 2068 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 373:\n-#line 2074 \"c-parse.y\"\n+#line 2073 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 375:\n-#line 2081 \"c-parse.y\"\n+#line 2080 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 378:\n-#line 2088 \"c-parse.y\"\n+#line 2087 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 379:\n-#line 2093 \"c-parse.y\"\n+#line 2092 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 380:\n-#line 2098 \"c-parse.y\"\n+#line 2097 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 381:\n-#line 2100 \"c-parse.y\"\n+#line 2099 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 382:\n-#line 2106 \"c-parse.y\"\n+#line 2105 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 383:\n-#line 2110 \"c-parse.y\"\n+#line 2109 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 385:\n-#line 2118 \"c-parse.y\"\n+#line 2117 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3686,19 +3685,19 @@ case 385:\n \t\t  clear_parm_order (); ;\n     break;}\n case 386:\n-#line 2126 \"c-parse.y\"\n+#line 2125 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 387:\n-#line 2128 \"c-parse.y\"\n+#line 2127 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 388:\n-#line 2134 \"c-parse.y\"\n+#line 2133 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 389:\n-#line 2136 \"c-parse.y\"\n+#line 2135 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3710,23 +3709,23 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 2146 \"c-parse.y\"\n+#line 2145 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 391:\n-#line 2148 \"c-parse.y\"\n+#line 2147 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 392:\n-#line 2153 \"c-parse.y\"\n+#line 2152 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 393:\n-#line 2155 \"c-parse.y\"\n+#line 2154 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2162 \"c-parse.y\"\n+#line 2161 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3737,7 +3736,7 @@ case 394:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 395:\n-#line 2171 \"c-parse.y\"\n+#line 2170 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3748,7 +3747,7 @@ case 395:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 396:\n-#line 2180 \"c-parse.y\"\n+#line 2179 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3759,7 +3758,7 @@ case 396:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 397:\n-#line 2189 \"c-parse.y\"\n+#line 2188 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3770,7 +3769,7 @@ case 397:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 398:\n-#line 2199 \"c-parse.y\"\n+#line 2198 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3781,49 +3780,49 @@ case 398:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 399:\n-#line 2213 \"c-parse.y\"\n+#line 2212 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 400:\n-#line 2217 \"c-parse.y\"\n+#line 2216 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 402:\n-#line 2225 \"c-parse.y\"\n+#line 2224 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 403:\n-#line 2235 \"c-parse.y\"\n+#line 2234 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2237 \"c-parse.y\"\n+#line 2236 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 405:\n-#line 2243 \"c-parse.y\"\n+#line 2242 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 406:\n-#line 2245 \"c-parse.y\"\n+#line 2244 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 407:\n-#line 2250 \"c-parse.y\"\n+#line 2249 \"c-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 498 \"bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4019,5 +4018,5 @@ case 407:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2254 \"c-parse.y\"\n+#line 2253 \"c-parse.y\"\n "}, {"sha": "9736b283df1552b4e4ba6adbcf72f29f33b20eda", "filename": "gcc/c-parse.y", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -34,7 +34,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include <setjmp.h>\n-\n #include \"tree.h\"\n #include \"input.h\"\n #include \"c-lex.h\""}, {"sha": "fcec1c619a88ce96f82a87097f6c1e8e021463b2", "filename": "gcc/cccp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -10073,9 +10073,9 @@ initialize_char_syntax ()\n    * refer to them.\n    */\n   for (i = 'a'; i <= 'z'; i++) {\n-    is_idchar[i - 'a' + 'A'] = 1;\n+    is_idchar[toupper(i)] = 1;\n     is_idchar[i] = 1;\n-    is_idstart[i - 'a' + 'A'] = 1;\n+    is_idstart[toupper(i)] = 1;\n     is_idstart[i] = 1;\n   }\n   for (i = '0'; i <= '9'; i++)"}, {"sha": "82fcc795765a6e9c26b57bed2a26ffa75883beec", "filename": "gcc/cexp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1769,7 +1769,7 @@ parse_escape (string_ptr, result_mask)\n     case 'E':\n       if (pedantic)\n \tpedwarn (\"non-ANSI-standard escape sequence, `\\\\%c'\", c);\n-      return 033;\n+      return TARGET_ESC;\n     case 'f':\n       return TARGET_FF;\n     case 'n':\n@@ -2029,9 +2029,9 @@ initialize_random_junk ()\n    * refer to them.\n    */\n   for (i = 'a'; i <= 'z'; i++) {\n-    ++is_idchar[i - 'a' + 'A'];\n+    ++is_idchar[toupper(i)];\n     ++is_idchar[i];\n-    ++is_idstart[i - 'a' + 'A'];\n+    ++is_idstart[toupper(i)];\n     ++is_idstart[i];\n   }\n   for (i = '0'; i <= '9'; i++)"}, {"sha": "e7372aa3ac8698f5ff27571696e4e4dff699d817", "filename": "gcc/cexp.y", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -853,7 +853,7 @@ parse_escape (string_ptr, result_mask)\n     case 'E':\n       if (pedantic)\n \tpedwarn (\"non-ANSI-standard escape sequence, `\\\\%c'\", c);\n-      return 033;\n+      return TARGET_ESC;\n     case 'f':\n       return TARGET_FF;\n     case 'n':\n@@ -1113,9 +1113,9 @@ initialize_random_junk ()\n    * refer to them.\n    */\n   for (i = 'a'; i <= 'z'; i++) {\n-    ++is_idchar[i - 'a' + 'A'];\n+    ++is_idchar[toupper(i)];\n     ++is_idchar[i];\n-    ++is_idstart[i - 'a' + 'A'];\n+    ++is_idstart[toupper(i)];\n     ++is_idstart[i];\n   }\n   for (i = '0'; i <= '9'; i++)"}, {"sha": "330236ebeb785aab7f95d9bc75cef610a70f0558", "filename": "gcc/cppexp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -532,7 +532,7 @@ cpp_parse_escape (pfile, string_ptr, result_mask)\n     case 'E':\n       if (CPP_OPTIONS (pfile)->pedantic)\n \tcpp_pedwarn (pfile, \"non-ANSI-standard escape sequence, `\\\\%c'\", c);\n-      return 033;\n+      return TARGET_ESC;\n     case 'f':\n       return TARGET_FF;\n     case 'n':"}, {"sha": "05adff842d9b576c8f698e6d7792d1b99da547f7", "filename": "gcc/defaults.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -169,3 +169,8 @@ do { fprintf (FILE, \"\\t%s\\t\", ASM_LONG);\t\t\t\t\\\n #ifndef PROMOTE_PROTOTYPES\n #define PROMOTE_PROTOTYPES\t0\n #endif\n+\n+/* Define a default escape character; its different for EBCDIC.  */\n+#ifndef TARGET_ESC\n+#define TARGET_ESC 033\n+#endif"}, {"sha": "1d30f0d662ac3db2378fac0148ea4a4cd8918760", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -480,7 +480,7 @@ static void dwarf2out_frame_debug_expr\tPROTO((rtx, char *));\n \t  register int c = p[i];\t\t\t\t\t      \\\n \t  if (c == '\\\"' || c == '\\\\')\t\t\t\t\t      \\\n \t    putc ('\\\\', FILE);\t\t\t\t\t              \\\n-\t  if (c >= ' ' && c < 0177)\t\t\t\t\t      \\\n+\t  if (ISPRINT(c)) \t\t\t\t\t\t      \\\n \t    putc (c, FILE);\t\t\t\t\t              \\\n \t  else\t\t\t\t\t\t\t\t      \\\n \t    {\t\t\t\t\t\t\t\t      \\"}, {"sha": "f9501eda39ebcec1fdcdf509b518db49271c9355", "filename": "gcc/genattr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -87,8 +87,8 @@ write_upcase (str)\n     char *str;\n {\n   for (; *str; str++)\n-    if (*str >= 'a' && *str <= 'z')\n-      printf (\"%c\", *str - 'a' + 'A');\n+    if (ISLOWER(*str))\n+      printf (\"%c\", toupper(*str));\n     else\n       printf (\"%c\", *str);\n }\n@@ -120,8 +120,8 @@ gen_attr (attr)\n \t      write_upcase (XSTR (attr, 0));\n \t      printf (\"_\");\n \t    }\n-\t  else if (*p >= 'a' && *p <= 'z')\n-\t    printf (\"%c\", *p - 'a' + 'A');\n+\t  else if (ISLOWER(*p))\n+\t    printf (\"%c\", toupper(*p));\n \t  else\n \t    printf (\"%c\", *p);\n \t}"}, {"sha": "dd16a132c8a075747326450c28d5eec7e8ca2cd3", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1357,8 +1357,8 @@ convert_const_symbol_ref (exp, attr)\n       strcat (p, \"_\");\n       strcat (p, XSTR (av->value, 0));\n       for (; *p != '\\0'; p++)\n-\tif (*p >= 'a' && *p <= 'z')\n-\t  *p -= 'a' - 'A';\n+\tif (ISLOWER(*p))\n+\t  *p = toupper (*p);\n \n       value = attr_rtx (SYMBOL_REF, string);\n       RTX_UNCHANGING_P (value) = 1;\n@@ -2841,8 +2841,8 @@ evaluate_eq_attr (exp, value, insn_code, insn_index)\n       strcat (string, \"_\");\n       strcat (string, XSTR (exp, 1));\n       for (p = string; *p ; p++)\n-\tif (*p >= 'a' && *p <= 'z')\n-\t  *p -= 'a' - 'A';\n+\tif (ISLOWER(*p))\n+\t  *p = toupper (*p);\n       \n       newexp = attr_rtx (EQ, value,\n \t\t\t attr_rtx (SYMBOL_REF,\n@@ -5357,10 +5357,10 @@ write_upcase (str)\n      char *str;\n {\n   while (*str)\n-    if (*str < 'a' || *str > 'z')\n-      printf (\"%c\", *str++);\n+    if (ISLOWER(*str))\n+      printf (\"%c\", toupper(*str++));\n     else\n-      printf (\"%c\", *str++ - 'a' + 'A');\n+      printf (\"%c\", *str++);\n }\n \n static void"}, {"sha": "747001bb1aa8185dfde4173e2e231c626b6342c7", "filename": "gcc/genemit.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -139,8 +139,8 @@ print_code (code)\n   register const char *p1;\n   for (p1 = GET_RTX_NAME (code); *p1; p1++)\n     {\n-      if (*p1 >= 'a' && *p1 <= 'z')\n-\tputchar (*p1 + 'A' - 'a');\n+      if (ISLOWER(*p1))\n+\tputchar (toupper(*p1));\n       else\n \tputchar (*p1);\n     }"}, {"sha": "e5c528bc19e831793a7acfbcb629b8b54515e3d1", "filename": "gcc/genextract.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -321,9 +321,9 @@ print_path (path)\n \n   for (i = len - 1; i >=0 ; i--)\n     {\n-      if (path[i] >= 'a' && path[i] <= 'z')\n+      if (ISLOWER(path[i]))\n \tprintf (\"XVECEXP (\");\n-      else if (path[i] >= '0' && path[i] <= '9')\n+      else if (ISDIGIT(path[i]))\n \tprintf (\"XEXP (\");\n       else\n \tabort ();\n@@ -333,9 +333,9 @@ print_path (path)\n \n   for (i = 0; i < len; i++)\n     {\n-      if (path[i] >= 'a' && path[i] <= 'z')\n+      if (ISLOWER(path[i]))\n \tprintf (\", 0, %d)\", path[i] - 'a');\n-      else if (path[i] >= '0' && path[i] <= '9')\n+      else if (ISDIGIT(path[i]))\n \tprintf (\", %d)\", path[i] - '0');\n       else\n \tabort ();"}, {"sha": "b20c0365a3ff80b3384effdd4cf60d4e5f4c7529", "filename": "gcc/genpeep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -374,8 +374,8 @@ print_code (code)\n   register const char *p1;\n   for (p1 = GET_RTX_NAME (code); *p1; p1++)\n     {\n-      if (*p1 >= 'a' && *p1 <= 'z')\n-\tputchar (*p1 + 'A' - 'a');\n+      if (ISLOWER(*p1))\n+\tputchar (toupper(*p1));\n       else\n \tputchar (*p1);\n     }"}, {"sha": "4437432d7b0d8d97a58ddc28f00c2ffc9e97123b", "filename": "gcc/genrecog.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -1640,8 +1640,8 @@ print_code (code)\n   register const char *p1;\n   for (p1 = GET_RTX_NAME (code); *p1; p1++)\n     {\n-      if (*p1 >= 'a' && *p1 <= 'z')\n-\tputchar (*p1 + 'A' - 'a');\n+      if (ISLOWER(*p1))\n+\tputchar (toupper(*p1));\n       else\n \tputchar (*p1);\n     }"}, {"sha": "aa44c1d9646162dd77a01dfc3ab60f092f8714be", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -83,7 +83,7 @@ extern int fputs_unlocked PROTO ((const char *, FILE *));\n    character >= 128 which gets sign-extended to a negative value.\n    The macro ISUPPER protects against this as well.\"  */\n \n-#if defined (STDC_HEADERS) || (!defined (isascii) && !defined (HAVE_ISASCII))\n+#if defined (STDC_HEADERS) || (!defined (isascii) && !defined (HAVE_ISASCII)) || defined(HOST_EBCDIC)\n # define IN_CTYPE_DOMAIN(c) 1\n #else\n # define IN_CTYPE_DOMAIN(c) isascii(c)\n@@ -121,7 +121,6 @@ extern int fputs_unlocked PROTO ((const char *, FILE *));\n    host does not conform to Posix.  */\n #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)\n \n-\n #ifdef HAVE_SYS_TYPES_H\n #include <sys/types.h>\n #endif"}, {"sha": "809426a75e22d2d250bcdd808ca857b838c5a330", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f3ad1f9c0d8f61ccd729b0b9687944856dd9cf07", "patch": "@@ -4878,7 +4878,7 @@ get_file_function_name_long (type)\n   if (p != first_global_object_name)\n     {\n       for (p = buf+11; *p; p++)\n-\tif (! ((*p >= '0' && *p <= '9')\n+\tif (! ( ISDIGIT(*p)\n #if 0 /* we always want labels, which are valid C++ identifiers (+ `$') */\n #ifndef ASM_IDENTIFY_GCC\t/* this is required if `.' is invalid -- k. raeburn */\n \t       || *p == '.'\n@@ -4890,8 +4890,8 @@ get_file_function_name_long (type)\n #ifndef NO_DOT_IN_LABEL\t\t/* this for `.'; unlikely, but...  */\n \t       || *p == '.'\n #endif\n-\t       || (*p >= 'A' && *p <= 'Z')\n-\t       || (*p >= 'a' && *p <= 'z')))\n+\t       || ISUPPER(*p)\n+\t       || ISLOWER(*p)))\n \t  *p = '_';\n     }\n "}]}