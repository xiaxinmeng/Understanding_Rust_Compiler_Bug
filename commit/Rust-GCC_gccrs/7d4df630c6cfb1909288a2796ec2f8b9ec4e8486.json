{"sha": "7d4df630c6cfb1909288a2796ec2f8b9ec4e8486", "node_id": "C_kwDOANBUbNoAKDdkNGRmNjMwYzZjZmIxOTA5Mjg4YTI3OTZlYzJmOGI5ZWM0ZTg0ODY", "commit": {"author": {"name": "Vineet Gupta", "email": "vineetg@rivosinc.com", "date": "2022-09-02T23:08:20Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-09-23T15:51:42Z"}, "message": "RISC-V: make USE_LOAD_ADDRESS_MACRO easier to understand\n\nThe current macro has several && and || making it really hard to understand\nthe first time.\n\nSigned-off-by: Vineet Gupta <vineetg@rivosinc.com>\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.h (LOCAL_SYM_P): New.\n\t(USE_LOAD_ADDRESS_MACRO): Simplify by calling LOCAL_SYM_P.", "tree": {"sha": "c8d9c2e95959b524c804f0fabf970c43574381fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8d9c2e95959b524c804f0fabf970c43574381fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486/comments", "author": null, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2fe02b476afc1cddb3abcf26ec4b1e072a9401b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fe02b476afc1cddb3abcf26ec4b1e072a9401b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2fe02b476afc1cddb3abcf26ec4b1e072a9401b"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "363113c6511f32592a501c90c2fbc855aed1b750", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4df630c6cfb1909288a2796ec2f8b9ec4e8486/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=7d4df630c6cfb1909288a2796ec2f8b9ec4e8486", "patch": "@@ -749,18 +749,19 @@ typedef struct {\n #define CASE_VECTOR_MODE SImode\n #define CASE_VECTOR_PC_RELATIVE (riscv_cmodel != CM_MEDLOW)\n \n+#define LOCAL_SYM_P(sym)\t\t\t\t\t\t\\\n+     ((SYMBOL_REF_P (sym) && SYMBOL_REF_LOCAL_P (sym))\t\t\t\\\n+\t || ((GET_CODE (sym) == CONST)\t\t\t\t\t\\\n+\t     && SYMBOL_REF_P (XEXP (XEXP (sym, 0),0))\t\t\t\\\n+\t     && SYMBOL_REF_LOCAL_P (XEXP (XEXP (sym, 0),0))))\n+\n /* The load-address macro is used for PC-relative addressing of symbols\n    that bind locally.  Don't use it for symbols that should be addressed\n    via the GOT.  Also, avoid it for CM_MEDLOW, where LUI addressing\n    currently results in more opportunities for linker relaxation.  */\n #define USE_LOAD_ADDRESS_MACRO(sym)\t\t\t\t\t\\\n   (!TARGET_EXPLICIT_RELOCS &&\t\t\t\t\t\t\\\n-   ((flag_pic\t\t\t\t\t\t\t\t\\\n-     && ((SYMBOL_REF_P (sym) && SYMBOL_REF_LOCAL_P (sym))\t\t\\\n-\t || ((GET_CODE (sym) == CONST)\t\t\t\t\t\\\n-\t     && SYMBOL_REF_P (XEXP (XEXP (sym, 0),0))\t\t\t\\\n-\t     && SYMBOL_REF_LOCAL_P (XEXP (XEXP (sym, 0),0)))))\t\t\\\n-     || riscv_cmodel == CM_MEDANY))\n+   ((flag_pic && LOCAL_SYM_P (sym)) || riscv_cmodel == CM_MEDANY))\n \n /* Define this as 1 if `char' should by default be signed; else as 0.  */\n #define DEFAULT_SIGNED_CHAR 0"}]}