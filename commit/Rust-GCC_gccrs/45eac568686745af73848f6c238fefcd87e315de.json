{"sha": "45eac568686745af73848f6c238fefcd87e315de", "node_id": "C_kwDOANBUbNoAKDQ1ZWFjNTY4Njg2NzQ1YWY3Mzg0OGY2YzIzOGZlZmNkODdlMzE1ZGU", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-02T14:18:40Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-02T14:18:40Z"}, "message": "lexer: Add reference and warning documentation\n\nFixes the -fself-test invalid memory accesses and adds documentation\nregarding a possible future fix.\n\nCo-authored-by: tschwinge <thomas@schwinge.name>\nCo-authored-by: philberty <philip.herron@embecosm.com>", "tree": {"sha": "d10f25c6473712c0709ca854b763f06952142896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d10f25c6473712c0709ca854b763f06952142896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45eac568686745af73848f6c238fefcd87e315de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45eac568686745af73848f6c238fefcd87e315de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45eac568686745af73848f6c238fefcd87e315de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45eac568686745af73848f6c238fefcd87e315de/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf9f8c99c5813a23d7cec473fedf00683f409e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf9f8c99c5813a23d7cec473fedf00683f409e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf9f8c99c5813a23d7cec473fedf00683f409e4"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "039c783c56410e727d7c3b5606ec73ab30f4c872", "filename": "gcc/rust/lex/rust-lex.h", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45eac568686745af73848f6c238fefcd87e315de/gcc%2Frust%2Flex%2Frust-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45eac568686745af73848f6c238fefcd87e315de/gcc%2Frust%2Flex%2Frust-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.h?ref=45eac568686745af73848f6c238fefcd87e315de", "patch": "@@ -144,7 +144,30 @@ class Lexer\n   /**\n    * Lex the contents of a string instead of a file\n    */\n-  static Lexer lex_string (std::string input)\n+  // FIXME: This is unsafe!\n+  // Since we are taking a reference to the string's internal buffer, we must\n+  // ensure that the lexer does not outlive the string, which might not always\n+  // be the case.\n+  //\n+  // We could have a fix, which would include using fmemopen() to allocate a\n+  // buffer and copy the string inside it.\n+  // ```\n+  // // There will be an extra nul-terminator byte written on fclose(), so\n+  // // account for that\n+  // auto string_file = fmemopen(NULL, input.length() + 1, \"wr\");\n+  // fwrite(input.c_str(), sizeof(char), input.length(), string_file);\n+  // auto wrapper = RAIIFile(string_file);\n+  // ```\n+  // But sadly our RAIIFile does not support moving really well... And the\n+  // destructor, which calls fclose(), gets called, triggering a lack of a\n+  // buffer to parse :)\n+  //\n+  // We need to look into fixing the RAIIFile so that it supports this\n+  // behaviour. I'm assuming this will be something like fixing one of the copy\n+  // or move constructors, but is outside of the scope of this fix. For now,\n+  // make sure your lexers don't live longer than the strings they're trying\n+  // to lex\n+  static Lexer lex_string (std::string &input)\n   {\n     // We can perform this ugly cast to a non-const char* since we're only\n     // *reading* the string. This would not be valid if we were doing any"}]}