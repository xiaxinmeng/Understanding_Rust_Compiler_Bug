{"sha": "17258c94f8c996c26ccde103afd1c0a8a343301b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyNThjOTRmOGM5OTZjMjZjY2RlMTAzYWZkMWMwYThhMzQzMzAxYg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-12T16:44:03Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-12T16:44:03Z"}, "message": "Enhance TyTy::ParamType::is_equal\n\nParamTypes are a strange case because we can say a type parameter T\nwas substituted by an i32 so if you do an is_equal for:\n\n  T:i32 vs i32\n\nThe type kinds won't match but they are equal in the actual type they\nrepresent. The missing piece was that Type parameters can match each other\nif their symbols match.", "tree": {"sha": "6873a159f54d69e673fdb9191a751705872b7656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6873a159f54d69e673fdb9191a751705872b7656"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17258c94f8c996c26ccde103afd1c0a8a343301b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17258c94f8c996c26ccde103afd1c0a8a343301b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17258c94f8c996c26ccde103afd1c0a8a343301b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17258c94f8c996c26ccde103afd1c0a8a343301b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "decdb126e54b0c45b31ba1fa1d1c96262cafb8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/decdb126e54b0c45b31ba1fa1d1c96262cafb8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/decdb126e54b0c45b31ba1fa1d1c96262cafb8e0"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "551042a97889cb289082fe814f6b07a97f42c349", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17258c94f8c996c26ccde103afd1c0a8a343301b/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17258c94f8c996c26ccde103afd1c0a8a343301b/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=17258c94f8c996c26ccde103afd1c0a8a343301b", "patch": "@@ -1390,10 +1390,22 @@ ParamType::resolve () const\n bool\n ParamType::is_equal (const BaseType &other) const\n {\n-  if (!can_resolve ())\n-    return BaseType::is_equal (other);\n+  if (get_kind () != other.get_kind ())\n+    {\n+      if (!can_resolve ())\n+\treturn false;\n+\n+      return resolve ()->is_equal (other);\n+    }\n+\n+  auto other2 = static_cast<const ParamType &> (other);\n+  if (can_resolve () != other2.can_resolve ())\n+    return false;\n+\n+  if (can_resolve ())\n+    return resolve ()->can_eq (other2.resolve ());\n \n-  return resolve ()->is_equal (other);\n+  return get_symbol ().compare (other2.get_symbol ()) == 0;\n }\n \n ParamType *"}]}