{"sha": "e78f1a3f6710a19026c9746cdea6a7df25956bba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4ZjFhM2Y2NzEwYTE5MDI2Yzk3NDZjZGVhNmE3ZGYyNTk1NmJiYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-08-04T23:32:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-08-04T23:32:08Z"}, "message": "re PR debug/45171 (Invalid DWARF...DIE 0x00006a1d has multiple  AT_byte_size attributes.)\n\nPR debug/45171\n* dwarf2out.c (gen_typedef_die): Don't re-generate the die of\nan is_naming_typedef_decl.\n\nFrom-SVN: r162882", "tree": {"sha": "13236b211e435781d93b695c641cf2855a836389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13236b211e435781d93b695c641cf2855a836389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78f1a3f6710a19026c9746cdea6a7df25956bba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78f1a3f6710a19026c9746cdea6a7df25956bba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78f1a3f6710a19026c9746cdea6a7df25956bba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78f1a3f6710a19026c9746cdea6a7df25956bba/comments", "author": null, "committer": null, "parents": [{"sha": "fde157f2ed3550acb3de83440e33c919cf7942c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde157f2ed3550acb3de83440e33c919cf7942c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde157f2ed3550acb3de83440e33c919cf7942c0"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "84ef88723153f5052c20fbe007c9b18c02ad7585", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e78f1a3f6710a19026c9746cdea6a7df25956bba", "patch": "@@ -1,3 +1,9 @@\n+2010-08-04  Richard Henderson  <rth@redhat.com>\n+\n+\tPR debug/45171\n+\t* dwarf2out.c (gen_typedef_die): Don't re-generate the die of\n+\tan is_naming_typedef_decl.\n+\n 2010-08-04  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR rtl-optimization/45162"}, {"sha": "651642af507c8d4fce353f345763be5ad837bfca", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=e78f1a3f6710a19026c9746cdea6a7df25956bba", "patch": "@@ -19785,22 +19785,24 @@ gen_typedef_die (tree decl, dw_die_ref context_die)\n \t  type = TREE_TYPE (decl);\n \n \t  if (is_naming_typedef_decl (TYPE_NAME (type)))\n-\t    /* \n-\t       Here, we are in the case of decl being a typedef naming\n-\t       an anonymous type, e.g:\n+\t    {\n+\t      /* Here, we are in the case of decl being a typedef naming\n+\t         an anonymous type, e.g:\n \t             typedef struct {...} foo;\n-\t       In that case TREE_TYPE (decl) is not a typedef variant\n-\t       type and TYPE_NAME of the anonymous type is set to the\n-\t       TYPE_DECL of the typedef. This construct is emitted by\n-\t       the C++ FE.\n-\n-\t       TYPE is the anonymous struct named by the typedef\n-\t       DECL. As we need the DW_AT_type attribute of the\n-\t       DW_TAG_typedef to point to the DIE of TYPE, let's\n-\t       generate that DIE right away. add_type_attribute\n-\t       called below will then pick (via lookup_type_die) that\n-\t       anonymous struct DIE.  */\n-\t    gen_tagged_type_die (type, context_die, DINFO_USAGE_DIR_USE);\n+\t         In that case TREE_TYPE (decl) is not a typedef variant\n+\t         type and TYPE_NAME of the anonymous type is set to the\n+\t         TYPE_DECL of the typedef. This construct is emitted by\n+\t         the C++ FE.\n+\n+\t         TYPE is the anonymous struct named by the typedef\n+\t         DECL. As we need the DW_AT_type attribute of the\n+\t         DW_TAG_typedef to point to the DIE of TYPE, let's\n+\t         generate that DIE right away. add_type_attribute\n+\t         called below will then pick (via lookup_type_die) that\n+\t         anonymous struct DIE.  */\n+\t      if (!TREE_ASM_WRITTEN (type))\n+\t        gen_tagged_type_die (type, context_die, DINFO_USAGE_DIR_USE);\n+\t    }\n \t}\n \n       add_type_attribute (type_die, type, TREE_READONLY (decl),"}, {"sha": "2879f609983915d97b647bec8eba809a95fe06c1", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/typedef4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78f1a3f6710a19026c9746cdea6a7df25956bba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef4.C?ref=e78f1a3f6710a19026c9746cdea6a7df25956bba", "patch": "@@ -0,0 +1,10 @@\n+// Origin: PR debug/45171\n+// { dg-options \"-g -dA -fno-eliminate-unused-debug-types\" }\n+// { dg-do compile }\n+\n+// There should be 2 real instances of byte_size -- one for the\n+// struct and one for \"int\".  The other two instances are from\n+// the comments in the .debug_abbrev section.\n+// { dg-final { scan-assembler-times \"DW_AT_byte_size\" 4 } }\n+\n+typedef struct { int a, b; } x;"}]}