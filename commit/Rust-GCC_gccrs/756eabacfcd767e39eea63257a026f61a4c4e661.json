{"sha": "756eabacfcd767e39eea63257a026f61a4c4e661", "node_id": "C_kwDOANBUbNoAKDc1NmVhYmFjZmNkNzY3ZTM5ZWVhNjMyNTdhMDI2ZjYxYTRjNGU2NjE", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2022-02-02T00:19:11Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2022-02-02T00:21:49Z"}, "message": "Declare std::array members with attribute const [PR101831].\n\nResolves:\nPR libstdc++/101831 - Spurious maybe-uninitialized warning on std::array::size\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/101831\n\t* include/std/array (begin): Declare const member function attribute\n\tconst.\n\t(end, rbegin, rend, size, max_size, empty, data): Same.\n\t* testsuite/23_containers/array/capacity/empty.cc: Add test cases.\n\t* testsuite/23_containers/array/capacity/max_size.cc: Same.\n\t* testsuite/23_containers/array/capacity/size.cc: Same.\n\t* testsuite/23_containers/array/iterators/begin_end.cc: New test.", "tree": {"sha": "e7a3219e85fa7514068b6531e3c61822831ca589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a3219e85fa7514068b6531e3c61822831ca589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756eabacfcd767e39eea63257a026f61a4c4e661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756eabacfcd767e39eea63257a026f61a4c4e661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756eabacfcd767e39eea63257a026f61a4c4e661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756eabacfcd767e39eea63257a026f61a4c4e661/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07a6c52c4cd145d20488c4823669a2d984ba2051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a6c52c4cd145d20488c4823669a2d984ba2051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07a6c52c4cd145d20488c4823669a2d984ba2051"}], "stats": {"total": 109, "additions": 101, "deletions": 8}, "files": [{"sha": "e45143fb329964418b8d6e30153de3c5dd0edba6", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=756eabacfcd767e39eea63257a026f61a4c4e661", "patch": "@@ -127,7 +127,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { std::swap_ranges(begin(), end(), __other.begin()); }\n \n       // Iterators.\n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       _GLIBCXX17_CONSTEXPR iterator\n       begin() noexcept\n       { return iterator(data()); }\n@@ -137,7 +137,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       begin() const noexcept\n       { return const_iterator(data()); }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       _GLIBCXX17_CONSTEXPR iterator\n       end() noexcept\n       { return iterator(data() + _Nm); }\n@@ -147,7 +147,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       end() const noexcept\n       { return const_iterator(data() + _Nm); }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       _GLIBCXX17_CONSTEXPR reverse_iterator\n       rbegin() noexcept\n       { return reverse_iterator(end()); }\n@@ -157,7 +157,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       rbegin() const noexcept\n       { return const_reverse_iterator(end()); }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       _GLIBCXX17_CONSTEXPR reverse_iterator\n       rend() noexcept\n       { return reverse_iterator(begin()); }\n@@ -188,15 +188,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return const_reverse_iterator(begin()); }\n \n       // Capacity.\n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       constexpr size_type\n       size() const noexcept { return _Nm; }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       constexpr size_type\n       max_size() const noexcept { return _Nm; }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       constexpr bool\n       empty() const noexcept { return size() == 0; }\n \n@@ -278,7 +278,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n  \t           : _AT_Type::_S_ref(_M_elems, 0);\n       }\n \n-      [[__nodiscard__]]\n+      [[__gnu__::__const__, __nodiscard__]]\n       _GLIBCXX17_CONSTEXPR pointer\n       data() noexcept\n       { return _AT_Type::_S_ptr(_M_elems); }"}, {"sha": "cecbae39e4523a4af03f7ed3321ff5ce5ab4d7da", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/empty.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc?ref=756eabacfcd767e39eea63257a026f61a4c4e661", "patch": "@@ -40,8 +40,26 @@ test01()\n   }\n }\n \n+#pragma GCC push_options\n+#pragma GCC optimize \"0\"\n+\n+void\n+test02()\n+{\n+  {\n+    const size_t len = 3;\n+    typedef std::array<int, len> array_type;\n+    array_type a;\n+\n+    VERIFY( a.empty() == false );    // { dg-bogus \"-Wmaybe-uninitialized\"\n+  }\n+}\n+\n+#pragma GCC pop_options\n+\n int main()\n {\n   test01();\n+  test02();\n   return 0;\n }"}, {"sha": "4629316161d7d32f9be526ce6d2d903c2043addb", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/max_size.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc?ref=756eabacfcd767e39eea63257a026f61a4c4e661", "patch": "@@ -40,8 +40,26 @@ test01()\n   }\n }\n \n+#pragma GCC push_options\n+#pragma GCC optimize \"0\"\n+\n+void\n+test02()\n+{\n+  {\n+    const size_t len = 3;\n+    typedef std::array<int, len> array_type;\n+    array_type a;\n+\n+    VERIFY( a.max_size() == len );  // { dg-bogus \"-Wmaybe-uninitialized\"\n+  }\n+}\n+\n+#pragma GCC pop_options\n+\n int main()\n {\n   test01();\n+  test02();\n   return 0;\n }"}, {"sha": "dddd909a0acc07b9ecda9320befaa646ff61d16d", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/size.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc?ref=756eabacfcd767e39eea63257a026f61a4c4e661", "patch": "@@ -40,8 +40,26 @@ test01()\n   }\n }\n \n+#pragma GCC push_options\n+#pragma GCC optimize \"0\"\n+\n+void\n+test02()\n+{\n+  {\n+    const size_t len = 3;\n+    typedef std::array<int, len> array_type;\n+    array_type a;\n+\n+    VERIFY( a.size() == len );      // { dg-bogus \"-Wmaybe-uninitialized\"\n+  }\n+}\n+\n+#pragma GCC pop_options\n+\n int main()\n {\n   test01();\n+  test02();\n   return 0;\n }"}, {"sha": "69594a1fc74ba59e5eac4632f719ae0037ce92ff", "filename": "libstdc++-v3/testsuite/23_containers/array/iterators/begin_end.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fbegin_end.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756eabacfcd767e39eea63257a026f61a4c4e661/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fbegin_end.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fbegin_end.cc?ref=756eabacfcd767e39eea63257a026f61a4c4e661", "patch": "@@ -0,0 +1,39 @@\n+// { dg-do compile { target c++11 } }\n+\n+#include <array>\n+\n+#pragma GCC push_options\n+#pragma GCC optimize \"0\"\n+\n+extern void\n+sink (const void*, ...);\n+\n+void\n+test01()\n+{\n+  {\n+    const std::size_t len = 1;\n+    typedef std::array<int, len> array_type;\n+    typedef array_type::iterator iterator;;\n+    array_type a;\n+\n+    iterator b = a.begin();           // { dg-bogus \"-Wmaybe-uninitialized\" }\n+    iterator e = a.end();             // { dg-bogus \"-Wmaybe-uninitialized\" }\n+\n+    sink(&b, &e);\n+  }\n+\n+  {\n+    const std::size_t len = 3;\n+    typedef std::array<int, len> array_type;\n+    typedef array_type::reverse_iterator reverse_iterator;\n+    array_type a;\n+\n+    reverse_iterator b = a.rbegin();  // { dg-bogus \"-Wmaybe-uninitialized\" }\n+    reverse_iterator e = a.rend();    // { dg-bogus \"-Wmaybe-uninitialized\" }\n+\n+    sink(&b, &e);\n+  }\n+}\n+\n+#pragma GCC pop_options"}]}