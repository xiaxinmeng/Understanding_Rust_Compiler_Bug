{"sha": "2148624a44cb575edab51bf505687e4f8ca6445d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE0ODYyNGE0NGNiNTc1ZWRhYjUxYmY1MDU2ODdlNGY4Y2E2NDQ1ZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "2000-02-23T17:18:15Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-02-23T17:18:15Z"}, "message": "final.c (shorten_branches): Make value passed to LABEL_ALIGN conform to documentation.\n\n\t* final.c (shorten_branches): Make value passed to LABEL_ALIGN\n\tconform to documentation.\n\t* sh.h (LABEL_ALIGN): If aligning loops, call sh_label_align\n\tto check for special cases.\n\t* sh-protos.h (sh_label_align): Declare.\n\t* sh.c (sh_label_align): Define.\n\nFrom-SVN: r32114", "tree": {"sha": "8baf5d722de68518d2c8e380ff3c3c6fb2dd680f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8baf5d722de68518d2c8e380ff3c3c6fb2dd680f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2148624a44cb575edab51bf505687e4f8ca6445d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2148624a44cb575edab51bf505687e4f8ca6445d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2148624a44cb575edab51bf505687e4f8ca6445d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2148624a44cb575edab51bf505687e4f8ca6445d/comments", "author": null, "committer": null, "parents": [{"sha": "699729979c5feecfdf5dfc50e1991b3732cbd040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699729979c5feecfdf5dfc50e1991b3732cbd040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/699729979c5feecfdf5dfc50e1991b3732cbd040"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "fa8f35ed3479cc45ea06b976379295839e841f58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2148624a44cb575edab51bf505687e4f8ca6445d", "patch": "@@ -1,3 +1,12 @@\n+Wed Feb 23 16:42:21 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* final.c (shorten_branches): Make value passed to LABEL_ALIGN\n+\tconform to documentation.\n+\t* sh.h (LABEL_ALIGN): If aligning loops, call sh_label_align\n+\tto check for special cases.\n+\t* sh-protos.h (sh_label_align): Declare.\n+\t* sh.c (sh_label_align): Define.\n+\n 2000-02-22  Andrew Haley  <aph@cygnus.com>\n \n \t* config/mips/mips.h (GAS_ASM_SPEC): Pass -mgp32/-mgp64 to gas."}, {"sha": "273444b2c6de17eda0d046f0b4fe397f68561212", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=2148624a44cb575edab51bf505687e4f8ca6445d", "patch": "@@ -36,6 +36,7 @@ extern const char *output_far_jump PARAMS ((rtx, rtx));\n extern void machine_dependent_reorg PARAMS ((rtx));\n extern struct rtx_def *sfunc_uses_reg PARAMS ((rtx));\n extern int barrier_align PARAMS ((rtx));\n+extern int sh_loop_align PARAMS ((rtx));\n extern int fp_zero_operand PARAMS ((rtx));\n extern int fp_one_operand PARAMS ((rtx));\n extern int fp_int_operand PARAMS ((rtx));"}, {"sha": "8c10ca55ee974d84f8d558448ad9e14f98743e48", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2148624a44cb575edab51bf505687e4f8ca6445d", "patch": "@@ -2786,6 +2786,30 @@ barrier_align (barrier_or_label)\n   return CACHE_LOG;\n }\n \n+/* If we are inside a phony loop, almost any kind of label can turn up as the\n+   first one in the loop.  Aligning a braf label causes incorrect switch\n+   destination addresses; we can detect braf labels because they are\n+   followed by a BARRIER.\n+   Applying loop alignment to small constant or switch tables is a waste\n+   of space, so we suppress this too.  */\n+int\n+sh_loop_align (label)\n+     rtx label;\n+{\n+  rtx next = label;\n+\n+  do\n+    next = next_nonnote_insn (next);\n+  while (next && GET_CODE (next) == CODE_LABEL);\n+\n+  if (! next\n+      || GET_RTX_CLASS (GET_CODE (next)) != 'i'\n+      || GET_CODE (PATTERN (next)) == ADDR_DIFF_VEC\n+      || recog_memoized (next) == CODE_FOR_consttable_2)\n+    return 0;\n+  return 2;\n+}\n+\n /* Exported to toplev.c.\n \n    Do a final pass over the function, just before delayed branch"}, {"sha": "808febffe82183747db6c36ec41f2223e94a797a", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=2148624a44cb575edab51bf505687e4f8ca6445d", "patch": "@@ -351,7 +351,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n   barrier_align (LABEL_AFTER_BARRIER)\n \n #define LOOP_ALIGN(A_LABEL) \\\n-  ((! optimize || TARGET_HARVARD || TARGET_SMALLCODE) ? 0 : 2)\n+  ((! optimize || TARGET_HARVARD || TARGET_SMALLCODE) \\\n+   ? 0 : sh_loop_align (A_LABEL))\n \n #define LABEL_ALIGN(A_LABEL) \\\n (\t\t\t\t\t\t\t\t\t\\"}, {"sha": "d5096fb15c805f8586ccad67a130a635525af353", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148624a44cb575edab51bf505687e4f8ca6445d/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=2148624a44cb575edab51bf505687e4f8ca6445d", "patch": "@@ -1134,7 +1134,7 @@ shorten_branches (first)\n \t\tbreak;\n \t      else if (GET_CODE (label) == CODE_LABEL)\n \t\t{\n-\t\t  log = LOOP_ALIGN (insn);\n+\t\t  log = LOOP_ALIGN (label);\n \t\t  if (max_log < log)\n \t\t    {\n \t\t      max_log = log;"}]}