{"sha": "82990836679f1972141a2f93666bd6d39323a435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5OTA4MzY2NzlmMTk3MjE0MWEyZjkzNjY2YmQ2ZDM5MzIzYTQzNQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-11T20:09:16Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-13T07:34:49Z"}, "message": "Inline delegators in vrp_folder.\n\ngcc/ChangeLog:\n\n\t* tree-vrp.c (class vrp_folder): Make visit_stmt, visit_phi,\n\tand m_vr_values private.\n\t(vrp_folder::vrp_evaluate_conditional): Remove.\n\t(vrp_folder::vrp_simplify_stmt_using_ranges): Remove.\n\t(vrp_folder::fold_predicate_in): Inline\n\tvrp_evaluate_conditional and vrp_simplify_stmt_using_ranges.\n\t(vrp_folder::fold_stmt): Same.", "tree": {"sha": "8548770f5e579f6e16c49d61f73b8233f9eaed18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8548770f5e579f6e16c49d61f73b8233f9eaed18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82990836679f1972141a2f93666bd6d39323a435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82990836679f1972141a2f93666bd6d39323a435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82990836679f1972141a2f93666bd6d39323a435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82990836679f1972141a2f93666bd6d39323a435/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40c4eb67f563ec42e98b30dddacfece562f22fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c4eb67f563ec42e98b30dddacfece562f22fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c4eb67f563ec42e98b30dddacfece562f22fc8"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "54ce017e8b2d2c0fcbacc93046470707041f1ea6", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82990836679f1972141a2f93666bd6d39323a435/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82990836679f1972141a2f93666bd6d39323a435/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=82990836679f1972141a2f93666bd6d39323a435", "patch": "@@ -3824,10 +3824,10 @@ class vrp_prop : public ssa_propagation_engine\n   void initialize (struct function *);\n   void finalize ();\n \n+private:\n   enum ssa_prop_result visit_stmt (gimple *, edge *, tree *) FINAL OVERRIDE;\n   enum ssa_prop_result visit_phi (gphi *) FINAL OVERRIDE;\n \n-private:\n   struct function *fun;\n   vr_values *m_vr_values;\n };\n@@ -4063,23 +4063,16 @@ class vrp_folder : public substitute_and_fold_engine\n     : substitute_and_fold_engine (/* Fold all stmts.  */ true),\n       m_vr_values (v), simplifier (v)\n     {  }\n-  bool fold_stmt (gimple_stmt_iterator *) FINAL OVERRIDE;\n \n+private:\n   tree value_of_expr (tree name, gimple *stmt) OVERRIDE\n     {\n       return m_vr_values->value_of_expr (name, stmt);\n     }\n-  class vr_values *m_vr_values;\n-\n-private:\n+  bool fold_stmt (gimple_stmt_iterator *) FINAL OVERRIDE;\n   bool fold_predicate_in (gimple_stmt_iterator *);\n-  /* Delegators.  */\n-  tree vrp_evaluate_conditional (tree_code code, tree op0,\n-\t\t\t\t tree op1, gimple *stmt)\n-    { return simplifier.vrp_evaluate_conditional (code, op0, op1, stmt); }\n-  bool simplify_stmt_using_ranges (gimple_stmt_iterator *gsi)\n-    { return simplifier.simplify (gsi); }\n \n+  vr_values *m_vr_values;\n   simplify_using_ranges simplifier;\n };\n \n@@ -4098,16 +4091,16 @@ vrp_folder::fold_predicate_in (gimple_stmt_iterator *si)\n       && TREE_CODE_CLASS (gimple_assign_rhs_code (stmt)) == tcc_comparison)\n     {\n       assignment_p = true;\n-      val = vrp_evaluate_conditional (gimple_assign_rhs_code (stmt),\n-\t\t\t\t      gimple_assign_rhs1 (stmt),\n-\t\t\t\t      gimple_assign_rhs2 (stmt),\n-\t\t\t\t      stmt);\n+      val = simplifier.vrp_evaluate_conditional (gimple_assign_rhs_code (stmt),\n+\t\t\t\t\t\t gimple_assign_rhs1 (stmt),\n+\t\t\t\t\t\t gimple_assign_rhs2 (stmt),\n+\t\t\t\t\t\t stmt);\n     }\n   else if (gcond *cond_stmt = dyn_cast <gcond *> (stmt))\n-    val = vrp_evaluate_conditional (gimple_cond_code (cond_stmt),\n-\t\t\t\t    gimple_cond_lhs (cond_stmt),\n-\t\t\t\t    gimple_cond_rhs (cond_stmt),\n-\t\t\t\t    stmt);\n+    val = simplifier.vrp_evaluate_conditional (gimple_cond_code (cond_stmt),\n+\t\t\t\t\t       gimple_cond_lhs (cond_stmt),\n+\t\t\t\t\t       gimple_cond_rhs (cond_stmt),\n+\t\t\t\t\t       stmt);\n   else\n     return false;\n \n@@ -4153,7 +4146,7 @@ vrp_folder::fold_stmt (gimple_stmt_iterator *si)\n   if (fold_predicate_in (si))\n     return true;\n \n-  return simplify_stmt_using_ranges (si);\n+  return simplifier.simplify (si);\n }\n \n /* Blocks which have more than one predecessor and more than"}]}