{"sha": "a6c631732fc35dc6948e7a1810b78eef3a11af97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjNjMxNzMyZmMzNWRjNjk0OGU3YTE4MTBiNzhlZWYzYTExYWY5Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-10-10T06:00:26Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-10-10T06:00:26Z"}, "message": "gfortran.h (gfc_set_implicit_none): Update prototype.\n\n2014-10-10  Tobias Burnus  <burnus@net-b.de>\n\ngcc/fortran/\n        * gfortran.h (gfc_set_implicit_none): Update prototype.\n        * symbol.c (gfc_set_implicit_none): Take and\n        use error location. Move diagnostic from here to ...\n        * decl.c (gfc_match_implicit_none): ... here. And\n        update call. Handle empty implicit-none-spec.\n        (gfc_match_implicit): Handle statement-separator \";\".\n\ngcc/testsuite/\n        * gfortran.dg/implicit_16.f90: New.\n\nFrom-SVN: r216057", "tree": {"sha": "5afdf90c58115030af219c47b0a8c549eb3748ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5afdf90c58115030af219c47b0a8c549eb3748ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c631732fc35dc6948e7a1810b78eef3a11af97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c631732fc35dc6948e7a1810b78eef3a11af97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c631732fc35dc6948e7a1810b78eef3a11af97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c631732fc35dc6948e7a1810b78eef3a11af97/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "548cb3d77c81104778f4cbc4d97410cb31a64971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548cb3d77c81104778f4cbc4d97410cb31a64971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548cb3d77c81104778f4cbc4d97410cb31a64971"}], "stats": {"total": 132, "additions": 99, "deletions": 33}, "files": [{"sha": "907e32a7cbcecf8e2b4e559b1db3eb3b075df5f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -1,3 +1,12 @@\n+2014-10-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.h (gfc_set_implicit_none): Update prototype.\n+\t* symbol.c (gfc_set_implicit_none): Take and\n+\tuse error location. Move diagnostic from here to ...\n+\t* decl.c (gfc_match_implicit_none): ... here. And\n+\tupdate call. Handle empty implicit-none-spec.\n+\t(gfc_match_implicit): Handle statement-separator \";\".\n+\n 2014-10-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* f95-lang.c (gfc_init_builtin_functions): Add more floating-point"}, {"sha": "e4e41cbe0c1f1eeef4bc9ffbf0706b1ad592d86a", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 42, "deletions": 22, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -2951,6 +2951,14 @@ gfc_match_implicit_none (void)\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   bool type = false;\n   bool external = false;\n+  locus cur_loc = gfc_current_locus;\n+\n+  if (gfc_current_ns->seen_implicit_none\n+      || gfc_current_ns->has_implicit_none_export)\n+    {\n+      gfc_error (\"Duplicate IMPLICIT NONE statement at %C\");\n+      return MATCH_ERROR;\n+    }\n \n   gfc_gobble_whitespace ();\n   c = gfc_peek_ascii_char ();\n@@ -2959,35 +2967,43 @@ gfc_match_implicit_none (void)\n       (void) gfc_next_ascii_char ();\n       if (!gfc_notify_std (GFC_STD_F2015, \"IMPORT NONE with spec list at %C\"))\n \treturn MATCH_ERROR;\n-      for(;;)\n+\n+      gfc_gobble_whitespace ();\n+      if (gfc_peek_ascii_char () == ')')\n \t{\n-\t  m = gfc_match (\" %n\", name);\n-          if (m != MATCH_YES)\n-\t    return MATCH_ERROR;\n+\t  (void) gfc_next_ascii_char ();\n+\t  type = true;\n+\t}\n+      else\n+\tfor(;;)\n+\t  {\n+\t    m = gfc_match (\" %n\", name);\n+\t    if (m != MATCH_YES)\n+\t      return MATCH_ERROR;\n \n-          if (strcmp (name, \"type\") == 0)\n-\t    type = true;\n-          else if (strcmp (name, \"external\") == 0)\n-\t    external = true;\n-          else\n-            return MATCH_ERROR;\n+\t    if (strcmp (name, \"type\") == 0)\n+\t      type = true;\n+\t    else if (strcmp (name, \"external\") == 0)\n+\t      external = true;\n+\t    else\n+\t      return MATCH_ERROR;\n \n-\t  gfc_gobble_whitespace ();\n-          c = gfc_next_ascii_char ();\n-          if (c == ',')\n-\t    continue;\n-\t  if (c == ')')\n-\t    break;\n-\t  return MATCH_ERROR;\n-\t}\n+\t    gfc_gobble_whitespace ();\n+\t    c = gfc_next_ascii_char ();\n+\t    if (c == ',')\n+\t      continue;\n+\t    if (c == ')')\n+\t      break;\n+\t    return MATCH_ERROR;\n+\t  }\n     }\n   else\n     type = true;\n \n   if (gfc_match_eos () != MATCH_YES)\n     return MATCH_ERROR;\n \n-  gfc_set_implicit_none (type, external);\n+  gfc_set_implicit_none (type, external, &cur_loc);\n \n   return MATCH_YES;\n }\n@@ -3140,8 +3156,8 @@ gfc_match_implicit (void)\n \t{\n \t  /* We may have <TYPE> (<RANGE>).  */\n \t  gfc_gobble_whitespace ();\n-\t  c = gfc_next_ascii_char ();\n-\t  if ((c == '\\n') || (c == ','))\n+          c = gfc_peek_ascii_char ();\n+\t  if (c == ',' || c == '\\n' || c == ';' || c == '!')\n \t    {\n \t      /* Check for CHARACTER with no length parameter.  */\n \t      if (ts.type == BT_CHARACTER && !ts.u.cl)\n@@ -3155,6 +3171,10 @@ gfc_match_implicit (void)\n \t      /* Record the Successful match.  */\n \t      if (!gfc_merge_new_implicit (&ts))\n \t\treturn MATCH_ERROR;\n+\t      if (c == ',')\n+\t\tc = gfc_next_ascii_char ();\n+\t      else if (gfc_match_eos () == MATCH_ERROR)\n+\t\tgoto error;\n \t      continue;\n \t    }\n \n@@ -3190,7 +3210,7 @@ gfc_match_implicit (void)\n \n       gfc_gobble_whitespace ();\n       c = gfc_next_ascii_char ();\n-      if ((c != '\\n') && (c != ','))\n+      if (c != ',' && gfc_match_eos () != MATCH_YES)\n \tgoto syntax;\n \n       if (!gfc_merge_new_implicit (&ts))"}, {"sha": "6f258db961fb471c23f6b4fda5547f9a0e7be935", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -2759,7 +2759,7 @@ extern int gfc_character_storage_size;\n void gfc_clear_new_implicit (void);\n bool gfc_add_new_implicit_range (int, int);\n bool gfc_merge_new_implicit (gfc_typespec *);\n-void gfc_set_implicit_none (bool, bool);\n+void gfc_set_implicit_none (bool, bool, locus *);\n void gfc_check_function_type (gfc_namespace *);\n bool gfc_is_intrinsic_typename (const char *);\n "}, {"sha": "3eb58f4c8f429a0a08d50d5aa610bf7f4175aeaa", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -114,17 +114,10 @@ static int new_flag[GFC_LETTERS];\n /* Handle a correctly parsed IMPLICIT NONE.  */\n \n void\n-gfc_set_implicit_none (bool type, bool external)\n+gfc_set_implicit_none (bool type, bool external, locus *loc)\n {\n   int i;\n \n-  if (gfc_current_ns->seen_implicit_none\n-      || gfc_current_ns->has_implicit_none_export)\n-    {\n-      gfc_error_now (\"Duplicate IMPLICIT NONE statement at %C\");\n-      return;\n-    }\n-\n   if (external)\n     gfc_current_ns->has_implicit_none_export = 1;\n \n@@ -135,8 +128,8 @@ gfc_set_implicit_none (bool type, bool external)\n \t{\n \t  if (gfc_current_ns->set_flag[i])\n \t    {\n-\t      gfc_error_now (\"IMPLICIT NONE (type) statement at %C following an \"\n-\t\t\t     \"IMPLICIT statement\");\n+\t      gfc_error_now (\"IMPLICIT NONE (type) statement at %L following an \"\n+\t\t\t     \"IMPLICIT statement\", loc);\n \t      return;\n \t    }\n \t  gfc_clear_ts (&gfc_current_ns->default_type[i]);"}, {"sha": "13a553e9ba650a35946669a99d1fd614f814ee7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -1,3 +1,7 @@\n+2014-10-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/implicit_16.f90: New.\n+\n 2014-10-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/constexpr-using3.C: New."}, {"sha": "b44be6708fa847b64307aa9dfe0c7a94360f3b6a", "filename": "gcc/testsuite/gfortran.dg/implicit_16.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c631732fc35dc6948e7a1810b78eef3a11af97/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_16.f90?ref=a6c631732fc35dc6948e7a1810b78eef3a11af97", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do compile }\n+! { dg-options \"\" }\n+!\n+! Support Fortran 2015's IMPLICIT NONE with empty spec list\n+!\n+! And IMPLICIT with \";\" followed by an additional statement.\n+! Contributed by Alan Greynolds\n+!\n+\n+module m\n+  type t\n+  end type t\n+end module m\n+\n+subroutine sub0\n+implicit integer (a-h,o-z); parameter (i=0)\n+end subroutine sub0\n+\n+subroutine sub1\n+implicit integer (a-h,o-z)!test\n+parameter (i=0)\n+end subroutine sub1\n+\n+subroutine sub2\n+use m\n+implicit type(t) (a-h,o-z); parameter (i=0)\n+end subroutine sub2\n+\n+\n+subroutine sub3\n+use m\n+implicit type(t) (a-h,o-z)! Foobar\n+parameter (i=0)\n+end subroutine sub3\n+\n+subroutine sub4\n+implicit none ()\n+call test()\n+i = 1 ! { dg-error \"Symbol 'i' at .1. has no IMPLICIT type\" }\n+end subroutine sub4"}]}