{"sha": "1551d44aba2deeb55393396502ca091e41bcfee3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1MWQ0NGFiYTJkZWViNTUzOTMzOTY1MDJjYTA5MWU0MWJjZmVlMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-02-03T06:01:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-02-03T06:01:40Z"}, "message": "re PR tree-optimization/45122 (-funsafe-loop-optimizations causes FAIL: gcc.c-torture/execute/pr27285.c execution)\n\ngcc/ChangeLog:\nPR tree-optimization/45122\n* tree-ssa-loop-niter.c (number_of_iterations_exit): Don't make\nunsafe assumptions when there's more than one loop exit.\ngcc/testsuite/ChangeLog:\nPR tree-optimization/45122\n* gcc.dg/tree-ssa/pr45122.c: New.\n\nFrom-SVN: r169781", "tree": {"sha": "24e9cf0f5046d167fed3c35adba388143c7ffc46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e9cf0f5046d167fed3c35adba388143c7ffc46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1551d44aba2deeb55393396502ca091e41bcfee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1551d44aba2deeb55393396502ca091e41bcfee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1551d44aba2deeb55393396502ca091e41bcfee3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1551d44aba2deeb55393396502ca091e41bcfee3/comments", "author": null, "committer": null, "parents": [{"sha": "c94854734b65d62a1194d22e36e88d6aa3a2a287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94854734b65d62a1194d22e36e88d6aa3a2a287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94854734b65d62a1194d22e36e88d6aa3a2a287"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "de9d846b7d353857b69fd2ddb679ebf0e416bb86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1551d44aba2deeb55393396502ca091e41bcfee3", "patch": "@@ -1,3 +1,9 @@\n+2011-02-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR tree-optimization/45122\n+\t* tree-ssa-loop-niter.c (number_of_iterations_exit): Don't make\n+\tunsafe assumptions when there's more than one loop exit.\n+\n 2011-02-02  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/47272"}, {"sha": "69da9d62bd8e751c3f20d72bfbb88fb70245edc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1551d44aba2deeb55393396502ca091e41bcfee3", "patch": "@@ -1,3 +1,8 @@\n+2011-02-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR tree-optimization/45122\n+\t* gcc.dg/tree-ssa/pr45122.c: New.\n+\n 2011-02-02  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/47272"}, {"sha": "e979b766fea7c01d77e8bcd9228e34dc00e49062", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr45122.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45122.c?ref=1551d44aba2deeb55393396502ca091e41bcfee3", "patch": "@@ -0,0 +1,50 @@\n+/* PR tree-optimization/27285 */\n+/* PR tree-optimization/45122 */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -funsafe-loop-optimizations\" } */\n+\n+extern void abort (void);\n+\n+struct S { unsigned char a, b, c, d[16]; };\n+\n+void __attribute__ ((noinline))\n+foo (struct S *x, struct S *y)\n+{\n+  int a, b;\n+  unsigned char c, *d, *e;\n+\n+  b = x->b;\n+  d = x->d;\n+  e = y->d;\n+  a = 0;\n+  while (b)\n+    {\n+      if (b >= 8)\n+\t{\n+\t  c = 0xff;\n+\t  b -= 8;\n+\t}\n+      else\n+\t{\n+\t  c = 0xff << (8 - b);\n+\t  b = 0;\n+\t}\n+\n+      e[a] = d[a] & c;\n+      a++;\n+    }\n+}\n+\n+int\n+main (void)\n+{\n+  struct S x = { 0, 25, 0, { 0xaa, 0xbb, 0xcc, 0xdd }};\n+  struct S y = { 0, 0, 0, { 0 }};\n+\n+  foo (&x, &y);\n+  if (x.d[0] != y.d[0] || x.d[1] != y.d[1]\n+      || x.d[2] != y.d[2] || (x.d[3] & 0x80) != y.d[3])\n+    abort ();\n+   return 0;\n+}"}, {"sha": "c14e13c7248b5ada735c478820df4e5197e5b76d", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1551d44aba2deeb55393396502ca091e41bcfee3/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=1551d44aba2deeb55393396502ca091e41bcfee3", "patch": "@@ -1890,7 +1890,7 @@ number_of_iterations_exit (struct loop *loop, edge exit,\n   /* With -funsafe-loop-optimizations we assume that nothing bad can happen.\n      But if we can prove that there is overflow or some other source of weird\n      behavior, ignore the loop even with -funsafe-loop-optimizations.  */\n-  if (integer_zerop (niter->assumptions))\n+  if (integer_zerop (niter->assumptions) || !single_exit (loop))\n     return false;\n \n   if (flag_unsafe_loop_optimizations)"}]}