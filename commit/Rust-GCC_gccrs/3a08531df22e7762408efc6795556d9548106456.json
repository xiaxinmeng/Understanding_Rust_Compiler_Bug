{"sha": "3a08531df22e7762408efc6795556d9548106456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EwODUzMWRmMjJlNzc2MjQwOGVmYzY3OTU1NTZkOTU0ODEwNjQ1Ng==", "commit": {"author": {"name": "Marc Espie", "email": "espie@cvs.openbsd.org", "date": "1999-05-13T00:24:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-05-13T00:24:18Z"}, "message": "cplus-dem.c (standard_symbol_characters): Renamed from standard_symbol_alphabet.\n\n        * cplus-dem.c (standard_symbol_characters): Renamed from\n        standard_symbol_alphabet.  No longer modify TABLE.\n        (hp_symbol_characters): Renamed from hp_symbol_alphabet.  No longer\n        modify TABLE.\n        (main): Corresponding changes.  Use strchr to determine if a\n        character is valid.\n\nFrom-SVN: r26912", "tree": {"sha": "f7badf0b74edb87b0d3fb6ac90a25d677e0ca8b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7badf0b74edb87b0d3fb6ac90a25d677e0ca8b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a08531df22e7762408efc6795556d9548106456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a08531df22e7762408efc6795556d9548106456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a08531df22e7762408efc6795556d9548106456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a08531df22e7762408efc6795556d9548106456/comments", "author": null, "committer": null, "parents": [{"sha": "e0f0f526c9a4bc897f4fdd288a6aaf0dfe301998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f0f526c9a4bc897f4fdd288a6aaf0dfe301998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f0f526c9a4bc897f4fdd288a6aaf0dfe301998"}], "stats": {"total": 50, "additions": 24, "deletions": 26}, "files": [{"sha": "9f8431d6cb8cae889f7f76c62137d90cf7c258e0", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a08531df22e7762408efc6795556d9548106456/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a08531df22e7762408efc6795556d9548106456/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=3a08531df22e7762408efc6795556d9548106456", "patch": "@@ -1,3 +1,12 @@\n+Thu May 13 01:14:46 1999 Marc Espie <espie@cvs.openbsd.org>\n+\n+\t* cplus-dem.c (standard_symbol_characters): Renamed from\n+\tstandard_symbol_alphabet.  No longer modify TABLE.\n+\t(hp_symbol_characters): Renamed from hp_symbol_alphabet.  No longer\n+\tmodify TABLE.\n+\t(main): Corresponding changes.  Use strchr to determine if a\n+\tcharacter is valid.\n+\n 1999-05-11  Jim Blandy  <jimb@zwingli.cygnus.com>\n \n \t* cplus-dem.c (main): Use table lookup to distinguish identifier"}, {"sha": "706d929cca713e7d9675bdb220d117e0e7b76607", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 15, "deletions": 26, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a08531df22e7762408efc6795556d9548106456/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a08531df22e7762408efc6795556d9548106456/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=3a08531df22e7762408efc6795556d9548106456", "patch": "@@ -4394,25 +4394,19 @@ fancy_abort ()\n }\n \n \n-/* Fill in TABLE so that TABLE[C] is true iff C (as an unsigned char)\n-   is a valid symbol component, in the standard assembler symbol\n+/* Return the string of non-alnum characters that may occur \n+   as a valid symbol component, in the standard assembler symbol\n    syntax.  */\n-void\n-standard_symbol_alphabet (char *table)\n-{\n-  int c;\n \n-  for (c = 0; c < 256; c++)\n-    table[c] = isalnum(c);\n-\n-  table['_'] = 1;\n-  table['$'] = 1;\n-  table['.'] = 1;\n+static const char *\n+standard_symbol_characters ()\n+{\n+  return \"_$.\";\n }\n \n \n-/* Fill in TABLE so that TABLE[C] is true iff C (as an unsigned char)\n-   is a valid symbol name component in an HP object file.\n+/* Return the string of non-alnum characters that may occur\n+   as a valid symbol name component in an HP object file.\n \n    Note that, since HP's compiler generates object code straight from\n    C++ source, without going through an assembler, its mangled\n@@ -4441,15 +4435,10 @@ standard_symbol_alphabet (char *table)\n        non-digit character.\n \n    So have fun.  */\n-void\n-hp_symbol_alphabet (char *table)\n+static const char *\n+hp_symbol_characters ()\n {\n-  char *c;\n-\n-  standard_symbol_alphabet (table);\n-\n-  for (c = \"<>#,*&[]:(){}\"; *c; c++)\n-    table[(unsigned char) *c] = 1;\n+  return \"_$.<>#,*&[]:(){}\";\n }\n \n \n@@ -4460,7 +4449,7 @@ main (argc, argv)\n {\n   char *result;\n   int c;\n-  char symbol_alphabet[256];\n+  char *valid_symbols;\n \n   program_name = argv[0];\n \n@@ -4533,10 +4522,10 @@ main (argc, argv)\n \tcase lucid_demangling:\n \tcase arm_demangling:\n \tcase edg_demangling:\n-\t  standard_symbol_alphabet (symbol_alphabet);\n+\t  valid_symbols = standard_symbol_characters ();\n \t  break;\n \tcase hp_demangling:\n-\t  hp_symbol_alphabet (symbol_alphabet);\n+\t  valid_symbols = hp_symbol_characters ();\n \t  break;\n \tdefault:\n \t  /* Folks should explicitly indicate the appropriate alphabet for\n@@ -4550,7 +4539,7 @@ main (argc, argv)\n \t  int i = 0;\n \t  c = getchar ();\n \t  /* Try to read a label.  */\n-\t  while (c != EOF && symbol_alphabet[c])\n+\t  while (c != EOF && (isalnum (c) || strchr (valid_symbols, c)))\n \t    {\n \t      if (i >= MBUF_SIZE-1)\n \t\tbreak;"}]}