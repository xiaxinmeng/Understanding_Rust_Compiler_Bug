{"sha": "0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5NTJlYjRjYzBmZTdhMGE3YjBhNjBlMDkzZjhjMWY2ZTEzZGQ3NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-15T08:13:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-15T08:13:09Z"}, "message": "re PR target/51921 (EH unwinding support is broken)\n\n\tPR target/51921\n\tPR target/52205\n\t* config/sparc/sol2-unwind.h (sparc64_is_sighandler): Add support for\n\tSolaris 11 and slightly reformat.\n\t(sparc_is_sighandler): Likewise.\n\nFrom-SVN: r184255", "tree": {"sha": "819ad28264a4d252295604f4f4d1bbbf47af61dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819ad28264a4d252295604f4f4d1bbbf47af61dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75/comments", "author": null, "committer": null, "parents": [{"sha": "7f3dee0e1cd3024cef687846f55b5981dccce926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3dee0e1cd3024cef687846f55b5981dccce926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f3dee0e1cd3024cef687846f55b5981dccce926"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "1f46d9d2534662f95ac5010770678b6637d14ebc", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "patch": "@@ -1,3 +1,11 @@\n+2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/51921\n+\tPR target/52205\n+\t* config/sparc/sol2-unwind.h (sparc64_is_sighandler): Add support for\n+\tSolaris 11 and slightly reformat.\n+\t(sparc_is_sighandler): Likewise.\n+\n 2012-02-14  Walter Lee  <walt@tilera.com>\n \n \t* config.host: Handle tilegx and tilepro."}, {"sha": "1458950063a85a4a6304ebbb1de63bfee60c8edc", "filename": "libgcc/config/sparc/sol2-unwind.h", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h?ref=0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "patch": "@@ -119,7 +119,12 @@ sparc64_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n       unsigned int cuh_pattern\n \t= *(unsigned int *)(*(unsigned long *)(cfa + 15*8) - 4);\n \n-      if (cuh_pattern == 0xd25fa7ef)\n+      if (cuh_pattern == 0x92100019)\n+\t/* This matches the call_user_handler pattern for Solaris 11.\n+\t   This is the same setup as for Solaris 9, see below.  */\n+\t*nframes = 3;\n+\n+      else if (cuh_pattern == 0xd25fa7ef)\n \t{\n \t  /* This matches the call_user_handler pattern for Solaris 10.\n \t     There are 2 cases so we look for the return address of the\n@@ -140,6 +145,7 @@ sparc64_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t    */\n \t    *nframes = 2;\n \t}\n+\n       else if (cuh_pattern == 0x9410001a || cuh_pattern == 0x94100013)\n \t/* This matches the call_user_handler pattern for Solaris 9 and\n \t   for Solaris 8 running inside Solaris Containers respectively\n@@ -152,7 +158,8 @@ sparc64_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t\t<kernel>\n \t*/\n \t*nframes = 3;\n-      else\n+\n+      else /* cuh_pattern == 0xe0272010 */\n \t/* This is the default Solaris 8 case.\n \t   We need to move up two frames:\n \n@@ -162,6 +169,7 @@ sparc64_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t\t<kernel>\n \t*/\n \t*nframes = 2;\n+\n       return 1;\n     }\n \n@@ -296,7 +304,12 @@ sparc_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n       unsigned int cuh_pattern\n \t= *(unsigned int *)(*(unsigned int *)(cfa + 15*4) - 4);\n \n-      if (cuh_pattern == 0xd407a04c)\n+      if (cuh_pattern == 0x92100019)\n+\t/* This matches the call_user_handler pattern for Solaris 11.\n+\t   This is the same setup as for Solaris 9, see below.  */\n+\t*nframes = 3;\n+\n+      else if (cuh_pattern == 0xd407a04c)\n \t{\n \t  /* This matches the call_user_handler pattern for Solaris 10.\n \t     There are 2 cases so we look for the return address of the\n@@ -317,6 +330,7 @@ sparc_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t    */\n \t    *nframes = 2;\n \t}\n+\n       else if (cuh_pattern == 0x9410001a || cuh_pattern == 0x9410001b)\n \t/* This matches the call_user_handler pattern for Solaris 9 and\n \t   for Solaris 8 running inside Solaris Containers respectively.\n@@ -329,7 +343,8 @@ sparc_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t\t<kernel>\n \t*/\n \t*nframes = 3;\n-      else\n+\n+      else /* cuh_pattern == 0x90100018 */\n \t/* This is the default Solaris 8 case.\n \t   We need to move up two frames:\n \n@@ -339,6 +354,7 @@ sparc_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t\t<kernel>\n \t*/\n \t*nframes = 2;\n+\n       return 1;\n     }\n "}]}