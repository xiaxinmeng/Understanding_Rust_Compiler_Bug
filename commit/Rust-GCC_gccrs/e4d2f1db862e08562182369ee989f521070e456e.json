{"sha": "e4d2f1db862e08562182369ee989f521070e456e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkMmYxZGI4NjJlMDg1NjIxODIzNjllZTk4OWY1MjEwNzBlNDU2ZQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2014-10-21T12:38:36Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2014-10-21T12:38:36Z"}, "message": "tree-ssa-math-opts.c (find_bswap_or_nop_1): Fix creation of MARKER_BYTE_UNKNOWN markers when handling casts.\n\n2014-10-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * tree-ssa-math-opts.c (find_bswap_or_nop_1): Fix creation of\n    MARKER_BYTE_UNKNOWN markers when handling casts.\n\n    gcc/testsuite/\n    * gcc.dg/optimize-bswaphi-1.c: New bswap pass test.\n\nFrom-SVN: r216511", "tree": {"sha": "0345b4b0f0f59e5f5483b3a56bd092376285a9df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0345b4b0f0f59e5f5483b3a56bd092376285a9df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4d2f1db862e08562182369ee989f521070e456e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d2f1db862e08562182369ee989f521070e456e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d2f1db862e08562182369ee989f521070e456e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d2f1db862e08562182369ee989f521070e456e/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a6230a84d35f4497feffa01b0e9926ce776f4e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6230a84d35f4497feffa01b0e9926ce776f4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6230a84d35f4497feffa01b0e9926ce776f4e9"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "6b1e1bbc19a5b4a83b60aeec8683f59542886aa7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d2f1db862e08562182369ee989f521070e456e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d2f1db862e08562182369ee989f521070e456e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4d2f1db862e08562182369ee989f521070e456e", "patch": "@@ -1,3 +1,8 @@\n+2014-10-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* tree-ssa-math-opts.c (find_bswap_or_nop_1): Fix creation of\n+\tMARKER_BYTE_UNKNOWN markers when handling casts.\n+\n 2014-10-21  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-phiopt.c (value_replacement): Properly verify we"}, {"sha": "57735a16164607c842251c7c57604794a38f6910", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4d2f1db862e08562182369ee989f521070e456e", "patch": "@@ -1,3 +1,7 @@\n+2014-10-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.dg/optimize-bswaphi-1.c: New bswap pass test.\n+\n 2014-10-21  Richard Biener  <rguenther@suse.de>\n \n \t* g++.dg/ipa/devirt-42.C: Fix dump scanning routines."}, {"sha": "18aba284e263bd34dd4fd3d51f46fe6a44407d34", "filename": "gcc/testsuite/gcc.dg/optimize-bswaphi-1.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c?ref=e4d2f1db862e08562182369ee989f521070e456e", "patch": "@@ -42,6 +42,20 @@ uint32_t read_be16_3 (unsigned char *data)\n   return *(data + 1) | (*data << 8);\n }\n \n+typedef int SItype __attribute__ ((mode (SI)));\n+typedef int HItype __attribute__ ((mode (HI)));\n+\n+/* Test that detection of significant sign extension works correctly. This\n+   checks that unknown byte marker are set correctly in cast of cast.  */\n+\n+HItype\n+swap16 (HItype in)\n+{\n+  return (HItype) (((in >> 0) & 0xFF) << 8)\n+\t\t| (((in >> 8) & 0xFF) << 0);\n+}\n+\n /* { dg-final { scan-tree-dump-times \"16 bit load in target endianness found at\" 3 \"bswap\" } } */\n-/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 3 \"bswap\" { xfail alpha*-*-* arm*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 1 \"bswap\" { target alpha*-*-* arm*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 4 \"bswap\" { xfail alpha*-*-* arm*-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"bswap\" } } */"}, {"sha": "2ef2333bc111b529874664c3518271079f02823d", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d2f1db862e08562182369ee989f521070e456e/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=e4d2f1db862e08562182369ee989f521070e456e", "patch": "@@ -1916,7 +1916,8 @@ find_bswap_or_nop_1 (gimple stmt, struct symbolic_number *n, int limit)\n \t    if (!TYPE_UNSIGNED (n->type) && type_size > old_type_size\n \t\t&& HEAD_MARKER (n->n, old_type_size))\n \t      for (i = 0; i < type_size - old_type_size; i++)\n-\t\tn->n |= MARKER_BYTE_UNKNOWN << (type_size - 1 - i);\n+\t\tn->n |= MARKER_BYTE_UNKNOWN\n+\t\t\t<< ((type_size - 1 - i) * BITS_PER_MARKER);\n \n \t    if (type_size < 64 / BITS_PER_MARKER)\n \t      {"}]}