{"sha": "2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1ZWQwZGY1MzEzMTMyOGNmZDRlMDcyYjc5ZDVmMGQyMWVlZmYxNQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-06-16T13:17:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-20T12:31:28Z"}, "message": "[Ada] Move Build_And_Insert_Cuda_Initialization to Expand_CUDA_Package\n\ngcc/ada/\n\n\t* exp_ch7.adb (Expand_N_Package_Body): Replace\n\tBuild_And_Insert_Cuda_Initialization with Expand_CUDA_Package.\n\t* gnat_cuda.adb (Expand_CUDA_Package): New procedure.\n\t(Build_And_Insert_Cuda_Initialization): Make internal.\n\t* gnat_cuda.ads (Expand_CUDA_Package): New procedure.\n\t(Build_And_Insert_Cuda_Initialization): Remove from spec.", "tree": {"sha": "9abe71a5655f3af0c2db14aef41006f7aa441009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9abe71a5655f3af0c2db14aef41006f7aa441009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e86334302c9315a56ba419f85ad388ca0c0a940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e86334302c9315a56ba419f85ad388ca0c0a940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e86334302c9315a56ba419f85ad388ca0c0a940"}], "stats": {"total": 69, "additions": 41, "deletions": 28}, "files": [{"sha": "3cc9b3c4127eb627c890b1f33f4763a4d3df6c73", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "patch": "@@ -5918,12 +5918,7 @@ package body Exp_Ch7 is\n             Build_Static_Dispatch_Tables (N);\n          end if;\n \n-         --  If procedures marked with CUDA_Global have been defined within N,\n-         --  we need to register them with the CUDA runtime at program startup.\n-         --  This requires multiple declarations and function calls which need\n-         --  to be appended to N's declarations.\n-\n-         Build_And_Insert_CUDA_Initialization (N);\n+         Expand_CUDA_Package (N);\n \n          Build_Task_Activation_Call (N);\n "}, {"sha": "6273a5dd5c61b90c82c7986b7051647e74fb7844", "filename": "gcc/ada/gnat_cuda.adb", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fgnat_cuda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fgnat_cuda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.adb?ref=2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "patch": "@@ -66,6 +66,25 @@ package body GNAT_CUDA is\n    --  least one procedure marked with aspect CUDA_Global. The values are\n    --  Elists of the marked procedures.\n \n+   procedure Build_And_Insert_CUDA_Initialization (N : Node_Id);\n+   --  Builds declarations necessary for CUDA initialization and inserts them\n+   --  in N, the package body that contains CUDA_Global nodes. These\n+   --  declarations are:\n+   --\n+   --    * A symbol to hold the pointer P to the CUDA fat binary.\n+   --\n+   --    * A type definition T for a wrapper that contains the pointer to the\n+   --      CUDA fat binary.\n+   --\n+   --    * An object of the aforementioned type to hold the aforementioned\n+   --      pointer.\n+   --\n+   --    * For each CUDA_Global procedure in the package, a declaration of a C\n+   --      string containing the function's name.\n+   --\n+   --    * A procedure that takes care of calling CUDA functions that register\n+   --      CUDA_Global procedures with the runtime.\n+\n    function Get_CUDA_Kernels (Pack_Id : Entity_Id) return Elist_Id;\n    --  Returns an Elist of all procedures marked with pragma CUDA_Global that\n    --  are declared within package body Pack_Body. Returns No_Elist if Pack_Id\n@@ -94,6 +113,23 @@ package body GNAT_CUDA is\n       Append_Elmt (Kernel, Kernels);\n    end Add_CUDA_Kernel;\n \n+   procedure Expand_CUDA_Package (N : Node_Id) is\n+   begin\n+\n+      --  If not compiling for the host, do not do anything.\n+\n+      if not Debug_Flag_Underscore_C then\n+         return;\n+      end if;\n+\n+      --  If procedures marked with CUDA_Global have been defined within N,\n+      --  we need to register them with the CUDA runtime at program startup.\n+      --  This requires multiple declarations and function calls which need\n+      --  to be appended to N's declarations.\n+\n+      Build_And_Insert_CUDA_Initialization (N);\n+   end Expand_CUDA_Package;\n+\n    ----------\n    -- Hash --\n    ----------\n@@ -524,7 +560,7 @@ package body GNAT_CUDA is\n    --  Start of processing for Build_And_Insert_CUDA_Initialization\n \n    begin\n-      if CUDA_Node_List = No_Elist or not Debug_Flag_Underscore_C then\n+      if CUDA_Node_List = No_Elist then\n          return;\n       end if;\n "}, {"sha": "d35bc8aca253726c9b7c023e93be2b4522e2cedd", "filename": "gcc/ada/gnat_cuda.ads", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fgnat_cuda.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5ed0df53131328cfd4e072b79d5f0d21eeff15/gcc%2Fada%2Fgnat_cuda.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.ads?ref=2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "patch": "@@ -82,26 +82,8 @@ package GNAT_CUDA is\n    --  Kernel is a procedure entity marked with CUDA_Global, Pack_Id is the\n    --  entity of its parent package body.\n \n-   procedure Build_And_Insert_CUDA_Initialization (N : Node_Id);\n-   --  Builds declarations necessary for CUDA initialization and inserts them\n-   --  in N, the package body that contains CUDA_Global nodes. These\n-   --  declarations are:\n-   --\n-   --    * A symbol to hold the pointer to the CUDA fat binary\n-   --\n-   --    * A type definition for a wrapper that contains the pointer to the\n-   --      CUDA fat binary\n-   --\n-   --    * An object of the aforementioned type to hold the aforementioned\n-   --      pointer.\n-   --\n-   --    * For each CUDA_Global procedure in the package, a declaration of a C\n-   --      string containing the function's name.\n-   --\n-   --    * A function that takes care of calling CUDA functions that register\n-   --      CUDA_Global procedures with the runtime.\n-   --\n-   --    * A boolean that holds the result of the call to the aforementioned\n-   --      function.\n+   procedure Expand_CUDA_Package (N : Node_Id);\n+   --  When compiling for the host, generate code to register kernels with the\n+   --  CUDA runtime and post-process kernels.\n \n end GNAT_CUDA;"}]}