{"sha": "0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRmMjE4YTlhN2ZkNDc1NmIyYWM5ZjQ5ZjI3NzQwY2Y0YzkyODk0ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T09:14:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T09:14:48Z"}, "message": "make.adb (Switches_Of): Check for Switches (others), before checking for Default_Switches (\"Ada\").\n\n2008-08-05  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Switches_Of): Check for Switches (others), before checking\n\tfor Default_Switches (\"Ada\").\n\t(Gnatmake): Use Builder'Switches (others) in preference to\n\tBuilder'Default_Switches (\"Ada\") if there are several mains.\n\n\t* prj-attr-pm.adb:\n\t(Add_Attribute): Add component Others_Allowed in Attribute_Record\n\taggregate.\n\n\t* prj-attr.adb:\n\tAdd markers to indicates that attributes Switches allow others as index\n\t(Others_Allowed_For): New Boolean function, returning True for\n\tattributes with the mark.\n\t(Initialize): Recognize optional letter 'O' as the marker for\n\tassociative array attributes where others is allowed as the index.\n\n\t* prj-attr.ads:\n\t(Others_Allowed_For): New Boolean function\n\t(Attribute_Record): New Boolean component Others_Allowed\n\t\n\t* prj-dect.adb:\n\t(Parse_Attribute_Declaration): For associative array attribute where\n\tothers is allowed as the index, allow others as an index.\n\n\t* prj-nmsc.adb:\n\t(Process_Binder): Skip associative array attributes with index others\n\t(Process_Compiler): Ditto\n\n\t* prj-util.adb:\n\t(Value_Of (Index, In_Array)): Make no attempt to put in lower case when\n\tindex is All_Other_Names.\n\n\t* prj.ads:\n\t(All_Other_Names): New constant\n\nFrom-SVN: r138683", "tree": {"sha": "cc13f338881f4b355c6a43a0c3d594d7a2e9ccb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc13f338881f4b355c6a43a0c3d594d7a2e9ccb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/comments", "author": null, "committer": null, "parents": [{"sha": "9cc014f915575184a59397c619626f221cc9d706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc014f915575184a59397c619626f221cc9d706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc014f915575184a59397c619626f221cc9d706"}], "stats": {"total": 284, "additions": 209, "deletions": 75}, "files": [{"sha": "505baed2f6b950377f7c812dd98321092f1ed093", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -1,3 +1,50 @@\n+2008-08-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib.adb: Update comments.\n+\n+\t* make.adb (Switches_Of): Check for Switches (others), before checking\n+\tfor Default_Switches (\"Ada\").\n+\t(Gnatmake): Use Builder'Switches (others) in preference to\n+\tBuilder'Default_Switches (\"Ada\") if there are several mains.\n+\n+\t* prj-attr-pm.adb:\n+\t(Add_Attribute): Add component Others_Allowed in Attribute_Record\n+\taggregate.\n+\n+\t* prj-attr.adb:\n+\tAdd markers to indicates that attributes Switches allow others as index\n+\t(Others_Allowed_For): New Boolean function, returning True for\n+\tattributes with the mark.\n+\t(Initialize): Recognize optional letter 'O' as the marker for\n+\tassociative array attributes where others is allowed as the index.\n+\n+\t* prj-attr.ads:\n+\t(Others_Allowed_For): New Boolean function\n+\t(Attribute_Record): New Boolean component Others_Allowed\n+\t\n+\t* prj-dect.adb:\n+\t(Parse_Attribute_Declaration): For associative array attribute where\n+\tothers is allowed as the index, allow others as an index.\n+\n+\t* prj-nmsc.adb:\n+\t(Process_Binder): Skip associative array attributes with index others\n+\t(Process_Compiler): Ditto\n+\n+\t* prj-util.adb:\n+\t(Value_Of (Index, In_Array)): Make no attempt to put in lower case when\n+\tindex is All_Other_Names.\n+\n+\t* prj.ads:\n+\t(All_Other_Names): New constant\n+\n+\t* prj-proc.adb:\n+\t(Process_Declarative_Items): Skip associative array attribute when index\n+\tis reserved word \"others\".\n+\n+2008-08-05  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gen-oscons.c: Adapt for VMS where termios.h is not available.\n+\n 2008-08-05  Thomas Quinot  <quinot@adacore.com>\n \n \t* a-rttiev.adb: Minor reformatting (comments)"}, {"sha": "6a5e8b961fc89734d78a380e1e81c9222377259c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 43, "deletions": 10, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -645,8 +645,9 @@ package body Make is\n    --  project file. If the Source_File ends with a standard GNAT extension\n    --  (\".ads\" or \".adb\"), try first the full name, then the name without the\n    --  extension, then, if Allow_ALI is True, the name with the extension\n-   --  \".ali\". If there is no switches for either names, try the default\n-   --  switches for Ada. If all failed, return No_Variable_Value.\n+   --  \".ali\". If there is no switches for either names, try first Switches\n+   --  (others) then the default switches for Ada. If all failed, return\n+   --  No_Variable_Value.\n \n    function Is_In_Object_Directory\n      (Source_File   : File_Name_Type;\n@@ -3463,6 +3464,7 @@ package body Make is\n \n                --  If an ALI file was generated by this compilation, scan\n                --  the ALI file and record it.\n+\n                --  If the scan fails, a previous ali file is inconsistent with\n                --  the unit just compiled.\n \n@@ -5123,31 +5125,53 @@ package body Make is\n                                   (Builder_Package).Decl.Arrays,\n                               In_Tree   => Project_Tree);\n \n+                     Other_Switches : constant Variable_Value :=\n+                           Prj.Util.Value_Of\n+                             (Name                    => All_Other_Names,\n+                              Index                   => 0,\n+                              Attribute_Or_Array_Name => Name_Switches,\n+                              In_Package              => Builder_Package,\n+                              In_Tree                 => Project_Tree);\n+\n                   begin\n-                     if Defaults /= Nil_Variable_Value then\n-                        if (not Quiet_Output)\n+                     if Other_Switches /= Nil_Variable_Value then\n+                        if not Quiet_Output\n+                          and then Switches /= No_Array_Element\n+                          and then Project_Tree.Array_Elements.Table\n+                                (Switches).Next /= No_Array_Element\n+                        then\n+                           Write_Line\n+                             (\"Warning: using Builder'Switches(others), \" &\n+                              \"as there are several mains\");\n+                        end if;\n+\n+                        Add_Switches\n+                          (File_Name   => \" \",\n+                           Index       => 0,\n+                           The_Package => Builder_Package,\n+                           Program     => None);\n+\n+                     elsif Defaults /= Nil_Variable_Value then\n+                        if not Quiet_Output\n                           and then Switches /= No_Array_Element\n                         then\n                            Write_Line\n                              (\"Warning: using Builder'Default_Switches\" &\n                               \"(\"\"Ada\"\"), as there are several mains\");\n                         end if;\n \n-                        --  As there is never a source with name \" \", we are\n-                        --  guaranteed to always get the general switches.\n-\n                         Add_Switches\n                           (File_Name   => \" \",\n                            Index       => 0,\n                            The_Package => Builder_Package,\n                            Program     => None);\n \n-                     elsif (not Quiet_Output)\n+                     elsif not Quiet_Output\n                        and then Switches /= No_Array_Element\n                      then\n                         Write_Line\n-                          (\"Warning: using no switches from package Builder,\" &\n-                           \" as there are several mains\");\n+                          (\"Warning: using no switches from package \" &\n+                           \"Builder, as there are several mains\");\n                      end if;\n                   end;\n                end if;\n@@ -8162,6 +8186,15 @@ package body Make is\n          end;\n       end if;\n \n+      if Switches = Nil_Variable_Value then\n+         Switches :=\n+           Prj.Util.Value_Of\n+             (Index     => All_Other_Names,\n+              Src_Index => 0,\n+              In_Array  => Switches_Array,\n+              In_Tree   => Project_Tree);\n+      end if;\n+\n       if Switches = Nil_Variable_Value then\n          Switches :=\n            Prj.Util.Value_Of"}, {"sha": "ef843c05b5b6de2bfbe6aa89558ed48db3b86c4e", "filename": "gcc/ada/prj-attr-pm.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr-pm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr-pm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr-pm.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,7 @@ package body Prj.Attr.PM is\n             Optional_Index    => False,\n             Attr_Kind         => Unknown,\n             Read_Only         => False,\n+            Others_Allowed    => False,\n             Next              =>\n               Package_Attributes.Table (To_Package.Value).First_Attribute);\n          Package_Attributes.Table (To_Package.Value).First_Attribute :="}, {"sha": "63651f94d9b6fd9df220869cd6c44000b132f719", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -56,6 +56,8 @@ package body Prj.Attr is\n \n    --  The third optional letter is\n    --     'R' to indicate that the attribute is read-only\n+   --     'O' to indicate that others is allowed as an index for an associative\n+   --     array\n \n    --  End is indicated by two consecutive '#'\n \n@@ -159,7 +161,7 @@ package body Prj.Attr is\n \n    \"Pcompiler#\" &\n    \"Ladefault_switches#\" &\n-   \"Lcswitches#\" &\n+   \"LcOswitches#\" &\n    \"SVlocal_configuration_pragmas#\" &\n    \"Salocal_config_file#\" &\n \n@@ -200,7 +202,7 @@ package body Prj.Attr is\n \n    \"Pbuilder#\" &\n    \"Ladefault_switches#\" &\n-   \"Lcswitches#\" &\n+   \"LcOswitches#\" &\n    \"Lcglobal_compilation_switches#\" &\n    \"Scexecutable#\" &\n    \"SVexecutable_suffix#\" &\n@@ -216,7 +218,7 @@ package body Prj.Attr is\n \n    \"Pbinder#\" &\n    \"Ladefault_switches#\" &\n-   \"Lcswitches#\" &\n+   \"LcOswitches#\" &\n \n    --  Configuration - Binding\n \n@@ -231,7 +233,7 @@ package body Prj.Attr is\n    \"Plinker#\" &\n    \"LVrequired_switches#\" &\n    \"Ladefault_switches#\" &\n-   \"Lcswitches#\" &\n+   \"LcOswitches#\" &\n    \"LVlinker_options#\" &\n    \"SVmap_file_option#\" &\n \n@@ -246,49 +248,49 @@ package body Prj.Attr is\n \n    \"Pcross_reference#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Finder\n \n    \"Pfinder#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Pretty_Printer\n \n    \"Ppretty_printer#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package gnatstub\n \n    \"Pgnatstub#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Check\n \n    \"Pcheck#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Synchronize\n \n    \"Psynchronize#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Eliminate\n \n    \"Peliminate#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Metrics\n \n    \"Pmetrics#\" &\n    \"Ladefault_switches#\" &\n-   \"Lbswitches#\" &\n+   \"LbOswitches#\" &\n \n    --  package Ide\n \n@@ -411,6 +413,7 @@ package body Prj.Attr is\n       Attribute_Name    : Name_Id           := No_Name;\n       First_Attribute   : Attr_Node_Id      := Attr.First_Attribute;\n       Read_Only         : Boolean;\n+      Others_Allowed    : Boolean;\n \n       function Attribute_Location return String;\n       --  Returns a string depending if we are in the project level attributes\n@@ -538,12 +541,16 @@ package body Prj.Attr is\n \n             Start := Start + 1;\n \n+            Read_Only := False;\n+            Others_Allowed := False;\n+\n             if Initialization_Data (Start) = 'R' then\n                Read_Only := True;\n                Start := Start + 1;\n \n-            else\n-               Read_Only := False;\n+            elsif Initialization_Data (Start) = 'O' then\n+               Others_Allowed := True;\n+               Start := Start + 1;\n             end if;\n \n             Finish := Start;\n@@ -586,6 +593,7 @@ package body Prj.Attr is\n                Optional_Index => Optional_Index,\n                Attr_Kind      => Attr_Kind,\n                Read_Only      => Read_Only,\n+               Others_Allowed => Others_Allowed,\n                Next           => Empty_Attr);\n             Start := Finish + 1;\n          end if;\n@@ -643,6 +651,17 @@ package body Prj.Attr is\n       end if;\n    end Optional_Index_Of;\n \n+   function Others_Allowed_For\n+     (Attribute : Attribute_Node_Id) return Boolean\n+   is\n+   begin\n+      if Attribute = Empty_Attribute then\n+         return False;\n+      else\n+         return Attrs.Table (Attribute.Value).Others_Allowed;\n+      end if;\n+   end Others_Allowed_For;\n+\n    -----------------------\n    -- Package_Name_List --\n    -----------------------\n@@ -750,6 +769,7 @@ package body Prj.Attr is\n          Optional_Index => Opt_Index,\n          Attr_Kind      => Real_Attr_Kind,\n          Read_Only      => False,\n+         Others_Allowed => False,\n          Next           => First_Attr);\n \n       Package_Attributes.Table (In_Package.Value).First_Attribute :=\n@@ -856,6 +876,7 @@ package body Prj.Attr is\n             Optional_Index => Attributes (Index).Opt_Index,\n             Attr_Kind      => Attr_Kind,\n             Read_Only      => False,\n+            Others_Allowed => False,\n             Next           => First_Attr);\n          First_Attr := Attrs.Last;\n       end loop;"}, {"sha": "59d00a30dbf2364fd7f7e2533b14e288341a4e7a", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -169,6 +169,10 @@ package Prj.Attr is\n    --  Returns Empty_Attribute if After is either Empty_Attribute or is the\n    --  last of the list.\n \n+   function Others_Allowed_For (Attribute : Attribute_Node_Id) return Boolean;\n+   --  Returns True if the index for an associative array attributes may be\n+   --  others.\n+\n    --------------\n    -- Packages --\n    --------------\n@@ -282,6 +286,7 @@ private\n       Optional_Index : Boolean;\n       Attr_Kind      : Attribute_Kind;\n       Read_Only      : Boolean;\n+      Others_Allowed : Boolean;\n       Next           : Attr_Node_Id;\n    end record;\n    --  Data for an attribute"}, {"sha": "37ae74bfb1008ceccf6738d79ad77755876f04a1", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -223,8 +223,9 @@ package body Prj.Dect is\n \n          else\n             if Is_Read_Only (Current_Attribute) then\n+               Error_Msg_Name_1 := Token_Name;\n                Error_Msg\n-                 (\"read-only attribute cannot be given a value\",\n+                 (\"read-only attribute %% cannot be given a value\",\n                   Token_Ptr);\n             end if;\n \n@@ -284,20 +285,33 @@ package body Prj.Dect is\n          end if;\n \n          Scan (In_Tree); --  past the left parenthesis\n-         Expect (Tok_String_Literal, \"literal string\");\n \n-         if Token = Tok_String_Literal then\n-            Get_Name_String (Token_Name);\n+         if Others_Allowed_For (Current_Attribute)\n+           and then Token = Tok_Others\n+         then\n+            Set_Associative_Array_Index_Of\n+              (Attribute, In_Tree, All_Other_Names);\n+            Scan (In_Tree); --  past others\n \n-            if Case_Insensitive (Attribute, In_Tree) then\n-               To_Lower (Name_Buffer (1 .. Name_Len));\n+         else\n+            if Others_Allowed_For (Current_Attribute) then\n+               Expect (Tok_String_Literal, \"literal string or others\");\n+            else\n+               Expect (Tok_String_Literal, \"literal string\");\n             end if;\n \n-            Set_Associative_Array_Index_Of (Attribute, In_Tree, Name_Find);\n-            Scan (In_Tree); --  past the literal string index\n+            if Token = Tok_String_Literal then\n+               Get_Name_String (Token_Name);\n \n-            if Token = Tok_At then\n-               case Attribute_Kind_Of (Current_Attribute) is\n+               if Case_Insensitive (Attribute, In_Tree) then\n+                  To_Lower (Name_Buffer (1 .. Name_Len));\n+               end if;\n+\n+               Set_Associative_Array_Index_Of (Attribute, In_Tree, Name_Find);\n+               Scan (In_Tree); --  past the literal string index\n+\n+               if Token = Tok_At then\n+                  case Attribute_Kind_Of (Current_Attribute) is\n                   when Optional_Index_Associative_Array |\n                        Optional_Index_Case_Insensitive_Associative_Array =>\n                      Scan (In_Tree);\n@@ -329,7 +343,8 @@ package body Prj.Dect is\n                      if Token = Tok_Integer_Literal then\n                         Scan (In_Tree);\n                      end if;\n-               end case;\n+                  end case;\n+               end if;\n             end if;\n          end if;\n "}, {"sha": "ae7709f8a0f2d0600c0a8a113a6adecb5b0cf3ef", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 37, "deletions": 33, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -1295,12 +1295,13 @@ package body Prj.Nmsc is\n                while Element_Id /= No_Array_Element loop\n                   Element := In_Tree.Array_Elements.Table (Element_Id);\n \n-                  --  Get the name of the language\n+                  if Element.Index /= All_Other_Names then\n+                     --  Get the name of the language\n \n-                  Get_Language_Index_Of (Element.Index);\n+                     Get_Language_Index_Of (Element.Index);\n \n-                  if Lang_Index /= No_Language_Index then\n-                     case Current_Array.Name is\n+                     if Lang_Index /= No_Language_Index then\n+                        case Current_Array.Name is\n                         when Name_Driver =>\n \n                            --  Attribute Driver (<language>)\n@@ -1342,7 +1343,8 @@ package body Prj.Nmsc is\n \n                         when others =>\n                            null;\n-                     end case;\n+                        end case;\n+                     end if;\n                   end if;\n \n                   Element_Id := Element.Next;\n@@ -1405,22 +1407,23 @@ package body Prj.Nmsc is\n                while Element_Id /= No_Array_Element loop\n                   Element := In_Tree.Array_Elements.Table (Element_Id);\n \n-                  --  Get the name of the language\n+                  if Element.Index /= All_Other_Names then\n+                     --  Get the name of the language\n \n-                  Get_Language_Index_Of (Element.Index);\n+                     Get_Language_Index_Of (Element.Index);\n \n-                  if Lang_Index /= No_Language_Index then\n-                     case Current_Array.Name is\n+                     if Lang_Index /= No_Language_Index then\n+                        case Current_Array.Name is\n                         when Name_Dependency_Switches =>\n \n                            --  Attribute Dependency_Switches (<language>)\n \n                            if In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Dependency_Kind = None\n+                             (Lang_Index).Config.Dependency_Kind = None\n                            then\n                               In_Tree.Languages_Data.Table\n                                 (Lang_Index).Config.Dependency_Kind :=\n-                                  Makefile;\n+                                Makefile;\n                            end if;\n \n                            List := Element.Value.Values;\n@@ -1442,7 +1445,7 @@ package body Prj.Nmsc is\n                            then\n                               In_Tree.Languages_Data.Table\n                                 (Lang_Index).Config.Dependency_Kind :=\n-                                  Makefile;\n+                                Makefile;\n                            end if;\n \n                            List := Element.Value.Values;\n@@ -1481,15 +1484,15 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Include_Path :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Include_Path_File =>\n \n                            --  Attribute Include_Path_File (<language>)\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Include_Path_File :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Driver =>\n \n@@ -1499,22 +1502,22 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Compiler_Driver :=\n-                               File_Name_Type (Element.Value.Value);\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Required_Switches =>\n                            Put (Into_List =>\n-                                  In_Tree.Languages_Data.Table\n-                                    (Lang_Index).Config.\n-                                                   Compiler_Required_Switches,\n+                                In_Tree.Languages_Data.Table\n+                                  (Lang_Index).Config.\n+                                  Compiler_Required_Switches,\n                                 From_List => Element.Value.Values,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Path_Syntax =>\n                            begin\n                               In_Tree.Languages_Data.Table\n                                 (Lang_Index).Config.Path_Syntax :=\n-                                  Path_Syntax_Kind'Value\n-                                    (Get_Name_String (Element.Value.Value));\n+                                Path_Syntax_Kind'Value\n+                                  (Get_Name_String (Element.Value.Value));\n \n                            exception\n                               when Constraint_Error =>\n@@ -1571,15 +1574,15 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Mapping_Spec_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Mapping_Body_Suffix =>\n \n                            --  Attribute Mapping_Body_Suffix (<language>)\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Mapping_Body_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Config_File_Switches =>\n \n@@ -1596,8 +1599,8 @@ package body Prj.Nmsc is\n                            end if;\n \n                            Put (Into_List =>\n-                                  In_Tree.Languages_Data.Table\n-                                    (Lang_Index).Config.Config_File_Switches,\n+                                In_Tree.Languages_Data.Table\n+                                  (Lang_Index).Config.Config_File_Switches,\n                                 From_List => List,\n                                 In_Tree   => In_Tree);\n \n@@ -1607,23 +1610,23 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Objects_Path :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Objects_Path_File =>\n \n                            --  Attribute Objects_Path_File (<language>)\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Objects_Path_File :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Config_Body_File_Name =>\n \n                            --  Attribute Config_Body_File_Name (<language>)\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Config_Body :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Config_Body_File_Name_Pattern =>\n \n@@ -1632,15 +1635,15 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Config_Body_Pattern :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Config_Spec_File_Name =>\n \n                            --  Attribute Config_Spec_File_Name (<language>)\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Config_Spec :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Config_Spec_File_Name_Pattern =>\n \n@@ -1649,7 +1652,7 @@ package body Prj.Nmsc is\n \n                            In_Tree.Languages_Data.Table\n                              (Lang_Index).Config.Config_Spec_Pattern :=\n-                               Element.Value.Value;\n+                             Element.Value.Value;\n \n                         when Name_Config_File_Unique =>\n \n@@ -1658,8 +1661,8 @@ package body Prj.Nmsc is\n                            begin\n                               In_Tree.Languages_Data.Table\n                                 (Lang_Index).Config.Config_File_Unique :=\n-                                  Boolean'Value\n-                                    (Get_Name_String (Element.Value.Value));\n+                                Boolean'Value\n+                                  (Get_Name_String (Element.Value.Value));\n                            exception\n                               when Constraint_Error =>\n                                  Error_Msg\n@@ -1671,7 +1674,8 @@ package body Prj.Nmsc is\n \n                         when others =>\n                            null;\n-                     end case;\n+                        end case;\n+                     end if;\n                   end if;\n \n                   Element_Id := Element.Next;"}, {"sha": "5894e4daf359589ee3dc3ff7e759bc53265c8d05", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -600,19 +600,23 @@ package body Prj.Util is\n       Real_Index_1 := Index;\n \n       if not Element.Index_Case_Sensitive or Force_Lower_Case_Index then\n-         Get_Name_String (Index);\n-         To_Lower (Name_Buffer (1 .. Name_Len));\n-         Real_Index_1 := Name_Find;\n+         if Index /= All_Other_Names then\n+            Get_Name_String (Index);\n+            To_Lower (Name_Buffer (1 .. Name_Len));\n+            Real_Index_1 := Name_Find;\n+         end if;\n       end if;\n \n       while Current /= No_Array_Element loop\n          Element := In_Tree.Array_Elements.Table (Current);\n          Real_Index_2 := Element.Index;\n \n          if not Element.Index_Case_Sensitive or Force_Lower_Case_Index then\n-            Get_Name_String (Element.Index);\n-            To_Lower (Name_Buffer (1 .. Name_Len));\n-            Real_Index_2 := Name_Find;\n+            if Element.Index /= All_Other_Names then\n+               Get_Name_String (Element.Index);\n+               To_Lower (Name_Buffer (1 .. Name_Len));\n+               Real_Index_2 := Name_Find;\n+            end if;\n          end if;\n \n          if Real_Index_1 = Real_Index_2 and then"}, {"sha": "ebd9fc6fc87e3cd860018078a0ae960893b40578", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df218a9a7fd4756b2ac9f49f27740cf4c92894d/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=0df218a9a7fd4756b2ac9f49f27740cf4c92894d", "patch": "@@ -40,6 +40,10 @@ with GNAT.OS_Lib;          use GNAT.OS_Lib;\n \n package Prj is\n \n+   All_Other_Names : constant Name_Id := Names_High_Bound;\n+   --  Name used to replace others as an index of an associative array\n+   --  attribute, when allowed.\n+\n    Subdirs_Option : constant String := \"--subdirs=\";\n    --  Switch used to indicate that the real directories (object, exec,\n    --  library, ...) are subdirectories of what is indicated in the project"}]}