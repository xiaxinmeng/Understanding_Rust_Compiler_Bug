{"sha": "91d01b33e8c331d594b40f464b2af44c8aeac597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMDFiMzNlOGMzMzFkNTk0YjQwZjQ2NGIyYWY0NGM4YWVhYzU5Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-12-12T17:42:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-12T17:42:19Z"}, "message": "PR libstdc++/83395 fix invocable traits for INVOKE<cv void>\n\n\tPR libstdc++/83395\n\t* include/std/type_traits (__is_invocable_impl): Remove partial\n\tspecialization for INVOKE<void> and restore is_void<R> check in\n\tprimary template.\n\t(__is_nt_invocable_impl): Likewise.\n\t* testsuite/20_util/is_invocable/83395.cc: New test.\n\t* testsuite/20_util/is_nothrow_invocable/83395.cc: New test.\n\nFrom-SVN: r255584", "tree": {"sha": "18e8c9d13c7ff69685e4778e974f340200e7a764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18e8c9d13c7ff69685e4778e974f340200e7a764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d01b33e8c331d594b40f464b2af44c8aeac597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d01b33e8c331d594b40f464b2af44c8aeac597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d01b33e8c331d594b40f464b2af44c8aeac597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d01b33e8c331d594b40f464b2af44c8aeac597/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b2d1371a70327f66932315c494eff089b8ff9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b2d1371a70327f66932315c494eff089b8ff9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b2d1371a70327f66932315c494eff089b8ff9c"}], "stats": {"total": 84, "additions": 70, "deletions": 14}, "files": [{"sha": "c8c93350a608379203e9b859ddbed0a400eb0a77", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=91d01b33e8c331d594b40f464b2af44c8aeac597", "patch": "@@ -1,3 +1,13 @@\n+2017-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/83395\n+\t* include/std/type_traits (__is_invocable_impl): Remove partial\n+\tspecialization for INVOKE<void> and restore is_void<R> check in\n+\tprimary template.\n+\t(__is_nt_invocable_impl): Likewise.\n+\t* testsuite/20_util/is_invocable/83395.cc: New test.\n+\t* testsuite/20_util/is_nothrow_invocable/83395.cc: New test.\n+\n 2017-12-07  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR libstdc++/83120"}, {"sha": "3d94566fa6313236f7488e215784fabd914ccd3d", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=91d01b33e8c331d594b40f464b2af44c8aeac597", "patch": "@@ -2589,12 +2589,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Result, typename _Ret>\n     struct __is_invocable_impl<_Result, _Ret, __void_t<typename _Result::type>>\n-    : is_convertible<typename _Result::type, _Ret>::type\n-    { };\n-\n-  template<typename _Result>\n-    struct __is_invocable_impl<_Result, void, __void_t<typename _Result::type>>\n-    : true_type\n+    : __or_<is_void<_Ret>, is_convertible<typename _Result::type, _Ret>>::type\n     { };\n \n   template<typename _Fn, typename... _ArgTypes>\n@@ -2699,14 +2694,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Result, typename _Ret>\n     struct __is_nt_invocable_impl<_Result, _Ret,\n \t\t\t\t  __void_t<typename _Result::type>>\n-    : __and_<is_convertible<typename _Result::type, _Ret>,\n-\t     is_nothrow_constructible<_Ret, typename _Result::type>>\n-    { };\n-\n-  template<typename _Result>\n-    struct __is_nt_invocable_impl<_Result, void,\n-\t\t\t\t  __void_t<typename _Result::type>>\n-    : true_type\n+    : __or_<is_void<_Ret>,\n+\t    __and_<is_convertible<typename _Result::type, _Ret>,\n+\t\t   is_nothrow_constructible<_Ret, typename _Result::type>>>\n     { };\n \n   /// std::is_nothrow_invocable_r"}, {"sha": "7fb1368cd091c9d7c4f16de44fa8a26414095519", "filename": "libstdc++-v3/testsuite/20_util/is_invocable/83395.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_invocable%2F83395.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_invocable%2F83395.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_invocable%2F83395.cc?ref=91d01b33e8c331d594b40f464b2af44c8aeac597", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <type_traits>\n+\n+// PR libstdc++/83395\n+using F = int(*)();\n+static_assert(std::is_invocable_r<void, F>::value);\n+static_assert(std::is_invocable_r<void const, F>::value);\n+static_assert(std::is_invocable_r<void volatile, F>::value);\n+static_assert(std::is_invocable_r<void const volatile, F>::value);"}, {"sha": "2a253df8d1be3adc9d1b92db6d38e9d7a53d0f11", "filename": "libstdc++-v3/testsuite/20_util/is_nothrow_invocable/83395.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_nothrow_invocable%2F83395.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d01b33e8c331d594b40f464b2af44c8aeac597/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_nothrow_invocable%2F83395.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_nothrow_invocable%2F83395.cc?ref=91d01b33e8c331d594b40f464b2af44c8aeac597", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <type_traits>\n+\n+// PR libstdc++/83395\n+using F = int(*)() noexcept;\n+static_assert(std::is_nothrow_invocable_r<void, F>::value);\n+static_assert(std::is_nothrow_invocable_r<void const, F>::value);\n+static_assert(std::is_nothrow_invocable_r<void volatile, F>::value);\n+static_assert(std::is_nothrow_invocable_r<void const volatile, F>::value);"}]}