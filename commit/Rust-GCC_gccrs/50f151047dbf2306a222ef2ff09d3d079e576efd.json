{"sha": "50f151047dbf2306a222ef2ff09d3d079e576efd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBmMTUxMDQ3ZGJmMjMwNmEyMjJlZjJmZjA5ZDNkMDc5ZTU3NmVmZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-25T21:51:47Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-25T21:51:47Z"}, "message": "(do_include): For \"...\" case, leave fend pointing at terminating 0.\n\nDistinct error msgs for empty file name and for bad syntax.\n\nFrom-SVN: r3880", "tree": {"sha": "179a876633bf650f88ed5a8474b0270badf60ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179a876633bf650f88ed5a8474b0270badf60ef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50f151047dbf2306a222ef2ff09d3d079e576efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50f151047dbf2306a222ef2ff09d3d079e576efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50f151047dbf2306a222ef2ff09d3d079e576efd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50f151047dbf2306a222ef2ff09d3d079e576efd/comments", "author": null, "committer": null, "parents": [{"sha": "2e2863d49f675e241b7529c1123bfae2dacbe3c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2863d49f675e241b7529c1123bfae2dacbe3c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2863d49f675e241b7529c1123bfae2dacbe3c8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "02a270495c40836eb57396d1d7e0be884d4d57f5", "filename": "gcc/cccp.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50f151047dbf2306a222ef2ff09d3d079e576efd/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50f151047dbf2306a222ef2ff09d3d079e576efd/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=50f151047dbf2306a222ef2ff09d3d079e576efd", "patch": "@@ -3820,7 +3820,7 @@ do_include (buf, limit, op, keyword)\n \t    goto fail;\n \t}\n       }\n-      *fend++ = 0;\n+      *fend = 0;\n \n       /* We have \"filename\".  Figure out directory this source\n \t file is coming from and put it on the front of the list. */\n@@ -3877,8 +3877,8 @@ do_include (buf, limit, op, keyword)\n   default:\n   fail:\n     if (retried) {\n-      fend = fbeg;\n-      break;\n+      error (\"`#%s' expects \\\"FILENAME\\\" or <FILENAME>\", keyword->name);\n+      return 0;\n     } else {\n       trybuf = expand_to_temp_buffer (buf, limit, 0, 0);\n       buf = (U_CHAR *) alloca (trybuf.bufp - trybuf.buf + 1);\n@@ -3908,7 +3908,7 @@ do_include (buf, limit, op, keyword)\n \n   if (flen == 0)\n     {\n-      error (\"`#%s' expects \\\"fname\\\" or <fname>\", keyword->name);\n+      error (\"empty file name in `#%s'\", keyword->name);\n       return 0;\n     }\n "}]}