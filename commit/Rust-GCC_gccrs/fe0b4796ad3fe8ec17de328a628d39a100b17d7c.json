{"sha": "fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUwYjQ3OTZhZDNmZThlYzE3ZGUzMjhhNjI4ZDM5YTEwMGIxN2Q3Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-02-18T13:58:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-02-18T13:58:21Z"}, "message": "re PR tree-optimization/56366 (ICE: verify_gimple failed (incompatible types in PHI argument))\n\n2013-02-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56366\n\t* tree-vect-loop.c (get_initial_def_for_induction): Properly\n\thandle sign-conversion of outer-loop initial induction value.\n\n\t* gcc.dg/torture/pr56366.c: New testcase.\n\nFrom-SVN: r196121", "tree": {"sha": "beccd4d1dc09cec46a171d05d656031fa88d162d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beccd4d1dc09cec46a171d05d656031fa88d162d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73db8ff1f38c1f867af80ca7d477212485345d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73db8ff1f38c1f867af80ca7d477212485345d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73db8ff1f38c1f867af80ca7d477212485345d61"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "0caa412055f0f848ece38f04ec7c4c399bd0f42e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "patch": "@@ -1,3 +1,9 @@\n+2013-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56366\n+\t* tree-vect-loop.c (get_initial_def_for_induction): Properly\n+\thandle sign-conversion of outer-loop initial induction value.\n+\n 2013-02-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56349"}, {"sha": "fe995e8e0eab807e20d988fdb341e76c94ebeeff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "patch": "@@ -1,3 +1,8 @@\n+2013-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56366\n+\t* gcc.dg/torture/pr56366.c: New testcase.\n+\n 2013-02-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56349"}, {"sha": "15a430048237a861368fa24c0e6872090089ed4c", "filename": "gcc/testsuite/gcc.dg/torture/pr56366.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56366.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56366.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56366.c?ref=fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+\n+int a, *c, d;\n+unsigned short b;\n+short e;\n+\n+void f(void)\n+{\n+  for(;; d++)\n+    {\n+      for(a = -9; a < 63; a++)\n+\tfor(d = 0; d < 9; d++)\n+\t  b -= --e;\n+\n+      a = b & *c;\n+    }\n+}"}, {"sha": "a2f90138fc9fc09b6df021e7793c8f6033ce3730", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b4796ad3fe8ec17de328a628d39a100b17d7c/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=fe0b4796ad3fe8ec17de328a628d39a100b17d7c", "patch": "@@ -3203,6 +3203,21 @@ get_initial_def_for_induction (gimple iv_phi)\n       tree iv_def = PHI_ARG_DEF_FROM_EDGE (iv_phi,\n                                            loop_preheader_edge (iv_loop));\n       vec_init = vect_get_vec_def_for_operand (iv_def, iv_phi, NULL);\n+      /* If the initial value is not of proper type, convert it.  */\n+      if (!useless_type_conversion_p (vectype, TREE_TYPE (vec_init)))\n+\t{\n+\t  new_stmt = gimple_build_assign_with_ops\n+\t      (VIEW_CONVERT_EXPR,\n+\t       vect_get_new_vect_var (vectype, vect_simple_var, \"vec_iv_\"),\n+\t       build1 (VIEW_CONVERT_EXPR, vectype, vec_init), NULL_TREE);\n+\t  vec_init = make_ssa_name (gimple_assign_lhs (new_stmt), new_stmt);\n+\t  gimple_assign_set_lhs (new_stmt, vec_init);\n+\t  new_bb = gsi_insert_on_edge_immediate (loop_preheader_edge (iv_loop),\n+\t\t\t\t\t\t new_stmt);\n+\t  gcc_assert (!new_bb);\n+\t  set_vinfo_for_stmt (new_stmt,\n+\t\t\t      new_stmt_vec_info (new_stmt, loop_vinfo, NULL));\n+\t}\n     }\n   else\n     {"}]}