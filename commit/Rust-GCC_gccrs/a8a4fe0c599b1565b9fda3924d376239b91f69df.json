{"sha": "a8a4fe0c599b1565b9fda3924d376239b91f69df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhNGZlMGM1OTliMTU2NWI5ZmRhMzkyNGQzNzYyMzliOTFmNjlkZg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2006-01-29T15:37:20Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2006-01-29T15:37:20Z"}, "message": "toplev.c (floor_log2, exact_log2): Don't define if __cplusplus.\n\n        * toplev.c (floor_log2, exact_log2): Don't define if __cplusplus.\n        (push_srcloc): Use XNEW.\n        (init_asm_output, default_get_pch_validity): Use XNEWVEC.\n\nCo-Authored-By: Marcin Dalecki <martin@dalecki.de>\n\nFrom-SVN: r110372", "tree": {"sha": "2c06dbf9a00955bfff48b2107bb0728a1f445bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c06dbf9a00955bfff48b2107bb0728a1f445bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8a4fe0c599b1565b9fda3924d376239b91f69df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a4fe0c599b1565b9fda3924d376239b91f69df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a4fe0c599b1565b9fda3924d376239b91f69df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a4fe0c599b1565b9fda3924d376239b91f69df/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2cc9c3a0d08a2726b3d6ad7eb738f0e64048726e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc9c3a0d08a2726b3d6ad7eb738f0e64048726e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cc9c3a0d08a2726b3d6ad7eb738f0e64048726e"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "366779f2bf1f489bb5fc14ae617ce493274ca866", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a4fe0c599b1565b9fda3924d376239b91f69df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a4fe0c599b1565b9fda3924d376239b91f69df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8a4fe0c599b1565b9fda3924d376239b91f69df", "patch": "@@ -1,3 +1,10 @@\n+2006-01-29  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\t    Marcin Dalecki  <martin@dalecki.de>\n+\n+\t* toplev.c (floor_log2, exact_log2): Don't define if __cplusplus.\n+\t(push_srcloc): Use XNEW.\n+\t(init_asm_output, default_get_pch_validity): Use XNEWVEC.\n+\n 2006-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* df-core.c (df_set_blocks): Deleted all variable."}, {"sha": "62c9b4ff93703861c489439627825dd5e91e3718", "filename": "gcc/toplev.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a4fe0c599b1565b9fda3924d376239b91f69df/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a4fe0c599b1565b9fda3924d376239b91f69df/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a8a4fe0c599b1565b9fda3924d376239b91f69df", "patch": "@@ -516,6 +516,12 @@ read_integral_parameter (const char *p, const char *pname, const int  defval)\n   return atoi (p);\n }\n \n+/* When compiling with a recent enough GCC, we use the GNU C \"extern inline\"\n+   for floor_log2 and exact_log2; see toplev.h.  That construct, however,\n+   conflicts with the ISO C++ One Definition Rule.   */\n+\n+#if !defined (__cplusplus)\n+\n /* Given X, an unsigned number, return the largest int Y such that 2**Y <= X.\n    If X is 0, return -1.  */\n \n@@ -566,6 +572,8 @@ exact_log2 (unsigned HOST_WIDE_INT x)\n #endif\n }\n \n+#endif /* !defined (__cplusplus)  */\n+\n /* Handler for fatal signals, such as SIGSEGV.  These are transformed\n    into ICE messages, which is much more user friendly.  In case the\n    error printer crashes, reset the signal to prevent infinite recursion.  */\n@@ -942,7 +950,7 @@ push_srcloc (const char *file, int line)\n {\n   struct file_stack *fs;\n \n-  fs = xmalloc (sizeof (struct file_stack));\n+  fs = XNEW (struct file_stack);\n   fs->location = input_location;\n   fs->next = input_file_stack;\n #ifdef USE_MAPPED_LOCATION\n@@ -1233,7 +1241,7 @@ init_asm_output (const char *name)\n       if (asm_file_name == 0)\n \t{\n \t  int len = strlen (dump_base_name);\n-\t  char *dumpname = xmalloc (len + 6);\n+\t  char *dumpname = XNEWVEC (char, len + 6);\n \t  memcpy (dumpname, dump_base_name, len + 1);\n \t  strip_off_ending (dumpname, len);\n \t  strcat (dumpname, \".s\");\n@@ -1299,7 +1307,7 @@ default_get_pch_validity (size_t *len)\n     if (option_affects_pch_p (i, &state))\n       *len += state.size;\n \n-  result = r = xmalloc (*len);\n+  result = r = XNEWVEC (char, *len);\n   r[0] = flag_pic;\n   r[1] = flag_pie;\n   r += 2;"}]}