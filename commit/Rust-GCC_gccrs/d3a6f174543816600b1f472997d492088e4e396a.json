{"sha": "d3a6f174543816600b1f472997d492088e4e396a", "node_id": "C_kwDOANBUbNoAKGQzYTZmMTc0NTQzODE2NjAwYjFmNDcyOTk3ZDQ5MjA4OGU0ZTM5NmE", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2023-03-22T15:20:49Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2023-03-22T15:20:49Z"}, "message": "c++: Avoid duplicate diagnostic calling unavailable function [PR109177]\n\nAs the PR shows, we currently emit duplicate diagnostics for calls to\nfunctions marked with __attribute__((unavailable)). This patch fixes\nthat.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/109177\n\t* call.cc (build_over_call): Use make_temp_override to suppress\n\tboth unavailable and deprecated warnings when calling\n\tbuild_addr_func.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/109177\n\t* g++.dg/ext/pr109177.C: New test.", "tree": {"sha": "ac8c60dada910999b3acb7bd444c69b9f8ac54ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac8c60dada910999b3acb7bd444c69b9f8ac54ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3a6f174543816600b1f472997d492088e4e396a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a6f174543816600b1f472997d492088e4e396a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a6f174543816600b1f472997d492088e4e396a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a6f174543816600b1f472997d492088e4e396a/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c652ebbf79bd168766097f3ac4c1b3b79d68a43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c652ebbf79bd168766097f3ac4c1b3b79d68a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c652ebbf79bd168766097f3ac4c1b3b79d68a43"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "d5e8ccc07d3dd9fc4e17040ba6e70b7e40ae15ba", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a6f174543816600b1f472997d492088e4e396a/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a6f174543816600b1f472997d492088e4e396a/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=d3a6f174543816600b1f472997d492088e4e396a", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"internal-fn.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n+#include \"decl.h\"\n #include \"gcc-rich-location.h\"\n \n /* The various kinds of conversion.  */\n@@ -10413,10 +10414,11 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n     }\n   else\n     {\n-      /* If FN is marked deprecated, then we've already issued a deprecated-use\n-\t warning from mark_used above, so avoid redundantly issuing another one\n-\t from build_addr_func.  */\n-      warning_sentinel w (warn_deprecated_decl);\n+      /* If FN is marked deprecated or unavailable, then we've already\n+\t issued a diagnostic from mark_used above, so avoid redundantly\n+\t issuing another one from build_addr_func.  */\n+      auto w = make_temp_override (deprecated_state,\n+\t\t\t\t   UNAVAILABLE_DEPRECATED_SUPPRESS);\n \n       fn = build_addr_func (fn, complain);\n       if (fn == error_mark_node)"}, {"sha": "cc322f650af3f1425edff4b8235d511f942e9b15", "filename": "gcc/testsuite/g++.dg/ext/pr109177.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a6f174543816600b1f472997d492088e4e396a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr109177.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a6f174543816600b1f472997d492088e4e396a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr109177.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr109177.C?ref=d3a6f174543816600b1f472997d492088e4e396a", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile }\n+void foo() __attribute__((unavailable));\n+void bar () {\n+  foo (); // { dg-bogus \"is unavailable.*is unavailable\" }\n+  // { dg-error \"is unavailable\" \"\" { target *-*-* } .-1 }\n+}"}]}