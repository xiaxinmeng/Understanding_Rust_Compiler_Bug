{"sha": "69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkMTBlMTVmYjAwMWIzNGFlZGZlMTRhN2FmN2M5ZTFmYWZlYTZhMA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-10-31T14:30:48Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-10-31T14:30:48Z"}, "message": "re PR fortran/33162 (INTRINSIC functions as ACTUAL argument)\n\n2007-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/33162\n\t* gfortran.dg/interface_19.f90: New.\n\t* gfortran.dg/interface_20.f90: New.\n\t* gfortran.dg/interface_21.f90: New.\n\nFrom-SVN: r129799", "tree": {"sha": "b6c163880ce8c9ea848f207995022ab68f0054b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6c163880ce8c9ea848f207995022ab68f0054b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/comments", "author": null, "committer": null, "parents": [{"sha": "26033479fb7d724061af07716f0077934032bbf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26033479fb7d724061af07716f0077934032bbf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26033479fb7d724061af07716f0077934032bbf9"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "b9307a17ee6e1c3f50393115a9066dbd7aa6417a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "patch": "@@ -1,3 +1,10 @@\n+2007-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/33162\n+\t* gfortran.dg/interface_19.f90: New.\n+\t* gfortran.dg/interface_20.f90: New.\n+\t* gfortran.dg/interface_21.f90: New.\n+\t\n 2007-10-31  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/32377"}, {"sha": "2d72caa058d6ff520dcc86ce540cda4135d64c6f", "filename": "gcc/testsuite/gfortran.dg/interface_19.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90?ref=69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do run }\n+! PR33162 INTRINSIC functions as ACTUAL argument\n+! Test case adapted from PR by Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+module m\n+implicit none\n+contains\n+  subroutine sub(a)\n+    optional :: a\n+    character(25) :: temp\n+    interface\n+      function a(x)\n+        real(kind=8):: a\n+        real(kind=8):: x\n+        intent(in) :: x\n+      end function a\n+    end interface\n+    if(present(a)) then\n+      write(temp,'(f16.10)')a(4.0d0)\n+      if (trim(temp) /= '   -0.6536436209') call abort\n+    endif\n+  end subroutine sub\n+end module m\n+\n+use m\n+implicit none\n+intrinsic dcos\n+call sub()\n+call sub(dcos)\n+end"}, {"sha": "2d7df47eb8e7678d632a52f5e2b5d80b00836c40", "filename": "gcc/testsuite/gfortran.dg/interface_20.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90?ref=69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! PR33162 INTRINSIC functions as ACTUAL argument\n+! Test case adapted from PR by Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+module m\n+implicit none\n+contains\n+  subroutine sub(a)\n+    interface\n+      function a()\n+        real :: a\n+      end function a\n+    end interface\n+    print *, a()\n+  end subroutine sub\n+end module m\n+use m\n+implicit none\n+intrinsic cos\n+call sub(cos) ! { dg-error \"Type/rank mismatch in argument\" }\n+end"}, {"sha": "fea6507b05d5ab618372e7e70ee68fe4c1817214", "filename": "gcc/testsuite/gfortran.dg/interface_21.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90?ref=69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+! PR33162 INTRINSIC functions as ACTUAL argument\n+! Test case adapted from PR by Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+module m\n+implicit none\n+contains\n+  subroutine sub(a)\n+    interface\n+      function a(x)\n+        real :: a, x\n+        intent(in) :: x\n+      end function a\n+    end interface\n+    print *, a(4.0)\n+  end subroutine sub\n+end module m\n+\n+use m\n+implicit none\n+EXTERNAL foo  ! implicit interface is undefined\n+call sub(foo) ! { dg-error \"Type/rank mismatch in argument\" }\n+end"}]}