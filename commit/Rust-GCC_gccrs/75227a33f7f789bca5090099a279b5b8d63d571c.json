{"sha": "75227a33f7f789bca5090099a279b5b8d63d571c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyMjdhMzNmN2Y3ODliY2E1MDkwMDk5YTI3OWI1YjhkNjNkNTcxYw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2002-03-05T02:34:07Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2002-03-05T02:34:07Z"}, "message": "toplev.c (documented_lang_options): Document more language-specific options.\n\n\t* toplev.c (documented_lang_options): Document more\n\tlanguage-specific options.\n\t* doc/invoke.texi (Warning Options): Correct documentation for\n\t-Wno-multichar, -Wno-div-by-zero, and -Wsystem-headers.\n\t* c-decl.c (c_decode_option): Use a table to handle warning options.\n\nFrom-SVN: r50299", "tree": {"sha": "6806586cc8e5784a42c5d33e4ef34100e6e7b370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6806586cc8e5784a42c5d33e4ef34100e6e7b370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75227a33f7f789bca5090099a279b5b8d63d571c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75227a33f7f789bca5090099a279b5b8d63d571c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75227a33f7f789bca5090099a279b5b8d63d571c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75227a33f7f789bca5090099a279b5b8d63d571c/comments", "author": null, "committer": null, "parents": [{"sha": "4f1aac426685bb179bd45b525ae95e1f80bd5149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1aac426685bb179bd45b525ae95e1f80bd5149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f1aac426685bb179bd45b525ae95e1f80bd5149"}], "stats": {"total": 306, "additions": 119, "deletions": 187}, "files": [{"sha": "dee45a2967dfa300f8a20dd92866a53aeb6e3e71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75227a33f7f789bca5090099a279b5b8d63d571c", "patch": "@@ -1,3 +1,11 @@\n+2002-03-04  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* toplev.c (documented_lang_options): Document more\n+\tlanguage-specific options.\n+\t* doc/invoke.texi (Warning Options): Correct documentation for\n+\t-Wno-multichar, -Wno-div-by-zero, and -Wsystem-headers.\n+\t* c-decl.c (c_decode_option): Use a table to handle warning options.\n+\n 2002-03-05  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.h (ENCODE_SECTION_INFO): Pass on new second"}, {"sha": "d15f47e4baac48248c977ba6a3edff81ff5a2e83", "filename": "gcc/c-decl.c", "status": "modified", "additions": 64, "deletions": 143, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=75227a33f7f789bca5090099a279b5b8d63d571c", "patch": "@@ -460,6 +460,50 @@ c_decode_option (argc, argv)\n   int strings_processed;\n   char *p = argv[0];\n \n+  static const struct {\n+      /* The name of the option.  */\n+      const char *option;\n+      /* If non-NULL, a flag variable to set to 0 or 1.  If NULL,\n+         this means that cpp handles this option.  */\n+      int *flag;\n+  } warn_options[] = {\n+    /* This list is in alphabetical order.  Keep it like that.  */\n+    { \"bad-function-cast\", &warn_bad_function_cast },\n+    { \"cast-qual\", &warn_cast_qual },\n+    { \"char-subscripts\", &warn_char_subscripts },\n+    { \"comment\", NULL },\n+    { \"comments\", NULL },\n+    { \"conversion\", &warn_conversion },\n+    { \"div-by-zero\", &warn_div_by_zero },\n+    { \"float-equal\", &warn_float_equal },\n+    { \"format-extra-args\", &warn_format_extra_args },\n+    { \"format-nonliteral\", &warn_format_nonliteral },\n+    { \"format-security\", &warn_format_security },\n+    { \"format-y2k\", &warn_format_y2k },\n+    { \"implicit-function-declaration\", &mesg_implicit_function_declaration },\n+    { \"implicit-int\", &warn_implicit_int },\n+    { \"import\", NULL },\n+    { \"long-long\", &warn_long_long },\n+    { \"main\", &warn_main },\n+    { \"missing-braces\", &warn_missing_braces },\n+    { \"missing-declarations\", &warn_missing_declarations },\n+    { \"missing-format-attribute\", &warn_missing_format_attribute },\n+    { \"missing-prototypes\", &warn_missing_prototypes },\n+    { \"multichar\", &warn_multichar },\n+    { \"nested-externs\", &warn_nested_externs },\n+    { \"parentheses\", &warn_parentheses },\n+    { \"pointer-arith\", &warn_pointer_arith },\n+    { \"redundant-decls\", &warn_redundant_decls },\n+    { \"return-type\", &warn_return_type },\n+    { \"sequence-point\", &warn_sequence_point },\n+    { \"sign-compare\", &warn_sign_compare },\n+    { \"strict-prototypes\", &warn_strict_prototypes },\n+    { \"traditional\", &warn_traditional },\n+    { \"trigraphs\", NULL },\n+    { \"undef\", NULL },\n+    { \"write-strings\", &flag_const_strings }\n+  };\n+\n   strings_processed = cpp_handle_option (parse_in, argc, argv, 0);\n \n   if (!strcmp (p, \"-fhosted\") || !strcmp (p, \"-fno-freestanding\"))\n@@ -595,14 +639,12 @@ c_decode_option (argc, argv)\n     goto iso_1990;\n   else if (!strcmp (p, \"-Werror-implicit-function-declaration\"))\n     mesg_implicit_function_declaration = 2;\n-  else if (!strcmp (p, \"-Wimplicit-function-declaration\"))\n-    mesg_implicit_function_declaration = 1;\n-  else if (!strcmp (p, \"-Wno-implicit-function-declaration\"))\n-    mesg_implicit_function_declaration = 0;\n-  else if (!strcmp (p, \"-Wimplicit-int\"))\n-    warn_implicit_int = 1;\n-  else if (!strcmp (p, \"-Wno-implicit-int\"))\n-    warn_implicit_int = 0;\n+  else if (!strncmp (p, \"-Wformat=\", 9))\n+    set_Wformat (atoi (p + 9));\n+  else if (!strcmp (p, \"-Wformat\"))\n+    set_Wformat (1);\n+  else if (!strcmp (p, \"-Wno-format\"))\n+    set_Wformat (0);\n   else if (!strcmp (p, \"-Wimplicit\"))\n     {\n       warn_implicit_int = 1;\n@@ -611,142 +653,8 @@ c_decode_option (argc, argv)\n     }\n   else if (!strcmp (p, \"-Wno-implicit\"))\n     warn_implicit_int = 0, mesg_implicit_function_declaration = 0;\n-  else if (!strcmp (p, \"-Wlong-long\"))\n-    warn_long_long = 1;\n-  else if (!strcmp (p, \"-Wno-long-long\"))\n-    warn_long_long = 0;\n-  else if (!strcmp (p, \"-Wwrite-strings\"))\n-    flag_const_strings = 1;\n-  else if (!strcmp (p, \"-Wno-write-strings\"))\n-    flag_const_strings = 0;\n-  else if (!strcmp (p, \"-Wcast-qual\"))\n-    warn_cast_qual = 1;\n-  else if (!strcmp (p, \"-Wno-cast-qual\"))\n-    warn_cast_qual = 0;\n-  else if (!strcmp (p, \"-Wbad-function-cast\"))\n-    warn_bad_function_cast = 1;\n-  else if (!strcmp (p, \"-Wno-bad-function-cast\"))\n-    warn_bad_function_cast = 0;\n-  else if (!strcmp (p, \"-Wno-missing-noreturn\"))\n-    warn_missing_noreturn = 0;\n-  else if (!strcmp (p, \"-Wmissing-format-attribute\"))\n-    warn_missing_format_attribute = 1;\n-  else if (!strcmp (p, \"-Wno-missing-format-attribute\"))\n-    warn_missing_format_attribute = 0;\n-  else if (!strcmp (p, \"-Wpointer-arith\"))\n-    warn_pointer_arith = 1;\n-  else if (!strcmp (p, \"-Wno-pointer-arith\"))\n-    warn_pointer_arith = 0;\n-  else if (!strcmp (p, \"-Wstrict-prototypes\"))\n-    warn_strict_prototypes = 1;\n-  else if (!strcmp (p, \"-Wno-strict-prototypes\"))\n-    warn_strict_prototypes = 0;\n-  else if (!strcmp (p, \"-Wmissing-prototypes\"))\n-    warn_missing_prototypes = 1;\n-  else if (!strcmp (p, \"-Wno-missing-prototypes\"))\n-    warn_missing_prototypes = 0;\n-  else if (!strcmp (p, \"-Wmissing-declarations\"))\n-    warn_missing_declarations = 1;\n-  else if (!strcmp (p, \"-Wno-missing-declarations\"))\n-    warn_missing_declarations = 0;\n-  else if (!strcmp (p, \"-Wredundant-decls\"))\n-    warn_redundant_decls = 1;\n-  else if (!strcmp (p, \"-Wno-redundant-decls\"))\n-    warn_redundant_decls = 0;\n-  else if (!strcmp (p, \"-Wnested-externs\"))\n-    warn_nested_externs = 1;\n-  else if (!strcmp (p, \"-Wno-nested-externs\"))\n-    warn_nested_externs = 0;\n-  else if (!strcmp (p, \"-Wtraditional\"))\n-    warn_traditional = 1;\n-  else if (!strcmp (p, \"-Wno-traditional\"))\n-    warn_traditional = 0;\n-  else if (!strncmp (p, \"-Wformat=\", 9))\n-    set_Wformat (atoi (p + 9));\n-  else if (!strcmp (p, \"-Wformat\"))\n-    set_Wformat (1);\n-  else if (!strcmp (p, \"-Wno-format\"))\n-    set_Wformat (0);\n-  else if (!strcmp (p, \"-Wformat-y2k\"))\n-    warn_format_y2k = 1;\n-  else if (!strcmp (p, \"-Wno-format-y2k\"))\n-    warn_format_y2k = 0;\n-  else if (!strcmp (p, \"-Wformat-extra-args\"))\n-    warn_format_extra_args = 1;\n-  else if (!strcmp (p, \"-Wno-format-extra-args\"))\n-    warn_format_extra_args = 0;\n-  else if (!strcmp (p, \"-Wformat-nonliteral\"))\n-    warn_format_nonliteral = 1;\n-  else if (!strcmp (p, \"-Wno-format-nonliteral\"))\n-    warn_format_nonliteral = 0;\n-  else if (!strcmp (p, \"-Wformat-security\"))\n-    warn_format_security = 1;\n-  else if (!strcmp (p, \"-Wno-format-security\"))\n-    warn_format_security = 0;\n-  else if (!strcmp (p, \"-Wchar-subscripts\"))\n-    warn_char_subscripts = 1;\n-  else if (!strcmp (p, \"-Wno-char-subscripts\"))\n-    warn_char_subscripts = 0;\n-  else if (!strcmp (p, \"-Wconversion\"))\n-    warn_conversion = 1;\n-  else if (!strcmp (p, \"-Wno-conversion\"))\n-    warn_conversion = 0;\n-  else if (!strcmp (p, \"-Wparentheses\"))\n-    warn_parentheses = 1;\n-  else if (!strcmp (p, \"-Wno-parentheses\"))\n-    warn_parentheses = 0;\n-  else if (!strcmp (p, \"-Wreturn-type\"))\n-    warn_return_type = 1;\n-  else if (!strcmp (p, \"-Wno-return-type\"))\n-    warn_return_type = 0;\n-  else if (!strcmp (p, \"-Wsequence-point\"))\n-    warn_sequence_point = 1;\n-  else if (!strcmp (p, \"-Wno-sequence-point\"))\n-    warn_sequence_point = 0;\n-  else if (!strcmp (p, \"-Wcomment\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wno-comment\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wcomments\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wno-comments\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wtrigraphs\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wno-trigraphs\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wundef\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wno-undef\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wimport\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wno-import\"))\n-    ; /* cpp handles this one.  */\n-  else if (!strcmp (p, \"-Wmissing-braces\"))\n-    warn_missing_braces = 1;\n-  else if (!strcmp (p, \"-Wno-missing-braces\"))\n-    warn_missing_braces = 0;\n-  else if (!strcmp (p, \"-Wmain\"))\n-    warn_main = 1;\n   else if (!strcmp (p, \"-Wno-main\"))\n     warn_main = -1;\n-  else if (!strcmp (p, \"-Wsign-compare\"))\n-    warn_sign_compare = 1;\n-  else if (!strcmp (p, \"-Wno-sign-compare\"))\n-    warn_sign_compare = 0;\n-  else if (!strcmp (p, \"-Wfloat-equal\"))\n-    warn_float_equal = 1;\n-  else if (!strcmp (p, \"-Wno-float-equal\"))\n-    warn_float_equal = 0;\n-  else if (!strcmp (p, \"-Wmultichar\"))\n-    warn_multichar = 1;\n-  else if (!strcmp (p, \"-Wno-multichar\"))\n-    warn_multichar = 0;\n-  else if (!strcmp (p, \"-Wdiv-by-zero\"))\n-    warn_div_by_zero = 1;\n-  else if (!strcmp (p, \"-Wno-div-by-zero\"))\n-    warn_div_by_zero = 0;\n   else if (!strcmp (p, \"-Wunknown-pragmas\"))\n     /* Set to greater than 1, so that even unknown pragmas in system\n        headers will be warned about.  */\n@@ -777,7 +685,20 @@ c_decode_option (argc, argv)\n       warn_unknown_pragmas = 1;\n     }\n   else\n-    return strings_processed;\n+    {\n+      size_t i;\n+      for (i = 0; i < sizeof (warn_options) / sizeof (warn_options[0]); i++)\n+\tif (strncmp (p, \"-W\", 2) == 0 \n+\t    && warn_options[i].flag\n+\t    && (strcmp (p+2, warn_options[i].option) == 0\n+\t\t|| (strncmp (p+2, \"no-\", 3) == 0\n+\t\t    && strcmp (p+5, warn_options[i].option) == 0)))\n+\t  {\n+\t    *(warn_options[i].flag) = strncmp (p+2, \"no-\", 3) != 0;\n+\t    return 1;\n+\t  }\n+      return strings_processed;\n+    }\n \n   return 1;\n }"}, {"sha": "a6d37e28274a81359cbd65fad5671553b4a79e0f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 29, "deletions": 31, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=75227a33f7f789bca5090099a279b5b8d63d571c", "patch": "@@ -214,7 +214,7 @@ in the following sections.\n -w  -W  -Wall  -Waggregate-return @gol\n -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol\n -Wconversion  -Wno-deprecated-declarations @gol\n--Wdisabled-optimization  -Wdiv-by-zero  -Werror @gol\n+-Wdisabled-optimization  -Wno-div-by-zero  -Werror @gol\n -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wformat-nonliteral  -Wformat-security @gol\n -Wimplicit  -Wimplicit-int  @gol\n@@ -224,7 +224,7 @@ in the following sections.\n -Wlarger-than-@var{len}  -Wlong-long @gol\n -Wmain  -Wmissing-braces  -Wmissing-declarations @gol\n -Wmissing-format-attribute  -Wmissing-noreturn @gol\n--Wmultichar  -Wno-format-extra-args  -Wno-format-y2k @gol\n+-Wno-multichar  -Wno-format-extra-args  -Wno-format-y2k @gol\n -Wno-import  -Wpacked  -Wpadded @gol\n -Wparentheses  -Wpointer-arith  -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n@@ -2172,35 +2172,6 @@ All of the above @samp{-W} options combined.  This enables all the\n warnings about constructions that some users consider questionable, and\n that are easy to avoid (or modify to prevent the warning), even in\n conjunction with macros.\n-\n-@item -Wdiv-by-zero\n-@opindex Wno-div-by-zero\n-@opindex Wdiv-by-zero\n-Warn about compile-time integer division by zero.  This is default.  To\n-inhibit the warning messages, use @option{-Wno-div-by-zero}.  Floating\n-point division by zero is not warned about, as it can be a legitimate\n-way of obtaining infinities and NaNs.\n-\n-@item -Wmultichar\n-@opindex Wno-multichar\n-@opindex Wmultichar\n-Warn if a multicharacter constant (@samp{'FOOF'}) is used.  This is\n-default.  To inhibit the warning messages, use @option{-Wno-multichar}.\n-Usually they indicate a typo in the user's code, as they have\n-implementation-defined values, and should not be used in portable code.\n-\n-@item -Wsystem-headers\n-@opindex Wsystem-headers\n-@cindex warnings from system headers\n-@cindex system headers, warnings from\n-Print warning messages for constructs found in system header files.\n-Warnings from system headers are normally suppressed, on the assumption\n-that they usually do not indicate real problems and would only make the\n-compiler output harder to read.  Using this command line option tells\n-GCC to emit warnings from system headers as if they occurred in user\n-code.  However, note that using @option{-Wall} in conjunction with this\n-option will @emph{not} warn about unknown pragmas in system\n-headers---for that, @option{-Wunknown-pragmas} must also be used.\n @end table\n \n The following @option{-W@dots{}} options are not implied by @option{-Wall}.\n@@ -2289,6 +2260,26 @@ struct s x = @{ 3, 4 @};\n @end smallexample\n @end itemize\n \n+@item -Wno-div-by-zero\n+@opindex Wno-div-by-zero\n+@opindex Wdiv-by-zero\n+Do not warn about compile-time integer division by zero.  Floating point\n+division by zero is not warned about, as it can be a legitimate way of\n+obtaining infinities and NaNs.\n+\n+@item -Wsystem-headers\n+@opindex Wsystem-headers\n+@cindex warnings from system headers\n+@cindex system headers, warnings from\n+Print warning messages for constructs found in system header files.\n+Warnings from system headers are normally suppressed, on the assumption\n+that they usually do not indicate real problems and would only make the\n+compiler output harder to read.  Using this command line option tells\n+GCC to emit warnings from system headers as if they occurred in user\n+code.  However, note that using @option{-Wall} in conjunction with this\n+option will @emph{not} warn about unknown pragmas in system\n+headers---for that, @option{-Wunknown-pragmas} must also be used.\n+\n @item -Wfloat-equal\n @opindex Wfloat-equal\n Warn if floating point values are used in equality comparisons.\n@@ -2505,6 +2496,13 @@ case, and some functions for which @code{format} attributes are\n appropriate may not be detected.  This option has no effect unless\n @option{-Wformat} is enabled (possibly by @option{-Wall}).\n \n+@item -Wno-multichar\n+@opindex Wno-multichar\n+@opindex Wmultichar\n+Do not warn if a multicharacter constant (@samp{'FOOF'}) is used.\n+Usually they indicate a typo in the user's code, as they have\n+implementation-defined values, and should not be used in portable code.\n+\n @item -Wno-deprecated-declarations\n @opindex Wno-deprecated-declarations\n Do not warn about uses of functions, variables, and types marked as"}, {"sha": "93cb2c9038981d456400050d17753b34ff635689", "filename": "gcc/toplev.c", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75227a33f7f789bca5090099a279b5b8d63d571c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=75227a33f7f789bca5090099a279b5b8d63d571c", "patch": "@@ -1231,7 +1231,6 @@ documented_lang_options[] =\n   { \"-Wbad-function-cast\",\n     N_(\"Warn about casting functions to incompatible types\") },\n   { \"-Wno-bad-function-cast\", \"\" },\n-  { \"-Wno-missing-noreturn\", \"\" },\n   { \"-Wmissing-format-attribute\",\n     N_(\"Warn about functions which might be candidates for format attributes\") },\n   { \"-Wno-missing-format-attribute\", \"\" },\n@@ -1250,12 +1249,15 @@ documented_lang_options[] =\n   { \"-Wconversion\", \n     N_(\"Warn about possibly confusing type conversions\") },\n   { \"-Wno-conversion\", \"\" },\n+  { \"-Wdiv-by-zero\", \"\" },\n+  { \"-Wno-div-by-zero\", \n+    N_(\"Do not warn about compile-time integer division by zero\") },\n+  { \"-Wfloat-equal\", \n+    N_(\"Warn about testing equality of floating point numbers\") },\n+  { \"-Wno-float-equal\", \"\" },\n   { \"-Wformat\", \n     N_(\"Warn about printf/scanf/strftime/strfmon format anomalies\") },\n   { \"-Wno-format\", \"\" },\n-  { \"-Wformat-y2k\", \"\" },\n-  { \"-Wno-format-y2k\",\n-    N_(\"Don't warn about strftime formats yielding 2 digit years\") },\n   { \"-Wformat-extra-args\", \"\" },\n   { \"-Wno-format-extra-args\",\n     N_(\"Don't warn about too many arguments to format functions\") },\n@@ -1265,6 +1267,9 @@ documented_lang_options[] =\n   { \"-Wformat-security\",\n     N_(\"Warn about possible security problems with format functions\") },\n   { \"-Wno-format-security\", \"\" },\n+  { \"-Wformat-y2k\", \"\" },\n+  { \"-Wno-format-y2k\",\n+    N_(\"Don't warn about strftime formats yielding 2 digit years\") },\n   { \"-Wimplicit-function-declaration\",\n     N_(\"Warn about implicit function declarations\") },\n   { \"-Wno-implicit-function-declaration\", \"\" },\n@@ -1301,24 +1306,21 @@ documented_lang_options[] =\n   { \"-Wparentheses\", \n     N_(\"Warn about possible missing parentheses\") },\n   { \"-Wno-parentheses\", \"\" },\n-  { \"-Wsequence-point\",\n-    N_(\"Warn about possible violations of sequence point rules\") },\n-  { \"-Wno-sequence-point\", \"\" },\n   { \"-Wpointer-arith\", \n     N_(\"Warn about function pointer arithmetic\") },\n   { \"-Wno-pointer-arith\", \"\" },\n   { \"-Wredundant-decls\",\n     N_(\"Warn about multiple declarations of the same object\") },\n   { \"-Wno-redundant-decls\", \"\" },\n+  { \"-Wreturn-type\",\n+    N_(\"Warn whenever a function's return-type defaults to int\") },\n+  { \"-Wno-return-type\", \"\" },\n+  { \"-Wsequence-point\",\n+    N_(\"Warn about possible violations of sequence point rules\") },\n+  { \"-Wno-sequence-point\", \"\" },\n   { \"-Wsign-compare\", \n     N_(\"Warn about signed/unsigned comparisons\") },\n   { \"-Wno-sign-compare\", \"\" },\n-  { \"-Wfloat-equal\", \n-    N_(\"Warn about testing equality of floating point numbers\") },\n-  { \"-Wno-float-equal\", \"\" },\n-  { \"-Wunknown-pragmas\", \n-    N_(\"Warn about unrecognized pragmas\") },\n-  { \"-Wno-unknown-pragmas\", \"\" },\n   { \"-Wstrict-prototypes\", \n     N_(\"Warn about non-prototyped function decls\") },\n   { \"-Wno-strict-prototypes\", \"\" },\n@@ -1330,6 +1332,9 @@ documented_lang_options[] =\n   { \"-Wno-trigraphs\", \"\" },\n   { \"-Wundef\", \"\" },\n   { \"-Wno-undef\", \"\" },\n+  { \"-Wunknown-pragmas\", \n+    N_(\"Warn about unrecognized pragmas\") },\n+  { \"-Wno-unknown-pragmas\", \"\" },\n   { \"-Wwrite-strings\", \n     N_(\"Mark strings as 'const char *'\") },\n   { \"-Wno-write-strings\", \"\" },"}]}