{"sha": "ee0d75efea863e2d9b9e60b249d1e57ec771d038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwZDc1ZWZlYTg2M2UyZDliOWU2MGIyNDlkMWU1N2VjNzcxZDAzOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@wasabisystems.com", "date": "2004-03-05T01:22:58Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2004-03-05T01:22:58Z"}, "message": "ggc-common.c (gt_pch_restore): Don't unmap addr unless we are going to call mmap again.\n\n\t* ggc-common.c (gt_pch_restore): Don't unmap addr unless we are\n\tgoing to call mmap again.  Read the file into the right place.\n\tGive a fatal error if we have to relocate.\n\nFrom-SVN: r78957", "tree": {"sha": "bd936bab9777a92f642e62c30d1de8e9f715ed63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd936bab9777a92f642e62c30d1de8e9f715ed63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee0d75efea863e2d9b9e60b249d1e57ec771d038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0d75efea863e2d9b9e60b249d1e57ec771d038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0d75efea863e2d9b9e60b249d1e57ec771d038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0d75efea863e2d9b9e60b249d1e57ec771d038/comments", "author": null, "committer": null, "parents": [{"sha": "6e5ff6e7fba04bf828f7440f6248306b28dae94c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5ff6e7fba04bf828f7440f6248306b28dae94c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5ff6e7fba04bf828f7440f6248306b28dae94c"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "46e93c5569b1d354bd81c254dd4254003c5cfc01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0d75efea863e2d9b9e60b249d1e57ec771d038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0d75efea863e2d9b9e60b249d1e57ec771d038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee0d75efea863e2d9b9e60b249d1e57ec771d038", "patch": "@@ -1,3 +1,9 @@\n+2004-03-04  Ian Lance Taylor  <ian@wasabisystems.com>\n+\n+\t* ggc-common.c (gt_pch_restore): Don't unmap addr unless we are\n+\tgoing to call mmap again.  Read the file into the right place.\n+\tGive a fatal error if we have to relocate.\n+\n 2004-03-04  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c (xtensa_return_in_msb): New function."}, {"sha": "ba951f46ed9aea3d809318899192bbc7da3b8492", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0d75efea863e2d9b9e60b249d1e57ec771d038/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0d75efea863e2d9b9e60b249d1e57ec771d038/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=ee0d75efea863e2d9b9e60b249d1e57ec771d038", "patch": "@@ -607,38 +607,40 @@ gt_pch_restore (FILE *f)\n       addr = mmap (mmi.preferred_base, mmi.size,\n \t\t   PROT_READ | PROT_WRITE, MAP_PRIVATE,\n \t\t   fileno (f), mmi.offset);\n-      \n+\n #if HAVE_MINCORE\n       if (addr != mmi.preferred_base)\n \t{\n \t  size_t page_size = getpagesize();\n \t  char one_byte;\n-\t  \n-\t  if (addr != (void *) MAP_FAILED)\n-\t    munmap (addr, mmi.size);\n-\t  \n+\n \t  /* We really want to be mapped at mmi.preferred_base\n \t     so we're going to resort to MAP_FIXED.  But before,\n \t     make sure that we can do so without destroying a\n \t     previously mapped area, by looping over all pages\n \t     that would be affected by the fixed mapping.  */\n \t  errno = 0;\n-\t  \n+\n \t  for (i = 0; i < mmi.size; i+= page_size)\n \t    if (mincore ((char *)mmi.preferred_base + i, page_size, \n \t\t\t (void *)&one_byte) == -1\n \t\t&& errno == ENOMEM)\n \t      continue; /* The page is not mapped.  */\n \t    else\n \t      break;\n-\t  \n+\n \t  if (i >= mmi.size)\n-\t    addr = mmap (mmi.preferred_base, mmi.size, \n-\t\t\t PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,\n-\t\t\t fileno (f), mmi.offset);\n+\t    {\n+\t      if (addr != (void *) MAP_FAILED)\n+\t\tmunmap (addr, mmi.size);\n+\n+\t      addr = mmap (mmi.preferred_base, mmi.size, \n+\t\t\t   PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,\n+\t\t\t   fileno (f), mmi.offset);\n+\t    }\n \t}\n #endif /* HAVE_MINCORE */\n-      \n+\n       needs_read = addr == (void *) MAP_FAILED;\n \n #else /* HAVE_MMAP_FILE */\n@@ -651,7 +653,7 @@ gt_pch_restore (FILE *f)\n   if (needs_read)\n     {\n       if (fseek (f, mmi.offset, SEEK_SET) != 0\n-\t  || fread (&mmi, mmi.size, 1, f) != 1)\n+\t  || fread (addr, mmi.size, 1, f) != 1)\n \tfatal_error (\"can't read PCH file: %m\");\n     }\n   else if (fseek (f, mmi.offset + mmi.size, SEEK_SET) != 0)\n@@ -679,7 +681,7 @@ gt_pch_restore (FILE *f)\n \t\t*ptr += (size_t)addr - (size_t)mmi.preferred_base;\n \t    }\n \n-      sorry (\"had to relocate PCH\");\n+      fatal_error (\"had to relocate PCH\");\n     }\n \n   gt_pch_restore_stringpool ();"}]}