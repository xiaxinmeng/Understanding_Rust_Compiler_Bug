{"sha": "cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyNjkxOWM4NTdmMDAyZmMxN2Y3YzQ3OGU3YzhmMGViMmE3YzliMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-03-16T15:26:35Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-03-18T11:24:59Z"}, "message": "aarch64: Treat p12-p15 as call-preserved in SVE PCS functions\n\nDue to a stupid mistake that I can't really explain, I'd got the\ntreatment of p12-p15 mixed up when adding support for the SVE PCS.\nThe registers are supposed to be call-preserved rather than\ncall-clobbered.\n\nThe fix is simple, but it has quite a big effect on the PCS tests\n(as it should!).\n\n2020-03-18  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_sve_abi): Treat p12-p15 as\n\tcall-preserved for SVE PCS functions.\n\t(aarch64_layout_frame): Cope with up to 12 predicate save slots.\n\tOptimize the case in which there are no following vector save slots.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general/cpy_1.c: Leave gaps for in the\n\tcheck-function-bodies patterns for p15 to be saved.\n\t* gcc.target/aarch64/sve/pcs/args_1.c (callee_pred): Expect two\n\tpredicates to be saved.\n\t* gcc.target/aarch64/sve/pcs/saves_1_be_nowrap.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/saves_1_be_wrap.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/saves_1_le_nowrap.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/saves_1_le_wrap.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/saves_2_be_nowrap.c: Expect p12-p15\n\tto be saved and restored.\n\t* gcc.target/aarch64/sve/pcs/saves_2_be_wrap.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_2_le_nowrap.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_2_le_wrap.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_4_be.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_4_le.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_5_be.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/saves_5_le.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1.c (test_1): Likewise.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1_128.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1_256.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t(test_4): Expect only 16 bytes of stack to be allocated for the\n\tpredicate save slot.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1_512.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t(test_4): Expect only 16 bytes of stack to be allocated for the\n\tpredicate save slot.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1_1024.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t(test_4): Expect only 16 bytes of stack to be allocated for the\n\tpredicate save slot.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_1_2048.c (test_1): Expect\n\tp12-p15 to be saved and restored.\n\t(test_2): Remove p12-p15 from the clobber list.\n\t(test_4): Expect only 32 bytes of stack to be allocated for the\n\tpredicate save slot.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_2_256.c: Use z16 rather\n\tthan p4 to create a vector-sized save slot.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_2_512.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_2_1024.c: Likewise.\n\t* gcc.target/aarch64/sve/pcs/stack_clash_2_2048.c: Likewise.", "tree": {"sha": "99c7e79633a68dac54f052ad56a7f4ec2f81dbba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99c7e79633a68dac54f052ad56a7f4ec2f81dbba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4da9288745d8f9c0d6918b685522e89c277020c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da9288745d8f9c0d6918b685522e89c277020c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4da9288745d8f9c0d6918b685522e89c277020c7"}], "stats": {"total": 2691, "additions": 1511, "deletions": 1180}, "files": [{"sha": "1fa291100d0a6cfaa1550532929cfea6d8b91f2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -1,3 +1,10 @@\n+2020-03-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_sve_abi): Treat p12-p15 as\n+\tcall-preserved for SVE PCS functions.\n+\t(aarch64_layout_frame): Cope with up to 12 predicate save slots.\n+\tOptimize the case in which there are no following vector save slots.\n+\n 2020-03-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/94188"}, {"sha": "26c00969cc1745b663598d480a689ee125d08b13", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -1425,7 +1425,7 @@ aarch64_sve_abi (void)\n \t= default_function_abi.full_reg_clobbers ();\n       for (int regno = V8_REGNUM; regno <= V23_REGNUM; ++regno)\n \tCLEAR_HARD_REG_BIT (full_reg_clobbers, regno);\n-      for (int regno = P4_REGNUM; regno <= P11_REGNUM; ++regno)\n+      for (int regno = P4_REGNUM; regno <= P15_REGNUM; ++regno)\n \tCLEAR_HARD_REG_BIT (full_reg_clobbers, regno);\n       sve_abi.initialize (ARM_PCS_SVE, full_reg_clobbers);\n     }\n@@ -6008,14 +6008,31 @@ aarch64_layout_frame (void)\n \toffset += BYTES_PER_SVE_PRED;\n       }\n \n-  /* We save a maximum of 8 predicate registers, and since vector\n-     registers are 8 times the size of a predicate register, all the\n-     saved predicates fit within a single vector.  Doing this also\n-     rounds the offset to a 128-bit boundary.  */\n   if (maybe_ne (offset, 0))\n     {\n-      gcc_assert (known_le (offset, vector_save_size));\n-      offset = vector_save_size;\n+      /* If we have any vector registers to save above the predicate registers,\n+\t the offset of the vector register save slots need to be a multiple\n+\t of the vector size.  This lets us use the immediate forms of LDR/STR\n+\t (or LD1/ST1 for big-endian).\n+\n+\t A vector register is 8 times the size of a predicate register,\n+\t and we need to save a maximum of 12 predicate registers, so the\n+\t first vector register will be at either #1, MUL VL or #2, MUL VL.\n+\n+\t If we don't have any vector registers to save, and we know how\n+\t big the predicate save area is, we can just round it up to the\n+\t next 16-byte boundary.  */\n+      if (last_fp_reg == (int) INVALID_REGNUM && offset.is_constant ())\n+\toffset = aligned_upper_bound (offset, STACK_BOUNDARY / BITS_PER_UNIT);\n+      else\n+\t{\n+\t  if (known_le (offset, vector_save_size))\n+\t    offset = vector_save_size;\n+\t  else if (known_le (offset, vector_save_size * 2))\n+\t    offset = vector_save_size * 2;\n+\t  else\n+\t    gcc_unreachable ();\n+\t}\n     }\n \n   /* If we need to save any SVE vector registers, add them next.  */"}, {"sha": "3c70254fc6c031d67623b8a28e13db534139a178", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -1,3 +1,61 @@\n+2020-03-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/general/cpy_1.c: Leave gaps for in the\n+\tcheck-function-bodies patterns for p15 to be saved.\n+\t* gcc.target/aarch64/sve/pcs/args_1.c (callee_pred): Expect two\n+\tpredicates to be saved.\n+\t* gcc.target/aarch64/sve/pcs/saves_1_be_nowrap.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/saves_1_be_wrap.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/saves_1_le_nowrap.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/saves_1_le_wrap.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/saves_2_be_nowrap.c: Expect p12-p15\n+\tto be saved and restored.\n+\t* gcc.target/aarch64/sve/pcs/saves_2_be_wrap.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_2_le_nowrap.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_2_le_wrap.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_4_be.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_4_le.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_5_be.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/saves_5_le.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1.c (test_1): Likewise.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1_128.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1_256.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t(test_4): Expect only 16 bytes of stack to be allocated for the\n+\tpredicate save slot.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1_512.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t(test_4): Expect only 16 bytes of stack to be allocated for the\n+\tpredicate save slot.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1_1024.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t(test_4): Expect only 16 bytes of stack to be allocated for the\n+\tpredicate save slot.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_1_2048.c (test_1): Expect\n+\tp12-p15 to be saved and restored.\n+\t(test_2): Remove p12-p15 from the clobber list.\n+\t(test_4): Expect only 32 bytes of stack to be allocated for the\n+\tpredicate save slot.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_2_256.c: Use z16 rather\n+\tthan p4 to create a vector-sized save slot.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_2_512.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_2_1024.c: Likewise.\n+\t* gcc.target/aarch64/sve/pcs/stack_clash_2_2048.c: Likewise.\n+\n 2020-03-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* g++.dg/goacc/firstprivate-mappings-1.C: Only set DO_LONG_DOUBLE if"}, {"sha": "57b56a7e256f7abd24e20af2d3dc3b310bd19bc2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/cpy_1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fcpy_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fcpy_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fcpy_1.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -10,9 +10,11 @@ extern \"C\" {\n \n /*\n ** dup_x0_m:\n+**\t...\n **\tadd\t(x[0-9]+), x0, #?1\n **\tmov\t(p[0-7])\\.b, p15\\.b\n **\tmov\tz0\\.d, \\2/m, \\1\n+**\t...\n **\tret\n */\n svuint64_t\n@@ -25,8 +27,10 @@ dup_x0_m (svuint64_t z0, uint64_t x0)\n \n /*\n ** dup_d1_z:\n+**\t...\n **\tmov\t(p[0-7])\\.b, p15\\.b\n **\tmov\tz0\\.d, \\1/m, d1\n+**\t...\n **\tret\n */\n svfloat64_t"}, {"sha": "ab7c4a10cfbb976594dc44d0e611cd1662d5002c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/args_1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fargs_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fargs_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fargs_1.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,11 +6,17 @@\n \n /*\n ** callee_pred:\n+**\taddvl\tsp, sp, #-1\n+**\tstr\tp[0-9]+, \\[sp\\]\n+**\tstr\tp[0-9]+, \\[sp, #1, mul vl\\]\n **\tldr\t(p[0-9]+), \\[x0\\]\n **\tldr\t(p[0-9]+), \\[x1\\]\n **\tbrkpa\t(p[0-7])\\.b, p0/z, p1\\.b, p2\\.b\n **\tbrkpb\t(p[0-7])\\.b, \\3/z, p3\\.b, \\1\\.b\n **\tbrka\tp0\\.b, \\4/z, \\2\\.b\n+**\tldr\tp[0-9]+, \\[sp\\]\n+**\tldr\tp[0-9]+, \\[sp, #1, mul vl\\]\n+**\taddvl\tsp, sp, #1\n **\tret\n */\n __SVBool_t __attribute__((noipa))"}, {"sha": "d94e26e11e258eeb91c6e56c359c70a78d3ae88c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_1_be_nowrap.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_nowrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_nowrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_nowrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,43 +15,47 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp1\\.b, all\n-**\tst1d\tz8\\.d, p1, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p1, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p1, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p1, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p1, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p1, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p1, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p1, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p1, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p1, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p1, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p1, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p1, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p1, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p1, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p1, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, all\n **\tptrue\tp1\\.b, all\n-**\tld1d\tz8\\.d, p1/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p1/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p1/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p1/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p1/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p1/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p1/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p1/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p1/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p1/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p1/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p1/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p1/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p1/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p1/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p1/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -60,7 +64,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tret\n */\n svbool_t\n@@ -87,7 +95,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "a895272e826359af48ab7a0f64f0f8acc80bf626", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_1_be_wrap.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_be_wrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,43 +15,47 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp1\\.b, all\n-**\tst1d\tz8\\.d, p1, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p1, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p1, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p1, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p1, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p1, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p1, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p1, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p1, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p1, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p1, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p1, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p1, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p1, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p1, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p1, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, all\n **\tptrue\tp1\\.b, all\n-**\tld1d\tz8\\.d, p1/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p1/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p1/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p1/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p1/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p1/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p1/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p1/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p1/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p1/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p1/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p1/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p1/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p1/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p1/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p1/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -60,7 +64,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tret\n */\n svbool_t\n@@ -87,7 +95,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "72267dc905d0f712250d387b50063609858ef473", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_1_le_nowrap.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_nowrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_nowrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_nowrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "318807841023c88222a07f487b1e38ec407f84d2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_1_le_wrap.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_1_le_wrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "7c4884d0e59b26945589efcbc9a5eae94fd3ef29", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_2_be_nowrap.c", "status": "modified", "additions": 168, "deletions": 136, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_nowrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_nowrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_nowrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -9,7 +9,7 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -18,43 +18,47 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tstandard_callee\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -63,7 +67,11 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -73,7 +81,7 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n ** calls_vpcs:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -82,43 +90,47 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tvpcs_callee\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -127,7 +139,11 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -137,7 +153,7 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n ** calls_standard_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -146,43 +162,47 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -191,7 +211,11 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -205,7 +229,7 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n ** calls_vpcs_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -214,43 +238,47 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -259,7 +287,11 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */"}, {"sha": "872364f8752fae569f2151dfb11df09ee137263d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_2_be_wrap.c", "status": "modified", "additions": 168, "deletions": 136, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_be_wrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -9,7 +9,7 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -18,43 +18,47 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tstandard_callee\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -63,7 +67,11 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -73,7 +81,7 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n ** calls_vpcs:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -82,43 +90,47 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tvpcs_callee\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -127,7 +139,11 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -137,7 +153,7 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n ** calls_standard_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -146,43 +162,47 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -191,7 +211,11 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -205,7 +229,7 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n ** calls_vpcs_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -214,43 +238,47 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -259,7 +287,11 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */"}, {"sha": "4ba71c0abae31fbf5caec2bfc6a62ba5966c5516", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_2_le_nowrap.c", "status": "modified", "additions": 168, "deletions": 136, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_nowrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_nowrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_nowrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -9,7 +9,7 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -18,39 +18,43 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tstandard_callee\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -59,7 +63,11 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -69,7 +77,7 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n ** calls_vpcs:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -78,39 +86,43 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tvpcs_callee\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -119,7 +131,11 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -129,7 +145,7 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n ** calls_standard_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -138,39 +154,43 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -179,7 +199,11 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -193,7 +217,7 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n ** calls_vpcs_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -202,39 +226,43 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -243,7 +271,11 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */"}, {"sha": "c3acd40facaf1c2d12570a778e33a6c367d3719e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_2_le_wrap.c", "status": "modified", "additions": 168, "deletions": 136, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_2_le_wrap.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -9,7 +9,7 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -18,39 +18,43 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tstandard_callee\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -59,7 +63,11 @@ __attribute__((aarch64_vector_pcs)) void vpcs_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -69,7 +77,7 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n ** calls_vpcs:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -78,39 +86,43 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tbl\tvpcs_callee\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -119,7 +131,11 @@ void calls_standard (__SVInt8_t x) { standard_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -129,7 +145,7 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n ** calls_standard_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -138,39 +154,43 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -179,7 +199,11 @@ void calls_vpcs (__SVInt8_t x) { vpcs_callee (); }\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */\n@@ -193,7 +217,7 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n ** calls_vpcs_ptr:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -202,39 +226,43 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tblr\tx0\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -243,7 +271,11 @@ calls_standard_ptr (__SVInt8_t x, void (*fn) (void))\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n */"}, {"sha": "aa67bee255dac632312e1145b1af4352e269bac5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_4_be.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_be.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_be.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_be.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -14,7 +14,7 @@ void standard_callee (__SVInt8_t *);\n **\tstp\tx29, x30, \\[sp\\]\n ** )\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -23,45 +23,49 @@ void standard_callee (__SVInt8_t *);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n-**\taddvl\tx0, sp, #17\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n+**\taddvl\tx0, sp, #18\n **\tadd\tx0, x0, #?16\n **\tbl\tstandard_callee\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -70,7 +74,11 @@ void standard_callee (__SVInt8_t *);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n ** (\n **\tldp\tx29, x30, \\[sp\\], 16\n **\taddvl\tsp, sp, #1"}, {"sha": "ab232d7ee7acf49ad54ba89cdd83f14999262767", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_4_le.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_4_le.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -14,7 +14,7 @@ void standard_callee (__SVInt8_t *);\n **\tstp\tx29, x30, \\[sp\\]\n ** )\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -23,41 +23,45 @@ void standard_callee (__SVInt8_t *);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n-**\taddvl\tx0, sp, #17\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n+**\taddvl\tx0, sp, #18\n **\tadd\tx0, x0, #?16\n **\tbl\tstandard_callee\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -66,7 +70,11 @@ void standard_callee (__SVInt8_t *);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n ** (\n **\tldp\tx29, x30, \\[sp\\], 16\n **\taddvl\tsp, sp, #1"}, {"sha": "cce9cd82df320fb9f9e1c06d32644ac704b4f4a3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_5_be.c", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_be.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_be.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_be.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -8,40 +8,40 @@ void standard_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n+**\taddvl\tsp, sp, #-18\n **\tptrue\tp0\\.b, all\n-**\tst1d\tz8\\.d, p0, \\[sp, #1, mul vl\\]\n-**\tst1d\tz9\\.d, p0, \\[sp, #2, mul vl\\]\n-**\tst1d\tz10\\.d, p0, \\[sp, #3, mul vl\\]\n-**\tst1d\tz11\\.d, p0, \\[sp, #4, mul vl\\]\n-**\tst1d\tz12\\.d, p0, \\[sp, #5, mul vl\\]\n-**\tst1d\tz13\\.d, p0, \\[sp, #6, mul vl\\]\n-**\tst1d\tz14\\.d, p0, \\[sp, #7, mul vl\\]\n+**\tst1d\tz8\\.d, p0, \\[sp, #2, mul vl\\]\n+**\tst1d\tz9\\.d, p0, \\[sp, #3, mul vl\\]\n+**\tst1d\tz10\\.d, p0, \\[sp, #4, mul vl\\]\n+**\tst1d\tz11\\.d, p0, \\[sp, #5, mul vl\\]\n+**\tst1d\tz12\\.d, p0, \\[sp, #6, mul vl\\]\n+**\tst1d\tz13\\.d, p0, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tst1d\tz15\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz14\\.d, p0, \\[x11, #-8, mul vl\\]\n+**\tst1d\tz15\\.d, p0, \\[x11, #-7, mul vl\\]\n **\tcbnz\tw0, \\.L[0-9]+\n **\tptrue\tp0\\.b, all\n-**\tld1d\tz8\\.d, p0/z, \\[sp, #1, mul vl\\]\n-**\tld1d\tz9\\.d, p0/z, \\[sp, #2, mul vl\\]\n-**\tld1d\tz10\\.d, p0/z, \\[sp, #3, mul vl\\]\n-**\tld1d\tz11\\.d, p0/z, \\[sp, #4, mul vl\\]\n-**\tld1d\tz12\\.d, p0/z, \\[sp, #5, mul vl\\]\n-**\tld1d\tz13\\.d, p0/z, \\[sp, #6, mul vl\\]\n-**\tld1d\tz14\\.d, p0/z, \\[sp, #7, mul vl\\]\n+**\tld1d\tz8\\.d, p0/z, \\[sp, #2, mul vl\\]\n+**\tld1d\tz9\\.d, p0/z, \\[sp, #3, mul vl\\]\n+**\tld1d\tz10\\.d, p0/z, \\[sp, #4, mul vl\\]\n+**\tld1d\tz11\\.d, p0/z, \\[sp, #5, mul vl\\]\n+**\tld1d\tz12\\.d, p0/z, \\[sp, #6, mul vl\\]\n+**\tld1d\tz13\\.d, p0/z, \\[sp, #7, mul vl\\]\n **\taddvl\tx11, sp, #16\n-**\tld1d\tz15\\.d, p0/z, \\[x11, #-8, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tld1d\tz14\\.d, p0/z, \\[x11, #-8, mul vl\\]\n+**\tld1d\tz15\\.d, p0/z, \\[x11, #-7, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n **\t...\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -50,15 +50,19 @@ void standard_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tbl\tstandard_callee\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -67,6 +71,10 @@ void standard_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n **\tb\t\\.L[0-9]+\n */\n void"}, {"sha": "0c4fff8da84d6ee38b0c105f942122b31d8b3fae", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/saves_5_le.c", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fsaves_5_le.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -8,29 +8,29 @@ void standard_callee (void);\n ** calls_standard:\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n-**\taddvl\tsp, sp, #-17\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n+**\taddvl\tsp, sp, #-18\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n **\tcbnz\tw0, \\.L[0-9]+\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n **\t...\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -39,22 +39,26 @@ void standard_callee (void);\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n **\tbl\tstandard_callee\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -63,6 +67,10 @@ void standard_callee (void);\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n **\tb\t\\.L[0-9]+\n */\n void"}, {"sha": "110947a6c4a1178f4d3f9063aa8c98dbddfa1d3c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1.c", "status": "modified", "additions": 44, "deletions": 37, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,9 +6,8 @@\n \n /*\n ** test_1:\n-**\tcntb\tx12\n-**\tmov\tx13, #?17\n-**\tmul\tx12, x12, x13\n+**\tcntd\tx12, all, mul #9\n+**\tlsl\tx12, x12, #?4\n **\tmov\tx11, sp\n **\t...\n **\tsub\tsp, sp, x12\n@@ -20,39 +19,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, all\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -61,7 +64,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\taddvl\tsp, sp, #17\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\taddvl\tsp, sp, #18\n **\tret\n */\n svbool_t\n@@ -88,7 +95,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "6590e4a8c46971be71edc9d207f8a9f738597c1e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1_1024.c", "status": "modified", "additions": 45, "deletions": 37, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_1024.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_1024.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_1024.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\tsub\tsp, sp, #2176\n+**\tsub\tsp, sp, #2304\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, vl128\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\tadd\tsp, sp, #?2176\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\tadd\tsp, sp, #?2304\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n \n@@ -121,11 +129,11 @@ test_3 (void)\n \n /*\n ** test_4:\n-**\tsub\tsp, sp, #128\n+**\tsub\tsp, sp, #16\n **\tstr\tp4, \\[sp\\]\n **\tptrue\tp0\\.b, vl128\n **\tldr\tp4, \\[sp\\]\n-**\tadd\tsp, sp, #?128\n+**\tadd\tsp, sp, #?16\n **\tret\n */\n svbool_t"}, {"sha": "404301dc0c1b40b3463c71ce48033d530a3bb4c0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1_128.c", "status": "modified", "additions": 43, "deletions": 35, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_128.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\tsub\tsp, sp, #272\n+**\tsub\tsp, sp, #288\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, vl16\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\tadd\tsp, sp, #?272\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\tadd\tsp, sp, #?288\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n "}, {"sha": "113ccc131d68f783d5ddeec7445989ddfaae1e54", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1_2048.c", "status": "modified", "additions": 44, "deletions": 36, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_2048.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_2048.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_2048.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\tmov\tx12, #?4352\n+**\tmov\tx12, #?4608\n **\tsub\tsp, sp, x12\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n@@ -16,39 +16,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, vl256\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -57,6 +61,10 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n **\tadd\tsp, sp, x12\n **\tret\n */\n@@ -84,7 +92,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n \n@@ -122,11 +130,11 @@ test_3 (void)\n \n /*\n ** test_4:\n-**\tsub\tsp, sp, #256\n+**\tsub\tsp, sp, #32\n **\tstr\tp4, \\[sp\\]\n **\tptrue\tp0\\.b, vl256\n **\tldr\tp4, \\[sp\\]\n-**\tadd\tsp, sp, #?256\n+**\tadd\tsp, sp, #?32\n **\tret\n */\n svbool_t"}, {"sha": "0f71cecdc80c6f939f45efbe2c35fc1292a238c0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1_256.c", "status": "modified", "additions": 45, "deletions": 37, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_256.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_256.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_256.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\tsub\tsp, sp, #544\n+**\tsub\tsp, sp, #576\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, vl32\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\tadd\tsp, sp, #?544\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\tadd\tsp, sp, #?576\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n \n@@ -121,11 +129,11 @@ test_3 (void)\n \n /*\n ** test_4:\n-**\tsub\tsp, sp, #32\n+**\tsub\tsp, sp, #16\n **\tstr\tp4, \\[sp\\]\n **\tptrue\tp0\\.b, vl32\n **\tldr\tp4, \\[sp\\]\n-**\tadd\tsp, sp, #?32\n+**\tadd\tsp, sp, #?16\n **\tret\n */\n svbool_t"}, {"sha": "8edbd0459b2becd0c16fb81afd7ad614f614502b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_1_512.c", "status": "modified", "additions": 45, "deletions": 37, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_512.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_512.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_1_512.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** test_1:\n-**\tsub\tsp, sp, #1088\n+**\tsub\tsp, sp, #1152\n **\tstr\tp4, \\[sp\\]\n **\tstr\tp5, \\[sp, #1, mul vl\\]\n **\tstr\tp6, \\[sp, #2, mul vl\\]\n@@ -15,39 +15,43 @@\n **\tstr\tp9, \\[sp, #5, mul vl\\]\n **\tstr\tp10, \\[sp, #6, mul vl\\]\n **\tstr\tp11, \\[sp, #7, mul vl\\]\n-**\tstr\tz8, \\[sp, #1, mul vl\\]\n-**\tstr\tz9, \\[sp, #2, mul vl\\]\n-**\tstr\tz10, \\[sp, #3, mul vl\\]\n-**\tstr\tz11, \\[sp, #4, mul vl\\]\n-**\tstr\tz12, \\[sp, #5, mul vl\\]\n-**\tstr\tz13, \\[sp, #6, mul vl\\]\n-**\tstr\tz14, \\[sp, #7, mul vl\\]\n-**\tstr\tz15, \\[sp, #8, mul vl\\]\n-**\tstr\tz16, \\[sp, #9, mul vl\\]\n-**\tstr\tz17, \\[sp, #10, mul vl\\]\n-**\tstr\tz18, \\[sp, #11, mul vl\\]\n-**\tstr\tz19, \\[sp, #12, mul vl\\]\n-**\tstr\tz20, \\[sp, #13, mul vl\\]\n-**\tstr\tz21, \\[sp, #14, mul vl\\]\n-**\tstr\tz22, \\[sp, #15, mul vl\\]\n-**\tstr\tz23, \\[sp, #16, mul vl\\]\n+**\tstr\tp12, \\[sp, #8, mul vl\\]\n+**\tstr\tp13, \\[sp, #9, mul vl\\]\n+**\tstr\tp14, \\[sp, #10, mul vl\\]\n+**\tstr\tp15, \\[sp, #11, mul vl\\]\n+**\tstr\tz8, \\[sp, #2, mul vl\\]\n+**\tstr\tz9, \\[sp, #3, mul vl\\]\n+**\tstr\tz10, \\[sp, #4, mul vl\\]\n+**\tstr\tz11, \\[sp, #5, mul vl\\]\n+**\tstr\tz12, \\[sp, #6, mul vl\\]\n+**\tstr\tz13, \\[sp, #7, mul vl\\]\n+**\tstr\tz14, \\[sp, #8, mul vl\\]\n+**\tstr\tz15, \\[sp, #9, mul vl\\]\n+**\tstr\tz16, \\[sp, #10, mul vl\\]\n+**\tstr\tz17, \\[sp, #11, mul vl\\]\n+**\tstr\tz18, \\[sp, #12, mul vl\\]\n+**\tstr\tz19, \\[sp, #13, mul vl\\]\n+**\tstr\tz20, \\[sp, #14, mul vl\\]\n+**\tstr\tz21, \\[sp, #15, mul vl\\]\n+**\tstr\tz22, \\[sp, #16, mul vl\\]\n+**\tstr\tz23, \\[sp, #17, mul vl\\]\n **\tptrue\tp0\\.b, vl64\n-**\tldr\tz8, \\[sp, #1, mul vl\\]\n-**\tldr\tz9, \\[sp, #2, mul vl\\]\n-**\tldr\tz10, \\[sp, #3, mul vl\\]\n-**\tldr\tz11, \\[sp, #4, mul vl\\]\n-**\tldr\tz12, \\[sp, #5, mul vl\\]\n-**\tldr\tz13, \\[sp, #6, mul vl\\]\n-**\tldr\tz14, \\[sp, #7, mul vl\\]\n-**\tldr\tz15, \\[sp, #8, mul vl\\]\n-**\tldr\tz16, \\[sp, #9, mul vl\\]\n-**\tldr\tz17, \\[sp, #10, mul vl\\]\n-**\tldr\tz18, \\[sp, #11, mul vl\\]\n-**\tldr\tz19, \\[sp, #12, mul vl\\]\n-**\tldr\tz20, \\[sp, #13, mul vl\\]\n-**\tldr\tz21, \\[sp, #14, mul vl\\]\n-**\tldr\tz22, \\[sp, #15, mul vl\\]\n-**\tldr\tz23, \\[sp, #16, mul vl\\]\n+**\tldr\tz8, \\[sp, #2, mul vl\\]\n+**\tldr\tz9, \\[sp, #3, mul vl\\]\n+**\tldr\tz10, \\[sp, #4, mul vl\\]\n+**\tldr\tz11, \\[sp, #5, mul vl\\]\n+**\tldr\tz12, \\[sp, #6, mul vl\\]\n+**\tldr\tz13, \\[sp, #7, mul vl\\]\n+**\tldr\tz14, \\[sp, #8, mul vl\\]\n+**\tldr\tz15, \\[sp, #9, mul vl\\]\n+**\tldr\tz16, \\[sp, #10, mul vl\\]\n+**\tldr\tz17, \\[sp, #11, mul vl\\]\n+**\tldr\tz18, \\[sp, #12, mul vl\\]\n+**\tldr\tz19, \\[sp, #13, mul vl\\]\n+**\tldr\tz20, \\[sp, #14, mul vl\\]\n+**\tldr\tz21, \\[sp, #15, mul vl\\]\n+**\tldr\tz22, \\[sp, #16, mul vl\\]\n+**\tldr\tz23, \\[sp, #17, mul vl\\]\n **\tldr\tp4, \\[sp\\]\n **\tldr\tp5, \\[sp, #1, mul vl\\]\n **\tldr\tp6, \\[sp, #2, mul vl\\]\n@@ -56,7 +60,11 @@\n **\tldr\tp9, \\[sp, #5, mul vl\\]\n **\tldr\tp10, \\[sp, #6, mul vl\\]\n **\tldr\tp11, \\[sp, #7, mul vl\\]\n-**\tadd\tsp, sp, #?1088\n+**\tldr\tp12, \\[sp, #8, mul vl\\]\n+**\tldr\tp13, \\[sp, #9, mul vl\\]\n+**\tldr\tp14, \\[sp, #10, mul vl\\]\n+**\tldr\tp15, \\[sp, #11, mul vl\\]\n+**\tadd\tsp, sp, #?1152\n **\tret\n */\n svbool_t\n@@ -83,7 +91,7 @@ test_2 (void)\n   asm volatile (\"\" :::\n \t\t\"z0\", \"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\",\n \t\t\"z24\", \"z25\", \"z26\", \"z27\", \"z28\", \"z29\", \"z30\", \"z31\",\n-\t\t\"p0\", \"p1\", \"p2\", \"p3\", \"p12\", \"p13\", \"p14\", \"p15\");\n+\t\t\"p0\", \"p1\", \"p2\", \"p3\");\n   return svptrue_b8 ();\n }\n \n@@ -121,11 +129,11 @@ test_3 (void)\n \n /*\n ** test_4:\n-**\tsub\tsp, sp, #64\n+**\tsub\tsp, sp, #16\n **\tstr\tp4, \\[sp\\]\n **\tptrue\tp0\\.b, vl64\n **\tldr\tp4, \\[sp\\]\n-**\tadd\tsp, sp, #?64\n+**\tadd\tsp, sp, #?16\n **\tret\n */\n svbool_t"}, {"sha": "e31200fc22f3e4ee5e789b1a13556ebcb65d7d3d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_2_1024.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_1024.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_1024.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_1024.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -10,18 +10,18 @@ svbool_t take_stack_args (volatile void *, void *, int, int, int,\n /*\n ** test_1:\n **\tsub\tsp, sp, #144\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?144\n **\tret\n */\n svbool_t\n test_1 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -30,10 +30,10 @@ test_1 (void)\n **\tsub\tsp, sp, #176\n **\tstp\tx24, x25, \\[sp, 128\\]\n **\tstr\tx26, \\[sp, 144\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 128\\]\n **\tldr\tx26, \\[sp, 144\\]\n **\tadd\tsp, sp, #?176\n@@ -43,7 +43,7 @@ svbool_t\n test_2 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -53,10 +53,10 @@ test_2 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx24, x25, \\[sp, 128\\]\n **\tstr\tx26, \\[sp, 144\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 128\\]\n **\tldr\tx26, \\[sp, 144\\]\n **\tadd\tsp, sp, x12\n@@ -66,17 +66,17 @@ svbool_t\n test_3 (void)\n {\n   volatile int x[1024];\n-  asm volatile (\"\" :: \"r\" (x) : \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" :: \"r\" (x) : \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n /*\n ** test_4:\n **\tsub\tsp, sp, #256\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tret\n */\n@@ -85,7 +85,7 @@ test_4 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b16 ();\n }\n \n@@ -94,10 +94,10 @@ test_4 (void)\n **\tsub\tsp, sp, #288\n **\tstp\tx24, x25, \\[sp, 128\\]\n **\tstr\tx26, \\[sp, 144\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 128\\]\n **\tldr\tx26, \\[sp, 144\\]\n **\tadd\tsp, sp, #?288\n@@ -108,7 +108,7 @@ test_5 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b16 ();\n }\n \n@@ -117,11 +117,11 @@ test_5 (void)\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n **\tsub\tsp, sp, #128\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n@@ -130,7 +130,7 @@ svbool_t\n test_6 (void)\n {\n   take_stack_args (0, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -140,12 +140,12 @@ test_6 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 128\\]\n **\tadd\tx29, sp, #?128\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -157,7 +157,7 @@ test_7 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -169,12 +169,12 @@ test_7 (void)\n **\tadd\tx29, sp, #?128\n **\tstp\tx24, x25, \\[sp, 144\\]\n **\tstr\tx26, \\[sp, 160\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -188,7 +188,7 @@ test_8 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -198,12 +198,12 @@ test_8 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 128\\]\n **\tadd\tx29, sp, #?128\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tsub\tsp, x29, #128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -215,7 +215,7 @@ test_9 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -227,12 +227,12 @@ test_9 (int n)\n **\tadd\tx29, sp, #?128\n **\tstp\tx24, x25, \\[sp, 144\\]\n **\tstr\tx26, \\[sp, 160\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tsub\tsp, x29, #128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -246,7 +246,7 @@ test_10 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -261,12 +261,12 @@ test_10 (int n)\n **\tadd\tx29, sp, #?128\n **\tstp\tx24, x25, \\[sp, 144\\]\n **\tstr\tx26, \\[sp, 160\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl128\n **\tsub\tsp, x29, #128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -280,6 +280,6 @@ test_11 (int n)\n {\n   volatile int x[0x7ee4];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }"}, {"sha": "f63751678e5ed406883b94ddac1175cb7ba7aba0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_2_2048.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_2048.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_2048.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_2048.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -10,18 +10,18 @@ svbool_t take_stack_args (volatile void *, void *, int, int, int,\n /*\n ** test_1:\n **\tsub\tsp, sp, #272\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?272\n **\tret\n */\n svbool_t\n test_1 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -30,10 +30,10 @@ test_1 (void)\n **\tsub\tsp, sp, #304\n **\tstp\tx24, x25, \\[sp, 256\\]\n **\tstr\tx26, \\[sp, 272\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 256\\]\n **\tldr\tx26, \\[sp, 272\\]\n **\tadd\tsp, sp, #?304\n@@ -43,7 +43,7 @@ svbool_t\n test_2 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -53,10 +53,10 @@ test_2 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx24, x25, \\[sp, 256\\]\n **\tstr\tx26, \\[sp, 272\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 256\\]\n **\tldr\tx26, \\[sp, 272\\]\n **\tadd\tsp, sp, x12\n@@ -66,17 +66,17 @@ svbool_t\n test_3 (void)\n {\n   volatile int x[1024];\n-  asm volatile (\"\" :: \"r\" (x) : \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" :: \"r\" (x) : \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n /*\n ** test_4:\n **\tsub\tsp, sp, #512\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?512\n **\tret\n */\n@@ -85,7 +85,7 @@ test_4 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b16 ();\n }\n \n@@ -94,10 +94,10 @@ test_4 (void)\n **\tsub\tsp, sp, #544\n **\tstp\tx24, x25, \\[sp, 256\\]\n **\tstr\tx26, \\[sp, 272\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl128\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 256\\]\n **\tldr\tx26, \\[sp, 272\\]\n **\tadd\tsp, sp, #?544\n@@ -108,7 +108,7 @@ test_5 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b16 ();\n }\n \n@@ -117,11 +117,11 @@ test_5 (void)\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n **\tsub\tsp, sp, #256\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n@@ -130,7 +130,7 @@ svbool_t\n test_6 (void)\n {\n   take_stack_args (0, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -140,12 +140,12 @@ test_6 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 256\\]\n **\tadd\tx29, sp, #?256\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -157,7 +157,7 @@ test_7 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -169,12 +169,12 @@ test_7 (void)\n **\tadd\tx29, sp, #?256\n **\tstp\tx24, x25, \\[sp, 272\\]\n **\tstr\tx26, \\[sp, 288\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -188,7 +188,7 @@ test_8 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -198,12 +198,12 @@ test_8 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 256\\]\n **\tadd\tx29, sp, #?256\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tsub\tsp, x29, #256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -215,7 +215,7 @@ test_9 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -227,12 +227,12 @@ test_9 (int n)\n **\tadd\tx29, sp, #?256\n **\tstp\tx24, x25, \\[sp, 272\\]\n **\tstr\tx26, \\[sp, 288\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tsub\tsp, x29, #256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -246,7 +246,7 @@ test_10 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -261,12 +261,12 @@ test_10 (int n)\n **\tadd\tx29, sp, #?256\n **\tstp\tx24, x25, \\[sp, 272\\]\n **\tstr\tx26, \\[sp, 288\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl256\n **\tsub\tsp, x29, #256\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?256\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -280,6 +280,6 @@ test_11 (int n)\n {\n   volatile int x[0x7ee4];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }"}, {"sha": "6bcbb57725b8f8445594e56fef309acb3d216529", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_2_256.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_256.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_256.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_256.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -10,18 +10,18 @@ svbool_t take_stack_args (volatile void *, void *, int, int, int,\n /*\n ** test_1:\n **\tsub\tsp, sp, #48\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?48\n **\tret\n */\n svbool_t\n test_1 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -30,10 +30,10 @@ test_1 (void)\n **\tsub\tsp, sp, #80\n **\tstp\tx24, x25, \\[sp, 32\\]\n **\tstr\tx26, \\[sp, 48\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 32\\]\n **\tldr\tx26, \\[sp, 48\\]\n **\tadd\tsp, sp, #?80\n@@ -43,7 +43,7 @@ svbool_t\n test_2 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -53,10 +53,10 @@ test_2 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx24, x25, \\[sp, 32\\]\n **\tstr\tx26, \\[sp, 48\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 32\\]\n **\tldr\tx26, \\[sp, 48\\]\n **\tadd\tsp, sp, x12\n@@ -66,17 +66,17 @@ svbool_t\n test_3 (void)\n {\n   volatile int x[1024];\n-  asm volatile (\"\" :: \"r\" (x) : \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" :: \"r\" (x) : \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n /*\n ** test_4:\n **\tsub\tsp, sp, #64\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tret\n */\n@@ -85,7 +85,7 @@ test_4 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b16 ();\n }\n \n@@ -94,10 +94,10 @@ test_4 (void)\n **\tsub\tsp, sp, #96\n **\tstp\tx24, x25, \\[sp, 32\\]\n **\tstr\tx26, \\[sp, 48\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 32\\]\n **\tldr\tx26, \\[sp, 48\\]\n **\tadd\tsp, sp, #?96\n@@ -108,7 +108,7 @@ test_5 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b16 ();\n }\n \n@@ -117,11 +117,11 @@ test_5 (void)\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n **\tsub\tsp, sp, #32\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n@@ -130,7 +130,7 @@ svbool_t\n test_6 (void)\n {\n   take_stack_args (0, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -140,12 +140,12 @@ test_6 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 32\\]\n **\tadd\tx29, sp, #?32\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -157,7 +157,7 @@ test_7 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -169,12 +169,12 @@ test_7 (void)\n **\tadd\tx29, sp, #?32\n **\tstp\tx24, x25, \\[sp, 48\\]\n **\tstr\tx26, \\[sp, 64\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -188,7 +188,7 @@ test_8 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -198,12 +198,12 @@ test_8 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 32\\]\n **\tadd\tx29, sp, #?32\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tsub\tsp, x29, #32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -215,7 +215,7 @@ test_9 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -227,12 +227,12 @@ test_9 (int n)\n **\tadd\tx29, sp, #?32\n **\tstp\tx24, x25, \\[sp, 48\\]\n **\tstr\tx26, \\[sp, 64\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tsub\tsp, x29, #32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -246,7 +246,7 @@ test_10 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -260,12 +260,12 @@ test_10 (int n)\n **\tadd\tx29, sp, #?32\n **\tstp\tx24, x25, \\[sp, 48\\]\n **\tstr\tx26, \\[sp, 64\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl32\n **\tsub\tsp, x29, #32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?32\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -279,6 +279,6 @@ test_11 (int n)\n {\n   volatile int x[0x7ee4];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }"}, {"sha": "dc7df8e6bf75992872cccfaedb0ecd74de8a0389", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pcs/stack_clash_2_512.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_512.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_512.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpcs%2Fstack_clash_2_512.c?ref=cb26919c857f002fc17f7c478e7c8f0eb2a7c9b2", "patch": "@@ -10,18 +10,18 @@ svbool_t take_stack_args (volatile void *, void *, int, int, int,\n /*\n ** test_1:\n **\tsub\tsp, sp, #80\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?80\n **\tret\n */\n svbool_t\n test_1 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -30,10 +30,10 @@ test_1 (void)\n **\tsub\tsp, sp, #112\n **\tstp\tx24, x25, \\[sp, 64\\]\n **\tstr\tx26, \\[sp, 80\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 64\\]\n **\tldr\tx26, \\[sp, 80\\]\n **\tadd\tsp, sp, #?112\n@@ -43,7 +43,7 @@ svbool_t\n test_2 (void)\n {\n   volatile int x = 1;\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -53,10 +53,10 @@ test_2 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx24, x25, \\[sp, 64\\]\n **\tstr\tx26, \\[sp, 80\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 64\\]\n **\tldr\tx26, \\[sp, 80\\]\n **\tadd\tsp, sp, x12\n@@ -66,17 +66,17 @@ svbool_t\n test_3 (void)\n {\n   volatile int x[1024];\n-  asm volatile (\"\" :: \"r\" (x) : \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" :: \"r\" (x) : \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n /*\n ** test_4:\n **\tsub\tsp, sp, #128\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?128\n **\tret\n */\n@@ -85,7 +85,7 @@ test_4 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b16 ();\n }\n \n@@ -94,10 +94,10 @@ test_4 (void)\n **\tsub\tsp, sp, #160\n **\tstp\tx24, x25, \\[sp, 64\\]\n **\tstr\tx26, \\[sp, 80\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.h, vl32\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tldp\tx24, x25, \\[sp, 64\\]\n **\tldr\tx26, \\[sp, 80\\]\n **\tadd\tsp, sp, #?160\n@@ -108,7 +108,7 @@ test_5 (void)\n {\n   volatile svint32_t b;\n   b = svdup_s32 (1);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b16 ();\n }\n \n@@ -117,11 +117,11 @@ test_5 (void)\n **\tstp\tx29, x30, \\[sp, -16\\]!\n **\tmov\tx29, sp\n **\tsub\tsp, sp, #64\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx29, x30, \\[sp\\], 16\n **\tret\n@@ -130,7 +130,7 @@ svbool_t\n test_6 (void)\n {\n   take_stack_args (0, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -140,12 +140,12 @@ test_6 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 64\\]\n **\tadd\tx29, sp, #?64\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -157,7 +157,7 @@ test_7 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -169,12 +169,12 @@ test_7 (void)\n **\tadd\tx29, sp, #?64\n **\tstp\tx24, x25, \\[sp, 80\\]\n **\tstr\tx26, \\[sp, 96\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tadd\tsp, sp, #?16\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -188,7 +188,7 @@ test_8 (void)\n {\n   volatile int x[1024];\n   take_stack_args (x, 0, 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -198,12 +198,12 @@ test_8 (void)\n **\tsub\tsp, sp, x12\n **\tstp\tx29, x30, \\[sp, 64\\]\n **\tadd\tx29, sp, #?64\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tsub\tsp, x29, #64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx29, x30, \\[sp\\]\n **\tmov\tx12, #?4112\n@@ -215,7 +215,7 @@ test_9 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\");\n+  asm volatile (\"\" ::: \"z16\");\n   return svptrue_b8 ();\n }\n \n@@ -227,12 +227,12 @@ test_9 (int n)\n **\tadd\tx29, sp, #?64\n **\tstp\tx24, x25, \\[sp, 80\\]\n **\tstr\tx26, \\[sp, 96\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tsub\tsp, x29, #64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -246,7 +246,7 @@ test_10 (int n)\n {\n   volatile int x[1024];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }\n \n@@ -261,12 +261,12 @@ test_10 (int n)\n **\tadd\tx29, sp, #?64\n **\tstp\tx24, x25, \\[sp, 80\\]\n **\tstr\tx26, \\[sp, 96\\]\n-**\tstr\tp4, \\[sp\\]\n+**\tstr\tz16, \\[sp\\]\n **\tsub\tsp, sp, #16\n **\t...\n **\tptrue\tp0\\.b, vl64\n **\tsub\tsp, x29, #64\n-**\tldr\tp4, \\[sp\\]\n+**\tldr\tz16, \\[sp\\]\n **\tadd\tsp, sp, #?64\n **\tldp\tx24, x25, \\[sp, 16\\]\n **\tldr\tx26, \\[sp, 32\\]\n@@ -280,6 +280,6 @@ test_11 (int n)\n {\n   volatile int x[0x7ee4];\n   take_stack_args (x, __builtin_alloca (n), 1, 2, 3, 4, 5, 6, 7);\n-  asm volatile (\"\" ::: \"p4\", \"x24\", \"x25\", \"x26\");\n+  asm volatile (\"\" ::: \"z16\", \"x24\", \"x25\", \"x26\");\n   return svptrue_b8 ();\n }"}]}