{"sha": "2b27f37f90cb66e277b734c605639e2f00a2e942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyN2YzN2Y5MGNiNjZlMjc3YjczNGM2MDU2MzllMmYwMGEyZTk0Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-13T18:12:14Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-19T22:41:20Z"}, "message": "c++: Crash when deducing template arguments [PR98659]\n\nmaybe_instantiate_noexcept doesn't expect to see error_mark_node, but\nthe new callsite I introduced in r11-6476 can pass error_mark_node to\nit.  So cope.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/98659\n\t* pt.c (maybe_instantiate_noexcept): Return false if FN is\n\terror_mark_node.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/98659\n\t* g++.dg/template/deduce8.C: New test.", "tree": {"sha": "de1eff1485fbf3909983e47a81a2bcc59cacfb64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de1eff1485fbf3909983e47a81a2bcc59cacfb64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b27f37f90cb66e277b734c605639e2f00a2e942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b27f37f90cb66e277b734c605639e2f00a2e942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b27f37f90cb66e277b734c605639e2f00a2e942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b27f37f90cb66e277b734c605639e2f00a2e942/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eed40bca6f2eb3af0c811cf6ec9e123c5bf4907d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eed40bca6f2eb3af0c811cf6ec9e123c5bf4907d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eed40bca6f2eb3af0c811cf6ec9e123c5bf4907d"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "c9f5811980ea21f86d78962fd856ad1d515c3c11", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b27f37f90cb66e277b734c605639e2f00a2e942/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b27f37f90cb66e277b734c605639e2f00a2e942/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2b27f37f90cb66e277b734c605639e2f00a2e942", "patch": "@@ -25457,7 +25457,8 @@ always_instantiate_p (tree decl)\n bool\n maybe_instantiate_noexcept (tree fn, tsubst_flags_t complain)\n {\n-  tree fntype, spec, noex;\n+  if (fn == error_mark_node)\n+    return false;\n \n   /* Don't instantiate a noexcept-specification from template context.  */\n   if (processing_template_decl\n@@ -25476,13 +25477,13 @@ maybe_instantiate_noexcept (tree fn, tsubst_flags_t complain)\n       return !DECL_MAYBE_DELETED (fn);\n     }\n \n-  fntype = TREE_TYPE (fn);\n-  spec = TYPE_RAISES_EXCEPTIONS (fntype);\n+  tree fntype = TREE_TYPE (fn);\n+  tree spec = TYPE_RAISES_EXCEPTIONS (fntype);\n \n   if (!spec || !TREE_PURPOSE (spec))\n     return true;\n \n-  noex = TREE_PURPOSE (spec);\n+  tree noex = TREE_PURPOSE (spec);\n   if (TREE_CODE (noex) != DEFERRED_NOEXCEPT\n       && TREE_CODE (noex) != DEFERRED_PARSE)\n     return true;"}, {"sha": "430be42668928d165afb579ba7d42669ba2b251c", "filename": "gcc/testsuite/g++.dg/template/deduce8.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b27f37f90cb66e277b734c605639e2f00a2e942/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b27f37f90cb66e277b734c605639e2f00a2e942/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce8.C?ref=2b27f37f90cb66e277b734c605639e2f00a2e942", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/98659\n+// { dg-do compile }\n+\n+template <bool> struct enable_if;\n+struct function {\n+  template <typename _F> void operator=(_F);\n+};\n+struct map {\n+  function operator[](int);\n+};\n+enum { E };\n+template <typename> void foo ();\n+template <typename T>\n+typename enable_if<T::value>::type foo ();\n+\n+void\n+bar ()\n+{\n+  map m;\n+  m[E] = foo<int>;\n+}"}]}