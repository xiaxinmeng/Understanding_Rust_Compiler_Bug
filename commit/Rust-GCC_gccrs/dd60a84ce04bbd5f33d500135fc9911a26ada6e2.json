{"sha": "dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ2MGE4NGNlMDRiYmQ1ZjMzZDUwMDEzNWZjOTkxMWEyNmFkYTZlMg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-26T18:03:09Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-26T18:03:09Z"}, "message": "cselib and incdec\n\ngcc/\n\t* rtl.h (for_each_inc_dec): Strengthen param 1 from rtx * to\n\trtx_insn **.\n\t(check_for_inc_dec): Strengthen param \"insn\" from rtx to\n\trtx_insn *.\n\n\t* cselib.h (cselib_process_insn): Likewise.\n\n\t* cselib.c (cselib_record_sets): Likewise.\n\t(cselib_process_insn): Likewise.\n\n\t* dse.c (struct insn_info): Likewise for field \"insn\".\n\t(check_for_inc_dec_1): Likewise for local \"insn\".\n\t(check_for_inc_dec): Likewise for param \"insn\".\n\t(scan_insn): Likewise.\n\t(dse_step1): Likewise for local \"insn\".\n\n\t* rtlanal.c (for_each_inc_dec): Strengthen param 1 from rtx * to\n\trtx_insn **.  Use for_each_rtx_in_insn rather than for_each_rtx.\n\nFrom-SVN: r214531", "tree": {"sha": "b8e9f8327c5f67d16c33beca6fd6035b1738de3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8e9f8327c5f67d16c33beca6fd6035b1738de3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e0ce50de6b5ca00490a675800c866c24c44e4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0ce50de6b5ca00490a675800c866c24c44e4bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0ce50de6b5ca00490a675800c866c24c44e4bb"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "798c50f96a27b8ede411371843342fb3f95739d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -1,3 +1,24 @@\n+2014-08-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (for_each_inc_dec): Strengthen param 1 from rtx * to\n+\trtx_insn **.\n+\t(check_for_inc_dec): Strengthen param \"insn\" from rtx to\n+\trtx_insn *.\n+\n+\t* cselib.h (cselib_process_insn): Likewise.\n+\n+\t* cselib.c (cselib_record_sets): Likewise.\n+\t(cselib_process_insn): Likewise.\n+\n+\t* dse.c (struct insn_info): Likewise for field \"insn\".\n+\t(check_for_inc_dec_1): Likewise for local \"insn\".\n+\t(check_for_inc_dec): Likewise for param \"insn\".\n+\t(scan_insn): Likewise.\n+\t(dse_step1): Likewise for local \"insn\".\n+\n+\t* rtlanal.c (for_each_inc_dec): Strengthen param 1 from rtx * to\n+\trtx_insn **.  Use for_each_rtx_in_insn rather than for_each_rtx.\n+\n 2014-08-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sched-int.h (struct _dep): Strengthen fields \"pro\" and \"con\""}, {"sha": "090cd35c33c22390f458910f238ef0b6ae9a349b", "filename": "gcc/cselib.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -67,7 +67,7 @@ static cselib_val *cselib_lookup_mem (rtx, int);\n static void cselib_invalidate_regno (unsigned int, enum machine_mode);\n static void cselib_invalidate_mem (rtx);\n static void cselib_record_set (rtx, cselib_val *, cselib_val *);\n-static void cselib_record_sets (rtx);\n+static void cselib_record_sets (rtx_insn *);\n \n struct expand_value_data\n {\n@@ -2469,7 +2469,7 @@ cselib_record_autoinc_cb (rtx mem ATTRIBUTE_UNUSED, rtx op ATTRIBUTE_UNUSED,\n \n /* Record the effects of any sets and autoincs in INSN.  */\n static void\n-cselib_record_sets (rtx insn)\n+cselib_record_sets (rtx_insn *insn)\n {\n   int n_sets = 0;\n   int i;\n@@ -2627,7 +2627,7 @@ fp_setter_insn (rtx insn)\n /* Record the effects of INSN.  */\n \n void\n-cselib_process_insn (rtx insn)\n+cselib_process_insn (rtx_insn *insn)\n {\n   int i;\n   rtx x;"}, {"sha": "62374c0d546119d71998ae66a45812ab6032e749", "filename": "gcc/cselib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -75,7 +75,7 @@ extern cselib_val *cselib_lookup_from_insn (rtx, enum machine_mode,\n extern void cselib_init (int);\n extern void cselib_clear_table (void);\n extern void cselib_finish (void);\n-extern void cselib_process_insn (rtx);\n+extern void cselib_process_insn (rtx_insn *);\n extern bool fp_setter_insn (rtx);\n extern enum machine_mode cselib_reg_set_mode (const_rtx);\n extern int rtx_equal_for_cselib_p (rtx, rtx);"}, {"sha": "4f07b3c6d96dc0a5dc56c79fcc84c8c0b523f401", "filename": "gcc/dse.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -379,7 +379,7 @@ struct insn_info\n   bool contains_cselib_groups;\n \n   /* The insn. */\n-  rtx insn;\n+  rtx_insn *insn;\n \n   /* The list of mem sets or mem clobbers that are contained in this\n      insn.  If the insn is deletable, it contains only one mem set.\n@@ -903,7 +903,7 @@ emit_inc_dec_insn_before (rtx mem ATTRIBUTE_UNUSED,\n static bool\n check_for_inc_dec_1 (insn_info_t insn_info)\n {\n-  rtx insn = insn_info->insn;\n+  rtx_insn *insn = insn_info->insn;\n   rtx note = find_reg_note (insn, REG_INC, NULL_RTX);\n   if (note)\n     return for_each_inc_dec (&insn, emit_inc_dec_insn_before, insn_info) == 0;\n@@ -916,7 +916,7 @@ check_for_inc_dec_1 (insn_info_t insn_info)\n    and add a parameter to this function so that it can be passed down in\n    insn_info.fixed_regs_live.  */\n bool\n-check_for_inc_dec (rtx insn)\n+check_for_inc_dec (rtx_insn *insn)\n {\n   struct insn_info insn_info;\n   rtx note;\n@@ -2442,7 +2442,7 @@ copy_fixed_regs (const_bitmap in)\n    non-register target.  */\n \n static void\n-scan_insn (bb_info_t bb_info, rtx insn)\n+scan_insn (bb_info_t bb_info, rtx_insn *insn)\n {\n   rtx body;\n   insn_info_t insn_info = (insn_info_t) pool_alloc (insn_info_pool);\n@@ -2708,7 +2708,7 @@ dse_step1 (void)\n \n       if (bb->index >= NUM_FIXED_BLOCKS)\n \t{\n-\t  rtx insn;\n+\t  rtx_insn *insn;\n \n \t  cse_store_info_pool\n \t    = create_alloc_pool (\"cse_store_info_pool\","}, {"sha": "076f1653b954d4b675a6029f534da70831a0e0a0", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -2648,7 +2648,7 @@ extern int for_each_rtx_in_insn (rtx_insn **, rtx_function, void *);\n    for_each_inc_dec.  */\n typedef int (*for_each_inc_dec_fn) (rtx mem, rtx op, rtx dest, rtx src,\n \t\t\t\t    rtx srcoff, void *arg);\n-extern int for_each_inc_dec (rtx *, for_each_inc_dec_fn, void *arg);\n+extern int for_each_inc_dec (rtx_insn **, for_each_inc_dec_fn, void *arg);\n \n typedef int (*rtx_equal_p_callback_function) (const_rtx *, const_rtx *,\n                                               rtx *, rtx *);\n@@ -3056,7 +3056,7 @@ extern int exp_equiv_p (const_rtx, const_rtx, int, bool);\n extern unsigned hash_rtx (const_rtx x, enum machine_mode, int *, int *, bool);\n \n /* In dse.c */\n-extern bool check_for_inc_dec (rtx insn);\n+extern bool check_for_inc_dec (rtx_insn *insn);\n \n /* In jump.c */\n extern int comparison_dominates_p (enum rtx_code, enum rtx_code);"}, {"sha": "996e0f78759c6fb25ae30932783be15e3dffeeb3", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd60a84ce04bbd5f33d500135fc9911a26ada6e2/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=dd60a84ce04bbd5f33d500135fc9911a26ada6e2", "patch": "@@ -3120,7 +3120,7 @@ for_each_inc_dec_find_mem (rtx *r, void *d)\n   return 0;\n }\n \n-/* Traverse *X looking for MEMs, and for autoinc operations within\n+/* Traverse *INSN looking for MEMs, and for autoinc operations within\n    them.  For each such autoinc operation found, call FN, passing it\n    the innermost enclosing MEM, the operation itself, the RTX modified\n    by the operation, two RTXs (the second may be NULL) that, once\n@@ -3131,7 +3131,7 @@ for_each_inc_dec_find_mem (rtx *r, void *d)\n    for_each_inc_dec.  */\n \n int\n-for_each_inc_dec (rtx *x,\n+for_each_inc_dec (rtx_insn **insn,\n \t\t  for_each_inc_dec_fn fn,\n \t\t  void *arg)\n {\n@@ -3141,7 +3141,7 @@ for_each_inc_dec (rtx *x,\n   data.arg = arg;\n   data.mem = NULL;\n \n-  return for_each_rtx (x, for_each_inc_dec_find_mem, &data);\n+  return for_each_rtx_in_insn (insn, for_each_inc_dec_find_mem, &data);\n }\n \n \f"}]}