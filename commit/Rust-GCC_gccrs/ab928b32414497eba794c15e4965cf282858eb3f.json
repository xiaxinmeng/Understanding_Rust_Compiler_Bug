{"sha": "ab928b32414497eba794c15e4965cf282858eb3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5MjhiMzI0MTQ0OTdlYmE3OTRjMTVlNDk2NWNmMjgyODU4ZWIzZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-06-18T17:06:44Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-18T17:06:44Z"}, "message": "javaprims.h: Updated class declaration list.\n\n\t* gcj/javaprims.h: Updated class declaration list.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (core_java_source_files): Removed\n\tBasicMapEntry.java.\n\t* java/util/BasicMapEntry.java: Removed.\n\nFrom-SVN: r54753", "tree": {"sha": "8de2e4286e6087eeb7717ab060ab78bc55ebff6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8de2e4286e6087eeb7717ab060ab78bc55ebff6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab928b32414497eba794c15e4965cf282858eb3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab928b32414497eba794c15e4965cf282858eb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab928b32414497eba794c15e4965cf282858eb3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab928b32414497eba794c15e4965cf282858eb3f/comments", "author": null, "committer": null, "parents": [{"sha": "347258aef04597a20eda7f59ee2759e952e87f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347258aef04597a20eda7f59ee2759e952e87f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/347258aef04597a20eda7f59ee2759e952e87f4e"}], "stats": {"total": 186, "additions": 11, "deletions": 175}, "files": [{"sha": "d23fa85d25893e14d5f6df4904d2fb2fb40d8bd2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ab928b32414497eba794c15e4965cf282858eb3f", "patch": "@@ -1,3 +1,11 @@\n+2002-06-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj/javaprims.h: Updated class declaration list.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (core_java_source_files): Removed\n+\tBasicMapEntry.java.\n+\t* java/util/BasicMapEntry.java: Removed.\n+\n 2002-06-18  Jeff Sturm  <jsturm@one-point.com>\n \n \t* java/net/natPlainDatagramSocketImpl.cc (receive):"}, {"sha": "15b331f6c5345cf91acd33cddcc45c7cac0c5711", "filename": "libjava/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=ab928b32414497eba794c15e4965cf282858eb3f", "patch": "@@ -1186,7 +1186,6 @@ java/util/AbstractSequentialList.java \\\n java/util/AbstractSet.java \\\n java/util/ArrayList.java \\\n java/util/Arrays.java \\\n-java/util/BasicMapEntry.java \\\n java/util/BitSet.java \\\n java/util/Calendar.java\t\\\n java/util/Collection.java \\"}, {"sha": "655d697225ea5651e0ccf26723d9ffb68b986461", "filename": "libjava/Makefile.in", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ab928b32414497eba794c15e4965cf282858eb3f", "patch": "@@ -953,7 +953,6 @@ java/util/AbstractSequentialList.java \\\n java/util/AbstractSet.java \\\n java/util/ArrayList.java \\\n java/util/Arrays.java \\\n-java/util/BasicMapEntry.java \\\n java/util/BitSet.java \\\n java/util/Calendar.java\t\\\n java/util/Collection.java \\\n@@ -2532,10 +2531,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/AbstractCollection.P .deps/java/util/AbstractList.P \\\n .deps/java/util/AbstractMap.P .deps/java/util/AbstractSequentialList.P \\\n .deps/java/util/AbstractSet.P .deps/java/util/ArrayList.P \\\n-.deps/java/util/Arrays.P .deps/java/util/BasicMapEntry.P \\\n-.deps/java/util/BitSet.P .deps/java/util/Calendar.P \\\n-.deps/java/util/Collection.P .deps/java/util/Collections.P \\\n-.deps/java/util/Comparator.P \\\n+.deps/java/util/Arrays.P .deps/java/util/BitSet.P \\\n+.deps/java/util/Calendar.P .deps/java/util/Collection.P \\\n+.deps/java/util/Collections.P .deps/java/util/Comparator.P \\\n .deps/java/util/ConcurrentModificationException.P \\\n .deps/java/util/Date.P .deps/java/util/Dictionary.P \\\n .deps/java/util/EmptyStackException.P .deps/java/util/Enumeration.P \\"}, {"sha": "42104f8566ba4dc339f95d802e7a10893fb10576", "filename": "libjava/gcj/javaprims.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2Fgcj%2Fjavaprims.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab928b32414497eba794c15e4965cf282858eb3f/libjava%2Fgcj%2Fjavaprims.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fjavaprims.h?ref=ab928b32414497eba794c15e4965cf282858eb3f", "patch": "@@ -249,7 +249,6 @@ extern \"Java\"\n       class ArrayList;\n       class Arrays;\n       class Arrays$ArrayList;\n-      class BasicMapEntry;\n       class BitSet;\n       class Calendar;\n       class Collection;"}, {"sha": "925fd26d181f8928825982ad6e63b10334562297", "filename": "libjava/java/util/BasicMapEntry.java", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347258aef04597a20eda7f59ee2759e952e87f4e/libjava%2Fjava%2Futil%2FBasicMapEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347258aef04597a20eda7f59ee2759e952e87f4e/libjava%2Fjava%2Futil%2FBasicMapEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FBasicMapEntry.java?ref=347258aef04597a20eda7f59ee2759e952e87f4e", "patch": "@@ -1,168 +0,0 @@\n-/* BasicMapEntry.java -- a class providing a plain-vanilla implementation of\n-   the Map.Entry interface; could be used anywhere in java.util\n-   Copyright (C) 1998, 2000, 2001 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package java.util;\n-\n-/**\n- * A class which implements Map.Entry. It is shared by HashMap, TreeMap,\n- * Hashtable, and Collections. It is not specified by the JDK, but makes\n- * life much easier.\n- *\n- * @author Jon Zeppieri\n- * @author Eric Blake <ebb9@email.byu.edu>\n- */\n-class BasicMapEntry implements Map.Entry\n-{\n-  /**\n-   * The key. Package visible for direct manipulation.\n-   */\n-  Object key;\n-\n-  /**\n-   * The value. Package visible for direct manipulation.\n-   */\n-  Object value;\n-\n-  /**\n-   * Basic constructor initializes the fields.\n-   * @param newKey the key\n-   * @param newValue the value\n-   */\n-  BasicMapEntry(Object newKey, Object newValue)\n-  {\n-    key = newKey;\n-    value = newValue;\n-  }\n-\n-  /**\n-   * Compares the specified object with this entry. Returns true only if\n-   * the object is a mapping of identical key and value. In other words,\n-   * this must be:\n-   * <pre>\n-   * (o instanceof Map.Entry) &&\n-   * (getKey() == null ? ((HashMap) o).getKey() == null\n-   *                   : getKey().equals(((HashMap) o).getKey())) &&\n-   * (getValue() == null ? ((HashMap) o).getValue() == null\n-   *                   : getValue().equals(((HashMap) o).getValue()))\n-   * </pre>\n-   *\n-   * @param o the object to compare\n-   * @return true if it is equal\n-   */\n-  public final boolean equals(Object o)\n-  {\n-    if (! (o instanceof Map.Entry))\n-      return false;\n-    // Optimize for our own entries.\n-    if (o instanceof BasicMapEntry)\n-      {\n-        BasicMapEntry e = (BasicMapEntry) o;\n-        return (AbstractCollection.equals(key, e.key)\n-                && AbstractCollection.equals(value, e.value));\n-      }\n-    Map.Entry e = (Map.Entry) o;\n-    return (AbstractCollection.equals(key, e.getKey())\n-            && AbstractCollection.equals(value, e.getValue()));\n-  }\n-\n-  /**\n-   * Get the key corresponding to this entry.\n-   *\n-   * @return the key\n-   */\n-  public final Object getKey()\n-  {\n-    return key;\n-  }\n-\n-  /**\n-   * Get the value corresponding to this entry. If you already called\n-   * Iterator.remove(), the behavior undefined, but in this case it works.\n-   *\n-   * @return the value\n-   */\n-  public final Object getValue()\n-  {\n-    return value;\n-  }\n-\n-  /**\n-   * Returns the hash code of the entry.  This is defined as the exclusive-or\n-   * of the hashcodes of the key and value (using 0 for null). In other\n-   * words, this must be:\n-   * <pre>\n-   *  (getKey() == null ? 0 : getKey().hashCode()) ^\n-   *  (getValue() == null ? 0 : getValue().hashCode())\n-   * </pre>\n-   *\n-   * @return the hash code\n-   */\n-  public final int hashCode()\n-  {\n-    return (AbstractCollection.hashCode(key)\n-            ^ AbstractCollection.hashCode(value));\n-  }\n-\n-  /**\n-   * Replaces the value with the specified object. This writes through\n-   * to the map, unless you have already called Iterator.remove(). It\n-   * may be overridden to restrict a null value.\n-   *\n-   * @param newVal the new value to store\n-   * @return the old value\n-   * @throws NullPointerException if the map forbids null values\n-   */\n-  public Object setValue(Object newVal)\n-  {\n-    Object r = value;\n-    value = newVal;\n-    return r;\n-  }\n-\n-  /**\n-   * This provides a string representation of the entry. It is of the form\n-   * \"key=value\", where string concatenation is used on key and value.\n-   *\n-   * @return the string representation\n-   */\n-  public final String toString()\n-  {\n-    return key + \"=\" + value;\n-  }\n-}"}]}