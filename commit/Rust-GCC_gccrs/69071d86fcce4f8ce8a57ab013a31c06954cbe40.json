{"sha": "69071d86fcce4f8ce8a57ab013a31c06954cbe40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwNzFkODZmY2NlNGY4Y2U4YTU3YWIwMTNhMzFjMDY5NTRjYmU0MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-17T14:28:57Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-17T14:28:57Z"}, "message": "Change PRED_LOOP_EXIT from 92 to 85.\n\n\t* analyze_brprob.py: Fix columns of script output.\n\t* predict.def: PRED_LOOP_EXIT from 92 to 85.\n\t* gcc.dg/predict-9.c: Fix dump scanning.\n\nFrom-SVN: r237556", "tree": {"sha": "de1a7249159b95e20bf39b31161a8cb0f1be1473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de1a7249159b95e20bf39b31161a8cb0f1be1473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69071d86fcce4f8ce8a57ab013a31c06954cbe40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69071d86fcce4f8ce8a57ab013a31c06954cbe40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69071d86fcce4f8ce8a57ab013a31c06954cbe40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69071d86fcce4f8ce8a57ab013a31c06954cbe40/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68b3b8581681d8fd96634008b6172abdb7ed567c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b3b8581681d8fd96634008b6172abdb7ed567c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68b3b8581681d8fd96634008b6172abdb7ed567c"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "1a0badc69ff537792dd95ef6d1f459f95d6e9529", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* analyze_brprob.py: Fix columns of script output.\n+\n 2016-06-13  Richard Biener  <rguenther@suse.de>\n \n \t* download_prerequisites (ISL): Bump version to 0.16.1"}, {"sha": "2526623ff55075624c6accbf4c944a018f491be8", "filename": "contrib/analyze_brprob.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/contrib%2Fanalyze_brprob.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/contrib%2Fanalyze_brprob.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob.py?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -119,10 +119,10 @@ def dump(self, sorting):\n         elif sorting == 'coverage':\n             sorter = lambda x: x[1].count\n \n-        print('%-36s %8s %6s  %-16s %14s %8s %6s' % ('HEURISTICS', 'BRANCHES', '(REL)',\n+        print('%-40s %8s %6s  %-16s %14s %8s %6s' % ('HEURISTICS', 'BRANCHES', '(REL)',\n               'HITRATE', 'COVERAGE', 'COVERAGE', '(REL)'))\n         for (k, v) in sorted(self.heuristics.items(), key = sorter):\n-            print('%-36s %8i %5.1f%% %6.2f%% / %6.2f%% %14i %8s %5.1f%%' %\n+            print('%-40s %8i %5.1f%% %6.2f%% / %6.2f%% %14i %8s %5.1f%%' %\n             (k, v.branches, percentage(v.branches, self.branches_max ()),\n              percentage(v.hits, v.count), percentage(v.fits, v.count),\n              v.count, v.count_formatted(), percentage(v.count, self.count_max()) ))"}, {"sha": "a93464d33a75a54694b9a3f6b5df344d766fddb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.def: PRED_LOOP_EXIT from 92 to 85.\n+\n 2016-06-17  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/arm_neon.h (vadd_f32): replace __FAST_MATH with"}, {"sha": "d3bc757bb97a8f0971cc6fa830e3b2bd8570abb2", "filename": "gcc/predict.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -89,7 +89,7 @@ DEF_PREDICTOR (PRED_COLD_FUNCTION, \"cold function call\", PROB_VERY_LIKELY,\n \t       PRED_FLAG_FIRST_MATCH)\n \n /* Edge causing loop to terminate is probably not taken.  */\n-DEF_PREDICTOR (PRED_LOOP_EXIT, \"loop exit\", HITRATE (92),\n+DEF_PREDICTOR (PRED_LOOP_EXIT, \"loop exit\", HITRATE (85),\n \t       PRED_FLAG_FIRST_MATCH)\n \n /* Edge causing loop to terminate by computing value used by later"}, {"sha": "b3fa6a27902959b47c5793b6e3b68987b092032e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/predict-9.c: Fix dump scanning.\n+\n 2016-06-17  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/71354"}, {"sha": "196e31c60ee66e06b36aa8842736e177c80d6ac7", "filename": "gcc/testsuite/gcc.dg/predict-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69071d86fcce4f8ce8a57ab013a31c06954cbe40/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c?ref=69071d86fcce4f8ce8a57ab013a31c06954cbe40", "patch": "@@ -19,5 +19,5 @@ void foo (int base)\n   }\n }\n \n-/* { dg-final { scan-tree-dump-times \"first match heuristics: 2.0%\" 3 \"profile_estimate\"} } */\n-/* { dg-final { scan-tree-dump-times \"first match heuristics: 4.0%\" 1 \"profile_estimate\"} } */\n+/* { dg-final { scan-tree-dump-times \"first match heuristics: 3.0%\" 3 \"profile_estimate\"} } */\n+/* { dg-final { scan-tree-dump-times \"first match heuristics: 7.5%\" 1 \"profile_estimate\"} } */"}]}