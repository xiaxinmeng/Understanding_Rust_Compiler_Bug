{"sha": "178274da22dd1139e61f1102de5e8f79a1bc9442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4Mjc0ZGEyMmRkMTEzOWU2MWYxMTAyZGU1ZThmNzlhMWJjOTQ0Mg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2003-03-19T02:51:41Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2003-03-19T02:51:41Z"}, "message": "rs6000.c (rs6000_stack_info): Only require a frame when debugging on XCOFF targets.\n\n\t* config/rs6000/rs6000.c (rs6000_stack_info): Only require a frame\n\twhen debugging on XCOFF targets.  Delete \"abi\" temp.\n\nFrom-SVN: r64568", "tree": {"sha": "a93645825c4fe05dc31c8fff826aeea7d1a411c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a93645825c4fe05dc31c8fff826aeea7d1a411c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/178274da22dd1139e61f1102de5e8f79a1bc9442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178274da22dd1139e61f1102de5e8f79a1bc9442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178274da22dd1139e61f1102de5e8f79a1bc9442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178274da22dd1139e61f1102de5e8f79a1bc9442/comments", "author": null, "committer": null, "parents": [{"sha": "42151102f00cc2b0567682183163806a3b1ef78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42151102f00cc2b0567682183163806a3b1ef78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42151102f00cc2b0567682183163806a3b1ef78a"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "656425460f1b06a5887503fa1049606f8968d957", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178274da22dd1139e61f1102de5e8f79a1bc9442/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178274da22dd1139e61f1102de5e8f79a1bc9442/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=178274da22dd1139e61f1102de5e8f79a1bc9442", "patch": "@@ -1,5 +1,8 @@\n 2003-03-19  Alan Modra  <amodra@bigpond.net.au>\n \n+\t* config/rs6000/rs6000.c (rs6000_stack_info): Only require a frame\n+\twhen debugging on XCOFF targets.  Delete \"abi\" temp.\n+\n \tPR target/10073\n \t* combine.c (force_to_mode <NOT>): Use gen_int_mode.\n "}, {"sha": "b78e837b2c1d7572ed682d81627e8e1e1a1952bf", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178274da22dd1139e61f1102de5e8f79a1bc9442/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178274da22dd1139e61f1102de5e8f79a1bc9442/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=178274da22dd1139e61f1102de5e8f79a1bc9442", "patch": "@@ -9168,7 +9168,6 @@ rs6000_stack_info ()\n   static rs6000_stack_t info, zero_info;\n   rs6000_stack_t *info_ptr = &info;\n   int reg_size = TARGET_POWERPC64 ? 8 : 4;\n-  enum rs6000_abi abi;\n   int ehrd_size;\n   int total_raw_size;\n \n@@ -9186,15 +9185,15 @@ rs6000_stack_info ()\n     }\n \n   /* Select which calling sequence.  */\n-  info_ptr->abi = abi = DEFAULT_ABI;\n+  info_ptr->abi = DEFAULT_ABI;\n \n   /* Calculate which registers need to be saved & save area size.  */\n   info_ptr->first_gp_reg_save = first_reg_to_save ();\n   /* Assume that we will have to save RS6000_PIC_OFFSET_TABLE_REGNUM, \n      even if it currently looks like we won't.  */\n   if (((TARGET_TOC && TARGET_MINIMAL_TOC)\n-       || (flag_pic == 1 && abi == ABI_V4)\n-       || (flag_pic && abi == ABI_DARWIN))\n+       || (flag_pic == 1 && DEFAULT_ABI == ABI_V4)\n+       || (flag_pic && DEFAULT_ABI == ABI_DARWIN))\n       && info_ptr->first_gp_reg_save > RS6000_PIC_OFFSET_TABLE_REGNUM)\n     info_ptr->gp_size = reg_size * (32 - RS6000_PIC_OFFSET_TABLE_REGNUM);\n   else\n@@ -9237,7 +9236,7 @@ rs6000_stack_info ()\n       || (info_ptr->first_fp_reg_save != 64\n \t  && !FP_SAVE_INLINE (info_ptr->first_fp_reg_save))\n       || info_ptr->first_altivec_reg_save <= LAST_ALTIVEC_REGNO\n-      || (abi == ABI_V4 && current_function_calls_alloca)\n+      || (DEFAULT_ABI == ABI_V4 && current_function_calls_alloca)\n       || (DEFAULT_ABI == ABI_DARWIN\n \t  && flag_pic\n \t  && current_function_uses_pic_offset_table)\n@@ -9253,7 +9252,7 @@ rs6000_stack_info ()\n       || regs_ever_live[CR4_REGNO])\n     {\n       info_ptr->cr_save_p = 1;\n-      if (abi == ABI_V4)\n+      if (DEFAULT_ABI == ABI_V4)\n \tinfo_ptr->cr_size = reg_size;\n     }\n \n@@ -9299,7 +9298,7 @@ rs6000_stack_info ()\n     }\n \n   /* Calculate the offsets.  */\n-  switch (abi)\n+  switch (DEFAULT_ABI)\n     {\n     case ABI_NONE:\n     default:\n@@ -9428,14 +9427,18 @@ rs6000_stack_info ()\n   if (info_ptr->calls_p)\n     info_ptr->push_p = 1;\n \n-  else if (abi == ABI_V4)\n+  else if (DEFAULT_ABI == ABI_V4)\n     info_ptr->push_p = total_raw_size > info_ptr->fixed_size;\n \n+  else if (frame_pointer_needed)\n+    info_ptr->push_p = 1;\n+\n+  else if (TARGET_XCOFF && write_symbols != NO_DEBUG)\n+    info_ptr->push_p = 1;\n+\n   else\n-    info_ptr->push_p = (frame_pointer_needed\n-\t\t\t|| (abi != ABI_DARWIN && write_symbols != NO_DEBUG)\n-\t\t\t|| ((total_raw_size - info_ptr->fixed_size)\n-\t\t\t    > (TARGET_32BIT ? 220 : 288)));\n+    info_ptr->push_p\n+      = total_raw_size - info_ptr->fixed_size > (TARGET_32BIT ? 220 : 288);\n \n   /* Zero offsets if we're not saving those registers.  */\n   if (info_ptr->fp_size == 0)"}]}