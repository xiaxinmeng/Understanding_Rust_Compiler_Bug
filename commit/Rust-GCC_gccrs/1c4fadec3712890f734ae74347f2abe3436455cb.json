{"sha": "1c4fadec3712890f734ae74347f2abe3436455cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0ZmFkZWMzNzEyODkwZjczNGFlNzQzNDdmMmFiZTM0MzY0NTVjYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:13:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:13:38Z"}, "message": "(enum attrs): Add A_UNUSED.\n\n(init_attributes): Initialize it.\n(decl_attributes, case A_UNUSED): New case.\n\nFrom-SVN: r9545", "tree": {"sha": "e995ab257de405bab0c228c069a270e1ffa361e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e995ab257de405bab0c228c069a270e1ffa361e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c4fadec3712890f734ae74347f2abe3436455cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4fadec3712890f734ae74347f2abe3436455cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4fadec3712890f734ae74347f2abe3436455cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4fadec3712890f734ae74347f2abe3436455cb/comments", "author": null, "committer": null, "parents": [{"sha": "9727936469cd5e40eebf2b14b69a0ce376acc673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9727936469cd5e40eebf2b14b69a0ce376acc673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9727936469cd5e40eebf2b14b69a0ce376acc673"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0bdde5c7b54f9e570003f11e12e99fc43d1ad6e7", "filename": "gcc/c-common.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4fadec3712890f734ae74347f2abe3436455cb/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4fadec3712890f734ae74347f2abe3436455cb/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1c4fadec3712890f734ae74347f2abe3436455cb", "patch": "@@ -30,7 +30,7 @@ extern struct obstack permanent_obstack;\n \n enum attrs {A_PACKED, A_NOCOMMON, A_NORETURN, A_CONST, A_T_UNION,\n \t    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,\n-\t    A_FORMAT, A_WEAK, A_ALIAS};\n+\t    A_UNUSED, A_FORMAT, A_WEAK, A_ALIAS};\n \n static void declare_hidden_char_array\tPROTO((char *, char *));\n static void add_attribute\t\tPROTO((enum attrs, char *,\n@@ -250,6 +250,7 @@ init_attributes ()\n   add_attribute (A_NOCOMMON, \"nocommon\", 0, 0, 1);\n   add_attribute (A_NORETURN, \"noreturn\", 0, 0, 1);\n   add_attribute (A_NORETURN, \"volatile\", 0, 0, 1);\n+  add_attribute (A_UNUSED, \"unused\", 0, 0, 1);\n   add_attribute (A_CONST, \"const\", 0, 0, 1);\n   add_attribute (A_T_UNION, \"transparent_union\", 0, 0, 0);\n   add_attribute (A_CONSTRUCTOR, \"constructor\", 0, 0, 1);\n@@ -355,6 +356,14 @@ decl_attributes (node, attributes, prefix_attributes)\n \t    warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n \t  break;\n \n+\tcase A_UNUSED:\n+\t  if (TREE_CODE (decl) == PARM_DECL || TREE_CODE (decl) == VAR_DECL\n+\t      || TREE_CODE (decl) == FUNCTION_DECL)\n+\t    TREE_USED (decl) = 1;\n+\t  else\n+\t    warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n+\t  break;\n+\n \tcase A_CONST:\n \t  if (TREE_CODE (decl) == FUNCTION_DECL)\n \t    TREE_READONLY (decl) = 1;"}]}