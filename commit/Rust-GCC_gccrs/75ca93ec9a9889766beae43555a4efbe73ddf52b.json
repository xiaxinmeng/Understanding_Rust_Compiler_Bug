{"sha": "75ca93ec9a9889766beae43555a4efbe73ddf52b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjYTkzZWM5YTk4ODk3NjZiZWFlNDM1NTVhNGVmYmU3M2RkZjUyYg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-04-13T14:00:42Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-04-13T14:00:42Z"}, "message": "i386.md (kunpckhi): Swap operands.\n\ngcc/\n\n\t* config/i386/i386.md (kunpckhi): Swap operands.\n\t(kunpcksi): Likewise.\n\t(kunpckdi): Likewise.\n\t* config/i386/sse.md (vec_pack_trunc_qi): Likewise.\n\t(vec_pack_trunc_<mode>): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/avx512bw-kunpckdq-2.c: New test.\n\t* gcc.target/i386/avx512bw-kunpckwd-2.c: New test.\n\t* gcc.target/i386/avx512f-kunpckbw-2.c: New test.\n\nFrom-SVN: r234938", "tree": {"sha": "9a9049f7d65a694ea17172ff23133c4acab63fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9049f7d65a694ea17172ff23133c4acab63fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ca93ec9a9889766beae43555a4efbe73ddf52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ca93ec9a9889766beae43555a4efbe73ddf52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ca93ec9a9889766beae43555a4efbe73ddf52b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ca93ec9a9889766beae43555a4efbe73ddf52b/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b88990be30c676e36843aaab71ce98639c49711d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88990be30c676e36843aaab71ce98639c49711d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88990be30c676e36843aaab71ce98639c49711d"}], "stats": {"total": 100, "additions": 93, "deletions": 7}, "files": [{"sha": "1353a7abfea2cbe2e02cf40a24514c6258c2e641", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -1,3 +1,11 @@\n+2016-04-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* config/i386/i386.md (kunpckhi): Swap operands.\n+\t(kunpcksi): Likewise.\n+\t(kunpckdi): Likewise.\n+\t* config/i386/sse.md (vec_pack_trunc_qi): Likewise.\n+\t(vec_pack_trunc_<mode>): Likewise.\n+\n 2016-04-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/70628"}, {"sha": "56a30502d41feb06f370a87dd14865866d21f3c0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -8907,7 +8907,7 @@\n \t    (const_int 8))\n \t  (zero_extend:HI (match_operand:QI 2 \"register_operand\" \"k\"))))]\n   \"TARGET_AVX512F\"\n-  \"kunpckbw\\t{%1, %2, %0|%0, %2, %1}\"\n+  \"kunpckbw\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"mode\" \"HI\")\n    (set_attr \"type\" \"msklog\")\n    (set_attr \"prefix\" \"vex\")])\n@@ -8920,7 +8920,7 @@\n \t    (const_int 16))\n \t  (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"k\"))))]\n   \"TARGET_AVX512BW\"\n-  \"kunpckwd\\t{%1, %2, %0|%0, %2, %1}\"\n+  \"kunpckwd\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"mode\" \"SI\")])\n \n (define_insn \"kunpckdi\"\n@@ -8931,7 +8931,7 @@\n \t    (const_int 32))\n \t  (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"k\"))))]\n   \"TARGET_AVX512BW\"\n-  \"kunpckdq\\t{%1, %2, %0|%0, %2, %1}\"\n+  \"kunpckdq\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"mode\" \"DI\")])\n \n ;; See comment for addsi_1_zext why we do use nonimmediate_operand"}, {"sha": "b64457edab0558b3eebcb72142078135543c49b5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -11747,16 +11747,16 @@\n \n (define_expand \"vec_pack_trunc_qi\"\n   [(set (match_operand:HI 0 (\"register_operand\"))\n-        (ior:HI (ashift:HI (zero_extend:HI (match_operand:QI 1 (\"register_operand\")))\n+        (ior:HI (ashift:HI (zero_extend:HI (match_operand:QI 2 (\"register_operand\")))\n                            (const_int 8))\n-                (zero_extend:HI (match_operand:QI 2 (\"register_operand\")))))]\n+                (zero_extend:HI (match_operand:QI 1 (\"register_operand\")))))]\n   \"TARGET_AVX512F\")\n \n (define_expand \"vec_pack_trunc_<mode>\"\n   [(set (match_operand:<DOUBLEMASKMODE> 0 (\"register_operand\"))\n-        (ior:<DOUBLEMASKMODE> (ashift:<DOUBLEMASKMODE> (zero_extend:<DOUBLEMASKMODE> (match_operand:SWI24 1 (\"register_operand\")))\n+        (ior:<DOUBLEMASKMODE> (ashift:<DOUBLEMASKMODE> (zero_extend:<DOUBLEMASKMODE> (match_operand:SWI24 2 (\"register_operand\")))\n                            (match_dup 3))\n-                (zero_extend:<DOUBLEMASKMODE> (match_operand:SWI24 2 (\"register_operand\")))))]\n+                (zero_extend:<DOUBLEMASKMODE> (match_operand:SWI24 1 (\"register_operand\")))))]\n   \"TARGET_AVX512BW\"\n {\n   operands[3] = GEN_INT (GET_MODE_BITSIZE (<MODE>mode));"}, {"sha": "f7c477e2e05ee82cb77c0017486d43c76a95b8d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -1,3 +1,9 @@\n+2016-04-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* gcc.target/i386/avx512bw-kunpckdq-2.c: New test.\n+\t* gcc.target/i386/avx512bw-kunpckwd-2.c: New test.\n+\t* gcc.target/i386/avx512f-kunpckbw-2.c: New test.\n+\n 2016-04-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/70633"}, {"sha": "4fe503e42ac54a9ef5f1def59fff34de12087b74", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kunpckdq-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckdq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckdq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckdq-2.c?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512bw\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#define AVX512BW\n+\n+#include \"avx512f-helper.h\"\n+\n+static __mmask64 __attribute__((noinline,noclone))\n+unpack (__mmask64 arg1, __mmask64 arg2)\n+{\n+  __mmask64 res;\n+\n+  res = _mm512_kunpackd (arg1, arg2);\n+\n+  return res;\n+}\n+\n+void\n+TEST (void)\n+{\n+  if (unpack (0x07UL, 0x70UL) != 0x0700000070UL)\n+    __builtin_abort ();\n+}"}, {"sha": "5d7f8955975204cb71b53f3c952bf1d9352fc298", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kunpckwd-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckwd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckwd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kunpckwd-2.c?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512bw\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#define AVX512BW\n+\n+#include \"avx512f-helper.h\"\n+\n+static __mmask32 __attribute__((noinline,noclone))\n+unpack (__mmask32 arg1, __mmask32 arg2)\n+{\n+  __mmask32 res;\n+\n+  res = _mm512_kunpackw (arg1, arg2);\n+\n+  return res;\n+}\n+\n+void\n+TEST (void)\n+{\n+  if (unpack (0x07, 0x70) != 0x070070)\n+    __builtin_abort ();\n+}"}, {"sha": "86580f289aab27ac427299950af5175ea372f815", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kunpckbw-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ca93ec9a9889766beae43555a4efbe73ddf52b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kunpckbw-2.c?ref=75ca93ec9a9889766beae43555a4efbe73ddf52b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+/* { dg-require-effective-target avx512f } */\n+\n+#define AVX512F\n+\n+#include \"avx512f-helper.h\"\n+\n+static __mmask16 __attribute__((noinline,noclone))\n+unpack (__mmask16 arg1, __mmask16 arg2)\n+{\n+  __mmask16 res;\n+\n+  res = _mm512_kunpackb (arg1, arg2);\n+\n+  return res;\n+}\n+\n+void\n+TEST (void)\n+{\n+  if (unpack (0x07, 0x70) != 0x0770)\n+    __builtin_abort ();\n+}"}]}