{"sha": "00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiODUxN2Q0Y2IyZWUxMWI3YjA3ZTFjNjlhMDBjYTA3ZWRmZWQ0ZQ==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2013-06-10T23:14:12Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2013-06-10T23:14:12Z"}, "message": "re PR c/57563 (Lots of Cilk+ failures on i686-linux)\n\nFix for PR c/57563\ngcc/c/ChangeLog\n+2013-06-10  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       * c-array-notation.c (fix_builtin_array_notation_fn): Fully folded\n+       excessive precision expressions in function parameters.  Also removed\n+       couple unwanted while statements.\n+\n\ngcc/testsuite/ChangeLog\n+2013-06-10  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       PR c/57563\n+       * c-c++-common/cilk-plus/AN/builtin_fn_mutating.c (main): Fixed a bug\n+       in how we check __sec_reduce_mutating function's result.\n+\n\nFrom-SVN: r199925", "tree": {"sha": "aaa8d116d537e4253cf42dbd2f2f1bb4638b756c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa8d116d537e4253cf42dbd2f2f1bb4638b756c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/comments", "author": null, "committer": null, "parents": [{"sha": "3b31a7273829b9b36bbe542952f7a23e68860055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b31a7273829b9b36bbe542952f7a23e68860055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b31a7273829b9b36bbe542952f7a23e68860055"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "72d182bbae3f87548ce25d500567ef2be7fa3818", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "patch": "@@ -1,3 +1,9 @@\n+2013-06-10  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\t* c-array-notation.c (fix_builtin_array_notation_fn): Fully folded\n+\texcessive precision expressions in function parameters.  Also removed\n+\tcouple unwanted while statements.\n+\n 2013-06-07  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-array-notation.c (expand_array_notation_exprs): Added"}, {"sha": "32859691cc328113fcc27a9185ca8af0a169eced", "filename": "gcc/c/c-array-notation.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Fc%2Fc-array-notation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Fc%2Fc-array-notation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-array-notation.c?ref=00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "patch": "@@ -143,25 +143,18 @@ fix_builtin_array_notation_fn (tree an_builtin_fn, tree *new_var)\n       || an_type == BUILT_IN_CILKPLUS_SEC_REDUCE_MUTATING)\n     {\n       call_fn = CALL_EXPR_ARG (an_builtin_fn, 2);\n-      while (TREE_CODE (call_fn) == CONVERT_EXPR\n-\t     || TREE_CODE (call_fn) == NOP_EXPR)\n+      if (TREE_CODE (call_fn) == ADDR_EXPR)\n \tcall_fn = TREE_OPERAND (call_fn, 0);\n-      call_fn = TREE_OPERAND (call_fn, 0);\n-      \n       identity_value = CALL_EXPR_ARG (an_builtin_fn, 0);\n-      while (TREE_CODE (identity_value) == CONVERT_EXPR\n-\t     || TREE_CODE (identity_value) == NOP_EXPR)\n-\tidentity_value = TREE_OPERAND (identity_value, 0);\n       func_parm = CALL_EXPR_ARG (an_builtin_fn, 1);\n     }\n   else\n     func_parm = CALL_EXPR_ARG (an_builtin_fn, 0);\n   \n-  while (TREE_CODE (func_parm) == CONVERT_EXPR\n-\t || TREE_CODE (func_parm) == EXCESS_PRECISION_EXPR\n-\t || TREE_CODE (func_parm) == NOP_EXPR)\n-    func_parm = TREE_OPERAND (func_parm, 0);\n-\n+  /* Fully fold any EXCESSIVE_PRECISION EXPR that can occur in the function\n+     parameter.  */\n+  func_parm = c_fully_fold (func_parm, false, NULL);\n+  \n   location = EXPR_LOCATION (an_builtin_fn);\n   \n   if (!find_rank (location, an_builtin_fn, an_builtin_fn, true, &rank))"}, {"sha": "611404da34fca269d79416484d21906e89ffc9a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "patch": "@@ -1,3 +1,9 @@\n+2013-06-10  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c/57563\n+\t* c-c++-common/cilk-plus/AN/builtin_fn_mutating.c (main): Fixed a bug\n+\tin how we check __sec_reduce_mutating function's result.\t\n+\n 2013-06-10  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \t    Pat Haugen <pthaugen@us.ibm.com>\n \t    Peter Bergner <bergner@vnet.ibm.com>"}, {"sha": "7c194c2aa205fb8a86ae1f8dc313b7e9785c5a17", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/builtin_fn_mutating.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c?ref=00b8517d4cb2ee11b7b07e1c69a00ca07edfed4e", "patch": "@@ -44,11 +44,11 @@ int main(void)\n   max_value = array3[0] * array4[0];\n   for (ii = 0; ii < 10; ii++)\n     if (array3[ii] * array4[ii] > max_value) {\n-      max_value = array3[ii] * array4[ii];\n       max_index = ii;\n     }\n     \n-  \n+  for (ii = 0; ii < 10; ii++)\n+    my_func (&max_value, array3[ii] * array4[ii]);\n   \n #if HAVE_IO\n   for (ii = 0; ii < 10; ii++) "}]}