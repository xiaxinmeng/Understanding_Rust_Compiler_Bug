{"sha": "1b970c28e234bc5da44c76188c8eca9b4d06382a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5NzBjMjhlMjM0YmM1ZGE0NGM3NjE4OGM4ZWNhOWI0ZDA2MzgyYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-07-01T00:15:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-07-01T00:15:02Z"}, "message": "re PR target/22260 (-fPIC -fno-delayed-branch miscompiles MI this_adjusting thunks)\n\n\tPR target/22260\n\t* config/sparc/sparc.c (emit_and_preserve): Add 2nd register.\n\tPreserve the 2nd register too, if present.\n\t(sparc_output_mi_thunk) <PIC case>: Preserve the PIC register too.\n\tAdjust call to emit_and_preserve.\n\nFrom-SVN: r101484", "tree": {"sha": "504d5714f80295b300bc412a05b0bc308f9a3936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/504d5714f80295b300bc412a05b0bc308f9a3936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b970c28e234bc5da44c76188c8eca9b4d06382a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b970c28e234bc5da44c76188c8eca9b4d06382a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b970c28e234bc5da44c76188c8eca9b4d06382a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b970c28e234bc5da44c76188c8eca9b4d06382a/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ed32b3871253040272bef49961d17e0fb471a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed32b3871253040272bef49961d17e0fb471a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed32b3871253040272bef49961d17e0fb471a2b"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "7233af07a0d071fb071e27294ba329d10ddffecc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b970c28e234bc5da44c76188c8eca9b4d06382a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b970c28e234bc5da44c76188c8eca9b4d06382a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b970c28e234bc5da44c76188c8eca9b4d06382a", "patch": "@@ -1,3 +1,11 @@\n+2005-06-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/22260\n+\t* config/sparc/sparc.c (emit_and_preserve): Add 2nd register.\n+\tPreserve the 2nd register too, if present.\n+\t(sparc_output_mi_thunk) <PIC case>: Preserve the PIC register too.\n+\tAdjust call to emit_and_preserve.\n+\n 2005-06-30  Zack Weinberg  <zack@codesourcery.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "69bde4b3b70a2c4ae071f19bca0853c7c21f04e4", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b970c28e234bc5da44c76188c8eca9b4d06382a/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b970c28e234bc5da44c76188c8eca9b4d06382a/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1b970c28e234bc5da44c76188c8eca9b4d06382a", "patch": "@@ -8373,17 +8373,26 @@ sparc_rtx_costs (rtx x, int code, int outer_code, int *total)\n     }\n }\n \n-/* Emit the sequence of insns SEQ while preserving the register REG.  */\n+/* Emit the sequence of insns SEQ while preserving the registers.  */\n \n static void\n-emit_and_preserve (rtx seq, rtx reg)\n+emit_and_preserve (rtx seq, rtx reg, rtx reg2)\n {\n+  /* STACK_BOUNDARY guarantees that this is a 2-word slot.  */\n   rtx slot = gen_rtx_MEM (word_mode,\n \t\t\t  plus_constant (stack_pointer_rtx, SPARC_STACK_BIAS));\n \n   emit_insn (gen_stack_pointer_dec (GEN_INT (STACK_BOUNDARY/BITS_PER_UNIT)));\n   emit_insn (gen_rtx_SET (VOIDmode, slot, reg));\n+  if (reg2)\n+    emit_insn (gen_rtx_SET (VOIDmode,\n+\t\t\t    adjust_address (slot, word_mode, UNITS_PER_WORD),\n+\t\t\t    reg2));\n   emit_insn (seq);\n+  if (reg2)\n+    emit_insn (gen_rtx_SET (VOIDmode,\n+\t\t\t    reg2,\n+\t\t\t    adjust_address (slot, word_mode, UNITS_PER_WORD)));\n   emit_insn (gen_rtx_SET (VOIDmode, reg, slot));\n   emit_insn (gen_stack_pointer_inc (GEN_INT (STACK_BOUNDARY/BITS_PER_UNIT)));\n }\n@@ -8523,19 +8532,20 @@ sparc_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n     {\n       /* The hoops we have to jump through in order to generate a sibcall\n \t without using delay slots...  */\n-      rtx spill_reg, seq, scratch = gen_rtx_REG (Pmode, 1);\n+      rtx spill_reg, spill_reg2, seq, scratch = gen_rtx_REG (Pmode, 1);\n \n       if (flag_pic)\n         {\n \t  spill_reg = gen_rtx_REG (word_mode, 15);  /* %o7 */\n+\t  spill_reg2 = gen_rtx_REG (word_mode, PIC_OFFSET_TABLE_REGNUM);\n \t  start_sequence ();\n \t  /* Delay emitting the PIC helper function because it needs to\n \t     change the section and we are emitting assembly code.  */\n \t  load_pic_register (true);  /* clobbers %o7 */\n \t  scratch = legitimize_pic_address (funexp, Pmode, scratch);\n \t  seq = get_insns ();\n \t  end_sequence ();\n-\t  emit_and_preserve (seq, spill_reg);\n+\t  emit_and_preserve (seq, spill_reg, spill_reg2);\n \t}\n       else if (TARGET_ARCH32)\n \t{\n@@ -8564,7 +8574,7 @@ sparc_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n \t      sparc_emit_set_symbolic_const64 (scratch, funexp, spill_reg);\n \t      seq = get_insns ();\n \t      end_sequence ();\n-\t      emit_and_preserve (seq, spill_reg);\n+\t      emit_and_preserve (seq, spill_reg, 0);\n \t      break;\n \n \t    default:"}]}