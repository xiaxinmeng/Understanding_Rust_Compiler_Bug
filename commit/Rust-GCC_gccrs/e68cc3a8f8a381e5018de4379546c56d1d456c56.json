{"sha": "e68cc3a8f8a381e5018de4379546c56d1d456c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4Y2MzYThmOGEzODFlNTAxOGRlNDM3OTU0NmM1NmQxZDQ1NmM1Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-18T07:25:32Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-18T14:12:06Z"}, "message": "rs6000: Fix creation of VEC_COND_EXPR\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000-call.c (fold_build_vec_cmp):\n\tSince 502d63b6d6141597bb18fd23c87736a1b384cf8f, first argument\n\tof a VEC_COND_EXPR cannot be tcc_comparison and so that\n\ta SSA_NAME needs to be created before we use it for the first\n\targument of the VEC_COND_EXPR.\n\t(fold_compare_helper): Pass gsi to fold_build_vec_cmp.", "tree": {"sha": "a2627fa53afc4004dbbaa8a9f5998be981e2f710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2627fa53afc4004dbbaa8a9f5998be981e2f710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68cc3a8f8a381e5018de4379546c56d1d456c56", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7rdjYACgkQTcGC3A+n\nN4X4ZAgAn7+JDlM2G0SVIRxF4WMz+XWZQw0sSKLpkaxYgOgxSxgrBhufJe8lMZiq\nMbc1hrUww2zyuJJAGSUjnv9Ky7lK2yPFYY13ZbQTCMe4esREjN+Gz30J2CeLfaPz\nLHnd9GX6A1A0NMj9hFa6mqjfs1qI0t2MyKb6hpQuKCHcdox4Kdz7QmDWnrm2UDuT\nx7JdPmBWJxZyhCyll1ksNaXxk2aK1Nv+5qRZLZfV4NEGqcntM3+aUa43pHTCbRYY\nssursfURwIWAPlYH9SJ4VZaCNlN+OW2sJwrLBs5miuJ44iaCNi+9a1AWBAV0tFKB\nXYqipI/mpFn/e+DO4NB/qCv2xwFWVg==\n=HNAu\n-----END PGP SIGNATURE-----", "payload": "tree a2627fa53afc4004dbbaa8a9f5998be981e2f710\nparent ac70b20b1007da0d3d02a9cec3c0715145c4b593\nauthor Martin Liska <mliska@suse.cz> 1592465132 +0200\ncommitter Martin Liska <mliska@suse.cz> 1592489526 +0200\n\nrs6000: Fix creation of VEC_COND_EXPR\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000-call.c (fold_build_vec_cmp):\n\tSince 502d63b6d6141597bb18fd23c87736a1b384cf8f, first argument\n\tof a VEC_COND_EXPR cannot be tcc_comparison and so that\n\ta SSA_NAME needs to be created before we use it for the first\n\targument of the VEC_COND_EXPR.\n\t(fold_compare_helper): Pass gsi to fold_build_vec_cmp.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68cc3a8f8a381e5018de4379546c56d1d456c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68cc3a8f8a381e5018de4379546c56d1d456c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68cc3a8f8a381e5018de4379546c56d1d456c56/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac70b20b1007da0d3d02a9cec3c0715145c4b593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac70b20b1007da0d3d02a9cec3c0715145c4b593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac70b20b1007da0d3d02a9cec3c0715145c4b593"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "cf46fafd3531bb8b978c2579d6cccda1eb630c1a", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68cc3a8f8a381e5018de4379546c56d1d456c56/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68cc3a8f8a381e5018de4379546c56d1d456c56/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=e68cc3a8f8a381e5018de4379546c56d1d456c56", "patch": "@@ -10714,16 +10714,19 @@ rs6000_builtin_valid_without_lhs (enum rs6000_builtins fn_code)\n    operation.  This sets up true/false vectors, and uses the\n    VEC_COND_EXPR operation.\n    CODE indicates which comparison is to be made. (EQ, GT, ...).\n-   TYPE indicates the type of the result.  */\n+   TYPE indicates the type of the result.\n+   Code is inserted before GSI.  */\n static tree\n-fold_build_vec_cmp (tree_code code, tree type,\n-\t\t    tree arg0, tree arg1)\n+fold_build_vec_cmp (tree_code code, tree type, tree arg0, tree arg1,\n+\t\t    gimple_stmt_iterator *gsi)\n {\n   tree cmp_type = truth_type_for (type);\n   tree zero_vec = build_zero_cst (type);\n   tree minus_one_vec = build_minus_one_cst (type);\n-  tree cmp = fold_build2 (code, cmp_type, arg0, arg1);\n-  return fold_build3 (VEC_COND_EXPR, type, cmp, minus_one_vec, zero_vec);\n+  tree temp = create_tmp_reg_or_ssa_name (cmp_type);\n+  gimple *g = gimple_build_assign (temp, code, arg0, arg1);\n+  gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+  return fold_build3 (VEC_COND_EXPR, type, temp, minus_one_vec, zero_vec);\n }\n \n /* Helper function to handle the in-between steps for the\n@@ -10734,7 +10737,7 @@ fold_compare_helper (gimple_stmt_iterator *gsi, tree_code code, gimple *stmt)\n   tree arg0 = gimple_call_arg (stmt, 0);\n   tree arg1 = gimple_call_arg (stmt, 1);\n   tree lhs = gimple_call_lhs (stmt);\n-  tree cmp = fold_build_vec_cmp (code, TREE_TYPE (lhs), arg0, arg1);\n+  tree cmp = fold_build_vec_cmp (code, TREE_TYPE (lhs), arg0, arg1, gsi);\n   gimple *g = gimple_build_assign (lhs, cmp);\n   gimple_set_location (g, gimple_location (stmt));\n   gsi_replace (gsi, g, true);"}]}