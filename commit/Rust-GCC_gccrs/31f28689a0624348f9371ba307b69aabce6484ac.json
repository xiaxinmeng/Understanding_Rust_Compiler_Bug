{"sha": "31f28689a0624348f9371ba307b69aabce6484ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmMjg2ODlhMDYyNDM0OGY5MzcxYmEzMDdiNjlhYWJjZTY0ODRhYw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-11T17:10:03Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T17:10:03Z"}, "message": "2003-10-11  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/awt/j2d/DirectRasterGraphics.java\n\t* gnu/java/awt/EmbeddedWindowSupport.java\n\nFrom-SVN: r72339", "tree": {"sha": "06a6248d1f05c4ff57f9222cd969679255c8e587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06a6248d1f05c4ff57f9222cd969679255c8e587"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31f28689a0624348f9371ba307b69aabce6484ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f28689a0624348f9371ba307b69aabce6484ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31f28689a0624348f9371ba307b69aabce6484ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f28689a0624348f9371ba307b69aabce6484ac/comments", "author": null, "committer": null, "parents": [{"sha": "f93c21801e66897707427dc4b3ae7fc6042462c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93c21801e66897707427dc4b3ae7fc6042462c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93c21801e66897707427dc4b3ae7fc6042462c3"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "91ee5a4d18116a76e5dd1bbc56f18a76d18b7acd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=31f28689a0624348f9371ba307b69aabce6484ac", "patch": "@@ -1,3 +1,8 @@\n+2003-10-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/awt/j2d/DirectRasterGraphics.java\n+\t* gnu/java/awt/EmbeddedWindowSupport.java\n+\n 2003-10-09  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/SelectorImpl.java (register):"}, {"sha": "d7248b9d84687a4098ba3d14d8ae68f70aa2bd68", "filename": "libjava/gnu/awt/j2d/DirectRasterGraphics.java", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2Fgnu%2Fawt%2Fj2d%2FDirectRasterGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2Fgnu%2Fawt%2Fj2d%2FDirectRasterGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fj2d%2FDirectRasterGraphics.java?ref=31f28689a0624348f9371ba307b69aabce6484ac", "patch": "@@ -27,59 +27,59 @@\n  */\n public interface DirectRasterGraphics extends Cloneable\n {\n-  public void dispose();\n+  void dispose();\n   \n-  public void setColor(Color color);\n+  void setColor(Color color);\n   \n-  public void setPaintMode();\n+  void setPaintMode();\n   \n-  public void setXORMode(Color altColor);\n+  void setXORMode(Color altColor);\n   \n-  public void setFont(Font font);\n+  void setFont(Font font);\n   \n-  public FontMetrics getFontMetrics(Font font);\n+  FontMetrics getFontMetrics(Font font);\n   \n   // supports rects, multi-rects and polygons\n-  public void setClip(Shape clip);\n+  void setClip(Shape clip);\n   \n-  public void copyArea(int x, int y, int width, int height,\n+  void copyArea(int x, int y, int width, int height,\n \t\t       int dx, int dy);\n   \n-  public void drawLine(int x1, int y1, int x2, int y2);\n+  void drawLine(int x1, int y1, int x2, int y2);\n   \n-  public void drawRect(int x, int y, int width, int height);\n+  void drawRect(int x, int y, int width, int height);\n   \n-  public void fillRect(int x, int y, int width, int height);\n+  void fillRect(int x, int y, int width, int height);\n   \n-  public void drawArc(int x, int y, int width, int height,\n+  void drawArc(int x, int y, int width, int height,\n \t\t      int startAngle, int arcAngle);\n   \n-  public void fillArc(int x, int y, int width, int height,\n+  void fillArc(int x, int y, int width, int height,\n \t\t      int startAngle, int arcAngle);\n   \n-  public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints);\n+  void drawPolyline(int[] xPoints, int[] yPoints, int nPoints);\n   \n-  public void drawPolygon(int[] xPoints, int[] yPoints, int nPoints);\n+  void drawPolygon(int[] xPoints, int[] yPoints, int nPoints);\n   \n-  public void fillPolygon(int[] xPoints, int[] yPoints, int nPoints,\n+  void fillPolygon(int[] xPoints, int[] yPoints, int nPoints,\n \t\t\t  int translateX, int translateY);\n   \n-  public void drawString(String str, int x, int y);\n+  void drawString(String str, int x, int y);\n   \n-  public boolean drawImage(Image image, int x, int y,\n+  boolean drawImage(Image image, int x, int y,\n \t\t\t   ImageObserver observer);\n \n   /**\n    * Map the data for screen pixels in the requested bounds to a\n    * raster object.  This gives read/write access to the screen\n    * pixels, allowing neat alpha and composite tricks.\n    */\n-  public MappedRaster mapRaster(Rectangle bounds);\n+  MappedRaster mapRaster(Rectangle bounds);\n   \n   /**\n    * Detach previously mapped pixel data from a raster object.\n    */\n-  public void unmapRaster(MappedRaster mappedRaster);\n+  void unmapRaster(MappedRaster mappedRaster);\n   \n-  public Object clone();\n+  Object clone();\n }"}, {"sha": "9d48499e069c384df06deb9d3a2ed900200ae610", "filename": "libjava/gnu/java/awt/EmbeddedWindowSupport.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindowSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f28689a0624348f9371ba307b69aabce6484ac/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindowSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindowSupport.java?ref=31f28689a0624348f9371ba307b69aabce6484ac", "patch": "@@ -61,5 +61,5 @@\n    *\n    * @param w The embedded window with which to associate a peer.\n    */\n-  public EmbeddedWindowPeer createEmbeddedWindow (EmbeddedWindow w);\n+  EmbeddedWindowPeer createEmbeddedWindow (EmbeddedWindow w);\n }"}]}