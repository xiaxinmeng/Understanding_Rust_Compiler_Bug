{"sha": "43f237b43f37cf15bd834e631aa82910cd9a50d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmMjM3YjQzZjM3Y2YxNWJkODM0ZTYzMWFhODI5MTBjZDlhNTBkOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-10-26T07:03:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-10-26T07:03:30Z"}, "message": "re PR rtl-optimization/24460 (Profiled bootstrap broken)\n\n\tPR rtl-optimization/24460\n\t* dwarf2out.c (have_switched_text_sections): New boolean variable.\n\t(dwarf2out_switch_text_section): Set it to true instead of\n\tincrementing separate_line_info_table_in_use.\n\t(output_loc_list): Additionally test have_switched_text_sections.\n\t(output_ranges): Likewise.\n\t(dwarf2out_finish): Likewise.\n\t* varasm.c (assemble_start_function): Do not call\n\tinsert_section_boundary_note.\n\t(assemble_end_function): If flag_reorder_blocks_and_partition,\n\tswitch to the function's section before emitting the .size directive.\n\t* bb-reorder.c (insert_section_boundary_note): Staticify.\n\t(rest_of_handle_reorder_blocks): Call insert_section_boundary_note.\n\t* output.h (insert_section_boundary_note): Delete.\n\nCo-Authored-By: Caroline Tice <ctice@apple.com>\n\nFrom-SVN: r105916", "tree": {"sha": "962005b9e688c09f1fafa66ca1b61ef6c984860e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/962005b9e688c09f1fafa66ca1b61ef6c984860e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43f237b43f37cf15bd834e631aa82910cd9a50d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f237b43f37cf15bd834e631aa82910cd9a50d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f237b43f37cf15bd834e631aa82910cd9a50d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f237b43f37cf15bd834e631aa82910cd9a50d8/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "976e21f67321ad483895471c5f285a1880a47b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976e21f67321ad483895471c5f285a1880a47b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976e21f67321ad483895471c5f285a1880a47b4a"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "c2bc164724176cb74e29512193e590f0aec06465", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43f237b43f37cf15bd834e631aa82910cd9a50d8", "patch": "@@ -1,3 +1,21 @@\n+2005-10-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Caroline Tice  <ctice@apple.com>\n+\n+\tPR rtl-optimization/24460\n+\t* dwarf2out.c (have_switched_text_sections): New boolean variable.\n+\t(dwarf2out_switch_text_section): Set it to true instead of\n+\tincrementing separate_line_info_table_in_use.\n+\t(output_loc_list): Additionally test have_switched_text_sections.\n+\t(output_ranges): Likewise.\n+\t(dwarf2out_finish): Likewise.\n+\t* varasm.c (assemble_start_function): Do not call\n+\tinsert_section_boundary_note.\n+\t(assemble_end_function): If flag_reorder_blocks_and_partition,\n+\tswitch to the function's section before emitting the .size directive.\n+\t* bb-reorder.c (insert_section_boundary_note): Staticify.\n+\t(rest_of_handle_reorder_blocks): Call insert_section_boundary_note.\n+\t* output.h (insert_section_boundary_note): Delete.\n+\n 2005-10-24  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR c/23103"}, {"sha": "40d0cdf676ec5e328df779eb5dd4a637cc70062d", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=43f237b43f37cf15bd834e631aa82910cd9a50d8", "patch": "@@ -1945,7 +1945,7 @@ reorder_basic_blocks (unsigned int flags)\n    encountering this note will make the compiler switch between the\n    hot and cold text sections.  */\n \n-void\n+static void\n insert_section_boundary_note (void)\n {\n   basic_block bb;\n@@ -2231,6 +2231,9 @@ rest_of_handle_reorder_blocks (void)\n   if (changed && HAVE_conditional_execution)\n     update_life_info (NULL, UPDATE_LIFE_GLOBAL_RM_NOTES,\n                       PROP_DEATH_NOTES);\n+\n+  /* Add NOTE_INSN_SWITCH_TEXT_SECTIONS notes.  */\n+  insert_section_boundary_note ();\n }\n \n struct tree_opt_pass pass_reorder_blocks ="}, {"sha": "8a5c4c255bedb02c79b26bbd24f49e7126eb9739", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=43f237b43f37cf15bd834e631aa82910cd9a50d8", "patch": "@@ -3778,6 +3778,9 @@ static GTY(()) unsigned line_info_table_allocated;\n /* Number of elements in line_info_table currently in use.  */\n static GTY(()) unsigned line_info_table_in_use;\n \n+/* True if the compilation unit contains more than one .text section.  */\n+static GTY(()) bool have_switched_text_section = false;\n+\n /* A pointer to the base of a table that contains line information\n    for each source code line outside of .text in the compilation unit.  */\n static GTY ((length (\"separate_line_info_table_allocated\")))\n@@ -6850,7 +6853,7 @@ dwarf2out_switch_text_section (void)\n   fde->dw_fde_hot_section_end_label = cfun->hot_section_end_label;\n   fde->dw_fde_unlikely_section_label = cfun->cold_section_label;\n   fde->dw_fde_unlikely_section_end_label = cfun->cold_section_end_label;\n-  separate_line_info_table_in_use++;\n+  have_switched_text_section = true;\n }\n \n /* Output the location list given to us.  */\n@@ -6866,7 +6869,7 @@ output_loc_list (dw_loc_list_ref list_head)\n   for (curr = list_head; curr != NULL; curr = curr->dw_loc_next)\n     {\n       unsigned long size;\n-      if (separate_line_info_table_in_use == 0)\n+      if (!separate_line_info_table_in_use && !have_switched_text_section)\n \t{\n \t  dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->begin, curr->section,\n \t\t\t\t\"Location list begin address (%s)\",\n@@ -7375,7 +7378,7 @@ output_ranges (void)\n \t  /* If all code is in the text section, then the compilation\n \t     unit base address defaults to DW_AT_low_pc, which is the\n \t     base of the text section.  */\n-\t  if (separate_line_info_table_in_use == 0)\n+\t  if (!separate_line_info_table_in_use && !have_switched_text_section)\n \t    {\n \t      dw2_asm_output_delta (DWARF2_ADDR_SIZE, blabel,\n \t\t\t\t    text_section_label,\n@@ -14096,7 +14099,7 @@ dwarf2out_finish (const char *filename)\n \n   /* We can only use the low/high_pc attributes if all of the code was\n      in .text.  */\n-  if (separate_line_info_table_in_use == 0)\n+  if (!separate_line_info_table_in_use && !have_switched_text_section)\n     {\n       add_AT_lbl_id (comp_unit_die, DW_AT_low_pc, text_section_label);\n       add_AT_lbl_id (comp_unit_die, DW_AT_high_pc, text_end_label);"}, {"sha": "3cb091fcf931a0099f186deb67556a85dfc6ff82", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=43f237b43f37cf15bd834e631aa82910cd9a50d8", "patch": "@@ -588,10 +588,6 @@ extern bool default_valid_pointer_mode (enum machine_mode);\n \n extern int default_address_cost (rtx);\n \n-/* When performing hot/cold basic block partitioning, insert note in\n-   instruction stream indicating boundary between hot and cold sections.  */\n-extern void insert_section_boundary_note (void);\n-\n /* dbxout helper functions */\n #if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n "}, {"sha": "83f47ac486e8c32d29af0b3e1f7b065fecbab3e4", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f237b43f37cf15bd834e631aa82910cd9a50d8/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=43f237b43f37cf15bd834e631aa82910cd9a50d8", "patch": "@@ -1369,11 +1369,6 @@ assemble_start_function (tree decl, const char *fnname)\n   /* Standard thing is just output label for the function.  */\n   ASM_OUTPUT_LABEL (asm_out_file, fnname);\n #endif /* ASM_DECLARE_FUNCTION_NAME */\n-\n-  /* Add NOTE_INSN_SWITCH_TEXT_SECTIONS notes.  Don't do this if the current\n-     function is a thunk, because we don't have a CFG in that case.  */\n-  if (!current_function_is_thunk)\n-    insert_section_boundary_note ();\n }\n \n /* Output assembler code associated with defining the size of the\n@@ -1383,6 +1378,9 @@ void\n assemble_end_function (tree decl, const char *fnname)\n {\n #ifdef ASM_DECLARE_FUNCTION_SIZE\n+  /* We could have switched section in the middle of the function.  */\n+  if (flag_reorder_blocks_and_partition)\n+    function_section (decl);\n   ASM_DECLARE_FUNCTION_SIZE (asm_out_file, fnname, decl);\n #endif\n   if (! CONSTANT_POOL_BEFORE_FUNCTION)"}]}