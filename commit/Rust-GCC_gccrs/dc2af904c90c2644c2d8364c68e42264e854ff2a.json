{"sha": "dc2af904c90c2644c2d8364c68e42264e854ff2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMyYWY5MDRjOTBjMjY0NGMyZDgzNjRjNjhlNDIyNjRlODU0ZmYyYQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-11-06T17:19:48Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-11-06T17:19:48Z"}, "message": "Add a new asm hook to print the end of a variable definition.\n\n\t* target.def (decl_end): New hook.\n\t* varasm.c (assemble_variable_contents, assemble_constant_contents):\n\tUse it.\n\t* doc/tm.texi.in (TARGET_ASM_DECL_END): Add.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r217196", "tree": {"sha": "4e848cc26ba0119f178b8262c8ae3d830b4ed5bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e848cc26ba0119f178b8262c8ae3d830b4ed5bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc2af904c90c2644c2d8364c68e42264e854ff2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2af904c90c2644c2d8364c68e42264e854ff2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc2af904c90c2644c2d8364c68e42264e854ff2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2af904c90c2644c2d8364c68e42264e854ff2a/comments", "author": null, "committer": null, "parents": [{"sha": "4ad4ebfeae632ead1aa06203690ec7701569bb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ad4ebfeae632ead1aa06203690ec7701569bb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ad4ebfeae632ead1aa06203690ec7701569bb2f"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "1121f3e856414fbec14e8801727f18f80d541438", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc2af904c90c2644c2d8364c68e42264e854ff2a", "patch": "@@ -1,3 +1,11 @@\n+2014-11-06  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* target.def (decl_end): New hook.\n+\t* varasm.c (assemble_variable_contents, assemble_constant_contents):\n+\tUse it.\n+\t* doc/tm.texi.in (TARGET_ASM_DECL_END): Add.\n+\t* doc/tm.texi: Regenerate.\n+\n 2014-11-06  Renlin Li  <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_architecture_version): New."}, {"sha": "7af23e5247aa9d597ab4e914fe017dfa8c31b5c1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=dc2af904c90c2644c2d8364c68e42264e854ff2a", "patch": "@@ -7421,6 +7421,11 @@ The default implementation of this hook will use the\n when the relevant string is @code{NULL}.\n @end deftypefn\n \n+@deftypefn {Target Hook} void TARGET_ASM_DECL_END (void)\n+Define this hook if the target assembler requires a special marker to\n+terminate an initialized variable declaration.\n+@end deftypefn\n+\n @deftypefn {Target Hook} bool TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA (FILE *@var{file}, rtx @var{x})\n A target hook to recognize @var{rtx} patterns that @code{output_addr_const}\n can't deal with, and output assembly code to @var{file} corresponding to"}, {"sha": "f739fdfee91da5d992a5a040c46c677c223916d2", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=dc2af904c90c2644c2d8364c68e42264e854ff2a", "patch": "@@ -5193,6 +5193,8 @@ It must not be modified by command-line option processing.\n \n @hook TARGET_ASM_INTEGER\n \n+@hook TARGET_ASM_DECL_END\n+\n @hook TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA\n \n @defmac ASM_OUTPUT_ASCII (@var{stream}, @var{ptr}, @var{len})"}, {"sha": "4c02c1113d1afb6b265f67a43cbcf4b6ed1340bc", "filename": "gcc/target.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=dc2af904c90c2644c2d8364c68e42264e854ff2a", "patch": "@@ -127,6 +127,15 @@ when the relevant string is @code{NULL}.\",\n  bool, (rtx x, unsigned int size, int aligned_p),\n  default_assemble_integer)\n \n+/* Notify the backend that we have completed emitting the data for a\n+   decl.  */\n+DEFHOOK\n+(decl_end,\n+ \"Define this hook if the target assembler requires a special marker to\\n\\\n+terminate an initialized variable declaration.\",\n+ void, (void),\n+ hook_void_void)\n+\n /* Output code that will globalize a label.  */\n DEFHOOK\n (globalize_label,"}, {"sha": "8d857a4bc9a41dd01b5371975d9e3b20a856a0b8", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2af904c90c2644c2d8364c68e42264e854ff2a/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=dc2af904c90c2644c2d8364c68e42264e854ff2a", "patch": "@@ -2041,6 +2041,7 @@ assemble_variable_contents (tree decl, const char *name,\n       else\n \t/* Leave space for it.  */\n \tassemble_zeros (tree_to_uhwi (DECL_SIZE_UNIT (decl)));\n+      targetm.asm_out.decl_end ();\n     }\n }\n \n@@ -3347,6 +3348,8 @@ assemble_constant_contents (tree exp, const char *label, unsigned int align)\n \n   /* Output the value of EXP.  */\n   output_constant (exp, size, align);\n+\n+  targetm.asm_out.decl_end ();\n }\n \n /* We must output the constant data referred to by SYMBOL; do so.  */"}]}