{"sha": "a1fae7947741fe4f25c4b86b48918d056e80eeaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmYWU3OTQ3NzQxZmU0ZjI1YzRiODZiNDg5MThkMDU2ZTgwZWVhYQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2001-04-06T22:20:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-04-06T22:20:03Z"}, "message": "equal.cc: New test.\n\n\n2001-04-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n\t* testsuite/25_algorithms/equal.cc: New test.\n\nFrom-SVN: r41169", "tree": {"sha": "e02342cc995233129bfc5a509c983cd052133c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e02342cc995233129bfc5a509c983cd052133c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1fae7947741fe4f25c4b86b48918d056e80eeaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fae7947741fe4f25c4b86b48918d056e80eeaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1fae7947741fe4f25c4b86b48918d056e80eeaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fae7947741fe4f25c4b86b48918d056e80eeaa/comments", "author": null, "committer": null, "parents": [{"sha": "4efbaaa75f9a8cf073a8b0ddca0346cfb4a42086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4efbaaa75f9a8cf073a8b0ddca0346cfb4a42086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4efbaaa75f9a8cf073a8b0ddca0346cfb4a42086"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "b4a322f4dffdc5336a596b0fe720b5584fdbeb4b", "filename": "libstdc++-v3/testsuite/25_algorithms/equal.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fae7947741fe4f25c4b86b48918d056e80eeaa/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fae7947741fe4f25c4b86b48918d056e80eeaa/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc?ref=a1fae7947741fe4f25c4b86b48918d056e80eeaa", "patch": "@@ -0,0 +1,41 @@\n+// 2001-04-06 gdr\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <vector>\n+#include <algorithm>\n+\n+//\n+// 25.1.8 Make sure std::equal doesn't make any extra assumption\n+//        about operator== and operator!=\n+//\n+\n+struct X { };\n+\n+bool operator==(X, X) { return true; }\n+\n+// Not implemented on purpose.  { dg-do link }\n+bool operator!=(X, X);\n+\n+int main()\n+{\n+  std::vector<X> v, w;\n+\n+  return !std::equal(v.begin(), v.end(), w.begin());\n+}"}]}