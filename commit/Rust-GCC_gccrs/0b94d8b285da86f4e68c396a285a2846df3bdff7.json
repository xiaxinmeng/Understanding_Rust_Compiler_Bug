{"sha": "0b94d8b285da86f4e68c396a285a2846df3bdff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5NGQ4YjI4NWRhODZmNGU2OGMzOTZhMjg1YTI4NDZkZjNiZGZmNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-03T21:33:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-03T21:33:26Z"}, "message": "pr41900.c: Make test compile only.\n\n\t* gcc.target/i386/pr41900.c: Make test compile only.  Scan assembler\n\tdump to not include \"call *%esp\".\n\nFrom-SVN: r153871", "tree": {"sha": "541a71a8d2fa9274154f22389d009d8ff06b2ca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/541a71a8d2fa9274154f22389d009d8ff06b2ca2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b94d8b285da86f4e68c396a285a2846df3bdff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b94d8b285da86f4e68c396a285a2846df3bdff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b94d8b285da86f4e68c396a285a2846df3bdff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b94d8b285da86f4e68c396a285a2846df3bdff7/comments", "author": null, "committer": null, "parents": [{"sha": "791c344bc655e04234ff98e3039b690856f0afdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791c344bc655e04234ff98e3039b690856f0afdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791c344bc655e04234ff98e3039b690856f0afdd"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "90dcf62235db6b87fa388928100cb3c778ccaa5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b94d8b285da86f4e68c396a285a2846df3bdff7", "patch": "@@ -56,8 +56,7 @@\n \t(UNSPEC_BUILTIN_MVTIPL): Define.\n \t(revl): Rename to bswapsi2.\n \t(bswaphi2): New pattern.\n-\t(mvtachi): Mark as volatile because it uses a register unknown to\n-\tGCC.\n+\t(mvtachi): Mark as volatile because it uses a register unknown to GCC.\n \t(mvtaclo): Likewise.\n \t(racw): Likewise.\n \t(mvtc): Remove clobber of cc0.\n@@ -69,8 +68,7 @@\n \t(mcpu=): Add.\n \t(patch=): Add.\n \t(msave-acc-in-interrupts): Add.\n-\t* config/rx/t-rx (MULTILIB_OPTIONS): Change default to 64bit\n-\tdoubles.\n+\t* config/rx/t-rx (MULTILIB_OPTIONS): Change default to 64bit doubles.\n \t(MULTILIB_DIRS): Likewise.\n \t(MULTILIB_MATCHES): Treat -fpu as an alias for -m32bit-doubles.\n \t* doc/extend.texi: Remove description of \"exception\" function\n@@ -108,7 +106,7 @@\n \tTARGET_CALL_ESP.\n \t(*call_pop_1, *call_1, *call_value_pop_1, *call_value_1):\n \tNew patterns, use \"lsm\" as operand 1 constraint.\n-\t* config/i386/predicates.md (call_insn_operand): Depend on \n+\t* config/i386/predicates.md (call_insn_operand): Depend on\n \tindex_register_operand for !TARGET_CALL_ESP to avoid %esp register.\n \n 2009-11-02  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n@@ -173,8 +171,7 @@\n \n \t* config/mn10300/mn10300.c (mn10300_function_value): Make static, add\n \tnew 'outgoing' argument.\n-\t(mn10300_libcall_value, mn10300_function_value_regno_p): New\n-\tfunctions.\n+\t(mn10300_libcall_value, mn10300_function_value_regno_p): New functions.\n \t(TARGET_FUNCTION_VALUE, TARGET_LIBCALL_VALUE): Declare.\n \t* config/mn10300/mn10300.h: (FUNCTION_VALUE, FUNCTION_OUTGOING_VALUE,\n \tLIBCALL_VALUE): Remove.\n@@ -283,7 +280,7 @@\n \tPR target/38018\n \t* doc/tm.texi (OVERRIDE_OPTIONS): Update.\n \t(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): New.\n-\t* optc-gen.awk (cl_target_option_restore): Include call to \n+\t* optc-gen.awk (cl_target_option_restore): Include call to\n \ttargetm.override_options_after_change.\n \t* target-def.h (TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): New.\n \t* target.h (override_options_after_change): New.\n@@ -307,7 +304,7 @@\n 2009-10-29  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/arm.c (find_best_start): Fix type of remainder to be\n-\tunsigned .\n+\tunsigned.\n \n 2009-10-29  Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "f0d09d060903c6b39992ff415e3a514e510aae02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b94d8b285da86f4e68c396a285a2846df3bdff7", "patch": "@@ -1,3 +1,8 @@\n+2009-11-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/pr41900.c: Make test compile only.  Scan assembler\n+\tdump to not include \"call *%esp\".\n+\n 2009-11-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39786\n@@ -26,7 +31,7 @@\n \n 2009-11-03  Nick Clifton  <nickc@redhat.com>\n \n-\t* gcc.target/rx/builtins,c: Remove redundant tests.\n+\t* gcc.target/rx/builtins.c: Remove redundant tests.\n \tAdd test of MVTIPL instruction.\n \t* gcc.target/rx/interrupts.c: Use fast_interrupt and interrupt\n \tfunction attributes.  Add -msave-acc-in-interrupts option to the\n@@ -1452,18 +1457,15 @@\n \t* gcc.c-torture/execute/builtins/builtins.exp: Likewise.\n \t* gcc.c-torture/execute/ieee/ieee.exp: Likewise.\n \t* gcc.c-torture/unsorted/unsorted.exp: Likewise.\n-\t* gcc.target/i386/math-torture/math-torture.exp:\n-\tLikewise.\n+\t* gcc.target/i386/math-torture/math-torture.exp: Likewise.\n \t* gcc.dg/lto/lto.exp: New.\n \t* gfortran.dg/lto/lto.exp: New.\n \t* lib/target-supports.exp (check_effective_target_lto): New.\n-\t* lib/c-torture.exp: Load target-supports.exp.\n-\tDefine LTO_TORTURE_OPTIONS if check_effective_target_lto\n-\treturns nonzero.\n+\t* lib/c-torture.exp: Load target-supports.exp.  Define\n+\tLTO_TORTURE_OPTIONS if check_effective_target_lto returns nonzero.\n \t* lib/gcc-dg.exp: Likewise.\n \t* lib/lto.exp: New.\n-\t* lib/torture-options.exp: Add support for a third\n-\targument.\n+\t* lib/torture-options.exp: Add support for a third argument.\n \n 2009-10-03  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "55f712d1fa4ec481fcca6da68533761d8830c186", "filename": "gcc/testsuite/gcc.target/i386/pr41900.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b94d8b285da86f4e68c396a285a2846df3bdff7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c?ref=0b94d8b285da86f4e68c396a285a2846df3bdff7", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run } */\n+/* { dg-do compile } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -mpreferred-stack-boundary=2\" } */\n \n@@ -9,3 +9,5 @@ int main ()\n   ((void (*)(void)) &code) ();\n   return 0;\n }\n+\n+/* { dg-final { scan-assembler-not \"call\\[ \\\\t\\]+\\\\*%esp\" } } */"}]}