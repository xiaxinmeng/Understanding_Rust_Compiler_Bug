{"sha": "db397e2e5a10965e953ce1801511c55fe8042295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzOTdlMmU1YTEwOTY1ZTk1M2NlMTgwMTUxMWM1NWZlODA0MjI5NQ==", "commit": {"author": {"name": "Ilya Verbin", "email": "ilya.verbin@intel.com", "date": "2015-03-13T13:30:26Z"}, "committer": {"name": "Ilya Verbin", "email": "iverbin@gcc.gnu.org", "date": "2015-03-13T13:30:26Z"}, "message": "varpool.c (varpool_node::get_create): Don't set 'offloadable' flag for the external decls.\n\ngcc/\n\t* varpool.c (varpool_node::get_create): Don't set 'offloadable' flag for\n\tthe external decls.\nlibgomp/\n\t* testsuite/libgomp.fortran/declare-target-1.f90: New test.\n\t* testsuite/libgomp.fortran/declare-target-2.f90: New file.\n\nFrom-SVN: r221421", "tree": {"sha": "f625bcbcacaa7aca60c5598632cbd58e1847f345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f625bcbcacaa7aca60c5598632cbd58e1847f345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db397e2e5a10965e953ce1801511c55fe8042295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db397e2e5a10965e953ce1801511c55fe8042295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db397e2e5a10965e953ce1801511c55fe8042295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db397e2e5a10965e953ce1801511c55fe8042295/comments", "author": null, "committer": null, "parents": [{"sha": "d3ef4bd61fdcc491c39249dd256c3733f45219b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ef4bd61fdcc491c39249dd256c3733f45219b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ef4bd61fdcc491c39249dd256c3733f45219b9"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "5bcfdb9786d319cf75350d309f2bc657b6e60a9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db397e2e5a10965e953ce1801511c55fe8042295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db397e2e5a10965e953ce1801511c55fe8042295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db397e2e5a10965e953ce1801511c55fe8042295", "patch": "@@ -1,3 +1,8 @@\n+2015-03-13  Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\t* varpool.c (varpool_node::get_create): Don't set 'offloadable' flag for\n+\tthe external decls.\n+\n 2015-03-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/64600"}, {"sha": "ce6427956d800d9be2577a3f22af20ff5d950cc5", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db397e2e5a10965e953ce1801511c55fe8042295/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db397e2e5a10965e953ce1801511c55fe8042295/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=db397e2e5a10965e953ce1801511c55fe8042295", "patch": "@@ -173,7 +173,7 @@ varpool_node::get_create (tree decl)\n   node = varpool_node::create_empty ();\n   node->decl = decl;\n \n-  if ((flag_openacc || flag_openmp)\n+  if ((flag_openacc || flag_openmp) && !DECL_EXTERNAL (decl)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))\n     {\n       node->offloadable = 1;"}, {"sha": "d62132105076450c87bcd903a2bd79fdb76bfa94", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=db397e2e5a10965e953ce1801511c55fe8042295", "patch": "@@ -1,3 +1,8 @@\n+2015-03-13  Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\t* testsuite/libgomp.fortran/declare-target-1.f90: New test.\n+\t* testsuite/libgomp.fortran/declare-target-2.f90: New file.\n+\n 2015-03-13  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* configure.tgt (*-*-rtems*): Use local-exec TLS model."}, {"sha": "fd9c26fde9555d9b9f8bf34711c9e25f1c23b157", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90?ref=db397e2e5a10965e953ce1801511c55fe8042295", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+! { dg-additional-sources declare-target-2.f90 }\n+\n+module declare_target_1_mod\n+  integer :: var_x\n+  !$omp declare target(var_x)\n+end module declare_target_1_mod\n+\n+  interface\n+    subroutine foo ()\n+    end subroutine foo\n+  end interface\n+\n+  call foo ()\n+end"}, {"sha": "f8d3ab2b60649865bce93765fcd4372ee8b96fe1", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-2.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db397e2e5a10965e953ce1801511c55fe8042295/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90?ref=db397e2e5a10965e953ce1801511c55fe8042295", "patch": "@@ -0,0 +1,18 @@\n+! Don't compile this anywhere, it is just auxiliary\n+! file compiled together with declare-target-1.f90\n+! to verify inter-CU module handling of omp declare target.\n+! { dg-do compile { target { lp64 && { ! lp64 } } } }\n+\n+subroutine foo\n+  use declare_target_1_mod\n+\n+  var_x = 10\n+  !$omp target update to(var_x)\n+\n+  !$omp target\n+    var_x = var_x * 2;\n+  !$omp end target\n+\n+  !$omp target update from(var_x)\n+  if (var_x /= 20) call abort\n+end subroutine foo"}]}