{"sha": "fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0MjQyMWVmMDYwZDdiYzJlN2Y5NTRjZTEyYjBmZGM4M2U1N2VlNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-07-30T16:19:14Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-07-30T16:19:14Z"}, "message": "re PR fortran/71730 (ICE when character length specification uses an undefined variable)\n\n2016-07-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/71730\n\t* decl.c (char_len_param_value): Check return value of\n\tgfc_reduce_init_expr().\n\n2016-07-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/71730\n\t* gfortran.dg/pr71730.f90: New test.\n\t* gfortran.dg/bounds_check_strlen_2.f90: Fix invalid code.\n\t* gfortran.dg/array_constructor_27.f03: Update dg-error message.\n\t* gfortran.dg/array_constructor_26.f03: Ditto.\n\nFrom-SVN: r238904", "tree": {"sha": "8e0a2eb509ebf7b16038640bfae617591083fb0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e0a2eb509ebf7b16038640bfae617591083fb0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/comments", "author": null, "committer": null, "parents": [{"sha": "12f549f4a4809411bbb7bd95c791eafa8861345c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f549f4a4809411bbb7bd95c791eafa8861345c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f549f4a4809411bbb7bd95c791eafa8861345c"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "775276bc5c2914c7d7cf8a27388fc1c201abb649", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -1,3 +1,9 @@\n+2016-07-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/71730\n+\t* decl.c (char_len_param_value): Check return value of\n+\tgfc_reduce_init_expr().\n+\n 2016-07-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* trans-array.c (gfc_conv_array_ref): Fix allocation of diagnostic"}, {"sha": "7ff2f0df29767f8d0044230408480e7e5dd145c8", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -906,6 +906,7 @@ char_len_param_value (gfc_expr **expr, bool *deferred)\n     goto syntax;\n   else if ((*expr)->expr_type == EXPR_VARIABLE)\n     {\n+      bool t;\n       gfc_expr *e;\n \n       e = gfc_copy_expr (*expr);\n@@ -917,7 +918,15 @@ char_len_param_value (gfc_expr **expr, bool *deferred)\n \t  && e->ref->u.ar.dimen_type[0] == DIMEN_RANGE)\n \tgoto syntax;\n \n-      gfc_reduce_init_expr (e);\n+      t = gfc_reduce_init_expr (e);\n+\n+      if (!t && (e->ts.type == BT_UNKNOWN\n+\t\t && e->symtree->n.sym->attr.untyped == 1\n+\t\t && e->symtree->n.sym->ns->seen_implicit_none == 1))\n+\t{\n+\t  gfc_free_expr (e);\n+\t  goto syntax;\n+\t}\n \n       if ((e->ref && e->ref->type == REF_ARRAY\n \t   && e->ref->u.ar.type != AR_ELEMENT)"}, {"sha": "d41cfcaa6c315657edf505255c3bf6d227874d41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -1,3 +1,11 @@\n+2016-07-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/71730\n+\t* gfortran.dg/pr71730.f90: New test.\n+\t* gfortran.dg/bounds_check_strlen_2.f90: Fix invalid code.\n+\t* gfortran.dg/array_constructor_27.f03: Update dg-error message.\n+\t* gfortran.dg/array_constructor_26.f03: Ditto.\n+\n 2016-07-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* g++.dg/pr70098.C: Remove XFAIL for powerpc64_no_dm."}, {"sha": "bb40d09d090c8335d7b0f5bc0665c7e61545f99d", "filename": "gcc/testsuite/gfortran.dg/array_constructor_26.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_26.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_26.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_26.f03?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -10,7 +10,6 @@ MODULE WinData\n   INTEGER (1), PARAMETER :: MAXFLD = 25_1, MAXHED = 5_1, MAXCHR = 80_1\n   integer :: i\n   TYPE TWindowData\n-    CHARACTER (MAX_FLD_HED, 1) :: DWFdHd(MAXFLD) = [(\" \", i = 1, MAXFLD)]\n-    ! { dg-error \"specification expression\" \"\" { target *-*-* } 13 }\n+    CHARACTER (MAX_FLD_HED, 1) :: DWFdHd(MAXFLD) = [(\" \", i = 1, MAXFLD)] ! { dg-error \"Scalar INTEGER expression\" }\n   END TYPE TWindowData\n END MODULE WinData"}, {"sha": "de0217a750028327d05959402b2044181a0c02e3", "filename": "gcc/testsuite/gfortran.dg/array_constructor_27.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_27.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_27.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_27.f03?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -8,8 +8,7 @@\n implicit none\n \n type t\n-  character (a) :: arr (1) = [ \"a\" ]\n-  ! { dg-error \"specification expression\" \"\" { target *-*-* } 11 }\n+  character (a) :: arr (1) = [ \"a\" ] ! { dg-error \"Scalar INTEGER expression\" }\n end type t\n \n end"}, {"sha": "73c2ea8282ea76c9ca9260ec3d9a5497f0b1f096", "filename": "gcc/testsuite/gfortran.dg/bounds_check_strlen_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_2.f90?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -11,8 +11,8 @@ MODULE m\n \n   SUBROUTINE test (str, n)\n     IMPLICIT NONE\n-    CHARACTER(len=n) :: str\n     INTEGER :: n\n+    CHARACTER(len=n) :: str\n   END SUBROUTINE test\n \n   SUBROUTINE test2 (str)"}, {"sha": "f0d48c43e6f6c2f6b31e88378365db231b9b46a8", "filename": "gcc/testsuite/gfortran.dg/pr71730.f90", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71730.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71730.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71730.f90?ref=fb42421ef060d7bc2e7f954ce12b0fdc83e57ee6", "patch": "@@ -0,0 +1,5 @@\n+! { dg-do compile }\n+subroutine foo\n+  implicit none\n+  character(len=bar) :: a ! { dg-error \"Scalar INTEGER expression\" }\n+end subroutine foo"}]}