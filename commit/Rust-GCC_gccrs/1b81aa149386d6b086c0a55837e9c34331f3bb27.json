{"sha": "1b81aa149386d6b086c0a55837e9c34331f3bb27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4MWFhMTQ5Mzg2ZDZiMDg2YzBhNTU4MzdlOWMzNDMzMWYzYmIyNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-26T06:04:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-26T06:04:35Z"}, "message": "(fold): Avoid the normal STRIP_NOPS on arg of NOP_EXPR.\n\nFrom-SVN: r1959", "tree": {"sha": "8188c7a2288304fd39d66ef4d35e4eaedf28d981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8188c7a2288304fd39d66ef4d35e4eaedf28d981"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b81aa149386d6b086c0a55837e9c34331f3bb27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b81aa149386d6b086c0a55837e9c34331f3bb27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b81aa149386d6b086c0a55837e9c34331f3bb27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b81aa149386d6b086c0a55837e9c34331f3bb27/comments", "author": null, "committer": null, "parents": [{"sha": "3bf40d18826c0f6cfad45d8d3a5e604c854b8d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf40d18826c0f6cfad45d8d3a5e604c854b8d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf40d18826c0f6cfad45d8d3a5e604c854b8d34"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "e23683e2dcb8586af79e747a6fedc653c55dfc88", "filename": "gcc/fold-const.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b81aa149386d6b086c0a55837e9c34331f3bb27/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b81aa149386d6b086c0a55837e9c34331f3bb27/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1b81aa149386d6b086c0a55837e9c34331f3bb27", "patch": "@@ -2849,7 +2849,27 @@ fold (expr)\n     }\n   \n   kind = TREE_CODE_CLASS (code);\n-  if (kind == 'e' || kind == '<' || kind == '1' || kind == '2' || kind == 'r')\n+  if (code == NOP_EXPR || code == FLOAT_EXPR || code == CONVERT_EXPR)\n+    {\n+      /* Special case for conversion ops that can have fixed point args.  */\n+      arg0 = TREE_OPERAND (t, 0);\n+\n+      /* Don't use STRIP_NOPS, because signedness of argument type matters.  */\n+      if (arg0 != 0)\n+\tSTRIP_TYPE_NOPS (arg0);\n+\n+      if (arg0 != 0 && TREE_CODE (arg0) != INTEGER_CST\n+#if ! defined (REAL_IS_NOT_DOUBLE) || defined (REAL_ARITHMETIC)\n+\t  && TREE_CODE (arg0) != REAL_CST\n+#endif /* not REAL_IS_NOT_DOUBLE, or REAL_ARITHMETIC */\n+\t  )\n+\t/* Note that TREE_CONSTANT isn't enough:\n+\t   static var addresses are constant but we can't\n+\t   do arithmetic on them.  */\n+\twins = 0;\n+    }\n+  else if (kind == 'e' || kind == '<'\n+\t   || kind == '1' || kind == '2' || kind == 'r')\n     {\n       register int len = tree_code_length[(int) code];\n       register int i;"}]}