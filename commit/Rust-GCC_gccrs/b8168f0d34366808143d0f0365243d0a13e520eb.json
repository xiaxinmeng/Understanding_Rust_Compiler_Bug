{"sha": "b8168f0d34366808143d0f0365243d0a13e520eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxNjhmMGQzNDM2NjgwODE0M2QwZjAzNjUyNDNkMGExM2U1MjBlYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-16T19:40:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-16T19:40:17Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r998", "tree": {"sha": "ad44cde09744047703938ebf2056496bd6679f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad44cde09744047703938ebf2056496bd6679f24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8168f0d34366808143d0f0365243d0a13e520eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8168f0d34366808143d0f0365243d0a13e520eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8168f0d34366808143d0f0365243d0a13e520eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8168f0d34366808143d0f0365243d0a13e520eb/comments", "author": null, "committer": null, "parents": [{"sha": "754731823fbe874204c1277823e07d9673aa3e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754731823fbe874204c1277823e07d9673aa3e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754731823fbe874204c1277823e07d9673aa3e93"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "129163820acd6ca20521ea1e2cd9389e11c894d7", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8168f0d34366808143d0f0365243d0a13e520eb/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8168f0d34366808143d0f0365243d0a13e520eb/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=b8168f0d34366808143d0f0365243d0a13e520eb", "patch": "@@ -830,7 +830,17 @@ __transfer_from_trampoline ()\t\t\\\n    || (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n        && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\t\\\n        && REG_OK_FOR_BASE_P (XEXP (X, 0))\t\t\t\t\\\n-       && CONSTANT_ADDRESS_P (XEXP (X, 1))))\n+       && CONSTANT_ADDRESS_P (XEXP (X, 1))\t\t\t\t\\\n+       && (GET_CODE (X) != CONST_INT || NS32K_DISPLACEMENT_P (INTVAL (X)))))\n+\n+/* 1 if integer I will fit in a 4 byte displacement field.\n+   Strictly speaking, we can't be sure that a symbol will fit this range.\n+   But, in practice, it always will.  */\n+\n+#define NS32K_DISPLACEMENT(i) \t\t\t\t\\\n+ (((i) <= 16777215 && (i) >= -16777216)\t\t\t\\\n+  || ((TARGET_32532 || TARGET_32332)\t\t\t\\\n+      && (i) <= 536870913 && (i) >= -536870912))\n \n /* Check for frame pointer or stack pointer.  */\n #define MEM_REG(X) \\"}, {"sha": "4fcfe780fd53f7280cc550a110c706db8cfd920f", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8168f0d34366808143d0f0365243d0a13e520eb/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8168f0d34366808143d0f0365243d0a13e520eb/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=b8168f0d34366808143d0f0365243d0a13e520eb", "patch": "@@ -833,10 +833,10 @@\n   if (which_alternative == 1)\n     {\n       int i = INTVAL (operands[2]);\n-      if ( i < 0x40000000 && i >= -0x40000000 )\n-\t  return \\\"addr %c2(%1),%0\\\";\n+      if (NS32K_DISPLACEMENT_P (i))\n+\treturn \\\"addr %c2(%1),%0\\\";\n       else\n-\t  return \\\"movd %1,%0\\;addd %2,%0\\\";\n+\treturn \\\"movd %1,%0\\;addd %2,%0\\\";\n     }\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {"}]}