{"sha": "2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0NGI4YjI4NmNiZGVlY2JiNmFiMDNlMDE1ZGM4NDdhMmZiNDJhMg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2020-01-27T12:51:03Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2020-01-27T12:51:03Z"}, "message": "[ARC] Make libgcc compatible with ARC's reduced register set config.\n\nARC processors can work with a reduced register set (i.e. registers\nr4-r9 and r16-r25 are not available). This option can be enabled\npassing -mrf16 option to the compiler, or by using -mcpu=em_mini CPU\nconfiguration. Using RF16 config requires all the hand-made assembly\nfiles used in libgcc to have the corresponding RF16 object attribute\nset.\n\nThis patch qualifies the relevant hand-made assembly files to\nRF16 config, and also adds generic c-functions for the one which are\nnot.\n\nlibgcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/crti.S: Add RF16 object attribute.\n\t* config/arc/crtn.S: Likewise.\n\t* config/arc/crttls.S: Likewise.\n\t* config/arc/lib1funcs.S: Likewise.\n\t* config/arc/fp-hack.h (ARC_OPTFPE): Define.\n\t* config/arc/lib2funcs.c: New file.\n\t* config/arc/t-arc: Add lib2funcs to LIB2ADD.", "tree": {"sha": "335fcaca6bb884a3cce69496e038e4edd2f88313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/335fcaca6bb884a3cce69496e038e4edd2f88313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "389cd88ce797e2a4345eab8db478a3b8eba798e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389cd88ce797e2a4345eab8db478a3b8eba798e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389cd88ce797e2a4345eab8db478a3b8eba798e8"}], "stats": {"total": 147, "additions": 130, "deletions": 17}, "files": [{"sha": "22bef220665ead40a2d3616cfe587c53c22dcda6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -1,3 +1,13 @@\n+2020-01-27  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/crti.S: Add RF16 object attribute.\n+\t* config/arc/crtn.S: Likewise.\n+\t* config/arc/crttls.S: Likewise.\n+\t* config/arc/lib1funcs.S: Likewise.\n+\t* config/arc/fp-hack.h (ARC_OPTFPE): Define.\n+\t* config/arc/lib2funcs.c: New file.\n+\t* config/arc/t-arc: Add lib2funcs to LIB2ADD.\n+\n 2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* Makefile.in (configure_deps): Add `toolexeclibdir.m4'."}, {"sha": "e05a78903a096b8c2fe476ba43b6415f206f03ff", "filename": "libgcc/config/arc/crti.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrti.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrti.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fcrti.S?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -28,6 +28,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #  This file contains the stack frame setup for contents of the .fini and\n # .init sections.\n \n+#ifdef __ARC_RF16__\n+\t/* Use object attributes to inform other tools this file is\n+\tsafe for RF16 configuration.  */\n+\t.arc_attribute Tag_ARC_ABI_rf16, 1\n+#endif\n \t.section .init\n \t.global _init\n \t.word 0"}, {"sha": "37eac5e6adaf0bb345d18222fc6fe1e4680fbb79", "filename": "libgcc/config/arc/crtn.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrtn.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrtn.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fcrtn.S?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -28,6 +28,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # This file just makes sure that the .fini and .init sections do in\n # fact return. This file is the last thing linked into any executable.\n \n+#ifdef __ARC_RF16__\n+\t/* Use object attributes to inform other tools this file is\n+\tsafe for RF16 configuration.  */\n+\t.arc_attribute Tag_ARC_ABI_rf16, 1\n+#endif\n \t.section .init\n \tpop_s\tblink\n \tj_s\t[blink]"}, {"sha": "b5aebf19ffb70424289d0bd4036c34943d540c50", "filename": "libgcc/config/arc/crttls.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrttls.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Fcrttls.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fcrttls.S?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -33,6 +33,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    the executable file might be covered by the GNU General Public License.  */\n \n \n+#ifdef __ARC_RF16__\n+\t/* Use object attributes to inform other tools this file is\n+\tsafe for RF16 configuration.  */\n+\t.arc_attribute Tag_ARC_ABI_rf16, 1\n+#endif\n+\n #if (__ARC_TLS_REGNO__ != -1)\n  /* ANSI concatenation macros.  */\n "}, {"sha": "65cdcdd4cc63f3e15267a32ed8f35f2abf46b943", "filename": "libgcc/config/arc/fp-hack.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Ffp-hack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Ffp-hack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Ffp-hack.h?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -30,7 +30,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define ARC_FP_DEBUG 1\n #define FINE_GRAINED_LIBRARIES\n-#define ARC_OPTFPE (defined (__ARC700__) || defined (__ARC_FPX_QUARK__))\n+\n+#if defined (__ARC700__) || defined (__ARC_FPX_QUARK__)\n+#define ARC_OPTFPE 1\n+#endif\n \n #if !ARC_OPTFPE || ARC_FP_DEBUG\n #define L_pack_sf"}, {"sha": "cc54b4022ecf8b30435f0ac2133e1be707f2958d", "filename": "libgcc/config/arc/lib1funcs.S", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flib1funcs.S?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -53,7 +53,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define ENDFUNC0(X)     .Lfe_##X: .size X,.Lfe_##X-X\n #define ENDFUNC(X)      ENDFUNC0(X)\n \n-\n+#ifdef __ARC_RF16__\n+\t/* Use object attributes to inform other tools this file is\n+\tsafe for RF16 configuration.  */\n+\t.arc_attribute Tag_ARC_ABI_rf16, 1\n+#endif\n \n #ifdef  L_mulsi3\n \t.section .text\n@@ -232,6 +236,7 @@ SYM(__umulsi3_highpart):\n #endif\n #endif /* L_umulsidi3 */\n \n+#ifndef __ARC_RF16__\n #ifdef L_muldi3\n \t.section .text\n \t.align 4\n@@ -285,6 +290,7 @@ SYM(__muldi3):\n #endif /* __LITTLE_ENDIAN__ */\n ENDFUNC(__muldi3)\n #endif /* L_muldi3 */\n+#endif /* !__ARC_RF16__ */\n \n #ifdef  L_umulsi3_highpart\n #include \"ieee-754/arc-ieee-754.h\"\n@@ -544,12 +550,6 @@ SYM(__udivmodsi4):\n SYM(__udivsi3):\n \tb @SYM(__udivmodsi4)\n \tENDFUNC(__udivsi3)\n-#if 0 /* interferes with linux loader */\n-\t.section .__arc_profile_forward, \"a\"\n-\t.long SYM(__udivsi3)\n-\t.long SYM(__udivmodsi4)\n-\t.long 65536\n-#endif\n \n #endif /* L_udivsi3 */\n \n@@ -948,12 +948,6 @@ SYM(__umodsi3):\n \tj.d [r7]\n \tmov r0,r1\n \tENDFUNC(__umodsi3)\n-#if 0 /* interferes with linux loader */\n-\t.section .__arc_profile_forward, \"a\"\n-\t.long SYM(__umodsi3)\n-\t.long SYM(__udivmodsi4)\n-\t.long 65536\n-#endif\n \n #endif /* L_umodsi3 */\n \n@@ -1106,6 +1100,7 @@ SYM(__clzsi2):\n ;;\n ;#endif\n \n+#ifndef __ARC_RF16__\n #ifdef L_millicodethunk_st\n \t.section .text\n \t.align 4\n@@ -1315,9 +1310,7 @@ SYM(__ld_r13_to_r14_ret):\n \n #endif /* L_millicodethunk_ret */\n \n-#define ARC_OPTFPE (defined (__ARC700__) || defined (__ARC_FPX_QUARK__))\n-\n-#if ARC_OPTFPE\n+#if defined (__ARC700__) || defined (__ARC_FPX_QUARK__)\n #ifdef  L_adddf3\n #ifdef __ARC_NORM__\n #include \"ieee-754/adddf3.S\"\n@@ -1482,3 +1475,5 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n #endif\n #endif /* ARC_OPTFPE */\n+\n+#endif /* !__ARC_RF16__ */"}, {"sha": "f9de7b21d74005b22a8ac135f4b3663e2b5ca90a", "filename": "libgcc/config/arc/lib2funcs.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Flib2funcs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Flib2funcs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flib2funcs.c?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -0,0 +1,88 @@\n+/* libgcc routines for ARC\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\n+typedef          int  sint64_t   __attribute__ ((mode (DI)));\n+typedef unsigned int  uint64_t   __attribute__ ((mode (DI)));\n+typedef unsigned int  nint32_t   __attribute__ ((mode (SI)));\n+typedef int           word_t     __attribute__ ((mode (__word__)));\n+\n+sint64_t __muldi3 (sint64_t, sint64_t);\n+nint32_t __umodsi3 (nint32_t, nint32_t);\n+\n+#ifdef __ARC_RF16__\n+\n+/* Generic multiplication procedure. No mpy operation involved.  */\n+sint64_t\n+__muldi3 (sint64_t a, sint64_t b)\n+{\n+  sint64_t res = 0;\n+  uint64_t cnt = a;\n+\n+  while (cnt)\n+    {\n+      if (cnt & 1)\n+        res += b;\n+      b <<= 1;\n+      cnt >>= 1;\n+    }\n+  return res;\n+}\n+\n+/* Unsigned 32bit integer division/modulus.  */\n+\n+static inline __attribute__ ((__always_inline__))\n+nint32_t\n+udivmodsi4 (nint32_t num, nint32_t den, word_t modwanted)\n+{\n+  nint32_t bit = 1;\n+  nint32_t res = 0;\n+\n+  while (den < num && bit && !(den & (1LL << 63)))\n+    {\n+      den <<= 1;\n+      bit <<= 1;\n+    }\n+  while (bit)\n+    {\n+      if (num >= den)\n+\t{\n+\t  num -= den;\n+\t  res |= bit;\n+\t}\n+      bit >>= 1;\n+      den >>= 1;\n+    }\n+  if (modwanted)\n+    return num;\n+  return res;\n+}\n+\n+nint32_t\n+__umodsi3 (nint32_t a, nint32_t b)\n+{\n+  return udivmodsi4 (a, b, 1);\n+}\n+\n+#endif"}, {"sha": "34aa4443a820420ca224a86170636cb3cfe4a4d0", "filename": "libgcc/config/arc/t-arc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2744b8b286cbdeecbb6ab03e015dc847a2fb42a2/libgcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Ft-arc?ref=2744b8b286cbdeecbb6ab03e015dc847a2fb42a2", "patch": "@@ -43,6 +43,7 @@ LIB1ASMFUNCS = _mulsi3 _umulsidi3  _umulsi3_highpart _muldi3 \\\n # used in an asm wrapper.\n \n LIB2ADD = fp-bit.c dp-bit.c\n+LIB2ADD += $(srcdir)/config/arc/lib2funcs.c\n \n dp-bit.c: $(srcdir)/fp-bit.c\n \techo '#ifndef __big_endian__' > dp-bit.c"}]}