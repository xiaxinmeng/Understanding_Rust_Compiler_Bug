{"sha": "73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "node_id": "C_kwDOANBUbNoAKDczYmFiYTFhZTFiOGYzNjE4YzJkM2I2NzQxMTdiOGE0NjJlMGNhNzY", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-03-03T00:13:43Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-03-04T15:15:18Z"}, "message": "c++: New module mangling ABI\n\nThis implements a new module mangling ABI as the original one has a\nfew issues:\n\na) it was not demangleable (oops)\n\nb) implemented a weak ownership model.\n\nThis implements a strong ownership model, so that exported entities\nfrom named modules are mangled to include their module attachment.\nThis gives more informative linker diagnostics and better module\nisolation.  Weak ownership was hoped to allow backwards compatibility\nwith non-modular code, but in practice was very brittle, and C++20\nadded new semantics for linkage declarations that cover the needed\nfunctionality.\n\nFAOD Clang is also moving to this ABI and documentation will be added\nto the Itanium ABI specification.\n\ngcc/cp/\n\t* cp-tree.h (mangle_identifier): Replace with ...\n\t(mangle_module_component): ... this.\n\t* mangle.cc (dump_substitution_candidates): Adjust.\n\t(add_substitution): Likewise.\n\t(find_substitution): Likewise.\n\t(unmangled_name_p): Likewise.\n\t(mangle_module_substitution): Reimplement.\n\t(mangle_module_component): New.\n\t(write_module, maybe_write_module): Adjust.\n\t(write_name): Drop modules here.\n\t(write_unqualified): Do them here instead.\n\t(mangle_global_init): Adjust.\n\t* module.cc (module_state::mangle): Adjust.\n\t(mangle_module): Likewise.\n\t(get_originating_module): Adjust.\n\ngcc/testsuite/\n\t* g++.dg/modules/fn-inline-1_b.C: Adjust.\n\t* g++.dg/modules/fn-inline-1_c.C: Adjust.\n\t* g++.dg/modules/imp-inline-1_a.C: Adjust.\n\t* g++.dg/modules/imp-inline-1_b.C: Adjust.\n\t* g++.dg/modules/init-2_a.C: Adjust.\n\t* g++.dg/modules/init-2_b.C: Adjust.\n\t* g++.dg/modules/init-2_c.C: Adjust.\n\t* g++.dg/modules/member-def-2_d.C: Adjust.\n\t* g++.dg/modules/mod-sym-1.C: Adjust.\n\t* g++.dg/modules/mod-sym-2.C: Adjust.\n\t* g++.dg/modules/mod-sym-3.C: Adjust.\n\t* g++.dg/modules/sym-subst-1.C: Adjust.\n\t* g++.dg/modules/sym-subst-2_b.C: Adjust.\n\t* g++.dg/modules/sym-subst-3_a.C: Adjust.\n\t* g++.dg/modules/sym-subst-3_b.C: Adjust.\n\t* g++.dg/modules/sym-subst-4.C: Adjust.\n\t* g++.dg/modules/sym-subst-5.C: Adjust.\n\t* g++.dg/modules/sym-subst-6.C: Adjust.\n\t* g++.dg/modules/tpl-spec-1_a.C: Adjust.\n\t* g++.dg/modules/tpl-spec-2_b.C: Adjust.\n\t* g++.dg/modules/tpl-spec-2_d.C: Adjust.\n\t* g++.dg/modules/tpl-spec-3_a.C: Adjust.\n\t* g++.dg/modules/virt-1_a.C: Adjust.\n\t* g++.dg/modules/virt-2_a.C: Adjust.\n\t* g++.dg/modules/virt-2_b.C: Adjust.\n\t* g++.dg/modules/virt-2_c.C: Adjust.\n\t* g++.dg/modules/vtt-1_a.C: Adjust.\n\t* g++.dg/modules/vtt-1_b.C: Adjust.", "tree": {"sha": "6bef001d2cbd8c83d7487248c9e6436e2a46da0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bef001d2cbd8c83d7487248c9e6436e2a46da0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b3e3853329b58fb2e50c17487df2ecbc4a5608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b3e3853329b58fb2e50c17487df2ecbc4a5608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b3e3853329b58fb2e50c17487df2ecbc4a5608"}], "stats": {"total": 289, "additions": 153, "deletions": 136}, "files": [{"sha": "cf08e16e17277903030779b71b44fb9528dea0f1", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -2829,6 +2829,12 @@ struct GTY(()) lang_decl_base {\n \n   /* The following apply to VAR, FUNCTION, TYPE, CONCEPT, & NAMESPACE\n      decls.  */\n+  // FIXME: Purview and Attachment are not the same thing, due to\n+  // linkage-declarations.  The modules code presumes they are the\n+  // same.  (For context, linkage-decl semantics was a very late\n+  // change). We need a module_attachment_p flag, and this will allow\n+  // some simplification of how we handle header unit entities.\n+  // Hurrah!\n   unsigned module_purview_p : 1;\t   /* in module purview (not GMF) */\n   unsigned module_import_p : 1;     \t   /* from an import */\n   unsigned module_entity_p : 1;\t\t   /* is in the entitity ary &\n@@ -8180,7 +8186,7 @@ extern char *get_mangled_vtable_map_var_name    (tree);\n extern bool mangle_return_type_p\t\t(tree);\n extern tree mangle_decomp\t\t\t(tree, vec<tree> &);\n extern void mangle_module_substitution\t\t(int);\n-extern void mangle_identifier\t\t\t(char, tree);\n+extern int mangle_module_component\t\t(tree id, bool partition);\n extern tree mangle_module_global_init\t\t(int);\n \n /* in dump.cc */"}, {"sha": "6657ce4d983447c53017264766cdfd9d34fc5e57", "filename": "gcc/cp/mangle.cc", "status": "modified", "additions": 67, "deletions": 57, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fmangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fmangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.cc?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -102,7 +102,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Things we only need one of.  This module is not reentrant.  */\n struct GTY(()) globals {\n   /* An array of the current substitution candidates, in the order\n-     we've seen them.  */\n+     we've seen them.  Contains NULLS, which correspond to module\n+     substitutions.  */\n   vec<tree, va_gc> *substitutions;\n \n   /* The entity that is being mangled.  */\n@@ -318,20 +319,26 @@ dump_substitution_candidates (void)\n \n       if (i > 0)\n \tfprintf (stderr, \"                    \");\n-      if (DECL_P (el))\n+      if (!el)\n+\tname = \"module\";\n+      else if (DECL_P (el))\n \tname = IDENTIFIER_POINTER (DECL_NAME (el));\n       else if (TREE_CODE (el) == TREE_LIST)\n \tname = IDENTIFIER_POINTER (DECL_NAME (TREE_VALUE (el)));\n       else if (TYPE_NAME (el))\n \tname = TYPE_NAME_STRING (el);\n       fprintf (stderr, \" S%d_ = \", i - 1);\n-      if (TYPE_P (el) &&\n-\t  (CP_TYPE_RESTRICT_P (el)\n-\t   || CP_TYPE_VOLATILE_P (el)\n-\t   || CP_TYPE_CONST_P (el)))\n-\tfprintf (stderr, \"CV-\");\n-      fprintf (stderr, \"%s (%s at %p)\\n\",\n-\t       name, get_tree_code_name (TREE_CODE (el)), (void *) el);\n+      if (el)\n+\t{\n+\t  if (TYPE_P (el) &&\n+\t      (CP_TYPE_RESTRICT_P (el)\n+\t       || CP_TYPE_VOLATILE_P (el)\n+\t       || CP_TYPE_CONST_P (el)))\n+\t    fprintf (stderr, \"CV-\");\n+\t  fprintf (stderr, \"%s (%s at %p)\",\n+\t\t   name, get_tree_code_name (TREE_CODE (el)), (void *) el);\n+\t}\n+      fprintf (stderr, \"\\n\");\n     }\n }\n \n@@ -443,11 +450,12 @@ add_substitution (tree node)\n       tree candidate;\n \n       FOR_EACH_VEC_SAFE_ELT (G.substitutions, i, candidate)\n-\t{\n-\t  gcc_assert (!(DECL_P (node) && node == candidate));\n-\t  gcc_assert (!(TYPE_P (node) && TYPE_P (candidate)\n-\t\t      && same_type_p (node, candidate)));\n-\t}\n+\tif (candidate)\n+\t  {\n+\t    gcc_assert (!(DECL_P (node) && node == candidate));\n+\t    gcc_assert (!(TYPE_P (node) && TYPE_P (candidate)\n+\t\t\t  && same_type_p (node, candidate)));\n+\t  }\n     }\n \n   /* Put the decl onto the varray of substitution candidates.  */\n@@ -669,20 +677,21 @@ find_substitution (tree node)\n     tags = get_abi_tags (type);\n   /* Now check the list of available substitutions for this mangling\n      operation.  */\n-  if (!abbr || tags) for (i = 0; i < size; ++i)\n-    {\n-      tree candidate = (*G.substitutions)[i];\n-      /* NODE is a matched to a candidate if it's the same decl node or\n-\t if it's the same type.  */\n-      if (decl == candidate\n-\t  || (TYPE_P (candidate) && type && TYPE_P (node)\n-\t      && same_type_p (type, candidate))\n-\t  || NESTED_TEMPLATE_MATCH (node, candidate))\n+  if (!abbr || tags)\n+    for (i = 0; i < size; ++i)\n+      if (tree candidate = (*G.substitutions)[i])\n \t{\n-\t  write_substitution (i);\n-\t  return 1;\n+\t  /* NODE is a matched to a candidate if it's the same decl node or\n+\t     if it's the same type.  */\n+\t  if (decl == candidate\n+\t      || (TYPE_P (candidate) && type && TYPE_P (node)\n+\t\t  && same_type_p (type, candidate))\n+\t      || NESTED_TEMPLATE_MATCH (node, candidate))\n+\t    {\n+\t      write_substitution (i);\n+\t      return 1;\n+\t    }\n \t}\n-    }\n \n   if (!abbr)\n     /* No substitution found.  */\n@@ -735,6 +744,10 @@ unmangled_name_p (const tree decl)\n       if (get_abi_tags (decl))\n \treturn false;\n \n+      // Declarations attached to a named module are mangled\n+      if (modules_p () && get_originating_module (decl, true) >= 0)\n+\treturn false;\n+\n       /* The names of non-static global variables aren't mangled.  */\n       return true;\n     }\n@@ -853,51 +866,49 @@ write_encoding (const tree decl)\n void\n mangle_module_substitution (int v)\n {\n-  if (v < 10)\n-    {\n-      write_char ('_');\n-      write_char ('0' + v);\n-    }\n-  else\n-    {\n-      write_char ('W');\n-      write_unsigned_number (v - 10);\n-      write_char ('_');\n-    }\n+  write_substitution (v - 1);\n }\n \n-void\n-mangle_identifier (char c, tree id)\n+int\n+mangle_module_component (tree comp, bool partition_p)\n {\n-  if (c)\n-    write_char (c);\n-  write_source_name (id);\n+  write_char ('W');\n+  if (partition_p)\n+    write_char ('P');\n+  write_source_name (comp);\n+\n+  // Module substitutions use the same number-space as entity\n+  // substitutions, but are orthogonal.\n+  vec_safe_push (G.substitutions, NULL_TREE);\n+  return G.substitutions->length ();\n }\n \n /* If the outermost non-namespace context (including DECL itself) is\n    a module-linkage decl, mangle the module information.  For module\n    global initializers we need to include the partition part.\n \n-   <module-name> ::= W <module-id>+ E\n-   <module-id> :: <unqualified-name>\n-               || _ <digit>  ;; short backref\n-\t       || W <number> _  ;; long backref\n-               || P <module-id> ;; partition introducer\n+   <module-name> ::= <module-sub>\n+\t\t || <subst>\n+                 || <module-name> <module-sub>\n+   <module-sub> :: W [P] <unqualified-name>\n */\n \n static void\n write_module (int m, bool include_partition)\n {\n   G.mod = true;\n-\n-  write_char ('W');\n   mangle_module (m, include_partition);\n-  write_char ('E');\n }\n \n static void\n maybe_write_module (tree decl)\n {\n+  if (!DECL_NAMESPACE_SCOPE_P (decl))\n+    return;\n+\n+  if (TREE_CODE (decl) == NAMESPACE_DECL && DECL_NAME (decl))\n+    return;\n+\n   int m = get_originating_module (decl, true);\n   if (m >= 0)\n     write_module (m, false);\n@@ -965,9 +976,6 @@ write_name (tree decl, const int ignore_local_scope)\n       decl = TYPE_NAME (TYPE_MAIN_VARIANT (TREE_TYPE (decl)));\n     }\n \n-  if (modules_p ())\n-    maybe_write_module (decl);\n-\n   context = decl_mangling_context (decl);\n \n   gcc_assert (context != NULL_TREE);\n@@ -1356,10 +1364,10 @@ find_decomp_unqualified_name (tree decl, size_t *len)\n /* We don't need to handle thunks, vtables, or VTTs here.  Those are\n    mangled through special entry points.\n \n-    <unqualified-name>  ::= <operator-name>\n+    <unqualified-name>  ::= [<module-name>] <operator-name>\n \t\t\t::= <special-name>\n-\t\t\t::= <source-name>\n-\t\t\t::= <unnamed-type-name>\n+\t\t\t::= [<module-name>] <source-name>\n+\t\t\t::= [<module-name>] <unnamed-type-name>\n \t\t\t::= <local-source-name> \n \n     <local-source-name>\t::= L <source-name> <discriminator> */\n@@ -1385,6 +1393,9 @@ write_unqualified_name (tree decl)\n {\n   MANGLE_TRACE_TREE (\"unqualified-name\", decl);\n \n+  if (modules_p ())\n+    maybe_write_module (decl);\n+\n   if (identifier_p (decl))\n     {\n       write_unqualified_id (decl);\n@@ -3996,7 +4007,6 @@ mangle_module_global_init (int module)\n \n   write_string (\"_ZGI\");\n   write_module (module, true);\n-  write_char ('v');\n \n   return finish_mangling_get_identifier ();\n }"}, {"sha": "ddaf9c292c183e364c0af0403b8b2b857e258e48", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -13893,20 +13893,18 @@ void\n module_state::mangle (bool include_partition)\n {\n   if (subst)\n-    mangle_module_substitution (subst - 1);\n+    mangle_module_substitution (subst);\n   else\n     {\n       if (parent)\n \tparent->mangle (include_partition);\n-      if (include_partition || !is_partition ())\n+      if (include_partition || !is_partition ()) \n \t{\n-\t  char p = 0;\n-\t  // Partitions are significant for global initializer functions\n-\t  if (is_partition () && !parent->is_partition ())\n-\t    p = 'P';\n+\t  // Partitions are significant for global initializer\n+\t  // functions\n+\t  bool partition = is_partition () && !parent->is_partition ();\n+\t  subst = mangle_module_component (name, partition);\n \t  substs.safe_push (this);\n-\t  subst = substs.length ();\n-\t  mangle_identifier (p, name);\n \t}\n     }\n }\n@@ -13916,6 +13914,8 @@ mangle_module (int mod, bool include_partition)\n {\n   module_state *imp = (*modules)[mod];\n \n+  gcc_checking_assert (!imp->is_header ());\n+\n   if (!imp->name)\n     /* Set when importing the primary module interface.  */\n     imp = imp->parent;\n@@ -18391,14 +18391,15 @@ get_originating_module (tree decl, bool for_mangle)\n   if (!DECL_LANG_SPECIFIC (not_tmpl))\n     return for_mangle ? -1 : 0;\n \n-  if (for_mangle\n-      && (DECL_MODULE_EXPORT_P (owner) || !DECL_MODULE_PURVIEW_P (not_tmpl)))\n+  if (for_mangle && !DECL_MODULE_PURVIEW_P (not_tmpl))\n     return -1;\n \n-  if (!DECL_MODULE_IMPORT_P (not_tmpl))\n-    return 0;\n+  int mod = !DECL_MODULE_IMPORT_P (not_tmpl) ? 0 : get_importing_module (owner);\n \n-  return get_importing_module (owner);\n+  if (for_mangle && (*modules)[mod]->is_header ())\n+    return -1;\n+\n+  return mod;\n }\n \n unsigned"}, {"sha": "4890a15d98e93ba7a126b24e0b1eb4135e13af19", "filename": "gcc/testsuite/g++.dg/modules/fn-inline-1_b.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -6,6 +6,6 @@ int Frob (int n, int a)\n   return frob (n, a);\n }\n \n-// { dg-final { scan-assembler \"_ZW3bobE4frobii:\" } }\n-// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_ZW3bobE4frobii\" } }\n-// { dg-final { scan-assembler \"_Z4Frobii:\" } }\n+// { dg-final { scan-assembler \"_ZW3bob4frobii:\" } }\n+// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_ZW3bob4frobii\" } }\n+// { dg-final { scan-assembler \"_ZW3bob4Frobii:\" } }"}, {"sha": "96afc89756783732bbbed6c2d0865d9aa5470632", "filename": "gcc/testsuite/g++.dg/modules/fn-inline-1_c.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -12,5 +12,5 @@ int main ()\n   return 0;\n }\n \n-// { dg-final { scan-assembler \"_Z4frobi:\" } }\n-// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_Z4frobi\" } }\n+// { dg-final { scan-assembler \"_ZW3bob4frobi:\" } }\n+// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_ZW3bob4frobi\" } }"}, {"sha": "de12b8e376c4ffd973371b34e21836bf113042b7", "filename": "gcc/testsuite/g++.dg/modules/imp-inline-1_a.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -33,5 +33,5 @@ export inline auto GMF ()\n }\n \n // { dg-final { scan-assembler-not {_ZN3Bob4frobEv:} } }\n-// { dg-final { scan-assembler-not {_ZN4Bill4frobEv:} } }\n-// { dg-final { scan-assembler {_ZN4Bill3dobEv:} } }\n+// { dg-final { scan-assembler-not {_ZNW3Foo4Bill4frobEv:} } }\n+// { dg-final { scan-assembler {_ZNW3Foo4Bill3dobEv:} } }"}, {"sha": "c0d371a531d917140e79dc470e1965e82ba48944", "filename": "gcc/testsuite/g++.dg/modules/imp-inline-1_b.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -12,11 +12,11 @@ int main ()\n }\n \n // { dg-final { scan-assembler {_ZN3Bob4frobEv:} } }\n-// { dg-final { scan-assembler {_ZN4Bill4frobEv:} } }\n-// { dg-final { scan-assembler-not {_ZN4Bill3dobEv:} } }\n-// { dg-final { scan-assembler {_Z3GMFv:} } }\n+// { dg-final { scan-assembler {_ZNW3Foo4Bill4frobEv:} } }\n+// { dg-final { scan-assembler-not {_ZNW3Foo4Bill3dobEv:} } }\n+// { dg-final { scan-assembler {_ZW3Foo3GMFv:} } }\n \n // { dg-final { scan-assembler {call[ \\t]+_?_ZN3Bob4frobEv} { target i?86-*-* x86_64-*-* } } }\n-// { dg-final { scan-assembler {call[ \\t]+_?_Z3GMFv} { target i?86-*-* x86_64-*-* } } }\n-// { dg-final { scan-assembler {call[ \\t]+_?_ZN4Bill3dobEv} { target i?86-*-* x86_64-*-* } } }\n-// { dg-final { scan-assembler {call[ \\t]+_?_ZN4Bill4frobEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZW3Foo3GMFv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZNW3Foo4Bill3dobEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZNW3Foo4Bill4frobEv} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "c0390a1b56e2032a291e69ebeb189f59cd430e2d", "filename": "gcc/testsuite/g++.dg/modules/init-2_a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -2,4 +2,4 @@\n export module Foo;\n // { dg-module-cmi Foo }\n \n-// { dg-final { scan-assembler {_ZGIW3FooEv:} } }\n+// { dg-final { scan-assembler {_ZGIW3Foo:} } }"}, {"sha": "912ee406931d563c1d2aef51266077e924784b3c", "filename": "gcc/testsuite/g++.dg/modules/init-2_b.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -4,5 +4,5 @@ export module Bar;\n \n import Foo;\n \n-// { dg-final { scan-assembler {_?_ZGIW3BarEv:} } }\n-// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3FooEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {_?_ZGIW3Bar:} } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3Foo} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "4ca880df771827329e11d3bde2aba4c753c58a79", "filename": "gcc/testsuite/g++.dg/modules/init-2_c.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -4,5 +4,5 @@ import Foo;\n import Bar;\n \n // We know Bar imports Foo, so only call Bar's Global Init\n-// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3BarEv} { target i?86-*-* x86_64-*-* } } }\n-// { dg-final { scan-assembler-not {call[ \\t]+_?_ZGIW3FooEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3Bar} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler-not {call[ \\t]+_?_ZGIW3Foo} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "e096bd9daa9edd5d20475e0b74f876803292785a", "filename": "gcc/testsuite/g++.dg/modules/member-def-2_d.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmember-def-2_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmember-def-2_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmember-def-2_d.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -10,4 +10,4 @@ int main ()\n \n // { dg-final { scan-lang-dump {Reading function definition '::frob@foo:1::member@foo:1'} module } }\n \n-// { dg-final { scan-assembler {_ZN4frob6memberEv:} } }\n+// { dg-final { scan-assembler {_ZNW3foo4frob6memberEv:} } }"}, {"sha": "8f22d174cac6e3f86beecd68220bd59824163630", "filename": "gcc/testsuite/g++.dg/modules/mod-sym-1.C", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-1.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -24,11 +24,10 @@ namespace Inner\n   export inline void Baz2 () { Foo2 (); Bink2 (); }\n }\n \n-// These fail until namespace hack is removed\n-// { dg-final { scan-assembler \"_ZW7linkageE3Foov:\" } }\n-// { dg-final { scan-assembler \"_ZW7linkageE4Binkv:\" } }\n-// { dg-final { scan-assembler \"_ZW7linkageEN5Inner4Foo2Ev:\" } }\n-// { dg-final { scan-assembler \"_ZW7linkageEN5Inner5Bink2Ev:\" } }\n-// { dg-final { scan-assembler \"_Z3Bazv:\" } }\n-// { dg-final { scan-assembler \"_ZN5Inner4Baz2Ev:\" } }\n+// { dg-final { scan-assembler \"_ZW7linkage3Foov:\" } }\n+// { dg-final { scan-assembler \"_ZW7linkage4Binkv:\" } }\n+// { dg-final { scan-assembler \"_ZN5InnerW7linkage4Foo2Ev:\" } }\n+// { dg-final { scan-assembler \"_ZN5InnerW7linkage5Bink2Ev:\" } }\n+// { dg-final { scan-assembler \"_ZW7linkage3Bazv:\" } }\n+// { dg-final { scan-assembler \"_ZN5InnerW7linkage4Baz2Ev:\" } }\n // { dg-final { scan-assembler \"cfunc:\" } }"}, {"sha": "99c9f1b565d0418eeb88f5d33b73427d3ef39190", "filename": "gcc/testsuite/g++.dg/modules/mod-sym-2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-2.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -19,5 +19,5 @@ namespace One {\n }\n \n // { dg-final { scan-assembler \"_Z3Foov:\" } }\n-// { dg-final { scan-assembler \"_ZW5okely6dokelyEN3One3Two5Three4Foo2Ev:\" } }\n-// { dg-final { scan-assembler \"_ZN3One3Two5Three4Baz2Ev:\" } }\n+// { dg-final { scan-assembler \"_ZN3One3Two5ThreeW5okelyW6dokely4Foo2Ev:\" } }\n+// { dg-final { scan-assembler \"_ZN3One3Two5ThreeW5okelyW6dokely4Baz2Ev:\" } }"}, {"sha": "d280f08b697737e42769717c5ac816a9945c0e74", "filename": "gcc/testsuite/g++.dg/modules/mod-sym-3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmod-sym-3.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -20,7 +20,7 @@ namespace X\n inline void X::Foo () {}\n inline void X::Baz () {}\n \n-// { dg-final { scan-assembler \"_ZW3bobEN1X3FooEv:\" } }\n-// { dg-final { scan-assembler \"_ZN1X3BazEv:\" } }\n-// { dg-final { scan-assembler \"_ZW3bobEN1X1Y4QuuxEv:\" } }\n-// { dg-final { scan-assembler \"_ZN1X1Y3BarEv:\" } }\n+// { dg-final { scan-assembler \"_ZN1XW3bob3FooEv:\" } }\n+// { dg-final { scan-assembler \"_ZN1XW3bob3BazEv:\" } }\n+// { dg-final { scan-assembler \"_ZN1X1YW3bob4QuuxEv:\" } }\n+// { dg-final { scan-assembler \"_ZN1X1YW3bob3BarEv:\" } }"}, {"sha": "6f638624a615805e0c81cf5068856b3d5a659188", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-1.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -10,4 +10,4 @@ void frob (mytype &)\n {\n }\n \n-// { dg-final { scan-assembler {_ZW3bob6stuart5kevinE4frobRW_2E6mytype:} } }\n+// { dg-final { scan-assembler {_ZW3bobW6stuartW5kevin4frobRS1_6mytype:} } }"}, {"sha": "261f14588bcdc2cae50fcbe0f43408e0e5b981f5", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-2_b.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-2_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -14,5 +14,5 @@ void bar (mytype &m)\n   foo (m);\n }\n \n-// { dg-final { scan-assembler {_ZW3bob5kevinE3barRW_1E6mytype:} } }\n-// { dg-final { scan-assembler {_ZW3bob6stuartE5innerIW_05kevinE6mytypeEvRT_:} } }\n+// { dg-final { scan-assembler {_ZW3bobW5kevin3barRS0_6mytype:} } }\n+// { dg-final { scan-assembler {_ZW3bobW6stuart5innerIS_W5kevin6mytypeEvRT_:} } }"}, {"sha": "a18947a5410d8cb84ebd341e6ad8d580fc6ede26", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-3_a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -6,4 +6,4 @@ struct s;\n \n export s *S;\n \n-// { dg-final { scan-assembler {.globa?l[ \\t]*_?S\\n} } }\n+// { dg-final { scan-assembler {.globa?l[ \\t]*_?_ZW1tW1s1S\\n} } }"}, {"sha": "6caa0509b24c799e107fc6ddda1812ec90ea654e", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-3_b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-3_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -4,4 +4,4 @@ export module t;\n import t.s;\n struct t;\n export void f (t*, decltype (S)){}\n-// { dg-final { scan-assembler {_Z1fPW1tE1tPW_01sE1s:} } }\n+// { dg-final { scan-assembler {_ZW1t1fPS_1tPS_W1s1s:} } }"}, {"sha": "7faae00a8e2ea7fa959d53059efb4486f760f51d", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-4.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -11,4 +11,4 @@ void frob (mytype &)\n {\n }\n \n-// { dg-final { scan-assembler {_ZW4zero4eins4zwei4drei4vier4funf5sechs6sieben4acht4neunE4frobRW_9E6mytype:} } }\n+// { dg-final { scan-assembler {_ZW4zeroW4einsW4zweiW4dreiW4vierW4funfW5sechsW6siebenW4achtW4neun4frobRS8_6mytype:} } }"}, {"sha": "9883c13940ac76936697a4b3181ad398b8c38c0d", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-5.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -11,4 +11,4 @@ void frob (mytype &)\n {\n }\n \n-// { dg-final { scan-assembler {_ZW4zero4eins4zwei4drei4vier4funf5sechs6sieben4acht4neun4zehnE4frobRWW0_E6mytype:} } }\n+// { dg-final { scan-assembler {_ZW4zeroW4einsW4zweiW4dreiW4vierW4funfW5sechsW6siebenW4achtW4neunW4zehn4frobRS9_6mytype:} } }"}, {"sha": "e68c8e070bb343facc4579209e0d7c2f4cf7bfa5", "filename": "gcc/testsuite/g++.dg/modules/sym-subst-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsym-subst-6.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -11,4 +11,4 @@ void frob (mytype &)\n {\n }\n \n-// { dg-final { scan-assembler {_ZW4zero4eins4zwei4drei4vier4funf5sechs6sieben4acht4neun4zehn3elfE4frobRWW1_E6mytype:} } }\n+// { dg-final { scan-assembler {_ZW4zeroW4einsW4zweiW4dreiW4vierW4funfW5sechsW6siebenW4achtW4neunW4zehnW3elf4frobRSA_6mytype:} } }"}, {"sha": "e7e6f97f8befa0fc53dbd5abfd52e5120144bea6", "filename": "gcc/testsuite/g++.dg/modules/tpl-spec-1_a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-1_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -19,4 +19,4 @@ template <> int foo<int> (int y)\n // { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization declaration '::foo<int>'} module } }\n // { dg-final { scan-lang-dump {Pending specialization '::foo<int>' entity:[0-9]* section:. keyed to '::foo'} module } }\n \n-// { dg-final { scan-assembler {_Z3fooIiEiT_:} } }\n+// { dg-final { scan-assembler {_ZW3TPL3fooIiEiT_:} } }"}, {"sha": "b6bf7d7946fadad61ae3dd9d6dee3db3a9354fee", "filename": "gcc/testsuite/g++.dg/modules/tpl-spec-2_b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -15,4 +15,4 @@ template <> int foo<int> (int y)\n // { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization declaration '::foo<int>'} module } }\n // { dg-final { scan-lang-dump {Pending specialization '::foo<int>' entity:[0-9]* section:. keyed to '::foo'} module } }\n \n-// { dg-final { scan-assembler {_Z3fooIiEiT_:} } }\n+// { dg-final { scan-assembler {_ZW3TPL3fooIiEiT_:} } }"}, {"sha": "4c707ae290d40f3e0c104acc86bfb04a9c1b3213", "filename": "gcc/testsuite/g++.dg/modules/tpl-spec-2_d.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-2_d.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -23,5 +23,5 @@ int two ()\n // { dg-final { scan-lang-dump {Reading 1 pending entities keyed to '::foo'} module } }\n // { dg-final { scan-lang-dump-not {Reading definition function_decl '::foo@TPL:.<int>'} module } }\n \n-// { dg-final { scan-assembler-not {_Z3fooIiEiT_:} } }\n-// { dg-final { scan-assembler {_Z3fooIfEiT_:} } }\n+// { dg-final { scan-assembler-not {_ZW3TPL3fooIiEiT_:} } }\n+// { dg-final { scan-assembler {_ZW3TPL3fooIfEiT_:} } }"}, {"sha": "521c0091b2deef2d94bd83e637d0388101586f6c", "filename": "gcc/testsuite/g++.dg/modules/tpl-spec-3_a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-spec-3_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -24,4 +24,4 @@ template <> void frob::store (int i_)\n // { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization declaration '::frob::store<int>'} module } }\n // { dg-final { scan-lang-dump {Pending specialization '::frob::store<int>' entity:[0-9]* section:. keyed to '::frob'} module } }\n \n-// { dg-final { scan-assembler {_ZN4frob5storeIiEEvT_:} } }\n+// { dg-final { scan-assembler {_ZNW3TPL4frob5storeIiEEvT_:} } }"}, {"sha": "4081ff5969f60da1465d63f998c39081af4feeda", "filename": "gcc/testsuite/g++.dg/modules/virt-1_a.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-1_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -20,6 +20,7 @@ export int Visit (Visitor *v)\n   return v->Visit ();\n }\n \n-// { dg-final { scan-assembler {_ZTV7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTI7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTS7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTVW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTIW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTSW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZW3foo5VisitPS_7Visitor:} } }"}, {"sha": "580552be5a0d845904f6d9914050333f460ad9ca", "filename": "gcc/testsuite/g++.dg/modules/virt-2_a.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -22,6 +22,6 @@ export int Visit (Visitor *v)\n }\n \n // Emit here\n-// { dg-final { scan-assembler {_ZTV7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTI7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTS7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTVW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTIW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTSW3foo7Visitor:} } }"}, {"sha": "e041f0721f9c861f42a391d40c385094cd55b287", "filename": "gcc/testsuite/g++.dg/modules/virt-2_b.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -23,6 +23,6 @@ int main ()\n \n // We do not emit Visitor vtable\n // but we do emit rtti here\n-// { dg-final { scan-assembler-not {_ZTV7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTI7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTS7Visitor:} } }\n+// { dg-final { scan-assembler-not {_ZTVW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTIW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTSW3foo7Visitor:} } }"}, {"sha": "7b3eeebe5089bcfb2e5d2deb9aed26104e190824", "filename": "gcc/testsuite/g++.dg/modules/virt-2_c.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvirt-2_c.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -11,6 +11,6 @@ int Foo ()\n \n // We do emit Visitor vtable\n // andl also we do emit rtti here\n-// { dg-final { scan-assembler {_ZTV7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTI7Visitor:} } }\n-// { dg-final { scan-assembler {_ZTS7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTVW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTIW3foo7Visitor:} } }\n+// { dg-final { scan-assembler {_ZTSW3foo7Visitor:} } }"}, {"sha": "bef2c864525d6acaa0526d821da1dba41649f7a0", "filename": "gcc/testsuite/g++.dg/modules/vtt-1_a.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_a.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -31,6 +31,6 @@ export void make_foo ()\n   derived d;\n }\n \n-// { dg-final {scan-assembler \"_ZTV4base:\" } }\n-// { dg-final {scan-assembler \"_ZTV7derived:\" } }\n-// { dg-final {scan-assembler \"_ZTT7derived:\" } }\n+// { dg-final {scan-assembler \"_ZTVW3foo4base:\" } }\n+// { dg-final {scan-assembler \"_ZTVW3foo7derived:\" } }\n+// { dg-final {scan-assembler \"_ZTTW3foo7derived:\" } }"}, {"sha": "87df9c272a871fd3120bb59fa4c1e60378eb90ba", "filename": "gcc/testsuite/g++.dg/modules/vtt-1_b.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73baba1ae1b8f3618c2d3b674117b8a462e0ca76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fvtt-1_b.C?ref=73baba1ae1b8f3618c2d3b674117b8a462e0ca76", "patch": "@@ -21,8 +21,8 @@ export inline void make_bar ()\n   mine m;\n }\n \n-// { dg-final {scan-assembler-not \"_ZTV4base:\" } }\n-// { dg-final {scan-assembler-not \"_ZTV7derived:\" } }\n-// { dg-final {scan-assembler-not \"_ZTT7derived:\" } }\n-// { dg-final {scan-assembler \"_ZTV4mine:\" } }\n-// { dg-final {scan-assembler \"_ZTT4mine:\" } }\n+// { dg-final {scan-assembler-not \"_ZTVW3foo4base:\" } }\n+// { dg-final {scan-assembler-not \"_ZTVW3foo7derived:\" } }\n+// { dg-final {scan-assembler-not \"_ZTTW3foo7derived:\" } }\n+// { dg-final {scan-assembler \"_ZTVW3bar4mine:\" } }\n+// { dg-final {scan-assembler \"_ZTTW3bar4mine:\" } }"}]}