{"sha": "d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkxNTdmMTUxNGNiOGY5ZTY0ZTRiNTdjNTQ2MWE5YmI5YjAzNDI3Zg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-07-19T10:04:02Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-07-19T10:04:02Z"}, "message": "tree-vect-loop-manip.c (vect_update_ivs_after_vectorizer): Update comment.\n\ngcc/\n\n\t* tree-vect-loop-manip.c (vect_update_ivs_after_vectorizer): Update\n\tcomment.\n\t(vect_update_inits_of_drs): Likewise.\n\t(vect_create_cond_for_alias_checks): Likewise.\n\t* tree-vect-loop.c (vect_get_known_peeling_cost): Likewise.\n\nFrom-SVN: r238466", "tree": {"sha": "9306e3a0cf055b00959af76e666851019fcb784f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9306e3a0cf055b00959af76e666851019fcb784f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6918a8b63ad38e475c23e26df0f3c4f7faad6cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6918a8b63ad38e475c23e26df0f3c4f7faad6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6918a8b63ad38e475c23e26df0f3c4f7faad6cb"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "43890647f3ba5f9b5a8272e01d95b3b8c4018721", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "patch": "@@ -1,3 +1,11 @@\n+2016-07-19  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* tree-vect-loop-manip.c (vect_update_ivs_after_vectorizer): Update\n+\tcomment.\n+\t(vect_update_inits_of_drs): Likewise.\n+\t(vect_create_cond_for_alias_checks): Likewise.\n+\t* tree-vect-loop.c (vect_get_known_peeling_cost): Likewise.\n+\n 2016-07-19  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/71907"}, {"sha": "819abcda81a25c4ed25749c29b357110fca647d2", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "patch": "@@ -1735,6 +1735,10 @@ vect_update_ivs_after_vectorizer (loop_vec_info loop_vinfo, tree niters,\n    iterates NITERS times, the new epilog loop iterates\n    NITERS % VECTORIZATION_FACTOR times.\n \n+   If CHECK_PROFITABILITY is 1 then profitability check is generated\n+   using TH as a cost model profitability threshold of iterations for\n+   vectorization.\n+\n    The original loop will later be made to iterate\n    NITERS / VECTORIZATION_FACTOR times (this value is placed into RATIO).\n \n@@ -1993,7 +1997,11 @@ vect_update_inits_of_drs (loop_vec_info loop_vinfo, tree niters)\n    'niters' is set to the misalignment of one of the data references in the\n    loop, thereby forcing it to refer to an aligned location at the beginning\n    of the execution of this loop.  The data reference for which we are\n-   peeling is recorded in LOOP_VINFO_UNALIGNED_DR.  */\n+   peeling is recorded in LOOP_VINFO_UNALIGNED_DR.\n+\n+   If CHECK_PROFITABILITY is 1 then profitability check is generated\n+   using TH as a cost model profitability threshold of iterations for\n+   vectorization.  */\n \n void\n vect_do_peeling_for_alignment (loop_vec_info loop_vinfo, tree ni_name,\n@@ -2313,7 +2321,7 @@ vect_create_cond_for_alias_checks (loop_vec_info loop_vinfo, tree * cond_expr)\n \n    The test generated to check which version of loop is executed\n    is modified to also check for profitability as indicated by the\n-   cost model initially.\n+   cost model threshold TH.\n \n    The versioning precondition(s) are placed in *COND_EXPR and\n    *COND_EXPR_STMT_LIST.  */"}, {"sha": "2a7e0c6661bc1ba82c9f03720e550749f2252a7c", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9157f1514cb8f9e64e4b57c5461a9bb9b03427f/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=d9157f1514cb8f9e64e4b57c5461a9bb9b03427f", "patch": "@@ -3065,7 +3065,15 @@ vect_get_known_peeling_cost (loop_vec_info loop_vinfo, int peel_iters_prologue,\n \n    Return the number of iterations required for the vector version of the\n    loop to be profitable relative to the cost of the scalar version of the\n-   loop.  */\n+   loop.\n+\n+   *RET_MIN_PROFITABLE_NITERS is a cost model profitability threshold\n+   of iterations for vectorization.  -1 value means loop vectorization\n+   is not profitable.  This returned value may be used for dynamic\n+   profitability check.\n+\n+   *RET_MIN_PROFITABLE_ESTIMATE is a profitability threshold to be used\n+   for static check against estimated number of iterations.  */\n \n static void\n vect_estimate_min_profitable_iters (loop_vec_info loop_vinfo,"}]}