{"sha": "d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjMjQ1OGY0ZWMxYmNlNWRjNGVlOGM2MWJjMDMwODNjYTIyNGQ3Yw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-06-11T13:20:41Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-06-11T13:20:41Z"}, "message": "AbstractAction.java, [...]: New versions from classpath.\n\n2003-06-11  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractAction.java,\n\tjavax/swing/AbstractButton.java,\n\tjavax/swing/AbstractCellEditor.java,\n\tjavax/swing/AbstractListModel.java,\n\tjavax/swing/BorderFactory.java,\n\tjavax/swing/Box.java,\n\tjavax/swing/BoxLayout.java,\n\tjavax/swing/ButtonGroup.java,\n\tjavax/swing/DefaultButtonModel.java,\n\tjavax/swing/DefaultListModel.java,\n\tjavax/swing/DefaultListSelectionModel.java,\n\tjavax/swing/FocusManager.java,\n\tjavax/swing/ImageIcon.java,\n\tjavax/swing/InputMap.java,\n\tjavax/swing/JApplet.java,\n\tjavax/swing/JButton.java,\n\tjavax/swing/JCheckBox.java,\n\tjavax/swing/JCheckBoxMenuItem.java,\n\tjavax/swing/JColorChooser.java,\n\tjavax/swing/JComboBox.java,\n\tjavax/swing/JComponent.java,\n\tjavax/swing/JDesktopPane.java,\n\tjavax/swing/JDialog.java,\n\tjavax/swing/JEditorPane.java,\n\tjavax/swing/JFileChooser.java,\n\tjavax/swing/JFormattedTextField.java,\n\tjavax/swing/JFrame.java,\n\tjavax/swing/JLabel.java,\n\tjavax/swing/JLayeredPane.java,\n\tjavax/swing/JList.java,\n\tjavax/swing/JMenuBar.java,\n\tjavax/swing/JMenuItem.java,\n\tjavax/swing/JOptionPane.java,\n\tjavax/swing/JPanel.java,\n\tjavax/swing/JPasswordField.java,\n\tjavax/swing/JPopupMenu.java,\n\tjavax/swing/JProgressBar.java,\n\tjavax/swing/JRadioButton.java,\n\tjavax/swing/JRadioButtonMenuItem.java,\n\tjavax/swing/JRootPane.java,\n\tjavax/swing/JScrollBar.java,\n\tjavax/swing/JScrollPane.java,\n\tjavax/swing/JSeparator.java,\n\tjavax/swing/JSlider.java,\n\tjavax/swing/JTabbedPane.java,\n\tjavax/swing/JTable.java,\n\tjavax/swing/JTextField.java,\n\tjavax/swing/JToggleButton.java,\n\tjavax/swing/JToolBar.java,\n\tjavax/swing/JToolTip.java,\n\tjavax/swing/JTree.java,\n\tjavax/swing/JViewport.java,\n\tjavax/swing/JWindow.java,\n\tjavax/swing/KeyStroke.java,\n\tjavax/swing/ListSelectionModel.java,\n\tjavax/swing/LookAndFeel.java,\n\tjavax/swing/RepaintManager.java,\n\tjavax/swing/ScrollPaneLayout.java,\n\tjavax/swing/SizeRequirements.java,\n\tjavax/swing/SwingConstants.java,\n\tjavax/swing/Timer.java,\n\tjavax/swing/UIDefaults.java,\n\tjavax/swing/UIManager.java,\n\tjavax/swing/border/AbstractBorder.java,\n\tjavax/swing/border/CompoundBorder.java,\n\tjavax/swing/colorchooser/AbstractColorChooserPanel.java,\n\tjavax/swing/colorchooser/ColorChooserComponentFactory.java,\n\tjavax/swing/colorchooser/ColorSelectionModel.java,\n\tjavax/swing/colorchooser/DefaultColorSelectionModel.java,\n\tjavax/swing/event/AncestorEvent.java,\n\tjavax/swing/event/HyperlinkEvent.java,\n\tjavax/swing/event/InternalFrameAdapter.java,\n\tjavax/swing/event/InternalFrameEvent.java,\n\tjavax/swing/event/ListDataEvent.java,\n\tjavax/swing/event/MouseInputAdapter.java,\n\tjavax/swing/event/SwingPropertyChangeSupport.java,\n\tjavax/swing/event/TableModelEvent.java,\n\tjavax/swing/event/TreeWillExpandListener.java,\n\tjavax/swing/event/UndoableEditEvent.java,\n\tjavax/swing/filechooser/FileFilter.java,\n\tjavax/swing/filechooser/FileSystemView.java,\n\tjavax/swing/filechooser/FileView.java,\n\tjavax/swing/plaf/BorderUIResource.java,\n\tjavax/swing/plaf/basic/BasicDefaults.java,\n\tjavax/swing/table/AbstractTableModel.java,\n\tjavax/swing/table/DefaultTableCellRenderer.java,\n\tjavax/swing/table/DefaultTableColumnModel.java,\n\tjavax/swing/table/DefaultTableModel.java,\n\tjavax/swing/table/TableColumn.java,\n\tjavax/swing/text/JTextComponent.java,\n\tjavax/swing/tree/AbstractLayoutCache.java,\n\tjavax/swing/tree/DefaultMutableTreeNode.java,\n\tjavax/swing/tree/DefaultTreeCellEditor.java,\n\tjavax/swing/tree/DefaultTreeCellRenderer.java,\n\tjavax/swing/tree/DefaultTreeModel.java,\n\tjavax/swing/tree/DefaultTreeSelectionModel.java,\n\tjavax/swing/tree/FixedHeightLayoutCache.java,\n\tjavax/swing/tree/TreeCellEditor.java,\n\tjavax/swing/tree/TreeModel.java,\n\tjavax/swing/tree/TreeNode.java,\n\tjavax/swing/tree/TreePath.java,\n\tjavax/swing/tree/TreeSelectionModel.java,\n\tjavax/swing/tree/VariableHeightLayoutCache.java,\n\tjavax/swing/undo/AbstractUndoableEdit.java,\n\tjavax/swing/undo/CompoundEdit.java,\n\tjavax/swing/undo/StateEdit.java,\n\tjavax/swing/undo/UndoManager.java,\n\tjavax/swing/undo/UndoableEditSupport.java:\n\tNew versions from classpath.\n\t* javax/swing/table/JTableHeader.java:\n\tNew file from classpath.\n\t* Makefile.am\n\t(java_awt_sources): Added javax/swing/table/JTableHeader.java.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r67769", "tree": {"sha": "44f03a7acab52d985c8ea9e5163c686ba708165a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44f03a7acab52d985c8ea9e5163c686ba708165a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/comments", "author": null, "committer": null, "parents": [{"sha": "658cf52f511b9affaa4c2dc9072205eccd2114bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658cf52f511b9affaa4c2dc9072205eccd2114bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658cf52f511b9affaa4c2dc9072205eccd2114bf"}], "stats": {"total": 2242, "additions": 1464, "deletions": 778}, "files": [{"sha": "242b5cd12faaca29bd693c0dbdec2235b5905f92", "filename": "libjava/ChangeLog", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -1,3 +1,120 @@\n+2003-06-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractAction.java,\n+\tjavax/swing/AbstractButton.java,\n+\tjavax/swing/AbstractCellEditor.java,\n+\tjavax/swing/AbstractListModel.java,\n+\tjavax/swing/BorderFactory.java,\n+\tjavax/swing/Box.java,\n+\tjavax/swing/BoxLayout.java,\n+\tjavax/swing/ButtonGroup.java,\n+\tjavax/swing/DefaultButtonModel.java,\n+\tjavax/swing/DefaultListModel.java,\n+\tjavax/swing/DefaultListSelectionModel.java,\n+\tjavax/swing/FocusManager.java,\n+\tjavax/swing/ImageIcon.java,\n+\tjavax/swing/InputMap.java,\n+\tjavax/swing/JApplet.java,\n+\tjavax/swing/JButton.java,\n+\tjavax/swing/JCheckBox.java,\n+\tjavax/swing/JCheckBoxMenuItem.java,\n+\tjavax/swing/JColorChooser.java,\n+\tjavax/swing/JComboBox.java,\n+\tjavax/swing/JComponent.java,\n+\tjavax/swing/JDesktopPane.java,\n+\tjavax/swing/JDialog.java,\n+\tjavax/swing/JEditorPane.java,\n+\tjavax/swing/JFileChooser.java,\n+\tjavax/swing/JFormattedTextField.java,\n+\tjavax/swing/JFrame.java,\n+\tjavax/swing/JLabel.java,\n+\tjavax/swing/JLayeredPane.java,\n+\tjavax/swing/JList.java,\n+\tjavax/swing/JMenuBar.java,\n+\tjavax/swing/JMenuItem.java,\n+\tjavax/swing/JOptionPane.java,\n+\tjavax/swing/JPanel.java,\n+\tjavax/swing/JPasswordField.java,\n+\tjavax/swing/JPopupMenu.java,\n+\tjavax/swing/JProgressBar.java,\n+\tjavax/swing/JRadioButton.java,\n+\tjavax/swing/JRadioButtonMenuItem.java,\n+\tjavax/swing/JRootPane.java,\n+\tjavax/swing/JScrollBar.java,\n+\tjavax/swing/JScrollPane.java,\n+\tjavax/swing/JSeparator.java,\n+\tjavax/swing/JSlider.java,\n+\tjavax/swing/JTabbedPane.java,\n+\tjavax/swing/JTable.java,\n+\tjavax/swing/JTextField.java,\n+\tjavax/swing/JToggleButton.java,\n+\tjavax/swing/JToolBar.java,\n+\tjavax/swing/JToolTip.java,\n+\tjavax/swing/JTree.java,\n+\tjavax/swing/JViewport.java,\n+\tjavax/swing/JWindow.java,\n+\tjavax/swing/KeyStroke.java,\n+\tjavax/swing/ListSelectionModel.java,\n+\tjavax/swing/LookAndFeel.java,\n+\tjavax/swing/RepaintManager.java,\n+\tjavax/swing/ScrollPaneLayout.java,\n+\tjavax/swing/SizeRequirements.java,\n+\tjavax/swing/SwingConstants.java,\n+\tjavax/swing/Timer.java,\n+\tjavax/swing/UIDefaults.java,\n+\tjavax/swing/UIManager.java,\n+\tjavax/swing/border/AbstractBorder.java,\n+\tjavax/swing/border/CompoundBorder.java,\n+\tjavax/swing/colorchooser/AbstractColorChooserPanel.java,\n+\tjavax/swing/colorchooser/ColorChooserComponentFactory.java,\n+\tjavax/swing/colorchooser/ColorSelectionModel.java,\n+\tjavax/swing/colorchooser/DefaultColorSelectionModel.java,\n+\tjavax/swing/event/AncestorEvent.java,\n+\tjavax/swing/event/HyperlinkEvent.java,\n+\tjavax/swing/event/InternalFrameAdapter.java,\n+\tjavax/swing/event/InternalFrameEvent.java,\n+\tjavax/swing/event/ListDataEvent.java,\n+\tjavax/swing/event/MouseInputAdapter.java,\n+\tjavax/swing/event/SwingPropertyChangeSupport.java,\n+\tjavax/swing/event/TableModelEvent.java,\n+\tjavax/swing/event/TreeWillExpandListener.java,\n+\tjavax/swing/event/UndoableEditEvent.java,\n+\tjavax/swing/filechooser/FileFilter.java,\n+\tjavax/swing/filechooser/FileSystemView.java,\n+\tjavax/swing/filechooser/FileView.java,\n+\tjavax/swing/plaf/BorderUIResource.java,\n+\tjavax/swing/plaf/basic/BasicDefaults.java,\n+\tjavax/swing/table/AbstractTableModel.java,\n+\tjavax/swing/table/DefaultTableCellRenderer.java,\n+\tjavax/swing/table/DefaultTableColumnModel.java,\n+\tjavax/swing/table/DefaultTableModel.java,\n+\tjavax/swing/table/TableColumn.java,\n+\tjavax/swing/text/JTextComponent.java,\n+\tjavax/swing/tree/AbstractLayoutCache.java,\n+\tjavax/swing/tree/DefaultMutableTreeNode.java,\n+\tjavax/swing/tree/DefaultTreeCellEditor.java,\n+\tjavax/swing/tree/DefaultTreeCellRenderer.java,\n+\tjavax/swing/tree/DefaultTreeModel.java,\n+\tjavax/swing/tree/DefaultTreeSelectionModel.java,\n+\tjavax/swing/tree/FixedHeightLayoutCache.java,\n+\tjavax/swing/tree/TreeCellEditor.java,\n+\tjavax/swing/tree/TreeModel.java,\n+\tjavax/swing/tree/TreeNode.java,\n+\tjavax/swing/tree/TreePath.java,\n+\tjavax/swing/tree/TreeSelectionModel.java,\n+\tjavax/swing/tree/VariableHeightLayoutCache.java,\n+\tjavax/swing/undo/AbstractUndoableEdit.java,\n+\tjavax/swing/undo/CompoundEdit.java,\n+\tjavax/swing/undo/StateEdit.java,\n+\tjavax/swing/undo/UndoManager.java,\n+\tjavax/swing/undo/UndoableEditSupport.java:\n+\tNew versions from classpath.\n+\t* javax/swing/table/JTableHeader.java:\n+\tNew file from classpath.\n+\t* Makefile.am\n+\t(java_awt_sources): Added javax/swing/table/JTableHeader.java.\n+\t* Makefile.in: Regenerated.\n+\n 2003-06-11  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/MappedByteBuffer.java,"}, {"sha": "7ba652b926a2117dbeb1aaf328189a5d19f4884f", "filename": "libjava/javax/swing/AbstractAction.java", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractAction.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n import java.awt.event.*;\n import java.beans.*;\n import java.io.*;\n@@ -207,12 +207,4 @@ public synchronized void addPropertyChangeListener(PropertyChangeListener listen\n \tpublic synchronized void removePropertyChangeListener(PropertyChangeListener listener) {\n \t\tchangeSupport.removePropertyChangeListener(listener);\n \t} // removePropertyChangeListener()\n-\n-\t/**\n-\t * actionPerformed\n-\t * @param event TODO\n-\t */\n-\tpublic abstract void actionPerformed(ActionEvent event);\n-\n-\n-} // AbstractAction\n+}"}, {"sha": "951650dbdbd45e4feb1e0573da07b1a39f88e1fa", "filename": "libjava/javax/swing/AbstractButton.java", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractButton.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,26 +35,41 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.awt.*;\n-import java.awt.event.*;\n \n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import javax.swing.text.*;\n-import javax.accessibility.*;\n+package javax.swing;\n \n-import java.util.*;\n-import java.beans.*;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.ItemSelectable;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.event.MouseEvent;\n+import java.beans.PropertyChangeListener;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleIcon;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleRelationSet;\n+import javax.accessibility.AccessibleText;\n+import javax.accessibility.AccessibleValue;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.ButtonUI;\n+import javax.swing.text.AttributeSet;\n \n /**\n  * Provides basic button functionality\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n public abstract class AbstractButton extends JComponent\n-\t\t\timplements ItemSelectable, SwingConstants\n+  implements ItemSelectable, SwingConstants\n {\n \tIcon default_icon, pressed_button, disabled_button,\n \tselected_button, disabled_selected_button, current_icon;"}, {"sha": "026ab30f8047feb8dbe766a5cf0b3da7b9b19322", "filename": "libjava/javax/swing/AbstractCellEditor.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.io.Serializable;\n+import java.util.EventObject;\n+import javax.swing.event.CellEditorListener;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.EventListenerList;\n \n /**\n  * AbstractCellEditor"}, {"sha": "da85a4def9524d3a727fd9a5e60bb78b27f61476", "filename": "libjava/javax/swing/AbstractListModel.java", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractListModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -189,17 +189,4 @@ public ListDataListener[] getListDataListeners ()\n   {\n     return (ListDataListener[]) getListeners (ListDataListener.class);\n   }\n-\n-  /**\n-   * getElementAt\n-   * @param index TODO\n-   * @returns Object\n-   */\n-  public abstract Object getElementAt (int index);\n-\n-  /**\n-   * getSize\n-   * @returns int\n-   */\n-  public abstract int getSize ();\n }"}, {"sha": "1cc6cbf420d4ac879b86c9c6e55ad5be6311ada0", "filename": "libjava/javax/swing/BorderFactory.java", "status": "modified", "additions": 374, "deletions": 300, "changes": 674, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBorderFactory.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -38,332 +38,406 @@\n \n package javax.swing;\n \n-import java.awt.*;\n-import java.awt.font.*;\n-import javax.swing.border.*;\n-\n+import java.awt.Color;\n+import java.awt.Font;\n+import javax.swing.border.BevelBorder;\n+import javax.swing.border.Border;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.border.EmptyBorder;\n+import javax.swing.border.EtchedBorder;\n+import javax.swing.border.LineBorder;\n+import javax.swing.border.MatteBorder;\n+import javax.swing.border.TitledBorder;\n \n public class BorderFactory\n {\n+  /**\n+   * Creates a line border withe the specified color.\n+   *\n+   * @param color A color to use for the line.\n+   *\n+   * @return The Border object\n+   */ \n   public static Border createLineBorder(Color color)\n-  { /*\n-    Creates a line border withe the specified color.\n-\n-    Parameters:\n-    color - a Color to use for the lineReturns:\n-    the Border object\n-createLineBorder\n-    */ \n-    return null;\n- }\n-\n-public static Border createLineBorder(Color color,\n-                                      int thickness)\n-  { /*\n-\n-    Creates a line border withe the specified color and width. The width applies to all 4 sides of the border. To specify widths individually for the top, bottom, left, and right, use createMatteBorder(int,int,int,int,Color).\n-\n-    Parameters:\n-    color - a Color to use for the linethickness - an int specifying the width in pixelsReturns:\n-    the Border object\n-createRaisedBevelBorder\n-    */ \n+  {\n     return null;\n   }\n \n+  /**\n+   * Creates a line border withe the specified color and width. The width\n+   * applies to all 4 sides of the border. To specify widths individually for\n+   * the top, bottom, left, and right, use\n+   * createMatteBorder(int,int,int,int,Color).\n+   *\n+   * @param color A color to use for the line.\n+   * @param thickness An int specifying the width in pixels.\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createLineBorder (Color color, int thickness)\n+  {\n+    return new LineBorder (color, thickness);\n+  }\n \n-public static Border createRaisedBevelBorder()\n-  { /*\n-\n-    Created a border with a raised beveled edge, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. (In a raised border, highlights are on top and shadows are underneath.)\n-\n-    Returns:\n-    the Border object\n-createLoweredBevelBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createLoweredBevelBorder()\n-  { /*\n-\n-    Created a border with a lowered beveled edge, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. (In a lowered border, shadows are on top and highlights are underneath.)\n-\n-    Returns:\n-    the Border object\n-createBevelBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createBevelBorder(int type)\n-\n-  { /*\n-    Create a beveled border of the specified type, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. (In a lowered border, shadows are on top and highlights are underneath.).\n-\n-    Parameters:\n-    type - an int specifying either BevelBorder.LOWERED or BevelBorder.LOWEREDReturns:\n-    the Border object\n-createBevelBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createBevelBorder(int type,\n-                                       Color highlight,\n-                                       Color shadow)\n-  { /*\n-\n-    Create a beveled border of the specified type, using the specified highlighting and shadowing. The outer edge of the highlighted area uses a brighter shade of the highlight color. The inner edge of the shadow area uses a brighter shade of the shadaw color.\n-\n-    Parameters:\n-    type - an int specifying either BevelBorder.LOWERED or BevelBorder.LOWEREDhighlight - a Color object for highlightsshadow - a Color object for shadowsReturns:\n-    the Border object\n-createBevelBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createBevelBorder(int type,\n-                                       Color highlightOuter,\n-                                       Color highlightInner,\n-                                       Color shadowOuter,\n-                                       Color shadowInner)\n-  { /*\n-\n-    Create a beveled border of the specified type, using the specified colors for the inner and outer highlight and shadow areas.\n-\n-    Parameters:\n-    type - an int specifying either BevelBorder.LOWERED or BevelBorder.LOWEREDhighlightOuter - a Color object for the outer edge of the highlight areahighlightInner - a Color object for the inner edge of the highlight areashadowOuter - a Color object for the outer edge of the shadow areashadowInner - a Color object for the inner edge of the shadow areaReturns:\n-    the Border object\n-createEtchedBorder\n-    */ \n-    return null;\n- }\n-\n-\n-public static Border createEtchedBorder()\n-  { /*\n-\n-    Create a border with an \"etched\" look using the component's current background color for highlighting and shading.\n-\n-    Returns:\n-    the Border object\n-createEtchedBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createEtchedBorder(Color highlight,\n-                                        Color shadow)\n-  { /*\n-\n-    Create a border with an \"etched\" look using the specified highlighting and shading colors.\n-\n-    Parameters:\n-    highlight - a Color object for the border highlightsshadow - a Color object for the border shadowsReturns:\n-    the Border object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-  public static TitledBorder createTitledBorder(String title)\n-  { /*\n-    Create a new title border specifying the text of the title, using the default border (etched), using the default text position (sitting on the top line) and default justification (left) and using the default font and text color determined by the current look and feel.\n-\n-    Parameters:\n-    title - a String containing the text of the titleReturns:\n-    the TitledBorder object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-  public static TitledBorder createTitledBorder(Border border)\n-  { /*\n-\n-    Create a new title border with an empty title specifying the border object, using the default text position (sitting on the top line) and default justification (left) and using the default font, text color, and border determined by the current look and feel. (The Motif and Windows look and feels use an etched border; The Java look and feel use a gray border.)\n-\n-    Parameters:\n-    border - the Border object to add the title toReturns:\n-    the TitledBorder object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static TitledBorder createTitledBorder(Border border,\n-                                              String title)\n-  { /*\n-\n-    Add a title to an existing border, specifying the text of the title, using the default positioning (sitting on the top line) and default justification (left) and using the default font and text color determined by the current look and feel.\n-\n-    Parameters:\n-    border - the Border object to add the title totitle - a String containing the text of the titleReturns:\n-    the TitledBorder object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static TitledBorder createTitledBorder(Border border,\n-                                              String title,\n-                                              int titleJustification,\n-                                              int titlePosition)\n-  { /*\n-\n-    Add a title to an existing border, specifying the text of the title along with its positioning, using the default font and text color determined by the current look and feel.\n-\n-    Parameters:\n-    border - the Border object to add the title totitle - a String containing the text of the titletitleJustification - an int specifying the left/right position of the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).titlePosition - an int specifying the vertical position of the text in relation to the border -- one of: TitledBorder.ABOVE_TOP, TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP, TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).Returns:\n-    the TitledBorder object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static TitledBorder createTitledBorder(Border border,\n-                                              String title,\n-                                              int titleJustification,\n-                                              int titlePosition,\n-                                              Font titleFont)\n-  { /*\n-\n-    Add a title to an existing border, specifying the text of the title along with its positioning and font, using the default text color determined by the current look and feel.\n-\n-    Parameters:\n-    border - the Border object to add the title totitle - a String containing the text of the titletitleJustification - an int specifying the left/right position of the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).titlePosition - an int specifying the vertical position of the text in relation to the border -- one of: TitledBorder.ABOVE_TOP, TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP, TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).titleFont - a Font object specifying the title fontReturns:\n-    the TitledBorder object\n-createTitledBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static TitledBorder createTitledBorder(Border border,\n-                                              String title,\n-                                              int titleJustification,\n-                                              int titlePosition,\n-                                              Font titleFont,\n-                                              Color titleColor)\n-  { /*\n-\n-    Add a title to an existing border, specifying the text of the title along with its positioning, font, and color.\n-\n-    Parameters:\n-    border - the Border object to add the title totitle - a String containing the text of the titletitleJustification - an int specifying the left/right position of the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).titlePosition - an int specifying the vertical position of the text in relation to the border -- one of: TitledBorder.ABOVE_TOP, TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP, TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).titleFont - a Font object specifying the title fonttitleColor - a Color object specifying the title colorReturns:\n-    the TitledBorder object\n-createEmptyBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createEmptyBorder()\n-  { /*\n-\n-    Creates an empty border that takes up no space. (The width of the top, bottom, left, and right sides are all zero.)\n-\n-    Returns:\n-    the Border object\n-createEmptyBorder\n-\n-    */ \n-    return null;\n- }\n-\n-public static Border createEmptyBorder(int top,\n-                                       int left,\n-                                       int bottom,\n-                                       int right)\n-  { /*\n-\n-    Creates an empty border that takes up no space but which does no drawing, specifying the width of the top, left, bottom, and right sides.\n+  /**\n+   * Created a border with a raised beveled edge, using brighter shades of\n+   * the component's current background color for highlighting, and darker\n+   * shading for shadows. (In a raised border, highlights are on top and\n+   * shadows are underneath.)\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createRaisedBevelBorder ()\n+  {\n+    return new BevelBorder (BevelBorder.RAISED);\n+  }\n \n-    Parameters:\n-    top - an int specifying the width of the top in pixelsleft - an int specifying the width of the left side in pixelsbottom - an int specifying the width of the right side in pixelsright - an int specifying the width of the bottom in pixelsReturns:\n-    the Border object\n-createCompoundBorder\n+  /**\n+   * Created a border with a lowered beveled edge, using brighter shades of\n+   * the component's current background color for highlighting, and darker\n+   * shading for shadows. (In a lowered border, shadows are on top and\n+   * highlights are underneath.)\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createLoweredBevelBorder ()\n+  {\n+    return new BevelBorder (BevelBorder.LOWERED);\n+  }\n \n-    */ \n-    return null;\n- }\n+  /**\n+   * Create a beveled border of the specified type, using brighter shades of\n+   * the component's current background color for highlighting, and darker\n+   * shading for shadows. (In a lowered border, shadows are on top and\n+   * highlights are underneath.).\n+   *\n+   * @param type An int specifying either BevelBorder.LOWERED or\n+   * BevelBorder.RAISED\n+   *\n+   * @Return The Border object\n+   */ \n+  public static Border createBevelBorder (int type)\n+  {\n+    return new BevelBorder (type);\n+  }\n \n-public static CompoundBorder createCompoundBorder()\n-  { /*\n+  /**\n+   * Create a beveled border of the specified type, using the specified\n+   * highlighting and shadowing. The outer edge of the highlighted area uses\n+   * a brighter shade of the highlight color. The inner edge of the shadow\n+   * area uses a brighter shade of the shadaw color.\n+   *\n+   * @param type An int specifying either BevelBorder.LOWERED or\n+   * BevelBorder.RAISED\n+   * @param highlight A Color object for highlights\n+   * @param shadow A Color object for shadows\n+   *\n+   * @return The Border object\n+  */ \n+  public static Border createBevelBorder (int type, Color highlight,\n+                                          Color shadow)\n+  {\n+    return new BevelBorder (type, highlight, shadow);\n+  }\n \n-    Create a compound border with a null inside edge and a null outside edge.\n+  /**\n+   * Create a beveled border of the specified type, using the specified colors\n+   * for the inner and outer highlight and shadow areas.\n+   *\n+   * @param type An int specifying either BevelBorder.LOWERED or\n+   * BevelBorder.RAISED\n+   * @param highlightOuter A Color object for the outer edge of the\n+   * highlight area\n+   * @param highlightInner A Color object for the inner edge of the\n+   * highlight area\n+   * @param shadowOuter A Color object for the outer edge of the shadow area\n+   * @param shadowInner A Color object for the inner edge of the shadow area\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createBevelBorder (int type, Color highlightOuter,\n+                                          Color highlightInner,\n+                                          Color shadowOuter, Color shadowInner)\n+  {\n+    return new BevelBorder (type, highlightOuter, highlightInner, shadowOuter,\n+\t\t\t    shadowInner);\n+  }\n \n-    Returns:\n-    the CompoundBorder object\n-createCompoundBorder\n-    */ \n-    return null;\n- }\n+  /**\n+   * Create a border with an \"etched\" look using the component's current\n+   * background color for highlighting and shading.\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEtchedBorder ()\n+  {\n+    return new EtchedBorder ();\n+  }\n \n+  /**\n+   * Create a border with an \"etched\" look using the component's current\n+   * background color for highlighting and shading.\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEtchedBorder (int etchType)\n+  {\n+    return new EtchedBorder (etchType);\n+  }\n \n-public static CompoundBorder createCompoundBorder(Border outsideBorder,\n-                                                  Border insideBorder)\n-  { /*\n+  /**\n+   * Create a border with an \"etched\" look using the specified highlighting and\n+   * shading colors.\n+   *\n+   * @param highlight A Color object for the border highlights\n+   * @param shadow A Color object for the border shadows\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEtchedBorder (Color highlight, Color shadow)\n+  {\n+    return new EtchedBorder (highlight, shadow);\n+  }\n \n-    Create a compound border specifying the border objects to use for the outside and inside edges.\n+  /**\n+   * Create a border with an \"etched\" look using the specified highlighting and\n+   * shading colors.\n+   *\n+   * @param highlight A Color object for the border highlights\n+   * @param shadow A Color object for the border shadows\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEtchedBorder (int etchType, Color highlight,\n+\t\t\t\t\t   Color shadow)\n+  {\n+    return new EtchedBorder (etchType, highlight, shadow);\n+  }\n \n-    Parameters:\n-    outsideBorder - a Border object for the outer edge of the compound borderinsideBorder - a Border object for the inner edge of the compound borderReturns:\n-    the CompoundBorder object\n-createMatteBorder\n-    */ \n-    return null;\n- }\n+  /**\n+   * Create a new title border specifying the text of the title, using the\n+   * default border (etched), using the default text position (sitting on the\n+   * top line) and default justification (left) and using the default font and\n+   * text color determined by the current look and feel.\n+   *\n+   * @param title A String containing the text of the title\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (String title)\n+  {\n+    return new TitledBorder (title);\n+  }\n \n+  /**\n+   * Create a new title border with an empty title specifying the border\n+   * object, using the default text position (sitting on the top line) and\n+   * default justification (left) and using the default font, text color,\n+   * and border determined by the current look and feel. (The Motif and Windows\n+   * look and feels use an etched border; The Java look and feel use a\n+   * gray border.)\n+   *\n+   * @param border The Border object to add the title to\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (Border border)\n+  {\n+    return new TitledBorder (border);\n+  }\n \n-public static MatteBorder createMatteBorder(int top,\n-                                            int left,\n-                                            int bottom,\n-                                            int right,\n-                                            Color color)\n-  { /*\n+  /**\n+   * Add a title to an existing border, specifying the text of the title, using\n+   * the default positioning (sitting on the top line) and default\n+   * justification (left) and using the default font and text color determined\n+   * by the current look and feel.\n+   *\n+   * @param order The Border object to add the title to\n+   * @param title A String containing the text of the title\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (Border border, String title)\n+  {\n+    return new TitledBorder (border, title);\n+  }\n \n-    Create a matte-look border using a solid color. (The difference between this border and a line border is that you can specify the individual border dimensions.)\n+  /**\n+   * Add a title to an existing border, specifying the text of the title along\n+   * with its positioning, using the default font and text color determined by\n+   * the current look and feel.\n+   *\n+   * @param border The Border object to add the title to\n+   * @param title A String containing the text of the title\n+   * @param titleJustification An int specifying the left/right position of\n+   * the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or\n+   * TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).\n+   * @param titlePosition An int specifying the vertical position of the text\n+   * in relation to the border -- one of: TitledBorder.ABOVE_TOP,\n+   * TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP,\n+   * TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom\n+   * line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (Border border, String title,\n+                                                int titleJustification,\n+                                                int titlePosition)\n+  {\n+    return new TitledBorder (border, title, titleJustification, titlePosition);\n+  }\n \n-    Parameters:\n-    top - an int specifying the width of the top in pixelsleft - an int specifying the width of the left side in pixelsbottom - an int specifying the width of the right side in pixelsright - an int specifying the width of the bottom in pixelscolor - a Color to use for the borderReturns:\n-    the MatteBorder object\n-createMatteBorder\n+  /**\n+   * Add a title to an existing border, specifying the text of the title along\n+   * with its positioning and font, using the default text color determined by\n+   * the current look and feel.\n+   *\n+   * @param border - the Border object to add the title to\n+   * @param title - a String containing the text of the title\n+   * @param titleJustification - an int specifying the left/right position of\n+   * the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or\n+   * TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).\n+   * @param titlePosition - an int specifying the vertical position of the\n+   * text in relation to the border -- one of: TitledBorder.ABOVE_TOP,\n+   * TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP,\n+   * TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom\n+   * line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).\n+   * @param titleFont - a Font object specifying the title font\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (Border border, String title,\n+                                                 int titleJustification,\n+                                                 int titlePosition,\n+                                                 Font titleFont)\n+  {\n+    return new TitledBorder (border, title, titleJustification, titlePosition,\n+\t\t\t     titleFont);\n+  }\n \n-    */ \n-    return null;\n- }\n+  /**\n+   * Add a title to an existing border, specifying the text of the title along\n+   * with its positioning, font, and color.\n+   *\n+   * @param border - the Border object to add the title to\n+   * @param title - a String containing the text of the title\n+   * @param titleJustification - an int specifying the left/right position of\n+   * the title -- one of TitledBorder.LEFT, TitledBorder.CENTER, or\n+   * TitledBorder.RIGHT, TitledBorder.DEFAULT_JUSTIFICATION (left).\n+   * @param titlePosition - an int specifying the vertical position of the text\n+   * in relation to the border -- one of: TitledBorder.ABOVE_TOP,\n+   * TitledBorder.TOP (sitting on the top line), TitledBorder.BELOW_TOP,\n+   * TitledBorder.ABOVE_BOTTOM, TitledBorder.BOTTOM (sitting on the bottom\n+   * line), TitledBorder.BELOW_BOTTOM, or TitledBorder.DEFAULT_POSITION (top).\n+   * @param titleFont - a Font object specifying the title font\n+   * @param titleColor - a Color object specifying the title color\n+   *\n+   * @return The TitledBorder object\n+   */ \n+  public static TitledBorder createTitledBorder (Border border,\n+                                                 String title,\n+                                                 int titleJustification,\n+                                                 int titlePosition,\n+                                                 Font titleFont,\n+                                                 Color titleColor)\n+  {\n+    return new TitledBorder (border, title, titleJustification, titlePosition,\n+\t\t\t     titleFont, titleColor);\n+  }\n \n-public static MatteBorder createMatteBorder(int top,\n-                                            int left,\n-                                            int bottom,\n-                                            int right,\n-                                            Icon tileIcon)\n-  { /*\n+  /**\n+   * Creates an empty border that takes up no space. (The width of the top,\n+   * bottom, left, and right sides are all zero.)\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEmptyBorder ()\n+  {\n+    return new EmptyBorder (0, 0, 0, 0);\n+  }\n \n-    Create a matte-look border that consists of multiple tiles of a specified icon. Multiple copies of the icon are placed side-by-side to fill up the border area.\n+  /**\n+   * Creates an empty border that takes up no space but which does no drawing,\n+   * specifying the width of the top, left, bottom, and right sides.\n+   *\n+   * @param top An int specifying the width of the top in pixels\n+   * @param left An int specifying the width of the left side in pixels\n+   * @param bottom An int specifying the width of the right side in pixels\n+   * @param right An int specifying the width of the bottom in pixels\n+   *\n+   * @return The Border object\n+   */ \n+  public static Border createEmptyBorder (int top, int left, int bottom,\n+\t\t\t\t\t  int right)\n+  {\n+    return new EmptyBorder (top, left, bottom, right);\n+  }\n \n-    Note:\n-    If the icon doesn't load, the border area is painted gray.\n+  /**\n+   * Create a compound border with a null inside edge and a null outside edge.\n+   *\n+   * @return The CompoundBorder object\n+   */ \n+  public static CompoundBorder createCompoundBorder ()\n+  {\n+    return new CompoundBorder ();\n+  }\n \n-    Parameters:\n-    top - an int specifying the width of the top in pixelsleft - an int specifying the width of the left side in pixelsbottom - an int specifying the width of the right side in pixelsright - an int specifying the width of the bottom in pixelstileIcon - the Icon object used for the border tilesReturns:\n-    the MatteBorder object\n+  /**\n+   * Create a compound border specifying the border objects to use for the\n+   * outside and inside edges.\n+   *\n+   * @param outsideBorder A Border object for the outer edge of the\n+   * compound border\n+   * @param insideBorder A Border object for the inner edge of the\n+   * compound border\n+   *\n+   * @return The CompoundBorder object\n+   */ \n+  public static CompoundBorder createCompoundBorder (Border outsideBorder,\n+\t\t\t\t\t\t     Border insideBorder)\n+  {\n+    return new CompoundBorder (outsideBorder, insideBorder);\n+  }\n \n-    */ \n-    return null;\n- }\n+  /**\n+   * Create a matte-look border using a solid color. (The difference between\n+   * this border and a line border is that you can specify the individual\n+   * border dimensions.)\n+   *\n+   * @param top An int specifying the width of the top in pixels\n+   * @param left An int specifying the width of the left side in pixels\n+   * @param bottom An int specifying the width of the right side in pixels\n+   * @param right An int specifying the width of the bottom in pixels\n+   * @param color A Color to use for the border\n+   *\n+   * @return The MatteBorder object\n+   */ \n+  public static MatteBorder createMatteBorder (int top, int left, int bottom,\n+\t\t\t\t\t       int right, Color color)\n+  {\n+    return new MatteBorder (top, left, bottom, right, color);\n+  }\n \n+  /**\n+   * Create a matte-look border that consists of multiple tiles of a specified\n+   * icon. Multiple copies of the icon are placed side-by-side to fill up the\n+   * border area.\n+   *\n+   * Note:\n+   * If the icon doesn't load, the border area is painted gray.\n+   *\n+   * @param top An int specifying the width of the top in pixels\n+   * @param left An int specifying the width of the left side in pixels\n+   * @param bottom An int specifying the width of the right side in pixels\n+   * @param right An int specifying the width of the bottom in pixels\n+   * @param tileIcon The Icon object used for the border tiles\n+   *\n+   * @return The MatteBorder object\n+   */ \n+  public static MatteBorder createMatteBorder (int top, int left, int bottom,\n+\t\t\t\t\t       int right, Icon tileIcon)\n+  {\n+    return new MatteBorder (top, left, bottom, right, tileIcon);\n+  }\n }"}, {"sha": "eee96b1cdc89f3a562c3b318300adb09128657ff", "filename": "libjava/javax/swing/Box.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,17 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n+import javax.accessibility.Accessible;\n+\n /**\n  * Needs some work I guess....\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n-public class Box extends JComponent\n+public class Box extends JComponent implements Accessible\n {\n     Box(int a)\n     {"}, {"sha": "23009fe68b0def573352d8a456001e135fd59432", "filename": "libjava/javax/swing/BoxLayout.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoxLayout.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n+import java.awt.Container;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.GridLayout;\n+import java.awt.LayoutManager2;\n+import java.io.Serializable;\n \n /**\n  * A layout for swing components.\n@@ -46,7 +52,7 @@\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n-public class BoxLayout implements LayoutManager2\n+public class BoxLayout implements LayoutManager2, Serializable\n {\n     GridLayout      gridbag;\n     "}, {"sha": "c872ab76a4045285e229af5ec1d205f9de348e09", "filename": "libjava/javax/swing/ButtonGroup.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonGroup.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.io.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+package javax.swing;\n \n+import java.io.Serializable;\n+import java.util.Enumeration;\n+import java.util.Vector;\n \n public class ButtonGroup implements Serializable \n {"}, {"sha": "52b78b33782a77c4d6b03df1d280a1947199b51f", "filename": "libjava/javax/swing/DefaultButtonModel.java", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,15 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.util.*;\n-import java.awt.event.*;\n-import java.awt.*;\n-import javax.swing.event.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import java.util.Vector;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.EventListenerList;\n \n public class DefaultButtonModel\n-  implements ButtonModel, java.io.Serializable\n+  implements ButtonModel, Serializable\n {\n   static final long serialVersionUID = -5342609566534980231L;\n "}, {"sha": "43846a5cdbe9e942c32236ddd870a4053da91aae", "filename": "libjava/javax/swing/DefaultListModel.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,17 +35,21 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.NoSuchElementException;\n+import java.util.Vector;\n \n /**\n  * DefaultListModel\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class DefaultListModel extends AbstractListModel {\n+public class DefaultListModel extends AbstractListModel\n+{\n \n \t//-------------------------------------------------------------\n \t// Variables --------------------------------------------------"}, {"sha": "2da790d247c9edb17b0724a4b36f6cacee629cdf", "filename": "libjava/javax/swing/DefaultListSelectionModel.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,16 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import javax.swing.event.*;\n-import java.util.*;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import java.util.Vector;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.ListSelectionListener;\n \n-public class DefaultListSelectionModel implements ListSelectionModel\n+public class DefaultListSelectionModel implements Cloneable, ListSelectionModel, Serializable\n {\n     int mode = SINGLE_SELECTION;\n "}, {"sha": "6cbfa10f9d6d82a79f02a3d47301d94d498e1687", "filename": "libjava/javax/swing/FocusManager.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FFocusManager.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,18 +35,20 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Component;\n+import java.awt.DefaultKeyboardFocusManager;\n+import java.awt.event.KeyEvent;\n \n /**\n  * FocusManager\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public abstract class FocusManager {\n+public abstract class FocusManager extends DefaultKeyboardFocusManager\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "872558d08dddc54a8f09e22dc3ff73a68f9e1235", "filename": "libjava/javax/swing/ImageIcon.java", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FImageIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FImageIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FImageIcon.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.awt.*;\n-import java.awt.image.*;\n \n+package javax.swing;\n \n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.MediaTracker;\n+import java.awt.Toolkit;\n+import java.io.Serializable;\n+import java.net.URL;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n \n public class ImageIcon implements Icon\n {"}, {"sha": "d748fb53e0218ea2cacd102685b2de0a95cf948f", "filename": "libjava/javax/swing/InputMap.java", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputMap.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.util.*;\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n \n /**\n  * InputMap"}, {"sha": "ed450ced7a5f6cf2f33ea975203298e52c6e5484", "filename": "libjava/javax/swing/JApplet.java", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJApplet.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,18 +35,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.applet.*;\n-import java.awt.*;\n-import java.awt.event.*;\n \n+package javax.swing;\n \n+import java.applet.Applet;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.LayoutManager;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n-\n \n public class JApplet extends Applet\n {"}, {"sha": "9c43e6d0bb995a90d5a0fb3dece03375a7f808e6", "filename": "libjava/javax/swing/JButton.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJButton.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -49,6 +49,8 @@\n  */\n public class JButton extends AbstractButton implements Accessible \n {\n+  private static final long serialVersionUID = -1907255238954382202L;\n+\n     boolean def, is_def;\n \n     "}, {"sha": "4d2cee7e02bc7613e2b46fbdee222bfff802662a", "filename": "libjava/javax/swing/JCheckBox.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.plaf.*;\n-import javax.accessibility.*;\n+import javax.accessibility.AccessibleContext;\n \n /**\n  * An instance of JCheckbox can be added to a panel, frame etc"}, {"sha": "0b767785fa46379f61cb4193bfb2101dfef3a30a", "filename": "libjava/javax/swing/JCheckBoxMenuItem.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -46,7 +46,8 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JCheckBoxMenuItem extends JMenuItem implements SwingConstants, Accessible {\n+public class JCheckBoxMenuItem extends JMenuItem implements SwingConstants, Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "8881dc3555d911537cbd3cc78f0d7959df2ed4fc", "filename": "libjava/javax/swing/JColorChooser.java", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJColorChooser.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,15 +35,20 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n-import javax.accessibility.*;\n-import javax.swing.colorchooser.*;\n-import javax.swing.plaf.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.event.ActionListener;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.swing.colorchooser.AbstractColorChooserPanel;\n+import javax.swing.colorchooser.ColorSelectionModel;\n+import javax.swing.plaf.ColorChooserUI;\n \n /**\n  * JColorChooser"}, {"sha": "c854520d07db80c8e2d35fc26299686cee372bbd", "filename": "libjava/javax/swing/JComboBox.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n import java.awt.*;\n import java.awt.event.*;\n import java.beans.*;\n@@ -52,8 +52,11 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JComboBox extends JComponent implements ItemSelectable, \n-\t\tListDataListener, ActionListener, Accessible {\n+public class JComboBox extends JComponent\n+  implements ItemSelectable, ListDataListener, ActionListener, Accessible\n+{\n+  private static final long serialVersionUID = 5654585963292734470L;\n+\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------\n@@ -766,6 +769,7 @@ public void processKeyEvent(KeyEvent value0) {\n \t/**\n \t * isFocusTraversable\n \t * @returns boolean\n+         * @deprecated\n \t */\n \tpublic boolean isFocusTraversable() {\n \t\treturn false; // TODO"}, {"sha": "7cfa7435d7be80e524e682d2fdfea99e70ad3e9c", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 36, "deletions": 13, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,21 +35,44 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.awt.*;\n-import java.awt.peer.*;\n-import java.awt.event.*;\n-import java.io.*;\n \n-import javax.swing.event.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-\n-import java.util.*;\n-import java.beans.*;\n+package javax.swing;\n \n-import javax.accessibility.*;\n+import java.awt.AWTEvent;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.LightweightPeer;\n+import java.beans.PropertyChangeListener;\n+import java.beans.PropertyVetoException;\n+import java.beans.VetoableChangeListener;\n+import java.io.Serializable;\n+import java.util.Vector;\n+import java.util.Hashtable;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleExtendedComponent;\n+import javax.accessibility.AccessibleKeyBinding;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.swing.event.AncestorListener;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ComponentUI;\n \n /**\n  * Every component in swing inherits from this class (JLabel, JButton, etc)."}, {"sha": "4ad265c9bd945b9ff8fccdb37868b98aba9decb1", "filename": "libjava/javax/swing/JDesktopPane.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDesktopPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -47,7 +47,8 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JDesktopPane extends JLayeredPane implements Accessible {\n+public class JDesktopPane extends JLayeredPane implements Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "11f27b239e0ee53f7e5316a0b01dd3abc0fa4060", "filename": "libjava/javax/swing/JDialog.java", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDialog.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,16 +35,21 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n+package javax.swing;\n \n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.LayoutManager;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n \n /**\n  * Unlike JComponent derivatives, JDialog inherits from"}, {"sha": "bce9dc70640a8eea77b07b0c47d12c8d1aea599b", "filename": "libjava/javax/swing/JEditorPane.java", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJEditorPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,15 +35,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.io.*;\n-import java.net.*;\n-import javax.swing.text.*;\n-import javax.swing.event.*;\n-import java.awt.event.*;\n-import java.awt.*;\n-import javax.accessibility.*;\n+import java.awt.Dimension;\n+import java.awt.event.KeyEvent;\n+import java.io.InputStream;\n+import java.net.URL;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.text.EditorKit;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.PlainEditorKit;\n+import javax.swing.event.HyperlinkEvent;\n+import javax.swing.event.HyperlinkListener;\n \n public class JEditorPane extends JTextComponent\n {"}, {"sha": "988e75b7743aaa1b3cdd198a700c19167753cfb7", "filename": "libjava/javax/swing/JFileChooser.java", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFileChooser.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,17 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n-import java.util.*;\n-import javax.accessibility.*;\n-import javax.swing.filechooser.*;\n+import java.awt.Component;\n+import java.awt.event.ActionListener;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.util.Vector;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n import javax.swing.filechooser.FileFilter;\n-import javax.swing.plaf.*;\n+import javax.swing.filechooser.FileSystemView;\n+import javax.swing.filechooser.FileView;\n+import javax.swing.plaf.FileChooserUI;\n \n /**\n  * JFileChooser"}, {"sha": "f26af99e60edbacb165f5f631d74f6dfe8ff39ab", "filename": "libjava/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -41,6 +41,7 @@\n import java.awt.event.FocusEvent;\n import java.io.Serializable;\n import java.text.Format;\n+import java.text.ParseException;\n import javax.swing.text.Document;\n import javax.swing.text.DocumentFilter;\n import javax.swing.text.NavigationFilter;"}, {"sha": "9f4436ffb0768d1df6a22a25cc522fe5dec5a48d", "filename": "libjava/javax/swing/JFrame.java", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFrame.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,15 +35,20 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n+package javax.swing;\n \n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.LayoutManager;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n \n /**\n  * Unlike JComponent derivatives, JFrame inherits from"}, {"sha": "c49615c463888c9c54b6cfabbb63ef222dd8fb67", "filename": "libjava/javax/swing/JLabel.java", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,19 +35,16 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.awt.*;\n-import javax.swing.plaf.*;\n \n+package javax.swing;\n \n+import java.awt.Component;\n+import java.awt.Image;\n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n-\n+import javax.swing.plaf.LabelUI;\n \n-public class JLabel extends JComponent implements SwingConstants\n+public class JLabel extends JComponent implements Accessible, SwingConstants\n {\n     String text;\n     Icon icon;"}, {"sha": "69217804ac1494112c676c94f753240935a661ca", "filename": "libjava/javax/swing/JLayeredPane.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLayeredPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,13 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n+import java.awt.Component;\n+import javax.accessibility.Accessible;\n \n-public class JLayeredPane extends JComponent\n+public class JLayeredPane extends JComponent implements Accessible\n {\n     JLayeredPane()\n     {"}, {"sha": "22d35a5a2c04800e9548e2547e6abd6c6c024202", "filename": "libjava/javax/swing/JList.java", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -1,5 +1,5 @@\n /* JList.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,21 +35,21 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import javax.swing.event.*;\n-\n-import java.awt.*;\n-import javax.swing.plaf.*;\n-import java.util.*;\n \n+package javax.swing;\n \n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Rectangle;\n+import java.util.Vector;\n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n+import javax.swing.event.ListDataEvent;\n+import javax.swing.event.ListDataListener;\n+import javax.swing.event.ListSelectionListener;\n+import javax.swing.plaf.ListUI;\n \n-public class JList extends JComponent implements Scrollable\n+public class JList extends JComponent implements Accessible, Scrollable\n {\n     Color select_back, select_fore;\n     ListCellRenderer render;\n@@ -143,14 +143,13 @@ class AL extends AbstractListModel\n     \n     public void setListData(final Vector listData)\n     {\n-\t// XXX - FIXME Don't also name this AL, workaround for gcj 3.1.\n-\tclass ALData extends AbstractListModel \n+\tclass AL extends AbstractListModel \n \t{\n \t    public int getSize()              { return listData.size(); }\n \t    public Object getElementAt(int i) { return listData.elementAt(i); }\n \t};\n \t\n-        setModel (new ALData());\n+        setModel (new AL());\n     }\n     \n     "}, {"sha": "24440db598adfa4ea3a23ab1c4468f8b529d1153", "filename": "libjava/javax/swing/JMenuBar.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuBar.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,8 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n+import java.awt.Component;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import javax.accessibility.Accessible;\n+\n public class JMenuBar extends JComponent\n {\n   JMenuBar()"}, {"sha": "db09f22972f045544169378d16186eab83a741a1", "filename": "libjava/javax/swing/JMenuItem.java", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuItem.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,16 +35,26 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.beans.*;\n-import java.io.*;\n-import javax.accessibility.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n+import java.awt.Component;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.beans.PropertyChangeListener;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.MenuDragMouseEvent;\n+import javax.swing.event.MenuDragMouseListener;\n+import javax.swing.event.MenuKeyEvent;\n+import javax.swing.event.MenuKeyListener;\n+import javax.swing.plaf.MenuItemUI;\n \n /**\n  * JMenuItem"}, {"sha": "5dc10c7dc037b9764deaebc8e97447b2c1ca334c", "filename": "libjava/javax/swing/JOptionPane.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJOptionPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,16 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import javax.swing.plaf.*;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n+import javax.swing.plaf.OptionPaneUI;\n \n public class JOptionPane extends JComponent \n {"}, {"sha": "56cc1f09e26a0771deb3235ec26ff86961a8e827", "filename": "libjava/javax/swing/JPanel.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPanel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,22 +35,21 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n-import javax.swing.plaf.*;\n+package javax.swing;\n \n+import java.awt.FlowLayout;\n+import java.awt.LayoutManager;\n+import javax.swing.plaf.PanelUI;\n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n \n /**\n  * An instance of JPanel can be added to a panel, frame etc\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n-public class JPanel extends JComponent\n+public class JPanel extends JComponent implements Accessible\n {\n     public JPanel()\n     {"}, {"sha": "40fb921f280d90d8d6df9474584da25dbe892b6d", "filename": "libjava/javax/swing/JPasswordField.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPasswordField.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -218,6 +218,7 @@ public void cut() {\n \t/**\n \t * getText\n \t * @returns String\n+         * @deprecated\n \t */\n \tpublic String getText() {\n \t\treturn null; // TODO\n@@ -229,6 +230,7 @@ public String getText() {\n \t * @param length TODO\n \t * @exception BadLocationException TODO\n \t * @returns String\n+         * @deprecated\n \t */\n \tpublic String getText(int offset, int length) throws BadLocationException {\n \t\treturn null; // TODO"}, {"sha": "d5c6023205e53a52a7b994fdefeabb9f089378bb", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -51,7 +51,8 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JPopupMenu extends JComponent implements Accessible, MenuElement {\n+public class JPopupMenu extends JComponent implements Accessible, MenuElement\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "2c4d834a6dd334cf2b3156dcf6b8fb32b2398ca9", "filename": "libjava/javax/swing/JProgressBar.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJProgressBar.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -49,7 +49,8 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JProgressBar extends JComponent implements SwingConstants, Accessible {\n+public class JProgressBar extends JComponent implements SwingConstants, Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "14bfcebb1fd97d1211d612197d4d50cfb390b111", "filename": "libjava/javax/swing/JRadioButton.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButton.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.plaf.*;\n-import javax.accessibility.*;\n+import javax.accessibility.AccessibleContext;\n \n public class JRadioButton extends JToggleButton\n {"}, {"sha": "d619bfdd051a958c1bd3b92800e33664df6c20d5", "filename": "libjava/javax/swing/JRadioButtonMenuItem.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -46,7 +46,8 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class JRadioButtonMenuItem extends JMenuItem implements Accessible {\n+public class JRadioButtonMenuItem extends JMenuItem implements Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "f0121b8ce922f2ccddf30f1373f3d60540ea6ffa", "filename": "libjava/javax/swing/JRootPane.java", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRootPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJRootPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRootPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,15 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n+package javax.swing;\n \n-import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.LayoutManager;\n+import java.awt.LayoutManager2;\n+import java.io.Serializable;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleComponent;\n \n /**\n  * This class is where JComponents are added to."}, {"sha": "1cf6667d483814ef7c4cf98716731e378ea10484", "filename": "libjava/javax/swing/JScrollBar.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollBar.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,8 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n+import java.awt.Adjustable;\n+import java.awt.event.AdjustmentListener;\n+import javax.accessibility.Accessible;\n \n public class JScrollBar extends JComponent\n {"}, {"sha": "33cdba127dc4d00bd4196d6c1607469599079e87", "filename": "libjava/javax/swing/JScrollPane.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,13 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n-import javax.swing.plaf.*;\n+package javax.swing;\n \n+import java.awt.Component;\n+import javax.accessibility.Accessible;\n+import javax.swing.plaf.ScrollPaneUI;\n \n-public class JScrollPane extends JComponent\n+public class JScrollPane extends JComponent implements Accessible, ScrollPaneConstants\n {\n     protected JViewport  columnHeader;\n     protected JViewport  rowHeader;"}, {"sha": "a0a010aa3049ee117b8c893144c2f01adf0f264a", "filename": "libjava/javax/swing/JSeparator.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJSeparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJSeparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSeparator.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -48,7 +48,8 @@\n  * @version\t1.0\n  */\n public class JSeparator extends JComponent \n-\t\timplements SwingConstants, Accessible {\n+  implements SwingConstants, Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "c9fc022fa6ad7d274f3318258d04586ca38c1f8c", "filename": "libjava/javax/swing/JSlider.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJSlider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJSlider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSlider.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n-import javax.accessibility.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleValue;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.SliderUI;\n \n /**\n  * JSlider"}, {"sha": "9264a76e9c54a3ddc785a10408a90f9c10af68ec", "filename": "libjava/javax/swing/JTabbedPane.java", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTabbedPane.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,19 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.util.*;\n-import javax.swing.plaf.*;\n-import java.awt.*;\n \n+package javax.swing;\n \n+import java.awt.Component;\n+import java.util.Vector;\n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRole;\n-import javax.accessibility.AccessibleState;\n-import javax.accessibility.AccessibleStateSet;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.TabbedPaneUI;\n \n-public class JTabbedPane extends JComponent\n+public class JTabbedPane extends JComponent implements Accessible, SwingConstants\n {\n     class Tab\n     {"}, {"sha": "55c6043ff8f4ce99bbdb7d3286342974a2ce3f65", "filename": "libjava/javax/swing/JTable.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTable.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n+import java.awt.Color;\n+import java.awt.Component;\n import java.awt.Dimension;\n import java.awt.Rectangle;\n+import java.util.Hashtable;\n import java.util.Vector;\n import javax.accessibility.Accessible;\n import javax.swing.event.ChangeEvent;\n@@ -49,9 +53,10 @@\n import javax.swing.event.TableColumnModelListener;\n import javax.swing.event.TableModelEvent;\n import javax.swing.event.TableModelListener;\n+import javax.swing.table.JTableHeader;\n import javax.swing.table.TableModel;\n+import javax.swing.table.TableCellEditor;\n import javax.swing.table.TableColumnModel;\n-import javax.swing.table.DefaultTableModel;\n \n public class JTable extends JComponent\n   implements TableModelListener, Scrollable, TableColumnModelListener,"}, {"sha": "edc3ea7735bda754df0f161459b606a324723598", "filename": "libjava/javax/swing/JTextField.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextField.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.event.*;\n-import java.util.*;\n+package javax.swing;\n \n-import javax.accessibility.*;\n+import java.awt.event.ActionListener;\n+import java.util.Vector;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.swing.text.Document;\n+import javax.swing.text.JTextComponent;\n \n public class JTextField extends JEditorPane\n {"}, {"sha": "63972c1cad5c3451b0e58c6d83b15e426337754f", "filename": "libjava/javax/swing/JToggleButton.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToggleButton.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.plaf.*;\n-import javax.accessibility.*;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.plaf.ButtonUI;\n \n-public class JToggleButton extends AbstractButton\n+public class JToggleButton extends AbstractButton implements Accessible\n {\n     public JToggleButton()\n     {"}, {"sha": "a92157efbf21131aec39845b76c3207d15752d9d", "filename": "libjava/javax/swing/JToolBar.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToolBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToolBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolBar.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -50,7 +50,8 @@\n  * @version\t1.0\n  */\n public class JToolBar extends JComponent \n-\t\timplements SwingConstants, Accessible {\n+  implements SwingConstants, Accessible\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "54e09cf0c60d5d49f4151e7720f5d35c6cf9d6f2", "filename": "libjava/javax/swing/JToolTip.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToolTip.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJToolTip.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolTip.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,13 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.*;\n+package javax.swing;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n \n-public class JToolTip extends JComponent\n+public class JToolTip extends JComponent implements Accessible\n {\n     String text;\n "}, {"sha": "432612db8084773b94c90897804f3006f2853707", "filename": "libjava/javax/swing/JTree.java", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTree.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJTree.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTree.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,28 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import javax.swing.plaf.*;\n-import javax.accessibility.*;\n+import java.awt.Dimension;\n+import java.awt.Rectangle;\n+import java.io.Serializable;\n+import java.util.Hashtable;\n+import java.util.Vector;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.event.TreeModelEvent;\n+import javax.swing.event.TreeModelListener;\n+import javax.swing.event.TreeSelectionEvent;\n+import javax.swing.event.TreeSelectionListener;\n+import javax.swing.plaf.TreeUI;\n+import javax.swing.tree.DefaultTreeSelectionModel;\n+import javax.swing.tree.TreeCellEditor;\n+import javax.swing.tree.TreeCellRenderer;\n+import javax.swing.tree.TreeModel;\n+import javax.swing.tree.TreeNode;\n+import javax.swing.tree.TreePath;\n+import javax.swing.tree.TreeSelectionModel;\n \n public class JTree extends JComponent implements Scrollable, Accessible\n {"}, {"sha": "43ed91e688312ac680c1835c855af2717dbe9893", "filename": "libjava/javax/swing/JViewport.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,17 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import javax.swing.plaf.*;\n-import java.awt.*;\n+package javax.swing;\n \n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import javax.accessibility.Accessible;\n+import javax.swing.plaf.ViewportUI;\n \n public class JViewport extends JComponent\n {"}, {"sha": "50d0c316895add42a0e22b4fed0308c037d794d3", "filename": "libjava/javax/swing/JWindow.java", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FJWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJWindow.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.accessibility.*;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.LayoutManager;\n+import java.awt.Window;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n \n /**\n  * Unlike JComponent derivatives, JWindow inherits from"}, {"sha": "c3053aa289ef4f922b64e8a3cc4bef7b8fac419b", "filename": "libjava/javax/swing/KeyStroke.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FKeyStroke.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -37,9 +37,9 @@\n \n package javax.swing;\n \n-// Imports\n-import java.awt.event.*;\n-import java.io.*;\n+import java.awt.AWTKeyStroke;\n+import java.awt.event.KeyEvent;\n+import java.io.Serializable;\n \n /**\n  * KeyStroke"}, {"sha": "f4568479387f59f68950c61c856d4acaf260df7b", "filename": "libjava/javax/swing/ListSelectionModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n+package javax.swing;\n \n-import javax.swing.event.*;\n+import javax.swing.event.ListSelectionListener;\n \n public interface ListSelectionModel\n {"}, {"sha": "b841a1780750890a3e09a77ea934668b6923d5de", "filename": "libjava/javax/swing/LookAndFeel.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FLookAndFeel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-import javax.swing.text.*;\n+import java.awt.Component;\n+import javax.swing.text.JTextComponent;\n \n public abstract class LookAndFeel\n {"}, {"sha": "55d62ae5f8093408be15ea44988f90fdf9b51b5d", "filename": "libjava/javax/swing/RepaintManager.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.util.*;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Image;\n+import java.awt.Rectangle;\n+import java.util.Hashtable;\n+import java.util.Vector;\n \n /**\n  * RepaintManager"}, {"sha": "d6cc479de0b8dd77ed14946cdc7e4cd5281e6306", "filename": "libjava/javax/swing/ScrollPaneLayout.java", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.awt.*;\n-import java.io.*;\n-import javax.swing.plaf.*;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.LayoutManager;\n+import java.awt.Rectangle;\n+import java.io.Serializable;\n \n /**\n  * ScrollPaneLayout"}, {"sha": "eb641fbd1c7a41d751778203bf5b529a2153a69d", "filename": "libjava/javax/swing/SizeRequirements.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FSizeRequirements.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FSizeRequirements.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSizeRequirements.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n-// Imports\n-import java.io.*;\n+import java.io.Serializable;\n \n /**\n  * SizeRequirements"}, {"sha": "fb7c23b497013ae92ad676b965b7676163359116", "filename": "libjava/javax/swing/SwingConstants.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FSwingConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FSwingConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingConstants.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n \n+package javax.swing;\n \n-public  interface SwingConstants\n+public interface SwingConstants\n {\n     public static final int CENTER       = 0;\n     public static final int TOP          = 1;"}, {"sha": "80eb13a1a44b30b368834a236493ed35865aacea", "filename": "libjava/javax/swing/Timer.java", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FTimer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FTimer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTimer.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,13 +35,17 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.awt.event.*;\n-import java.util.*;\n+package javax.swing;\n \n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import java.util.Vector;\n+import javax.swing.event.EventListenerList;\n \n-public class Timer\n+public class Timer implements Serializable\n {\n   int ticks;\n   static boolean verbose;"}, {"sha": "71f0955fcfcdefe336577dab061c7bb99b4a3bd4", "filename": "libjava/javax/swing/UIDefaults.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIDefaults.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -77,7 +77,7 @@ public Object createValue(UIDefaults table)\n     Object createValue(UIDefaults table);\n   } // interface LazyValue\n \n-  public static class ProxyLazyValue\n+  public static class ProxyLazyValue implements LazyValue\n   {\n     public ProxyLazyValue(String s)\n     {\n@@ -101,6 +101,8 @@ public Object createValue(UIDefaults table)\n     }\n   } // class ProxyLazyValue\n \n+  private static final long serialVersionUID = 7341222528856548117L;\n+\n   public UIDefaults()\n   {\n   }"}, {"sha": "8c4f9cc4af7c52bca6ee3b36c47d91a4f04f8007", "filename": "libjava/javax/swing/UIManager.java", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FUIManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2FUIManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIManager.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,19 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.io.*;\n-import java.awt.*;\n-\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-import javax.swing.plaf.metal.*;\n \n+package javax.swing;\n \n-import java.beans.*;\n-\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Insets;\n+import java.beans.PropertyChangeListener;\n+import java.io.Serializable;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n \n public class UIManager implements Serializable\n {"}, {"sha": "663fb1130e0a1df7ff26a1b43828187740b456ab", "filename": "libjava/javax/swing/border/AbstractBorder.java", "status": "modified", "additions": 129, "deletions": 65, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fborder%2FAbstractBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fborder%2FAbstractBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FAbstractBorder.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -1,5 +1,5 @@\n /* AbstractBorder.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,85 +44,149 @@\n import java.awt.Rectangle;\n import java.io.Serializable;\n \n-public abstract class AbstractBorder implements Border, Serializable\n+\n+/**\n+ * An invisible zero-width border, serving as a base class for\n+ * implementing more interesting borders.\n+ *\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n+ * @author Ronald Veldema (rveldema@cs.vu.nl)\n+ */\n+public abstract class AbstractBorder\n+  implements Border, Serializable\n {\n   static final long serialVersionUID = -545885975315191844L;\n \n+\n+  /**\n+   * Constructs a new AbstractBorder.\n+   */\n   public AbstractBorder ()\n   {\n   }\n \n-    public void paintBorder(Component c,\n-\t\t\t    Graphics g,\n-\t\t\t    int x,\n-\t\t\t    int y,\n-\t\t\t    int width,\n-\t\t\t    int height) \n-    {\n-\tSystem.out.println(\"HMMMMM, abstract-border.paintBorder\");\n-    }\n \n+  /**\n+   * Performs nothing, because the default implementation provided by\n+   * this class is an invisible, zero-width border. Subclasses will\n+   * likely want to override this method, but they are not required\n+   * for doing so.\n+   *\n+   * @param c the component whose border is to be painted.\n+   * @param g the graphics for painting.\n+   * @param x the horizontal position for painting the border.\n+   * @param y the vertical position for painting the border.\n+   * @param width the width of the available area for painting the border.\n+   * @param height the height of the available area for painting the border.\n+   */\n+  public void paintBorder (Component c, Graphics g,\n+                           int x, int y, int width, int height) \n+  {\n+    /* A previous version of Classpath had emitted a warning when\n+     * this method was called. The warning was removed because it is\n+     * perfectly legal for a subclass to not override the paintBorder\n+     * method. An example would be EmptyBorder.\n+     */\n+  }\n \n-    public Insets getBorderInsets(Component c, Insets insets) \n-    {\n-\tif (insets == null)\n-\t    insets = new Insets(0,0,0,0);\n-        \n-\tinsets.left = insets.top = insets.right = insets.bottom = 5;\n \n-        return insets;\n-    }\n+  /**\n+   * Determines the insets of this border. The implementation provided\n+   * by AbstractButton returns Insets for a zero-width border, whose\n+   * <code>left</code>, <code>right</code>, <code>top</code> and\n+   * <code>bottom</code> fields are all zero.\n+   *\n+   * @param c the component whose border is to be measured.\n+   *\n+   * @return a newly created Insets object, indicating a zero-width\n+   *         border.\n+   */\n+  public Insets getBorderInsets (Component c)\n+  {\n+    return new Insets (0, 0, 0, 0);\n+  }\n \n-    public Insets getBorderInsets(Component c)\n-    {\n-        return getBorderInsets(c, new Insets(0,0,0,0));\n-    }\n \n+  /**\n+   * Determines the insets of this border. The implementation provided\n+   * by AbstractButton sets the <code>left</code>, <code>right</code>,\n+   * <code>top</code> and <code>bottom</code> fields of the passed\n+   * <code>insets</code> parameter to zero.\n+   *\n+   * @param c the component in the center of this border.\n+   *\n+   * @param insets an Insets object for holding the insets of this\n+   *        border.\n+   *\n+   * @return the <code>insets</code> object.\n+   */\n+  public Insets getBorderInsets (Component c, Insets insets) \n+  {\n+    insets.left = insets.right = insets.top = insets.bottom = 0;\n+    return insets;\n+  }\n \n-    public boolean isBorderOpaque() \n-    {   return false;   }\n \n-    public Rectangle getInteriorRectangle(Component c,\n-\t\t\t\t\t  int x,\n-\t\t\t\t\t  int y,\n-\t\t\t\t\t  int width, \n-\t\t\t\t\t  int height) \n-    {\n-        return getInteriorRectangle(c,\n-\t\t\t\t    this,\n-\t\t\t\t    x,\n-\t\t\t\t    y,\n-\t\t\t\t    width,\n-\t\t\t\t    height);\n-    }\n+  /**\n+   * Determines whether or not this border is opaque. An opaque border\n+   * fills every pixel in its area when painting. Partially\n+   * translucent borders must return <code>false</code>, or ugly\n+   * artifacts can appear on screen. The default implementation\n+   * provided by AbstractBorder always returns <code>false</code>.\n+   *\n+   * @return <code>false</code>.\n+   */\n+  public boolean isBorderOpaque () \n+  {\n+    return false;\n+  }\n \n-        \n-    public static Rectangle getInteriorRectangle(Component c,\n-\t\t\t\t\t\t Border b,\n-\t\t\t\t\t\t int x,\n-\t\t\t\t\t\t int y,\n-\t\t\t\t\t\t int width,\n-\t\t\t\t\t\t int height)\n+\n+  /**\n+   * Returns a rectangle that covers the specified area minus this\n+   * border.  Components that wish to determine an area into which\n+   * they can safely draw without intersecting with a border might\n+   * want to use this helper method.\n+   *\n+   * @param c the component in the center of this border.\n+   * @param x the horizontal position of the border.\n+   * @param y the vertical position of the border.\n+   * @param width the width of the available area for the border.\n+   * @param height the height of the available area for the border.\n+   */\n+  public Rectangle getInteriorRectangle (Component c,\n+                                         int x, int y, int width, int height) \n+  {\n+    return getInteriorRectangle (c, this, x, y, width, height);\n+  }\n+\n+  \n+  /**\n+   * Returns a rectangle that covers the specified area minus a\n+   * border.  Components that wish to determine an area into which\n+   * they can safely draw without intersecting with a border might\n+   * want to use this helper method.\n+   *\n+   * @param c the component in the center of this border.\n+   * @param x the horizontal position of the border.\n+   * @param y the vertical position of the border.\n+   * @param width the width of the available area for the border.\n+   * @param height the height of the available area for the border.\n+   */\n+  public static Rectangle getInteriorRectangle (Component c, Border b,\n+                                                int x, int y, int width, int height)\n+  {\n+    Insets borderInsets;\n+\n+    if (b != null)\n     {\n-\tif(b != null)\n-\t    {\n-\t\tInsets insets = b.getBorderInsets(c);\n-\t\t\n-\t\tint w = insets.right - insets.left;\n-\t\tint h = insets.top   - insets.bottom;\n-\n-\t\treturn new Rectangle(x + insets.left,\n-\t\t\t\t     y + insets.top,\n-\t\t\t\t     width - w,\n-\t\t\t\t     height - h);\n-\t    }\n-        else\n-            {\n-\t\treturn new Rectangle(x,\n-\t\t\t\t     y,\n-\t\t\t\t     width,\n-\t\t\t\t     height);\n-\t    }\n+      borderInsets = b.getBorderInsets (c);\n+      x += borderInsets.left;\n+      y += borderInsets.top;\n+      width -= borderInsets.left + borderInsets.right;\n+      height -= borderInsets.top + borderInsets.bottom;\n     }\n-}\n \n+    return new Rectangle (x, y, width, height);\n+  }\n+}"}, {"sha": "102a220e103209d27a301e373c5b7021c52d0aa6", "filename": "libjava/javax/swing/border/CompoundBorder.java", "status": "modified", "additions": 187, "deletions": 20, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fborder%2FCompoundBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fborder%2FCompoundBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FCompoundBorder.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -1,5 +1,5 @@\n /* CompoundBorder.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,45 +42,212 @@\n import java.awt.Graphics;\n import java.awt.Insets;\n \n-public class CompoundBorder extends AbstractBorder\n+/**\n+ * A Border that is composed of an interior and an exterior border,\n+ * where the interior border is tightly nested into the exterior.\n+ *\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n+ */\n+public class CompoundBorder\n+  extends AbstractBorder\n {\n+  static final long serialVersionUID = 9054540377030555103L;\n+\n+\n+  /**\n+   * The inside border, which is painted between the bordered\n+   * Component and the outside border. It is valid for\n+   * <code>insideBorder</code> to be <code>null</code>.\n+   */\n   protected Border insideBorder;\n+\n+\n+  /**\n+   * The outside border, which is painted outside both the\n+   * bordered Component and the inside border. It is valid for\n+   * <code>outsideBorder</code> to be <code>null</code>.\n+   */\n   protected Border outsideBorder;\n \n+\n+  /**\n+   * Constructs a CompoundBorder whose inside and outside borders\n+   * are both <code>null</code>. While this does not really make\n+   * any sense (there exists a class EmptyBorder as well, and not\n+   * every Component needs to have a border at all), the API\n+   * specification requires the existence of this constructor.\n+   *\n+   * @see EmptyBorder\n+   */\n   public CompoundBorder ()\n   {\n     this (null, null);\n   }\n \n+\n+  /**\n+   * Constructs a CompoundBorder with the specified inside and\n+   * outside borders.\n+   *\n+   * @param outsideBorder the outside border, which is painted to the\n+   *        outside of both <code>insideBorder</code> and the bordered\n+   *        compoonent. It is acceptable to pass <code>null</code>, in\n+   *        which no outside border is painted.\n+   *\n+   * @param insideBorder the inside border, which is painted to\n+   *        between <code>outsideBorder</code> and the bordered\n+   *        component. It is acceptable to pass <code>null</code>, in\n+   *        which no intside border is painted.\n+   */\n   public CompoundBorder (Border outsideBorder, Border insideBorder)\n   {\n     this.outsideBorder = outsideBorder;\n     this.insideBorder = insideBorder;\n   }\n+\n+\n+  /**\n+   * Determines whether or not this border is opaque. An opaque\n+   * border fills every pixel in its area when painting. Partially\n+   * translucent borders must return <code>false</code>, or ugly\n+   * artifacts can appear on screen.\n+   *\n+   * @return <code>true</code> if both the inside and outside borders\n+   *         are opaque, or <code>false</code> otherwise.\n+   */\n+  public boolean isBorderOpaque ()\n+  {\n+    /* While it would be safe to assume true for the opacity of\n+     * a null border, this behavior would not be according to\n+     * the API specification. Also, it is pathological to have\n+     * null borders anyway.\n+     */\n+    if ((insideBorder == null) || (outsideBorder == null))\n+      return false;\n+\n+    return insideBorder.isBorderOpaque()\n+      && outsideBorder.isBorderOpaque();\n+  }\n     \n-    public Insets getBorderInsets(Component  c,\n-\t\t\t\t  Insets s)\n+\n+  /**\n+   * Paints the compound border by first painting the outside border,\n+   * then painting the inside border tightly nested into the outside. \n+   *\n+   * @param c the component whose border is to be painted.\n+   * @param g the graphics for painting.\n+   * @param x the horizontal position for painting the border.\n+   * @param y the vertical position for painting the border.\n+   * @param width the width of the available area for painting the border.\n+   * @param height the height of the available area for painting the border.\n+   */\n+  public void paintBorder(Component c, Graphics g,\n+                          int x, int y, int width, int height)\n+  {\n+    /* If there is an outside border, paint it and reduce the\n+     * bounding box by its insets.\n+     */\n+    if (outsideBorder != null)\n     {\n-\tif (s == null)\n-\t    s = new Insets(0,0,0,0);\n-\t\n-\ts.left = s.right = s.top = s.bottom = 5;\n-\t\n-\treturn s;\n+      Insets outsideInsets;\n+\n+      outsideBorder.paintBorder(c, g, x, y, width, height);\n+      outsideInsets = outsideBorder.getBorderInsets(c);\n+\n+      x += outsideInsets.left;\n+      y += outsideInsets.top;\n+\n+      /* Reduce width and height by the respective extent of the\n+       * outside border.\n+       */\n+      width -= outsideInsets.left + outsideInsets.right;\n+      height -= outsideInsets.top + outsideInsets.bottom;\n     }\n-    \n-    public boolean isBorderOpaque()\n+\n+    if (insideBorder != null)\n+      insideBorder.paintBorder(c, g, x, y, width, height);\n+  }\n+\n+\n+  /**\n+   * Changes the specified insets to the insets of this border,\n+   * which is the sum of the insets of the inside and the outside\n+   * border.\n+   *\n+   * @param c the component in the center of this border.\n+   * @param insets an Insets object for holding the added insets.\n+   *\n+   * @return the <code>insets</code> object.\n+   */\n+  public Insets getBorderInsets(Component c, Insets insets)\n+  {\n+    Insets borderInsets;\n+\n+    if (insets == null)\n+      insets = new Insets (0,0,0,0);\n+    else\n+      insets.left = insets.right = insets.top = insets.bottom = 0;\n+\n+    /* If there is an outside border, add it to insets. */\n+    if (outsideBorder != null)\n     {\n-\treturn false;\n+      borderInsets = outsideBorder.getBorderInsets(c);\n+      insets.left += borderInsets.left;\n+      insets.right += borderInsets.right;\n+      insets.top += borderInsets.top;\n+      insets.bottom += borderInsets.bottom;\n     }\n-    \n-    public void paintBorder(Component  c, \n-\t\t\t    Graphics  g,\n-\t\t\t    int  x,\n-\t\t\t    int  y,\n-\t\t\t    int  width,\n-\t\t\t    int  height)\n+\n+    /* If there is an inside border, add it to insets. */\n+    if (insideBorder != null)\n     {\n+      borderInsets = insideBorder.getBorderInsets(c);\n+      insets.left += borderInsets.left;\n+      insets.right += borderInsets.right;\n+      insets.top += borderInsets.top;\n+      insets.bottom += borderInsets.bottom;\n     }\n+\n+    return insets;\n+  }\n+\n+\n+  /**\n+   * Determines the insets of this border, which is the sum of the\n+   * insets of the inside and the outside border.\n+   *\n+   * @param c the component in the center of this border.\n+   */\n+  public Insets getBorderInsets (Component c)\n+  {\n+    /* It is not clear why CompoundBorder does not simply inherit\n+     * the implementation from AbstractBorder. However, we want\n+     * to be compatible with the API specification, which overrides\n+     * the getBorderInsets(Component) method.\n+     */\n+    return getBorderInsets (c, null);\n+  }\n+\n+\n+  /**\n+   * Returns the outside border, which is painted outside both the\n+   * bordered Component and the inside border. It is valid for the\n+   * result to be <code>null</code>.\n+   */\n+  public Border getOutsideBorder ()\n+  {\n+    return outsideBorder;\n+  }\n+\n+\n+  /**\n+   * Returns the inside border, which is painted between the bordered\n+   * Component and the outside border. It is valid for the result to\n+   * be <code>null</code>.\n+   */\n+  public Border getInsideBorder ()\n+  {\n+    return insideBorder;\n+  }\n }\n "}, {"sha": "c39801dc10a51146d1f9eade369bab56468cb88f", "filename": "libjava/javax/swing/colorchooser/AbstractColorChooserPanel.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,13 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.colorchooser;\n \n-// Imports\n-import java.awt.*;\n-import java.io.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import javax.swing.Icon;\n+import javax.swing.JColorChooser;\n+import javax.swing.JPanel;\n \n /**\n  * AbstractColorChooserPanel"}, {"sha": "ffd8718eac0b99dca3b9d035fd95ab9f6d77cab1", "filename": "libjava/javax/swing/colorchooser/ColorChooserComponentFactory.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.colorchooser;\n \n-// Imports\n-import javax.swing.*;\n+import javax.swing.JComponent;\n \n /**\n  * ColorChooserComponentFactory"}, {"sha": "d04266b07a93bf79437846b69c5e21cce2dcd501", "filename": "libjava/javax/swing/colorchooser/ColorSelectionModel.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.colorchooser;\n \n-// Imports\n-import java.awt.*;\n-import javax.swing.event.*;\n+import java.awt.Color;\n+import javax.swing.event.ChangeListener;\n \n /**\n  * ColorSelectionModel"}, {"sha": "1aa51fd64c09f1aad3d62440d2868e6f46390b1c", "filename": "libjava/javax/swing/colorchooser/DefaultColorSelectionModel.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -1,4 +1,4 @@\n-/* BoundedRangeModel.java --\n+/* DefaultColorSelectionModel.java --\n    Copyright (C) 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -35,12 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.colorchooser;\n \n-// Imports\n-import java.awt.*;\n-import java.io.*;\n-import javax.swing.event.*;\n+import java.awt.Color;\n+import java.io.Serializable;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.EventListenerList;\n \n /**\n  * DefaultColorSelectionModel"}, {"sha": "0c86badc764b1763c9684a60df6217544bb154d0", "filename": "libjava/javax/swing/event/AncestorEvent.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n-import javax.swing.*;\n-import java.awt.*;\n+import java.awt.AWTEvent;\n+import java.awt.Container;\n+import javax.swing.JComponent;\n \n /**\n  * Ancestor Event"}, {"sha": "26ccaa81c509de13f1c76ebce545e10d7c450bb8", "filename": "libjava/javax/swing/event/HyperlinkEvent.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,18 +35,20 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n-import java.net.*;\n-import java.util.*;\n+import java.net.URL;\n+import java.util.EventObject;\n+import javax.swing.text.Element;\n \n /**\n  * HyperlinkEvent\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n-public class HyperlinkEvent extends EventObject {\n+public class HyperlinkEvent extends EventObject\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "76f3d89da3d3bbfe34d8bf2aa8ca5c50bd4be076", "filename": "libjava/javax/swing/event/InternalFrameAdapter.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameAdapter.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n /**\n  * InternalFrameAdapter\n  * @author Andrew Selkirk\n  */\n-public class InternalFrameAdapter\textends\t\tObject\n-\t\t\t\t\t\t\t\t\timplements\tInternalFrameListener {\n+public abstract class InternalFrameAdapter implements InternalFrameListener\n+{\n \n \t//-------------------------------------------------------------\n \t// Initialization ---------------------------------------------"}, {"sha": "345568b7b610649177d46858e1dde2108b2968a7", "filename": "libjava/javax/swing/event/InternalFrameEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n import java.awt.AWTEvent;\n import javax.swing.JInternalFrame;\n "}, {"sha": "4c6e39f00a3dc80f9dce4377b33a8df52c1d4a6e", "filename": "libjava/javax/swing/event/ListDataEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FListDataEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FListDataEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FListDataEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n import java.util.EventObject;\n \n /**"}, {"sha": "23caed0a8d906a749830e50e8989c43a957913cf", "filename": "libjava/javax/swing/event/MouseInputAdapter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n import java.awt.event.MouseEvent;\n \n /**"}, {"sha": "9092158df32e7bb89dc4c6dbe33c9a8dcc018fa4", "filename": "libjava/javax/swing/event/SwingPropertyChangeSupport.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FSwingPropertyChangeSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FSwingPropertyChangeSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FSwingPropertyChangeSupport.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -49,6 +49,8 @@\n public final\tclass SwingPropertyChangeSupport\n \t\t\t\textends PropertyChangeSupport {\n \n+  private static final long serialVersionUID = 7162625831330845068L;\n+\n \t//-------------------------------------------------------------\n \t// Variables --------------------------------------------------\n \t//-------------------------------------------------------------"}, {"sha": "c5989558099821a8871de5a0c137533a06227e7c", "filename": "libjava/javax/swing/event/TableModelEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n import java.util.EventObject;\n import javax.swing.table.TableModel;\n "}, {"sha": "e11416dbf1f0b45e5f7dab7a5489ba91f3efcfb3", "filename": "libjava/javax/swing/event/TreeWillExpandListener.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.event;\n \n-// Imports\n import java.util.EventListener;\n+import javax.swing.tree.ExpandVetoException;\n \n /**\n  * TreeWillExpandListener interface"}, {"sha": "7fb7a9e3abb8558589ad2e2ab0cd50a3f7ad8c46", "filename": "libjava/javax/swing/event/UndoableEditEvent.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -48,6 +48,8 @@\n  */\n public class UndoableEditEvent extends EventObject {\n \n+  private static final long serialVersionUID = 4418044561759134484L;\n+\n \t//-------------------------------------------------------------\n \t// Variables --------------------------------------------------\n \t//-------------------------------------------------------------"}, {"sha": "7e0be6d1b06c7643f1bb12f1c1b91c8cd9f6a447", "filename": "libjava/javax/swing/filechooser/FileFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileFilter.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.filechooser;\n \n-// Imports\n-import java.io.*;\n+import java.io.File;\n \n /**\n  * FileFilter"}, {"sha": "759149756fccc8656548c053403c79d807dc2956", "filename": "libjava/javax/swing/filechooser/FileSystemView.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileSystemView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileSystemView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileSystemView.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.filechooser;\n \n-// Imports\n-import java.io.*;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.swing.Icon;\n \n /**\n  * FileSystemView"}, {"sha": "7ff8ab0b9bbd51f37a6dc6cbe5e4796aa9de2383", "filename": "libjava/javax/swing/filechooser/FileView.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.filechooser;\n \n-// Imports\n-import java.io.*;\n-import javax.swing.*;\n+import java.io.File;\n+import javax.swing.Icon;\n \n /**\n  * FileView"}, {"sha": "3dc092db93d7c4b9bb370e6238e55adfb04832df", "filename": "libjava/javax/swing/plaf/BorderUIResource.java", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -67,7 +67,6 @@ public class BorderUIResource\n      */\n     public BorderUIResource(Border delegate)\n     {\n-\tsuper ();\n \tthis.delegate = delegate;\n     }\n \n@@ -128,15 +127,16 @@ public BevelBorderUIResource(int bevelType,\n \t\t\t\t     Color highlight, \n \t\t\t\t     Color shadow) \n \t{\n-\t    super (bevelType);\n+\t  super (bevelType, highlight, shadow);\n \t}\n \tpublic BevelBorderUIResource(int bevelType,\n \t\t\t\t     Color highlightOuter,\n \t\t\t\t     Color highlightInner,\n \t\t\t\t     Color shadowOuter,\n \t\t\t\t     Color shadowInner) \n \t{\n-\t    super (bevelType);\n+\t  super (bevelType, highlightOuter, highlightInner, shadowOuter,\n+\t\t shadowInner);\n \t}\n     }\n \n@@ -191,7 +191,7 @@ public EtchedBorderUIResource(Color highlight, Color shadow)\n \tpublic EtchedBorderUIResource(int etchType, Color highlight, \n \t\t\t\t      Color shadow)\n \t{\n-\t  super (etchType);\n+          super (etchType, highlight, shadow);\n \t}\n \n     }\n@@ -210,7 +210,7 @@ public LineBorderUIResource(Color color)\n \tpublic LineBorderUIResource(Color color,\n \t\t\t\t    int thickness)\n \t{\n-\t   super (color); \n+\t   super (color, thickness);\n \t}\n     }\n \n@@ -224,12 +224,13 @@ public LineBorderUIResource(Color color,\n \tpublic MatteBorderUIResource(int top, int left, int bottom, \n \t\t\t\t     int right, Color color)\n \t{\n-\t  super (top, left, bottom, right, color);\n+          super (new Insets (top, left, bottom, right), color);\n \t}\n \tpublic MatteBorderUIResource(int top, int left, int bottom,\n \t\t\t\t     int right, Icon tileIcon)\n \t{\n-\t  super (top, left, bottom, right, tileIcon);\n+          super (new Insets (top, left, bottom, right), tileIcon);\n+\n \t}\n \tpublic MatteBorderUIResource(Icon tileIcon)\n \t{\n@@ -254,24 +255,24 @@ public MatteBorderUIResource(Icon tileIcon)\n \t}\n \tTitledBorderUIResource(Border border, String title)\n \t{\n-          super (border);\n+          super (border, title);\n \t}\n \tTitledBorderUIResource(Border border, String title,\n \t\t\t       int titleJustification, int titlePosition)\n \t{\n-          super (border);\n+          super (border, title, titleJustification, titlePosition);\n \t}\n \tTitledBorderUIResource(Border border, String title,\n \t\t\t       int titleJustification, int titlePosition,\n \t\t\t       Font titleFont)\n \t{\n-          super (border);\n+          super (border, title, titleJustification, titlePosition, titleFont);\n \t}\n \tTitledBorderUIResource(Border border, String title,\n \t\t\t       int titleJustification, int titlePosition,\n \t\t\t       Font titleFont, Color titleColor)\n \t{\n-          super (border);\n+          super (border, title, titleJustification, titlePosition, titleFont, titleColor);\n \t}\n     }\n }"}, {"sha": "046a7316c93abfdcff7f9136425bc3c11735f368", "filename": "libjava/javax/swing/plaf/basic/BasicDefaults.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicDefaults.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -38,9 +38,12 @@\n \n package javax.swing.plaf.basic;\n \n-import javax.swing.*;\n-import java.awt.*;\n-import javax.swing.border.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import javax.swing.UIDefaults;\n+import javax.swing.border.MatteBorder;\n \n class BasicBorder extends MatteBorder\n {"}, {"sha": "2f7ce40ce87ad53f599714777effca4d751248f1", "filename": "libjava/javax/swing/table/AbstractTableModel.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,14 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.table;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.TableModelEvent;\n+import javax.swing.event.TableModelListener;\n \n /**\n  * AbstractTableModel"}, {"sha": "fdecedd8acfe86f1b393cc043da773534f8472b3", "filename": "libjava/javax/swing/table/DefaultTableCellRenderer.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -37,10 +37,13 @@\n \n \n package javax.swing.table;\n+\n import java.awt.Component;\n import java.io.Serializable;\n import javax.swing.JLabel;\n import javax.swing.JTable;\n+import javax.swing.border.Border;\n+\n /**\n  * STUBBED\n  */"}, {"sha": "2946829f99cc2252e241c4b4e8777ac897a86207", "filename": "libjava/javax/swing/table/DefaultTableColumnModel.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.table;\n \n-// Imports\n-import java.beans.*;\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.io.Serializable;\n+import java.util.Enumeration;\n+import java.util.EventListener;\n+import java.util.Vector;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.ListSelectionEvent;\n+import javax.swing.event.ListSelectionListener;\n+import javax.swing.event.TableColumnModelEvent;\n+import javax.swing.event.TableColumnModelListener;\n \n /**\n  * DefaultTableColumnModel"}, {"sha": "473229bea1d94a350ca04987e1596ef2a452c579", "filename": "libjava/javax/swing/table/DefaultTableModel.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.table;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.io.Serializable;\n+import java.util.Vector;\n+import javax.swing.event.TableModelEvent;\n \n /**\n  * DefaultTableModel"}, {"sha": "d228d8aae92dd79b674e1ed632a7dd97c05c1e8d", "filename": "libjava/javax/swing/table/TableColumn.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.table;\n \n-// Imports\n-import java.beans.*;\n-import java.io.*;\n-import javax.swing.event.*;\n+import java.beans.PropertyChangeListener;\n+import java.io.Serializable;\n+import javax.swing.event.SwingPropertyChangeSupport;\n \n /**\n  * TableColumn"}, {"sha": "a747e99ac89293087636eb4d29a575a849df7613", "filename": "libjava/javax/swing/text/JTextComponent.java", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -43,13 +43,20 @@\n import java.awt.Image;\n import java.awt.Rectangle;\n import java.awt.Point;\n-import javax.accessibility.*;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleText;\n import javax.swing.Icon;\n import javax.swing.JComponent;\n import javax.swing.KeyStroke;\n import javax.swing.Scrollable;\n import javax.swing.UIManager;\n-import javax.swing.event.*;\n+import javax.swing.event.CaretEvent;\n+import javax.swing.event.CaretListener;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n import javax.swing.plaf.TextUI;\n \n public abstract class JTextComponent extends JComponent"}, {"sha": "4362684fda317c71c11af0470e11207840ab6941", "filename": "libjava/javax/swing/tree/AbstractLayoutCache.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FAbstractLayoutCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FAbstractLayoutCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FAbstractLayoutCache.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,18 +35,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.awt.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.awt.Rectangle;\n+import java.util.Enumeration;\n+import javax.swing.event.TreeModelEvent;\n \n /**\n  * AbstractLayoutCache\n  * @author Andrew Selkirk\n  */\n-public abstract class AbstractLayoutCache implements RowMapper {\n+public abstract class AbstractLayoutCache implements RowMapper\n+{\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------"}, {"sha": "01be46aecedc995fc7e90d3763e63ad0d2bc3589", "filename": "libjava/javax/swing/tree/DefaultMutableTreeNode.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.Random;\n+import java.util.Stack;\n+import java.util.Vector;\n \n /**\n  * DefaultMutableTreeNode"}, {"sha": "6d922a424375a8fd8f3c881a57e0e3fb1d00fe80", "filename": "libjava/javax/swing/tree/DefaultTreeCellEditor.java", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellEditor.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,16 +35,29 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.event.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventObject;\n+import javax.swing.Icon;\n+import javax.swing.JTextField;\n+import javax.swing.JTree;\n+import javax.swing.border.Border;\n+import javax.swing.event.CellEditorListener;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.TreeSelectionEvent;\n+import javax.swing.event.TreeSelectionListener;\n \n /**\n  * DefaultTreeCellEditor"}, {"sha": "f0eb454db5ca2b036f77043cf41938aedc8e0693", "filename": "libjava/javax/swing/tree/DefaultTreeCellRenderer.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeCellRenderer.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.awt.*;\n-import javax.swing.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+import javax.swing.Icon;\n+import javax.swing.JLabel;\n+import javax.swing.JTree;\n \n /**\n  * DefaultTreeCellRenderer"}, {"sha": "4f546acca3ea147c1c9eee3938665413f32c8a5c", "filename": "libjava/javax/swing/tree/DefaultTreeModel.java", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,16 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.TreeModelListener;\n \n /**\n  * DefaultTreeModel"}, {"sha": "79f642afc28da3533f04416bca7e827349454a10", "filename": "libjava/javax/swing/tree/DefaultTreeSelectionModel.java", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,14 +35,21 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.beans.*;\n-import java.io.*;\n-import java.util.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n+import java.beans.PropertyChangeListener;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import java.util.Vector;\n+import javax.swing.DefaultListSelectionModel;\n+import javax.swing.event.SwingPropertyChangeSupport;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.TreeSelectionEvent;\n+import javax.swing.event.TreeSelectionListener;\n \n /**\n  * DefaultTreeSelectionModel"}, {"sha": "dae34229c3a87c3caf6d6fa3898833b02867f575", "filename": "libjava/javax/swing/tree/FixedHeightLayoutCache.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FFixedHeightLayoutCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FFixedHeightLayoutCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FFixedHeightLayoutCache.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.awt.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.awt.Rectangle;\n+import java.util.Enumeration;\n+import javax.swing.event.TreeModelEvent;\n \n /**\n  * FixedHeightLayoutCache"}, {"sha": "503cd2d4deb95f6f1ff24ed070e91e4d1377115c", "filename": "libjava/javax/swing/tree/TreeCellEditor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n import java.awt.Component;\n import javax.swing.JTree;\n "}, {"sha": "5c3a12516d6a18f97c0258fbbeb61318e3a1b54d", "filename": "libjava/javax/swing/tree/TreeModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import javax.swing.event.*;\n+import javax.swing.event.TreeModelListener;\n \n /**\n  * TreeModel interface"}, {"sha": "4fd7ec630c6c49e7692c4152434c0527ce5cb998", "filename": "libjava/javax/swing/tree/TreeNode.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.util.*;\n+import java.util.Enumeration;\n \n /**\n  * TreeNode interface"}, {"sha": "ba0a00ba95e16757710488e97d8971db8001faf5", "filename": "libjava/javax/swing/tree/TreePath.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreePath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreePath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreePath.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,13 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n \n /**\n  * TreePath"}, {"sha": "3f28450d86fcc8c2de69a9bbe82a150f67f477fc", "filename": "libjava/javax/swing/tree/TreeSelectionModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n import java.beans.PropertyChangeListener;\n import javax.swing.event.TreeSelectionListener;\n "}, {"sha": "445faa9c230d40ff646577e6c52f7dd352d7821d", "filename": "libjava/javax/swing/tree/VariableHeightLayoutCache.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FVariableHeightLayoutCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Ftree%2FVariableHeightLayoutCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FVariableHeightLayoutCache.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,12 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.tree;\n \n-// Imports\n-import java.awt.*;\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.awt.Rectangle;\n+import java.util.Enumeration;\n+import javax.swing.event.TreeModelEvent;\n \n /**\n  * VariableHeightLayoutCache"}, {"sha": "d845e4341bbe705a5410232623a75fbebf206c40", "filename": "libjava/javax/swing/undo/AbstractUndoableEdit.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FAbstractUndoableEdit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FAbstractUndoableEdit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FAbstractUndoableEdit.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.undo;\n \n-// Imports\n import java.io.Serializable;\n \n /**"}, {"sha": "be612dad77b7a87c1bc8b18492399a9a9c600c75", "filename": "libjava/javax/swing/undo/CompoundEdit.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FCompoundEdit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FCompoundEdit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FCompoundEdit.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,9 +35,9 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.undo;\n \n-// Imports\n import java.util.Vector;\n \n /**"}, {"sha": "6a32fbdb48d1f96ba02aee679b42a1e0517d1264", "filename": "libjava/javax/swing/undo/StateEdit.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FStateEdit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FStateEdit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FStateEdit.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.undo;\n \n-// Imports\n-import java.util.*;\n+import java.util.Hashtable;\n+import java.util.Iterator;\n \n /**\n  * StateEdit"}, {"sha": "56e1c1b72475fb952dd590a5b9390f769f8204af", "filename": "libjava/javax/swing/undo/UndoManager.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FUndoManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FUndoManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FUndoManager.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,10 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.undo;\n \n-// Imports\n-import javax.swing.event.*;\n+import javax.swing.event.UndoableEditEvent;\n+import javax.swing.event.UndoableEditListener;\n \n /**\n  * UndoManager"}, {"sha": "4e12c7c6b169897026ec1499866b9dbba7219bc2", "filename": "libjava/javax/swing/undo/UndoableEditSupport.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEditSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEditSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEditSupport.java?ref=d6c2458f4ec1bce5dc4ee8c61bc03083ca224d7c", "patch": "@@ -35,11 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing.undo;\n \n-// Imports\n-import java.util.*;\n-import javax.swing.event.*;\n+import java.util.Vector;\n+import javax.swing.event.UndoableEditEvent;\n+import javax.swing.event.UndoableEditListener;\n \n /**\n  * UndoableEditSupport"}]}