{"sha": "6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2MWMyYmJhMTEzNTViYTIwNGExNGVhMTk2MjM1ZDVlZWViMWUxZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-11-05T04:04:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-11-05T04:04:04Z"}, "message": "alpha.md (addsi3, subsi3): No new temporaries once cse is no longer expected.\n\n        * alpha.md (addsi3, subsi3): No new temporaries once cse is\n        no longer expected.\n\nFrom-SVN: r23537", "tree": {"sha": "193ccdf22fa935d00929bbdd597d7d4974aeadf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/193ccdf22fa935d00929bbdd597d7d4974aeadf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c61c2bba11355ba204a14ea196235d5eeeb1e1e/comments", "author": null, "committer": null, "parents": [{"sha": "8f5d685581c011dd907c692b63b4e340a6de9b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5d685581c011dd907c692b63b4e340a6de9b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5d685581c011dd907c692b63b4e340a6de9b8d"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "818cff05da8a8521f8cddf9c5ea433bc7212709b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c61c2bba11355ba204a14ea196235d5eeeb1e1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c61c2bba11355ba204a14ea196235d5eeeb1e1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "patch": "@@ -1,3 +1,8 @@\n+Thu Nov  5 04:03:06 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (addsi3, subsi3): No new temporaries once cse is\n+\tno longer expected.\n+\n Thu Nov  5 03:29:19 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.md (addsi3, subsi3): Expand to a DImode temporary so as"}, {"sha": "8ae03e6fcd3b9979bb95c33d0bf567e3cb0a6b80", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c61c2bba11355ba204a14ea196235d5eeeb1e1e/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c61c2bba11355ba204a14ea196235d5eeeb1e1e/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6c61c2bba11355ba204a14ea196235d5eeeb1e1e", "patch": "@@ -427,10 +427,17 @@\n   \"\"\n   \"\n {\n-  rtx tmp = gen_reg_rtx (DImode);\n-  emit_insn (gen_adddi3 (tmp, gen_lowpart (DImode, operands[1]),\n-\t\t\t gen_lowpart (DImode, operands[2])));\n-  emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+  rtx op1 = gen_lowpart (DImode, operands[1]);\n+  rtx op2 = gen_lowpart (DImode, operands[2]);\n+\n+  if (! cse_not_expected)\n+    {\n+      rtx tmp = gen_reg_rtx (DImode);\n+      emit_insn (gen_adddi3 (tmp, op1, op2));\n+      emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+    }\n+  else\n+    emit_insn (gen_adddi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n   DONE;\n } \")\n \n@@ -714,10 +721,17 @@\n   \"\"\n   \"\n {\n-  rtx tmp = gen_reg_rtx (DImode);\n-  emit_insn (gen_subdi3 (tmp, gen_lowpart (DImode, operands[1]),\n-\t\t\t gen_lowpart (DImode, operands[2])));\n-  emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+  rtx op1 = gen_lowpart (DImode, operands[1]);\n+  rtx op2 = gen_lowpart (DImode, operands[2]);\n+\n+  if (! cse_not_expected)\n+    {\n+      rtx tmp = gen_reg_rtx (DImode);\n+      emit_insn (gen_subdi3 (tmp, op1, op2));\n+      emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+    }\n+  else\n+    emit_insn (gen_subdi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n   DONE;\n } \")\n "}]}