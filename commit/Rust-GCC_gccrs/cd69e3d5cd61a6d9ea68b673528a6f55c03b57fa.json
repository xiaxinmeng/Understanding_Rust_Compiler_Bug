{"sha": "cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2OWUzZDVjZDYxYTZkOWVhNjhiNjczNTI4YTZmNTVjMDNiNTdmYQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-18T00:16:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-18T00:16:30Z"}, "message": "Daily bump.", "tree": {"sha": "78506be8ff20927d2a79804350aa4b2f126e83b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78506be8ff20927d2a79804350aa4b2f126e83b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/comments", "author": null, "committer": null, "parents": [{"sha": "35b8d268746362fa66e297c4ae152a9cfafd4bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b8d268746362fa66e297c4ae152a9cfafd4bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b8d268746362fa66e297c4ae152a9cfafd4bb0"}], "stats": {"total": 570, "additions": 569, "deletions": 1}, "files": [{"sha": "79b2e63b852f6a0af6b77aa409ac3838281d7664", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,7 @@\n+2020-12-17  Marius Hillenbrand  <mhillen@linux.ibm.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n 2020-12-15  Nathan Sidwell  <nathan@acm.org>\n \n \t* Makefile.def"}, {"sha": "fe135839b08cc60d6946b2bea35e844afd3ba083", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,24 @@\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* server.cc (crash_signal): Don't use strsignal.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98300\n+\t* configure.ac: Check for sys/mman.h.\n+\t* resolver.cc: Don't assume mmap, O_CLOEXEC are available.  Use\n+\txmalloc.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n+2020-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (version): Remove variable.\n+\t(gcc_version): New variable.\n+\t(libexecsubdir): Use $(gcc_version) instead of $(version).\n+\t* configure: Regenerated.\n+\n 2020-12-16  Nathan Sidwell  <nathan@acm.org>\n \n \t* Makefile.in (INSTALL): Replace with ..."}, {"sha": "13fa4683af5d8a28ae65739985d81cd8116b7cb5", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,8 @@\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98300\n+\t* gcc_update: Add c++tools/config.h.in.\n+\n 2020-12-15  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc_update: Add c++tools & libcody."}, {"sha": "71e8f52caa9a35582b2e3bfe14b0cc351cfb7c80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,72 @@\n+2020-12-17  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/arm/arm-cpus.in: Add Cortex-A78C core.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* doc/invoke.texi: Update docs.\n+\n+2020-12-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98347\n+\t* rtl-ssa/access-utils.h (full_register): Use regno_reg_rtx\n+\tinstead of reg_raw_mode.\n+\n+2020-12-17  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* targhooks.h (default_estimated_poly_value): Updated.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* doc/invoke.texi (C++ Modules): Document lack of std\n+\tlibrary header units.\n+\n+2020-12-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* target.h (enum poly_value_estimate_kind): Define.\n+\t(estimated_poly_value): Take an estimate kind argument.\n+\t* target.def (estimated_poly_value): Update definition for the\n+\tabove.\n+\t* doc/tm.texi: Regenerate.\n+\t* targhooks.c (estimated_poly_value): Update prototype.\n+\t* tree-vect-loop.c (vect_better_loop_vinfo_p): Use min, max and\n+\tlikely estimates of VF to pick between vinfos.\n+\t* config/aarch64/aarch64.c (aarch64_cmp_autovec_modes): Use\n+\testimated_poly_value instead of aarch64_estimated_poly_value.\n+\t(aarch64_estimated_poly_value): Take a kind argument and handle\n+\tit.\n+\n+2020-12-17  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* config/arm/arm_neon.h (vcreate_p64): Remove call to\n+\t'__builtin_neon_vcreatedi'.\n+\n+2020-12-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/97750\n+\t* range-op.cc (operator_cast::op1_range): Handle pointers better.\n+\n+2020-12-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* rtl-ssa.h: Include memmodel.h before tm_p.h.\n+\n+2020-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/98289\n+\t* shrink-wrap.c (can_get_prologue): Don't punt on EDGE_CROSSING\n+\tincoming edges.\n+\n+2020-12-17  Marius Hillenbrand  <mhillen@linux.ibm.com>\n+\n+\t* configure.ac: Change --enable-s390-excess-float-precision\n+\tdefault behavior for cross compiles with target headers.\n+\t* configure: Regenerate.\n+\t* doc/install.texi: Adjust documentation.\n+\n+2020-12-17  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (*ashlsi3_1, *ashlsi3_3x, *ashrsi3_3x)\n+\t(*lshrsi3_3x): New patterns.\n+\n 2020-12-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* fwprop.c: Rewrite to use the RTL SSA framework."}, {"sha": "901c533e314d7b358451a100fed36b095af9a71d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1 +1 @@\n-20201217\n+20201218"}, {"sha": "5ce188d14fa11ff783d5f08e7e551d5fb2b2fe88", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 370, "deletions": 0, "changes": 370, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,373 @@\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* libgnat/a-tags.ads, libgnat/a-tags.adb (CW_Membership): Move\n+\tto spec to allow inlining.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* checks.adb: Remove, not used.\n+\t* checks.ads: Likewise.\n+\t* exp_ch6.adb: Likewise.\n+\t* exp_ch7.adb: Likewise.\n+\t* exp_ch7.ads: Likewise.\n+\t* exp_fixd.adb: Likewise.\n+\t* exp_tss.adb: Likewise.\n+\t* exp_tss.ads: Likewise.\n+\t* exp_util.adb: Likewise.\n+\t* exp_util.ads: Likewise.\n+\t* gnat1drv.adb: Likewise.\n+\t* libgnat/s-finmas.adb: Likewise.\n+\t* libgnat/s-finmas.ads: Likewise.\n+\t* libgnat/system-aix.ads: Likewise.\n+\t* libgnat/system-darwin-arm.ads: Likewise.\n+\t* libgnat/system-darwin-ppc.ads: Likewise.\n+\t* libgnat/system-darwin-x86.ads: Likewise.\n+\t* libgnat/system-djgpp.ads: Likewise.\n+\t* libgnat/system-dragonfly-x86_64.ads: Likewise.\n+\t* libgnat/system-freebsd.ads: Likewise.\n+\t* libgnat/system-hpux-ia64.ads: Likewise.\n+\t* libgnat/system-hpux.ads: Likewise.\n+\t* libgnat/system-linux-alpha.ads: Likewise.\n+\t* libgnat/system-linux-arm.ads: Likewise.\n+\t* libgnat/system-linux-hppa.ads: Likewise.\n+\t* libgnat/system-linux-ia64.ads: Likewise.\n+\t* libgnat/system-linux-m68k.ads: Likewise.\n+\t* libgnat/system-linux-mips.ads: Likewise.\n+\t* libgnat/system-linux-ppc.ads: Likewise.\n+\t* libgnat/system-linux-riscv.ads: Likewise.\n+\t* libgnat/system-linux-s390.ads: Likewise.\n+\t* libgnat/system-linux-sh4.ads: Likewise.\n+\t* libgnat/system-linux-sparc.ads: Likewise.\n+\t* libgnat/system-linux-x86.ads: Likewise.\n+\t* libgnat/system-lynxos178-ppc.ads: Likewise.\n+\t* libgnat/system-lynxos178-x86.ads: Likewise.\n+\t* libgnat/system-mingw.ads: Likewise.\n+\t* libgnat/system-qnx-aarch64.ads: Likewise.\n+\t* libgnat/system-rtems.ads: Likewise.\n+\t* libgnat/system-solaris-sparc.ads: Likewise.\n+\t* libgnat/system-solaris-x86.ads: Likewise.\n+\t* libgnat/system-vxworks-arm-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks-arm-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks-arm.ads: Likewise.\n+\t* libgnat/system-vxworks-e500-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks-e500-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks-e500-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks-e500-vthread.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc-ravenscar.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc-vthread.ads: Likewise.\n+\t* libgnat/system-vxworks-ppc.ads: Likewise.\n+\t* libgnat/system-vxworks-x86-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks-x86-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks-x86-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks-x86-vthread.ads: Likewise.\n+\t* libgnat/system-vxworks-x86.ads: Likewise.\n+\t* libgnat/system-vxworks7-aarch64-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-aarch64.ads: Likewise.\n+\t* libgnat/system-vxworks7-arm-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-arm.ads: Likewise.\n+\t* libgnat/system-vxworks7-e500-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks7-e500-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-e500-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks7-ppc-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks7-ppc-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-ppc-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks7-ppc64-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks7-ppc64-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-x86-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks7-x86-rtp-smp.ads: Likewise.\n+\t* libgnat/system-vxworks7-x86-rtp.ads: Likewise.\n+\t* libgnat/system-vxworks7-x86_64-kernel.ads: Likewise.\n+\t* libgnat/system-vxworks7-x86_64-rtp-smp.ads: Likewise.\n+\t* repinfo.adb: Likewise.\n+\t* repinfo.ads: Likewise.\n+\t* rtsfind.ads: Likewise.\n+\t* sem_aux.adb: Likewise.\n+\t* sem_aux.ads: Likewise.\n+\t* sem_ch13.adb: Likewise.\n+\t* sem_ch13.ads: Likewise.\n+\t* sem_util.adb (Validity_Checks_Suppressed, TSS,\n+\tIs_All_Null_Statements, Known_Non_Negative,\n+\tNon_Limited_Designated_Type, Get_Binary_Nkind, Get_Unary_Nkind,\n+\tIs_Protected_Operation, Number_Components, Package_Body,\n+\tValidate_Independence, Independence_Checks): Likewise; update\n+\tcomments.\n+\t* targparm.adb: Likewise.\n+\t* targparm.ads (AAM, AAM_Str, Fractional_Fixed_Ops,\n+\tFrontend_Layout, Make_Detach_Call, Target_Has_Fixed_Ops, Detach,\n+\tBack_End_Layout, Create_Dynamic_SO_Ref, Get_Dynamic_SO_Entity,\n+\tIs_Dynamic_SO_Ref, Is_Static_SO_Ref,\n+\tFractional_Fixed_Ops_On_Target): Likewise.\n+\t* validsw.adb (Save_Validity_Check_Options,\n+\tSet_Default_Validity_Check_Options): Likewise.\n+\t* validsw.ads: Likewise.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* symbols.ads, symbols.adb: Removed no longer used.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_util.adb (New_Requires_Transient_Scope): Renamed\n+\tRequires_Transient_Scope.\n+\t(Requires_Transient_Scope, Old_Requires_Transient_Scope,\n+\tResults_Differ): Removed.\n+\t* debug.adb: Remove -gnatdQ.\n+\n+2020-12-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* libgnat/s-valrea.adb (Need_Extra): Fix comment.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Case_Statement): Move modification of\n+\tUnblocked_Exit_Count after early return statements; fix typo in\n+\tcomment.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Case_Statement): Change local variable\n+\tExp to constant; remove unreferenced Last_Choice variable;\n+\treduce scope of other variables.\n+\t(Analyze_If_Statement): Reduce scope of a local variable; add\n+\tcomment.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* opt.ads (Multiple_Unit_Index): Refine type from Int to Nat.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_util.adb (In_Check_Node): Add guard and rename Node to\n+\tPar, just like it is done in surrounding routines, e.g.\n+\tIn_Assertion_Expression_Pragma and In_Generic_Formal_Package.\n+\n+2020-12-17  Bob Duff  <duff@adacore.com>\n+\n+\t* libgnat/a-cbdlli.adb, libgnat/a-cbdlli.ads,\n+\tlibgnat/a-cdlili.adb, libgnat/a-cdlili.ads,\n+\tlibgnat/a-cidlli.adb, libgnat/a-cidlli.ads,\n+\tlibgnat/a-cobove.adb, libgnat/a-cobove.ads,\n+\tlibgnat/a-coinve.adb, libgnat/a-coinve.ads,\n+\tlibgnat/a-convec.adb, libgnat/a-convec.ads: Add *_Vector\n+\toperations, remove default for Count, rename Append_One to be\n+\tAppend.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Declare_Expression): Need to establish a\n+\ttransient scope in case Expression (N) requires actions to be\n+\twrapped.  Code cleanup.\n+\t* exp_ch7.adb, exp_ch11.adb: Code cleanup.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* par-ch3.adb (P_Identifier_Declarations): Reuse\n+\tError_Msg_Ada_2020_Feature for object renaming without subtype.\n+\t* par-ch4.adb (P_Primary): Likewise for target name.\n+\t(P_Iterated_Component_Association): Likewise for iterated\n+\tcomponent.\n+\t(P_Declare_Expression): Likewise for declare expression.\n+\t* par-ch6.adb (P_Formal_Part): Likewise for aspect on formal\n+\tparameter.\n+\t* sem_aggr.adb (Resolve_Delta_Aggregate): Ditto.\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Reuse\n+\tError_Msg_Ada_2020_Feature.\n+\t* sem_ch13.adb (Validate_Aspect_Aggregate): Reuse\n+\tError_Msg_Ada_2020_Feature; use lower case for \"aspect\" and\n+\tdon't use underscore for \"Ada_2020\"; don't give up on analysis\n+\tin Ada 2012 mode.\n+\t(Validate_Aspect_Stable_Properties): Reuse\n+\tError_Msg_Ada_2020_Feature; use lower case for \"aspect\"; minor\n+\tstyle fixes.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): Request a compile\n+\ttime error replacement in Apply_Compile_Time_Constraint_Error\n+\tin case of an invalid field.\n+\t* sem_ch3.adb (Create_Constrained_Components): Take advantage of\n+\tGather_Components also in the case of a record extension and\n+\talso constrain records in the case of compile time known discriminant\n+\tvalues, as already done in gigi.\n+\t* sem_util.ads, sem_util.adb (Gather_Components): New parameter\n+\tAllow_Compile_Time to allow compile time known (but non static)\n+\tdiscriminant values, needed by Create_Constrained_Components,\n+\tand new parameter Include_Interface_Tag.\n+\t(Is_Dependent_Component_Of_Mutable_Object): Use Original_Node to\n+\tperform check on the original tree.\n+\t(Is_Object_Reference): Likewise.  Only call Original_Node when\n+\trelevant via a new function Safe_Prefix.\n+\t(Is_Static_Discriminant_Component, In_Check_Node): New.\n+\t(Is_Actual_Out_Or_In_Out_Parameter): New.\n+\t* exp_ch4.adb (Expand_N_Selected_Component): Remove no longer needed\n+\tcode preventing evaluating statically discriminants in more cases.\n+\t* exp_ch5.adb (Expand_N_Loop_Statement): Simplify expansion of loops\n+\twith an N_Raise_xxx_Error node to avoid confusing the code generator.\n+\t(Make_Component_List_Assign): Try to find a constrained type to\n+\textract discriminant values from, so that the case statement\n+\tbuilt gets an opportunity to be folded by\n+\tExpand_N_Case_Statement.\n+\t(Expand_Assign_Record): Update comments, code cleanups.\n+\t* sem_attr.adb (Analyze_Attribute): Perform most of the analysis\n+\ton the original prefix node to deal properly with a prefix rewritten\n+\tas a N_Raise_xxx_Error.\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Handle properly\n+\ta discrete subtype definition being rewritten as N_Raise_xxx_Error.\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Handle N_Raise_xxx_Error\n+\tnodes as part of the expression being renamed.\n+\t* sem_eval.ads, sem_eval.adb (Fold, Eval_Selected_Component): New.\n+\t(Compile_Time_Known_Value, Expr_Value, Expr_Rep_Value): Evaluate\n+\tstatic discriminant component values.\n+\t* sem_res.adb (Resolve_Selected_Component): Call\n+\tEval_Selected_Component.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Unchecked_Type_Conversion): Remove\n+\tfolding of discrete values.\n+\t* exp_intr.adb (Expand_Unc_Conversion): Analyze, resolve and\n+\tevaluate (if possible) calls to instances of\n+\tAda.Unchecked_Conversion after they have been expanded into\n+\tN_Unchecked_Type_Conversion.\n+\t* sem_eval.adb (Eval_Unchecked_Conversion): Add folding of\n+\tdiscrete values.\n+\n+2020-12-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* Makefile.rtl (GNATRTL_NONTASKING_OBJS): Likewise.\n+\t* exp_imgv.adb (Expand_Value_Attribute): Use RE_Value_Long_Float in\n+\tlieu of RE_Value_Long_Long_Float as fallback for fixed-point types.\n+\tAlso use it for Long_Long_Float if it has same size as Long_Float.\n+\t* libgnat/s-imgrea.adb: Replace Powten_Table with Powen_LLF.\n+\t* libgnat/s-powflt.ads: New file.\n+\t* libgnat/s-powlfl.ads: Likewise.\n+\t* libgnat/s-powtab.ads: Rename to...\n+\t* libgnat/s-powllf.ads: ...this.\n+\t* libgnat/s-valflt.ads: Add with clause for System.Powten_Flt and\n+\tpass its table as actual parameter to System.Val_Real.\n+\t* libgnat/s-vallfl.ads: Likewise for System.Powten_LFlt.\n+\t* libgnat/s-valllf.ads: Likewise for System.Powten_LLF.\n+\t* libgnat/s-valrea.ads: Add Maxpow and Powten_Address parameters.\n+\t* libgnat/s-valrea.adb: Add pragma Warnings (Off).\n+\t(Need_Extra): New boolean constant.\n+\t(Precision_Limit): Set it according to Need_Extra.\n+\t(Impl): Adjust actual parameter.\n+\t(Integer_to_Rea): Add assertion on the machine radix. Take into\n+\taccount the extra digit only if Need_Extra is true.  Reimplement\n+\tthe computation of the final value for bases 2, 4, 8, 10 and 16.\n+\t* libgnat/s-valued.adb (Impl): Adjust actual parameter.\n+\t(Scan_Decimal): Add pragma Unreferenced.\n+\t(Value_Decimal): Likewise.\n+\t* libgnat/s-valuef.adb (Impl): Adjust actual parameter.\n+\t* libgnat/s-valuer.ads (Floating): Remove.\n+\t(Round): New formal parameter.\n+\t* libgnat/s-valuer.adb (Round_Extra): New procedure.\n+\t(Scan_Decimal_Digits): Use it to round the extra digit if Round\n+\tis set to True in the instantiation.\n+\t(Scan_Integral_Digits): Likewise.\n+\n+2020-12-17  Erwan Le Guillou  <leguillou@adacore.com>\n+\n+\t* libgnat/system-lynxos178-ppc.ads,\n+\tlibgnat/system-lynxos178-x86.ads: Fix small typo in comments.\n+\n+2020-12-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_dbug.adb (Get_Encoded_Name): Generate encodings for fixed\n+\tpoint types only if -fgnat-encodings=all is specified.\n+\n+2020-12-17  Justin Squirek  <squirek@adacore.com>\n+\n+\t* checks.adb (Build_Discriminant_Checks): Add condition to\n+\treplace references to the current instance of the type when we\n+\tare within an Init_Proc.\n+\t(Replace_Current_Instance): Examine a given node and replace the\n+\tcurrent instance of the type with the corresponding _init\n+\tformal.\n+\t(Search_And_Replace_Current_Instance): Traverse proc which calls\n+\tReplace_Current_Instance in order to replace all references\n+\twithin a given expression.\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* par-ch12.adb (P_Formal_Derived_Type_Definition): Complain\n+\tabout formal type with aspect specification, which only become\n+\tlegal in Ada 2020.\n+\t* par-ch9.adb (P_Protected_Operation_Declaration_Opt): Reuse\n+\tError_Msg_Ada_2005_Extension.\n+\t(P_Entry_Declaration): Likewise.\n+\t* scng.adb (Scan): Improve diagnostics for target_name; emit\n+\terror, but otherwise continue in earlier than Ada 2020 modes.\n+\n+2020-12-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* libgnat/a-cbsyqu.ads (Implementation): Provide a box\n+\tinitialization for the element array used internally to\n+\trepresent the queue, so that its components are properly\n+\tinitialized if the given element type has default\n+\tinitialization. Suppress warnings on the rest of the package in\n+\tcase the element type has no default or discriminant, because it\n+\tis bound to be confusing to the user.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_util.adb (Inherit_Predicate_Flags): No-op before Ada 2012.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch7.adb (Make_Final_Call, Make_Init_Call): Take protected\n+\ttypes into account.\n+\t* sem_util.ads: Fix typo.\n+\n+2020-12-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* checks.adb: Rework error messages.\n+\t* exp_ch3.adb: Likewise.\n+\t* freeze.adb: Likewise.\n+\t* lib-load.adb: Likewise.\n+\t* par-ch12.adb: Likewise.\n+\t* par-ch3.adb: Likewise.\n+\t* par-ch4.adb: Likewise.\n+\t* par-ch9.adb: Likewise.\n+\t* sem_aggr.adb: Likewise.\n+\t* sem_attr.adb: Likewise.\n+\t* sem_cat.adb: Likewise.\n+\t* sem_ch10.adb: Likewise.\n+\t* sem_ch12.adb: Likewise.\n+\t(Instantiate_Type): Fix CODEFIX comment, applicable only on\n+\tcontinuation message, and identify the second message as a\n+\tcontinuation.\n+\t* sem_ch13.adb: Rework error messages.\n+\t* sem_ch3.adb: Likewise.\n+\t* sem_ch4.adb: Likewise.\n+\t* sem_ch5.adb: Likewise.\n+\t* sem_ch6.adb: Likewise.\n+\t* sem_ch8.adb: Likewise.\n+\t* sem_ch9.adb: Likewise.\n+\t* sem_prag.adb: Likewise.\n+\t* sem_res.adb: Likewise.\n+\t* sem_util.adb: Likewise.\n+\t(Wrong_Type): Fix CODEFIX comment, applicable only on\n+\tcontinuation message, and identify the second message as a\n+\tcontinuation.\n+\t* symbols.adb: Rework error messages.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_attr.adb (OK_Self_Reference): Return True if node does not\n+\tcome from source (e.g. a rewritten aggregate).\n+\n+2020-12-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch13.adb (Parse_Aspect_Stable_Properties): Fix style;\n+\tlimit the scope of local variables; remove extra assignment in\n+\tExtract_Entity.\n+\t(Validate_Aspect_Stable_Properties): Simplify with procedural\n+\tNext.\n+\n 2020-12-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* ali.ads, ali.adb, bindo-writers.adb, lib-writ.adb (Scope):"}, {"sha": "102f9f13e40c6ff1f5c26e06f70e0deed49f89b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,14 @@\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98340\n+\t* module.cc (uintset<T>::hash::add): Use uintset (0u).MEMBER,\n+\trather than uintset::MEMBER.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98300\n+\t* module.cc: Fix ::read, ::write result signedness comparisons.\n+\n 2020-12-16  Nathan Sidwell  <nathan@acm.org>\n \n \t* mapper-resolver.cc: Remove early include of"}, {"sha": "ef7aa4461ba532b5b41c26d989ec0af34c06f6dc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,15 @@\n+2020-12-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92587\n+\t* match.c (gfc_match_assignment): Move gfc_find_vtab call from here ...\n+\t* resolve.c (gfc_resolve_code): ... to here.\n+\n+2020-12-17  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98307\n+\t* trans-stmt.c (check_forall_dependencies): Extend dependency\n+\tcheck to allocatable components of derived types.\n+\n 2020-12-16  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/98284"}, {"sha": "934e5db954b3dc0fb022835c7a693ff981184656", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,36 @@\n+2020-12-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/pr97750.c: New.\n+\n+2020-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/98289\n+\t* gcc.target/i386/pr98289.c: New test.\n+\t* gcc.dg/torture/pr98289.c: New test.\n+\n+2020-12-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat.dg/debug15.adb: Remove fragile testcase.\n+\n+2020-12-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat.dg/interface6.adb, gnat.dg/not_null.adb,\n+\tgnat.dg/protected_func.adb: Adjust error messages.\n+\n+2020-12-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92587\n+\t* gfortran.dg/finalize_37.f90: New test.\n+\n+2020-12-17  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98307\n+\t* gfortran.dg/forall_19.f90: New test.\n+\n+2020-12-17  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* gcc.target/xtensa/shifts.c: New test.\n+\n 2020-12-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/rtl/x86_64/test-return-const.c.before-fwprop.c: Don't"}, {"sha": "ed60e67f757cfc8769d4a72344a876d625002d48", "filename": "libcody/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,13 @@\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* configure.ac: Add --enable-host-shared.\n+\t* Makefile.in: Add FLAGPIC.\n+\t* configure: Regenerated.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* fatal.cc (HCF): Remove nop breakpoint lander.\n+\n 2020-12-16  Nathan Sidwell  <nathan@acm.org>\n \n \t* cody.hh: Allow user to set CODY_NETWORKING."}, {"sha": "467daa6905256e82fb2ab4a74215de78284dcbf3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cd69e3d5cd61a6d9ea68b673528a6f55c03b57fa", "patch": "@@ -1,3 +1,36 @@\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* config/os/djgpp/error_constants.h: Test POSIX errno macros\n+\tdirectly, instead of corresponding _GLIBCXX_HAVE_EXXX macros.\n+\t* config/os/mingw32-w64/error_constants.h: Likewise.\n+\t* config/os/mingw32/error_constants.h: Likewise.\n+\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_gthreads_timed):\n+\tFix condition for _GTHREAD_USE_MUTEX_TIMEDLOCK test.\n+\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/mutex.cc (std::once_flag::_M_finish): Add\n+\tmaybe_unused attribute to variable used in assertion.\n+\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/98344\n+\t* include/bits/semaphore_base.h: Fix preprocessor condition.\n+\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/std_thread.h (hash<thread::id>): Move here,\n+\tfrom ...\n+\t* include/std/thread (hash<thread::id>): ... here.\n+\n+2020-12-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-12-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* Makefile.in: Regenerate."}]}