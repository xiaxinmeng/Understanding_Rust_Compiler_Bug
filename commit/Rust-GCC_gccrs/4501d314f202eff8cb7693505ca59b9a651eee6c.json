{"sha": "4501d314f202eff8cb7693505ca59b9a651eee6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwMWQzMTRmMjAyZWZmOGNiNzY5MzUwNWNhNTliOWE2NTFlZWU2Yw==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2005-12-05T08:44:17Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2005-12-05T08:44:17Z"}, "message": "i386.c (enum ix86_builtins): Remove IX86_BUILTIN_CMPNEPS and IX86_BUILTIN_CMPNESS.\n\n2005-12-05  Jan Beulich  <jbeulich@novell.com>\n\n\t* config/i386/i386.c (enum ix86_builtins): Remove IX86_BUILTIN_CMPNEPS\n\tand IX86_BUILTIN_CMPNESS.\n\t(ix86_init_mmx_sse_builtins): Remove ti_ftype_ti_ti.\n\t* config/i386/i386.h (ALIGN_MODE_128): Don't check TFmode explicitly.\n\t* config/i386/i386.md (movti_internal): Correct type attribute.\n\tSimplify mode attribute.\n\t(movti_rex64, movsf_1, movdf_nointeger, movdf_integer, movtf_internal):\n\tCorrect type attribute.\n\t(absxf2): Correct operator.\n\t* config/i386/mmx.md (mov<mode>_internal_rex64, mov<mode>_internal,\n\tmovv2sf_internal_rex64, movv2sf_internal): Correct type attribute.\n\t* config/i386/sse.md (mov<mode>_internal, movv2df_internal): Simplify\n\tmode attribute.\n\t(sse2_vmsqrtv2df2): Correct mode attribute.\n\nFrom-SVN: r108048", "tree": {"sha": "e6891a5e5bcf5df1c7a70597038d32c9a8392d13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6891a5e5bcf5df1c7a70597038d32c9a8392d13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4501d314f202eff8cb7693505ca59b9a651eee6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4501d314f202eff8cb7693505ca59b9a651eee6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4501d314f202eff8cb7693505ca59b9a651eee6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4501d314f202eff8cb7693505ca59b9a651eee6c/comments", "author": null, "committer": null, "parents": [{"sha": "51094457ec3361ca6e5c8a14d42810ae13515c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51094457ec3361ca6e5c8a14d42810ae13515c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51094457ec3361ca6e5c8a14d42810ae13515c95"}], "stats": {"total": 124, "additions": 53, "deletions": 71}, "files": [{"sha": "ea5a9c9e25de4cf4df7ba1f3f20194c24647e403", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -1,3 +1,20 @@\n+2005-12-05  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* config/i386/i386.c (enum ix86_builtins): Remove IX86_BUILTIN_CMPNEPS\n+\tand IX86_BUILTIN_CMPNESS.\n+\t(ix86_init_mmx_sse_builtins): Remove ti_ftype_ti_ti.\n+\t* config/i386/i386.h (ALIGN_MODE_128): Don't check TFmode explicitly.\n+\t* config/i386/i386.md (movti_internal): Correct type attribute.\n+\tSimplify mode attribute.\n+\t(movti_rex64, movsf_1, movdf_nointeger, movdf_integer, movtf_internal):\n+\tCorrect type attribute.\n+\t(absxf2): Correct operator.\n+\t* config/i386/mmx.md (mov<mode>_internal_rex64, mov<mode>_internal,\n+\tmovv2sf_internal_rex64, movv2sf_internal): Correct type attribute.\n+\t* config/i386/sse.md (mov<mode>_internal, movv2df_internal): Simplify\n+\tmode attribute.\n+\t(sse2_vmsqrtv2df2): Correct mode attribute.\n+\n 2005-12-05  Jan Beulich  <jbeulich@novell.com>\n \n \t* config/ia64/ia64.md (rotlsi3_internal): Don't split if rotating by"}, {"sha": "c7f9e2195b5e980185dcfd5b14dee5f31efe17e0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -13469,7 +13469,6 @@ enum ix86_builtins\n   IX86_BUILTIN_CMPNGEPS,\n   IX86_BUILTIN_CMPORDPS,\n   IX86_BUILTIN_CMPUNORDPS,\n-  IX86_BUILTIN_CMPNEPS,\n   IX86_BUILTIN_CMPEQSS,\n   IX86_BUILTIN_CMPLTSS,\n   IX86_BUILTIN_CMPLESS,\n@@ -13480,7 +13479,6 @@ enum ix86_builtins\n   IX86_BUILTIN_CMPNGESS,\n   IX86_BUILTIN_CMPORDSS,\n   IX86_BUILTIN_CMPUNORDSS,\n-  IX86_BUILTIN_CMPNESS,\n \n   IX86_BUILTIN_COMIEQSS,\n   IX86_BUILTIN_COMILTSS,\n@@ -14423,9 +14421,6 @@ ix86_init_mmx_sse_builtins (void)\n     = build_function_type_list (integer_type_node,\n \t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n \n-  tree ti_ftype_ti_ti\n-    = build_function_type_list (intTI_type_node,\n-\t\t\t\tintTI_type_node, intTI_type_node, NULL_TREE);\n   tree void_ftype_pcvoid\n     = build_function_type_list (void_type_node, const_ptr_type_node, NULL_TREE);\n   tree v4sf_ftype_v4si\n@@ -14592,9 +14587,6 @@ ix86_init_mmx_sse_builtins (void)\n \tcase V2DFmode:\n \t  type = v2df_ftype_v2df_v2df;\n \t  break;\n-\tcase TImode:\n-\t  type = ti_ftype_ti_ti;\n-\t  break;\n \tcase V4SFmode:\n \t  type = v4sf_ftype_v4sf_v4sf;\n \t  break;"}, {"sha": "e0dbd6b1c438c055a018d989e7e0cfcfbf0d3c76", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -576,7 +576,7 @@ extern int x86_prefetch_sse;\n \n /* Decide whether a variable of mode MODE should be 128 bit aligned.  */\n #define ALIGN_MODE_128(MODE) \\\n- ((MODE) == XFmode || (MODE) == TFmode || SSE_REG_MODE_P (MODE))\n+ ((MODE) == XFmode || SSE_REG_MODE_P (MODE))\n \n /* The published ABIs say that doubles should be aligned on word\n    boundaries, so lower the alignment for structure fields unless"}, {"sha": "d0bfc8a38cc546c70e2c21ed9d49e6a14c68a96d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -2148,24 +2148,16 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n-        (cond [(eq (symbol_ref \"TARGET_SSE2\") (const_int 0))\n+\t(cond [(ior (eq (symbol_ref \"TARGET_SSE2\") (const_int 0))\n+\t\t    (ne (symbol_ref \"optimize_size\") (const_int 0)))\n \t\t (const_string \"V4SF\")\n-\n-\t       (eq_attr \"alternative\" \"0,1\")\n-\t\t (if_then_else\n-\t\t   (ne (symbol_ref \"optimize_size\")\n-\t\t       (const_int 0))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"TI\"))\n-\t       (eq_attr \"alternative\" \"2\")\n-\t\t (if_then_else\n-\t\t   (ne (symbol_ref \"optimize_size\")\n-\t\t       (const_int 0))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"TI\"))]\n-\t       (const_string \"TI\")))])\n+\t       (and (eq_attr \"alternative\" \"2\")\n+\t\t    (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t(const_int 0)))\n+\t\t (const_string \"V4SF\")]\n+\t      (const_string \"TI\")))])\n \n (define_insn \"*movti_rex64\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o,x,x,xm\")\n@@ -2193,7 +2185,7 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"*,*,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"*,*,sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n         (cond [(eq_attr \"alternative\" \"2,3\")\n \t\t (if_then_else\n@@ -2330,7 +2322,7 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,fmov,fmov,imov,imov,ssemov,ssemov,ssemov,ssemov,mmxmov,mmxmov,mmxmov\")\n+  [(set_attr \"type\" \"fmov,fmov,fmov,imov,imov,sselog1,ssemov,ssemov,ssemov,mmxmov,mmxmov,mmxmov\")\n    (set (attr \"mode\")\n         (cond [(eq_attr \"alternative\" \"3,4,9,10\")\n \t\t (const_string \"SI\")\n@@ -2512,7 +2504,7 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,ssemov,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,sselog1,ssemov,ssemov,ssemov\")\n    (set (attr \"mode\")\n         (cond [(eq_attr \"alternative\" \"0,1,2\")\n \t\t (const_string \"DF\")\n@@ -2633,7 +2625,7 @@\n       gcc_unreachable();\n     }\n }\n-  [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,ssemov,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"fmov,fmov,fmov,multi,multi,sselog1,ssemov,ssemov,ssemov\")\n    (set (attr \"mode\")\n         (cond [(eq_attr \"alternative\" \"0,1,2\")\n \t\t (const_string \"DF\")\n@@ -2944,7 +2936,7 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"*,*,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"*,*,sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n         (cond [(eq_attr \"alternative\" \"2,3\")\n \t\t (if_then_else\n@@ -9703,7 +9695,7 @@\n \n (define_expand \"absxf2\"\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"\")\n-\t(neg:XF (match_operand:XF 1 \"nonimmediate_operand\" \"\")))]\n+\t(abs:XF (match_operand:XF 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\"\n   \"ix86_expand_fp_absneg_operator (ABS, XFmode, operands); DONE;\")\n "}, {"sha": "e9bfb65042ce1e1fb5c0e79338d7e85bcdca4cbc", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -82,7 +82,7 @@\n     movq\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,ssemov,ssemov\")\n    (set_attr \"unit\" \"*,*,*,*,*,mmx,mmx,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI\")])\n \n@@ -108,7 +108,7 @@\n     movlps\\t{%1, %0|%0, %1}\n     #\n     #\"\n-  [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov,*,*\")\n+  [(set_attr \"type\" \"mmx,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,sselog1,ssemov,ssemov,ssemov,*,*\")\n    (set_attr \"unit\" \"*,*,*,mmx,mmx,*,*,*,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,TI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n@@ -142,7 +142,7 @@\n     movlps\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+  [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,sselog1,ssemov,ssemov,ssemov,ssemov\")\n    (set_attr \"unit\" \"*,*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n@@ -165,7 +165,7 @@\n     movlps\\t{%1, %0|%0, %1}\n     #\n     #\"\n-  [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,*,*\")\n+  [(set_attr \"type\" \"mmx,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,ssemov,*,*\")\n    (set_attr \"unit\" \"*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n "}, {"sha": "8fc3da069e23c86d72137bfae87a8aa4a9868876", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 36, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4501d314f202eff8cb7693505ca59b9a651eee6c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4501d314f202eff8cb7693505ca59b9a651eee6c", "patch": "@@ -81,24 +81,14 @@\n }\n   [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n-\t(cond [(eq (symbol_ref \"TARGET_SSE2\") (const_int 0))\n-\t\t (const_string \"V4SF\")\n-\n-\t       (eq_attr \"alternative\" \"0,1\")\n-\t\t (if_then_else\n-\t\t   (ne (symbol_ref \"optimize_size\")\n-\t\t       (const_int 0))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"TI\"))\n-\t       (eq_attr \"alternative\" \"2\")\n-\t\t (if_then_else\n-\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n-\t\t\t    (const_int 0))\n-\t\t\t(ne (symbol_ref \"optimize_size\")\n-\t\t\t    (const_int 0)))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"TI\"))]\n-\t       (const_string \"TI\")))])\n+\t(if_then_else\n+\t  (ior (ior (ne (symbol_ref \"optimize_size\") (const_int 0))\n+\t\t    (eq (symbol_ref \"TARGET_SSE2\") (const_int 0)))\n+\t       (and (eq_attr \"alternative\" \"2\")\n+\t  \t    (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t        (const_int 0))))\n+\t  (const_string \"V4SF\")\n+\t  (const_string \"TI\")))])\n \n (define_expand \"movv4sf\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n@@ -167,23 +157,14 @@\n }\n   [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n-\t(cond [(eq (symbol_ref \"TARGET_SSE2\") (const_int 0))\n-\t\t (const_string \"V4SF\")\n-\t       (eq_attr \"alternative\" \"0,1\")\n-\t\t (if_then_else\n-\t\t   (ne (symbol_ref \"optimize_size\")\n-\t\t       (const_int 0))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"V2DF\"))\n-\t       (eq_attr \"alternative\" \"2\")\n-\t\t (if_then_else\n-\t\t   (ior (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n-\t\t\t    (const_int 0))\n-\t\t\t(ne (symbol_ref \"optimize_size\")\n-\t\t\t    (const_int 0)))\n-\t\t   (const_string \"V4SF\")\n-\t\t   (const_string \"V2DF\"))]\n-\t       (const_string \"V2DF\")))])\n+\t(if_then_else\n+\t  (ior (ior (ne (symbol_ref \"optimize_size\") (const_int 0))\n+\t\t    (eq (symbol_ref \"TARGET_SSE2\") (const_int 0)))\n+\t       (and (eq_attr \"alternative\" \"2\")\n+\t  \t    (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t        (const_int 0))))\n+\t  (const_string \"V4SF\")\n+\t  (const_string \"V2DF\")))])\n \n (define_split\n   [(set (match_operand:V2DF 0 \"register_operand\" \"\")\n@@ -1525,7 +1506,7 @@\n   \"TARGET_SSE2\"\n   \"sqrtsd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"DF\")])\n \n ;; ??? For !flag_finite_math_only, the representation with SMIN/SMAX\n ;; isn't really correct, as those rtl operators aren't defined when "}]}