{"sha": "fba9adc6d59ec33d5c1bf08bae08a4627863eb68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhOWFkYzZkNTllYzMzZDVjMWJmMDhiYWUwOGE0NjI3ODYzZWI2OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-26T06:51:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-26T06:51:31Z"}, "message": "(init_decl_processing): Use 10 as size of ..._array_type_node.\n\nFrom-SVN: r3345", "tree": {"sha": "d942a79213699a3f9e9f738f7f30b75683340623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d942a79213699a3f9e9f738f7f30b75683340623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba9adc6d59ec33d5c1bf08bae08a4627863eb68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba9adc6d59ec33d5c1bf08bae08a4627863eb68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba9adc6d59ec33d5c1bf08bae08a4627863eb68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba9adc6d59ec33d5c1bf08bae08a4627863eb68/comments", "author": null, "committer": null, "parents": [{"sha": "625bbc6074531d90a8a44df63de73af18f9e17aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625bbc6074531d90a8a44df63de73af18f9e17aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625bbc6074531d90a8a44df63de73af18f9e17aa"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "4847d369438d61465f07288dbecb092bf18c193a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9adc6d59ec33d5c1bf08bae08a4627863eb68/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9adc6d59ec33d5c1bf08bae08a4627863eb68/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=fba9adc6d59ec33d5c1bf08bae08a4627863eb68", "patch": "@@ -150,17 +150,17 @@ tree ptr_type_node, const_ptr_type_node;\n \n tree string_type_node, const_string_type_node;\n \n-/* Type `char[256]' or something like it.\n+/* Type `char[SOMENUMBER]'.\n    Used when an array of char is needed and the size is irrelevant.  */\n \n tree char_array_type_node;\n \n-/* Type `int[256]' or something like it.\n+/* Type `int[SOMENUMBER]' or something like it.\n    Used when an array of int needed and the size is irrelevant.  */\n \n tree int_array_type_node;\n \n-/* Type `wchar_t[256]' or something like it.\n+/* Type `wchar_t[SOMENUMBER]' or something like it.\n    Used when a wide string literal is created.  */\n \n tree wchar_array_type_node;\n@@ -2495,6 +2495,7 @@ init_decl_processing ()\n   tree void_ftype_any;\n   int wchar_type_size;\n   tree temp;\n+  tree array_domain_type;\n \n   current_function_decl = NULL;\n   named_labels = NULL;\n@@ -2655,18 +2656,22 @@ init_decl_processing ()\n   const_string_type_node\n     = build_pointer_type (build_type_variant (char_type_node, 1, 0));\n \n-  /* make a type for arrays of 256 characters.\n-     256 is picked randomly because we have a type for integers from 0 to 255.\n+  /* Make a type to be the domain of a few array types\n+     whose domains don`t really matter.\n+     10 is small enough that it always fits in size_t.  */\n+  array_domain_type = build_index_type (build_int_2 (10, 0));\n+\n+  /* make a type for arrays of characters.\n      With luck nothing will ever really depend on the length of this\n      array type.  */\n   char_array_type_node\n-    = build_array_type (char_type_node, unsigned_intQI_type_node);\n+    = build_array_type (char_type_node, array_domain_type);\n   /* Likewise for arrays of ints.  */\n   int_array_type_node\n-    = build_array_type (integer_type_node, unsigned_intQI_type_node);\n+    = build_array_type (integer_type_node, array_domain_type);\n   /* This is for wide string constants.  */\n   wchar_array_type_node\n-    = build_array_type (wchar_type_node, unsigned_intQI_type_node);\n+    = build_array_type (wchar_type_node, array_domain_type);\n \n   default_function_type\n     = build_function_type (integer_type_node, NULL_TREE);"}]}