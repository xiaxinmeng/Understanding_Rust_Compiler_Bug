{"sha": "fe41a98eb213c6fd3307b57551f9b837a882f1b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0MWE5OGViMjEzYzZmZDMzMDdiNTc1NTFmOWI4MzdhODgyZjFiOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-10T18:53:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-10T18:53:01Z"}, "message": "(steal_delay_list_from_target): Exit at the top if the\nbranch in SEQ is not a single set.\n\nFrom-SVN: r9158", "tree": {"sha": "311bcaff38237286fb6d9250e910caf612aefdc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/311bcaff38237286fb6d9250e910caf612aefdc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe41a98eb213c6fd3307b57551f9b837a882f1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe41a98eb213c6fd3307b57551f9b837a882f1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe41a98eb213c6fd3307b57551f9b837a882f1b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe41a98eb213c6fd3307b57551f9b837a882f1b9/comments", "author": null, "committer": null, "parents": [{"sha": "63a33c946357af5aa88605e00226d3ee6509f0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a33c946357af5aa88605e00226d3ee6509f0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a33c946357af5aa88605e00226d3ee6509f0f0"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "7c5e3c8a8844cfa4a4242557e9245642cf564e88", "filename": "gcc/reorg.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe41a98eb213c6fd3307b57551f9b837a882f1b9/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe41a98eb213c6fd3307b57551f9b837a882f1b9/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=fe41a98eb213c6fd3307b57551f9b837a882f1b9", "patch": "@@ -1592,12 +1592,17 @@ steal_delay_list_from_target (insn, condition, seq, delay_list,\n \n   /* We can't do anything if there are more delay slots in SEQ than we\n      can handle, or if we don't know that it will be a taken branch.\n-\n      We know that it will be a taken branch if it is either an unconditional\n-     branch or a conditional branch with a stricter branch condition.  */\n+     branch or a conditional branch with a stricter branch condition.\n+\n+     Also, exit if the branch has more than one set, since then it is computing\n+     other results that can't be ignored, e.g. the HPPA mov&branch instruction.\n+     ??? It may be possible to move other sets into INSN in addition to\n+     moving the instructions in the delay slots.  */\n \n   if (XVECLEN (seq, 0) - 1 > slots_remaining\n-      || ! condition_dominates_p (condition, XVECEXP (seq, 0, 0)))\n+      || ! condition_dominates_p (condition, XVECEXP (seq, 0, 0))\n+      || ! single_set (XVECEXP (seq, 0, 0)))\n     return delay_list;\n \n   for (i = 1; i < XVECLEN (seq, 0); i++)"}]}