{"sha": "a2a7da1a055c98d9b4578151f273e0e7572aa605", "node_id": "C_kwDOANBUbNoAKGEyYTdkYTFhMDU1Yzk4ZDliNDU3ODE1MWYyNzNlMGU3NTcyYWE2MDU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-19T08:55:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-19T10:58:30Z"}, "message": "libstdc++: Fix syntax error in libbacktrace configuration\n\nUsing == instead of = causes a configuration error with dash as the\nshell:\n\nchecking whether to build libbacktrace support... /home/devel/building/work/src/gcc-12-20220417/libstdc++-v3/configure: 77471: test: auto: unexpected operator\n/home/devel/building/work/src/gcc-12-20220417/libstdc++-v3/configure: 77474: test: auto: unexpected operator\nauto\n\nThis means we fail to change the value from \"auto\" to \"no\" and so this\ntest passes:\nGLIBCXX_CONDITIONAL(ENABLE_BACKTRACE, [test \"$enable_libstdcxx_backtrace\" != no])\n\nThis leads to the libbacktrace directory being included in the build\nwithout being configured properly, and bootstrap fails.\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_BACKTRACE): Fix shell operators.\n\t* configure: Regenerate.", "tree": {"sha": "2207d3386d701aac34b0481baebddf38269f8370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2207d3386d701aac34b0481baebddf38269f8370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a7da1a055c98d9b4578151f273e0e7572aa605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a7da1a055c98d9b4578151f273e0e7572aa605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a7da1a055c98d9b4578151f273e0e7572aa605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a7da1a055c98d9b4578151f273e0e7572aa605/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7c81ef14815bbb94f215d908dbd406c35c45d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7c81ef14815bbb94f215d908dbd406c35c45d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7c81ef14815bbb94f215d908dbd406c35c45d0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "138bd58d86cb9c05e8d7c55a71400e6c6be69145", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7da1a055c98d9b4578151f273e0e7572aa605/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7da1a055c98d9b4578151f273e0e7572aa605/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=a2a7da1a055c98d9b4578151f273e0e7572aa605", "patch": "@@ -5007,10 +5007,10 @@ esac\n BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n \n   AC_MSG_CHECKING([whether to build libbacktrace support])\n-  if test \"$enable_libstdcxx_backtrace\" == \"auto\"; then\n+  if test \"$enable_libstdcxx_backtrace\" = \"auto\"; then\n     enable_libstdcxx_backtrace=no\n   fi\n-  if test \"$enable_libstdcxx_backtrace\" == \"yes\"; then\n+  if test \"$enable_libstdcxx_backtrace\" = \"yes\"; then\n     BACKTRACE_SUPPORTED=1\n \n     AC_CHECK_HEADERS(sys/mman.h)\n@@ -5057,7 +5057,7 @@ BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n     BACKTRACE_SUPPORTS_THREADS=0\n   fi\n   AC_MSG_RESULT($enable_libstdcxx_backtrace)\n-  GLIBCXX_CONDITIONAL(ENABLE_BACKTRACE, [test \"$enable_libstdcxx_backtrace\" != no])\n+  GLIBCXX_CONDITIONAL(ENABLE_BACKTRACE, [test \"$enable_libstdcxx_backtrace\" = yes])\n ])\n \n # Macros from the top-level gcc directory."}, {"sha": "9b94fd71e42488afec2bd4e93f5e126ab33ebca2", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7da1a055c98d9b4578151f273e0e7572aa605/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7da1a055c98d9b4578151f273e0e7572aa605/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a2a7da1a055c98d9b4578151f273e0e7572aa605", "patch": "@@ -77468,10 +77468,10 @@ BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build libbacktrace support\" >&5\n $as_echo_n \"checking whether to build libbacktrace support... \" >&6; }\n-  if test \"$enable_libstdcxx_backtrace\" == \"auto\"; then\n+  if test \"$enable_libstdcxx_backtrace\" = \"auto\"; then\n     enable_libstdcxx_backtrace=no\n   fi\n-  if test \"$enable_libstdcxx_backtrace\" == \"yes\"; then\n+  if test \"$enable_libstdcxx_backtrace\" = \"yes\"; then\n     BACKTRACE_SUPPORTED=1\n \n     for ac_header in sys/mman.h\n@@ -78563,7 +78563,7 @@ else\n fi\n \n \n-    if test \"$enable_libstdcxx_backtrace\" != no; then\n+    if test \"$enable_libstdcxx_backtrace\" = yes; then\n   ENABLE_BACKTRACE_TRUE=\n   ENABLE_BACKTRACE_FALSE='#'\n else"}]}