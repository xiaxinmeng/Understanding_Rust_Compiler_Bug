{"sha": "15872eeb797710097001dee9c8f7c05db1d7bbc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4NzJlZWI3OTc3MTAwOTcwMDFkZWU5YzhmN2MwNWRiMWQ3YmJjMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T04:16:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T04:16:17Z"}, "message": "entered into RCS\n\nFrom-SVN: r1267", "tree": {"sha": "87f8b776d001503dc72f9a0f97f8005c0d6ba18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87f8b776d001503dc72f9a0f97f8005c0d6ba18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15872eeb797710097001dee9c8f7c05db1d7bbc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15872eeb797710097001dee9c8f7c05db1d7bbc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15872eeb797710097001dee9c8f7c05db1d7bbc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15872eeb797710097001dee9c8f7c05db1d7bbc1/comments", "author": null, "committer": null, "parents": [{"sha": "dd605bb4ac21eda2bba69bb46cca0ed40c86a8e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd605bb4ac21eda2bba69bb46cca0ed40c86a8e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd605bb4ac21eda2bba69bb46cca0ed40c86a8e7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e1e530118246772e71288fcfeb994457c3705441", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15872eeb797710097001dee9c8f7c05db1d7bbc1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15872eeb797710097001dee9c8f7c05db1d7bbc1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=15872eeb797710097001dee9c8f7c05db1d7bbc1", "patch": "@@ -1409,12 +1409,12 @@ output_epilog (file, size)\n     fprintf (file, \"LT..\");\n     ASM_OUTPUT_LABEL (file, fname);\n \n-    /* The .tbtab psuedo-op can only be used for the first eight\n+    /* The .tbtab pseudo-op can only be used for the first eight\n        expressions, since it can't handle the possibly variable length\n        fields that follow.  However, if you omit the optional fields,\n        the assembler outputs zeros for all optional fields anyways, giving each\n        variable length field is minimum length (as defined in sys/debug.h).\n-       Thus we can not use the .tbtab psuedo-op at all.  */\n+       Thus we can not use the .tbtab pseudo-op at all.  */\n \n     /* An all-zero word flags the start of the tbtab, for debuggers that have\n        to find it by searching forward from the entry point or from the\n@@ -1517,7 +1517,7 @@ output_epilog (file, size)\n     /* This is actually the number of fp registers that hold parameters;\n        and thus the maximum value is 13.  */\n     /* Set parameters on stack bit if parameters are not in their original\n-       registers, irregardless of whether they are on the stack?  Xlc\n+       registers, regardless of whether they are on the stack?  Xlc\n        seems to set the bit when not optimizing.  */\n     fprintf (file, \"%d\\n\", ((float_parms << 1) | (! optimize)));\n \n@@ -1541,7 +1541,7 @@ output_epilog (file, size)\n     fprintf (file, \"\\n\");\n \n     /* Interrupt handler mask.  */\n-    /* Omit this long, since we never set the iterrupt handler bit above.  */\n+    /* Omit this long, since we never set the interrupt handler bit above.  */\n \n     /* Number of CTL (controlled storage) anchors.  */\n     /* Omit this long, since the has_ctl bit is never set above.  */"}]}