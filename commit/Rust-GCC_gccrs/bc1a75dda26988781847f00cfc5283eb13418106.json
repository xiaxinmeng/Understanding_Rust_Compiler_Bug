{"sha": "bc1a75dda26988781847f00cfc5283eb13418106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMxYTc1ZGRhMjY5ODg3ODE4NDdmMDBjZmM1MjgzZWIxMzQxODEwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-25T08:05:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-25T08:05:58Z"}, "message": "re PR libstdc++/81706 (std::sin vectorization bug)\n\n\tPR libstdc++/81706\n\t* attribs.c (attribute_value_equal): Use omp_declare_simd_clauses_equal\n\tfor comparison of OMP_CLAUSEs regardless of flag_openmp{,_simd}.\n\t(duplicate_one_attribute, copy_attributes_to_builtin): New functions.\n\t* attribs.h (duplicate_one_attribute, copy_attributes_to_builtin): New\n\tdeclarations.\n\n\t* c-decl.c (merge_decls): Copy \"omp declare simd\" attributes from\n\tnewdecl to corresponding __builtin_ if any.\n\n\t* decl.c (duplicate_decls): Copy \"omp declare simd\" attributes from\n\tnewdecl to corresponding __builtin_ if any.\n\n\t* gcc.target/i386/pr81706.c: New test.\n\t* g++.dg/ext/pr81706.C: New test.\n\nFrom-SVN: r254069", "tree": {"sha": "49aebe92a0ce8de7fe12083ca8885548de051cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49aebe92a0ce8de7fe12083ca8885548de051cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc1a75dda26988781847f00cfc5283eb13418106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1a75dda26988781847f00cfc5283eb13418106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1a75dda26988781847f00cfc5283eb13418106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1a75dda26988781847f00cfc5283eb13418106/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57904e87b934e9dd8f94e9a0c4b3e10f3a4863ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57904e87b934e9dd8f94e9a0c4b3e10f3a4863ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57904e87b934e9dd8f94e9a0c4b3e10f3a4863ec"}], "stats": {"total": 147, "additions": 145, "deletions": 2}, "files": [{"sha": "783515917e67ae4165f971142d346f0726300da0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -1,3 +1,12 @@\n+2017-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/81706\n+\t* attribs.c (attribute_value_equal): Use omp_declare_simd_clauses_equal\n+\tfor comparison of OMP_CLAUSEs regardless of flag_openmp{,_simd}.\n+\t(duplicate_one_attribute, copy_attributes_to_builtin): New functions.\n+\t* attribs.h (duplicate_one_attribute, copy_attributes_to_builtin): New\n+\tdeclarations.\n+\n 2017-10-25  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (need_eh_cleanup, need_ab_cleanup, el_to_remove,"}, {"sha": "809f4c3a8d55b461e8c546281d63675547afd1dc", "filename": "gcc/attribs.c", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -1125,9 +1125,9 @@ attribute_value_equal (const_tree attr1, const_tree attr2)\n \t\t\t\t     TREE_VALUE (attr2)) == 1);\n     }\n \n-  if ((flag_openmp || flag_openmp_simd)\n-      && TREE_VALUE (attr1) && TREE_VALUE (attr2)\n+  if (TREE_VALUE (attr1)\n       && TREE_CODE (TREE_VALUE (attr1)) == OMP_CLAUSE\n+      && TREE_VALUE (attr2)\n       && TREE_CODE (TREE_VALUE (attr2)) == OMP_CLAUSE)\n     return omp_declare_simd_clauses_equal (TREE_VALUE (attr1),\n \t\t\t\t\t   TREE_VALUE (attr2));\n@@ -1322,6 +1322,44 @@ merge_decl_attributes (tree olddecl, tree newdecl)\n \t\t\t   DECL_ATTRIBUTES (newdecl));\n }\n \n+/* Duplicate all attributes with name NAME in ATTR list to *ATTRS if\n+   they are missing there.  */\n+\n+void\n+duplicate_one_attribute (tree *attrs, tree attr, const char *name)\n+{\n+  attr = lookup_attribute (name, attr);\n+  if (!attr)\n+    return;\n+  tree a = lookup_attribute (name, *attrs);\n+  while (attr)\n+    {\n+      tree a2;\n+      for (a2 = a; a2; a2 = lookup_attribute (name, TREE_CHAIN (a2)))\n+\tif (attribute_value_equal (attr, a2))\n+\t  break;\n+      if (!a2)\n+\t{\n+\t  a2 = copy_node (attr);\n+\t  TREE_CHAIN (a2) = *attrs;\n+\t  *attrs = a2;\n+\t}\n+      attr = lookup_attribute (name, TREE_CHAIN (attr));\n+    }\n+}\n+\n+/* Duplicate all attributes from user DECL to the corresponding\n+   builtin that should be propagated.  */\n+\n+void\n+copy_attributes_to_builtin (tree decl)\n+{\n+  tree b = builtin_decl_explicit (DECL_FUNCTION_CODE (decl));\n+  if (b)\n+    duplicate_one_attribute (&DECL_ATTRIBUTES (b),\n+\t\t\t     DECL_ATTRIBUTES (decl), \"omp declare simd\");\n+}\n+\n #if TARGET_DLLIMPORT_DECL_ATTRIBUTES\n \n /* Specialization of merge_decl_attributes for various Windows targets."}, {"sha": "f4bfe03e4673008eb2fa3bba3154e09ca31fd374", "filename": "gcc/attribs.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fattribs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fattribs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.h?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -77,6 +77,16 @@ extern tree remove_attribute (const char *, tree);\n \n extern tree merge_attributes (tree, tree);\n \n+/* Duplicate all attributes with name NAME in ATTR list to *ATTRS if\n+   they are missing there.  */\n+\n+extern void duplicate_one_attribute (tree *, tree, const char *);\n+\n+/* Duplicate all attributes from user DECL to the corresponding\n+   builtin that should be propagated.  */\n+\n+extern void copy_attributes_to_builtin (tree);\n+\n /* Given two Windows decl attributes lists, possibly including\n    dllimport, return a list of their union .  */\n extern tree merge_dllimport_decl_attributes (tree, tree);"}, {"sha": "b4fde0dccf7e6d162a3d620276aec57089857141", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -1,3 +1,9 @@\n+2017-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/81706\n+\t* c-decl.c (merge_decls): Copy \"omp declare simd\" attributes from\n+\tnewdecl to corresponding __builtin_ if any.\n+\n 2017-10-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/82466"}, {"sha": "90f07297a3744e066a8270def4eac75240c74bc0", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -2570,6 +2570,8 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n \t\t\tset_builtin_decl_declared_p (fncode, true);\n \t\t      break;\n \t\t    }\n+\n+\t\t  copy_attributes_to_builtin (newdecl);\n \t\t}\n \t    }\n \t  else"}, {"sha": "fdb2c9b52a8181961606c344a66bab1086e0112e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -1,3 +1,9 @@\n+2017-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/81706\n+\t* decl.c (duplicate_decls): Copy \"omp declare simd\" attributes from\n+\tnewdecl to corresponding __builtin_ if any.\n+\n 2017-10-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/82466"}, {"sha": "c9c3d0a2711fd5d5382f0293e4987639871ffb61", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -2478,6 +2478,8 @@ next_arg:;\n \t\t  break;\n \t\t}\n \t    }\n+\n+\t  copy_attributes_to_builtin (newdecl);\n \t}\n       if (new_defines_function)\n \t/* If defining a function declared with other language"}, {"sha": "00dde9f9d6d60daf20ca9fda388415b27ebfe283", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -1,3 +1,9 @@\n+2017-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/81706\n+\t* gcc.target/i386/pr81706.c: New test.\n+\t* g++.dg/ext/pr81706.C: New test.\n+\n 2017-10-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82460"}, {"sha": "f0ed8ab6d71104dcd0a3105fbeed32fc4a818792", "filename": "gcc/testsuite/g++.dg/ext/pr81706.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr81706.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr81706.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr81706.C?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -0,0 +1,32 @@\n+// PR libstdc++/81706\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O3 -mavx2 -mno-avx512f\" }\n+// { dg-final { scan-assembler \"call\\[^\\n\\r]_ZGVdN4v_cos\" } }\n+// { dg-final { scan-assembler \"call\\[^\\n\\r]_ZGVdN4v_sin\" } }\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+extern double cos (double) __attribute__ ((nothrow, leaf, simd (\"notinbranch\")));\n+extern double sin (double) __attribute__ ((nothrow, leaf, simd (\"notinbranch\")));\n+#ifdef __cplusplus\n+}\n+#endif\n+double p[1024] = { 1.0 };\n+double q[1024] = { 1.0 };\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    p[i] = cos (q[i]);\n+}\n+\n+void\n+bar (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    p[i] = __builtin_sin (q[i]);\n+}"}, {"sha": "333fd15977091cd3fe86cd65a11027c0642d5995", "filename": "gcc/testsuite/gcc.target/i386/pr81706.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81706.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1a75dda26988781847f00cfc5283eb13418106/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81706.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81706.c?ref=bc1a75dda26988781847f00cfc5283eb13418106", "patch": "@@ -0,0 +1,32 @@\n+/* PR libstdc++/81706 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx2 -mno-avx512f\" } */\n+/* { dg-final { scan-assembler \"call\\[^\\n\\r]_ZGVdN4v_cos\" } } */\n+/* { dg-final { scan-assembler \"call\\[^\\n\\r]_ZGVdN4v_sin\" } } */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+extern double cos (double) __attribute__ ((nothrow, leaf, simd (\"notinbranch\")));\n+extern double sin (double) __attribute__ ((nothrow, leaf, simd (\"notinbranch\")));\n+#ifdef __cplusplus\n+}\n+#endif\n+double p[1024] = { 1.0 };\n+double q[1024] = { 1.0 };\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    p[i] = cos (q[i]);\n+}\n+\n+void\n+bar (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    p[i] = __builtin_sin (q[i]);\n+}"}]}