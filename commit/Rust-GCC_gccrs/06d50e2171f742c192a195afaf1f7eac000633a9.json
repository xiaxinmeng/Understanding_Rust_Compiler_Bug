{"sha": "06d50e2171f742c192a195afaf1f7eac000633a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkNTBlMjE3MWY3NDJjMTkyYTE5NWFmYWYxZjdlYWMwMDA2MzNhOQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-05-24T14:59:20Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-05-24T14:59:20Z"}, "message": "AArch64 - fix invalid assembler in testcase\n\nFrom-SVN: r199294", "tree": {"sha": "809f6469d6df98c9f2d20b62d73cf38c5856f9f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/809f6469d6df98c9f2d20b62d73cf38c5856f9f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d50e2171f742c192a195afaf1f7eac000633a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d50e2171f742c192a195afaf1f7eac000633a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d50e2171f742c192a195afaf1f7eac000633a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d50e2171f742c192a195afaf1f7eac000633a9/comments", "author": null, "committer": null, "parents": [{"sha": "50d38551eeee9c225bd1af2e2a403de9ea298a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d38551eeee9c225bd1af2e2a403de9ea298a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d38551eeee9c225bd1af2e2a403de9ea298a7e"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "bf8ba0bb92b03c84f5dedb7abf50129cb7841a41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d50e2171f742c192a195afaf1f7eac000633a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d50e2171f742c192a195afaf1f7eac000633a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06d50e2171f742c192a195afaf1f7eac000633a9", "patch": "@@ -1,3 +1,10 @@\n+2013-05-24  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/scalar_intrinsics.c\n+\t(force_simd): Use a valid instruction.\n+\t(test_vdupd_lane_s64): Pass a valid lane argument.\n+\t(test_vdupd_lane_u64): Likewise.\n+\n 2013-05-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57287"}, {"sha": "16537ce7d351222c7b9f326db70a428b06e15373", "filename": "gcc/testsuite/gcc.target/aarch64/scalar_intrinsics.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d50e2171f742c192a195afaf1f7eac000633a9/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d50e2171f742c192a195afaf1f7eac000633a9/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c?ref=06d50e2171f742c192a195afaf1f7eac000633a9", "patch": "@@ -4,7 +4,7 @@\n #include <arm_neon.h>\n \n /* Used to force a variable to a SIMD register.  */\n-#define force_simd(V1)   asm volatile (\"mov %d0, %d1\"\t\t\\\n+#define force_simd(V1)   asm volatile (\"mov %d0, %1.d[0]\"\t\\\n \t   : \"=w\"(V1)\t\t\t\t\t\t\\\n \t   : \"w\"(V1)\t\t\t\t\t\t\\\n \t   : /* No clobbers */);\n@@ -228,13 +228,13 @@ test_vdups_lane_u32 (uint32x4_t a)\n int64x1_t\n test_vdupd_lane_s64 (int64x2_t a)\n {\n-  return vdupd_lane_s64 (a, 2);\n+  return vdupd_lane_s64 (a, 1);\n }\n \n uint64x1_t\n test_vdupd_lane_u64 (uint64x2_t a)\n {\n-  return vdupd_lane_u64 (a, 2);\n+  return vdupd_lane_u64 (a, 1);\n }\n \n /* { dg-final { scan-assembler-times \"\\\\tcmtst\\\\td\\[0-9\\]+, d\\[0-9\\]+, d\\[0-9\\]+\" 2 } } */"}]}