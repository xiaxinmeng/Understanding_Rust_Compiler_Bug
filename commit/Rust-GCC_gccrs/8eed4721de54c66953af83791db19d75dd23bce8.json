{"sha": "8eed4721de54c66953af83791db19d75dd23bce8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlZDQ3MjFkZTU0YzY2OTUzYWY4Mzc5MWRiMTlkNzVkZDIzYmNlOA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2018-08-06T15:01:00Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-08-06T15:01:00Z"}, "message": "S/390: Don't unroll memory blk op loops\n\ngcc/ChangeLog:\n\n2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390.c (s390_loop_unroll_adjust): Prevent small\n\tloops with memory block operations from getting unrolled.\n\ngcc/testsuite/ChangeLog:\n\n2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/nomemloopunroll-1.c: New test.\n\nFrom-SVN: r263336", "tree": {"sha": "bcd08467fe566c274f0bdc073ae37165288290b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcd08467fe566c274f0bdc073ae37165288290b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eed4721de54c66953af83791db19d75dd23bce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eed4721de54c66953af83791db19d75dd23bce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eed4721de54c66953af83791db19d75dd23bce8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eed4721de54c66953af83791db19d75dd23bce8/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f171da9ccea4fc9c7918e22e6485b49626f8730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f171da9ccea4fc9c7918e22e6485b49626f8730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f171da9ccea4fc9c7918e22e6485b49626f8730"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "b15d546f2a539dffa8cceccea832bab890a8f1f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eed4721de54c66953af83791db19d75dd23bce8", "patch": "@@ -1,3 +1,8 @@\n+2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (s390_loop_unroll_adjust): Prevent small\n+\tloops with memory block operations from getting unrolled.\n+\n 2018-08-06  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR target/86807"}, {"sha": "aa34f562dd82c6640adad34a5266fb3e32210cc6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=8eed4721de54c66953af83791db19d75dd23bce8", "patch": "@@ -390,6 +390,11 @@ static unsigned vfu_longrunning[NUM_SIDES];\n    base and index are registers of the class ADDR_REGS,\n    displacement is an unsigned 12-bit immediate constant.  */\n \n+/* The max number of insns of backend generated memset/memcpy/memcmp\n+   loops.  This value is used in the unroll adjust hook to detect such\n+   loops.  Current max is 9 coming from the memcmp loop.  */\n+#define BLOCK_MEM_OPS_LOOP_INSNS 9\n+\n struct s390_address\n {\n   rtx base;\n@@ -15385,9 +15390,29 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n   for (i = 0; i < loop->num_nodes; i++)\n     FOR_BB_INSNS (bbs[i], insn)\n       if (INSN_P (insn) && INSN_CODE (insn) != -1)\n-\tFOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n-\t  if (MEM_P (*iter))\n-\t    mem_count += 1;\n+\t{\n+\t  rtx set;\n+\n+\t  /* The runtime of small loops with memory block operations\n+\t     will be determined by the memory operation.  Doing\n+\t     unrolling doesn't help here.  Measurements to confirm\n+\t     this where only done on recent CPU levels.  So better do\n+\t     not change anything for older CPUs.  */\n+\t  if (s390_tune >= PROCESSOR_2964_Z13\n+\t      && loop->ninsns <= BLOCK_MEM_OPS_LOOP_INSNS\n+\t      && ((set = single_set (insn)) != NULL_RTX)\n+\t      && ((GET_MODE (SET_DEST (set)) == BLKmode\n+\t\t   && (GET_MODE (SET_SRC (set)) == BLKmode\n+\t\t       || SET_SRC (set) == const0_rtx))\n+\t\t  || (GET_CODE (SET_SRC (set)) == COMPARE\n+\t\t      && GET_MODE (XEXP (SET_SRC (set), 0)) == BLKmode\n+\t\t      && GET_MODE (XEXP (SET_SRC (set), 1)) == BLKmode)))\n+\t    return 1;\n+\n+\t  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+\t    if (MEM_P (*iter))\n+\t      mem_count += 1;\n+\t}\n   free (bbs);\n \n   /* Prevent division by zero, and we do not need to adjust nunroll in this case.  */"}, {"sha": "0d8fc74b16ab8c4b3301f235b66861ec563d63e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8eed4721de54c66953af83791db19d75dd23bce8", "patch": "@@ -1,3 +1,7 @@\n+2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/nomemloopunroll-1.c: New test.\n+\n 2018-08-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/86386"}, {"sha": "695d9251cea8df2d1d12786e6d7dd50fb1556167", "filename": "gcc/testsuite/gcc.target/s390/nomemloopunroll-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fnomemloopunroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eed4721de54c66953af83791db19d75dd23bce8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fnomemloopunroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fnomemloopunroll-1.c?ref=8eed4721de54c66953af83791db19d75dd23bce8", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -funroll-loops -march=z13\" } */\n+\n+/* 2x mvc */\n+void *\n+foo (char *a, int c, long len)\n+{\n+  return __builtin_memset (a, c, len);\n+}\n+\n+/* 2x mvc */\n+void\n+bar (char *a, char *b)\n+{\n+  __builtin_memcpy (a, b, 30000);\n+}\n+\n+/* 2x clc */\n+\n+int\n+baz (char *a, char *b)\n+{\n+  return __builtin_memcmp (a, b, 30000);\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\\\\\smvc\\\\\\s\" 4 } } */\n+/* { dg-final { scan-assembler-times \"\\\\\\sclc\\\\\\s\" 2 } } */"}]}