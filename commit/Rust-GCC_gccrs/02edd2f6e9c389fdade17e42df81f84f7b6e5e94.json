{"sha": "02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlZGQyZjZlOWMzODlmZGFkZTE3ZTQyZGY4MWY4NGY3YjZlNWU5NA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-15T17:21:21Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-15T17:21:21Z"}, "message": "Add support for vpermil2p* in XOP.\n\n2010-02-13  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* config/i386/i386-builtin-types.def\n\t(V2DF_FTYPE_V2DF_V2DF_V2DI_INT): Declared.\n\t(V4DF_FTYPE_V4DF_V4DF_V4DI_INT): Declared.\n\t(V4SF_FTYPE_V4SF_V4SF_V4SI_INT): Declared.\n\t(V8SF_FTYPE_V8SF_V8SF_V8SI_INT): Declared.\n\t* config/i386/i386.c (enum ix86_builtins): Add IX86_BUILTIN_VPERMIL2PD,\n\tIX86_BUILTIN_VPERMIL2PS, IX86_BUILTIN_VPERMIL2PD256, and\n\tIX86_BUILTIN_VPERMIL2PS256.\n\t(MULTI_ARG_4_DF2_DI_I): Defined.\n\t(MULTI_ARG_4_DF2_DI_I1): Defined.\n\t(MULTI_ARG_4_SF2_SI_I): Defined.\n\t(MULTI_ARG_4_SF2_SI_I1): Defined.\n\t(bdesc_multi_arg): Add __builtin_ia32_vpermil2pd,\n\t__builtin_ia32_vpermil2ps, __builtin_ia32_vpermil2pd256, and\n\t__builtin_ia32_vpermil2ps256.\n\t(ix86_expand_multi_arg_builtin): Handle MULTI_ARG_4_DF2_DI_I,\n\tMULTI_ARG_4_DF2_DI_I1, MULTI_ARG_4_SF2_SI_I, and\n\tMULTI_ARG_4_SF2_SI_I1.  Handle builtins with 4 arguments.\n\t(ix86_expand_args_builtin): Handle MULTI_ARG_4_DF2_DI_I,\n\tMULTI_ARG_4_DF2_DI_I1, MULTI_ARG_4_SF2_SI_I, and\n\tMULTI_ARG_4_SF2_SI_I1.  Handle CODE_FOR_xop_vpermil2v2df3,\n\tCODE_FOR_xop_vpermil2v4sf3, CODE_FOR_xop_vpermil2v4df3, and\n\tCODE_FOR_xop_vpermil2v8sf3.\n\t* config/i386/i386.md (UNSPEC_VPERMIL2): Declared.\n\t* config/i386/sse.md (xop_vpermil2<mode>3): New insn pattern.\n\t* config/i386/xopintrin.h (_mm_permute2_pd): New.\n\t(_mm256_permute2_pd): New.\n\t(_mm_permute2_ps): New.\n\t(_mm256_permute2_ps): New.\n\n\t* gcc.target/i386/sse-14.c: Add tests for _mm_permute2_pd,\n\t_mm256_permute2_pd, _mm_permute2_ps, and _mm256_permute2_ps.\n\t* gcc.target/i386/xop-vpermil2pd-1.c: New.\n\t* gcc.target/i386/xop-vpermil2pd-256-1.c: New.\n\t* gcc.target/i386/xop-vpermil2ps-1.c: New.\n\t* gcc.target/i386/xop-vpermil2ps-256-1.c: New.\n\nFrom-SVN: r156778", "tree": {"sha": "7dafa8c2fb6442038a37f7b8db20c3dae60dfd77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dafa8c2fb6442038a37f7b8db20c3dae60dfd77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c59224088b5d540369ec98ef287554b02bb33b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c59224088b5d540369ec98ef287554b02bb33b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c59224088b5d540369ec98ef287554b02bb33b"}], "stats": {"total": 409, "additions": 404, "deletions": 5}, "files": [{"sha": "c13d2435bd6c212fef779987f620946c8c5405d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -1,3 +1,35 @@\n+2010-02-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* config/i386/i386-builtin-types.def\n+\t(V2DF_FTYPE_V2DF_V2DF_V2DI_INT): Declared.\n+\t(V4DF_FTYPE_V4DF_V4DF_V4DI_INT): Declared.\n+\t(V4SF_FTYPE_V4SF_V4SF_V4SI_INT): Declared.\n+\t(V8SF_FTYPE_V8SF_V8SF_V8SI_INT): Declared.\n+\t* config/i386/i386.c (enum ix86_builtins): Add IX86_BUILTIN_VPERMIL2PD,\n+\tIX86_BUILTIN_VPERMIL2PS, IX86_BUILTIN_VPERMIL2PD256, and\n+\tIX86_BUILTIN_VPERMIL2PS256.\n+\t(MULTI_ARG_4_DF2_DI_I): Defined.\n+\t(MULTI_ARG_4_DF2_DI_I1): Defined.\n+\t(MULTI_ARG_4_SF2_SI_I): Defined.\n+\t(MULTI_ARG_4_SF2_SI_I1): Defined.\n+\t(bdesc_multi_arg): Add __builtin_ia32_vpermil2pd,\n+\t__builtin_ia32_vpermil2ps, __builtin_ia32_vpermil2pd256, and\n+\t__builtin_ia32_vpermil2ps256.\n+\t(ix86_expand_multi_arg_builtin): Handle MULTI_ARG_4_DF2_DI_I,\n+\tMULTI_ARG_4_DF2_DI_I1, MULTI_ARG_4_SF2_SI_I, and\n+\tMULTI_ARG_4_SF2_SI_I1.  Handle builtins with 4 arguments.\n+\t(ix86_expand_args_builtin): Handle MULTI_ARG_4_DF2_DI_I,\n+\tMULTI_ARG_4_DF2_DI_I1, MULTI_ARG_4_SF2_SI_I, and\n+\tMULTI_ARG_4_SF2_SI_I1.  Handle CODE_FOR_xop_vpermil2v2df3,\n+\tCODE_FOR_xop_vpermil2v4sf3, CODE_FOR_xop_vpermil2v4df3, and\n+\tCODE_FOR_xop_vpermil2v8sf3.\n+\t* config/i386/i386.md (UNSPEC_VPERMIL2): Declared.\n+\t* config/i386/sse.md (xop_vpermil2<mode>3): New insn pattern.\n+\t* config/i386/xopintrin.h (_mm_permute2_pd): New.\n+\t(_mm256_permute2_pd): New.\n+\t(_mm_permute2_ps): New.\n+\t(_mm256_permute2_ps): New.\n+\n 2010-02-15  Nick Clifton  <nickc@redhat.com>\n \n \t* config/h8300/h8300.c: (h8300_push_pop): Use bool type for"}, {"sha": "10310e233cbfcf4b05330bd25c06196acfaeead3", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -311,6 +311,7 @@ DEF_FUNCTION_TYPE (V16QI, V16QI, V16QI, V16QI)\n DEF_FUNCTION_TYPE (V1DI, V1DI, V1DI, INT)\n DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF, INT)\n DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF, V2DI, INT)\n DEF_FUNCTION_TYPE (V2DI, V2DI, DI, INT)\n DEF_FUNCTION_TYPE (V2DI, V2DI, UINT, UINT)\n DEF_FUNCTION_TYPE (V2DI, V2DI, V2DI, INT)\n@@ -319,11 +320,13 @@ DEF_FUNCTION_TYPE (V32QI, V32QI, V32QI, V32QI)\n DEF_FUNCTION_TYPE (V4DF, V4DF, V2DF, INT)\n DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF, INT)\n DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF, V4DF)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF, V4DI, INT)\n DEF_FUNCTION_TYPE (V4DI, V4DI, V4DI, V4DI)\n DEF_FUNCTION_TYPE (V4HI, V4HI, HI, INT)\n DEF_FUNCTION_TYPE (V4SF, V4SF, FLOAT, INT)\n DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF, INT)\n DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF, V4SI, INT)\n DEF_FUNCTION_TYPE (V4SI, V4SI, SI, INT)\n DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI, INT)\n DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI, V2DI)\n@@ -335,6 +338,7 @@ DEF_FUNCTION_TYPE (V8HI, V8HI, V8HI, V8HI)\n DEF_FUNCTION_TYPE (V8SF, V8SF, V4SF, INT)\n DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF, INT)\n DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF, V8SF)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF, V8SI, INT)\n DEF_FUNCTION_TYPE (V8SI, V8SI, V4SI, INT)\n DEF_FUNCTION_TYPE (V8SI, V8SI, V8SI, INT)\n DEF_FUNCTION_TYPE (V8SI, V8SI, V8SI, V8SI)"}, {"sha": "ac5ee3d812cd8f0530607261651b5f8a6db52351", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -20958,6 +20958,10 @@ enum ix86_builtins\n   IX86_BUILTIN_VPERMILPS,\n   IX86_BUILTIN_VPERMILPD256,\n   IX86_BUILTIN_VPERMILPS256,\n+  IX86_BUILTIN_VPERMIL2PD,\n+  IX86_BUILTIN_VPERMIL2PS,\n+  IX86_BUILTIN_VPERMIL2PD256,\n+  IX86_BUILTIN_VPERMIL2PS256,\n   IX86_BUILTIN_VPERM2F128PD256,\n   IX86_BUILTIN_VPERM2F128PS256,\n   IX86_BUILTIN_VPERM2F128SI256,\n@@ -22147,6 +22151,10 @@ static const struct builtin_description bdesc_args[] =\n };\n \n /* FMA4 and XOP.  */\n+#define MULTI_ARG_4_DF2_DI_I\tV2DF_FTYPE_V2DF_V2DF_V2DI_INT\n+#define MULTI_ARG_4_DF2_DI_I1\tV4DF_FTYPE_V4DF_V4DF_V4DI_INT\n+#define MULTI_ARG_4_SF2_SI_I\tV4SF_FTYPE_V4SF_V4SF_V4SI_INT\n+#define MULTI_ARG_4_SF2_SI_I1\tV8SF_FTYPE_V8SF_V8SF_V8SI_INT\n #define MULTI_ARG_3_SF\t\tV4SF_FTYPE_V4SF_V4SF_V4SF\n #define MULTI_ARG_3_DF\t\tV2DF_FTYPE_V2DF_V2DF_V2DF\n #define MULTI_ARG_3_SF2\t\tV8SF_FTYPE_V8SF_V8SF_V8SF\n@@ -22389,6 +22397,11 @@ static const struct builtin_description bdesc_multi_arg[] =\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_pcom_tfv4si3,      \"__builtin_ia32_vpcomtrueud\", IX86_BUILTIN_VPCOMTRUEUD, (enum rtx_code) PCOM_TRUE,    (int)MULTI_ARG_2_SI_TF },\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_pcom_tfv2di3,      \"__builtin_ia32_vpcomtrueuq\", IX86_BUILTIN_VPCOMTRUEUQ, (enum rtx_code) PCOM_TRUE,    (int)MULTI_ARG_2_DI_TF },\n \n+  { OPTION_MASK_ISA_AVX, CODE_FOR_xop_vpermil2v2df3,     \"__builtin_ia32_vpermil2pd\",  IX86_BUILTIN_VPERMIL2PD, UNKNOWN, (int)MULTI_ARG_4_DF2_DI_I },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_xop_vpermil2v4sf3,     \"__builtin_ia32_vpermil2ps\",  IX86_BUILTIN_VPERMIL2PS, UNKNOWN, (int)MULTI_ARG_4_SF2_SI_I },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_xop_vpermil2v4df3,     \"__builtin_ia32_vpermil2pd256\", IX86_BUILTIN_VPERMIL2PD256, UNKNOWN, (int)MULTI_ARG_4_DF2_DI_I1 },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_xop_vpermil2v8sf3,     \"__builtin_ia32_vpermil2ps256\", IX86_BUILTIN_VPERMIL2PS256, UNKNOWN, (int)MULTI_ARG_4_SF2_SI_I1 },\n+\n };\n \n /* Set up all the MMX/SSE builtins, even builtins for instructions that are not\n@@ -22769,6 +22782,14 @@ ix86_expand_multi_arg_builtin (enum insn_code icode, tree exp, rtx target,\n \n   switch (m_type)\n     {\n+    case MULTI_ARG_4_DF2_DI_I:\n+    case MULTI_ARG_4_DF2_DI_I1:\n+    case MULTI_ARG_4_SF2_SI_I:\n+    case MULTI_ARG_4_SF2_SI_I1:\n+      nargs = 4;\n+      last_arg_constant = true;\n+      break;\n+\n     case MULTI_ARG_3_SF:\n     case MULTI_ARG_3_DF:\n     case MULTI_ARG_3_SF2:\n@@ -22912,6 +22933,10 @@ ix86_expand_multi_arg_builtin (enum insn_code icode, tree exp, rtx target,\n       pat = GEN_FCN (icode) (target, args[0].op, args[1].op, args[2].op);\n       break;\n \n+    case 4:\n+      pat = GEN_FCN (icode) (target, args[0].op, args[1].op, args[2].op, args[3].op);\n+      break;\n+\n     default:\n       gcc_unreachable ();\n     }\n@@ -23530,6 +23555,13 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       nargs = 3;\n       nargs_constant = 2;\n       break;\n+    case MULTI_ARG_4_DF2_DI_I:\n+    case MULTI_ARG_4_DF2_DI_I1:\n+    case MULTI_ARG_4_SF2_SI_I:\n+    case MULTI_ARG_4_SF2_SI_I1:\n+      nargs = 4;\n+      nargs_constant = 1;\n+      break;\n     case V2DI_FTYPE_V2DI_V2DI_UINT_UINT:\n       nargs = 4;\n       nargs_constant = 2;\n@@ -23599,6 +23631,10 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n \n \t      case CODE_FOR_sse4_1_blendpd:\n \t      case CODE_FOR_avx_vpermilv2df:\n+\t      case CODE_FOR_xop_vpermil2v2df3:\n+\t      case CODE_FOR_xop_vpermil2v4sf3:\n+\t      case CODE_FOR_xop_vpermil2v4df3:\n+\t      case CODE_FOR_xop_vpermil2v8sf3:\n \t\terror (\"the last argument must be a 2-bit immediate\");\n \t\treturn const0_rtx;\n "}, {"sha": "924433f88a437d7dc1ce257a6136ee9ef6f22850", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -219,11 +219,12 @@\n    ; For AVX support\n    (UNSPEC_PCMP\t\t\t166)\n    (UNSPEC_VPERMIL\t\t167)\n-   (UNSPEC_VPERMIL2F128\t\t168)\n-   (UNSPEC_MASKLOAD\t\t169)\n-   (UNSPEC_MASKSTORE\t\t170)\n-   (UNSPEC_CAST\t\t\t171)\n-   (UNSPEC_VTESTP\t\t172)\n+   (UNSPEC_VPERMIL2\t\t168)\n+   (UNSPEC_VPERMIL2F128\t\t169)\n+   (UNSPEC_MASKLOAD\t\t170)\n+   (UNSPEC_MASKSTORE\t\t171)\n+   (UNSPEC_CAST\t\t\t172)\n+   (UNSPEC_VTESTP\t\t173)\n   ])\n \n (define_constants"}, {"sha": "105671601c106e352ef4a13f652870d60cbcccf9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -11539,6 +11539,20 @@\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"xop_vpermil2<mode>3\"\n+  [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x\")\n+\t(unspec:AVXMODEF2P\n+\t  [(match_operand:AVXMODEF2P 1 \"register_operand\" \"x\")\n+\t   (match_operand:AVXMODEF2P 2 \"nonimmediate_operand\" \"%x\")\n+\t   (match_operand:<avxpermvecmode> 3 \"nonimmediate_operand\" \"xm\")\n+\t   (match_operand:SI 4 \"const_0_to_3_operand\" \"n\")]\n+\t  UNSPEC_VPERMIL2))]\n+  \"TARGET_XOP\"\n+  \"vpermil2p<xopmodesuffixf2c>\\t{%4, %3, %2, %1, %0|%0, %1, %2, %3, %4}\"\n+  [(set_attr \"type\" \"sse4arg\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n (define_insn \"*avx_aesenc\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")"}, {"sha": "30ce72d1751a85f6d006da376d234fce7a585727", "filename": "gcc/config/i386/xopintrin.h", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fxopintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Fconfig%2Fi386%2Fxopintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxopintrin.h?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -766,6 +766,70 @@ _mm256_frcz_pd (__m256d __A)\n   return (__m256d) __builtin_ia32_vfrczpd256 ((__v4df)__A);\n }\n \n+/* PERMIL2 */\n+\n+#ifdef __OPTIMIZE__\n+extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_permute2_pd (__m128d __X, __m128d __Y, __m128i __C, const int __I)\n+{\n+  return (__m128d) __builtin_ia32_vpermil2pd ((__v2df)__X,\n+\t\t\t\t\t      (__v2df)__Y,\n+\t\t\t\t\t      (__v2di)__C,\n+\t\t\t\t\t      __I);\n+}\n+\n+extern __inline __m256d __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_permute2_pd (__m256d __X, __m256d __Y, __m256i __C, const int __I)\n+{\n+  return (__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)__X,\n+\t\t\t\t\t\t (__v4df)__Y,\n+\t\t\t\t\t\t (__v4di)__C,\n+\t\t\t\t\t\t __I);\n+}\n+\n+extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_permute2_ps (__m128 __X, __m128 __Y, __m128i __C, const int __I)\n+{\n+  return (__m128) __builtin_ia32_vpermil2ps ((__v4sf)__X,\n+\t\t\t\t\t     (__v4sf)__Y,\n+\t\t\t\t\t     (__v4si)__C,\n+\t\t\t\t\t     __I);\n+}\n+\n+extern __inline __m256 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_permute2_ps (__m256 __X, __m256 __Y, __m256i __C, const int __I)\n+{\n+  return (__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)__X,\n+\t\t\t\t\t\t(__v8sf)__Y,\n+\t\t\t\t\t\t(__v8si)__C,\n+\t\t\t\t\t\t__I);\n+}\n+#else\n+#define _mm_permute2_pd(X, Y, C, I)\t\t\t\t\t\\\n+  ((__m128d) __builtin_ia32_vpermil2pd ((__v2df)(__m128d)(X),\t\t\\\n+\t\t\t\t\t(__v2df)(__m128d)(Y),\t\t\\\n+\t\t\t\t\t(__v2di)(__m128d)(C),\t\t\\\n+\t\t\t\t\t(int)(I)))\n+\n+#define _mm256_permute2_pd(X, Y, C, I)\t\t\t\t\t\\\n+  ((__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)(__m256d)(X),\t\\\n+\t\t\t\t\t   (__v4df)(__m256d)(Y),\t\\\n+\t\t\t\t\t   (__v4di)(__m256d)(C),\t\\\n+\t\t\t\t\t   (int)(I)))\n+\n+#define _mm_permute2_ps(X, Y, C, I)\t\t\t\t\t\\\n+  ((__m128) __builtin_ia32_vpermil2ps ((__v4sf)(__m128)(X),\t\t\\\n+\t\t\t\t       (__v4sf)(__m128)(Y),\t\t\\\n+\t\t\t\t       (__v4si)(__m128)(C),\t\t\\\n+\t\t\t\t       (int)(I)))\n+\n+#define _mm256_permute2_ps(X, Y, C, I)\t\t\t\t\t\\\n+  ((__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)(__m256)(X),\t\t\\\n+\t\t\t\t\t  (__v8sf)(__m256)(Y),  \t\\\n+\t\t\t\t\t  (__v8si)(__m256)(C),\t\t\\\n+ \t\t\t\t\t  (int)(I)))\n+#endif /* __OPTIMIZE__ */\n+\n #endif /* __XOP__ */\n \n #endif /* _XOPMMINTRIN_H_INCLUDED */"}, {"sha": "c763de22451da39ce4d8e7036d0348082440f7ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -1,3 +1,12 @@\n+2010-02-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* gcc.target/i386/sse-14.c: Add tests for _mm_permute2_pd,\n+\t_mm256_permute2_pd, _mm_permute2_ps, and _mm256_permute2_ps.\n+\t* gcc.target/i386/xop-vpermil2pd-1.c: New.\n+\t* gcc.target/i386/xop-vpermil2pd-256-1.c: New.\n+\t* gcc.target/i386/xop-vpermil2ps-1.c: New.\n+\t* gcc.target/i386/xop-vpermil2ps-256-1.c: New.\n+\n 2010-02-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/43068"}, {"sha": "96a3f210eb0b405e4965507751be3abc700f9d39", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -162,6 +162,10 @@ test_1 ( _mm_roti_epi8, __m128i, __m128i, 1)\n test_1 ( _mm_roti_epi16, __m128i, __m128i, 1)\n test_1 ( _mm_roti_epi32, __m128i, __m128i, 1)\n test_1 ( _mm_roti_epi64, __m128i, __m128i, 1)\n+test_3 (_mm_permute2_pd, __m128d, __m128d, __m128d, __m128d, 1)\n+test_3 (_mm256_permute2_pd, __m256d, __m256d, __m256d, __m256d, 1)\n+test_3 (_mm_permute2_ps, __m128, __m128, __m128, __m128, 1)\n+test_3 (_mm256_permute2_ps, __m256, __m256, __m256, __m256, 1)\n \n /* lwpintrin.h */\n test_2 ( __lwpval32, void, unsigned int, unsigned int, 1)"}, {"sha": "c7f0594f53e9a18e02a3c9cbae634d9c82f0c94f", "filename": "gcc/testsuite/gcc.target/i386/xop-vpermil2pd-1.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-1.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target xop } */\n+/* { dg-options \"-O2 -mxop\" } */\n+\n+#include \"xop-check.h\"\n+\n+#ifndef ZERO_MATCH\n+#define ZERO_MATCH  2\n+#endif\n+\n+static double\n+select2dp(double *src1, double *src2, long long  sel)\n+{\n+    double tmp = 0.0;\n+\n+    if ((sel & 0x3) == 0) tmp = src1[0];\n+    if ((sel & 0x3) == 1) tmp = src1[1];\n+    if ((sel & 0x3) == 2) tmp = src2[0];\n+    if ((sel & 0x3) == 3) tmp = src2[1];\n+\n+    return tmp;\n+}\n+\n+static double\n+sel_and_condzerodp(double *src1, double *src2, long long  sel, int imm8)\n+{\n+    double tmp;\n+\n+    tmp = select2dp(src1, src2, sel & 0x3);\n+\n+    if (((imm8 & 0x3) == 2) && ((sel & 0x4) == 0x4)) tmp = 0;\n+    if (((imm8 & 0x3) == 3) && ((sel & 0x4) == 0x0)) tmp = 0;\n+\n+    return tmp;\n+}\n+\n+void static\n+xop_test ()\n+{\n+    union128d s1, s2, u;\n+    union128i_q s3;\n+    double e[2];\n+\n+    s1.x = _mm_set_pd (1, 2);\n+    s2.x = _mm_set_pd (3, 4);\n+    s3.x = _mm_set_epi64x (1, 2);\n+    u.x = _mm_permute2_pd(s1.x, s2.x, s3.x, ZERO_MATCH);\n+\n+    e[0] = sel_and_condzerodp (s1.a, s2.a, (s3.a[0] & 0xe)>>1, ZERO_MATCH);\n+    e[1] = sel_and_condzerodp (s1.a, s2.a, (s3.a[1] & 0xe)>>1, ZERO_MATCH);\n+\n+    if (check_union128d (u, e))\n+      abort ();\n+}\n+"}, {"sha": "90012dbf6871e67645e2f0b084042841d8931a12", "filename": "gcc/testsuite/gcc.target/i386/xop-vpermil2pd-256-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2pd-256-1.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target xop } */\n+/* { dg-options \"-O2 -mxop\" } */\n+\n+#include \"xop-check.h\"\n+\n+#ifndef ZERO_MATCH\n+#define ZERO_MATCH 1\n+#endif\n+\n+static double\n+select2dp(double *src1, double *src2, long long  sel)\n+{\n+    double tmp = 3.414;\n+\n+    if ((sel & 0x3) == 0) tmp = src1[0];\n+    if ((sel & 0x3) == 1) tmp = src1[1];\n+    if ((sel & 0x3) == 2) tmp = src2[0];\n+    if ((sel & 0x3) == 3) tmp = src2[1];\n+\n+    return tmp;\n+}\n+\n+static double\n+sel_and_condzerodp(double *src1, double *src2, long long  sel, int imm8)\n+{\n+    double tmp;\n+\n+    tmp = select2dp(src1, src2, sel);\n+\n+    if (((imm8 & 0x3) == 2) && ((sel & 0x4) == 0x4)) tmp = 0;\n+    if (((imm8 & 0x3) == 3) && ((sel & 0x4) == 0x0)) tmp = 0;\n+\n+    return tmp;\n+}\n+\n+void static\n+xop_test ()\n+{\n+    union256d u, s1, s2;\n+    double   e[4] = {0.0};\n+    union256i_q s3;\n+\n+    s1.x = _mm256_set_pd (1, 2, 3, 4);\n+    s2.x = _mm256_set_pd (5, 6, 7, 8);\n+    s3.x = _mm256_set_epi64x (0, 1, 2, 3);\n+    u.x = _mm256_permute2_pd(s1.x, s2.x, s3.x, ZERO_MATCH);\n+\n+    e[0] = sel_and_condzerodp (s1.a, s2.a, (s3.a[0] & 0xe)>>1, ZERO_MATCH);\n+    e[1] = sel_and_condzerodp (s1.a, s2.a, (s3.a[1] & 0xe)>>1, ZERO_MATCH);\n+    e[2] = sel_and_condzerodp (s1.a + 2, s2.a + 2, (s3.a[2] & 0xe)>>1, ZERO_MATCH);\n+    e[3] = sel_and_condzerodp (s1.a + 2, s2.a + 2, (s3.a[3] & 0xe)>>1, ZERO_MATCH);\n+\n+    if (check_union256d (u, e))\n+      abort ();\n+}"}, {"sha": "be47564e509efe54549046dad7b944cb0806cf23", "filename": "gcc/testsuite/gcc.target/i386/xop-vpermil2ps-1.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-1.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target xop } */\n+/* { dg-options \"-O2 -mxop\" } */\n+\n+#include \"xop-check.h\"\n+\n+#ifndef ZERO_MATCH\n+#define ZERO_MATCH  1\n+#endif\n+\n+static float\n+select2sp(float *src1, float *src2, int sel)\n+{\n+    float tmp;\n+\n+    if ((sel & 0x7) == 0) tmp = src1[0];\n+    if ((sel & 0x7) == 1) tmp = src1[1];\n+    if ((sel & 0x7) == 2) tmp = src1[2];\n+    if ((sel & 0x7) == 3) tmp = src1[3];\n+    if ((sel & 0x7) == 4) tmp = src2[0];\n+    if ((sel & 0x7) == 5) tmp = src2[1];\n+    if ((sel & 0x7) == 6) tmp = src2[2];\n+    if ((sel & 0x7) == 7) tmp = src2[3];\n+\n+    return tmp;\n+}\n+static float\n+sel_and_condzerosp(float *src1, float *src2, int sel, int imm8)\n+{\n+    float tmp;\n+\n+    tmp = select2sp(src1, src2, sel & 0x7);\n+\n+    if (((imm8 & 0x3) == 2) && ((sel & 0x8) == 0x8)) tmp = 0;\n+    if (((imm8 & 0x3) == 3) && ((sel & 0x8) == 0x0)) tmp = 0;\n+\n+    return tmp;\n+}\n+\n+void static\n+xop_test ()\n+{\n+    int i;\n+    union128  source1, source2, u;\n+    union128i_d source3;\n+    float s1[4] = {1, 2, 3, 4};\n+    float s2[4] = {5, 6, 7, 8};\n+    int   s3[4] = {0, 1, 0, 1};\n+    float e[4];\n+\n+    source1.x = _mm_loadu_ps(s1);\n+    source2.x = _mm_loadu_ps(s2);\n+    source3.x = _mm_loadu_si128((__m128i*) s3);\n+    u.x = _mm_permute2_ps(source1.x, source2.x, source3.x, ZERO_MATCH);\n+\n+    for (i = 0; i < 4; ++i) {\n+        e[i] = sel_and_condzerosp(&s1[i & 0x4], &s2[i & 0x4], s3[i] & 0xf, ZERO_MATCH & 0x3);\n+    }\n+\n+    if (check_union128 (u, e))\n+      abort ();\n+}"}, {"sha": "4a5fcc61b865474bf2324a6c8bc139986b326adf", "filename": "gcc/testsuite/gcc.target/i386/xop-vpermil2ps-256-1.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02edd2f6e9c389fdade17e42df81f84f7b6e5e94/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vpermil2ps-256-1.c?ref=02edd2f6e9c389fdade17e42df81f84f7b6e5e94", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target xop } */\n+/* { dg-options \"-O2 -mxop\" } */\n+\n+#include \"xop-check.h\"\n+\n+#ifndef ZERO_MATCH\n+#define ZERO_MATCH  3\n+#endif\n+\n+static float\n+select2sp(float *src1, float *src2, int sel)\n+{\n+    float tmp;\n+\n+    if ((sel & 0x7) == 0) tmp = src1[0];\n+    if ((sel & 0x7) == 1) tmp = src1[1];\n+    if ((sel & 0x7) == 2) tmp = src1[2];\n+    if ((sel & 0x7) == 3) tmp = src1[3];\n+    if ((sel & 0x7) == 4) tmp = src2[0];\n+    if ((sel & 0x7) == 5) tmp = src2[1];\n+    if ((sel & 0x7) == 6) tmp = src2[2];\n+    if ((sel & 0x7) == 7) tmp = src2[3];\n+\n+    return tmp;\n+}\n+static float\n+sel_and_condzerosp(float *src1, float *src2, int sel, int imm8)\n+{\n+    float tmp;\n+\n+    tmp = select2sp(src1, src2, sel & 0x7);\n+\n+    if (((imm8 & 0x3) == 2) && ((sel & 0x8) == 0x8)) tmp = 0;\n+    if (((imm8 & 0x3) == 3) && ((sel & 0x8) == 0x0)) tmp = 0;\n+\n+    return tmp;\n+}\n+\n+void static\n+xop_test ()\n+{\n+    int i;\n+    union256  source1, source2, u;\n+    union256i_d source3;\n+    float s1[8]={1, 2, 3, 4, 5, 6, 7, 8};\n+    float s2[8]={9, 10, 11, 12, 13, 14, 15, 16};\n+    int   s3[8]={11, 2, 3, 15, 5, 12, 7, 8};\n+    float  e[8];\n+\n+    source1.x = _mm256_loadu_ps(s1);\n+    source2.x = _mm256_loadu_ps(s2);\n+    source3.x = _mm256_loadu_si256((__m256i*) s3);\n+    u.x = _mm256_permute2_ps(source1.x, source2.x, source3.x, ZERO_MATCH);\n+\n+    for (i = 0; i < 8; ++i) {\n+        e[i] = sel_and_condzerosp(&s1[i & 0x4], &s2[i & 0x4], s3[i] & 0xf, ZERO_MATCH & 0x3);\n+    }\n+\n+   if (check_union256(u, e))\n+     abort ();\n+}"}]}