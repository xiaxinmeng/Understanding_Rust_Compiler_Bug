{"sha": "9259db42812f8660fa44be5053f383e55249b9fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1OWRiNDI4MTJmODY2MGZhNDRiZTUwNTNmMzgzZTU1MjQ5YjlmYw==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2013-07-23T12:33:14Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2013-07-23T12:33:14Z"}, "message": "[AArch64, ILP32] 6/6 Add support for \"wsp\" register.\n\ngcc/\n\n\t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Also return\n\ttrue for SP_REGNUM if mode == ptr_mode.\n\t* config/aarch64/aarch64.h (ADDITIONAL_REGISTER_NAMES): Add \"wsp\"\n\twith value R0_REGNUM + 31.\n\nFrom-SVN: r201170", "tree": {"sha": "064017f8dad846a7cd9b78b309f4e3a47ce22c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/064017f8dad846a7cd9b78b309f4e3a47ce22c3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9259db42812f8660fa44be5053f383e55249b9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9259db42812f8660fa44be5053f383e55249b9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9259db42812f8660fa44be5053f383e55249b9fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9259db42812f8660fa44be5053f383e55249b9fc/comments", "author": null, "committer": null, "parents": [{"sha": "407a0fa3a4f01eb686bd052400159deabdca12f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/407a0fa3a4f01eb686bd052400159deabdca12f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/407a0fa3a4f01eb686bd052400159deabdca12f1"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "db2fb7cabea90371a983fdd12334e9543f0d0ee1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9259db42812f8660fa44be5053f383e55249b9fc", "patch": "@@ -1,3 +1,10 @@\n+2013-07-23  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Also return\n+\ttrue for SP_REGNUM if mode == ptr_mode.\n+\t* config/aarch64/aarch64.h (ADDITIONAL_REGISTER_NAMES): Add \"wsp\"\n+\twith value R0_REGNUM + 31.\n+\n 2013-07-23  Yufeng Zhang  <yufeng.zhang@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_pad_arg_upward): In big-endian,"}, {"sha": "aed035a434ee8d6101765de170527e6ca3b5a979", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9259db42812f8660fa44be5053f383e55249b9fc", "patch": "@@ -382,8 +382,13 @@ aarch64_hard_regno_mode_ok (unsigned regno, enum machine_mode mode)\n   if (GET_MODE_CLASS (mode) == MODE_CC)\n     return regno == CC_REGNUM;\n \n-  if (regno == SP_REGNUM || regno == FRAME_POINTER_REGNUM\n-      || regno == ARG_POINTER_REGNUM)\n+  if (regno == SP_REGNUM)\n+    /* The purpose of comparing with ptr_mode is to support the\n+       global register variable associated with the stack pointer\n+       register via the syntax of asm (\"wsp\") in ILP32.  */\n+    return mode == Pmode || mode == ptr_mode;\n+\n+  if (regno == FRAME_POINTER_REGNUM || regno == ARG_POINTER_REGNUM)\n     return mode == Pmode;\n \n   if (GP_REGNUM_P (regno) && ! aarch64_vect_struct_mode_p (mode))"}, {"sha": "092426973c6ff0821c0356a066f8cf40095144c8", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259db42812f8660fa44be5053f383e55249b9fc/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=9259db42812f8660fa44be5053f383e55249b9fc", "patch": "@@ -278,7 +278,7 @@ extern unsigned long aarch64_tune_flags;\n     R_ALIASES(16), R_ALIASES(17), R_ALIASES(18), R_ALIASES(19), \\\n     R_ALIASES(20), R_ALIASES(21), R_ALIASES(22), R_ALIASES(23), \\\n     R_ALIASES(24), R_ALIASES(25), R_ALIASES(26), R_ALIASES(27), \\\n-    R_ALIASES(28), R_ALIASES(29), R_ALIASES(30), /* 31 omitted  */ \\\n+    R_ALIASES(28), R_ALIASES(29), R_ALIASES(30), {\"wsp\", R0_REGNUM + 31}, \\\n     V_ALIASES(0),  V_ALIASES(1),  V_ALIASES(2),  V_ALIASES(3),  \\\n     V_ALIASES(4),  V_ALIASES(5),  V_ALIASES(6),  V_ALIASES(7),  \\\n     V_ALIASES(8),  V_ALIASES(9),  V_ALIASES(10), V_ALIASES(11), \\"}]}