{"sha": "f1943b772f833a3e511c35a78cc90607e752a202", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE5NDNiNzcyZjgzM2EzZTUxMWMzNWE3OGNjOTA2MDdlNzUyYTIwMg==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-06-26T02:13:51Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-06-26T02:13:51Z"}, "message": "Makefile.in (BASE_FLAGS_TO_PASS): Add gcc_version_trigger.\n\nd\negcs/ChangeLog:\n1998-06-26  Manfred Hollstein  <manfred@s-direktnet.de>\n\t* Makefile.in (BASE_FLAGS_TO_PASS): Add gcc_version_trigger.\n\t(Makefile): Depend on $(gcc_version_trigger).\n\t* configure (gcc_version): Change default initializer to empty\n\tstring.\n\t(gcc_version_trigger): New variable; pass this variable down\n\tto subdir configures to enable them checking gcc's version\n\tthemselves. Emit make macros for both gcc_version vars.\n\t(topsrcdir): Initialize reliably.\n\t(recursion line): Remove --with-gcc-version=${gcc_version}.\negcs/gcc/ChangeLog:\n1998-06-26  Manfred Hollstein  <manfred@s-direktnet.de>\n\t* Makefile.in (gcc_version, gcc_version_trigger): New macros.\n\t(version): Initialize from $(gcc_version).\n\t* configure.in (version): Rename to gcc_version.\n\t(gcc_version_trigger): New variable; call AC_SUBST for it and\n\temit it into the generated config.status.\n\t* configure: Regenerate.\negcs/libf2c/ChangeLog.egcs:\n1998-06-26  Manfred Hollstein  <manfred@s-direktnet.de>\n\t* Makefile.in (gcc_version_trigger): Add new macro.\n\t(config.status): Add dependency upon $(gcc_version_trigger).\n\t* configure.in (gcc_version_trigger): New variable; initialize\n\tusing value from toplevel configure; add AC_SUBST for it.\n\t(gcc_version): Change initialization to use this new variable.\n\t* configure: Regenerate.\negcs/libio/ChangeLog:\n1998-06-26  Manfred Hollstein  <manfred@s-direktnet.de>\n\t* config.shared (FLAGS_TO_PASS): Add gcc_version_trigger.\n\t(Makefile): Add dependency upon $(gcc_version_trigger).\n\nFrom-SVN: r20736", "tree": {"sha": "51d261c8aa76a052e642e4bccf8260e143210109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51d261c8aa76a052e642e4bccf8260e143210109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1943b772f833a3e511c35a78cc90607e752a202", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1943b772f833a3e511c35a78cc90607e752a202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1943b772f833a3e511c35a78cc90607e752a202", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1943b772f833a3e511c35a78cc90607e752a202/comments", "author": null, "committer": null, "parents": [{"sha": "e4bfc274846798f11a977e98f27c442ad90ca000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4bfc274846798f11a977e98f27c442ad90ca000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4bfc274846798f11a977e98f27c442ad90ca000"}], "stats": {"total": 148, "additions": 82, "deletions": 66}, "files": [{"sha": "af334067649a2d80acad208c1288019937e1d8a3", "filename": "configure", "status": "modified", "additions": 30, "deletions": 33, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -56,7 +56,8 @@ exec_prefixoption=\n fatal=\n floating_point=default\n gas=default\n-gcc_version=UNKNOWN\n+gcc_version=\n+gcc_version_trigger=\n host_alias=NOHOST\n host_makefile_frag=\n moveifchange=\n@@ -458,6 +459,7 @@ fi\n \n configsub=`echo ${progname} | sed 's/configure$/config.sub/'`\n moveifchange=`echo ${progname} | sed 's/configure$/move-if-change/'`\n+topsrcdir=`cd \\`dirname ${progname}\\`; pwd`\n \n # this is a hack.  sun4 must always be a valid host alias or this will fail.\n if ${config_shell} ${configsub} sun4 >/dev/null 2>&1 ; then\n@@ -520,6 +522,28 @@ case \"${exec_prefixoption}\" in\n *) ;;\n esac\n \n+# Define the trigger file to make sure configure will re-run whenever\n+# the gcc version number changes.\n+if [ \"${with_gcc_version_trigger+set}\" = set ]; then\n+    gcc_version_trigger=\"$with_gcc_version_trigger\"\n+    gcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${with_gcc_version_trigger}`\n+else\n+    # If gcc's sources are available, define the trigger file.\n+    if [ -f ${topsrcdir}/gcc/version.c ] ; then\n+\tgcc_version_trigger=${topsrcdir}/gcc/version.c\n+\tgcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${gcc_version_trigger}`\n+\tcase \"$arguments\" in\n+\t  *--with-gcc-version-trigger=$gcc_version_trigger* )\n+\t    ;;\n+\t  * )\n+\t    # Make sure configure.in knows about this.\n+\t    arguments=\"--with-gcc-version-trigger=$gcc_version_trigger $arguments\"\n+\t    ;;\n+\tesac\n+\twithoptions=\"--with-gcc-version-trigger=$gcc_version_trigger $withoptions\"\n+    fi\n+fi\n+\n ### break up ${srcdir}/configure.in.\n case \"`grep '^# per\\-host:' ${srcdir}/configure.in`\" in\n \"\")\n@@ -701,33 +725,6 @@ if [ \"${program_prefix}\" != \"\" ] ; then\n     program_transform_name=\"-e s,^,${program_prefix}, ${program_transform_name}\"\n fi\n \n-# Check whether --with-gcc-version was given.\n-if [ \"${with_gcc_version+set}\" = set ]; then\n-    gcc_version=\"$with_gcc_version\"\n-else\n-    if [ \"${srcdir}\" = \".\" ] ; then\n-\tif [ \"${with_target_subdir}\" != \".\" ] ; then\n-\t    topsrcdir=${with_multisrctop}../..\n-\telse\n-\t    topsrcdir=${with_multisrctop}..\n-\tfi\n-    else\n-\tcase ${srcdir} in\n-\t    */*/* )\t# Need to do this only in subdirectories.\n-\t\ttopsrcdir=${srcdir}/..\n-\t\t;;\n-\t    * )\t\t# We are already in the topsrcdir.\n-\t\ttopsrcdir=${srcdir}\n-\t\t;;\n-\tesac\n-    fi\n-    # If gcc's sources are available, extract its version number which is used by\n-    # $libsubdir.\n-    if [ -f ${topsrcdir}/gcc/version.c ] ; then\n-\tgcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${topsrcdir}/gcc/version.c`\n-    fi\n-fi\n-\n # If CC and CXX are not set in the environment, and the Makefile\n # exists, try to extract them from it.  This is to handle running\n # ./config.status by hand.\n@@ -1266,10 +1263,10 @@ EOF\n \t        echo enable_version_specific_runtime_libs = ${enable_version_specific_runtime_libs} >> ${Makefile}\n \t    fi\n \n-\t    # Emit a macro which is used to build the libsubdir macro where\n-\t    # compiler specific stuff can be found/installed.\n-\t    # FIXME: This works only if gcc's sources are available in a gcc\n-\t    # subdirectory!\n+\t    # Emit a macro which describes the file containing gcc's\n+\t    # version number.\n+\t    echo gcc_version_trigger = ${gcc_version_trigger} >> ${Makefile}\n+\t    # And emit a macro defining gcc's version number.\n \t    echo gcc_version = ${gcc_version} >> ${Makefile}\n \n             # reset prefix, exec_prefix, srcdir, SUBDIRS, NONSUBDIRS,\n@@ -1478,7 +1475,7 @@ if [ -z \"${norecursion}\" -a -n \"${configdirs}\" ] ; then\n \t\t\tif [ ! -z \"${recprog}\" ] ; then\n \t                        if eval ${config_shell} ${recprog} ${verbose} ${buildopt} --host=${host_alias} --target=${target_alias} \\\n         \t                        ${prefixoption} ${tmpdiroption} ${exec_prefixoption} \\\n-                \t                ${srcdiroption} ${program_prefixoption} ${program_suffixoption} ${program_transform_nameoption} ${site_option} --with-gcc-version=${gcc_version} ${withoptions} ${withoutoptions} ${enableoptions} ${disableoptions} ${floating_pointoption} ${cache_file_option} ${removing} ${other_options} ${redirect} ; then\n+                \t                ${srcdiroption} ${program_prefixoption} ${program_suffixoption} ${program_transform_nameoption} ${site_option} ${withoptions} ${withoutoptions} ${enableoptions} ${disableoptions} ${floating_pointoption} ${cache_file_option} ${removing} ${other_options} ${redirect} ; then\n \t                                true\n         \t                else\n \t\t\t\t\techo Configure in `pwd` failed, exiting. 1>&2"}, {"sha": "f8b3b7456a8a994ed287e11b9756d23502d8cfc5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -245,7 +245,10 @@ lang_specs_files=@lang_specs_files@\n lang_options_files=@lang_options_files@\n GCC_THREAD_FILE=@thread_file@\n GTHREAD_FLAGS=@gthread_flags@\n-version=@version@\n+# Be prepared for gcc2 merges.\n+gcc_version=@gcc_version@\n+gcc_version_trigger=@gcc_version_trigger@\n+version=$(gcc_version)\n mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n # Common prefix for installation directories."}, {"sha": "7448427836d904b28435a2869ba343ab4fabe9fd", "filename": "gcc/configure", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -4969,8 +4969,13 @@ if [ x$host_truncate_target != x ]; then\n \ttarget=`echo $target | sed -e 's/\\(..............\\).*/\\1/'`\n fi\n \n-# Get the version number from the toplevel\n-version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${srcdir}/version.c`\n+# Get the version trigger filename from the toplevel\n+if [ \"${with_gcc_version_trigger+set}\" = set ]; then\n+\tgcc_version_trigger=$with_gcc_version_trigger\n+else\n+\tgcc_version_trigger=${srcdir}/version.c\n+fi\n+gcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${gcc_version_trigger}`\n \n # Get an absolute path to the GCC top-level source directory\n holddir=`pwd`\n@@ -5134,7 +5139,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:5138: checking assembler alignment features\" >&5\n+echo \"configure:5143: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n if [ -x as$host_exeext ]; then\n@@ -5423,6 +5428,7 @@ ${CONFIG_SHELL-/bin/sh} $srcdir/configure.frag $srcdir \"$subdirs\" \"$dep_host_xma\n \n \n \n+\n \n \n # Echo that links are built\n@@ -5662,7 +5668,8 @@ s%@host_xm_file_list@%$host_xm_file_list%g\n s%@lang_specs_files@%$lang_specs_files%g\n s%@lang_options_files@%$lang_options_files%g\n s%@thread_file@%$thread_file%g\n-s%@version@%$version%g\n+s%@gcc_version@%$gcc_version%g\n+s%@gcc_version_trigger@%$gcc_version_trigger%g\n s%@local_prefix@%$local_prefix%g\n s%@gxx_include_dir@%$gxx_include_dir%g\n s%@fixincludes@%$fixincludes%g\n@@ -5909,7 +5916,8 @@ host_xmake_file='${host_xmake_file}'\n dep_tmake_file='${dep_tmake_file}'\n tmake_file='${tmake_file}'\n thread_file='${thread_file}'\n-version='${version}'\n+gcc_version='${gcc_version}'\n+gcc_version_trigger='${gcc_version_trigger}'\n local_prefix='${local_prefix}'\n build_install_headers_dir='${build_install_headers_dir}'\n build_exeext='${build_exeext}'"}, {"sha": "731b8fdbd352b3a04a2eed46ca97a8c1f19a9666", "filename": "gcc/configure.in", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -3125,8 +3125,13 @@ if [[ x$host_truncate_target != x ]]; then\n \ttarget=`echo $target | sed -e 's/\\(..............\\).*/\\1/'`\n fi\n \n-# Get the version number from the toplevel\n-version=`sed -e 's/.*\\\"\\([[^ \\\"]]*\\)[[ \\\"]].*/\\1/' < ${srcdir}/version.c`\n+# Get the version trigger filename from the toplevel\n+if [[ \"${with_gcc_version_trigger+set}\" = set ]]; then\n+\tgcc_version_trigger=$with_gcc_version_trigger\n+else\n+\tgcc_version_trigger=${srcdir}/version.c\n+fi\n+gcc_version=`sed -e 's/.*\\\"\\([[^ \\\"]]*\\)[[ \\\"]].*/\\1/' < ${gcc_version_trigger}`\n \n # Get an absolute path to the GCC top-level source directory\n holddir=`pwd`\n@@ -3551,7 +3556,8 @@ AC_SUBST(host_xm_file_list)\n AC_SUBST(lang_specs_files)\n AC_SUBST(lang_options_files)\n AC_SUBST(thread_file)\n-AC_SUBST(version)\n+AC_SUBST(gcc_version)\n+AC_SUBST(gcc_version_trigger)\n AC_SUBST(local_prefix)\n AC_SUBST(gxx_include_dir)\n AC_SUBST(fixincludes)\n@@ -3654,7 +3660,8 @@ host_xmake_file='${host_xmake_file}'\n dep_tmake_file='${dep_tmake_file}'\n tmake_file='${tmake_file}'\n thread_file='${thread_file}'\n-version='${version}'\n+gcc_version='${gcc_version}'\n+gcc_version_trigger='${gcc_version_trigger}'\n local_prefix='${local_prefix}'\n build_install_headers_dir='${build_install_headers_dir}'\n build_exeext='${build_exeext}'"}, {"sha": "e9a027eea1bc6477ebb33e3f563a8793291d1494", "filename": "libf2c/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FMakefile.in?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -28,6 +28,7 @@ prefix = @prefix@\n exec_prefix = @exec_prefix@\n target_alias = @target_alias@\n gcc_version = @gcc_version@\n+gcc_version_trigger = @gcc_version_trigger@\n \n bindir = $(exec_prefix)/bin\n libdir = $(exec_prefix)/lib\n@@ -193,7 +194,7 @@ ${srcdir}/libU77/configure: ${srcdir}/libU77/configure.in\n \t  cd $(srcdir)/libU77 && autoconf && rm -f config.cache\n g2c.h Makefile: $(srcdir)/g2c.h.in $(srcdir)/Makefile.in config.status\n \t$(SHELL) config.status\n-config.status: $(srcdir)/configure\n+config.status: $(srcdir)/configure $(gcc_version_trigger)\n \t$(SHELL) config.status --recheck\n \n info install-info clean-info dvi:"}, {"sha": "b3e6d50cf8470c97853988c1a68cfef138b04fae", "filename": "libf2c/configure", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -1861,18 +1861,17 @@ test -f libF77/makefile && mv libF77/makefile  libF77/makefile.ori\n test -f libI77/makefile && mv libI77/makefile  libI77/makefile.ori\n test -f libU77/makefile && mv libU77/makefile  libU77/makefile.ori\n \n-# Get the version number from the toplevel\n-if test x${with_gcc_version} = x; then\n-  # Try to get the version number from a hopefully existing gcc directory.\n-  if test -d ${srcdir}/../gcc; then\n-    gcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${srcdir}/../gcc/version.c`\n-  else\n-    gcc_version=UNKNOWN\n-  fi\n+# Get the version trigger filename from the toplevel\n+if [ \"${with_gcc_version_trigger+set}\" = set ]; then\n+\tgcc_version_trigger=$with_gcc_version_trigger\n+\tgcc_version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < ${gcc_version_trigger}`\n else\n-  gcc_version=${with_gcc_version}\n+\tgcc_version_trigger=\n+\tgcc_version=UNKNOWN\n fi\n \n+\n+\n ac_aux_dir=\n for ac_dir in $srcdir $srcdir/.. $srcdir/../..; do\n   if test -f $ac_dir/install-sh; then\n@@ -1920,7 +1919,7 @@ else { echo \"configure: error: can not run $ac_config_sub\" 1>&2; exit 1; }\n fi\n \n echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1924: checking host system type\" >&5\n+echo \"configure:1923: checking host system type\" >&5\n \n host_alias=$host\n case \"$host_alias\" in\n@@ -1941,7 +1940,7 @@ host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$host\" 1>&6\n \n echo $ac_n \"checking target system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1945: checking target system type\" >&5\n+echo \"configure:1944: checking target system type\" >&5\n \n target_alias=$target\n case \"$target_alias\" in\n@@ -1959,7 +1958,7 @@ target_os=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$target\" 1>&6\n \n echo $ac_n \"checking build system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1963: checking build system type\" >&5\n+echo \"configure:1962: checking build system type\" >&5\n \n build_alias=$build\n case \"$build_alias\" in\n@@ -2136,6 +2135,7 @@ s%@CPP@%$CPP%g\n s%@F2C_INTEGER@%$F2C_INTEGER%g\n s%@F2C_LONGINT@%$F2C_LONGINT%g\n s%@gcc_version@%$gcc_version%g\n+s%@gcc_version_trigger@%$gcc_version_trigger%g\n s%@host@%$host%g\n s%@host_alias@%$host_alias%g\n s%@host_cpu@%$host_cpu%g"}, {"sha": "5dcfb2d6f0935f9eaf34790787a42fc2ca167444", "filename": "libf2c/configure.in", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/libf2c%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure.in?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -343,18 +343,17 @@ test -f libF77/makefile && mv libF77/makefile  libF77/makefile.ori\n test -f libI77/makefile && mv libI77/makefile  libI77/makefile.ori\n test -f libU77/makefile && mv libU77/makefile  libU77/makefile.ori\n \n-# Get the version number from the toplevel\n-if test x${with_gcc_version} = x; then\n-  # Try to get the version number from a hopefully existing gcc directory.\n-  if test -d ${srcdir}/../gcc; then\n-    gcc_version=`sed -e 's/.*\\\"\\([[^ \\\"]]*\\)[[ \\\"]].*/\\1/' < ${srcdir}/../gcc/version.c`\n-  else\n-    gcc_version=UNKNOWN\n-  fi\n+# Get the version trigger filename from the toplevel\n+if [[ \"${with_gcc_version_trigger+set}\" = set ]]; then\n+\tgcc_version_trigger=$with_gcc_version_trigger\n+\tgcc_version=`sed -e 's/.*\\\"\\([[^ \\\"]]*\\)[[ \\\"]].*/\\1/' < ${gcc_version_trigger}`\n else\n-  gcc_version=${with_gcc_version}\n+\tgcc_version_trigger=\n+\tgcc_version=UNKNOWN\n fi\n+\n AC_SUBST(gcc_version)\n+AC_SUBST(gcc_version_trigger)\n AC_CANONICAL_SYSTEM\n AC_SUBST(target_alias)\n "}, {"sha": "011263a8a1fabdb36d47efb9c8463387c5e24c81", "filename": "libio/config.shared", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1943b772f833a3e511c35a78cc90607e752a202/libio%2Fconfig.shared", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1943b772f833a3e511c35a78cc90607e752a202/libio%2Fconfig.shared", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fconfig.shared?ref=f1943b772f833a3e511c35a78cc90607e752a202", "patch": "@@ -221,6 +221,7 @@ if [ \"${SUBDIRS}\" != \"\" ] ; then\n   echo >&2 '\t\"gxx_include_dir=$(gxx_include_dir)\" \\'\n   echo >&2 '\t\"libsubdir=$(libsubdir)\" \\'\n   echo >&2 '\t\"gcc_version=$(gcc_version)\" \\'\n+  echo >&2 '\t\"gcc_version_trigger=$(gcc_version_trigger)\" \\'\n   echo >&2 '\t\"AR=$(AR)\" \\'\n   echo >&2 '\t\"AR_FLAGS=$(AR_FLAGS)\" \\'\n   echo >&2 '\t\"CC=$(CC)\" \\'\n@@ -449,7 +450,7 @@ echo >&2 'force:'\n echo >&2 ''\n echo >&2 '# with the gnu make, this is done automatically.'\n echo >&2 ''\n-echo >&2 'Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)'\n+echo >&2 'Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag) $(gcc_version_trigger)'\n echo >&2 '\t$(SHELL) ./config.status'\n echo >&2 ''\n echo >&2 '.NOEXPORT:'"}]}