{"sha": "9215065fd6861ffbe6e5d7348dca6720f594612b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIxNTA2NWZkNjg2MWZmYmU2ZTVkNzM0OGRjYTY3MjBmNTk0NjEyYg==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-09-14T12:50:10Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2008-09-14T12:50:10Z"}, "message": "re PR target/19636 (Can't compile large switch statement)\n\n\tPR target/19636\n\tPR target/24894\n\tPR target/31644\n\tPR target/31786\n\t* config/avr/avr.c (legitimate_address_p): Fix problem where subreg\n\tis not recognized as a valid register usage. Allow REG_X to be used\n\tas a base pointer.\n\t* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Remove code that\n\tforces a reload when using a base register.\n\nFrom-SVN: r140360", "tree": {"sha": "b1ce23fee97293e0ddc968da9d75c9fcfe96e8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1ce23fee97293e0ddc968da9d75c9fcfe96e8f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9215065fd6861ffbe6e5d7348dca6720f594612b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9215065fd6861ffbe6e5d7348dca6720f594612b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9215065fd6861ffbe6e5d7348dca6720f594612b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9215065fd6861ffbe6e5d7348dca6720f594612b/comments", "author": null, "committer": null, "parents": [{"sha": "f67894ed5f8520f7c6367122dda3a5f9feabd0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67894ed5f8520f7c6367122dda3a5f9feabd0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67894ed5f8520f7c6367122dda3a5f9feabd0e5"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "c0008973357056b29949198ebfe2095e2a64fed8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9215065fd6861ffbe6e5d7348dca6720f594612b", "patch": "@@ -1,3 +1,15 @@\n+2008-09-14  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\tPR target/19636\n+\tPR target/24894\n+\tPR target/31644\n+\tPR target/31786\n+\t* config/avr/avr.c (legitimate_address_p): Fix problem where subreg\n+\tis not recognized as a valid register usage. Allow REG_X to be used\n+\tas a base pointer.\n+\t* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Remove code that\n+\tforces a reload when using a base register.\n+\n 2008-09-14  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/cygming-crtend.c (register_frame_ctor): If"}, {"sha": "279aea5259244cdb7a8e8cba4e77f466759335fa", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=9215065fd6861ffbe6e5d7348dca6720f594612b", "patch": "@@ -1089,6 +1089,8 @@ legitimate_address_p (enum machine_mode mode, rtx x, int strict)\n \t\t true_regnum (XEXP (x, 0)));\n       debug_rtx (x);\n     }\n+  if (!strict && GET_CODE (x) == SUBREG)\n+\tx = SUBREG_REG (x);\n   if (REG_P (x) && (strict ? REG_OK_FOR_BASE_STRICT_P (x)\n                     : REG_OK_FOR_BASE_NOSTRICT_P (x)))\n     r = POINTER_REGS;\n@@ -1103,6 +1105,7 @@ legitimate_address_p (enum machine_mode mode, rtx x, int strict)\n       if (fit)\n \t{\n \t  if (! strict\n+\t      || REGNO (XEXP (x,0)) == REG_X\n \t      || REGNO (XEXP (x,0)) == REG_Y\n \t      || REGNO (XEXP (x,0)) == REG_Z)\n \t    r = BASE_POINTER_REGS;"}, {"sha": "3b7cbbb4343eae242c5c74fe530d642091757b7e", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9215065fd6861ffbe6e5d7348dca6720f594612b/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=9215065fd6861ffbe6e5d7348dca6720f594612b", "patch": "@@ -483,10 +483,6 @@ do {\t\t\t\t\t\t\t\t\t    \\\n \t\t           OPNUM, TYPE);\t\t\t\t    \\\n \t      goto WIN;\t\t\t\t\t\t\t    \\\n \t    }\t\t\t\t\t\t\t\t    \\\n-\t  push_reload (XEXP (X, 0), NULL_RTX, &XEXP (X, 0), NULL,\t    \\\n-\t\t       BASE_POINTER_REGS, GET_MODE (X), VOIDmode, 0, 0,\t    \\\n-\t\t       OPNUM, TYPE);\t\t\t\t\t    \\\n-          goto WIN;\t\t\t\t\t\t\t    \\\n \t}\t\t\t\t\t\t\t\t    \\\n       else if (! (frame_pointer_needed && XEXP (X,0) == frame_pointer_rtx)) \\\n \t{\t\t\t\t\t\t\t\t    \\"}]}