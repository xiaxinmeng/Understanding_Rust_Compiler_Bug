{"sha": "7f84cec92c19faa9e728407d8809dbf5562f17f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y4NGNlYzkyYzE5ZmFhOWU3Mjg0MDdkODgwOWRiZjU1NjJmMTdmMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-09-03T16:10:00Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-09-03T16:10:00Z"}, "message": "cp-tree.h: Declare warn_nontemplate_friend.\n\nd\n1998-09-03  Benjamin Kosnik  <bkoz@cygnus.com>\n\t* cp-tree.h: Declare warn_nontemplate_friend.\n\t* decl2.c (lang_decode_option): Set.\n\t* lang-options.h: Add -Wnon-template-friend.\n\t* friend.c (do_friend): Use to toggle non-template function warning.\ng++/17054\n\nFrom-SVN: r22220", "tree": {"sha": "bfc27424252d98ef221b076b7d7e7eb1207eecfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfc27424252d98ef221b076b7d7e7eb1207eecfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f84cec92c19faa9e728407d8809dbf5562f17f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f84cec92c19faa9e728407d8809dbf5562f17f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f84cec92c19faa9e728407d8809dbf5562f17f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f84cec92c19faa9e728407d8809dbf5562f17f0/comments", "author": null, "committer": null, "parents": [{"sha": "56e3f54ca01ad037f6d84e382c1b769c406eaf33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e3f54ca01ad037f6d84e382c1b769c406eaf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e3f54ca01ad037f6d84e382c1b769c406eaf33"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "e24af379e9712f767e29342e99cd7925a515d8bc", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f84cec92c19faa9e728407d8809dbf5562f17f0/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f84cec92c19faa9e728407d8809dbf5562f17f0/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=7f84cec92c19faa9e728407d8809dbf5562f17f0", "patch": "@@ -307,6 +307,11 @@ int warn_unknown_pragmas; /* Tri state variable.  */\n \n int warn_multichar = 1;\n \n+/* Nonzero means warn when non-templatized friend functions are\n+   declared within a template */\n+\n+int warn_nontemplate_friend = 1;\n+\n /* Nonzero means `$' can be in an identifier.  */\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n@@ -704,6 +709,8 @@ lang_decode_option (argc, argv)\n \t/* Set to greater than 1, so that even unknown pragmas in\n \t   system headers will be warned about.  */  \n \twarn_unknown_pragmas = setting * 2;\n+      else if (!strcmp (p, \"non-template-friend\"))\n+\twarn_nontemplate_friend = setting;\n       else if (!strcmp (p, \"comment\"))\n \t;\t\t\t/* cpp handles this one.  */\n       else if (!strcmp (p, \"comments\"))\n@@ -735,7 +742,8 @@ lang_decode_option (argc, argv)\n \t  warn_sign_promo = setting;\n \t  /* Only warn about unknown pragmas that are not in system\n \t     headers.  */                                        \n-\t  warn_unknown_pragmas = 1;                  \n+\t  warn_unknown_pragmas = 1;       \n+\t  warn_nontemplate_friend = setting;           \n \t}\n       else return strings_processed;\n     }"}, {"sha": "d01ecdafdf1646734bacfd35d75a4a0ff551bf19", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f84cec92c19faa9e728407d8809dbf5562f17f0/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f84cec92c19faa9e728407d8809dbf5562f17f0/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=7f84cec92c19faa9e728407d8809dbf5562f17f0", "patch": "@@ -447,7 +447,8 @@ do_friend (ctype, declarator, decl, parmdecls, flags, quals, funcdef_flag)\n \t  else \n \t    decl = push_template_decl_real (decl, /*is_friend=*/1); \n \n-\t  if (! funcdef_flag && ! flag_guiding_decls && ! is_friend_template\n+\t  if (warn_nontemplate_friend\n+\t      && ! funcdef_flag && ! flag_guiding_decls && ! is_friend_template\n \t      && current_template_parms && uses_template_parms (decl))\n \t    {\n \t      static int explained;\n@@ -458,6 +459,7 @@ do_friend (ctype, declarator, decl, parmdecls, flags, quals, funcdef_flag)\n \t\t  warning (\"  (if this is not what you intended, make sure\");\n \t\t  warning (\"  the function template has already been declared,\");\n \t\t  warning (\"  and add <> after the function name here)\");\n+ \t\t  warning (\"  To disable warning use -Wno-non-template-friend\");\n \t\t  explained = 1;\n \t\t}\n \t    }"}]}