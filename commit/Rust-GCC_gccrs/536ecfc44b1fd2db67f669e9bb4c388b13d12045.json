{"sha": "536ecfc44b1fd2db67f669e9bb4c388b13d12045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2ZWNmYzQ0YjFmZDJkYjY3ZjY2OWU5YmI0YzM4OGIxM2QxMjA0NQ==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2018-11-09T06:39:25Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2018-11-09T06:39:25Z"}, "message": "neon.md (div<mode>3): New pattern.\n\n2018-11-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\t* config/arm/neon.md (div<mode>3): New pattern.\n\ntestsuite/\n\t* gcc.target/arm/neon-vect-div-1.c: New test.\n\t* gcc.target/arm/neon-vect-div-2.c: Likewise.\n\nFrom-SVN: r265948", "tree": {"sha": "ca9ede50c30e6165eea043525144b0a495c3452d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca9ede50c30e6165eea043525144b0a495c3452d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536ecfc44b1fd2db67f669e9bb4c388b13d12045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536ecfc44b1fd2db67f669e9bb4c388b13d12045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536ecfc44b1fd2db67f669e9bb4c388b13d12045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536ecfc44b1fd2db67f669e9bb4c388b13d12045/comments", "author": null, "committer": null, "parents": [{"sha": "41f8d1fc011e0da012bd00624fd2668da83d9f31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f8d1fc011e0da012bd00624fd2668da83d9f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41f8d1fc011e0da012bd00624fd2668da83d9f31"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "800a115aaf94a65c96e772d1cfcb2363df259168", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=536ecfc44b1fd2db67f669e9bb4c388b13d12045", "patch": "@@ -1,3 +1,7 @@\n+2018-11-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* config/arm/neon.md (div<mode>3): New pattern.\n+\n 2018-11-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_PTWRITE_SET): New."}, {"sha": "07572e4e62c32194b8867798ff45b6055a3617d3", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=536ecfc44b1fd2db67f669e9bb4c388b13d12045", "patch": "@@ -620,6 +620,38 @@\n                     (const_string \"neon_mul_<V_elem_ch><q>\")))]\n )\n \n+/* Perform division using multiply-by-reciprocal.\n+   Reciprocal is calculated using Newton-Raphson method.\n+   Enabled with -funsafe-math-optimizations -freciprocal-math\n+   and disabled for -Os since it increases code size .  */\n+\n+(define_expand \"div<mode>3\"\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (div:VCVTF (match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t  (match_operand:VCVTF 2 \"s_register_operand\" \"w\")))]\n+  \"TARGET_NEON && !optimize_size\n+   && flag_reciprocal_math\"\n+  {\n+    rtx rec = gen_reg_rtx (<MODE>mode);\n+    rtx vrecps_temp = gen_reg_rtx (<MODE>mode);\n+\n+    /* Reciprocal estimate.  */\n+    emit_insn (gen_neon_vrecpe<mode> (rec, operands[2]));\n+\n+    /* Perform 2 iterations of newton-raphson method.  */\n+    for (int i = 0; i < 2; i++)\n+      {\n+\temit_insn (gen_neon_vrecps<mode> (vrecps_temp, rec, operands[2]));\n+\temit_insn (gen_mul<mode>3 (rec, rec, vrecps_temp));\n+      }\n+\n+    /* We now have reciprocal in rec, perform operands[0] = operands[1] * rec.  */\n+    emit_insn (gen_mul<mode>3 (operands[0], operands[1], rec));\n+    DONE;\n+  }\n+)\n+\n+\n (define_insn \"mul<mode>3add<mode>_neon\"\n   [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n         (plus:VDQW (mult:VDQW (match_operand:VDQW 2 \"s_register_operand\" \"w\")"}, {"sha": "aa7984789eef0c1723606f57c609512281db03d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=536ecfc44b1fd2db67f669e9bb4c388b13d12045", "patch": "@@ -1,3 +1,8 @@\n+2018-11-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* gcc.target/arm/neon-vect-div-1.c: New test.\n+\t* gcc.target/arm/neon-vect-div-2.c: Likewise.\n+\n 2018-11-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* gcc.target/i386/ptwrite1.c: New test."}, {"sha": "50d04b4175b8a550387fbb493e710ebe78207250", "filename": "gcc/testsuite/gcc.target/arm/neon-vect-div-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-1.c?ref=536ecfc44b1fd2db67f669e9bb4c388b13d12045", "patch": "@@ -0,0 +1,16 @@\n+/* Test pattern div<mode>3.  */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-require-effective-target vect_hw_misalign } */\n+/* { dg-options \"-O2 -ftree-vectorize -funsafe-math-optimizations -fdump-tree-vect-details\" } */\n+/* { dg-add-options arm_neon } */\n+\n+void\n+foo (int len, float * __restrict p, float *__restrict x)\n+{\n+  len = len & ~31;\n+  for (int i = 0; i < len; i++)\n+    p[i] = p[i] / x[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "606f54b4e0e8add78f84aa18663c76555d4f55ff", "filename": "gcc/testsuite/gcc.target/arm/neon-vect-div-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536ecfc44b1fd2db67f669e9bb4c388b13d12045/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vect-div-2.c?ref=536ecfc44b1fd2db67f669e9bb4c388b13d12045", "patch": "@@ -0,0 +1,16 @@\n+/* Test pattern div<mode>3.  */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-require-effective-target vect_hw_misalign } */\n+/* { dg-options \"-O3 -ftree-vectorize -funsafe-math-optimizations -fdump-tree-vect-details -fno-reciprocal-math\" } */\n+/* { dg-add-options arm_neon } */\n+\n+void\n+foo (int len, float * __restrict p, float *__restrict x)\n+{\n+  len = len & ~31;\n+  for (int i = 0; i < len; i++)\n+    p[i] = p[i] / x[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"vectorized 1 loops\" \"vect\" } } */"}]}