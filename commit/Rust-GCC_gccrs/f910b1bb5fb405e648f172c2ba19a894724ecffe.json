{"sha": "f910b1bb5fb405e648f172c2ba19a894724ecffe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxMGIxYmI1ZmI0MDVlNjQ4ZjE3MmMyYmExOWE4OTQ3MjRlY2ZmZQ==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@FreeBSD.org", "date": "2001-11-16T21:23:16Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2001-11-16T21:23:16Z"}, "message": "config.gcc (arm*-*-rtems*, [...]): Include various CPU headers via tm_file.\n\n2001-11-16  David O'Brien  <obrien@FreeBSD.org>\n\t* config.gcc (arm*-*-rtems*, arm-*-coff*, armel-*-coff*,\n\tarm-*-vxworks*, arm-*-riscix1.[01]*, arm-*-riscix*,\n\tarm-semi-aout, armel-semi-aout, arm-semi-aof, armel-semi-aof,\n\tarm*-*-netbsd*, arm*-*-linux*, arm*-*-uclinux*, arm*-*-aout,\n\tarm*-*-ecos-elf, arm*-*-elf, arm*-*-conix*, arm*-*-oabi,\n\tarm-*-pe*, strongarm-*-elf*, strongarm-*-coff*, strongarm-*-pe,\n\txscale-*-elf, xscale-*-coff: Include various CPU headers via tm_file.\n\t* config/arm/aof.h: Don't include arm.h.\n\t* config/arm/aout.h: Likewise.\n\t* config/arm/coff.h: Don't include semi.h and aout.h.\n\t* config/arm/elf.h: Don't include aout.h.\n\t* config/arm/netbsd.h: Don't include netbsd.h and aout.h.\n\t(TARGET_VERSION): Undef before defining.\n\t(ARM_OS_NAME): Likewise\n\t(TARGET_DEFAULT): Likewise\n\t(TARGET_MEM_FUNCTIONS): Do not need to undefine now.\n\t* config/arm/pe.h: Don't include arm/coff.h.\n\t* config/arm/riscix.h (CPP_SPEC, SUBTARGET_CPP_SPEC): Use\n\tSUBTARGET_CPP_SPEC rather than overiding the arm.h CPP_SPEC definition.\n\t* config/arm/riscix1-1.h: Likewise.\n\t* config/arm/rix-gas.h: Don't include riscix.h.\n\t(DBX_CONTIN_LENGTH): Undef before defining.\n\t* config/arm/semi.h: Don't include aout.h.\n\t* config/arm/semiaof.h: Don't include aof.h.\n\t* config/arm/strongarm-coff.h: Don't include coff.h.\n\t* config/arm/strongarm-pe.h: Don't include strongarm-coff.h and pe.h.\n\t* config/arm/vxarm.h: Don't include arm/coff.h.\n\t* config/arm/xscale-coff.h: Don't include coff.h.\n\nApproved by:  Nick Clifton <nickc@cambridge.redhat.com>\n              <m3ofm2c27q.fsf@north-pole.nickc.cambridge.redhat.com>\n\nFrom-SVN: r47105", "tree": {"sha": "d40bbfe2a74b2c9607f050b0a705b1cac7df2e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d40bbfe2a74b2c9607f050b0a705b1cac7df2e79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f910b1bb5fb405e648f172c2ba19a894724ecffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f910b1bb5fb405e648f172c2ba19a894724ecffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f910b1bb5fb405e648f172c2ba19a894724ecffe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f910b1bb5fb405e648f172c2ba19a894724ecffe/comments", "author": null, "committer": null, "parents": [{"sha": "9c8e9f62961c74d9ec6545358b4d69c70141cfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8e9f62961c74d9ec6545358b4d69c70141cfcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8e9f62961c74d9ec6545358b4d69c70141cfcf"}], "stats": {"total": 107, "additions": 51, "deletions": 56}, "files": [{"sha": "71db16261b2186a558c9bcac30d52b67ad4a7927", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -1,3 +1,34 @@\n+2001-11-16  David O'Brien  <obrien@FreeBSD.org>\n+\n+\t* config.gcc (arm*-*-rtems*, arm-*-coff*, armel-*-coff*,\n+\tarm-*-vxworks*, arm-*-riscix1.[01]*, arm-*-riscix*,\n+\tarm-semi-aout, armel-semi-aout, arm-semi-aof, armel-semi-aof,\n+\tarm*-*-netbsd*, arm*-*-linux*, arm*-*-uclinux*, arm*-*-aout,\n+\tarm*-*-ecos-elf, arm*-*-elf, arm*-*-conix*, arm*-*-oabi,\n+\tarm-*-pe*, strongarm-*-elf*, strongarm-*-coff*, strongarm-*-pe,\n+\txscale-*-elf, xscale-*-coff: Include various CPU headers via tm_file.\n+\t* config/arm/aof.h: Don't include arm.h.\n+\t* config/arm/aout.h: Likewise.\n+\t* config/arm/coff.h: Don't include semi.h and aout.h.\n+\t* config/arm/elf.h: Don't include aout.h.\n+\t* config/arm/netbsd.h: Don't include netbsd.h and aout.h.\n+\t(TARGET_VERSION): Undef before defining.\n+\t(ARM_OS_NAME): Likewise\n+\t(TARGET_DEFAULT): Likewise\n+\t(TARGET_MEM_FUNCTIONS): Do not need to undefine now.\n+\t* config/arm/pe.h: Don't include arm/coff.h.\n+\t* config/arm/riscix.h (CPP_SPEC, SUBTARGET_CPP_SPEC): Use\n+\tSUBTARGET_CPP_SPEC rather than overiding the arm.h CPP_SPEC definition.\n+\t* config/arm/riscix1-1.h: Likewise.\n+\t* config/arm/rix-gas.h: Don't include riscix.h.\n+\t(DBX_CONTIN_LENGTH): Undef before defining.\n+\t* config/arm/semi.h: Don't include aout.h.\n+\t* config/arm/semiaof.h: Don't include aof.h.\n+\t* config/arm/strongarm-coff.h: Don't include coff.h.\n+\t* config/arm/strongarm-pe.h: Don't include strongarm-coff.h and pe.h.\n+\t* config/arm/vxarm.h: Don't include arm/coff.h.\n+\t* config/arm/xscale-coff.h: Don't include coff.h.\n+\n Fri Nov 16 15:22:35 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* config/pa/pa.c: Reflect changes in calling sequences of alter_reg and"}, {"sha": "3c2f4bd45dd9643a67f0fdf945679edf1ebd8a79", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -593,31 +593,31 @@ arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \tesac\n \t;;\n arm*-*-uclinux*)\t\t# ARM ucLinux\n-\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/linux-gas.h arm/linux-elf.h arm/uclinux-elf.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/linux-gas.h arm/linux-elf.h arm/uclinux-elf.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm*-*-aout)\n-\ttm_file=arm/aout.h\n+\ttm_file=\"arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-arm-aout\n \t;;\n arm*-*-ecos-elf)\n-\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/ecos-elf.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/ecos-elf.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm*-*-elf)\n-\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm*-*-conix*)\n-\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/conix-elf.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/conix-elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm*-*-oabi)\n-\ttm_file=\"arm/unknown-elf-oabi.h elfos.h arm/unknown-elf.h arm/elf.h\"\n+\ttm_file=\"arm/unknown-elf-oabi.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm-*-pe*)\n-\ttm_file=arm/pe.h\n+\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h arm/pe.h\"\n \ttmake_file=arm/t-pe\n \textra_objs=\"pe.o\"\n \t;;\n@@ -3133,19 +3133,19 @@ sparc64-*-linux*)\t\t# 64-bit Sparc's running GNU/Linux\n \tfloat_format=sparc\n \t;;\n strongarm-*-elf*)\n-\ttm_file=\"arm/strongarm-elf.h elfos.h arm/unknown-elf.h arm/elf.h\"\n+\ttm_file=\"arm/strongarm-elf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-strongarm-elf\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md\n \t;;\n strongarm-*-coff*)\n-\ttm_file=arm/strongarm-coff.h\n+\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h arm/strongarm-coff.h arm/arm.h\"\n \ttmake_file=arm/t-strongarm-coff\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md\n \t;;\n strongarm-*-pe)\n-\ttm_file=arm/strongarm-pe.h\n+\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h arm/strongarm-coff.h arm/arm.h arm/pe.h arm/strongarm-pe.h\"\n \ttmake_file=arm/t-strongarm-pe\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md\n@@ -3217,13 +3217,13 @@ we32k-att-sysv*)\n \tuse_collect2=yes\n \t;;\n xscale-*-elf)\n-\ttm_file=\"arm/xscale-elf.h elfos.h arm/unknown-elf.h arm/elf.h\"\n+\ttm_file=\"arm/xscale-elf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-xscale-elf\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md\n \t;;\n xscale-*-coff)\n-\ttm_file=arm/xscale-coff.h\n+\ttm_file=\"coff.h arm/xscale-coff.h\"\n \ttmake_file=arm/t-xscale-coff\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md"}, {"sha": "387788d3bd5acad71740505153c6bf0135ae058d", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -389,6 +389,4 @@ do {\t\t\t\t\t\t\t\\\n     fprintf ((STREAM), \"\\tALIGN %d\\n\", amount);\t\t\\\n } while (0)\n \n-#include \"arm/arm.h\"\n-\n #undef DBX_DEBUGGING_INFO"}, {"sha": "9e3c6ea80b882e5b32ba07bc60481e6f3a71a80e", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -333,5 +333,3 @@ Boston, MA 02111-1307, USA.  */\n \n /* This works for GAS and some other assemblers.  */\n #define SET_ASM_OP\t\t\"\\t.set\\t\"\n-\n-#include \"arm.h\""}, {"sha": "3936c8c64bce850a3176f89dbeef19ee3af7b50b", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -21,8 +21,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"semi.h\"\n-#include \"aout.h\"\n \n /* Note - it is important that this definition matches the one in tcoff.h */\n #undef  USER_LABEL_PREFIX"}, {"sha": "8b0443bd2d9f031fbc859d7b4a7025b1cdef0a04", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -193,5 +193,3 @@ Boston, MA 02111-1307, USA.  */\n \tfprintf (STREAM, \"\\t.align\\t%d\\n\", POWER);\t\\\n     }\t\t\t\t\t\t\t\\\n   while (0)\n-\n-#include \"aout.h\""}, {"sha": "554460d918ccca6af151f9b92be14fdb300a9eae", "filename": "gcc/config/arm/netbsd.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -20,9 +20,11 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Run-time Target Specification.  */\n+#undef  TARGET_VERSION\n #define TARGET_VERSION fputs (\" (ARM/NetBSD)\", stderr);\n \n /* This is used in ASM_FILE_START.  */\n+#undef ARM_OS_NAME\n #define ARM_OS_NAME \"NetBSD\"\n \n /* Unsigned chars produces much better code than signed.  */\n@@ -37,15 +39,9 @@ Boston, MA 02111-1307, USA.  */\n #define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm6\n \n /* Default is to use APCS-32 mode.  */\n+#undef TARGET_DEFAULT\n #define TARGET_DEFAULT (ARM_FLAG_APCS_32 | ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_FRAME)\n \n-#include \"arm/aout.h\"\n-\n-/* This gets redefined in config/netbsd.h.  */\n-#undef TARGET_MEM_FUNCTIONS\n-\n-#include <netbsd.h>\n-\n /* Some defines for CPP.\n    arm32 is the NetBSD port name, so we always define arm32 and __arm32__.  */\n #undef CPP_PREDEFINES"}, {"sha": "1182aac12c4d4cb1e67ad52bb1fa0ba26b9bf74d", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -29,8 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #define SUBTARGET_NAME_ENCODING_LENGTHS  \\\n   case ARM_PE_FLAG_CHAR: return 3;\n \n-#include \"arm/coff.h\"\n-\n #undef  USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"_\"\n "}, {"sha": "faa99ba9787e5ff98e7766fb1942628358f37cc9", "filename": "gcc/config/arm/riscix.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Friscix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Friscix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Friscix.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -127,11 +127,9 @@ Boston, MA 02111-1307, USA.  */\n /* The RISCiX assembler does not understand .set */\n #undef SET_ASM_OP\n \n-/* Override CPP_SPEC, there's no point handling endianness (and probably\n-   not much point handling apcs_pc), and we want to add the right #defines\n-   when using the include files.  */\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu_arch) %(cpp_apcs_pc) %(cpp_float) \\\n+/* Add to CPP_SPEC, we want to add the right #defines when using the include\n+   files.  */\n+#define SUBTARGET_CPP_SPEC \"\\\n \t%{mbsd:%{pedantic:%e-mbsd and -pedantic incompatible} -D_BSD_C} \\\n \t%{mxopen:%{mbsd:%e-mbsd and -mxopen incompatible} \t\t\\\n \t  %{pedantic:%e-mxopen and -pedantic incompatible} -D_XOPEN_C}  \\"}, {"sha": "ccaf964cb67f722c3c074eb7a85c88fcf288e60a", "filename": "gcc/config/arm/riscix1-1.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Friscix1-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Friscix1-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Friscix1-1.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -91,10 +91,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"arm/aout.h\"\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%(cpp_cpu_arch) %(cpp_apcs_pc) %(cpp_float) %{!ansi: -D_BSD_C} \\\n-\"\n+#define SUBTARGET_CPP_SPEC \"%{!ansi: -D_BSD_C}\"\n \n \n /* The native RISCiX assembler does not support stabs of any kind; because"}, {"sha": "cfb5312f3b6cc3dd1ca7ebfb9cef750d97a03c8c", "filename": "gcc/config/arm/rix-gas.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Frix-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Frix-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Frix-gas.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -22,10 +22,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Limit the length of a stabs entry (for the broken Acorn assembler) */\n+#undef  DBX_CONTIN_LENGTH\n #define DBX_CONTIN_LENGTH 80\n \n-#include \"arm/riscix.h\"\n-\n /* The native RISCiX assembler does not support stabs of any kind; because\n    the native assembler is not used by the compiler, Acorn didn't feel it was\n    necessary to put them in!  "}, {"sha": "54ea0e8b03715315c28c972b700a9e4bfd0e8259", "filename": "gcc/config/arm/semi.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fsemi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fsemi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemi.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -69,7 +69,5 @@ Boston, MA 02111-1307, USA.  */\n %(subtarget_extra_asm_spec)\"\n #endif\n \n-#include \"arm/aout.h\"\n-\n #undef  CPP_APCS_PC_DEFAULT_SPEC\n #define CPP_APCS_PC_DEFAULT_SPEC \"-D__APCS_32__\""}, {"sha": "242c35a291599231133709977aca746ef559e8ad", "filename": "gcc/config/arm/semiaof.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fsemiaof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fsemiaof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemiaof.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -35,9 +35,5 @@ Boston, MA 02111-1307, USA.  */\n /* The Norcroft C library defines size_t as \"unsigned int\" */\n #define SIZE_TYPE \"unsigned int\"\n \n-#include \"arm/aof.h\"\n-\n #undef CPP_APCS_PC_DEFAULT_SPEC\n #define CPP_APCS_PC_DEFAULT_SPEC \"-D__APCS_32__\"\n-\n-"}, {"sha": "4d2f29212b5af4f5e8c452b249487f24b798088e", "filename": "gcc/config/arm/strongarm-coff.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fstrongarm-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fstrongarm-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fstrongarm-coff.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -24,8 +24,5 @@ Boston, MA 02111-1307, USA.  */\n #define SUBTARGET_CPU_DEFAULT \t\tTARGET_CPU_strongarm\n #endif\n \n-#include \"coff.h\"\n-\n #undef  TARGET_VERSION\n #define TARGET_VERSION\tfputs (\" (StrongARM/COFF)\", stderr);\n-"}, {"sha": "2938d3e55ac6ae0ff543a1e7fbdf9cd23e334de3", "filename": "gcc/config/arm/strongarm-pe.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fstrongarm-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fstrongarm-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fstrongarm-pe.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -19,8 +19,5 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"arm/strongarm-coff.h\"\n-#include \"arm/pe.h\"\n-\n #undef  TARGET_VERSION\n #define TARGET_VERSION\tfputs (\" (StrongARM/PE)\", stderr);"}, {"sha": "755936450c889cfc2365ae3714cfad410ca779fd", "filename": "gcc/config/arm/vxarm.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fvxarm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fvxarm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxarm.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -23,8 +23,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm710\n \n-#include \"arm/coff.h\"\n-\n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC\t\t\\\n \"%{march=arm710:-DCPU=ARM710A}\t\t\\"}, {"sha": "f5f980dba396c60d393d2465eaca305c194208c8", "filename": "gcc/config/arm/xscale-coff.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fxscale-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910b1bb5fb405e648f172c2ba19a894724ecffe/gcc%2Fconfig%2Farm%2Fxscale-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxscale-coff.h?ref=f910b1bb5fb405e648f172c2ba19a894724ecffe", "patch": "@@ -29,7 +29,5 @@ Boston, MA 02111-1307, USA.  */\n #define MULTILIB_DEFAULTS \\\n   { \"mlittle-endian\", \"mno-thumb-interwork\", \"marm\" }\n \n-#include \"coff.h\"\n-\n #undef  TARGET_VERSION\n #define TARGET_VERSION\tfputs (\" (XScale/COFF)\", stderr);"}]}