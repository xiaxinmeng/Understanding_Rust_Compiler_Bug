{"sha": "363f0ef50bd143fce77a1c7905b0ed707f4a9358", "node_id": "C_kwDOANBUbNoAKDM2M2YwZWY1MGJkMTQzZmNlNzdhMWM3OTA1YjBlZDcwN2Y0YTkzNTg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-23T17:39:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-24T14:23:35Z"}, "message": "libstdc++: Optimize net::ip::address_v4::to_string()\n\nThis is an order of magnitude faster than calling inet_ntop (and not\nonly because we now avoid allocating a string that is one byte larger\nthan the SSO buffer).\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/internet (address_v4::to_string):\n\tOptimize.\n\t* testsuite/experimental/net/internet/address/v4/members.cc:\n\tCheck more addresses.", "tree": {"sha": "f0b332dfb87c4cd5ffd97bee2c5bf4516a273358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0b332dfb87c4cd5ffd97bee2c5bf4516a273358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363f0ef50bd143fce77a1c7905b0ed707f4a9358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363f0ef50bd143fce77a1c7905b0ed707f4a9358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363f0ef50bd143fce77a1c7905b0ed707f4a9358", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363f0ef50bd143fce77a1c7905b0ed707f4a9358/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae390479340ff49873c22cd7a301acbf67eca30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae390479340ff49873c22cd7a301acbf67eca30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae390479340ff49873c22cd7a301acbf67eca30b"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "08bd0db4bb27fe3d64fe99d7fa1ca52504f3e6a3", "filename": "libstdc++-v3/include/experimental/internet", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363f0ef50bd143fce77a1c7905b0ed707f4a9358/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363f0ef50bd143fce77a1c7905b0ed707f4a9358/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet?ref=363f0ef50bd143fce77a1c7905b0ed707f4a9358", "patch": "@@ -44,6 +44,7 @@\n #include <sstream>\n #include <cstdint>\n #include <experimental/string_view>\n+#include <bits/charconv.h>\n #ifdef _GLIBCXX_HAVE_UNISTD_H\n # include <unistd.h>\n #endif\n@@ -241,17 +242,28 @@ namespace ip\n       __string_with<_Allocator>\n       to_string(const _Allocator& __a = _Allocator()) const\n       {\n-#ifdef _GLIBCXX_HAVE_ARPA_INET_H\n+\tauto __write = [__addr = to_uint()](char* __p, size_t __n) {\n+\t  auto __to_chars = [](char* __p, uint8_t __v) {\n+\t    unsigned __n = __v >= 100u ? 3 : __v >= 10u ? 2 : 1;\n+\t    std::__detail::__to_chars_10_impl(__p, __n, __v);\n+\t    return __p + __n;\n+\t  };\n+\t  const auto __begin = __p;\n+\t  __p = __to_chars(__p, uint8_t(__addr >> 24));\n+\t  for (int __i = 2; __i >= 0; __i--) {\n+\t    *__p++ = '.';\n+\t    __p = __to_chars(__p, uint8_t(__addr >> (__i * 8)));\n+\t  }\n+\t  return __p - __begin;\n+\t};\n \t__string_with<_Allocator> __str(__a);\n-\t__str.resize(INET_ADDRSTRLEN);\n-\tif (inet_ntop(AF_INET, &_M_addr, &__str.front(), __str.size()))\n-\t  __str.erase(__str.find('\\0'));\n-\telse\n-\t  __str.resize(0);\n-\treturn __str;\n+#if __cpp_lib_string_resize_and_overwrite\n+\t__str.resize_and_overwrite(15, __write);\n #else\n-\tstd::__throw_system_error((int)__unsupported_err());\n+\t__str.resize(15);\n+\t__str.resize(__write(&__str.front(), 15));\n #endif\n+\treturn __str;\n       }\n \n     // static members:"}, {"sha": "c40a8103664b55be91b9013c895c6b13022e42ee", "filename": "libstdc++-v3/testsuite/experimental/net/internet/address/v4/members.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363f0ef50bd143fce77a1c7905b0ed707f4a9358/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv4%2Fmembers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363f0ef50bd143fce77a1c7905b0ed707f4a9358/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv4%2Fmembers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv4%2Fmembers.cc?ref=363f0ef50bd143fce77a1c7905b0ed707f4a9358", "patch": "@@ -22,6 +22,7 @@\n #include <experimental/internet>\n #include <sstream>\n #include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n \n using std::experimental::net::ip::address_v4;\n \n@@ -100,6 +101,16 @@ test04()\n   VERIFY( address_v4::any().to_string() == \"0.0.0.0\" );\n   VERIFY( address_v4::loopback().to_string() == \"127.0.0.1\" );\n   VERIFY( address_v4::broadcast().to_string() == \"255.255.255.255\" );\n+  using b = address_v4::bytes_type;\n+  VERIFY( address_v4(b(1, 23, 45, 67)).to_string() == \"1.23.45.67\" );\n+  VERIFY( address_v4(b(12, 34, 56, 78)).to_string() == \"12.34.56.78\" );\n+  VERIFY( address_v4(b(123, 4, 5, 6)).to_string() == \"123.4.5.6\" );\n+  VERIFY( address_v4(b(123, 234, 124, 235)).to_string() == \"123.234.124.235\" );\n+\n+  __gnu_test::uneq_allocator<char> alloc(123);\n+  auto str = address_v4(b(12, 34, 56, 78)).to_string(alloc);\n+  VERIFY(str.get_allocator().get_personality() == alloc.get_personality());\n+  VERIFY( str == \"12.34.56.78\" );\n }\n \n void"}]}