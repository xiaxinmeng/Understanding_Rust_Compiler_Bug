{"sha": "f9f6b7df9dbea592ddb6f9230992872fee866a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmNmI3ZGY5ZGJlYTU5MmRkYjZmOTIzMDk5Mjg3MmZlZTg2NmEwMw==", "commit": {"author": {"name": "Graham Stott", "email": "grahams@redhat.com", "date": "2002-01-12T13:45:39Z"}, "committer": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2002-01-12T13:45:39Z"}, "message": "attribs.c (handle_deprecated_attribute): constify WHAT.\n\n\n        * attribs.c (handle_deprecated_attribute): constify WHAT.\n        * diagnostic.c (warn_deprecated_use): Add braces, fixes\n        dangling else warning and constify WHAT.\n        * except.h (struct function, struct inline_remap): Move\n        struct tag forward defs before all prototypes.\n        (duplicate_eh_regions): Whitespace.\n\nFrom-SVN: r48799", "tree": {"sha": "43e7dd937fa3ea2a493d8688200b94582d288196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e7dd937fa3ea2a493d8688200b94582d288196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f6b7df9dbea592ddb6f9230992872fee866a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f6b7df9dbea592ddb6f9230992872fee866a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f6b7df9dbea592ddb6f9230992872fee866a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f6b7df9dbea592ddb6f9230992872fee866a03/comments", "author": null, "committer": null, "parents": [{"sha": "4a69261704c060c8a7ff364dc570571f6c80569e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a69261704c060c8a7ff364dc570571f6c80569e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a69261704c060c8a7ff364dc570571f6c80569e"}], "stats": {"total": 86, "additions": 48, "deletions": 38}, "files": [{"sha": "91e6b7ae6bbe50d1f9cc4779ac8c5b7957b00a2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9f6b7df9dbea592ddb6f9230992872fee866a03", "patch": "@@ -1,3 +1,12 @@\n+2002-01-12  Graham Stott <grahams@redhat.com>\n+\n+\t* attribs.c (handle_deprecated_attribute): constify WHAT.\n+\t* diagnostic.c (warn_deprecated_use): Add braces, fixes\n+\tdangling else warning and constify WHAT.\n+\t* except.h (struct function, struct inline_remap): Move\n+\tstruct tag forward defs before all prototypes.\n+\t(duplicate_eh_regions): Whitespace.\n+\n 2002-01-12  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/arm.h (ARM_LEGITIMIZE_RELOAD_ADDRESS): Use"}, {"sha": "2f2096d1010ce081e5be3c3a0f195712eabe2060", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=f9f6b7df9dbea592ddb6f9230992872fee866a03", "patch": "@@ -1148,7 +1148,7 @@ handle_deprecated_attribute (node, name, args, flags, no_add_attrs)\n {\n   tree type = NULL_TREE;\n   int warn = 0;\n-  char *what = NULL;\n+  const char *what = NULL;\n   \n   if (DECL_P (*node))\n     {"}, {"sha": "7633523b088beca4d689ce307b9fa4a9daaec5c5", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=f9f6b7df9dbea592ddb6f9230992872fee866a03", "patch": "@@ -1526,38 +1526,40 @@ warn_deprecated_use (node)\n      tree node;\n {\n   if (node && warn_deprecated_decl)\n-    if (DECL_P (node))\n-      {\n-\twarning (\"`%s' is deprecated (declared at %s:%d)\",\n-\t\t IDENTIFIER_POINTER (DECL_NAME (node)),\n-\t\t DECL_SOURCE_FILE (node), DECL_SOURCE_LINE (node));\n-      }\n-    else if (TYPE_P (node))\n-      {\n-      \tchar *what = NULL;\n-\ttree decl = TYPE_STUB_DECL (node);\n+    {\n+      if (DECL_P (node))\n+        {\n+\t  warning (\"`%s' is deprecated (declared at %s:%d)\",\n+\t\t   IDENTIFIER_POINTER (DECL_NAME (node)),\n+\t\t   DECL_SOURCE_FILE (node), DECL_SOURCE_LINE (node));\n+        }\n+      else if (TYPE_P (node))\n+        {\n+      \t  const char *what = NULL;\n+\t  tree decl = TYPE_STUB_DECL (node);\n       \t\n-\tif (TREE_CODE (TYPE_NAME (node)) == IDENTIFIER_NODE)\n-\t  what = IDENTIFIER_POINTER (TYPE_NAME (node));\n-\telse if (TREE_CODE (TYPE_NAME (node)) == TYPE_DECL\n-\t\t && DECL_NAME (TYPE_NAME (node)))\n-\t  what = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (node)));\n+\t  if (TREE_CODE (TYPE_NAME (node)) == IDENTIFIER_NODE)\n+\t    what = IDENTIFIER_POINTER (TYPE_NAME (node));\n+\t  else if (TREE_CODE (TYPE_NAME (node)) == TYPE_DECL\n+\t\t   && DECL_NAME (TYPE_NAME (node)))\n+\t    what = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (node)));\n \t\n-\tif (what)\n-\t  {\n-\t    if (decl)\n-\t      warning (\"`%s' is deprecated (declared at %s:%d)\", what,\n-\t\t       DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n-\t    else\n-\t      warning (\"`%s' is deprecated\", what);\n-\t  }\n-\telse\n-\t  {\n-\t    if (decl)\n-\t      warning (\"type is deprecated (declared at %s:%d)\",\n-\t\t       DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n-\t    else\n-\t      warning (\"type is deprecated\");\n-\t  }\n-      }\n+\t  if (what)\n+\t    {\n+\t      if (decl)\n+\t        warning (\"`%s' is deprecated (declared at %s:%d)\", what,\n+\t\t         DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n+\t      else\n+\t        warning (\"`%s' is deprecated\", what);\n+\t    }\n+\t  else\n+\t    {\n+\t      if (decl)\n+\t        warning (\"type is deprecated (declared at %s:%d)\",\n+\t\t         DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n+\t      else\n+\t        warning (\"type is deprecated\");\n+\t    }\n+        }\n+    }\n }"}, {"sha": "f543c46949f6a04ffce531345dfc7f043ebf9fb8", "filename": "gcc/except.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f6b7df9dbea592ddb6f9230992872fee866a03/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=f9f6b7df9dbea592ddb6f9230992872fee866a03", "patch": "@@ -26,6 +26,9 @@ struct varray_head_tag;\n #define varray_type struct varray_head_tag *\n #endif\n \n+struct function;\n+\n+struct inline_remap;\n \n /* Per-function EH data.  Used only in except.c, but GC and others\n    manipulate pointers to the opaque type.  */\n@@ -127,12 +130,8 @@ extern rtx expand_builtin_frob_return_addr\tPARAMS ((tree));\n extern rtx expand_builtin_dwarf_fp_regnum\tPARAMS ((void));\n extern void expand_builtin_eh_return\t\tPARAMS ((tree, tree));\n extern void expand_eh_return\t\t\tPARAMS ((void));\n-\n extern rtx get_exception_pointer\t\tPARAMS ((struct function *));\n-\n-struct function;\n-struct inline_remap;\n-extern int duplicate_eh_regions\t\tPARAMS ((struct function *,\n+extern int duplicate_eh_regions\t\t\tPARAMS ((struct function *,\n \t\t\t\t\t\t struct inline_remap *));\n \n extern void sjlj_emit_function_exit_after\tPARAMS ((rtx));"}]}