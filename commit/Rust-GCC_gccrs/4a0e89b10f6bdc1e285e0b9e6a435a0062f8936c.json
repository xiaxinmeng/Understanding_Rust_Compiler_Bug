{"sha": "4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "node_id": "C_kwDOANBUbNoAKDRhMGU4OWIxMGY2YmRjMWUyODVlMGI5ZTZhNDM1YTAwNjJmODkzNmM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-02T05:10:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-02T05:10:14Z"}, "message": "system.h: Include <initializer_list> in system.h unconditionally\n\nOn Sun, May 01, 2022 at 07:06:53PM +0100, Jonathan Wakely wrote:\n> > >> the reason is that \"gcc/analyzer/region-model.cc\u201d uses initializer_lists, and it seems that <initializer_list>\n> > >> is not transitively included by any used headers for _LIBCPP_VERSION < 4000.  I fixed that locally by\n> > >> adding initializer_list into system.h (and adding INCLUDE_INITIALIZER_LIST to the top of gcc/analyzer/region-model.cc)\n> > >> - with that change those versions do bootstrap and test OK***\n> > >\n> > > From what I can see, with libstdc++ it works because <utility> which is\n> > > included by system.h includes <initializer_list>.\n> > > If I rename initializer_list in analyzer/region-model.ii to initializer_listx, I\n> > > also get:\n> > > ../../gcc/analyzer/region-model.cc: In function \u2018void ana::selftest::test_binop_svalue_folding()\u2019:\n> > > ../../gcc/analyzer/region-model.cc:4966:48: error: deducing from brace-enclosed initializer list requires \u2018#include <initializer_list>\u2019\n> > > 4508 |\n> > >  +++ |+#include <initializer_list>\n> > > 4509 | static void\n> > > ......\n> > > 4966 |     for (auto op : {BIT_IOR_EXPR, TRUTH_OR_EXPR})\n> > >      |                                                ^\n> > > ../../gcc/analyzer/region-model.cc:4978:49: error: deducing from brace-enclosed initializer list requires \u2018#include <initializer_list>\u2019\n> > > 4978 |     for (auto op : {BIT_AND_EXPR, TRUTH_AND_EXPR})\n> > >      |                                                 ^\n> > >\n> > > I think we have 2 options, one is do what you wrote above,\n> > > INCLUDE_INITIALIZER_LIST defined before system.h to get #include <initializer_list>.\n> > > The other option is just to include that unconditionally, it is a very small\n> > > header.  For libstdc++ it will make no difference as it is included anyway\n> > > and the header is really small there, libc++ includes <cstddef> which isn't\n> > > normally included and system.h includes <stddef.h> instead.\n> >\n> > I\u2019d say unconditionally would be OK. I suppose the chance that any host\n> > C++ is good enough to build GCC as-is but fails to provide\n> > <initializer_list> is zero?\n> >\n>\n> Yes, definitely.\n>\n> > I\u2019d be OK to do this change without a new RC even.\n\n2022-05-02  Jakub Jelinek  <jakub@redhat.com>\n\n\t* system.h: Include initializer_list.", "tree": {"sha": "fcf4bb58f7c30dd816697817ca2cea2d46510cf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf4bb58f7c30dd816697817ca2cea2d46510cf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28cfea987e12413a85a4fa1942800100c43d4b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28cfea987e12413a85a4fa1942800100c43d4b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28cfea987e12413a85a4fa1942800100c43d4b40"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c5562cc49a3054b21698564a72830c5d73178fb3", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "patch": "@@ -239,6 +239,7 @@ extern int errno;\n # include <functional>\n #endif\n # include <cstring>\n+# include <initializer_list>\n # include <new>\n # include <utility>\n # include <type_traits>"}]}