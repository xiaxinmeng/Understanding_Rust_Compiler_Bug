{"sha": "d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxNTViZjVlNTgxNmQ0NGNlYzVlZDFlM2Y5MjlmMmI4NzE4ZGRhYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-07-18T06:48:19Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-07-18T06:48:19Z"}, "message": "resolve.c (resolve_transfer): Mention defined I/O in the diagnostic for alloc_comp/pointer_comp.\n\n2011-07-18  Tobias Burnus  <burnus@net-b.de>\n\n        * resolve.c (resolve_transfer): Mention defined I/O\n        in the diagnostic for alloc_comp/pointer_comp.\n\nFrom-SVN: r176386", "tree": {"sha": "e120495531e4962cc83e942e8be4c79db2ec12c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e120495531e4962cc83e942e8be4c79db2ec12c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25fe407a21ce928f3abe320b36a7b068ba25c577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fe407a21ce928f3abe320b36a7b068ba25c577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25fe407a21ce928f3abe320b36a7b068ba25c577"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "215c3215397ce12f20f0bc3ca2bf5f7b07ff6874", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "patch": "@@ -1,3 +1,8 @@\n+2011-07-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (resolve_transfer): Mention defined I/O\n+\tin the diagnostic for alloc_comp/pointer_comp.\n+\n 2011-07-17  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34657"}, {"sha": "53f45e85b8da84a52857df27550aa230ab3c7d46", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8155bf5e5816d44cec5ed1e3f929f2b8718ddab/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d8155bf5e5816d44cec5ed1e3f929f2b8718ddab", "patch": "@@ -5219,7 +5219,7 @@ check_host_association (gfc_expr *e)\n \t    {\n \t      /* Original was variable so convert array references into\n \t\t an actual arglist. This does not need any checking now\n-\t\t since gfc_resolve_function will take care of it.  */\n+\t\t since resolve_function will take care of it.  */\n \t      e->value.function.actual = NULL;\n \t      e->expr_type = EXPR_FUNCTION;\n \t      e->symtree = st;\n@@ -8139,8 +8139,9 @@ resolve_transfer (gfc_code *code)\n \t components.  */\n       if (ts->u.derived->attr.pointer_comp)\n \t{\n-\t  gfc_error (\"Data transfer element at %L cannot have \"\n-\t\t     \"POINTER components\", &code->loc);\n+\t  gfc_error (\"Data transfer element at %L cannot have POINTER \"\n+\t\t     \"components unless it is processed by a defined \"\n+\t\t     \"input/output procedure\", &code->loc);\n \t  return;\n \t}\n \n@@ -8154,8 +8155,9 @@ resolve_transfer (gfc_code *code)\n \n       if (ts->u.derived->attr.alloc_comp)\n \t{\n-\t  gfc_error (\"Data transfer element at %L cannot have \"\n-\t\t     \"ALLOCATABLE components\", &code->loc);\n+\t  gfc_error (\"Data transfer element at %L cannot have ALLOCATABLE \"\n+\t\t     \"components unless it is processed by a defined \"\n+\t\t     \"input/output procedure\", &code->loc);\n \t  return;\n \t}\n "}]}