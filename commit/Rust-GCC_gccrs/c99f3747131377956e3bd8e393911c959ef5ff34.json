{"sha": "c99f3747131377956e3bd8e393911c959ef5ff34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk5ZjM3NDcxMzEzNzc5NTZlM2JkOGUzOTM5MTFjOTU5ZWY1ZmYzNA==", "commit": {"author": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-04-22T14:04:19Z"}, "committer": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-04-28T20:14:03Z"}, "message": "aarch64: Remove unspecs from [su]qmovn RTL pattern\n\nSaturating truncation can be expressed using the RTL expressions\nss_truncate and us_truncate. This patch changes the implementation\nof the vqmovn_* intrinsics to use these RTL expressions rather than\na pair of unspecs. The redundant unspecs are removed along with their\ncode iterator.\n\ngcc/ChangeLog:\n\n2021-04-12  Jonathan Wright  <jonathan.wright@arm.com>\n\n\t* config/aarch64/aarch64-simd-builtins.def: Modify comment to\n\tmake consistent with updated RTL pattern.\n\t* config/aarch64/aarch64-simd.md (aarch64_<sur>qmovn<mode>):\n\tImplement using ss_truncate and us_truncate rather than\n\tunspecs.\n\t* config/aarch64/iterators.md: Remove redundant unspecs and\n\titerator: UNSPEC_[SU]QXTN and SUQMOVN respectively.", "tree": {"sha": "92008790ab16691b44bf768842cc63098e83fe57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92008790ab16691b44bf768842cc63098e83fe57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c99f3747131377956e3bd8e393911c959ef5ff34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99f3747131377956e3bd8e393911c959ef5ff34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99f3747131377956e3bd8e393911c959ef5ff34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99f3747131377956e3bd8e393911c959ef5ff34/comments", "author": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a82f012c4a1c12468b154c59b817dc2d4d044c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a82f012c4a1c12468b154c59b817dc2d4d044c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a82f012c4a1c12468b154c59b817dc2d4d044c5"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "337ec8d1f108b1a9f8e23ff85fb9a14dea0840c2", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=c99f3747131377956e3bd8e393911c959ef5ff34", "patch": "@@ -266,7 +266,7 @@\n   /* Implemented by aarch64_sqxtun2<mode>.  */\n   BUILTIN_VQN (BINOP_UUS, sqxtun2, 0, NONE)\n \n-  /* Implemented by aarch64_<sur>qmovn<mode>.  */\n+  /* Implemented by aarch64_<su>qmovn<mode>.  */\n   BUILTIN_VSQN_HSDI (UNOP, sqmovn, 0, NONE)\n   BUILTIN_VSQN_HSDI (UNOP, uqmovn, 0, NONE)\n "}, {"sha": "fbfed334e97db07157878a6fb06b01faa5c03937", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=c99f3747131377956e3bd8e393911c959ef5ff34", "patch": "@@ -4591,12 +4591,12 @@\n \n ;; sqmovn and uqmovn\n \n-(define_insn \"aarch64_<sur>qmovn<mode>\"\n+(define_insn \"aarch64_<su>qmovn<mode>\"\n   [(set (match_operand:<VNARROWQ> 0 \"register_operand\" \"=w\")\n-\t(unspec:<VNARROWQ> [(match_operand:VSQN_HSDI 1 \"register_operand\" \"w\")]\n-                            SUQMOVN))]\n+\t(SAT_TRUNC:<VNARROWQ>\n+    (match_operand:VSQN_HSDI 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n-  \"<sur>qxtn\\\\t%<vn2>0<Vmntype>, %<v>1<Vmtype>\"\n+  \"<su>qxtn\\\\t%<vn2>0<Vmntype>, %<v>1<Vmtype>\"\n    [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n "}, {"sha": "634c44e225c2f1925ac5c12e9399ec535726bf0c", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99f3747131377956e3bd8e393911c959ef5ff34/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=c99f3747131377956e3bd8e393911c959ef5ff34", "patch": "@@ -523,8 +523,6 @@\n     UNSPEC_SUQADD\t; Used in aarch64-simd.md.\n     UNSPEC_SQXTUN\t; Used in aarch64-simd.md.\n     UNSPEC_SQXTUN2\t; Used in aarch64-simd.md.\n-    UNSPEC_SQXTN\t; Used in aarch64-simd.md.\n-    UNSPEC_UQXTN\t; Used in aarch64-simd.md.\n     UNSPEC_SSRA\t\t; Used in aarch64-simd.md.\n     UNSPEC_USRA\t\t; Used in aarch64-simd.md.\n     UNSPEC_SRSRA\t; Used in aarch64-simd.md.\n@@ -2258,8 +2256,6 @@\n \n (define_int_iterator USSUQADD [UNSPEC_SUQADD UNSPEC_USQADD])\n \n-(define_int_iterator SUQMOVN [UNSPEC_SQXTN UNSPEC_UQXTN])\n-\n (define_int_iterator VSHL [UNSPEC_SSHL UNSPEC_USHL\n \t\t           UNSPEC_SRSHL UNSPEC_URSHL])\n \n@@ -2998,7 +2994,6 @@\n \t\t      (UNSPEC_SUBHN \"\") (UNSPEC_RSUBHN \"r\")\n \t\t      (UNSPEC_ADDHN2 \"\") (UNSPEC_RADDHN2 \"r\")\n \t\t      (UNSPEC_SUBHN2 \"\") (UNSPEC_RSUBHN2 \"r\")\n-\t\t      (UNSPEC_SQXTN \"s\") (UNSPEC_UQXTN \"u\")\n \t\t      (UNSPEC_USQADD \"us\") (UNSPEC_SUQADD \"su\")\n \t\t      (UNSPEC_SSLI  \"s\") (UNSPEC_USLI  \"u\")\n \t\t      (UNSPEC_SSRI  \"s\") (UNSPEC_USRI  \"u\")"}]}