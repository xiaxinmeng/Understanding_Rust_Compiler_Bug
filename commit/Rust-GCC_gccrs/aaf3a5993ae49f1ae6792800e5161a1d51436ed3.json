{"sha": "aaf3a5993ae49f1ae6792800e5161a1d51436ed3", "node_id": "C_kwDOANBUbNoAKGFhZjNhNTk5M2FlNDlmMWFlNjc5MjgwMGU1MTYxYTFkNTE0MzZlZDM", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2022-01-28T17:50:26Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-03-31T22:11:23Z"}, "message": "rs6000: Fix some missing built-in attributes [PR104004]\n\nPR104004 caught some misses on my part in converting to the new built-in\nfunction infrastructure.  In particular, I forgot to mark all of the \"nosoft\"\nbuilt-ins, and one of those should also have been marked \"no32bit\".\n\n2022-01-27  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\tPR target/104004\n\t* config/rs6000/rs6000-builtins.def (MFFSL): Mark nosoft.\n\t(MTFSB0): Likewise.\n\t(MTFSB1): Likewise.\n\t(SET_FPSCR_RN): Likewise.\n\t(SET_FPSCR_DRN): Mark nosoft and no32bit.", "tree": {"sha": "dd36457f71cedd862e6c9bf647791de5fdf13e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd36457f71cedd862e6c9bf647791de5fdf13e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaf3a5993ae49f1ae6792800e5161a1d51436ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf3a5993ae49f1ae6792800e5161a1d51436ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf3a5993ae49f1ae6792800e5161a1d51436ed3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf3a5993ae49f1ae6792800e5161a1d51436ed3/comments", "author": null, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0abc1cbad1687a887d754917927b6023e4dba3ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abc1cbad1687a887d754917927b6023e4dba3ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abc1cbad1687a887d754917927b6023e4dba3ce"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0f527c5d78f4287a67784608024c8b5491a1fb34", "filename": "gcc/config/rs6000/rs6000-builtins.def", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf3a5993ae49f1ae6792800e5161a1d51436ed3/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf3a5993ae49f1ae6792800e5161a1d51436ed3/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def?ref=aaf3a5993ae49f1ae6792800e5161a1d51436ed3", "patch": "@@ -215,7 +215,7 @@\n ; processors, this builtin automatically falls back to mffs on older\n ; platforms.  Thus it appears here in the [always] stanza.\n   double __builtin_mffsl ();\n-    MFFSL rs6000_mffsl {}\n+    MFFSL rs6000_mffsl {nosoft}\n \n ; This is redundant with __builtin_pack_ibm128, as it requires long\n ; double to be __ibm128.  Should probably be deprecated.\n@@ -226,10 +226,10 @@\n     MFTB rs6000_mftb_di {32bit}\n \n   void __builtin_mtfsb0 (const int<5>);\n-    MTFSB0 rs6000_mtfsb0 {}\n+    MTFSB0 rs6000_mtfsb0 {nosoft}\n \n   void __builtin_mtfsb1 (const int<5>);\n-    MTFSB1 rs6000_mtfsb1 {}\n+    MTFSB1 rs6000_mtfsb1 {nosoft}\n \n   void __builtin_mtfsf (const int<8>, double);\n     MTFSF rs6000_mtfsf {}\n@@ -238,7 +238,7 @@\n     PACK_IF packif {ibm128}\n \n   void __builtin_set_fpscr_rn (const int[0,3]);\n-    SET_FPSCR_RN rs6000_set_fpscr_rn {}\n+    SET_FPSCR_RN rs6000_set_fpscr_rn {nosoft}\n \n   const double __builtin_unpack_ibm128 (__ibm128, const int<1>);\n     UNPACK_IF unpackif {ibm128}\n@@ -2969,7 +2969,7 @@\n     PACK_TD packtd {}\n \n   void __builtin_set_fpscr_drn (const int[0,7]);\n-    SET_FPSCR_DRN rs6000_set_fpscr_drn {}\n+    SET_FPSCR_DRN rs6000_set_fpscr_drn {nosoft,no32bit}\n \n   const unsigned long long __builtin_unpack_dec128 (_Decimal128, const int<1>);\n     UNPACK_TD unpacktd {}"}]}