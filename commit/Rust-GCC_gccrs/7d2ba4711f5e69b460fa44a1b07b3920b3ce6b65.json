{"sha": "7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyYmE0NzExZjVlNjliNDYwZmE0NGExYjA3YjM5MjBiM2NlNmI2NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-05T23:25:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-05T23:25:48Z"}, "message": "tree.c (types_same_for_odr): Drop overactive check.\n\n\t* tree.c (types_same_for_odr): Drop overactive check.\n\t* ipa-devirt.c (hash_type_name): Likewise.\n\nFrom-SVN: r202302", "tree": {"sha": "949e6f2a2ab002350dd2858bfa731353d6c1cf47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/949e6f2a2ab002350dd2858bfa731353d6c1cf47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/comments", "author": null, "committer": null, "parents": [{"sha": "0db7b1373f71594a17c358bb9d907c904f2ca3d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db7b1373f71594a17c358bb9d907c904f2ca3d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db7b1373f71594a17c358bb9d907c904f2ca3d6"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "3a77445e5546fa36c6b1a662121e36b58e85a11d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "patch": "@@ -1,3 +1,8 @@\n+2013-09-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree.c (types_same_for_odr): Drop overactive check.\n+\t* ipa-devirt.c (hash_type_name): Likewise.\n+\n 2013-09-04  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraphunit.c (walk_polymorphic_call_targets): Break out from ..."}, {"sha": "537fbda7682e2043c16201f8956ef1113763f343", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "patch": "@@ -204,9 +204,6 @@ hash_type_name (tree t)\n \t}\n \n       v = DECL_ASSEMBLER_NAME (v);\n-#ifdef ENABLE_CHECKING\n-      gcc_assert (!strchr (IDENTIFIER_POINTER (v), '.'));\n-#endif\n       hash = iterative_hash_hashval_t (hash, htab_hash_pointer (v));\n       return hash;\n     }"}, {"sha": "61815046fae30cd2c2c5a39cf55b08226793bc86", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7d2ba4711f5e69b460fa44a1b07b3920b3ce6b65", "patch": "@@ -11883,13 +11883,6 @@ types_same_for_odr (tree type1, tree type2)\n \t}\n       v1 = DECL_ASSEMBLER_NAME (v1);\n       v2 = DECL_ASSEMBLER_NAME (v2);\n-      /* If we ever start adding random .blah suffixes after\n-\t assembler names, we need to compare for match ignoring\n-\t these (and update odr_type_hash, too).  */\n-#ifdef ENABLE_CHECKING\n-      gcc_assert (!strchr (IDENTIFIER_POINTER (v1), '.')\n-\t\t  && !strchr (IDENTIFIER_POINTER (v2), '.'));\n-#endif\n       return (v1 == v2);\n     }\n "}]}