{"sha": "e76e75bb709e93a84d55a3f0366b3ade0d532e7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc2ZTc1YmI3MDllOTNhODRkNTVhM2YwMzY2YjNhZGUwZDUzMmU3Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-27T13:21:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-27T13:21:59Z"}, "message": "(mov[qhs]i): Allow moving a special reg to itself.\n\nFrom-SVN: r3891", "tree": {"sha": "b454df860de4422ab15c5de9c7b5b572df8d94ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b454df860de4422ab15c5de9c7b5b572df8d94ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e76e75bb709e93a84d55a3f0366b3ade0d532e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e75bb709e93a84d55a3f0366b3ade0d532e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76e75bb709e93a84d55a3f0366b3ade0d532e7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e75bb709e93a84d55a3f0366b3ade0d532e7f/comments", "author": null, "committer": null, "parents": [{"sha": "6ac2ba936e54e9f0f934bb39e5672cc186e2af09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac2ba936e54e9f0f934bb39e5672cc186e2af09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac2ba936e54e9f0f934bb39e5672cc186e2af09"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "f6a9d21d342e2c54b2045d0212d75ba213523eaf", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e75bb709e93a84d55a3f0366b3ade0d532e7f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e75bb709e93a84d55a3f0366b3ade0d532e7f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e76e75bb709e93a84d55a3f0366b3ade0d532e7f", "patch": "@@ -2103,8 +2103,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,*c*q,*l\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,m,r,I,J,*h,r,r\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,*c*q,*l,*h\")\n+\t(match_operand:SI 1 \"input_operand\" \"r,m,r,I,J,*h,r,r,0\"))]\n   \"gpc_reg_operand (operands[0], SImode)\n    || gpc_reg_operand (operands[1], SImode)\"\n   \"@\n@@ -2115,8 +2115,9 @@\n    cau %0,0,%u1\n    mf%1 %0\n    mt%0 %1\n-   mt%0 %1\"\n-  [(set_attr \"type\" \"*,load,*,*,*,*,*,mtlr\")])\n+   mt%0 %1\n+   cror 0,0,0\"\n+  [(set_attr \"type\" \"*,load,*,*,*,*,*,mtlr,*\")])\n \n ;; Split a load of a large constant into the appropriate two-insn\n ;; sequence.\n@@ -2161,8 +2162,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h\")\n-\t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h,*h\")\n+\t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n   \"gpc_reg_operand (operands[0], HImode)\n    || gpc_reg_operand (operands[1], HImode)\"\n   \"@\n@@ -2171,8 +2172,9 @@\n    sth%U0%X0 %1,%0\n    cal %0,%w1(0)\n    mf%1 %0\n-   mt%0 %1\"\n-  [(set_attr \"type\" \"*,load,*,*,*,*\")])\n+   mt%0 %1\n+   cror 0,0,0\"\n+  [(set_attr \"type\" \"*,load,*,*,*,*,*\")])\n \n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n@@ -2188,8 +2190,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h\")\n-\t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h,*h\")\n+\t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n   \"gpc_reg_operand (operands[0], QImode)\n    || gpc_reg_operand (operands[1], QImode)\"\n   \"@\n@@ -2198,8 +2200,9 @@\n    stb%U0%X0 %1,%0\n    cal %0,%1(0)\n    mf%1 %0\n-   mt%0 %1\"\n-  [(set_attr \"type\" \"*,load,*,*,*,*\")])\n+   mt%0 %1\n+   cror 0,0,0\"\n+  [(set_attr \"type\" \"*,load,*,*,*,*,*\")])\n \f\n ;; Here is how to move condition codes around.  When we store CC data in\n ;; an integer register or memory, we store just the high-order 4 bits."}]}