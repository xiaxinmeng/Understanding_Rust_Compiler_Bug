{"sha": "e8d6aaee64a7302901510db5646f1cff2284d95c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkNmFhZWU2NGE3MzAyOTAxNTEwZGI1NjQ2ZjFjZmYyMjg0ZDk1Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-08T12:25:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-08T12:25:39Z"}, "message": "i386-protos.h (ix86_return_in_memory): Adjust return type to bool.\n\n2008-05-08  Richard Guenther  <rguenther@suse.de>\n\n\t* config/i386/i386-protos.h (ix86_return_in_memory): Adjust\n\treturn type to bool.\n\t(ix86_sol10_return_in_memory): Likewise.\n\t(ix86_i386elf_return_in_memory): Likewise.\n\t(ix86_i386interix_return_in_memory): Likewise.\n\t* config/i386/i386.c (ix86_return_in_memory): Likewise.\n\t(ix86_sol10_return_in_memory): Likewise.\n\t(ix86_i386elf_return_in_memory): Likewise.\n\t(ix86_i386interix_return_in_memory): Likewise.\n\nFrom-SVN: r135080", "tree": {"sha": "8791f37d991d4d480f9b93d51ff84f696b9afa6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8791f37d991d4d480f9b93d51ff84f696b9afa6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8d6aaee64a7302901510db5646f1cff2284d95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d6aaee64a7302901510db5646f1cff2284d95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d6aaee64a7302901510db5646f1cff2284d95c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d6aaee64a7302901510db5646f1cff2284d95c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "5fd257c71c6e5863feb7d1ff5871e4ccc16b910a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8d6aaee64a7302901510db5646f1cff2284d95c", "patch": "@@ -1,3 +1,15 @@\n+2008-05-08  Richard Guenther  <rguenther@suse.de>\n+\n+\t* config/i386/i386-protos.h (ix86_return_in_memory): Adjust\n+\treturn type to bool.\n+\t(ix86_sol10_return_in_memory): Likewise.\n+\t(ix86_i386elf_return_in_memory): Likewise.\n+\t(ix86_i386interix_return_in_memory): Likewise.\n+\t* config/i386/i386.c (ix86_return_in_memory): Likewise.\n+\t(ix86_sol10_return_in_memory): Likewise.\n+\t(ix86_i386elf_return_in_memory): Likewise.\n+\t(ix86_i386interix_return_in_memory): Likewise.\n+\n 2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR/36180"}, {"sha": "5e3a5caf352a746b0ba2ae01345bb6ce2eab52f4", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=e8d6aaee64a7302901510db5646f1cff2284d95c", "patch": "@@ -134,10 +134,10 @@ extern rtx ix86_libcall_value (enum machine_mode);\n extern bool ix86_function_value_regno_p (int);\n extern bool ix86_function_arg_regno_p (int);\n extern int ix86_function_arg_boundary (enum machine_mode, tree);\n-extern int ix86_return_in_memory (const_tree, const_tree);\n-extern int ix86_sol10_return_in_memory (const_tree,const_tree);\n-extern int ix86_i386elf_return_in_memory (const_tree,const_tree);\n-extern int ix86_i386interix_return_in_memory (const_tree,const_tree);\n+extern bool ix86_return_in_memory (const_tree, const_tree);\n+extern bool ix86_sol10_return_in_memory (const_tree,const_tree);\n+extern bool ix86_i386elf_return_in_memory (const_tree,const_tree);\n+extern bool ix86_i386interix_return_in_memory (const_tree,const_tree);\n extern rtx ix86_force_to_memory (enum machine_mode, rtx);\n extern void ix86_free_from_memory (enum machine_mode);\n extern void ix86_split_fp_branch (enum rtx_code code, rtx, rtx,"}, {"sha": "4d6349ca081cdcc3eeca340cae12ddd5156e0d20", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d6aaee64a7302901510db5646f1cff2284d95c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e8d6aaee64a7302901510db5646f1cff2284d95c", "patch": "@@ -4901,7 +4901,7 @@ return_in_memory_ms_64 (const_tree type, enum machine_mode mode)\n   return (size != 1 && size != 2 && size != 4 && size != 8);\n }\n \n-int\n+bool\n ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   const enum machine_mode mode = type_natural_mode (type);\n@@ -4919,7 +4919,7 @@ ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n    but differs notably in that when MMX is available, 8-byte vectors\n    are returned in memory, rather than in MMX registers.  */\n \n-int\n+bool\n ix86_sol10_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   int size;\n@@ -4951,14 +4951,14 @@ ix86_sol10_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED\n   return size > 12;\n }\n \n-int\n+bool\n ix86_i386elf_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   return (TYPE_MODE (type) == BLKmode\n \t  || (VECTOR_MODE_P (TYPE_MODE (type)) && int_size_in_bytes (type) == 8));\n }\n \n-int\n+bool\n ix86_i386interix_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   return (TYPE_MODE (type) == BLKmode"}]}