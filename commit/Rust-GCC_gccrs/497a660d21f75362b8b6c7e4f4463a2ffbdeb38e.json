{"sha": "497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk3YTY2MGQyMWY3NTM2MmI4YjZjN2U0ZjQ0NjNhMmZmYmRlYjM4ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-22T10:48:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-22T10:48:33Z"}, "message": "[multiple changes]\n\n2016-06-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb, sem_type.adb, sem.adb, freeze.adb, sem_util.adb,\n\ts-htable.adb, exp_ch11.adb, s-secsta.adb, restrict.adb, exp_disp.adb,\n\tsem_ch8.adb, s-tpobop.adb, exp_aggr.ads, sem_ch13.adb: Minor\n\treformatting.\n\n2016-06-22  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-spark_specific.adb (Collect_SPARK_Xrefs): Inverse order of\n\ttreatments so that files without compilation unit are simply skipped\n\tbefore more elaborate treatments.\n\n2016-06-22  Bob Duff  <duff@adacore.com>\n\n\t* s-memory.ads: Minor typo fixes in comments.\n\t* s-memory.adb: Code cleanup.\n\nFrom-SVN: r237697", "tree": {"sha": "59d86dc3b771501984e1310d2f5cdab6803f10b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59d86dc3b771501984e1310d2f5cdab6803f10b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/comments", "author": null, "committer": null, "parents": [{"sha": "35484fc8b008868958da3543c4cb2569f0cff024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35484fc8b008868958da3543c4cb2569f0cff024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35484fc8b008868958da3543c4cb2569f0cff024"}], "stats": {"total": 259, "additions": 142, "deletions": 117}, "files": [{"sha": "80d03e043b2c7de1bd073421ac182280e2d2f1df", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -1,3 +1,21 @@\n+2016-06-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb, sem_type.adb, sem.adb, freeze.adb, sem_util.adb,\n+\ts-htable.adb, exp_ch11.adb, s-secsta.adb, restrict.adb, exp_disp.adb,\n+\tsem_ch8.adb, s-tpobop.adb, exp_aggr.ads, sem_ch13.adb: Minor\n+\treformatting.\n+\n+2016-06-22  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Collect_SPARK_Xrefs): Inverse order of\n+\ttreatments so that files without compilation unit are simply skipped\n+\tbefore more elaborate treatments.\n+\n+2016-06-22  Bob Duff  <duff@adacore.com>\n+\n+\t* s-memory.ads: Minor typo fixes in comments.\n+\t* s-memory.adb: Code cleanup.\n+\n 2016-05-22  Olivier Hainque  <hainque@adacore.com>\n \n \t* vxworks-crtbe-link.spec: Removed, no longer used."}, {"sha": "912f5465870138f34bc1037a6fbd913ffdb94d94", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,4 +62,5 @@ package Exp_Aggr is\n    --  are compile-time known constants, rewrite N as a purely positional\n    --  aggregate, to be use to initialize variables and components of the type\n    --  without generating elaboration code.\n+\n end Exp_Aggr;"}, {"sha": "1a507efa7e72e0230070ceaa41fa32128ed46747", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -440,7 +440,6 @@ package body Exp_Ch11 is\n       --  expansion as described above.\n \n       procedure Expand_Local_Exception_Handlers is\n-\n          procedure Add_Exception_Label (H : Node_Id);\n          --  H is an exception handler. First check for an Exception_Label\n          --  already allocated for H. If none, allocate one, set the field in"}, {"sha": "03c45585836f33d8fa2bc82cd50fc730d0051b21", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -3942,8 +3942,8 @@ package body Exp_Disp is\n \n                         if Present (Thunk_Id) then\n                            Append_To (Result, Thunk_Code);\n-                           Prim_Table (UI_To_Int (DT_Position (Prim)))\n-                             := Thunk_Id;\n+                           Prim_Table (UI_To_Int (DT_Position (Prim))) :=\n+                             Thunk_Id;\n                         end if;\n                      end if;\n                   end if;"}, {"sha": "037ba2f61da1844aaac4490eb4d5efaec96b801b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -108,6 +108,14 @@ package body Freeze is\n    --  Comp_ADC_Present is set True if the component has a Scalar_Storage_Order\n    --  attribute definition clause.\n \n+   procedure Check_Debug_Info_Needed (T : Entity_Id);\n+   --  As each entity is frozen, this routine is called to deal with the\n+   --  setting of Debug_Info_Needed for the entity. This flag is set if\n+   --  the entity comes from source, or if we are in Debug_Generated_Code\n+   --  mode or if the -gnatdV debug flag is set. However, it never sets\n+   --  the flag if Debug_Info_Off is set. This procedure also ensures that\n+   --  subsidiary entities have the flag set as required.\n+\n    procedure Check_Expression_Function (N : Node_Id; Nam : Entity_Id);\n    --  When an expression function is frozen by a use of it, the expression\n    --  itself is frozen. Check that the expression does not include references\n@@ -186,14 +194,6 @@ package body Freeze is\n    --  the default component alignment from the scope stack values if the\n    --  alignment is otherwise not specified.\n \n-   procedure Check_Debug_Info_Needed (T : Entity_Id);\n-   --  As each entity is frozen, this routine is called to deal with the\n-   --  setting of Debug_Info_Needed for the entity. This flag is set if\n-   --  the entity comes from source, or if we are in Debug_Generated_Code\n-   --  mode or if the -gnatdV debug flag is set. However, it never sets\n-   --  the flag if Debug_Info_Off is set. This procedure also ensures that\n-   --  subsidiary entities have the flag set as required.\n-\n    procedure Set_SSO_From_Default (T : Entity_Id);\n    --  T is a record or array type that is being frozen. If it is a base type,\n    --  and if SSO_Set_Low/High_By_Default is set, then Reverse_Storage order\n@@ -2458,6 +2458,7 @@ package body Freeze is\n                      --  Bit packing is never needed for 8, 16, 32, 64\n \n                      if Addressable (Csiz) then\n+\n                         --  If the Esize of the component is known and equal to\n                         --  the component size then even packing is not needed.\n "}, {"sha": "95056e09ace4a004e12c06fcb8f74d3c2859d36f", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 50, "deletions": 47, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -931,74 +931,77 @@ package body SPARK_Specific is\n       Sdep := 1;\n       while Sdep <= Num_Sdep loop\n \n+         --  Skip dependencies with no entity node, e.g. configuration files\n+         --  with pragmas (.adc) or target description (.atp), since they\n+         --  present no interest for SPARK cross references.\n+\n+         if No (Cunit_Entity (Sdep_Table (Sdep))) then\n+            Sdep_Next := Sdep + 1;\n+\n          --  For library-level instantiation of a generic, two consecutive\n          --  units refer to the same compilation unit node and entity (one to\n          --  body, one to spec). In that case, treat them as a single unit for\n          --  the sake of SPARK cross references by passing to Add_SPARK_File.\n \n-         if Sdep < Num_Sdep\n-           and then Cunit_Entity (Sdep_Table (Sdep)) =\n-                    Cunit_Entity (Sdep_Table (Sdep + 1))\n-         then\n-            declare\n-               Cunit1 : Node_Id renames Cunit (Sdep_Table (Sdep));\n-               Cunit2 : Node_Id renames Cunit (Sdep_Table (Sdep + 1));\n-\n-            begin\n-               --  Both Cunit point to compilation unit nodes\n+         else\n+            if Sdep < Num_Sdep\n+              and then Cunit_Entity (Sdep_Table (Sdep)) =\n+                       Cunit_Entity (Sdep_Table (Sdep + 1))\n+            then\n+               declare\n+                  Cunit1 : Node_Id renames Cunit (Sdep_Table (Sdep));\n+                  Cunit2 : Node_Id renames Cunit (Sdep_Table (Sdep + 1));\n \n-               pragma Assert\n-                 (Nkind (Cunit1) = N_Compilation_Unit\n-                   and then Nkind (Cunit2) = N_Compilation_Unit);\n+               begin\n+                  --  Both Cunits point to compilation unit nodes\n \n-               --  Do not depend on the sorting order, which is based on\n-               --  Unit_Name and for library-level instances of nested\n-               --  generic-packages they are equal.\n+                  pragma Assert\n+                    (Nkind (Cunit1) = N_Compilation_Unit\n+                      and then Nkind (Cunit2) = N_Compilation_Unit);\n \n-               --  If declaration comes before the body\n+                  --  Do not depend on the sorting order, which is based on\n+                  --  Unit_Name, and for library-level instances of nested\n+                  --  generic packages they are equal.\n \n-               if Nkind (Unit (Cunit1)) = N_Package_Declaration\n-                 and then Nkind (Unit (Cunit2)) = N_Package_Body\n-               then\n-                  Uspec := Sdep_Table (Sdep);\n-                  Ubody := Sdep_Table (Sdep + 1);\n+                  --  If declaration comes before the body\n \n-                  Sdep_File := Sdep + 1;\n+                  if Nkind (Unit (Cunit1)) = N_Package_Declaration\n+                    and then Nkind (Unit (Cunit2)) = N_Package_Body\n+                  then\n+                     Uspec := Sdep_Table (Sdep);\n+                     Ubody := Sdep_Table (Sdep + 1);\n \n-               --  If body comes before declaration\n+                     Sdep_File := Sdep + 1;\n \n-               elsif Nkind (Unit (Cunit1)) = N_Package_Body\n-                 and then Nkind (Unit (Cunit2)) = N_Package_Declaration\n-               then\n-                  Uspec := Sdep_Table (Sdep + 1);\n-                  Ubody := Sdep_Table (Sdep);\n+                  --  If body comes before declaration\n \n-                  Sdep_File := Sdep;\n+                  elsif Nkind (Unit (Cunit1)) = N_Package_Body\n+                    and then Nkind (Unit (Cunit2)) = N_Package_Declaration\n+                  then\n+                     Uspec := Sdep_Table (Sdep + 1);\n+                     Ubody := Sdep_Table (Sdep);\n \n-               --  Otherwise it is an error\n+                     Sdep_File := Sdep;\n \n-               else\n-                  raise Program_Error;\n-               end if;\n+                  --  Otherwise it is an error\n \n-               Sdep_Next := Sdep + 2;\n-            end;\n+                  else\n+                     raise Program_Error;\n+                  end if;\n \n-         --  ??? otherwise?\n+                  Sdep_Next := Sdep + 2;\n+               end;\n \n-         else\n-            Uspec := Sdep_Table (Sdep);\n-            Ubody := No_Unit;\n+            --  ??? otherwise?\n \n-            Sdep_File := Sdep;\n-            Sdep_Next := Sdep + 1;\n-         end if;\n+            else\n+               Uspec := Sdep_Table (Sdep);\n+               Ubody := No_Unit;\n \n-         --  Skip dependencies with no entity node, e.g. configuration files\n-         --  with pragmas (.adc) or target description (.atp), since they\n-         --  present no interest for SPARK cross references.\n+               Sdep_File := Sdep;\n+               Sdep_Next := Sdep + 1;\n+            end if;\n \n-         if Present (Cunit_Entity (Uspec)) then\n             Add_SPARK_File\n               (Uspec => Uspec,\n                Ubody => Ubody,"}, {"sha": "c56c2e0b6acd722e83836be195e21c2667d5dc16", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -1113,8 +1113,7 @@ package body Restrict is\n    --  Note: body of this function must be coordinated with list of renaming\n    --  declarations in System.Rident.\n \n-   function Process_Restriction_Synonyms (N : Node_Id) return Name_Id\n-   is\n+   function Process_Restriction_Synonyms (N : Node_Id) return Name_Id is\n       Old_Name : constant Name_Id := Chars (N);\n       New_Name : Name_Id;\n "}, {"sha": "ba956fcdd7af385ab73621254438c4336bb21577", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 1995-2015, AdaCore                      --\n+--                    Copyright (C) 1995-2016, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -258,7 +258,7 @@ package body System.HTable is\n       -- Get --\n       ---------\n \n-      function  Get (K : Key) return Element is\n+      function Get (K : Key) return Element is\n          Tmp : constant Elmt_Ptr := Tab.Get (K);\n       begin\n          if Tmp = null then"}, {"sha": "4c437669042ea81815ea8525b682d0773651ce38", "filename": "gcc/ada/s-memory.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -67,8 +67,17 @@ package body System.Memory is\n \n    function Alloc (Size : size_t) return System.Address is\n       Result : System.Address;\n-\n    begin\n+      --  A previous version moved the check for size_t'Last below, into the\n+      --  \"if Result = System.Null_Address...\". So malloc(size_t'Last) should\n+      --  return Null_Address, and then we can check for that special value.\n+      --  However, that doesn't work on VxWorks, because malloc(size_t'Last)\n+      --  prints an unwanted warning message before returning Null_Address.\n+\n+      if Size = size_t'Last then\n+         raise Storage_Error with \"object too large\";\n+      end if;\n+\n       if Parameters.No_Abort then\n          Result := c_malloc (System.CRTL.size_t (Size));\n       else\n@@ -98,10 +107,6 @@ package body System.Memory is\n             return Alloc (1);\n          end if;\n \n-         if Size = size_t'Last then\n-            raise Storage_Error with \"object too large\";\n-         end if;\n-\n          raise Storage_Error with \"heap exhausted\";\n       end if;\n \n@@ -134,6 +139,10 @@ package body System.Memory is\n    is\n       Result      : System.Address;\n    begin\n+      if Size = size_t'Last then\n+         raise Storage_Error with \"object too large\";\n+      end if;\n+\n       if Parameters.No_Abort then\n          Result := c_realloc (Ptr, System.CRTL.size_t (Size));\n       else\n@@ -143,10 +152,6 @@ package body System.Memory is\n       end if;\n \n       if Result = System.Null_Address then\n-         if Size = size_t'Last then\n-            raise Storage_Error with \"object too large\";\n-         end if;\n-\n          raise Storage_Error with \"heap exhausted\";\n       end if;\n "}, {"sha": "a8c1251c0047ca92732ff1025c54bc7d851ff884", "filename": "gcc/ada/s-memory.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-memory.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-memory.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.ads?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -56,10 +56,10 @@ package System.Memory is\n    --  memory. The implementation of this routine is guaranteed to be\n    --  task safe, and also aborts are deferred if necessary.\n    --\n-   --  If size_t is set to size_t'Last on entry, then a Storage_Error\n+   --  If Size is set to size_t'Last on entry, then a Storage_Error\n    --  exception is raised with a message \"object too large\".\n    --\n-   --  If size_t is set to zero on entry, then a minimal (but non-zero)\n+   --  If Size is set to zero on entry, then a minimal (but non-zero)\n    --  size block is allocated.\n    --\n    --  Note: this is roughly equivalent to the standard C malloc call\n@@ -87,10 +87,10 @@ package System.Memory is\n    --  routine is guaranteed to be task safe, and also aborts are\n    --  deferred as necessary.\n    --\n-   --  If size_t is set to size_t'Last on entry, then a Storage_Error\n+   --  If Size is set to size_t'Last on entry, then a Storage_Error\n    --  exception is raised with a message \"object too large\".\n    --\n-   --  If size_t is set to zero on entry, then a minimal (but non-zero)\n+   --  If Size is set to zero on entry, then a minimal (but non-zero)\n    --  size block is allocated.\n    --\n    --  Note: this is roughly equivalent to the standard C realloc call"}, {"sha": "30e03debf46735b01aab28f3dfc5e4ad2b2c2e58", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,20 +80,20 @@ package body System.Secondary_Stack is\n    --                                      |                  | First (101)\n    --                                      +------------------+\n    --                         +----------> |          |       |\n-   --                         |            +----------+-------+\n+   --                         |            +--------- | ------+\n+   --                         |                    ^  |\n    --                         |                    |  |\n-   --                         |                    ^  V\n-   --                         |                    |  |\n-   --                         |            +-------+----------+\n+   --                         |                    |  V\n+   --                         |            +------ | ---------+\n    --                         |            |       |          |\n    --                         |            +------------------+\n    --                         |            |                  | Last (100)\n    --                         |            |         C        |\n    --                         |            |         H        |\n-   --    +-----------------+  |  +-------->|         U        |\n-   --    |  Current_Chunk -|--+  |         |         N        |\n-   --    +-----------------+     |         |         K        |\n-   --    |       Top      -|-----+         |                  | First (1)\n+   --    +-----------------+  |   +------->|         U        |\n+   --    |  Current_Chunk ----+   |        |         N        |\n+   --    +-----------------+      |        |         K        |\n+   --    |       Top      --------+        |                  | First (1)\n    --    +-----------------+               +------------------+\n    --    | Default_Size    |               |       Prev       |\n    --    +-----------------+               +------------------+\n@@ -178,10 +178,10 @@ package body System.Secondary_Stack is\n      (Addr         : out Address;\n       Storage_Size : SSE.Storage_Count)\n    is\n-      Max_Align    : constant SS_Ptr := SS_Ptr (Standard'Maximum_Alignment);\n-      Max_Size     : constant SS_Ptr :=\n-                       ((SS_Ptr (Storage_Size) + Max_Align - 1) / Max_Align)\n-                         * Max_Align;\n+      Max_Align : constant SS_Ptr := SS_Ptr (Standard'Maximum_Alignment);\n+      Max_Size  : constant SS_Ptr :=\n+                    ((SS_Ptr (Storage_Size) + Max_Align - 1) / Max_Align) *\n+                      Max_Align;\n \n    begin\n       --  Case of fixed allocation secondary stack\n@@ -227,7 +227,7 @@ package body System.Secondary_Stack is\n             Chunk := Stack.Current_Chunk;\n \n             --  The Current_Chunk may not be the good one if a lot of release\n-            --  operations have taken place. So go down the stack if necessary\n+            --  operations have taken place. Go down the stack if necessary.\n \n             while Chunk.First > Stack.Top loop\n                Chunk := Chunk.Prev;\n@@ -250,8 +250,8 @@ package body System.Secondary_Stack is\n                      Free (To_Be_Released_Chunk);\n                   end if;\n \n-                  --  Create new chunk of default size unless it is not\n-                  --  sufficient to satisfy the current request.\n+               --  Create new chunk of default size unless it is not sufficient\n+               --  to satisfy the current request.\n \n                elsif SSE.Storage_Count (Max_Size) <= Stack.Default_Size then\n                   Chunk.Next :=\n@@ -261,7 +261,7 @@ package body System.Secondary_Stack is\n \n                   Chunk.Next.Prev := Chunk;\n \n-                  --  Otherwise create new chunk of requested size\n+               --  Otherwise create new chunk of requested size\n \n                else\n                   Chunk.Next :=\n@@ -500,8 +500,8 @@ package body System.Secondary_Stack is\n \n    Chunk : aliased Chunk_Id (1, Static_Secondary_Stack_Size);\n    for Chunk'Alignment use Standard'Maximum_Alignment;\n-   --  Default chunk used, unless gnatbind -D is specified with a value\n-   --  greater than Static_Secondary_Stack_Size\n+   --  Default chunk used, unless gnatbind -D is specified with a value greater\n+   --  than Static_Secondary_Stack_Size.\n \n begin\n    declare"}, {"sha": "e242bb062831dab2f0c4c7a2ca2956baeb7a475a", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1998-2012, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1998-2016, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -345,14 +345,12 @@ package body System.Tasking.Protected_Objects.Operations is\n       elsif Entry_Call.Mode /= Conditional_Call\n         or else not Entry_Call.With_Abort\n       then\n-\n          if Run_Time_Restrictions.Set (Max_Entry_Queue_Length)\n-              and then\n-            Run_Time_Restrictions.Value (Max_Entry_Queue_Length) <=\n-              Queuing.Count_Waiting (Object.Entry_Queues (E))\n+           and then Run_Time_Restrictions.Value (Max_Entry_Queue_Length) <=\n+                      Queuing.Count_Waiting (Object.Entry_Queues (E))\n          then\n-            --  This violates the Max_Entry_Queue_Length restriction,\n-            --  raise Program_Error.\n+            --  This violates the Max_Entry_Queue_Length restriction, raise\n+            --  Program_Error.\n \n             Entry_Call.Exception_To_Raise := Program_Error'Identity;\n "}, {"sha": "7a86644bcaa8e179831e2427df6c256631a33a30", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -205,7 +205,7 @@ package body Sem is\n          when N_Entry_Declaration =>\n             Analyze_Entry_Declaration (N);\n \n-         when N_Entry_Index_Specification     =>\n+         when N_Entry_Index_Specification =>\n             Analyze_Entry_Index_Specification (N);\n \n          when N_Enumeration_Representation_Clause =>"}, {"sha": "b631b9c9417a5a37740b626087916c76c6a50cec", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -12367,7 +12367,7 @@ package body Sem_Ch13 is\n \n             if Chars (N) /= TName then\n                if Present (Current_Entity (N))\n-                  and then Is_Type (Current_Entity (N))\n+                 and then Is_Type (Current_Entity (N))\n                then\n                   Freeze_Before (Freeze_Node (T), Current_Entity (N));\n                end if;"}, {"sha": "be0fa8f650645f50db7f228181d10dae8a3d7a58", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -2436,8 +2436,8 @@ package body Sem_Ch3 is\n                null;\n \n             elsif L /= Visible_Declarations (Parent (L))\n-               or else No (Private_Declarations (Parent (L)))\n-               or else Is_Empty_List (Private_Declarations (Parent (L)))\n+              or else No (Private_Declarations (Parent (L)))\n+              or else Is_Empty_List (Private_Declarations (Parent (L)))\n             then\n                Adjust_Decl;\n                Freeze_All (First_Entity (Current_Scope), Decl);"}, {"sha": "0f43ecf4d75497a12c62be8534022a8669566256", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -4812,9 +4812,9 @@ package body Sem_Ch8 is\n                 or else\n               Name_Buffer (3 .. 5) = \"aux\";\n \n-         --  If not an internal file, then entity is definitely known,\n-         --  even if it is in a private part (the message generated will\n-         --  note that it is in a private part)\n+         --  If not an internal file, then entity is definitely known, even if\n+         --  it is in a private part (the message generated will note that it\n+         --  is in a private part).\n \n          else\n             return True;\n@@ -6104,8 +6104,8 @@ package body Sem_Ch8 is\n             null;\n          else\n             Error_Msg_N\n-              (\"limited withed package can only be used to access \"\n-               & \"incomplete types\", N);\n+              (\"limited withed package can only be used to access incomplete \"\n+               & \"types\", N);\n          end if;\n       end if;\n "}, {"sha": "2879c3cf9d7adebe623204cdd1ebbe1cac198b5f", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -638,8 +638,9 @@ package body Sem_Type is\n \n          H := Current_Entity (Ent);\n          while Present (H) loop\n-            exit when (not Is_Overloadable (H))\n-              and then Is_Immediately_Visible (H);\n+            exit when\n+              not Is_Overloadable (H)\n+                and then Is_Immediately_Visible (H);\n \n             if Is_Immediately_Visible (H) and then H /= Ent then\n "}, {"sha": "0c4f9ebe46a6e36491cc392fe80e287fadd03360", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/497a660d21f75362b8b6c7e4f4463a2ffbdeb38e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=497a660d21f75362b8b6c7e4f4463a2ffbdeb38e", "patch": "@@ -16273,9 +16273,9 @@ package body Sem_Util is\n \n    function New_Copy_Tree\n      (Source    : Node_Id;\n-      Map       : Elist_Id := No_Elist;\n+      Map       : Elist_Id   := No_Elist;\n       New_Sloc  : Source_Ptr := No_Location;\n-      New_Scope : Entity_Id := Empty) return Node_Id\n+      New_Scope : Entity_Id  := Empty) return Node_Id\n    is\n       Actual_Map : Elist_Id := Map;\n       --  This is the actual map for the copy. It is initialized with the"}]}