{"sha": "e9a54b07f66c0514f974bf9abaf930871adfc234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhNTRiMDdmNjZjMDUxNGY5NzRiZjlhYmFmOTMwODcxYWRmYzIzNA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-05-25T08:00:56Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-05-25T08:00:56Z"}, "message": "Makefile.def (bfd, opcodes): Fix lib_path.\n\n2006-05-25  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.def (bfd, opcodes): Fix lib_path.\n\t* Makefile.tpl (POSTSTAGE1_FLAGS_TO_PASS): Replace ADAC with ADAFLAGS.\n\t(restrap): Move under \"@if gcc-bootstrap\".  Fix typo.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r114109", "tree": {"sha": "04a075bce323ebf36851306d040fbf4e4c691608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a075bce323ebf36851306d040fbf4e4c691608"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9a54b07f66c0514f974bf9abaf930871adfc234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a54b07f66c0514f974bf9abaf930871adfc234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a54b07f66c0514f974bf9abaf930871adfc234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a54b07f66c0514f974bf9abaf930871adfc234/comments", "author": null, "committer": null, "parents": [{"sha": "9d6eefd5e90b0808bddb4556ded0aea00e8fd718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d6eefd5e90b0808bddb4556ded0aea00e8fd718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d6eefd5e90b0808bddb4556ded0aea00e8fd718"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "8d4acaa728c5d39a8ffb1ba1992c264233e749e8", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a54b07f66c0514f974bf9abaf930871adfc234/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a54b07f66c0514f974bf9abaf930871adfc234/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e9a54b07f66c0514f974bf9abaf930871adfc234", "patch": "@@ -1,3 +1,10 @@\n+2006-05-25  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* Makefile.def (bfd, opcodes): Fix lib_path.\n+\t* Makefile.tpl (POSTSTAGE1_FLAGS_TO_PASS): Replace ADAC with ADAFLAGS.\n+\t(restrap): Move under \"@if gcc-bootstrap\".  Fix typo.\n+\t* Makefile.in: Regenerate.\n+\n 2006-05-24  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.in: Regenerate.\n@@ -109,7 +116,8 @@\n \t* MAINTAINERS (Write After Approval):  Remove myself.\n \t(Language Front End Maintainers):  Add myself as fortran 95 maintainer.\n \n-2006-02-21 Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola <rafael.espindola@gmail.com>\n+2006-02-21  Rafael Avila de Espindola <rafael.espindola@gmail.com>\n+\n \t* Makefile.tpl  (BUILD_CONFIGDIRS): Remove.\n \t(TARGET_CONFIGDIRS): Remove.\n \t* configure.in: Remove AC_SUBST(target_configdirs)."}, {"sha": "99e8ebe2b139234be1d82b1e65e6b7575fa4c0de", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=e9a54b07f66c0514f974bf9abaf930871adfc234", "patch": "@@ -37,8 +37,8 @@ host_modules= { module= ash; };\n host_modules= { module= autoconf; };\n host_modules= { module= automake; };\n host_modules= { module= bash; };\n-host_modules= { module= bfd; lib_path=.; bootstrap=true; };\n-host_modules= { module= opcodes; lib_path=.; bootstrap=true; };\n+host_modules= { module= bfd; lib_path=.libs; bootstrap=true; };\n+host_modules= { module= opcodes; lib_path=.libs; bootstrap=true; };\n host_modules= { module= binutils; bootstrap=true; };\n host_modules= { module= bison; no_check_cross= true; };\n host_modules= { module= byacc; no_check_cross= true; };"}, {"sha": "c1a4c2d88a535731df1f0407a8d6e22e82929e30", "filename": "Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=e9a54b07f66c0514f974bf9abaf930871adfc234", "patch": "@@ -386,12 +386,12 @@ HOST_LIB_PATH_gcc = $$r/$(HOST_SUBDIR)/gcc:$$r/$(HOST_SUBDIR)/prev-gcc:\n \n @if bfd\n HOST_LIB_PATH_bfd = \\\n-  $$r/$(HOST_SUBDIR)/bfd/.:$$r/$(HOST_SUBDIR)/prev-bfd/.:\n+  $$r/$(HOST_SUBDIR)/bfd/.libs:$$r/$(HOST_SUBDIR)/prev-bfd/.libs:\n @endif bfd\n \n @if opcodes\n HOST_LIB_PATH_opcodes = \\\n-  $$r/$(HOST_SUBDIR)/opcodes/.:$$r/$(HOST_SUBDIR)/prev-opcodes/.:\n+  $$r/$(HOST_SUBDIR)/opcodes/.libs:$$r/$(HOST_SUBDIR)/prev-opcodes/.libs:\n @endif opcodes\n \n \n@@ -38768,7 +38768,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLIBCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n-\tADAC=\"\\$$(CC)\"\n+\t\"`echo 'ADAFLAGS=$(BOOT_ADAFLAGS)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n # For stage 1:\n # * We force-disable intermodule optimizations, even if\n@@ -40066,13 +40066,13 @@ do-distclean: distclean-stage1\n # not work as a dependency, just as the minimum necessary to avoid errors.\n stage_last:\n \t$(MAKE) $(RECURSE_FLAGS_TO_PASS) stage1-bubble\n-@endif gcc-bootstrap\n \n .PHONY: restrap\n restrap:\n \t@: $(MAKE); $(stage)\n-\trm -rf stage1-$(TARGET_SUBDIR) stage2 stage3 stage4 stageprofile stagefeedback \n+\trm -rf stage1-$(TARGET_SUBDIR) stage2-* stage3-* stage4-* stageprofile-* stagefeedback-* \n \t$(MAKE) $(RECURSE_FLAGS_TO_PASS) all\n+@endif gcc-bootstrap\n \n # --------------------------------------\n # Dependencies between different modules"}, {"sha": "e3abcb1dbb99865c07a76af8302624e2b21150b5", "filename": "Makefile.tpl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a54b07f66c0514f974bf9abaf930871adfc234/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=e9a54b07f66c0514f974bf9abaf930871adfc234", "patch": "@@ -1259,7 +1259,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLIBCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n-\tADAC=\"\\$$(CC)\"\n+\t\"`echo 'ADAFLAGS=$(BOOT_ADAFLAGS)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n # For stage 1:\n # * We force-disable intermodule optimizations, even if\n@@ -1428,14 +1428,14 @@ do-distclean: distclean-stage1\n # not work as a dependency, just as the minimum necessary to avoid errors.\n stage_last:\n \t$(MAKE) $(RECURSE_FLAGS_TO_PASS) stage1-bubble\n-@endif gcc-bootstrap\n \n .PHONY: restrap\n restrap:\n \t@: $(MAKE); $(stage)\n \trm -rf stage1-$(TARGET_SUBDIR) [+ FOR bootstrap-stage +][+ IF prev\n-\t  +]stage[+id+] [+ ENDIF prev +][+ ENDFOR bootstrap-stage +]\n+\t  +]stage[+id+]-* [+ ENDIF prev +][+ ENDFOR bootstrap-stage +]\n \t$(MAKE) $(RECURSE_FLAGS_TO_PASS) all\n+@endif gcc-bootstrap\n \n # --------------------------------------\n # Dependencies between different modules"}]}