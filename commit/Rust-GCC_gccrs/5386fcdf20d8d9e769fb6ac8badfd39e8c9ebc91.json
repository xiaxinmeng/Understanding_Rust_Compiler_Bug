{"sha": "5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM4NmZjZGYyMGQ4ZDllNzY5ZmI2YWM4YmFkZmQzOWU4YzllYmM5MQ==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T17:01:11Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T17:19:12Z"}, "message": "mark live symbol in whilelet expr without test case", "tree": {"sha": "a1ff18ce66fc2533ece21d6b52f2e94bb1ff1ada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1ff18ce66fc2533ece21d6b52f2e94bb1ff1ada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "348c893f9c56b1be8eeb1b843d239564567d00ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348c893f9c56b1be8eeb1b843d239564567d00ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348c893f9c56b1be8eeb1b843d239564567d00ee"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "28cb80b5baa898e8105c8121eb49cd9d8e14a334", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "patch": "@@ -3387,6 +3387,8 @@ class WhileLetLoopExpr : public BaseLoopExpr\n \n   void accept_vis (HIRVisitor &vis) override;\n \n+  std::unique_ptr<Expr> &get_cond () { return condition; }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "bd9107d009f86dd9dadf9cc4a2a1fb5237abd15c", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "patch": "@@ -131,6 +131,12 @@ class MarkLive : public MarkLiveBase\n       expr.get_expr ()->accept_vis (*this);\n   }\n \n+  void visit (HIR::WhileLetLoopExpr &expr) override\n+  {\n+    expr.get_loop_block ()->accept_vis (*this);\n+    expr.get_cond ()->accept_vis (*this);\n+  }\n+\n   void visit (HIR::ExprStmtWithoutBlock &stmt) override\n   {\n     stmt.get_expr ()->accept_vis (*this);"}]}