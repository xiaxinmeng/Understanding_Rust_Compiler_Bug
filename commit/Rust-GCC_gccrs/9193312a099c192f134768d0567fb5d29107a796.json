{"sha": "9193312a099c192f134768d0567fb5d29107a796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5MzMxMmEwOTljMTkyZjEzNDc2OGQwNTY3ZmI1ZDI5MTA3YTc5Ng==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-09-23T19:08:32Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-09-23T19:08:32Z"}, "message": "pa.h (FUNCTION_VALUE): Remove macro.\n\n\t* config/pa/pa.h (FUNCTION_VALUE): Remove macro.\n\t* config/pa/pa-protos.h (function_value): Remove.\n\t* config/pa/pa.c (pa_function_value): Rename from function_value.\n\tMake static, add 'outgoing' argument.\n\t(TARGET_FUNCTION_VALUE): Define.\n\nFrom-SVN: r152094", "tree": {"sha": "b57e7836413d000dfc58eb45ce85dd346660833e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b57e7836413d000dfc58eb45ce85dd346660833e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9193312a099c192f134768d0567fb5d29107a796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9193312a099c192f134768d0567fb5d29107a796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9193312a099c192f134768d0567fb5d29107a796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9193312a099c192f134768d0567fb5d29107a796/comments", "author": null, "committer": null, "parents": [{"sha": "9ed7423543f3d321058eefc527972d5db7ce3b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed7423543f3d321058eefc527972d5db7ce3b83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed7423543f3d321058eefc527972d5db7ce3b83"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "acca4cc58389aa7353f61dce1c173972ad4908c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9193312a099c192f134768d0567fb5d29107a796/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9193312a099c192f134768d0567fb5d29107a796/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9193312a099c192f134768d0567fb5d29107a796", "patch": "@@ -1,3 +1,11 @@\n+2009-09-23  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/pa/pa.h (FUNCTION_VALUE): Remove macro.\n+\t* config/pa/pa-protos.h (function_value): Remove.\n+\t* config/pa/pa.c (pa_function_value): Rename from function_value.\n+\tMake static, add 'outgoing' argument.\n+\t(TARGET_FUNCTION_VALUE): Define.\n+\n 2009-09-23  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr.c (avr_regs_to_save): Use current_function_is_leaf"}, {"sha": "e71d8a1e82cb8b81a7dec0d4c97ddd11baaed798", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=9193312a099c192f134768d0567fb5d29107a796", "patch": "@@ -154,7 +154,6 @@ extern int reloc_needed (tree);\n #ifdef RTX_CODE\n extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t tree, int);\n-extern rtx function_value (const_tree, const_tree);\n #endif\n extern bool pa_return_in_memory (const_tree, const_tree);\n #endif /* TREE_CODE */"}, {"sha": "96fe2fbdde752c83c7a01b007cae8ff6da6d2ac9", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=9193312a099c192f134768d0567fb5d29107a796", "patch": "@@ -103,6 +103,7 @@ static void store_reg (int, HOST_WIDE_INT, int);\n static void store_reg_modify (int, int, HOST_WIDE_INT);\n static void load_reg (int, HOST_WIDE_INT, int);\n static void set_reg_plus_d (int, int, HOST_WIDE_INT, int);\n+static rtx pa_function_value (const_tree, const_tree, bool);\n static void pa_output_function_prologue (FILE *, HOST_WIDE_INT);\n static void update_total_code_bytes (unsigned int);\n static void pa_output_function_epilogue (FILE *, HOST_WIDE_INT);\n@@ -231,6 +232,9 @@ static size_t n_deferred_plabels = 0;\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE pa_output_function_epilogue\n \n+#undef TARGET_FUNCTION_VALUE\n+#define TARGET_FUNCTION_VALUE pa_function_value\n+\n #undef TARGET_LEGITIMIZE_ADDRESS\n #define TARGET_LEGITIMIZE_ADDRESS hppa_legitimize_address\n \n@@ -9226,7 +9230,9 @@ pa_promote_function_mode (const_tree type ATTRIBUTE_UNUSED,\n    to match the HP Compiler ABI.  */\n \n rtx\n-function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED)\n+pa_function_value (const_tree valtype, \n+                   const_tree func ATTRIBUTE_UNUSED, \n+                   bool outgoing ATTRIBUTE_UNUSED)\n {\n   enum machine_mode valmode;\n "}, {"sha": "4b10a0a3b9bfae9e08abe268e467ee7f7272fdcc", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9193312a099c192f134768d0567fb5d29107a796/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=9193312a099c192f134768d0567fb5d29107a796", "patch": "@@ -570,13 +570,6 @@ extern struct rtx_def *hppa_pic_save_rtx (void);\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define FUNCTION_VALUE(VALTYPE, FUNC) function_value (VALTYPE, FUNC)\n-\n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n "}]}