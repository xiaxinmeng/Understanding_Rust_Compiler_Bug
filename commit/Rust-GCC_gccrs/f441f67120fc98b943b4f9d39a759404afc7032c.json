{"sha": "f441f67120fc98b943b4f9d39a759404afc7032c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ0MWY2NzEyMGZjOThiOTQzYjRmOWQzOWE3NTk0MDRhZmM3MDMyYw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-08-26T16:51:49Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-08-26T16:51:49Z"}, "message": "re GNATS gcj/32 (A boolean expression containing two qualified expressions makes jc1 die.)\n\nThu Aug 26 09:10:58 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * parse.y (lookup_cl): Changed leading comment. Now does its best\n        to set the column number.\n        (qualify_ambiguous_name): Take WFL wrappers into account.\n\nThis patch fixes the Java net PR #32.\n\nFrom-SVN: r28894", "tree": {"sha": "8fb62b3a107668c684f5096868969db79e31c5b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb62b3a107668c684f5096868969db79e31c5b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f441f67120fc98b943b4f9d39a759404afc7032c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f441f67120fc98b943b4f9d39a759404afc7032c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f441f67120fc98b943b4f9d39a759404afc7032c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f441f67120fc98b943b4f9d39a759404afc7032c/comments", "author": null, "committer": null, "parents": [{"sha": "8ce25479953a60fb9ccc2119750d755715fa60cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce25479953a60fb9ccc2119750d755715fa60cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce25479953a60fb9ccc2119750d755715fa60cd"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "38036915ee022cd9dd155fde6519300ea19f98ed", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f441f67120fc98b943b4f9d39a759404afc7032c", "patch": "@@ -1,3 +1,9 @@\n+Thu Aug 26 09:10:58 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (lookup_cl): Changed leading comment. Now does its best\n+ \tto set the column number.\n+\t(qualify_ambiguous_name): Take WFL wrappers into account.\n+\n 1999-08-25  Tom Tromey  <tromey@cygnus.com>\n \n \t* jvspec.c (lang_specific_driver): Correctly handle --help again."}, {"sha": "5d999a4633c0282905e654f83855292519d35793", "filename": "gcc/java/parse.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=f441f67120fc98b943b4f9d39a759404afc7032c", "patch": "@@ -2235,7 +2235,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/local/gnu/share/bison.simple\"\n+#line 3 \"/usr/share/misc/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2252,7 +2252,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -2386,8 +2386,10 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n \n /* Prevent warning if -Wstrict-prototypes.  */\n #ifdef __GNUC__\n+#ifndef YYPARSE_PARAM\n int yyparse (void);\n #endif\n+#endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n@@ -2428,7 +2430,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/local/gnu/share/bison.simple\"\n+#line 196 \"/usr/share/misc/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -4717,7 +4719,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/local/gnu/share/bison.simple\"\n+#line 498 \"/usr/share/misc/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -7684,14 +7686,15 @@ lookup_java_method2 (clas, method_decl, do_interface)\n   return NULL_TREE;\n }\n \n-/* Return the line that matches DECL line number. Used during error\n-   report */\n+/* Return the line that matches DECL line number, and try its best to\n+   position the column number. Used during error reports.  */\n \n static tree\n lookup_cl (decl)\n      tree decl;\n {\n   static tree cl = NULL_TREE;\n+  char *line, *found;\n   \n   if (!decl)\n     return NULL_TREE;\n@@ -7702,6 +7705,14 @@ lookup_cl (decl)\n   EXPR_WFL_FILENAME_NODE (cl) = get_identifier (DECL_SOURCE_FILE (decl));\n   EXPR_WFL_SET_LINECOL (cl, DECL_SOURCE_LINE_FIRST (decl), -1);\n \n+  line = java_get_line_col (IDENTIFIER_POINTER (EXPR_WFL_FILENAME_NODE (cl)),\n+\t\t\t    EXPR_WFL_LINENO (cl), EXPR_WFL_COLNO (cl));\n+\n+  found = strstr ((const char *)line, \n+\t\t  (const char *)IDENTIFIER_POINTER (DECL_NAME (decl)));\n+  if (found)\n+    EXPR_WFL_SET_LINECOL (cl, EXPR_WFL_LINENO (cl), found - line);\n+\n   return cl;\n }\n \n@@ -10446,8 +10457,15 @@ qualify_ambiguous_name (id)\n \tagain = 1;\n       }\n     else \n-      name = EXPR_WFL_NODE (qual_wfl);\n-    \n+      {\n+\tname = EXPR_WFL_NODE (qual_wfl);\n+\tif (!name)\n+\t  {\n+\t    qual = EXPR_WFL_QUALIFICATION (qual_wfl);\n+\t    again = 1;\n+\t  }\n+      }\n+\n     /* If we have a THIS (from a primary), we set the context accordingly */\n     if (name == this_identifier_node)\n       {"}, {"sha": "469105e14412682d014014caa24dab6c40ee6d0d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f441f67120fc98b943b4f9d39a759404afc7032c/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f441f67120fc98b943b4f9d39a759404afc7032c", "patch": "@@ -5099,14 +5099,15 @@ lookup_java_method2 (clas, method_decl, do_interface)\n   return NULL_TREE;\n }\n \n-/* Return the line that matches DECL line number. Used during error\n-   report */\n+/* Return the line that matches DECL line number, and try its best to\n+   position the column number. Used during error reports.  */\n \n static tree\n lookup_cl (decl)\n      tree decl;\n {\n   static tree cl = NULL_TREE;\n+  char *line, *found;\n   \n   if (!decl)\n     return NULL_TREE;\n@@ -5117,6 +5118,14 @@ lookup_cl (decl)\n   EXPR_WFL_FILENAME_NODE (cl) = get_identifier (DECL_SOURCE_FILE (decl));\n   EXPR_WFL_SET_LINECOL (cl, DECL_SOURCE_LINE_FIRST (decl), -1);\n \n+  line = java_get_line_col (IDENTIFIER_POINTER (EXPR_WFL_FILENAME_NODE (cl)),\n+\t\t\t    EXPR_WFL_LINENO (cl), EXPR_WFL_COLNO (cl));\n+\n+  found = strstr ((const char *)line, \n+\t\t  (const char *)IDENTIFIER_POINTER (DECL_NAME (decl)));\n+  if (found)\n+    EXPR_WFL_SET_LINECOL (cl, EXPR_WFL_LINENO (cl), found - line);\n+\n   return cl;\n }\n \n@@ -7861,8 +7870,15 @@ qualify_ambiguous_name (id)\n \tagain = 1;\n       }\n     else \n-      name = EXPR_WFL_NODE (qual_wfl);\n-    \n+      {\n+\tname = EXPR_WFL_NODE (qual_wfl);\n+\tif (!name)\n+\t  {\n+\t    qual = EXPR_WFL_QUALIFICATION (qual_wfl);\n+\t    again = 1;\n+\t  }\n+      }\n+\n     /* If we have a THIS (from a primary), we set the context accordingly */\n     if (name == this_identifier_node)\n       {"}]}