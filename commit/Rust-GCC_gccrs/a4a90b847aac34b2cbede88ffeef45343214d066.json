{"sha": "a4a90b847aac34b2cbede88ffeef45343214d066", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRhOTBiODQ3YWFjMzRiMmNiZWRlODhmZmVlZjQ1MzQzMjE0ZDA2Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-05-31T21:34:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-05-31T21:34:26Z"}, "message": "re PR target/15693 (ICE - unrecognizable insn)\n\n\tPR target/15693\n\t* config/sparc/sparc.c (compare_operand): New predicate.\n\t* config/sparc/sparc.h (PREDICATE_CODES): Add it.\n\t* config/sparc/sparc.md (cmpsi expander): Use it.  If the first\n\toperand is a ZERO_EXTRACT and the second operand is not zero,\n\tforce the former to a register.\n\t(cmpdi expander): Likewise.\n\nFrom-SVN: r82500", "tree": {"sha": "d91d56afe424dca67642ecfc22d5d221aeaf7799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d91d56afe424dca67642ecfc22d5d221aeaf7799"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4a90b847aac34b2cbede88ffeef45343214d066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a90b847aac34b2cbede88ffeef45343214d066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a90b847aac34b2cbede88ffeef45343214d066", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a90b847aac34b2cbede88ffeef45343214d066/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8b2e872a83dd3869ffc4443201a1f3096bc3a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8b2e872a83dd3869ffc4443201a1f3096bc3a6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8b2e872a83dd3869ffc4443201a1f3096bc3a6c"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "318d3bdbf25e4150ed94861da3acc6078f611ce0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -1,3 +1,13 @@\n+2004-05-31  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/15693\n+\t* config/sparc/sparc.c (compare_operand): New predicate.\n+\t* config/sparc/sparc.h (PREDICATE_CODES): Add it.\n+\t* config/sparc/sparc.md (cmpsi expander): Use it.  If the first\n+\toperand is a ZERO_EXTRACT and the second operand is not zero,\n+\tforce the former to a register.\n+\t(cmpdi expander): Likewise.\n+\n 2004-05-31  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gengtype-lex.l: Catch stray GTY markers in the files gengtype"}, {"sha": "30fbb878b66a5235568c1b78af7415821677314c", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -1348,6 +1348,32 @@ input_operand (rtx op, enum machine_mode mode)\n   return 0;\n }\n \n+/* Return 1 if OP is valid for the lhs of a compare insn.  */\n+\n+int\n+compare_operand (rtx op, enum machine_mode mode)\n+{\n+  if (GET_CODE (op) == ZERO_EXTRACT)\n+    return (register_operand (XEXP (op, 0), mode)\n+\t    && small_int_or_double (XEXP (op, 1), mode)\n+\t    && small_int_or_double (XEXP (op, 2), mode)\n+\t    /* This matches cmp_zero_extract.  */\n+\t    && ((mode == SImode\n+\t\t && ((GET_CODE (XEXP (op, 2)) == CONST_INT\n+\t\t      && INTVAL (XEXP (op, 2)) > 19)\n+\t\t     || (GET_CODE (XEXP (op, 2)) == CONST_DOUBLE\n+\t\t\t && CONST_DOUBLE_LOW (XEXP (op, 2)) > 19)))\n+\t\t/* This matches cmp_zero_extract_sp64.  */\n+\t\t|| (mode == DImode\n+\t\t    && TARGET_ARCH64\n+\t\t    && ((GET_CODE (XEXP (op, 2)) == CONST_INT\n+\t\t\t && INTVAL (XEXP (op, 2)) > 51)\n+\t\t\t|| (GET_CODE (XEXP (op, 2)) == CONST_DOUBLE\n+\t\t\t    && CONST_DOUBLE_LOW (XEXP (op, 2)) > 51)))));\n+  else\n+    return register_operand (op, mode);\n+}\n+\n \f\n /* We know it can't be done in one insn when we get here,\n    the movsi expander guarantees this.  */"}, {"sha": "3e0b1c914617015333172dcc9c6c2fd7f170842d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -2612,6 +2612,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n {\"uns_arith_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n {\"clobbered_register\", {REG}},\t\t\t\t\t\t\\\n {\"input_operand\", {SUBREG, REG, CONST_INT, MEM, CONST}},\t\t\\\n+{\"compare_operand\", {SUBREG, REG, ZERO_EXTRACT}},\t\t\t\\\n {\"const64_operand\", {CONST_INT, CONST_DOUBLE}},\t\t\t\t\\\n {\"const64_high_operand\", {CONST_INT, CONST_DOUBLE}},\t\t\t\\\n {\"tgd_symbolic_operand\", {SYMBOL_REF}},\t\t\t\t\t\\"}, {"sha": "b6e45e8d066699392591749ef276708f8c5b8e3d", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -299,21 +299,27 @@\n \n (define_expand \"cmpsi\"\n   [(set (reg:CC 100)\n-\t(compare:CC (match_operand:SI 0 \"register_operand\" \"\")\n+\t(compare:CC (match_operand:SI 0 \"compare_operand\" \"\")\n \t\t    (match_operand:SI 1 \"arith_operand\" \"\")))]\n   \"\"\n {\n+  if (GET_CODE (operands[0]) == ZERO_EXTRACT && operands[1] != const0_rtx)\n+    operands[0] = force_reg (SImode, operands[0]);\n+\n   sparc_compare_op0 = operands[0];\n   sparc_compare_op1 = operands[1];\n   DONE;\n })\n \n (define_expand \"cmpdi\"\n   [(set (reg:CCX 100)\n-\t(compare:CCX (match_operand:DI 0 \"register_operand\" \"\")\n+\t(compare:CCX (match_operand:DI 0 \"compare_operand\" \"\")\n \t\t     (match_operand:DI 1 \"arith_double_operand\" \"\")))]\n   \"TARGET_ARCH64\"\n {\n+  if (GET_CODE (operands[0]) == ZERO_EXTRACT && operands[1] != const0_rtx)\n+    operands[0] = force_reg (DImode, operands[0]);\n+\n   sparc_compare_op0 = operands[0];\n   sparc_compare_op1 = operands[1];\n   DONE;"}, {"sha": "19d8b06136461e41355bb906d3535e3eb0c89174", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -1,3 +1,7 @@\n+2004-05-31  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/sparc-trap-1.c: New test.\n+\n 2004-05-31  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/15069"}, {"sha": "a516a8864953ba33acb76ae9df73b069142d5393", "filename": "gcc/testsuite/gcc.dg/sparc-trap-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-trap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a90b847aac34b2cbede88ffeef45343214d066/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-trap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-trap-1.c?ref=a4a90b847aac34b2cbede88ffeef45343214d066", "patch": "@@ -0,0 +1,20 @@\n+/* PR target/15693 */\n+/* { dg-do compile { target sparc*-*-* } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* This used to fail on SPARC at -O2 because the combiner\n+   produces a compare insn that was not rematched by the\n+   compare expander.  */\n+\n+static __inline__ __attribute__ ((always_inline))\n+int page_mapping (unsigned flags)\n+{\n+  if (1u & (flags >> 16))\n+    return 1;\n+  return 0;\n+}\n+void install_page (unsigned flags)\n+{\n+  if (__builtin_expect (!page_mapping (flags), 0))\n+    __builtin_trap ();\n+}"}]}