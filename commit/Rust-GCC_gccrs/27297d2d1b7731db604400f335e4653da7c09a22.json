{"sha": "27297d2d1b7731db604400f335e4653da7c09a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcyOTdkMmQxYjc3MzFkYjYwNDQwMGYzMzVlNDY1M2RhN2MwOWEyMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-12T20:02:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-12T20:02:21Z"}, "message": "cp-demangle.c (d_copy_templates): Cast result of malloc to (struct d_print_template *).\n\n\t* cp-demangle.c (d_copy_templates): Cast result of malloc\n\tto (struct d_print_template *).\n\t(d_print_comp): Cast result of realloc to (struct d_saved scope *).\n\nFrom-SVN: r204713", "tree": {"sha": "143095cea06abaab179b4ccb75b68131d23c244f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/143095cea06abaab179b4ccb75b68131d23c244f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27297d2d1b7731db604400f335e4653da7c09a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27297d2d1b7731db604400f335e4653da7c09a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27297d2d1b7731db604400f335e4653da7c09a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27297d2d1b7731db604400f335e4653da7c09a22/comments", "author": null, "committer": null, "parents": [{"sha": "33fd569938c93cd0a156c1bb3e248c48c9e2a5a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd569938c93cd0a156c1bb3e248c48c9e2a5a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33fd569938c93cd0a156c1bb3e248c48c9e2a5a0"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "5c0efcc20d08c15161911fadaea62501ab0b7cc0", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27297d2d1b7731db604400f335e4653da7c09a22/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27297d2d1b7731db604400f335e4653da7c09a22/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=27297d2d1b7731db604400f335e4653da7c09a22", "patch": "@@ -1,3 +1,9 @@\n+2013-11-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* cp-demangle.c (d_copy_templates): Cast result of malloc\n+\tto (struct d_print_template *).\n+\t(d_print_comp): Cast result of realloc to (struct d_saved scope *).\n+\n 2013-10-29  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/58689\n@@ -6,7 +12,7 @@\n 2013-10-27  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* testsuite/test-demangle.c: Include unistd.h.\n-\t\n+\n 2013-10-25  Gary Benson  <gbenson@redhat.com>\n \n \t* cp-demangle.c (struct d_saved_scope): New structure.\n@@ -18,10 +24,9 @@\n \t(d_copy_templates): New function.\n \t(d_print_comp): New variables saved_templates and\n \tneed_template_restore.\n-\t[DEMANGLE_COMPONENT_REFERENCE,\n-\tDEMANGLE_COMPONENT_RVALUE_REFERENCE]: Capture scope the first\n-\ttime the component is traversed, and use the captured scope for\n-\tsubsequent traversals.\n+\t[DEMANGLE_COMPONENT_REFERENCE, DEMANGLE_COMPONENT_RVALUE_REFERENCE]:\n+\tCapture scope the first time the component is traversed, and use the\n+\tcaptured scope for subsequent traversals.\n \t* testsuite/demangle-expected: Add regression test.\n \n 2013-10-23  Gerald Pfeifer  <gerald@pfeifer.com>"}, {"sha": "cbe4d8c9f63256836e5038a48c2b644f763a1c08", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27297d2d1b7731db604400f335e4653da7c09a22/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27297d2d1b7731db604400f335e4653da7c09a22/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=27297d2d1b7731db604400f335e4653da7c09a22", "patch": "@@ -3968,7 +3968,7 @@ d_copy_templates (struct d_print_info *dpi)\n   for (src = dpi->templates; src != NULL; src = src->next)\n     {\n       struct d_print_template *dst =\n-\tmalloc (sizeof (struct d_print_template));\n+\t(struct d_print_template *) malloc (sizeof (struct d_print_template));\n \n       if (dst == NULL)\n \t{\n@@ -4381,14 +4381,16 @@ d_print_comp (struct d_print_info *dpi, int options,\n \n \t    if (scope == NULL)\n \t      {\n+\t\tsize_t size;\n+\n \t\t/* This is the first time SUB has been traversed.\n \t\t   We need to capture the current templates so\n \t\t   they can be restored if SUB is reentered as a\n \t\t   substitution.  */\n \t\t++dpi->num_saved_scopes;\n-\t\tscopes = realloc (dpi->saved_scopes,\n-\t\t\t\t  sizeof (struct d_saved_scope)\n-\t\t\t\t  * dpi->num_saved_scopes);\n+\t\tsize = sizeof (struct d_saved_scope) * dpi->num_saved_scopes;\n+\t\tscopes = (struct d_saved_scope *) realloc (dpi->saved_scopes,\n+\t\t\t\t\t\t\t   size);\n \t\tif (scopes == NULL)\n \t\t  {\n \t\t    d_print_error (dpi);"}]}