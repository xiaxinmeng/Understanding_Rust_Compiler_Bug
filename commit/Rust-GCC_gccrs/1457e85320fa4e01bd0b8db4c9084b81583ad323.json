{"sha": "1457e85320fa4e01bd0b8db4c9084b81583ad323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1N2U4NTMyMGZhNGUwMWJkMGI4ZGI0YzkwODRiODE1ODNhZDMyMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2010-09-04T20:08:02Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2010-09-04T20:08:02Z"}, "message": "global-used-types-1.C: Replace \".*\" by \"\\[^\\n\\]*\".\n\n* g++.dg/debug/dwarf2/global-used-types-1.C: Replace \".*\" by\n\"\\[^\\n\\]*\".\n* g++.dg/debug/dwarf2/namespace-1.C: Likewise.\n* g++.dg/debug/dwarf2/pubnames-1.C: Likewise.\n* g++.dg/debug/dwarf2/template-func-params-4.C: Likewise.\n* g++.dg/debug/dwarf2/template-func-params-7.C: Likewise.\n* g++.dg/debug/dwarf2/template-params-4.C: Likewise.\n* g++.dg/debug/dwarf2/template-params-6.C: Likewise.\n* g++.dg/debug/dwarf2/template-params-7.C: Likewise.\n* g++.dg/debug/dwarf2/typedef1.C: Likewise.\n* gcc.dg/debug/dwarf2/global-used-types.c: Likewise.\n* gcc.dg/debug/dwarf2/inline2.c: Likewise.\n* gcc.target/i386/pr22152.c: Likewise.\n* gcc.target/i386/pr36992-1.c: Likewise.\n* gcc.target/i386/pr36992-2.c: Likewise.\n* gcc.target/sh/sh4a-memmovua.c: Likewise.\n\nFrom-SVN: r163868", "tree": {"sha": "f0ce4f47bfb04c225b241899cb0f6f846f68f9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0ce4f47bfb04c225b241899cb0f6f846f68f9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1457e85320fa4e01bd0b8db4c9084b81583ad323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1457e85320fa4e01bd0b8db4c9084b81583ad323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1457e85320fa4e01bd0b8db4c9084b81583ad323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1457e85320fa4e01bd0b8db4c9084b81583ad323/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d74d8d6395c25f77454c6783fa11ea422f4a881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d74d8d6395c25f77454c6783fa11ea422f4a881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d74d8d6395c25f77454c6783fa11ea422f4a881"}], "stats": {"total": 107, "additions": 63, "deletions": 44}, "files": [{"sha": "bb5661bedf9347bd5ed54498e1fb55eb620072ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -1,3 +1,22 @@\n+2010-09-04  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* g++.dg/debug/dwarf2/global-used-types-1.C: Replace \".*\" by\n+\t\"\\[^\\n\\]*\".\n+\t* g++.dg/debug/dwarf2/namespace-1.C: Likewise.\n+\t* g++.dg/debug/dwarf2/pubnames-1.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-func-params-4.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-func-params-7.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-params-4.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-params-6.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-params-7.C: Likewise.\n+\t* g++.dg/debug/dwarf2/typedef1.C: Likewise.\n+\t* gcc.dg/debug/dwarf2/global-used-types.c: Likewise.\n+\t* gcc.dg/debug/dwarf2/inline2.c: Likewise.\n+\t* gcc.target/i386/pr22152.c: Likewise.\n+\t* gcc.target/i386/pr36992-1.c: Likewise.\n+\t* gcc.target/i386/pr36992-2.c: Likewise.\n+\t* gcc.target/sh/sh4a-memmovua.c: Likewise.\n+\n 2010-09-04  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR testsuite/43957"}, {"sha": "69b56478a042cfcdb56313b6c37eea26c2b6cc74", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/global-used-types-1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types-1.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -1,10 +1,10 @@\n // Contributed by Dodji Seketeli <dodji@redhat.com>\n // { dg-options \"-g -dA -fno-merge-debug-strings\" }\n // { dg-do compile }\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_enumeration_type\" 1 } }\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_enumerator\" 2 } }\n-// { dg-final { scan-assembler-times \"ascii \\\"a.0\\\"\\[\\t \\]+.*?DW_AT_name\" 1 } }\n-// { dg-final { scan-assembler-times \"ascii \\\"b.0\\\"\\[\\t \\]+.*?DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_enumeration_type\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_enumerator\" 2 } }\n+// { dg-final { scan-assembler-times \"ascii \\\"a.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"ascii \\\"b.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 1 } }\n \n struct foo\n {"}, {"sha": "6137125ec8a4faa32313469b732f6dd4a4c26517", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/namespace-1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnamespace-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnamespace-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fnamespace-1.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -5,10 +5,10 @@\n // We want to test that there is a DW_TAG_namespace DIE DW_AT_name is set\n // to \"not_emitted\". That namespace die has a child DW_TAG_typedef DIE\n // which DW_AT_name is the null terminated string \"T\".\n-// { dg-final { scan-assembler-times \"DIE +\\\\(.*?\\\\) DW_TAG_namespace\" 1 } }\n-// { dg-final { scan-assembler-times \"\\\"not_emitted.0\\\".*?DW_AT_name\" 1 } }\n-// { dg-final { scan-assembler-times \"DIE +\\\\(.*?\\\\) DW_TAG_typedef\" 1 } }\n-// { dg-final { scan-assembler-times \"\\.ascii \\\"T.0\\\"\\[\\t \\]+.*?DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE +\\\\(\\[^\\n\\]*\\\\) DW_TAG_namespace\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"not_emitted.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE +\\\\(\\[^\\n\\]*\\\\) DW_TAG_typedef\" 1 } }\n+// { dg-final { scan-assembler-times \"\\.ascii \\\"T.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 1 } }\n \n struct strukt\n {"}, {"sha": "888484216b7f1a907889fbcad754afd6a842e9f6", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pubnames-1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-1.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -8,13 +8,13 @@\n // debug_pubnames section. The assembly code of that label adds an occurence\n // of section declaration assembly. So on Darwin, we need to check for two\n // occurences of the debug_pubnames section declaration.\n-// { dg-final { scan-assembler-times \"\\.section\\[\\t \\].*?debug_pubnames\" 1 { target { ! *-*-darwin* } } } }\n-// { dg-final { scan-assembler-times \"\\.section\\[\\t \\].*?debug_pubnames\" 2 { target { *-*-darwin* } } } }\n+// { dg-final { scan-assembler-times \"\\.section\\[\\t \\]\\[^\\n\\]*debug_pubnames\" 1 { target { ! *-*-darwin* } } } }\n+// { dg-final { scan-assembler-times \"\\.section\\[\\t \\]\\[^\\n\\]*debug_pubnames\" 2 { target { *-*-darwin* } } } }\n //\n // Then check of the presence of the names we are interested in.\n-// { dg-final { scan-assembler-times \"\\\"main.0\\\".*external name\" 1 } }\n-// { dg-final { scan-assembler-times \"\\\"ns::ns_x.*external name\" 1 } }\n-// { dg-final { scan-assembler-times \"\\\"y::y_x.*external name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"main.0\\\"\\[^\\n\\]*external name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"ns::ns_x\\[^\\n\\]*external name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"y::y_x\\[^\\n\\]*external name\" 1 } }\n \n namespace ns { int ns_x; }\n class y { public: static int y_x; };"}, {"sha": "85401b2284fc5a1d09887312e56c8921841fc607", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-func-params-4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -9,8 +9,8 @@\n // DW_TAG_GNU_template_parameter_pack DIE, but in practise, there is only one\n // DW_TAG_GNU_template_parameter_pack as there is only count<int, char, long>\n // is emitted.\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_type_param\" 3} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_template_type_param\" 3} }\n \n \n template <typename... Args> struct count;"}, {"sha": "fc82dce79d17764e711daa783111499bd941bf55", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-func-params-7.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -6,23 +6,23 @@\n // There must be 5 subprograms generated:\n // printf(const char*), printf<int, char, int>,\n // printf<char, int>, printf<int> and foo().\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_subprogram\" 5 } }\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_subprogram\" 5 } }\n \n // That makes 6 template type parameters.\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_type_param\" 6 } }\n-// { dg-final {scan-assembler-times \"\\\"printf<int, char, int>.0\\\".*?DW_AT_name\" 1 } }\n-// { dg-final {scan-assembler-times \"\\\"printf<char, int>.0\\\".*?DW_AT_name\" 1 } }\n-// { dg-final {scan-assembler-times \"\\\"printf<int>.0\\\".*?DW_AT_name\" 1 } }\n-// { dg-final {scan-assembler-times \"\\\"printf.0\\\".*?DW_AT_name\" 1 } }\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_template_type_param\" 6 } }\n+// { dg-final {scan-assembler-times \"\\\"printf<int, char, int>.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final {scan-assembler-times \"\\\"printf<char, int>.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final {scan-assembler-times \"\\\"printf<int>.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final {scan-assembler-times \"\\\"printf.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n \n // printf<int, char, int> and printf<char, int> have a pack expansion as\n // function parameters. There should then be 3\n // DW_TAG_GNU_template_parameter_pack and 3 DW_TAG_GNU_formal_parameter_pack DIEs\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 3 } }\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_formal_parameter_pack\" 3 } }\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_GNU_template_parameter_pack\" 3 } }\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_GNU_formal_parameter_pack\" 3 } }\n // These 3 function template instantiations has a total of 3 template\n // parameters named T.\n-// { dg_final {scan-assembler-times \"\\.ascii \\\"T.0\\\"\\[\\t \\]+.*?DW_AT_name\" 3 } }\n+// { dg_final {scan-assembler-times \"\\.ascii \\\"T.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 3 } }\n \n \n void"}, {"sha": "a0ca6137ce0be599162a50323eb7ac3d5914ed61", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -9,8 +9,8 @@\n // DW_TAG_GNU_template_parameter_pack DIE, but in practise, there is only one\n // DW_TAG_GNU_template_parameter_pack as there is only count<int, char, long>\n // is emitted.\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_type_param\" 3} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_template_type_param\" 3} }\n \n template <typename... Args> struct count;\n "}, {"sha": "06cdef5b242303f51a9a1db5287f02e81d89a51e", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-6.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -2,8 +2,8 @@\n // Origin PR debug/30161\n // { dg-options \"-g -dA -fno-merge-debug-strings\" }\n // { dg-final { scan-assembler-times \"DW_TAG_GNU_template_template_param\" 2 } }\n-// { dg-final { scan-assembler-times \"\\\"vector.0\\\".*?DW_AT_GNU_template_name\" 1 } }\n-// { dg-final { scan-assembler-times \".ascii \\\"U.0\\\".*?DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"vector.0\\\"\\[^\\n\\]*DW_AT_GNU_template_name\" 1 } }\n+// { dg-final { scan-assembler-times \".ascii \\\"U.0\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n \n template <class T>\n struct vector_base"}, {"sha": "2b393594f5e978d20901ae2620443aea1686d88a", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-7.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -5,7 +5,7 @@\n // The type M<> should have one DW_TAG_GNU_template_parameter_pack DIE,\n // with no DW_AT_name attribute. We don't test the fact that it has no\n // DW_AT_name though.\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_GNU_template_parameter_pack\" 1 } }\n \n \n template <typename...>"}, {"sha": "6f7aac3bf88d46283e11e5ed22678bf8f3cebbba", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/typedef1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -3,12 +3,12 @@\n // { dg-options \"-g -dA\" }\n // { dg-do compile }\n // { dg-final { scan-assembler-times \"DW_TAG_structure_type\" 2 } }\n-// { dg-final { scan-assembler-times \"DW_AT_name: \\\"foo<1u>\\\"|\\\"foo<1u>..\\\".*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"foo<1u>\\\"|\\\"foo<1u>..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n // { dg-final { scan-assembler-times \"DW_TAG_enumeration_type\" 2 } }\n-// { dg-final { scan-assembler-times \"DW_AT_name: \\\"typedef foo<1u>::type type\\\"|\\\"typedef foo<1u>::type type..\\\".*DW_AT_name\" 1 } }\n-// { dg-final { scan-assembler-times \"DIE (.*) DW_TAG_enumeration_type\" 2 } }\n-// { dg-final { scan-assembler-times \"\\\"e0..\\\".*DW_AT_name\" 1 } }\n-// { dg-final { scan-assembler-times \"\\\"e1..\\\".*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"typedef foo<1u>::type type\\\"|\\\"typedef foo<1u>::type type..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE \\\\(\\[^\\n\\]*\\\\) DW_TAG_enumeration_type\" 2 } }\n+// { dg-final { scan-assembler-times \"\\\"e0..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"e1..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n \n template <unsigned int n>\n struct foo"}, {"sha": "54fa58ae3f23396d382da22be3e430242e4014e3", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/global-used-types.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fglobal-used-types.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -2,10 +2,10 @@\n  Contributed by Dodji Seketeli <dodji@redhat.com>\n  { dg-options \"-g -dA -fno-merge-debug-strings\" }\n  { dg-do compile }\n- { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_enumeration_type\" 1 } }\n- { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_enumerator\" 2 } }\n- { dg-final { scan-assembler-times \"ascii \\\"a.0\\\"\\[\\t \\]+.*?DW_AT_name\" 1 } }\n- { dg-final { scan-assembler-times \"ascii \\\"b.0\\\"\\[\\t \\]+.*?DW_AT_name\" 1 } }\n+ { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_enumeration_type\" 1 } }\n+ { dg-final { scan-assembler-times \"DIE \\\\(0x\\[^\\n\\]*\\\\) DW_TAG_enumerator\" 2 } }\n+ { dg-final { scan-assembler-times \"ascii \\\"a.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 1 } }\n+ { dg-final { scan-assembler-times \"ascii \\\"b.0\\\"\\[\\t \\]+\\[^\\n\\]*DW_AT_name\" 1 } }\n  */\n \n enum { a, b };"}, {"sha": "20edb588ea85ced38e0fea03be4263d67712e02a", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/inline2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -21,14 +21,14 @@\n    - One for each subroutine inlined into main, that's 3.\n    - One for earch subroutine inline into the out of line instances\n      of third, second and first.  */\n-/* { dg-final { scan-assembler-times \"\\\\(DIE \\\\(.*?\\\\) DW_TAG_inlined_subroutine\" 6 } } */\n+/* { dg-final { scan-assembler-times \"\\\\(DIE \\\\(\\[^\\n\\]*\\\\) DW_TAG_inlined_subroutine\" 6 } } */\n \n /* Likewise we should have 6 DW_TAG_lexical_block DIEs:\n    - One for each subroutine inlined into main, so that's 3.\n    - One for each subroutine inlined in the out of line instances\n      of third, second and first, that's 3.\n */\n-/* { dg-final { scan-assembler-times \"\\\\(DIE \\\\(.*?\\\\) DW_TAG_lexical_block\" 6 } } */\n+/* { dg-final { scan-assembler-times \"\\\\(DIE \\\\(\\[^\\n\\]*\\\\) DW_TAG_lexical_block\" 6 } } */\n \n \n /* There are 3 DW_AT_inline attributes: one per abstract inline instance."}, {"sha": "679a35835c242293748dda75a5888c26e15340f6", "filename": "gcc/testsuite/gcc.target/i386/pr22152.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -15,4 +15,4 @@ unsigned_add3 (const __m64 * a, const __m64 * b, unsigned long count)\n   return sum;\n }\n \n-/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%mm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+\\[^\\n\\]*%mm\" 1 } } */"}, {"sha": "345c1f27629fa69bc99766aee0f808affb22cb1c", "filename": "gcc/testsuite/gcc.target/i386/pr36992-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -9,4 +9,4 @@ test (__m128i b)\n   return _mm_move_epi64 (b);\n }\n \n-/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */"}, {"sha": "25ff34be17ab93aaad8a7e735e8288cc3b751b51", "filename": "gcc/testsuite/gcc.target/i386/pr36992-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -9,4 +9,4 @@ test (__m128i b)\n   return _mm_move_epi64 (b);\n }\n \n-/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */"}, {"sha": "359dd8feb907f07f4cca8b4237a7f40337ae7f31", "filename": "gcc/testsuite/gcc.target/sh/sh4a-memmovua.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-memmovua.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1457e85320fa4e01bd0b8db4c9084b81583ad323/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-memmovua.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-memmovua.c?ref=1457e85320fa4e01bd0b8db4c9084b81583ad323", "patch": "@@ -2,7 +2,7 @@\n    32-bit-aligned addresses.  */\n /* { dg-do compile { target \"sh*-*-*\" } } */\n /* { dg-options \"-O\" } */\n-/* { dg-final { scan-assembler-times \"\\tmovua\\\\.l\\t(.*)+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"\\tmovua\\\\.l\\t\" 2 } } */\n \n #ifdef __SH4A__\n #include <string.h>"}]}