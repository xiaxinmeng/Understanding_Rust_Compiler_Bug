{"sha": "922c57d1ba5cb53ba29bc303ab66e869065d540b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyYzU3ZDFiYTVjYjUzYmEyOWJjMzAzYWI2NmU4NjkwNjVkNTQwYg==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2013-01-17T14:27:36Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2013-01-17T14:27:36Z"}, "message": "sync-cache.c (__aarch64_sync_cache_range): Cast the results of (dcache_lsize - 1) and (icache_lsize - 1) to the type...\n\n2013-01-17  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* config/aarch64/sync-cache.c (__aarch64_sync_cache_range): Cast the\n\tresults of (dcache_lsize - 1) and (icache_lsize - 1) to the type\n\t__UINTPTR_TYPE__; also cast 'base' to the same type before the\n\talignment operation.\n\nFrom-SVN: r195266", "tree": {"sha": "f129a6ce4913ae778276244dc933a383a232aa46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f129a6ce4913ae778276244dc933a383a232aa46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/922c57d1ba5cb53ba29bc303ab66e869065d540b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922c57d1ba5cb53ba29bc303ab66e869065d540b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922c57d1ba5cb53ba29bc303ab66e869065d540b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922c57d1ba5cb53ba29bc303ab66e869065d540b/comments", "author": null, "committer": null, "parents": [{"sha": "8222c37ededfe0f55233898ecc7c4cc023f6389c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8222c37ededfe0f55233898ecc7c4cc023f6389c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8222c37ededfe0f55233898ecc7c4cc023f6389c"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d47f64ebb5fd2104325daa3104181049aefc0022", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922c57d1ba5cb53ba29bc303ab66e869065d540b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922c57d1ba5cb53ba29bc303ab66e869065d540b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=922c57d1ba5cb53ba29bc303ab66e869065d540b", "patch": "@@ -1,3 +1,10 @@\n+2013-01-17  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* config/aarch64/sync-cache.c (__aarch64_sync_cache_range): Cast the\n+\tresults of (dcache_lsize - 1) and (icache_lsize - 1) to the type\n+\t__UINTPTR_TYPE__; also cast 'base' to the same type before the\n+\talignment operation.\n+\n 2013-01-15  Sofiane Naci  <sofiane.naci@arm.com>\n \n \t* config/aarch64/sync-cache.c (__aarch64_sync_cache_range): Update"}, {"sha": "66b7afedc1f1a02c08d931e4a3753bb203b890c8", "filename": "libgcc/config/aarch64/sync-cache.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922c57d1ba5cb53ba29bc303ab66e869065d540b/libgcc%2Fconfig%2Faarch64%2Fsync-cache.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922c57d1ba5cb53ba29bc303ab66e869065d540b/libgcc%2Fconfig%2Faarch64%2Fsync-cache.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Fsync-cache.c?ref=922c57d1ba5cb53ba29bc303ab66e869065d540b", "patch": "@@ -40,7 +40,8 @@ __aarch64_sync_cache_range (const void *base, const void *end)\n      as per the GNU definition of __clear_cache.  */\n \n   /* Make the start address of the loop cache aligned.  */\n-  address = (const char*) ((unsigned long) base & ~ (dcache_lsize - 1));\n+  address = (const char*) ((__UINTPTR_TYPE__) base\n+\t\t\t   & ~ (__UINTPTR_TYPE__) (dcache_lsize - 1));\n \n   for (address; address < (const char *) end; address += dcache_lsize)\n     asm volatile (\"dc\\tcvau, %0\"\n@@ -51,7 +52,8 @@ __aarch64_sync_cache_range (const void *base, const void *end)\n   asm volatile (\"dsb\\tish\" : : : \"memory\");\n \n   /* Make the start address of the loop cache aligned.  */\n-  address = (const char*) ((unsigned long) base & ~ (icache_lsize - 1));\n+  address = (const char*) ((__UINTPTR_TYPE__) base\n+\t\t\t   & ~ (__UINTPTR_TYPE__) (icache_lsize - 1));\n \n   for (address; address < (const char *) end; address += icache_lsize)\n     asm volatile (\"ic\\tivau, %0\""}]}