{"sha": "c9b03ca379000c9556e30610f70b31fbfb7b09be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzliMDNjYTM3OTAwMGM5NTU2ZTMwNjEwZjcwYjMxZmJmYjdiMDliZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-20T22:41:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-20T22:41:13Z"}, "message": "(update_headers): Align symbol table sections, using ALIGN_SYMTABLE_OFFSET.\n\n(update_headers): Align symbol table sections, using\nALIGN_SYMTABLE_OFFSET. Provide a default definition which does no\nalignment.\n\nFrom-SVN: r6833", "tree": {"sha": "5ac3d2c573f14871ff0f95db80ed982944555694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ac3d2c573f14871ff0f95db80ed982944555694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9b03ca379000c9556e30610f70b31fbfb7b09be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b03ca379000c9556e30610f70b31fbfb7b09be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b03ca379000c9556e30610f70b31fbfb7b09be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b03ca379000c9556e30610f70b31fbfb7b09be/comments", "author": null, "committer": null, "parents": [{"sha": "11147ebea5ed7ad858ed0e403e0cd47525eb8177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11147ebea5ed7ad858ed0e403e0cd47525eb8177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11147ebea5ed7ad858ed0e403e0cd47525eb8177"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "af4c09d3dc9376093f4123346c000d4fda861a08", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b03ca379000c9556e30610f70b31fbfb7b09be/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b03ca379000c9556e30610f70b31fbfb7b09be/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=c9b03ca379000c9556e30610f70b31fbfb7b09be", "patch": "@@ -4013,82 +4013,97 @@ update_headers __proto((void))\n       symbolic_header.issMax += file_ptr->fdr.cbSs;\n     }\n \n+#ifndef ALIGN_SYMTABLE_OFFSET\n+#define ALIGN_SYMTABLE_OFFSET(OFFSET) (OFFSET)\n+#endif\n \n+  file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n   i = WORD_ALIGN (symbolic_header.cbLine);\t/* line numbers */\n   if (i > 0)\n     {\n       symbolic_header.cbLineOffset = file_offset;\n       file_offset += i;\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.ioptMax;\t\t\t/* optimization symbols */\n   if (((long) i) > 0)\n     {\n       symbolic_header.cbOptOffset = file_offset;\n       file_offset += i * sizeof (OPTR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.idnMax;\t\t\t/* dense numbers */\n   if (i > 0)\n     {\n       symbolic_header.cbDnOffset = file_offset;\n       file_offset += i * sizeof (DNR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.ipdMax;\t\t\t/* procedure tables */\n   if (i > 0)\n     {\n       symbolic_header.cbPdOffset = file_offset;\n       file_offset += i * sizeof (PDR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.isymMax;\t\t\t/* local symbols */\n   if (i > 0)\n     {\n       symbolic_header.cbSymOffset = file_offset;\n       file_offset += i * sizeof (SYMR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.iauxMax;\t\t\t/* aux syms. */\n   if (i > 0)\n     {\n       symbolic_header.cbAuxOffset = file_offset;\n       file_offset += i * sizeof (TIR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = WORD_ALIGN (symbolic_header.issMax);\t/* local strings */\n   if (i > 0)\n     {\n       symbolic_header.cbSsOffset = file_offset;\n       file_offset += i;\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = WORD_ALIGN (symbolic_header.issExtMax);\t/* external strings */\n   if (i > 0)\n     {\n       symbolic_header.cbSsExtOffset = file_offset;\n       file_offset += i;\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.ifdMax;\t\t\t/* file tables */\n   if (i > 0)\n     {\n       symbolic_header.cbFdOffset = file_offset;\n       file_offset += i * sizeof (FDR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.crfd;\t\t\t/* relative file descriptors */\n   if (i > 0)\n     {\n       symbolic_header.cbRfdOffset = file_offset;\n       file_offset += i * sizeof (symint_t);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n \n   i = symbolic_header.iextMax;\t\t\t/* external symbols */\n   if (i > 0)\n     {\n       symbolic_header.cbExtOffset = file_offset;\n       file_offset += i * sizeof (EXTR);\n+      file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n     }\n }\n "}]}