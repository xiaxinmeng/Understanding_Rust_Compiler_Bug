{"sha": "74ca1c01d02e548f32aa26f9a887dcc0730703fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRjYTFjMDFkMDJlNTQ4ZjMyYWEyNmY5YTg4N2RjYzA3MzA3MDNmYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-10-26T07:23:33Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-10-26T07:23:33Z"}, "message": "Relax hash function to match equals function behavior (PR testsuite/86158).\n\n2018-10-26  Martin Liska  <mliska@suse.cz>\n\n\tPR testsuite/86158\n\t* ipa-prop.c (struct ipa_vr_ggc_hash_traits): Hash with\n\taddr_expr and not with pointers.\n\nFrom-SVN: r265521", "tree": {"sha": "e8818d1583456b28743dac749212c9b626261743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8818d1583456b28743dac749212c9b626261743"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74ca1c01d02e548f32aa26f9a887dcc0730703fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ca1c01d02e548f32aa26f9a887dcc0730703fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ca1c01d02e548f32aa26f9a887dcc0730703fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ca1c01d02e548f32aa26f9a887dcc0730703fb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b322cdb21a83d2e7ef89058ee56e5a814f916617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b322cdb21a83d2e7ef89058ee56e5a814f916617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b322cdb21a83d2e7ef89058ee56e5a814f916617"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b60988c910e45158a6da505d099413887bb7113f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ca1c01d02e548f32aa26f9a887dcc0730703fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ca1c01d02e548f32aa26f9a887dcc0730703fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74ca1c01d02e548f32aa26f9a887dcc0730703fb", "patch": "@@ -1,3 +1,9 @@\n+2018-10-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/86158\n+\t* ipa-prop.c (struct ipa_vr_ggc_hash_traits): Hash with\n+\taddr_expr and not with pointers.\n+\n 2018-10-26  Jan Hubicka  <jh@suse.cz>\n \n \t* tree.c (free_lang_data_in_type): Only check main variants."}, {"sha": "4bd0b4b454107986d7519da5667fdfaf62264877", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ca1c01d02e548f32aa26f9a887dcc0730703fb/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ca1c01d02e548f32aa26f9a887dcc0730703fb/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=74ca1c01d02e548f32aa26f9a887dcc0730703fb", "patch": "@@ -115,8 +115,8 @@ struct ipa_vr_ggc_hash_traits : public ggc_cache_remove <value_range *>\n     {\n       gcc_checking_assert (!p->equiv ());\n       inchash::hash hstate (p->kind ());\n-      hstate.add_ptr (p->min ());\n-      hstate.add_ptr (p->max ());\n+      inchash::add_expr (p->min (), hstate);\n+      inchash::add_expr (p->max (), hstate);\n       return hstate.end ();\n     }\n   static bool"}]}