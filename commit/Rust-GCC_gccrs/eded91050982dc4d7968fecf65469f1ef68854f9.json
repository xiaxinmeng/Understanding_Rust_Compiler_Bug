{"sha": "eded91050982dc4d7968fecf65469f1ef68854f9", "node_id": "C_kwDOANBUbNoAKGVkZWQ5MTA1MDk4MmRjNGQ3OTY4ZmVjZjY1NDY5ZjFlZjY4ODU0Zjk", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-05T09:41:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-05T10:35:40Z"}, "message": "Amend function names with UID when dumping with TDF_UID\n\nThe following makes sure to amend more function names with the\nassociated DECL_UID when dumping with TDF_UID, in particular\nfunction names printed as part of calls and in the function header.\nThat allows one to more easily follow the call flow of PR102528\nwhere coroutines cause three clones of the name 'test2' that are\nnot distinguishable otherwise.\n\n2021-10-05  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (dump_function_to_file): Dump the UID of the\n\tfunction as part of the name when requested.\n\t* tree-pretty-print.c (dump_function_name): Dump the UID when\n\trequested and the langhook produced the actual name.", "tree": {"sha": "80bc4bab51db9af40a4ce00df0d5a58514a46692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80bc4bab51db9af40a4ce00df0d5a58514a46692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eded91050982dc4d7968fecf65469f1ef68854f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eded91050982dc4d7968fecf65469f1ef68854f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eded91050982dc4d7968fecf65469f1ef68854f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eded91050982dc4d7968fecf65469f1ef68854f9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "604459a09585314841cdce4698893c656481691b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604459a09585314841cdce4698893c656481691b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604459a09585314841cdce4698893c656481691b"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "4b4b0b52d9a762c93d8a5fa301fce1b8b459b208", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eded91050982dc4d7968fecf65469f1ef68854f9/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eded91050982dc4d7968fecf65469f1ef68854f9/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=eded91050982dc4d7968fecf65469f1ef68854f9", "patch": "@@ -8127,14 +8127,22 @@ dump_function_to_file (tree fndecl, FILE *file, dump_flags_t flags)\n \t    fprintf (file, \",%s(%\" PRIu64 \")\",\n \t\t     profile_quality_as_string (bb->count.quality ()),\n \t\t     bb->count.value ());\n-\t  fprintf (file, \")\\n%s (\", function_name (fun));\n+\t  if (dump_flags & TDF_UID)\n+\t    fprintf (file, \")\\n%sD_%u (\", function_name (fun),\n+\t\t     DECL_UID (fndecl));\n+\t  else\n+\t    fprintf (file, \")\\n%s (\", function_name (fun));\n \t}\n     }\n   else\n     {\n       print_generic_expr (file, TREE_TYPE (fntype), dump_flags);\n-      fprintf (file, \" %s %s(\", function_name (fun),\n-\t       tmclone ? \"[tm-clone] \" : \"\");\n+      if (dump_flags & TDF_UID)\n+\tfprintf (file, \" %sD.%u %s(\", function_name (fun), DECL_UID (fndecl),\n+\t\t tmclone ? \"[tm-clone] \" : \"\");\n+      else\n+\tfprintf (file, \" %s %s(\", function_name (fun),\n+\t\t tmclone ? \"[tm-clone] \" : \"\");\n     }\n \n   arg = DECL_ARGUMENTS (fndecl);"}, {"sha": "81d86ebf97d70ef9c8165b120d2ae3f5b5fba09e", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eded91050982dc4d7968fecf65469f1ef68854f9/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eded91050982dc4d7968fecf65469f1ef68854f9/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=eded91050982dc4d7968fecf65469f1ef68854f9", "patch": "@@ -344,7 +344,16 @@ dump_function_name (pretty_printer *pp, tree node, dump_flags_t flags)\n   if (CONVERT_EXPR_P (node))\n     node = TREE_OPERAND (node, 0);\n   if (DECL_NAME (node) && (flags & TDF_ASMNAME) == 0)\n-    pp_string (pp, lang_hooks.decl_printable_name (node, 1));\n+    {\n+      pp_string (pp, lang_hooks.decl_printable_name (node, 1));\n+      if (flags & TDF_UID)\n+\t{\n+\t  char uid_sep = (flags & TDF_GIMPLE) ? '_' : '.';\n+\t  pp_character (pp, 'D');\n+\t  pp_character (pp, uid_sep);\n+\t  pp_scalar (pp, \"%u\", DECL_UID (node));\n+\t}\n+    }\n   else\n     dump_decl_name (pp, node, flags);\n }"}]}