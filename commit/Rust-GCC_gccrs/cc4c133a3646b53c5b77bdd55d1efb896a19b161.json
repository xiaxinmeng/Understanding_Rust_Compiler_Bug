{"sha": "cc4c133a3646b53c5b77bdd55d1efb896a19b161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M0YzEzM2EzNjQ2YjUzYzViNzdiZGQ1NWQxZWZiODk2YTE5YjE2MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T20:36:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T20:36:59Z"}, "message": "(regclass): Consider commutativity even when\none arg is a constant.\n\nFrom-SVN: r5985", "tree": {"sha": "326a882f749c6ed72b434e251f68f885d032a56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/326a882f749c6ed72b434e251f68f885d032a56b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc4c133a3646b53c5b77bdd55d1efb896a19b161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc4c133a3646b53c5b77bdd55d1efb896a19b161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc4c133a3646b53c5b77bdd55d1efb896a19b161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc4c133a3646b53c5b77bdd55d1efb896a19b161/comments", "author": null, "committer": null, "parents": [{"sha": "937aa51bbad438b069d7a6219bfecd5c344c922e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937aa51bbad438b069d7a6219bfecd5c344c922e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937aa51bbad438b069d7a6219bfecd5c344c922e"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "1453d0e9175313669e189877f690db8502f40b30", "filename": "gcc/regclass.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc4c133a3646b53c5b77bdd55d1efb896a19b161/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc4c133a3646b53c5b77bdd55d1efb896a19b161/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=cc4c133a3646b53c5b77bdd55d1efb896a19b161", "patch": "@@ -757,13 +757,11 @@ regclass (f, nregs)\n \t\t}\n \n \t      /* Check for commutative in a separate loop so everything will\n-\t\t have been initialized.  Don't bother doing anything if the\n-\t\t second operand is a constant since that is the case\n-\t\t for which the constraints should have been written.  */\n+\t\t have been initialized.  We must do this even if one operand\n+\t\t is a constant--see addsi3 in m68k.md.  */\n \t      \n \t      for (i = 0; i < noperands - 1; i++)\n-\t\tif (constraints[i][0] == '%'\n-\t\t    && ! CONSTANT_P (recog_operand[i+1]))\n+\t\tif (constraints[i][0] == '%')\n \t\t  {\n \t\t    char *xconstraints[MAX_RECOG_OPERANDS];\n \t\t    int j;"}]}