{"sha": "ef97beff0aebd6342af56423a6affe9a6e92bf8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5N2JlZmYwYWViZDYzNDJhZjU2NDIzYTZhZmZlOWE2ZTkyYmY4Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-06-24T19:42:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-06-24T19:42:58Z"}, "message": "stmt.c (expand_decl_cleanup): Emit a dummy insn after last_unconditional_cleanup.\n\n\t* stmt.c (expand_decl_cleanup): Emit a dummy insn after\n\tlast_unconditional_cleanup.\n\nFrom-SVN: r34681", "tree": {"sha": "95480aecc21055287bb77a12dfa1fd0ed8a29422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95480aecc21055287bb77a12dfa1fd0ed8a29422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef97beff0aebd6342af56423a6affe9a6e92bf8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef97beff0aebd6342af56423a6affe9a6e92bf8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef97beff0aebd6342af56423a6affe9a6e92bf8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef97beff0aebd6342af56423a6affe9a6e92bf8f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b4565c9d8b4b7530558beef1b9284b88848b2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4565c9d8b4b7530558beef1b9284b88848b2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4565c9d8b4b7530558beef1b9284b88848b2fa"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "0dcfdff7d1aebc13d05454afdfa53f1da5847416", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef97beff0aebd6342af56423a6affe9a6e92bf8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef97beff0aebd6342af56423a6affe9a6e92bf8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef97beff0aebd6342af56423a6affe9a6e92bf8f", "patch": "@@ -1,3 +1,8 @@\n+2000-06-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* stmt.c (expand_decl_cleanup): Emit a dummy insn after\n+\tlast_unconditional_cleanup.\n+\n 2000-06-24  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* tree.def (VECTOR_TYPE): New node type."}, {"sha": "3f102cf28cd31f88b6bc795a97333b9ba8002441", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef97beff0aebd6342af56423a6affe9a6e92bf8f/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef97beff0aebd6342af56423a6affe9a6e92bf8f/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=ef97beff0aebd6342af56423a6affe9a6e92bf8f", "patch": "@@ -4064,6 +4064,13 @@ expand_decl_cleanup (decl, cleanup)\n \t{\n \t  thisblock->data.block.last_unconditional_cleanup\n \t    = get_last_insn ();\n+\t  /* When we insert instructions after the last unconditional cleanup,\n+\t     we don't adjust last_insn.  That means that a later add_insn will\n+\t     clobber the instructions we've just added.  The easiest way to\n+\t     fix this is to just insert another instruction here, so that the\n+\t     instructions inserted after the last unconditional cleanup are\n+\t     never the last instruction.  */\n+\t  emit_note (NULL_PTR, NOTE_INSN_DELETED);\n \t  thisblock->data.block.cleanup_ptr = &thisblock->data.block.cleanups;\n \t}\n     }"}]}