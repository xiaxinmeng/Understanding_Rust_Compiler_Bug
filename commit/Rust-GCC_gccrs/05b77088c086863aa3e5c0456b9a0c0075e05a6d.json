{"sha": "05b77088c086863aa3e5c0456b9a0c0075e05a6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViNzcwODhjMDg2ODYzYWEzZTVjMDQ1NmI5YTBjMDA3NWUwNWE2ZA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-14T09:51:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:51:21Z"}, "message": "[Ada] Check SPARK restriction on Old/Loop_Entry with pointers\n\n--#! r336866\n--#! no-mail\n\nSPARK RM rule 3.10(14) restricts the use of Old and Loop_Entry\nattributes on prefixes of an owning or observing type (i.e. a type with\naccess inside).\n\nThere is no impact on compilation.\n\n2019-08-14  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Old_Loop_Entry): New procedure to check\n\tcorrect use of Old  and Loop_Entry.\n\t(Check_Node): Check subprogram contracts.\n\t(Check_Pragma): Check Loop_Variant.\n\t(Check_Safe_Pointers): Apply checking to library-level\n\tsubprogram  declarations as well, in order to check their\n\tcontract.\n\nFrom-SVN: r274453", "tree": {"sha": "051b67d4c88c69ce524dcc25f8f55b9c44cab514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/051b67d4c88c69ce524dcc25f8f55b9c44cab514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b77088c086863aa3e5c0456b9a0c0075e05a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b77088c086863aa3e5c0456b9a0c0075e05a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b77088c086863aa3e5c0456b9a0c0075e05a6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b77088c086863aa3e5c0456b9a0c0075e05a6d/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d7921310e5a265f0db62e45a881c266b8e4bec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7921310e5a265f0db62e45a881c266b8e4bec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7921310e5a265f0db62e45a881c266b8e4bec1"}], "stats": {"total": 135, "additions": 130, "deletions": 5}, "files": [{"sha": "cef5e8cc5a08fe0e42e867fed089ef730b04cb3b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b77088c086863aa3e5c0456b9a0c0075e05a6d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b77088c086863aa3e5c0456b9a0c0075e05a6d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05b77088c086863aa3e5c0456b9a0c0075e05a6d", "patch": "@@ -1,3 +1,13 @@\n+2019-08-14  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_spark.adb (Check_Old_Loop_Entry): New procedure to check\n+\tcorrect use of Old  and Loop_Entry.\n+\t(Check_Node): Check subprogram contracts.\n+\t(Check_Pragma): Check Loop_Variant.\n+\t(Check_Safe_Pointers): Apply checking to library-level\n+\tsubprogram  declarations as well, in order to check their\n+\tcontract.\n+\n 2019-08-14  Yannick Moy  <moy@adacore.com>\n \n \t* sem_spark.adb (Is_Subpath_Expression): Take into account"}, {"sha": "37c6b4d1e033290e4d68f71ceb7b666a2cbaa50d", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 120, "deletions": 5, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b77088c086863aa3e5c0456b9a0c0075e05a6d/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b77088c086863aa3e5c0456b9a0c0075e05a6d/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=05b77088c086863aa3e5c0456b9a0c0075e05a6d", "patch": "@@ -663,6 +663,9 @@ package body Sem_SPARK is\n    procedure Check_Node (N : Node_Id);\n    --  Main traversal procedure to check safe pointer usage\n \n+   procedure Check_Old_Loop_Entry (N : Node_Id);\n+   --  Check SPARK RM 3.10(14) regarding 'Old and 'Loop_Entry\n+\n    procedure Check_Package_Body (Pack : Node_Id);\n \n    procedure Check_Package_Spec (Pack : Node_Id);\n@@ -2583,6 +2586,43 @@ package body Sem_SPARK is\n    ----------------\n \n    procedure Check_Node (N : Node_Id) is\n+\n+      procedure Check_Subprogram_Contract (N : Node_Id);\n+      --  Check the postcondition-like contracts for use of 'Old\n+\n+      -------------------------------\n+      -- Check_Subprogram_Contract --\n+      -------------------------------\n+\n+      procedure Check_Subprogram_Contract (N : Node_Id) is\n+      begin\n+         if Nkind (N) = N_Subprogram_Declaration\n+           or else Acts_As_Spec (N)\n+         then\n+            declare\n+               E        : constant Entity_Id := Unique_Defining_Entity (N);\n+               Post     : constant Node_Id :=\n+                 Get_Pragma (E, Pragma_Postcondition);\n+               Cases    : constant Node_Id :=\n+                 Get_Pragma (E, Pragma_Contract_Cases);\n+            begin\n+               Check_Old_Loop_Entry (Post);\n+               Check_Old_Loop_Entry (Cases);\n+            end;\n+\n+         elsif Nkind (N) = N_Subprogram_Body then\n+            declare\n+               E        : constant Entity_Id := Defining_Entity (N);\n+               Ref_Post : constant Node_Id :=\n+                 Get_Pragma (E, Pragma_Refined_Post);\n+            begin\n+               Check_Old_Loop_Entry (Ref_Post);\n+            end;\n+         end if;\n+      end Check_Subprogram_Contract;\n+\n+   --  Start of processing for Check_Node\n+\n    begin\n       case Nkind (N) is\n          when N_Declaration =>\n@@ -2602,14 +2642,17 @@ package body Sem_SPARK is\n                Check_Package_Body (N);\n             end if;\n \n-         when N_Subprogram_Body\n-            | N_Entry_Body\n-            | N_Task_Body\n-         =>\n+         when N_Subprogram_Body =>\n             if not Is_Generic_Unit (Unique_Defining_Entity (N)) then\n+               Check_Subprogram_Contract (N);\n                Check_Callable_Body (N);\n             end if;\n \n+         when N_Entry_Body\n+            | N_Task_Body\n+         =>\n+            Check_Callable_Body (N);\n+\n          when N_Protected_Body =>\n             Check_List (Declarations (N));\n \n@@ -2622,6 +2665,9 @@ package body Sem_SPARK is\n          when N_Pragma =>\n             Check_Pragma (N);\n \n+         when N_Subprogram_Declaration =>\n+            Check_Subprogram_Contract (N);\n+\n          --  Ignored constructs for pointer checking\n \n          when N_Abstract_Subprogram_Declaration\n@@ -2655,7 +2701,6 @@ package body Sem_SPARK is\n             | N_Procedure_Instantiation\n             | N_Raise_xxx_Error\n             | N_Record_Representation_Clause\n-            | N_Subprogram_Declaration\n             | N_Subprogram_Renaming_Declaration\n             | N_Task_Type_Declaration\n             | N_Use_Package_Clause\n@@ -2677,6 +2722,65 @@ package body Sem_SPARK is\n       end case;\n    end Check_Node;\n \n+   --------------------------\n+   -- Check_Old_Loop_Entry --\n+   --------------------------\n+\n+   procedure Check_Old_Loop_Entry (N : Node_Id) is\n+\n+      function Check_Attribute (N : Node_Id) return Traverse_Result;\n+\n+      ---------------------\n+      -- Check_Attribute --\n+      ---------------------\n+\n+      function Check_Attribute (N : Node_Id) return Traverse_Result is\n+         Attr_Id : Attribute_Id;\n+         Aname   : Name_Id;\n+         Pref    : Node_Id;\n+\n+      begin\n+         if Nkind (N) = N_Attribute_Reference then\n+            Attr_Id := Get_Attribute_Id (Attribute_Name (N));\n+            Aname   := Attribute_Name (N);\n+\n+            if Attr_Id = Attribute_Old\n+              or else Attr_Id = Attribute_Loop_Entry\n+            then\n+               Pref := Prefix (N);\n+\n+               if Is_Deep (Etype (Pref)) then\n+                  if Nkind (Pref) /= N_Function_Call then\n+                     if Emit_Messages then\n+                        Error_Msg_Name_1 := Aname;\n+                        Error_Msg_N\n+                          (\"prefix of % attribute must be a function call \"\n+                           & \"(SPARK RM 3.10(14))\", Pref);\n+                     end if;\n+\n+                  elsif Is_Traversal_Function_Call (Pref) then\n+                     if Emit_Messages then\n+                        Error_Msg_Name_1 := Aname;\n+                        Error_Msg_N\n+                          (\"prefix of % attribute should not call a traversal \"\n+                           & \"function (SPARK RM 3.10(14))\", Pref);\n+                     end if;\n+                  end if;\n+               end if;\n+            end if;\n+         end if;\n+\n+         return OK;\n+      end Check_Attribute;\n+\n+      procedure Check_All is new Traverse_Proc (Check_Attribute);\n+\n+   --  Start of processing for Check_Old_Loop_Entry\n+\n+   begin\n+      Check_All (N);\n+   end Check_Old_Loop_Entry;\n+\n    ------------------------\n    -- Check_Package_Body --\n    ------------------------\n@@ -2869,8 +2973,18 @@ package body Sem_SPARK is\n                Expr : constant Node_Id := Expression (Arg2);\n             begin\n                Check_Expression (Expr, Read);\n+\n+               --  Prefix of Loop_Entry should be checked inside any assertion\n+               --  where it may appear.\n+\n+               Check_Old_Loop_Entry (Expr);\n             end;\n \n+         --  Prefix of Loop_Entry should be checked inside a Loop_Variant\n+\n+         when Pragma_Loop_Variant =>\n+            Check_Old_Loop_Entry (Prag);\n+\n          --  There is no need to check contracts, as these can only access\n          --  inputs and outputs of the subprogram. Inputs are checked\n          --  independently for R permission. Outputs are checked\n@@ -2963,6 +3077,7 @@ package body Sem_SPARK is\n \n          when N_Package_Body\n             | N_Package_Declaration\n+            | N_Subprogram_Declaration\n             | N_Subprogram_Body\n          =>\n             declare"}]}