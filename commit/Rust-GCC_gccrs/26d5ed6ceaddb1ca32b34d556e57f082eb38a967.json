{"sha": "26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkNWVkNmNlYWRkYjFjYTMyYjM0ZDU1NmU1N2YwODJlYjM4YTk2Nw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-05-05T21:03:07Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-05-05T21:03:07Z"}, "message": "Get rid of macros for diagnostic_report_current_module\n\ndiagnostic.h has a couple of macros (diagnostic_last_module_changed\nand diagnostic_set_last_module) which are only used within\ndiagnostic_report_current_module.\n\nThis patch eliminates the macros in favor of static functions within\ndiagnostic.c.\n\nNo functional change intended.\n\ngcc/ChangeLog:\n\t* diagnostic.c (last_module_changed_p): New function.\n\t(set_last_module): New function.\n\t(diagnostic_report_current_module): Convert macro usage to\n\tthe above functions.\n\t* diagnostic.h (diagnostic_context::last_module): Strengthen\n\tfrom const line_map * to const line_map_ordinary *.\n\t(diagnostic_last_module_changed): Delete macro.\n\t(diagnostic_set_last_module): Delete macro.\n\nFrom-SVN: r247664", "tree": {"sha": "fa2957f414499bc4f89f1d8b7924c792b706a878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa2957f414499bc4f89f1d8b7924c792b706a878"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56d3558517e7d7b75ff6704913f563a11eb13118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d3558517e7d7b75ff6704913f563a11eb13118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d3558517e7d7b75ff6704913f563a11eb13118"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "56ec2794652dde6c64f3a7fc03f3a46fdfb6f66a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "patch": "@@ -1,3 +1,14 @@\n+2017-05-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic.c (last_module_changed_p): New function.\n+\t(set_last_module): New function.\n+\t(diagnostic_report_current_module): Convert macro usage to\n+\tthe above functions.\n+\t* diagnostic.h (diagnostic_context::last_module): Strengthen\n+\tfrom const line_map * to const line_map_ordinary *.\n+\t(diagnostic_last_module_changed): Delete macro.\n+\t(diagnostic_set_last_module): Delete macro.\n+\n 2017-05-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic.c (diagnostic_impl): Replace report_diagnostic"}, {"sha": "158519606f8d1c4570f51a53d979bba0d7cbf5cb", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "patch": "@@ -534,6 +534,25 @@ diagnostic_action_after_output (diagnostic_context *context,\n     }\n }\n \n+/* True if the last module or file in which a diagnostic was reported is\n+   different from the current one.  */\n+\n+static bool\n+last_module_changed_p (diagnostic_context *context,\n+\t\t       const line_map_ordinary *map)\n+{\n+  return context->last_module != map;\n+}\n+\n+/* Remember the current module or file as being the last one in which we\n+   report a diagnostic.  */\n+\n+static void\n+set_last_module (diagnostic_context *context, const line_map_ordinary *map)\n+{\n+  context->last_module = map;\n+}\n+\n void\n diagnostic_report_current_module (diagnostic_context *context, location_t where)\n {\n@@ -552,9 +571,9 @@ diagnostic_report_current_module (diagnostic_context *context, location_t where)\n \t\t\t    LRK_MACRO_DEFINITION_LOCATION,\n \t\t\t    &map);\n \n-  if (map && diagnostic_last_module_changed (context, map))\n+  if (map && last_module_changed_p (context, map))\n     {\n-      diagnostic_set_last_module (context, map);\n+      set_last_module (context, map);\n       if (! MAIN_FILE_P (map))\n \t{\n \t  map = INCLUDED_FROM (line_table, map);"}, {"sha": "89d5a08583c4e26fd8c7eed34eb19f960db46190", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d5ed6ceaddb1ca32b34d556e57f082eb38a967/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "patch": "@@ -189,7 +189,7 @@ struct diagnostic_context\n \n   /* Used to detect when the input file stack has changed since last\n      described.  */\n-  const struct line_map *last_module;\n+  const line_map_ordinary *last_module;\n \n   int lock;\n \n@@ -241,16 +241,6 @@ diagnostic_inhibit_notes (diagnostic_context * context)\n /* Same as output_prefixing_rule.  Works on 'diagnostic_context *'.  */\n #define diagnostic_prefixing_rule(DC) ((DC)->printer->wrapping.rule)\n \n-/* True if the last module or file in which a diagnostic was reported is\n-   different from the current one.  */\n-#define diagnostic_last_module_changed(DC, MAP)\t\\\n-  ((DC)->last_module != MAP)\n-\n-/* Remember the current module or file as being the last one in which we\n-   report a diagnostic.  */\n-#define diagnostic_set_last_module(DC, MAP)\t\\\n-  (DC)->last_module = MAP\n-\n /* Raise SIGABRT on any diagnostic of severity DK_ERROR or higher.  */\n #define diagnostic_abort_on_error(DC) \\\n   (DC)->abort_on_error = true"}]}