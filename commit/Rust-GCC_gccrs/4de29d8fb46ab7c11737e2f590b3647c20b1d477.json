{"sha": "4de29d8fb46ab7c11737e2f590b3647c20b1d477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlMjlkOGZiNDZhYjdjMTE3MzdlMmY1OTBiMzY0N2MyMGIxZDQ3Nw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2009-11-22T15:09:12Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-11-22T15:09:12Z"}, "message": "opts.c (decode_options): Don't enable flag_schedule_insns when optimizing for size.\n\n\t* opts.c (decode_options): Don't enable flag_schedule_insns \n\twhen optimizing for size.\n\t* doc/invoke.texi: Document change.\n\nFrom-SVN: r154424", "tree": {"sha": "10ada45d2b7d1ba658839dae403eb4d2292ac760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10ada45d2b7d1ba658839dae403eb4d2292ac760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4de29d8fb46ab7c11737e2f590b3647c20b1d477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de29d8fb46ab7c11737e2f590b3647c20b1d477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de29d8fb46ab7c11737e2f590b3647c20b1d477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de29d8fb46ab7c11737e2f590b3647c20b1d477/comments", "author": null, "committer": null, "parents": [{"sha": "7e82354a007d345a99baf022bf1766bd6612f1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e82354a007d345a99baf022bf1766bd6612f1f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e82354a007d345a99baf022bf1766bd6612f1f4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "a2bc0f87e4a6159a4492640254e496d24d0bc9a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4de29d8fb46ab7c11737e2f590b3647c20b1d477", "patch": "@@ -1,3 +1,9 @@\n+2009-11-22  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* opts.c (decode_options): Don't enable flag_schedule_insns \n+\twhen optimizing for size.\n+\t* doc/invoke.texi: Document change.\n+\n 2009-11-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/42113"}, {"sha": "56ad9242f9bb9ed64feb829021fd3cbd0abfe4f4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4de29d8fb46ab7c11737e2f590b3647c20b1d477", "patch": "@@ -6295,7 +6295,7 @@ helps machines that have slow floating point or memory load instructions\n by allowing other instructions to be issued until the result of the load\n or floating point instruction is required.\n \n-Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n+Enabled at levels @option{-O2}, @option{-O3}.\n \n @item -fschedule-insns2\n @opindex fschedule-insns2"}, {"sha": "4e8fdcc6700e012d308a41ea7696222172f86a29", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de29d8fb46ab7c11737e2f590b3647c20b1d477/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=4de29d8fb46ab7c11737e2f590b3647c20b1d477", "patch": "@@ -884,7 +884,8 @@ decode_options (unsigned int argc, const char **argv)\n   flag_caller_saves = opt2;\n   flag_peephole2 = opt2;\n #ifdef INSN_SCHEDULING\n-  flag_schedule_insns = opt2;\n+  /* Only run the pre-regalloc scheduling pass if optimizing for speed.  */\n+  flag_schedule_insns = opt2 && ! optimize_size;\n   flag_schedule_insns_after_reload = opt2;\n #endif\n   flag_regmove = opt2;"}]}