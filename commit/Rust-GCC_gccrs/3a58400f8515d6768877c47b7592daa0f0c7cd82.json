{"sha": "3a58400f8515d6768877c47b7592daa0f0c7cd82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1ODQwMGY4NTE1ZDY3Njg4NzdjNDdiNzU5MmRhYTBmMGM3Y2Q4Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T21:16:16Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T21:16:16Z"}, "message": "(output_move_double): Fix up the test for overlap\nof source address with operands[0].\n\nFrom-SVN: r5987", "tree": {"sha": "5c89a50970693ced9c59ef4e791492d60094d3a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c89a50970693ced9c59ef4e791492d60094d3a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a58400f8515d6768877c47b7592daa0f0c7cd82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a58400f8515d6768877c47b7592daa0f0c7cd82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a58400f8515d6768877c47b7592daa0f0c7cd82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a58400f8515d6768877c47b7592daa0f0c7cd82/comments", "author": null, "committer": null, "parents": [{"sha": "5ac6158d0b938f95a80827c7c72b5fadc4976ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac6158d0b938f95a80827c7c72b5fadc4976ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac6158d0b938f95a80827c7c72b5fadc4976ca7"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "1e29a6db6a7ef175c0b418ae9701306a5d990a04", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a58400f8515d6768877c47b7592daa0f0c7cd82/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a58400f8515d6768877c47b7592daa0f0c7cd82/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=3a58400f8515d6768877c47b7592daa0f0c7cd82", "patch": "@@ -1077,11 +1077,14 @@ output_move_double (operands)\n   if (optype0 == REGOP\n       && (optype1 == OFFSOP || optype1 == MEMOP))\n     {\n-      if (reg_overlap_mentioned_p (operands[0], XEXP (operands[1], 0))\n+      rtx testlow = gen_rtx (REG, SImode, REGNO (operands[0]));\n+\n+      if (reg_overlap_mentioned_p (testlow, XEXP (operands[1], 0))\n \t  && reg_overlap_mentioned_p (latehalf[0], XEXP (operands[1], 0)))\n \t{\n \t  /* If both halves of dest are used in the src memory address,\n-\t     compute the address into latehalf of dest.  */\n+\t     compute the address into latehalf of dest.\n+\t     Note that this can't happen if the dest is two data regs.  */\n compadr:\n \t  xops[0] = latehalf[0];\n \t  xops[1] = XEXP (operands[1], 0);\n@@ -1102,8 +1105,13 @@ output_move_double (operands)\n \t       && reg_overlap_mentioned_p (middlehalf[0],\n \t\t\t\t\t   XEXP (operands[1], 0)))\n \t{\n-\t  /* Check for two regs used by both source and dest. */\n-\t  if (reg_overlap_mentioned_p (operands[0], XEXP (operands[1], 0))\n+\t  /* Check for two regs used by both source and dest.\n+\t     Note that this can't happen if the dest is all data regs.\n+\t     It can happen if the dest is d6, d7, a0.\n+\t     But in that case, latehalf is an addr reg, so\n+\t     the code at compadr does ok.  */\n+\n+\t  if (reg_overlap_mentioned_p (testlow, XEXP (operands[1], 0))\n \t      || reg_overlap_mentioned_p (latehalf[0], XEXP (operands[1], 0)))\n \t    goto compadr;\n "}]}