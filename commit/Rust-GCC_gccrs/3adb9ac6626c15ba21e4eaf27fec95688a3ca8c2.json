{"sha": "3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkYjlhYzY2MjZjMTViYTIxZTRlYWYyN2ZlYzk1Njg4YTNjYThjMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-22T13:22:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-22T13:22:51Z"}, "message": "testsuite: Add testcase for recently fixed PR [PR101159]\n\nOn Tue, Jun 22, 2021 at 11:00:51AM +0200, Richard Biener wrote:\n> 2021-06-22  Richard Biener  <rguenther@suse.de>\n>\n>       PR tree-optimization/101159\n>       * tree-vect-patterns.c (vect_recog_popcount_pattern): Add\n>       missing NULL vectype check.\n\nThe following patch adds the testcase for it, IMHO it can't hurt and\nfrom my experience testcases often trigger other bugs later on (rather\nthan the original bugs reappearing, though even that happens),\nand also fixes a couple of typos in the new function.\n\n2021-06-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/101159\n\t* tree-vect-patterns.c (vect_recog_popcount_pattern): Fix some\n\tcomment typos.\n\n\t* gcc.c-torture/compile/pr101159.c: New test.", "tree": {"sha": "a4ba9a4d0446502288f835834584cf1313d3c86d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4ba9a4d0446502288f835834584cf1313d3c86d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b613e825d706b18f69e40edaee3eaf27d28f5cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b613e825d706b18f69e40edaee3eaf27d28f5cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b613e825d706b18f69e40edaee3eaf27d28f5cb"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "81b2d2cafb6e67a2f0fb30865097655cfd7f7491", "filename": "gcc/testsuite/gcc.c-torture/compile/pr101159.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101159.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101159.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101159.c?ref=3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/101159 */\n+\n+unsigned long a;\n+long b;\n+\n+void\n+foo (void)\n+{\n+  a += __builtin_popcountl (b);\n+}"}, {"sha": "b2e7fc2cc7adad72697b8d76deb0448d0b03e0a8", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2", "patch": "@@ -1300,7 +1300,7 @@ vect_recog_widen_minus_pattern (vec_info *vinfo, stmt_vec_info last_stmt_info,\n    TYPE1 B;\n    UTYPE2 temp_in;\n    TYPE3 temp_out;\n-   temp_in = (TYPE2)A;\n+   temp_in = (UTYPE2)A;\n \n    temp_out = __builtin_popcount{,l,ll} (temp_in);\n    B = (TYPE1) temp_out;\n@@ -1372,8 +1372,8 @@ vect_recog_popcount_pattern (vec_info *vinfo,\n   if (!rhs_origin)\n     return NULL;\n \n-  /* Input and outout of .POPCOUNT should be same-precision integer.\n-     Also A should be unsigned or same presion as temp_in,\n+  /* Input and output of .POPCOUNT should be same-precision integer.\n+     Also A should be unsigned or same precision as temp_in,\n      otherwise there would be sign_extend from A to temp_in.  */\n   if (TYPE_PRECISION (unprom_diff.type) != TYPE_PRECISION (lhs_type)\n       || (!TYPE_UNSIGNED (unprom_diff.type)\n@@ -1384,7 +1384,7 @@ vect_recog_popcount_pattern (vec_info *vinfo,\n \n   vect_pattern_detected (\"vec_regcog_popcount_pattern\", popcount_stmt);\n   vec_type = get_vectype_for_scalar_type (vinfo, lhs_type);\n-  /* Do it only the backend existed popcount<vector_mode>2.  */\n+  /* Do it only if the backend has popcount<vector_mode>2 pattern.  */\n   if (!vec_type\n       || !direct_internal_fn_supported_p (IFN_POPCOUNT, vec_type,\n \t\t\t\t\t  OPTIMIZE_FOR_SPEED))"}]}