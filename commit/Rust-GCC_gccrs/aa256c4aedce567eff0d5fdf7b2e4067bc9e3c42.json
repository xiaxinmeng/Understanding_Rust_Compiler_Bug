{"sha": "aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyNTZjNGFlZGNlNTY3ZWZmMGQ1ZmRmN2IyZTQwNjdiYzllM2M0Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-09-14T10:36:50Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-09-14T10:36:50Z"}, "message": "c-common.c (warn_for_sign_compare): Cast to unsigned when shifting a negative value.\n\n\t* c-common.c (warn_for_sign_compare): Cast to unsigned when shifting\n\ta negative value.\n\n\t* c-typeck.c (set_nonincremental_init_from_string): Use\n\tHOST_WIDE_INT_M1U when shifting a negative value.\n\n\t* rtlanal.c (split_double): Cast to unsigned when shifting a negative\n\tvalue.\n\t* sched-int.h (UNKNOWN_DEP_COST): Likewise.\n\nFrom-SVN: r227743", "tree": {"sha": "001e0f81efbd2a370e6d6c036da01bc1cd490e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/001e0f81efbd2a370e6d6c036da01bc1cd490e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f876f22887f239cedca64ff170b71e5f1daaf54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f876f22887f239cedca64ff170b71e5f1daaf54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f876f22887f239cedca64ff170b71e5f1daaf54"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "462a997707118bd4f2a6dd31599fdbd8ef7bb545", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -1,3 +1,9 @@\n+2015-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* rtlanal.c (split_double): Cast to unsigned when shifting a negative\n+\tvalue.\n+\t* sched-int.h (UNKNOWN_DEP_COST): Likewise.\n+\n 2015-09-11  Mark Wielaard  <mjw@redhat.com>\n \n \tPR c/28901"}, {"sha": "8f8de188005429aee152ed67545f583d8c939e93", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -1,3 +1,8 @@\n+2015-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-common.c (warn_for_sign_compare): Cast to unsigned when shifting\n+\ta negative value.\n+\n 2015-09-11  Mark Wielaard  <mjw@redhat.com>\n \n \tPR c/28901"}, {"sha": "4b922bfbce1b3fafd65e1499c369b334cc7bff10", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -12142,7 +12142,7 @@ warn_for_sign_compare (location_t location,\n           if (bits < TYPE_PRECISION (result_type)\n               && bits < HOST_BITS_PER_LONG && unsignedp)\n             {\n-              mask = (~ (HOST_WIDE_INT) 0) << bits;\n+              mask = (~ (unsigned HOST_WIDE_INT) 0) << bits;\n               if ((mask & constant) != mask)\n \t\t{\n \t\t  if (constant == 0)"}, {"sha": "289142474244db78b061a4c44e0d72f90c682ec7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -1,3 +1,8 @@\n+2015-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-typeck.c (set_nonincremental_init_from_string): Use\n+\tHOST_WIDE_INT_M1U when shifting a negative value.\n+\n 2015-09-09  Mark Wielaard  <mjw@redhat.com>\n \n \t* c-typeck.c (build_binary_op): Check and warn when nonnull arg"}, {"sha": "3b2623140e3d2118452672abcdbafc2533bb18e0", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -8276,7 +8276,7 @@ set_nonincremental_init_from_string (tree str,\n \t    {\n \t      if (val[0] & (((HOST_WIDE_INT) 1) << (bitpos - 1)))\n \t\t{\n-\t\t  val[0] |= ((HOST_WIDE_INT) -1) << bitpos;\n+\t\t  val[0] |= HOST_WIDE_INT_M1U << bitpos;\n \t\t  val[1] = -1;\n \t\t}\n \t    }\n@@ -8287,8 +8287,7 @@ set_nonincremental_init_from_string (tree str,\n \t    }\n \t  else if (val[1] & (((HOST_WIDE_INT) 1)\n \t\t\t     << (bitpos - 1 - HOST_BITS_PER_WIDE_INT)))\n-\t    val[1] |= ((HOST_WIDE_INT) -1)\n-\t\t      << (bitpos - HOST_BITS_PER_WIDE_INT);\n+\t    val[1] |= HOST_WIDE_INT_M1U << (bitpos - HOST_BITS_PER_WIDE_INT);\n \t}\n \n       value = wide_int_to_tree (type,"}, {"sha": "b1be4db0dc1abb065d1cf94ad2049b11153be7e3", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -5805,9 +5805,9 @@ split_double (rtx value, rtx *first, rtx *second)\n       if (BITS_PER_WORD < HOST_BITS_PER_LONG && BITS_PER_WORD == 32)\n \t{\n \t  if (l[0] & ((long) 1 << 31))\n-\t    l[0] |= ((long) (-1) << 32);\n+\t    l[0] |= ((unsigned long) (-1) << 32);\n \t  if (l[1] & ((long) 1 << 31))\n-\t    l[1] |= ((long) (-1) << 32);\n+\t    l[1] |= ((unsigned long) (-1) << 32);\n \t}\n #endif\n "}, {"sha": "800262c4a4a0352045b4c32ea42e138a2d17ad6b", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=aa256c4aedce567eff0d5fdf7b2e4067bc9e3c42", "patch": "@@ -240,7 +240,7 @@ struct _dep\n   int cost:20;\n };\n \n-#define UNKNOWN_DEP_COST (-1<<19)\n+#define UNKNOWN_DEP_COST ((int) ((unsigned int) -1 << 19))\n \n typedef struct _dep dep_def;\n typedef dep_def *dep_t;"}]}