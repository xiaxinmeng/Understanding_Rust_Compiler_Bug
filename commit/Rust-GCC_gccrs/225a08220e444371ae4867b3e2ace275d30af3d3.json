{"sha": "225a08220e444371ae4867b3e2ace275d30af3d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1YTA4MjIwZTQ0NDM3MWFlNDg2N2IzZTJhY2UyNzVkMzBhZjNkMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-17T10:58:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-17T11:00:24Z"}, "message": "Fix assertion checking failure with tail call\n\ngcc/ChangeLog:\n\tPR middle-end/97078\n\t* function.c (use_register_for_decl): Test cfun->tail_call_marked\n\tfor a parameter here instead of...\n\t(assign_parm_setup_reg): ...here.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/pr97078.c: New test.", "tree": {"sha": "9b0e3d8c34a1b39d8acb77ad87cc19362865dc2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b0e3d8c34a1b39d8acb77ad87cc19362865dc2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225a08220e444371ae4867b3e2ace275d30af3d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225a08220e444371ae4867b3e2ace275d30af3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225a08220e444371ae4867b3e2ace275d30af3d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225a08220e444371ae4867b3e2ace275d30af3d3/comments", "author": null, "committer": null, "parents": [{"sha": "80cbca32464ae05931c0ae425eec7d1f373946eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cbca32464ae05931c0ae425eec7d1f373946eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80cbca32464ae05931c0ae425eec7d1f373946eb"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "c6129593b9bdaa862ac4f1a5c70e964572bcb75c", "filename": "gcc/function.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225a08220e444371ae4867b3e2ace275d30af3d3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225a08220e444371ae4867b3e2ace275d30af3d3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=225a08220e444371ae4867b3e2ace275d30af3d3", "patch": "@@ -2237,6 +2237,11 @@ use_register_for_decl (const_tree decl)\n   if (optimize)\n     return true;\n \n+  /* Thunks force a tail call even at -O0 so we need to avoid creating a\n+     dangling reference in case the parameter is passed by reference.  */\n+  if (TREE_CODE (decl) == PARM_DECL && cfun->tail_call_marked)\n+    return true;\n+\n   if (!DECL_REGISTER (decl))\n     return false;\n \n@@ -3328,9 +3333,8 @@ assign_parm_setup_reg (struct assign_parm_data_all *all, tree parm,\n      of the parameter instead.  */\n   if (data->arg.pass_by_reference && TYPE_MODE (TREE_TYPE (parm)) != BLKmode)\n     {\n-      /* Use a stack slot for debugging purposes, except if a tail call is\n-\t involved because this would create a dangling reference.  */\n-      if (use_register_for_decl (parm) || cfun->tail_call_marked)\n+      /* Use a stack slot for debugging purposes if possible.  */\n+      if (use_register_for_decl (parm))\n \t{\n \t  parmreg = gen_reg_rtx (TYPE_MODE (TREE_TYPE (parm)));\n \t  mark_user_reg (parmreg);"}, {"sha": "997d5fb8dd9cd0447c506f877001c24b301493a7", "filename": "gcc/testsuite/gcc.dg/pr97078.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225a08220e444371ae4867b3e2ace275d30af3d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225a08220e444371ae4867b3e2ace275d30af3d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97078.c?ref=225a08220e444371ae4867b3e2ace275d30af3d3", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffloat-store\" } */\n+\n+extern void foo (long double);\n+\n+void bar (long double d)\n+{\n+  foo (d);\n+}"}]}