{"sha": "613caed2feb9cfc8158308670b59df3d031ec629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzY2FlZDJmZWI5Y2ZjODE1ODMwODY3MGI1OWRmM2QwMzFlYzYyOQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2019-07-10T16:07:10Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-07-10T16:07:10Z"}, "message": "re PR target/91102 (aarch64 ICE on Linux kernel with -Os starting with r270266)\n\n2019-07-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/91102\n\t* lra-constraints.c (process_alt_operands): Don't match user\n\tdefined regs only if they are early clobbers.\n\n2019-07-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/91102\n\t* gcc.target/aarch64/pr91102.c: New test.\n\nFrom-SVN: r273357", "tree": {"sha": "a7a6e3e8f35c31ba35b57e041c14eab9ac773965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a6e3e8f35c31ba35b57e041c14eab9ac773965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613caed2feb9cfc8158308670b59df3d031ec629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613caed2feb9cfc8158308670b59df3d031ec629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613caed2feb9cfc8158308670b59df3d031ec629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613caed2feb9cfc8158308670b59df3d031ec629/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12bb04368e7fcbdd8d3744a440eee23c9293958f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12bb04368e7fcbdd8d3744a440eee23c9293958f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12bb04368e7fcbdd8d3744a440eee23c9293958f"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "e7004e3b95c0e6ab04b4bf7e02fab373c2166142", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=613caed2feb9cfc8158308670b59df3d031ec629", "patch": "@@ -1,3 +1,9 @@\n+2019-07-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/91102\n+\t* lra-constraints.c (process_alt_operands): Don't match user\n+\tdefined regs only if they are early clobbers.\n+\n 2019-07-10  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* wide-int.h (wi::lshift): Reject negative values for the fast path."}, {"sha": "55d8d133d3941bbf7cca478ad28c5dc6f9d6e658", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=613caed2feb9cfc8158308670b59df3d031ec629", "patch": "@@ -2172,8 +2172,9 @@ process_alt_operands (int only_alternative)\n \t\t    else\n \t\t      {\n \t\t\t/* Operands don't match.  If the operands are\n-\t\t\t   different user defined explicit hard registers,\n-\t\t\t   then we cannot make them match.  */\n+\t\t\t   different user defined explicit hard\n+\t\t\t   registers, then we cannot make them match\n+\t\t\t   when one is early clobber operand.  */\n \t\t\tif ((REG_P (*curr_id->operand_loc[nop])\n \t\t\t     || SUBREG_P (*curr_id->operand_loc[nop]))\n \t\t\t    && (REG_P (*curr_id->operand_loc[m])\n@@ -2192,9 +2193,17 @@ process_alt_operands (int only_alternative)\n \t\t\t\t&& REG_P (m_reg)\n \t\t\t\t&& HARD_REGISTER_P (m_reg)\n \t\t\t\t&& REG_USERVAR_P (m_reg))\n-\t\t\t      break;\n+\t\t\t      {\n+\t\t\t\tint i;\n+\t\t\t\t\n+\t\t\t\tfor (i = 0; i < early_clobbered_regs_num; i++)\n+\t\t\t\t  if (m == early_clobbered_nops[i])\n+\t\t\t\t    break;\n+\t\t\t\tif (i < early_clobbered_regs_num\n+\t\t\t\t    || early_clobber_p)\n+\t\t\t\t  break;\n+\t\t\t      }\n \t\t\t  }\n-\n \t\t\t/* Both operands must allow a reload register,\n \t\t\t   otherwise we cannot make them match.  */\n \t\t\tif (curr_alt[m] == NO_REGS)"}, {"sha": "6b2bf884bfdb4a0e58ecdb59738f88035f6f3e2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=613caed2feb9cfc8158308670b59df3d031ec629", "patch": "@@ -1,3 +1,8 @@\n+2019-07-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/91102\n+\t* gcc.target/aarch64/pr91102.c: New test.\n+\n 2019-07-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91126"}, {"sha": "70b99045a48e91e5b07eb154400a0513e210339a", "filename": "gcc/testsuite/gcc.target/aarch64/pr91102.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr91102.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613caed2feb9cfc8158308670b59df3d031ec629/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr91102.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr91102.c?ref=613caed2feb9cfc8158308670b59df3d031ec629", "patch": "@@ -0,0 +1,26 @@\n+/* PR target/91102 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+foo (long d, long l)\n+{\n+  register long e asm (\"x1\") = d;\n+  register long f asm(\"x2\") = l;\n+  asm (\"\" : : \"r\" (e), \"r\" (f));\n+  return 3;\n+}\n+\n+struct T { int i; int j; };\n+union S { long h; struct T t; };\n+\n+void\n+bar (union S b)\n+{\n+  while (1)\n+    {\n+      union S c = b;\n+      c.t.j++;\n+      b.h = foo (b.h, c.h);\n+    }\n+}"}]}