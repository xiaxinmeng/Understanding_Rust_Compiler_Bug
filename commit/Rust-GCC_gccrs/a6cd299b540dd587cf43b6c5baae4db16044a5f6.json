{"sha": "a6cd299b540dd587cf43b6c5baae4db16044a5f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjZDI5OWI1NDBkZDU4N2NmNDNiNmM1YmFhZTRkYjE2MDQ0YTVmNg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-08T21:32:25Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-08T21:32:25Z"}, "message": "re PR fortran/58470 ([OOP] ICE on invalid with FINAL procedure and type extension)\n\n2014-02-08  Janus Weil  <janus@gcc.gnu.org>\n\t    Mikael Morin <mikael.morin@gcc.gnu.org>\n\n\tPR fortran/58470\n\t* class.c (generate_finalization_wrapper): Assert that proc_tree has\n\tbeen set in gfc_resolve_finalizers.\n\t* resolve.c (resolve_fl_derived0): Remove unnecessary call to\n\tgfc_is_finalizable.\n\n\n2014-02-08  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/58470\n\t* gfortran.dg/finalize_22.f90: New.\n\nCo-Authored-By: Mikael Morin <mikael@gcc.gnu.org>\n\nFrom-SVN: r207636", "tree": {"sha": "5ae69f4bb8065dba5e5e0c431bebad1ce0c7d929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ae69f4bb8065dba5e5e0c431bebad1ce0c7d929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6cd299b540dd587cf43b6c5baae4db16044a5f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cd299b540dd587cf43b6c5baae4db16044a5f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cd299b540dd587cf43b6c5baae4db16044a5f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cd299b540dd587cf43b6c5baae4db16044a5f6/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df3927406e3ca1ed7620332a8608ad4bce4c45c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3927406e3ca1ed7620332a8608ad4bce4c45c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df3927406e3ca1ed7620332a8608ad4bce4c45c6"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "052248c761e9296dd04cac28d657a742b6920aeb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a6cd299b540dd587cf43b6c5baae4db16044a5f6", "patch": "@@ -1,3 +1,12 @@\n+2014-02-08  Janus Weil  <janus@gcc.gnu.org>\n+\t    Mikael Morin <mikael.morin@gcc.gnu.org>\n+\n+\tPR fortran/58470\n+\t* class.c (generate_finalization_wrapper): Assert that proc_tree has\n+\tbeen set in gfc_resolve_finalizers.\n+\t* resolve.c (resolve_fl_derived0): Remove unnecessary call to\n+\tgfc_is_finalizable.\n+\n 2014-02-07  Benno Schulenberg  <bensberg@justemail.net>\n \n \tPR translation/52289"}, {"sha": "8af9172dfcd3ef39ccca952ff919ed4c516369a9", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=a6cd299b540dd587cf43b6c5baae4db16044a5f6", "patch": "@@ -1880,8 +1880,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n \n       for (fini = derived->f2k_derived->finalizers; fini; fini = fini->next)\n \t{\n-\t  if (!fini->proc_tree)\n-\t    fini->proc_tree = gfc_find_sym_in_symtree (fini->proc_sym);\n+\t  gcc_assert (fini->proc_tree);   /* Should have been set in gfc_resolve_finalizers.  */\n \t  if (fini->proc_tree->n.sym->attr.elemental)\n \t    {\n \t      fini_elem = fini;"}, {"sha": "02621656583acb42f480590c712b98a1cbf993c9", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a6cd299b540dd587cf43b6c5baae4db16044a5f6", "patch": "@@ -12455,10 +12455,6 @@ resolve_fl_derived0 (gfc_symbol *sym)\n   /* Add derived type to the derived type list.  */\n   add_dt_to_dt_list (sym);\n \n-  /* Check if the type is finalizable. This is done in order to ensure that the\n-     finalization wrapper is generated early enough.  */\n-  gfc_is_finalizable (sym, NULL);\n-\n   return true;\n }\n "}, {"sha": "9b9d2cde8e73c1b44a099dea499dd7e5377d16b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6cd299b540dd587cf43b6c5baae4db16044a5f6", "patch": "@@ -1,3 +1,8 @@\n+2014-02-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/58470\n+\t* gfortran.dg/finalize_22.f90: New.\n+\n 2014-02-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/60066"}, {"sha": "57fa6e78de315b403cb47e02a1fece70141578e7", "filename": "gcc/testsuite/gfortran.dg/finalize_22.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cd299b540dd587cf43b6c5baae4db16044a5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90?ref=a6cd299b540dd587cf43b6c5baae4db16044a5f6", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+!\n+! PR 58470: [4.9 Regression] [OOP] ICE on invalid with FINAL procedure and type extension\n+!\n+! Contributed by Andrew Benson <abensonca@gmail.com>\n+\n+module cf\n+  type  :: cfml\n+   contains\n+     final :: mld\n+  end type cfml\n+  type, extends(cfml) :: cfmde\n+  end type cfmde\n+contains\n+  subroutine mld(s)   ! { dg-error \"must be of type\" }\n+    class(cfml), intent(inout) :: s\n+  end subroutine mld\n+end module cf\n+\n+! { dg-final { cleanup-modules \"cf\" } }"}]}