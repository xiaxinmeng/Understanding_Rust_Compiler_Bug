{"sha": "8c2805bbbb937cbce2c86fac1146515d6aee81e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyODA1YmJiYjkzN2NiY2UyYzg2ZmFjMTE0NjUxNWQ2YWVlODFlNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2017-06-27T17:57:23Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2017-06-27T17:57:23Z"}, "message": "match.pd (X >/>=/</<= 0 ? 1.0 : -1.0): New patterns.\n\n2017-06-27  Andrew Pinski  <apinski@cavium.com>\n\n        * match.pd (X >/>=/</<= 0 ? 1.0 : -1.0): New patterns.\n        (X * copysign (1.0, X)): New pattern.\n        (X * copysign (1.0, -X)): New pattern.\n        (copysign (-1.0, CST)): New pattern.\n\n2017-06-27  Andrew Pinski  <apinski@cavium.com>\n\n        * gcc.dg/tree-ssa/copy-sign-1.c: New testcase.\n        * gcc.dg/tree-ssa/copy-sign-2.c: New testcase.\n        * gcc.dg/tree-ssa/mult-abs-2.c: New testcase.\n\nFrom-SVN: r249704", "tree": {"sha": "e9b2edcb8bd0788fb5c2cd483a23fed732bc1233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9b2edcb8bd0788fb5c2cd483a23fed732bc1233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c2805bbbb937cbce2c86fac1146515d6aee81e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2805bbbb937cbce2c86fac1146515d6aee81e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2805bbbb937cbce2c86fac1146515d6aee81e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2805bbbb937cbce2c86fac1146515d6aee81e4/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9636e80677cfde263dcff8e5263bf719ec0dbc97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9636e80677cfde263dcff8e5263bf719ec0dbc97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9636e80677cfde263dcff8e5263bf719ec0dbc97"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "f52d1b92a236af0f32c552b2407e4c03e1b9b825", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -1,3 +1,10 @@\n+2017-06-27  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* match.pd (X >/>=/</<= 0 ? 1.0 : -1.0): New patterns.\n+\t(X * copysign (1.0, X)): New pattern.\n+\t(X * copysign (1.0, -X)): New pattern.\n+\t(copysign (-1.0, CST)): New pattern.\n+\n 2017-06-27  Joseph Myers  <joseph@codesourcery.com>\n \n \t* genmultilib (combination_space): Remove variable."}, {"sha": "c132cba09cd1faaddf1c68d5dfdc40dbe2c3a06f", "filename": "gcc/match.pd", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -155,6 +155,58 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n            || !COMPLEX_FLOAT_TYPE_P (type)))\n    (negate @0)))\n \n+(for cmp (gt ge lt le)\n+     outp (convert convert negate negate)\n+     outn (negate negate convert convert)\n+ /* Transform (X > 0.0 ? 1.0 : -1.0) into copysign(1, X). */\n+ /* Transform (X >= 0.0 ? 1.0 : -1.0) into copysign(1, X). */\n+ /* Transform (X < 0.0 ? 1.0 : -1.0) into copysign(1,-X). */\n+ /* Transform (X <= 0.0 ? 1.0 : -1.0) into copysign(1,-X). */\n+ (simplify\n+  (cond (cmp @0 real_zerop) real_onep@1 real_minus_onep)\n+  (if (!HONOR_NANS (type) && !HONOR_SIGNED_ZEROS (type)\n+       && types_match (type, TREE_TYPE (@0)))\n+   (switch\n+    (if (types_match (type, float_type_node))\n+     (BUILT_IN_COPYSIGNF @1 (outp @0)))\n+    (if (types_match (type, double_type_node))\n+     (BUILT_IN_COPYSIGN @1 (outp @0)))\n+    (if (types_match (type, long_double_type_node))\n+     (BUILT_IN_COPYSIGNL @1 (outp @0))))))\n+ /* Transform (X > 0.0 ? -1.0 : 1.0) into copysign(1,-X). */\n+ /* Transform (X >= 0.0 ? -1.0 : 1.0) into copysign(1,-X). */\n+ /* Transform (X < 0.0 ? -1.0 : 1.0) into copysign(1,X). */\n+ /* Transform (X <= 0.0 ? -1.0 : 1.0) into copysign(1,X). */\n+ (simplify\n+  (cond (cmp @0 real_zerop) real_minus_onep real_onep@1)\n+  (if (!HONOR_NANS (type) && !HONOR_SIGNED_ZEROS (type)\n+       && types_match (type, TREE_TYPE (@0)))\n+   (switch\n+    (if (types_match (type, float_type_node))\n+     (BUILT_IN_COPYSIGNF @1 (outn @0)))\n+    (if (types_match (type, double_type_node))\n+     (BUILT_IN_COPYSIGN @1 (outn @0)))\n+    (if (types_match (type, long_double_type_node))\n+     (BUILT_IN_COPYSIGNL @1 (outn @0)))))))\n+\n+/* Transform X * copysign (1.0, X) into abs(X). */\n+(simplify\n+ (mult:c @0 (COPYSIGN real_onep @0))\n+ (if (!HONOR_NANS (type) && !HONOR_SIGNED_ZEROS (type))\n+  (abs @0)))\n+\n+/* Transform X * copysign (1.0, -X) into -abs(X). */\n+(simplify\n+ (mult:c @0 (COPYSIGN real_onep (negate @0)))\n+ (if (!HONOR_NANS (type) && !HONOR_SIGNED_ZEROS (type))\n+  (negate (abs @0))))\n+\n+/* Transform copysign (CST, X) into copysign (ABS(CST), X). */\n+(simplify\n+ (COPYSIGN REAL_CST@0 @1)\n+ (if (REAL_VALUE_NEGATIVE (TREE_REAL_CST (@0)))\n+  (COPYSIGN (negate @0) @1)))\n+\n /* X * 1, X / 1 -> X.  */\n (for op (mult trunc_div ceil_div floor_div round_div exact_div)\n   (simplify"}, {"sha": "56123195e8dfca7371014496e47517193a23468c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -1,3 +1,9 @@\n+2017-06-27  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.dg/tree-ssa/copy-sign-1.c: New testcase.\n+\t* gcc.dg/tree-ssa/copy-sign-2.c: New testcase.\n+\t* gcc.dg/tree-ssa/mult-abs-2.c: New testcase.\n+\n 2017-06-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/81223"}, {"sha": "9ebdf50928028aa84555eef16b00279de0c1458f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/copy-sign-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-options \"-O2 -ffast-math -fdump-tree-gimple\" } */\n+/* { dg-do compile } */\n+float f(float x)\n+{\n+  return (x > 0.f ? -1.f : 1.f);\n+}\n+float f1(float x)\n+{\n+  return (x > 0.f ? 1.f : -1.f);\n+}\n+float g(float x)\n+{\n+  return (x >= 0.f ? -1.f : 1.f);\n+}\n+float g1(float x)\n+{\n+  return (x >= 0.f ? 1.f : -1.f);\n+}\n+float h(float x)\n+{\n+  return (x < 0.f ? -1.f : 1.f);\n+}\n+float h1(float x)\n+{\n+  return (x < 0.f ? 1.f : -1.f);\n+}\n+float i(float x)\n+{\n+  return (x <= 0.f ? -1.f : 1.f);\n+}\n+float i1(float x)\n+{\n+  return (x <= 0.f ? 1.f : -1.f);\n+}\n+/* { dg-final { scan-tree-dump-times \"copysign\" 8 \"gimple\"} } */"}, {"sha": "de52c5f7c8062958353d91f5031193defc9f3f91", "filename": "gcc/testsuite/gcc.dg/tree-ssa/copy-sign-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-2.c?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-O2 -ffast-math -fdump-tree-optimized\" } */\n+/* { dg-do compile } */\n+float f(float x)\n+{\n+  float t = __builtin_copysignf (1.0f, x);\n+  return x * t;\n+}\n+float f1(float x)\n+{\n+  float t = __builtin_copysignf (1.0f, -x);\n+  return x * t;\n+}\n+/* { dg-final { scan-tree-dump-times \"ABS\" 2 \"optimized\"} } */"}, {"sha": "b6a1a790eeeb9465d406a806c287fd0092031261", "filename": "gcc/testsuite/gcc.dg/tree-ssa/mult-abs-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2805bbbb937cbce2c86fac1146515d6aee81e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c?ref=8c2805bbbb937cbce2c86fac1146515d6aee81e4", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-options \"-O2 -ffast-math -fdump-tree-gimple\" } */\n+/* { dg-do compile } */\n+float f(float x)\n+{\n+  return x * (x > 0.f ? -1.f : 1.f);\n+}\n+float f1(float x)\n+{\n+  return x * (x > 0.f ? 1.f : -1.f);\n+}\n+float g(float x)\n+{\n+  return x * (x >= 0.f ? -1.f : 1.f);\n+}\n+float g1(float x)\n+{\n+  return x * (x >= 0.f ? 1.f : -1.f);\n+}\n+float h(float x)\n+{\n+  return x * (x < 0.f ? -1.f : 1.f);\n+}\n+float h1(float x)\n+{\n+  return x * (x < 0.f ? 1.f : -1.f);\n+}\n+float i(float x)\n+{\n+  return x * (x <= 0.f ? -1.f : 1.f);\n+}\n+float i1(float x)\n+{\n+  return x * (x <= 0.f ? 1.f : -1.f);\n+}\n+/* { dg-final { scan-tree-dump-times \"ABS\" 8 \"gimple\"} } */"}]}