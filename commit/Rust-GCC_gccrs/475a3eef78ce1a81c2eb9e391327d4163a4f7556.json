{"sha": "475a3eef78ce1a81c2eb9e391327d4163a4f7556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1YTNlZWY3OGNlMWE4MWMyZWI5ZTM5MTMyN2Q0MTYzYTRmNzU1Ng==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-07-22T12:15:37Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-07-22T12:15:37Z"}, "message": "re PR rtl-optimization/21848 (load_mems / replace_loop_mems bug causes miscompilation of jcf-io.c / SEGV while processing java/lang/AbstractMethodError)\n\n\tPR rtl-optimization/21848\n\t* calls.c (emit_library_call_value_1): For const functions, add\n\tUSEs of the stack slots to CALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r102281", "tree": {"sha": "363ae1ad1f346c2e619e649976ddbde63a75a5f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/363ae1ad1f346c2e619e649976ddbde63a75a5f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/475a3eef78ce1a81c2eb9e391327d4163a4f7556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475a3eef78ce1a81c2eb9e391327d4163a4f7556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/475a3eef78ce1a81c2eb9e391327d4163a4f7556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475a3eef78ce1a81c2eb9e391327d4163a4f7556/comments", "author": null, "committer": null, "parents": [{"sha": "29c1846ba31b9d54b8b784143b14a9e93efabdb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c1846ba31b9d54b8b784143b14a9e93efabdb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c1846ba31b9d54b8b784143b14a9e93efabdb8"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "afaf91869dadf6cb8227fe2ce072d940fa2041b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475a3eef78ce1a81c2eb9e391327d4163a4f7556/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475a3eef78ce1a81c2eb9e391327d4163a4f7556/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=475a3eef78ce1a81c2eb9e391327d4163a4f7556", "patch": "@@ -1,5 +1,9 @@\n 2005-07-22  J\"orn Rennecke <joern.rennecke@st.com>\n \n+\tPR rtl-optimization/21848\n+\t* calls.c (emit_library_call_value_1): For const functions, add\n+\tUSEs of the stack slots to CALL_INSN_FUNCTION_USAGE.\n+\n \tPR rtl-optimization/22445\n \t* cselib.c (target.h): Include.\n \t(rtx_equal_for_cselib_p): Allow commutative matches."}, {"sha": "8e87886de1d0a49f7e76f6fb67b9115cf7480ea5", "filename": "gcc/calls.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475a3eef78ce1a81c2eb9e391327d4163a4f7556/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475a3eef78ce1a81c2eb9e391327d4163a4f7556/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=475a3eef78ce1a81c2eb9e391327d4163a4f7556", "patch": "@@ -3623,6 +3623,28 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n \t      stack_usage_map[i] = 1;\n \n \t  NO_DEFER_POP;\n+\n+\t  if (flags & ECF_CONST)\n+\t    {\n+\t      rtx use;\n+\n+\t      /* Indicate argument access so that alias.c knows that these\n+\t\t values are live.  */\n+\t      if (argblock)\n+\t\tuse = plus_constant (argblock,\n+\t\t\t\t     argvec[argnum].locate.offset.constant);\n+\t      else\n+\t\t/* When arguemnts are pushed, trying to tell alias.c where\n+\t\t   exactly this argument is won't work, because the\n+\t\t   auto-increment causes confusion.  So we merely indicate\n+\t\t   that we access something with a known mode somewhere on\n+\t\t   the stack.  */\n+\t        use = gen_rtx_PLUS (Pmode, virtual_outgoing_args_rtx,\n+\t\t\t\t    gen_rtx_SCRATCH (Pmode));\n+\t      use = gen_rtx_MEM (argvec[argnum].mode, use);\n+\t      use = gen_rtx_USE (VOIDmode, use);\n+\t      call_fusage = gen_rtx_EXPR_LIST (VOIDmode, use, call_fusage);\n+\t    }\n \t}\n     }\n "}]}