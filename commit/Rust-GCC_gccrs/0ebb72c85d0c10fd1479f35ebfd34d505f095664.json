{"sha": "0ebb72c85d0c10fd1479f35ebfd34d505f095664", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViYjcyYzg1ZDBjMTBmZDE0NzlmMzVlYmZkMzRkNTA1ZjA5NTY2NA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-06-06T10:20:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:20:58Z"}, "message": "a-textio.ads, [...] (Write): Add explicit size clause for the C imported variable.\n\n2007-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-textio.ads, a-textio.adb (Write): Add explicit size clause for the\n\tC imported variable.\n\t(Skip_Line): Do not reset Before_LM_PM immediately when Before_LM is set\n\ton entry.\n\nFrom-SVN: r125380", "tree": {"sha": "c1cb28798d5dad24054054be601f483a92a5dd57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1cb28798d5dad24054054be601f483a92a5dd57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ebb72c85d0c10fd1479f35ebfd34d505f095664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebb72c85d0c10fd1479f35ebfd34d505f095664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ebb72c85d0c10fd1479f35ebfd34d505f095664", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebb72c85d0c10fd1479f35ebfd34d505f095664/comments", "author": null, "committer": null, "parents": [{"sha": "d0dd5209d981a9705ea87c5e86211e8f0709bb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0dd5209d981a9705ea87c5e86211e8f0709bb7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0dd5209d981a9705ea87c5e86211e8f0709bb7c"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "86a4986be37e3dbb589cb87c81fb5da4204d7d2c", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebb72c85d0c10fd1479f35ebfd34d505f095664/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebb72c85d0c10fd1479f35ebfd34d505f095664/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=0ebb72c85d0c10fd1479f35ebfd34d505f095664", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,8 +37,8 @@ with Interfaces.C_Streams; use Interfaces.C_Streams;\n with System.File_IO;\n with System.CRTL;\n \n-with Unchecked_Conversion;\n-with Unchecked_Deallocation;\n+with Ada.Unchecked_Conversion;\n+with Ada.Unchecked_Deallocation;\n \n pragma Elaborate_All (System.File_IO);\n --  Needed because of calls to Chain_File in package body elaboration\n@@ -49,8 +49,8 @@ package body Ada.Text_IO is\n \n    subtype AP is FCB.AFCB_Ptr;\n \n-   function To_FCB is new Unchecked_Conversion (File_Mode, FCB.File_Mode);\n-   function To_TIO is new Unchecked_Conversion (FCB.File_Mode, File_Mode);\n+   function To_FCB is new Ada.Unchecked_Conversion (File_Mode, FCB.File_Mode);\n+   function To_TIO is new Ada.Unchecked_Conversion (FCB.File_Mode, File_Mode);\n    use type FCB.File_Mode;\n \n    use type System.CRTL.size_t;\n@@ -95,7 +95,7 @@ package body Ada.Text_IO is\n       type FCB_Ptr is access all Text_AFCB;\n       FT : FCB_Ptr := FCB_Ptr (File);\n \n-      procedure Free is new Unchecked_Deallocation (Text_AFCB, FCB_Ptr);\n+      procedure Free is new Ada.Unchecked_Deallocation (Text_AFCB, FCB_Ptr);\n \n    begin\n       Free (FT);\n@@ -1577,7 +1577,12 @@ package body Ada.Text_IO is\n       for L in 1 .. Spacing loop\n          if File.Before_LM then\n             File.Before_LM := False;\n-            File.Before_LM_PM := False;\n+\n+            --  Note that if File.Before_LM_PM is currently set, we also have\n+            --  to reset it (because it makes sense for Before_LM_PM to be set\n+            --  only when Before_LM is also set). This is done later on in this\n+            --  subprogram, as soon as Before_LM_PM has been taken into account\n+            --  for the purpose of page and line counts.\n \n          else\n             ch := Getc (File);\n@@ -1805,13 +1810,13 @@ package body Ada.Text_IO is\n      (File : in out Text_AFCB;\n       Item : Stream_Element_Array)\n    is\n-\n       function Has_Translated_Characters return Boolean;\n       --  return True if Item array contains a character which will be\n       --  translated under the text file mode. There is only one such\n       --  character under DOS based systems which is character 10.\n \n       text_translation_required : Boolean;\n+      for text_translation_required'Size use Character'Size;\n       pragma Import (C, text_translation_required,\n                      \"__gnat_text_translation_required\");\n "}, {"sha": "5e8ae4d08296774eacc33902adcc81ca7a5af044", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebb72c85d0c10fd1479f35ebfd34d505f095664/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebb72c85d0c10fd1479f35ebfd34d505f095664/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=0ebb72c85d0c10fd1479f35ebfd34d505f095664", "patch": "@@ -353,7 +353,7 @@ private\n       --  the Self field of the corresponding file.\n \n       Before_LM : Boolean := False;\n-      --  This flag is used to deal with the anomolies introduced by the\n+      --  This flag is used to deal with the anomalies introduced by the\n       --  peculiar definition of End_Of_File and End_Of_Page in Ada. These\n       --  functions require looking ahead more than one character. Since\n       --  there is no convenient way of backing up more than one character,"}]}