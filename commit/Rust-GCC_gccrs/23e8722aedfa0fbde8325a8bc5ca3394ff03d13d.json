{"sha": "23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlODcyMmFlZGZhMGZiZGU4MzI1YThiYzVjYTMzOTRmZjAzZDEzZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-19T17:36:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-19T17:36:03Z"}, "message": "re PR libstdc++/33815 (tr1::uniform_int isn't uniform)\n\n2007-10-19  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/33815\n\t* include/tr1_impl/random\n\t(uniform_int<>::_M_call(_UniformRandomNumberGenerator&, result_type,\n\tresult_type, true_type)): Avoid the modulo (which uses the low-order\n\tbits).\n\nFrom-SVN: r129493", "tree": {"sha": "f028988e1876fa0c798875833a06f8c50550b092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f028988e1876fa0c798875833a06f8c50550b092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d/comments", "author": null, "committer": null, "parents": [{"sha": "3c167a8bbb2e672462ab292668300c39d53c3713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c167a8bbb2e672462ab292668300c39d53c3713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c167a8bbb2e672462ab292668300c39d53c3713"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "b4f58acbc0991d081976c6386ee7cabcc9c8d9f0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "patch": "@@ -1,3 +1,11 @@\n+2007-10-19  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/33815\n+\t* include/tr1_impl/random\n+\t(uniform_int<>::_M_call(_UniformRandomNumberGenerator&, result_type,\n+\tresult_type, true_type)): Avoid the modulo (which uses the low-order\n+\tbits).\n+\n 2007-10-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_algobase.h (struct __cm_assign,"}, {"sha": "f44b17f97924d9c4cda59b895287e61c44ac02db", "filename": "libstdc++-v3/include/tr1_impl/random", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e8722aedfa0fbde8325a8bc5ca3394ff03d13d/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom?ref=23e8722aedfa0fbde8325a8bc5ca3394ff03d13d", "patch": "@@ -1605,9 +1605,13 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n         _M_call(_UniformRandomNumberGenerator& __urng,\n \t\tresult_type __min, result_type __max, true_type)\n         {\n+\t  // XXX Must be fixed to also work when __urng.max() - __urng.min()\n+\t  // is smaller than __max - __min.\n \t  typedef typename __gnu_cxx::__add_unsigned<typename\n \t    _UniformRandomNumberGenerator::result_type>::__type __utype;\n-\t  return result_type(__utype(__urng()) % (__max - __min + 1)) + __min; \n+\t  return result_type((__max - __min + 1.0L) * __utype(__urng())\n+\t\t\t     / (__utype(__urng.max())\n+\t\t\t\t- __utype(__urng.min()) + 1.0L)) + __min;\n \t}\n \n       template<typename _UniformRandomNumberGenerator>"}]}