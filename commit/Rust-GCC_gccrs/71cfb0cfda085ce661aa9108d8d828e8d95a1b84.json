{"sha": "71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjZmIwY2ZkYTA4NWNlNjYxYWE5MTA4ZDhkODI4ZThkOTVhMWI4NA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-03-24T11:47:33Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-03-24T11:47:33Z"}, "message": "[AArch64 testsuite] Make vect-abs.c C99 compliant\n\n\t* gcc.target/aarch64/vect-abs.c (dg-options): Add -std=c99.\n\t(LONG_LONG): Use LLONG.\n\t(set_rvector_long): Explicitly return void.\n\t(set_vector_long): Likewise.\n\t(check_vector_long): Likewise.\n\nFrom-SVN: r208788", "tree": {"sha": "8d30ccc4844078912b19815ac824db66660cf217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d30ccc4844078912b19815ac824db66660cf217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cfb0cfda085ce661aa9108d8d828e8d95a1b84/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55af811bab8b557b20b99005aef08bee13ea0472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55af811bab8b557b20b99005aef08bee13ea0472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55af811bab8b557b20b99005aef08bee13ea0472"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "99801b51438b524dcc9c2b7e517f665328ba7e59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71cfb0cfda085ce661aa9108d8d828e8d95a1b84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71cfb0cfda085ce661aa9108d8d828e8d95a1b84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "patch": "@@ -1,3 +1,11 @@\n+2014-03-24  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/aarch64/vect-abs.c (dg-options): Add -std=c99.\n+\t(LONG_LONG): Use LLONG.\n+\t(set_rvector_long): Explicitly return void.\n+\t(set_vector_long): Likewise.\n+\t(check_vector_long): Likewise.\n+\n 2014-03-24  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/div-by-zero-4.c: Don't include limits.h.  Define"}, {"sha": "9e0ed99ca6a0e09bc9d96b04d3b46258e98dd49c", "filename": "gcc/testsuite/gcc.target/aarch64/vect-abs.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71cfb0cfda085ce661aa9108d8d828e8d95a1b84/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71cfb0cfda085ce661aa9108d8d828e8d95a1b84/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs.c?ref=71cfb0cfda085ce661aa9108d8d828e8d95a1b84", "patch": "@@ -1,6 +1,6 @@\n \n /* { dg-do run } */\n-/* { dg-options \"-O3\" } */\n+/* { dg-options \"-O3 -std=c99\" } */\n \n #include \"limits.h\"\n \n@@ -37,8 +37,9 @@ extern void abort (void);\n SET_RVEC (8, SCHAR)\n SET_RVEC (16, SHRT)\n SET_RVEC (32, INT)\n-SET_RVEC (64, LONG_LONG)\n+SET_RVEC (64, LLONG)\n \n+void\n set_rvector_long (pRLONG a)\n {\n   int i;\n@@ -49,8 +50,9 @@ set_rvector_long (pRLONG a)\n SET_VEC (8, SCHAR)\n SET_VEC (16, SHRT)\n SET_VEC (32, INT)\n-SET_VEC (64, LONG_LONG)\n+SET_VEC (64, LLONG)\n \n+void\n set_vector_long (long *__restrict__ a)\n {\n   long i;\n@@ -63,6 +65,7 @@ CHECK_VEC (16)\n CHECK_VEC (32)\n CHECK_VEC (64)\n \n+void\n check_vector_long (long *__restrict__ a, long *__restrict__ b)\n {\n   long i;"}]}