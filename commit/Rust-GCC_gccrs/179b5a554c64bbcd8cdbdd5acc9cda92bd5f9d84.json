{"sha": "179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5YjVhNTU0YzY0YmJjZDhjZGJkZDVhY2M5Y2RhOTJiZDVmOWQ4NA==", "commit": {"author": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-09-11T20:55:37Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-09-11T20:55:37Z"}, "message": "re PR target/58757 (Advertise the lack of denormal support on alpha without -mieee)\n\n2014-09-11  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR target/58757\ngcc/c-family/\n\t* c-cppbuiltin.c (builtin_define_float_constants): Correct\n\t__*_DENORM_MIN__ without denormals.\ngcc/\n\t* ginclude/float.h (FLT_TRUE_MIN, DBL_TRUE_MIN, LDBL_TRUE_MIN):\n\tDirectly forward to __*_DENORM_MIN__.\ngcc/testsuite/\n\t* gcc.dg/c11-true_min-1.c: New testcase.\n\nFrom-SVN: r215191", "tree": {"sha": "132aa47f8b5f8cea4bba7a54fa01012b8a9a1a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/132aa47f8b5f8cea4bba7a54fa01012b8a9a1a10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/comments", "author": null, "committer": null, "parents": [{"sha": "a827d9b1943e966713fbc5cd8f56722791f524aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a827d9b1943e966713fbc5cd8f56722791f524aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a827d9b1943e966713fbc5cd8f56722791f524aa"}], "stats": {"total": 83, "additions": 49, "deletions": 34}, "files": [{"sha": "117f7f3e3788edd0d00831eb064b6fa3aae35da6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -1,3 +1,9 @@\n+2014-09-11  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR target/58757\n+\t* ginclude/float.h (FLT_TRUE_MIN, DBL_TRUE_MIN, LDBL_TRUE_MIN):\n+\tDirectly forward to __*_DENORM_MIN__.\n+\n 2014-09-11  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtl.h (LABEL_REF_LABEL): New macro."}, {"sha": "ca22822649ac05792f0d58173e06c132df027fd9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -1,3 +1,9 @@\n+2014-09-11  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR target/58757\n+\t* c-cppbuiltin.c (builtin_define_float_constants): Correct\n+\t__*_DENORM_MIN__ without denormals.\n+\n 2014-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-ubsan.c (ubsan_instrument_division, ubsan_instrument_shift,"}, {"sha": "da20676656094f9d0e9558c353dde33b878aa7ae", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -270,21 +270,14 @@ builtin_define_float_constants (const char *name_prefix,\n       sprintf (buf, \"0x1p%d\", 1 - fmt->p);\n   builtin_define_with_hex_fp_value (name, type, decimal_dig, buf, fp_suffix, fp_cast);\n \n-  /* For C++ std::numeric_limits<T>::denorm_min.  The minimum denormalized\n-     positive floating-point number, b**(emin-p).  Zero for formats that\n-     don't support denormals.  */\n+  /* For C++ std::numeric_limits<T>::denorm_min and C11 *_TRUE_MIN.\n+     The minimum denormalized positive floating-point number, b**(emin-p).\n+     The minimum normalized positive floating-point number for formats\n+     that don't support denormals.  */\n   sprintf (name, \"__%s_DENORM_MIN__\", name_prefix);\n-  if (fmt->has_denorm)\n-    {\n-      sprintf (buf, \"0x1p%d\", fmt->emin - fmt->p);\n-      builtin_define_with_hex_fp_value (name, type, decimal_dig,\n-\t\t\t\t\tbuf, fp_suffix, fp_cast);\n-    }\n-  else\n-    {\n-      sprintf (buf, \"0.0%s\", fp_suffix);\n-      builtin_define_with_value (name, buf, 0);\n-    }\n+  sprintf (buf, \"0x1p%d\", fmt->emin - (fmt->has_denorm ? fmt->p : 1));\n+  builtin_define_with_hex_fp_value (name, type, decimal_dig,\n+\t\t\t\t    buf, fp_suffix, fp_cast);\n \n   sprintf (name, \"__%s_HAS_DENORM__\", name_prefix);\n   builtin_define_with_value (name, fmt->has_denorm ? \"1\" : \"0\", 0);"}, {"sha": "4927f3614ad909975b6905070cc72d9c63a9d020", "filename": "gcc/ginclude/float.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fginclude%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Fginclude%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Ffloat.h?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -178,21 +178,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef FLT_TRUE_MIN\n #undef DBL_TRUE_MIN\n #undef LDBL_TRUE_MIN\n-#if __FLT_HAS_DENORM__\n #define FLT_TRUE_MIN\t__FLT_DENORM_MIN__\n-#else\n-#define FLT_TRUE_MIN\t__FLT_MIN__\n-#endif\n-#if __DBL_HAS_DENORM__\n #define DBL_TRUE_MIN\t__DBL_DENORM_MIN__\n-#else\n-#define DBL_TRUE_MIN\t__DBL_MIN__\n-#endif\n-#if __LDBL_HAS_DENORM__\n #define LDBL_TRUE_MIN\t__LDBL_DENORM_MIN__\n-#else\n-#define LDBL_TRUE_MIN\t__LDBL_MIN__\n-#endif\n \n #endif /* C11 */\n "}, {"sha": "3aba1c7026af64072e27dd35f37971a028ac5533", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -1,3 +1,8 @@\n+2014-09-11  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR target/58757\n+\t* gcc.dg/c11-true_min-1.c: New testcase.\n+\n 2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61489\n@@ -10,14 +15,14 @@\n \n 2014-09-11  Bernd Schmidt  <bernds@codesourcery.com>\n \n-        * gcc.dg/compat/struct-by-value-13_main.c (struct_by_value_13_x):\n-        Fix declaration.\n-        * gcc.dg/compat/struct-by-value-16a_main.c (struct_by_value_16a_x):\n-        Fix declaration.\n-        * gcc.dg/compat/struct-by-value-17a_main.c (struct_by_value_17a_x):\n-        Fix declaration.\n-        * gcc.dg/compat/struct-by-value-18a_main.c (struct_by_value_18a_x):\n-        Fix declaration.\n+\t* gcc.dg/compat/struct-by-value-13_main.c (struct_by_value_13_x):\n+\tFix declaration.\n+\t* gcc.dg/compat/struct-by-value-16a_main.c (struct_by_value_16a_x):\n+\tFix declaration.\n+\t* gcc.dg/compat/struct-by-value-17a_main.c (struct_by_value_17a_x):\n+\tFix declaration.\n+\t* gcc.dg/compat/struct-by-value-18a_main.c (struct_by_value_18a_x):\n+\tFix declaration.\n \n 2014-09-10  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "dcb761ccd531d8e3eebe9c75c3a51191b4715cf3", "filename": "gcc/testsuite/gcc.dg/c11-true_min-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-true_min-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-true_min-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-true_min-1.c?ref=179b5a554c64bbcd8cdbdd5acc9cda92bd5f9d84", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-options \"-std=c11\" } */\n+\n+/* Test that the smallest positive value is not 0. This needs to be true\n+   even when denormals are not supported, so we do not pass any flag\n+   like -mieee.  If it fails on alpha, see PR 58757.  */\n+\n+#include <float.h>\n+\n+int main(){\n+  volatile float f = FLT_TRUE_MIN;\n+  volatile double d = DBL_TRUE_MIN;\n+  volatile long double l = LDBL_TRUE_MIN;\n+  if (f == 0 || d == 0 || l == 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}