{"sha": "01ce962b942349db572123054f5a352d5c51f222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjZTk2MmI5NDIzNDlkYjU3MjEyMzA1NGY1YTM1MmQ1YzUxZjIyMg==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "2000-10-10T23:09:08Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "2000-10-10T23:09:08Z"}, "message": "LocaleData_en.java (monetarySeparator): Added.\n\n\t* gnu/gcj/text/LocaleData_en.java (monetarySeparator): Added.\n\t* java/sql/Date.java (serialVersionUID): New field.\n\t* java/sql/Time.java (serialVersionUID): New field.\n\t* java/sql/Timestamp.java (serialVersionUID): New field.\n\t* java/text/ChoiceFormat.java (serialVersionUID): New field.\n\t* java/text/DateFormat.java (getDateTimeInstance (int)): Removed.\n\t* java/text/DateFormatSymbols.java (serialVersionUID): New field.\n\t* java/text/DecimalFormat.java (serialVersionOnStream): New field.\n\t(readObject): New serialization method.\n\t* java/text/DecimalFormatSymbols.java (monetarySeparator): New field.\n\t(serialVersionOnStream): New field.\n\t(readObject): New serialization method.\n\t(getMonetaryDecimalSeparator): New method.\n\t(setMonetaryDecimalSeparator): New method.\n\t* java/text/NumberFormat.java (maxFractionDigits): New field.\n\t(maxIntegerDigits): New field.\n\t(minFractionDigits): New field.\n\t(minIntegerDigits): New field.\n\t(serialVersionOnStream): New field.\n\t(serialVersionUID): New field.\n\t(readObject): New serialization method.\n\t(writeObject): New serialization method.\n\t* java/text/SimpleDateFormat.java (defaultCenturyStart): Initialized.\n\t(serialVersionOnStream): New field.\n\t(serialVersionUID): New field.\n\t(readObject): New serialization method.\n\nSerialization mods.\n\nFrom-SVN: r36831", "tree": {"sha": "73981b1d015f53aedc47744c8b4d7eb03d1d690b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73981b1d015f53aedc47744c8b4d7eb03d1d690b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ce962b942349db572123054f5a352d5c51f222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ce962b942349db572123054f5a352d5c51f222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ce962b942349db572123054f5a352d5c51f222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ce962b942349db572123054f5a352d5c51f222/comments", "author": null, "committer": null, "parents": [{"sha": "2e165c53deb61806019c4a72f006abaa1c2379b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e165c53deb61806019c4a72f006abaa1c2379b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e165c53deb61806019c4a72f006abaa1c2379b3"}], "stats": {"total": 192, "additions": 169, "deletions": 23}, "files": [{"sha": "16f75a0d2bc756e00088de3db463b41cc77e547b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,3 +1,32 @@\n+2000-10-10  Warren Levy  <warrenl@cygnus.com>\n+\n+\t* gnu/gcj/text/LocaleData_en.java (monetarySeparator): Added.\n+\t* java/sql/Date.java (serialVersionUID): New field.\n+\t* java/sql/Time.java (serialVersionUID): New field.\n+\t* java/sql/Timestamp.java (serialVersionUID): New field.\n+\t* java/text/ChoiceFormat.java (serialVersionUID): New field.\n+\t* java/text/DateFormat.java (getDateTimeInstance (int)): Removed.\n+\t* java/text/DateFormatSymbols.java (serialVersionUID): New field.\n+\t* java/text/DecimalFormat.java (serialVersionOnStream): New field.\n+\t(readObject): New serialization method.\n+\t* java/text/DecimalFormatSymbols.java (monetarySeparator): New field.\n+\t(serialVersionOnStream): New field.\n+\t(readObject): New serialization method.\n+\t(getMonetaryDecimalSeparator): New method.\n+\t(setMonetaryDecimalSeparator): New method.\n+\t* java/text/NumberFormat.java (maxFractionDigits): New field.\n+\t(maxIntegerDigits): New field.\n+\t(minFractionDigits): New field.\n+\t(minIntegerDigits): New field.\n+\t(serialVersionOnStream): New field.\n+\t(serialVersionUID): New field.\n+\t(readObject): New serialization method.\n+\t(writeObject): New serialization method.\n+\t* java/text/SimpleDateFormat.java (defaultCenturyStart): Initialized.\n+\t(serialVersionOnStream): New field.\n+\t(serialVersionUID): New field.\n+\t(readObject): New serialization method.\n+\n 2000-10-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.in (GCJ): Avoid bogus error message when looking for"}, {"sha": "cd13db0405d61cb7bd8d6d14f3d9fe427b146e7d", "filename": "libjava/gnu/gcj/text/LocaleData_en.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fgnu%2Fgcj%2Ftext%2FLocaleData_en.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fgnu%2Fgcj%2Ftext%2FLocaleData_en.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Ftext%2FLocaleData_en.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,6 +1,6 @@\n // Generic English locale data for java.text.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -48,6 +48,7 @@ public final class LocaleData_en extends ListResourceBundle\n     { \"groupingSeparator\", \",\" },\n     { \"infinity\", \"\\u221e\" },\n     { \"minusSign\", \"-\" },\n+    { \"monetarySeparator\", \".\" },\n     { \"NaN\", \"\\ufffd\" },\n     { \"patternSeparator\", \";\" },\n     { \"percent\", \"%\" },"}, {"sha": "88ae8595f0df13179bedf9e94d9c60392ee1cecc", "filename": "libjava/java/sql/Date.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FDate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FDate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FDate.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,5 +1,5 @@\n /* Date.java -- Wrapper around java.util.Date\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +35,7 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n-public class Date extends java.util.Date implements java.io.Serializable\n+public class Date extends java.util.Date\n {\n \n /*\n@@ -47,6 +47,11 @@ public class Date extends java.util.Date implements java.io.Serializable\n   */\n private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n \n+/**\n+  * This is the serialization UID for this class.\n+  */\n+private static final long serialVersionUID = 1511598038487230103L;\n+\n /*************************************************************************/\n \n /*"}, {"sha": "3e0b2716b884749ce48ac685649254da93b21fff", "filename": "libjava/java/sql/Time.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FTime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FTime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FTime.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,5 +1,5 @@\n /* Time.java -- Wrapper around java.util.Date\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +35,7 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n-public class Time extends java.util.Date implements java.io.Serializable\n+public class Time extends java.util.Date\n {\n \n /*\n@@ -47,6 +47,11 @@ public class Time extends java.util.Date implements java.io.Serializable\n   */\n private static SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm:ss\");\n \n+/**\n+  * This is the serialization UID for this class.\n+  */\n+private static final long serialVersionUID = 8397324403548013681L;\n+\n /*************************************************************************/\n \n /*"}, {"sha": "f13b3a9d3f59ba940932871edad7b95b15bae8a5", "filename": "libjava/java/sql/Timestamp.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FTimestamp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Fsql%2FTimestamp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FTimestamp.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,5 +1,5 @@\n /* Time.java -- Wrapper around java.util.Date\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,7 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n-public class Timestamp extends java.util.Date implements java.io.Serializable\n+public class Timestamp extends java.util.Date\n {\n \n /*\n@@ -56,6 +56,11 @@ public class Timestamp extends java.util.Date implements java.io.Serializable\n private static SimpleDateFormat format_sdf =\n   new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n \n+/**\n+  * This is the serialization UID for this class.\n+  */\n+private static final long serialVersionUID = 3581463369166924961L;\n+\n /*************************************************************************/\n \n /*"}, {"sha": "584ece5c0e4c55258dd2a9c806c777ded88c5f99", "filename": "libjava/java/text/ChoiceFormat.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FChoiceFormat.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -307,4 +307,6 @@ public String toPattern ()\n   private static final int mantissaBits = 52;\n   // Number of exponent bits in a double.\n   private static final int exponentBits = 11;\n+\n+  private static final long serialVersionUID = 1795184449645032964L;\n }"}, {"sha": "604a1d5b2e5ce16f9e16d2c71929ae91c64f74ef", "filename": "libjava/java/text/DateFormat.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormat.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -219,11 +219,6 @@ public static final DateFormat getDateTimeInstance ()\n     return getDateTimeInstance (DEFAULT, DEFAULT, Locale.getDefault());\n   }\n \n-  public static final DateFormat getDateTimeInstance (int style)\n-  {\n-    return getDateTimeInstance (style, style, Locale.getDefault());\n-  }\n-\n   public static final DateFormat getDateTimeInstance (int dateStyle, \n \t\t\t\t\t\t      int timeStyle)\n   {"}, {"sha": "b63bf3692094cc51d3ba831a84504228029b8c72", "filename": "libjava/java/text/DateFormatSymbols.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -33,6 +33,8 @@ public class DateFormatSymbols extends Object\n   private String[] weekdays;\n   private String[][] zoneStrings;\n \n+  private static final long serialVersionUID = -5987973545549424702L;\n+\n   private static final String[] ampmsDefault = {\"AM\", \"PM\" };\n   private static final String[] erasDefault = {\"BC\", \"AD\" };\n   // localPatternCharsDefault is used by SimpleDateFormat."}, {"sha": "42c81078cb29c21fee12b6ab282b6dcb6fc2cbf9", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,6 +1,6 @@\n // DecimalFormat.java - Localized number formatting.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -13,14 +13,16 @@\n import java.util.Locale;\n import java.util.MissingResourceException;\n import java.util.ResourceBundle;\n+import java.io.ObjectInputStream;\n+import java.io.IOException;\n \n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date March 4, 1999\n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 from http://www.javasoft.com.\n- * Status:  Believed complete and correct to 1.2, except serialization.\n+ * Status:  Believed complete and correct to 1.2.\n  * Note however that the docs are very unclear about how format parsing\n  * should work.  No doubt there are problems here.\n  */\n@@ -976,8 +978,21 @@ public String toPattern ()\n   private String negativeSuffix;\n   private String positivePrefix;\n   private String positiveSuffix;\n+  private int serialVersionOnStream = 1;\n   private DecimalFormatSymbols symbols;\n   private boolean useExponentialNotation;\n+  private static final long serialVersionUID = 864413376551465018L;\n+\n+  private void readObject(ObjectInputStream stream)\n+    throws IOException, ClassNotFoundException\n+  {\n+    stream.defaultReadObject();\n+    if (serialVersionOnStream < 1)\n+      {\n+        useExponentialNotation = false;\n+\tserialVersionOnStream = 1;\n+      }\n+  }\n \n   // The locale-independent pattern symbols happen to be the same as\n   // the US symbols."}, {"sha": "2f8a0a126dd3ecfd04bab828c00d24e215795f6d", "filename": "libjava/java/text/DecimalFormatSymbols.java", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -1,6 +1,6 @@\n // DecimalFormatSymbols.java - Symbols used to format numbers.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -14,14 +14,16 @@\n import java.util.Locale;\n import java.util.MissingResourceException;\n import java.util.ResourceBundle;\n+import java.io.ObjectInputStream;\n+import java.io.IOException;\n \n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date February 24, 1999\n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 from http://www.javasoft.com.\n- * Status:  Believed complete and correct to 1.2, except serialization.\n+ * Status:  Believed complete and correct to 1.2.\n  */\n \n public final class DecimalFormatSymbols implements Cloneable, Serializable\n@@ -40,6 +42,7 @@ private DecimalFormatSymbols (DecimalFormatSymbols orig)\n       this.groupingSeparator = orig.groupingSeparator;\n       this.infinity = orig.infinity;\n       this.intlCurrencySymbol = orig.intlCurrencySymbol;\n+      this.monetarySeparator = orig.monetarySeparator;\n       this.minusSign = orig.minusSign;\n       this.NaN = orig.NaN;\n       this.patternSeparator = orig.patternSeparator;\n@@ -107,6 +110,14 @@ public DecimalFormatSymbols (Locale loc)\n       infinity = safeGetString (res, \"infinity\", \"\\u221e\");\n       // FIXME: default?\n       intlCurrencySymbol = safeGetString (res, \"intlCurrencySymbol\", \"$\");\n+      try\n+        {\n+\t  monetarySeparator = safeGetChar (res, \"monetarySeparator\", '.');\n+\t}\n+      catch (MissingResourceException x)\n+        {\n+\t  monetarySeparator = decimalSeparator;\n+\t}\n       minusSign = safeGetChar (res, \"minusSign\", '-');\n       NaN = safeGetString (res, \"NaN\", \"\\ufffd\");\n       patternSeparator = safeGetChar (res, \"patternSeparator\", ';');\n@@ -128,6 +139,7 @@ public boolean equals (Object obj)\n \t      && infinity.equals(dfs.infinity)\n \t      && intlCurrencySymbol.equals(dfs.intlCurrencySymbol)\n \t      && minusSign == dfs.minusSign\n+\t      && monetarySeparator == dfs.monetarySeparator\n \t      && NaN.equals(dfs.NaN)\n \t      && patternSeparator == dfs.patternSeparator\n \t      && percent == dfs.percent\n@@ -176,6 +188,11 @@ public char getMinusSign ()\n       return minusSign;\n     }\n \n+  public char getMonetaryDecimalSeparator ()\n+    {\n+      return monetarySeparator;\n+    }\n+\n   public String getNaN ()\n     {\n       return NaN;\n@@ -250,6 +267,11 @@ public void setMinusSign (char minusSign)\n       this.minusSign = minusSign;\n     }\n \n+  public void setMonetaryDecimalSeparator (char decimalSep)\n+    {\n+      monetarySeparator = decimalSep;\n+    }\n+\n   public void setNaN (String nan)\n     {\n       NaN = nan;\n@@ -285,9 +307,24 @@ public void setZeroDigit (char zeroDigit)\n   private String infinity;\n   private String intlCurrencySymbol;\n   private char minusSign;\n+  private char monetarySeparator;\n   private String NaN;\n   private char patternSeparator;\n   private char percent;\n   private char perMill;\n+  private int serialVersionOnStream = 1;\n   private char zeroDigit;\n+  private static final long serialVersionUID = 5772796243397350300L;\n+\n+  private void readObject(ObjectInputStream stream)\n+    throws IOException, ClassNotFoundException\n+  {\n+    stream.defaultReadObject();\n+    if (serialVersionOnStream < 1)\n+      {\n+        monetarySeparator = decimalSeparator;\n+\texponential = 'E';\n+\tserialVersionOnStream = 1;\n+      }\n+  }\n }"}, {"sha": "f3f36e9c3df091f9bbc7915ad2aebd8b1257d264", "filename": "libjava/java/text/NumberFormat.java", "status": "modified", "additions": 38, "deletions": 5, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FNumberFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FNumberFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FNumberFormat.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -11,15 +11,17 @@\n import java.util.Locale;\n import java.util.ResourceBundle;\n import java.util.MissingResourceException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.IOException;\n \n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date March 4, 1999\n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 from http://www.javasoft.com.\n- * Status:  Believed complete and correct to 1.2, except serialization\n- *          and getAvailableLocales.\n+ * Status:  Believed complete and correct to 1.2, except getAvailableLocales.\n  */\n \n public abstract class NumberFormat extends Format implements Cloneable\n@@ -249,13 +251,44 @@ public final String format (double number)\n     }\n \n   // These field names are fixed by the serialization spec.\n-  // FIXME: serialization spec also mentions `byte' versions of the\n-  // min/max fields.  We have no use for those, so for now they are\n-  // omitted.\n   protected boolean groupingUsed;\n   protected int maximumFractionDigits;\n+  private byte maxFractionDigits;\n   protected int maximumIntegerDigits;\n+  private byte maxIntegerDigits;\n   protected int minimumFractionDigits;\n+  private byte minFractionDigits;\n   protected int minimumIntegerDigits;\n+  private byte minIntegerDigits;\n   protected boolean parseIntegerOnly;\n+  private int serialVersionOnStream;\n+  private static final long serialVersionUID = -2308460125733713944L;\n+\n+  private void readObject(ObjectInputStream stream)\n+    throws IOException, ClassNotFoundException\n+  {\n+    stream.defaultReadObject();\n+    if (serialVersionOnStream < 1)\n+      {\n+        maximumFractionDigits = maxFractionDigits;\n+\tmaximumIntegerDigits = maxIntegerDigits;\n+\tminimumFractionDigits = minFractionDigits;\n+\tminimumIntegerDigits = minIntegerDigits;\n+\tserialVersionOnStream = 1;\n+      }\n+  }\n+\n+  private void writeObject(ObjectOutputStream stream) throws IOException\n+  {\n+    maxFractionDigits = maximumFractionDigits < Byte.MAX_VALUE ?\n+      (byte) maximumFractionDigits : Byte.MAX_VALUE;\n+    maxIntegerDigits = maximumIntegerDigits < Byte.MAX_VALUE ?\n+      (byte) maximumIntegerDigits : Byte.MAX_VALUE;\n+    minFractionDigits = minimumFractionDigits < Byte.MAX_VALUE ?\n+      (byte) minimumFractionDigits : Byte.MAX_VALUE;\n+    minIntegerDigits = minimumIntegerDigits < Byte.MAX_VALUE ?\n+      (byte) minimumIntegerDigits : Byte.MAX_VALUE;\n+    serialVersionOnStream = 1;\n+    stream.defaultWriteObject();\n+  }\n }"}, {"sha": "feb64f0d02d7493bdd0245e173eeb1ec47bfb0dd", "filename": "libjava/java/text/SimpleDateFormat.java", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ce962b942349db572123054f5a352d5c51f222/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=01ce962b942349db572123054f5a352d5c51f222", "patch": "@@ -9,21 +9,38 @@\n package java.text;\n \n import java.util.*;\n+import java.io.ObjectInputStream;\n+import java.io.IOException;\n \n /**\n  * @author Per Bothner <bothner@cygnus.com>\n  * @date October 25, 1998.\n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 beta from http://www.javasoft.com.\n- * Status:  parse is not implemented.\n+ * Status:  Believed complete and correct to 1.2.\n  */\n \n public class SimpleDateFormat extends DateFormat\n {\n-  private Date defaultCenturyStart;\n+  // Serialization fields.\n+  private Date defaultCenturyStart = new Date();\n   private DateFormatSymbols formatData;\n   private String pattern;\n+  private int serialVersionOnStream = 1;\n+  private static final long serialVersionUID = 4774881970558875024L;\n+\n+  // Serialization method.\n+  private void readObject(ObjectInputStream stream)\n+    throws IOException, ClassNotFoundException\n+  {\n+    stream.defaultReadObject();\n+    if (serialVersionOnStream < 1)\n+      {\n+        defaultCenturyStart = new Date();\n+\tserialVersionOnStream = 1;\n+      }\n+  }\n \n   public SimpleDateFormat ()\n   {"}]}