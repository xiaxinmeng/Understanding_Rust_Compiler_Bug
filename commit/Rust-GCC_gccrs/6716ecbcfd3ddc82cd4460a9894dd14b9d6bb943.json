{"sha": "6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcxNmVjYmNmZDNkZGM4MmNkNDQ2MGE5ODk0ZGQxNGI5ZDZiYjk0Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-14T00:38:32Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-14T00:38:32Z"}, "message": "i386.c (override_options): Move loop to set default tuning to correct place.\n\n\t* config/i386/i386.c (override_options): Move loop to set default\n\ttuning to correct place.\n\nFrom-SVN: r90606", "tree": {"sha": "0caec119f4a974759e5c28af95d69bc41fcfddfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0caec119f4a974759e5c28af95d69bc41fcfddfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b62acd2a2856955a15ff3cd5fce547ebb25e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b62acd2a2856955a15ff3cd5fce547ebb25e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7b62acd2a2856955a15ff3cd5fce547ebb25e30"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "a98165bef9fbca42fa0119345bea8c3be5fcb867", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "patch": "@@ -1,3 +1,8 @@\n+2004-11-14  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/i386.c (override_options): Move loop to set default\n+\ttuning to correct place.\n+\n 2004-11-13  Zak Kipling  <zak@transversal.com>\n \n \tPR target/18300"}, {"sha": "997863731f969bf14d547d6e61b77b3ad5a17f71", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6716ecbcfd3ddc82cd4460a9894dd14b9d6bb943", "patch": "@@ -1305,6 +1305,19 @@ override_options (void)\n \t  target_flags |= MASK_SSE3;\n \tif (processor_alias_table[i].flags & PTA_PREFETCH_SSE)\n \t  x86_prefetch_sse = true;\n+\tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n+\t  error (\"CPU you selected does not support x86-64 \"\n+\t\t \"instruction set\");\n+\tbreak;\n+      }\n+\n+  if (i == pta_size)\n+    error (\"bad value (%s) for -march= switch\", ix86_arch_string);\n+\n+  for (i = 0; i < pta_size; i++)\n+    if (! strcmp (ix86_tune_string, processor_alias_table[i].name))\n+      {\n+\tix86_tune = processor_alias_table[i].processor;\n \tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n \t  {\n \t    if (ix86_tune_defaulted)\n@@ -1320,19 +1333,6 @@ override_options (void)\n \t      error (\"CPU you selected does not support x86-64 \"\n \t\t     \"instruction set\");\n \t  }\n-\tbreak;\n-      }\n-\n-  if (i == pta_size)\n-    error (\"bad value (%s) for -march= switch\", ix86_arch_string);\n-\n-  for (i = 0; i < pta_size; i++)\n-    if (! strcmp (ix86_tune_string, processor_alias_table[i].name))\n-      {\n-\tix86_tune = processor_alias_table[i].processor;\n-\tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n-\t  error (\"CPU you selected does not support x86-64 instruction set\");\n-\n         /* Intel CPUs have always interpreted SSE prefetch instructions as\n \t   NOPs; so, we can enable SSE prefetch instructions even when\n \t   -mtune (rather than -march) points us to a processor that has them."}]}