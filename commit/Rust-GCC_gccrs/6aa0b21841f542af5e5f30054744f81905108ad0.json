{"sha": "6aa0b21841f542af5e5f30054744f81905108ad0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhMGIyMTg0MWY1NDJhZjVlNWYzMDA1NDc0NGY4MTkwNTEwOGFkMA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-06-09T15:23:38Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-09T15:23:38Z"}, "message": "freebsd.S: Add missing file.\n\n2009-06-09  Andrew Haley  <aph@redhat.com>\n\n        * src/x86/freebsd.S: Add missing file.\n\nFrom-SVN: r148313", "tree": {"sha": "5cb1555a1996e189995e860a105e20a9659f1891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cb1555a1996e189995e860a105e20a9659f1891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa0b21841f542af5e5f30054744f81905108ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa0b21841f542af5e5f30054744f81905108ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa0b21841f542af5e5f30054744f81905108ad0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa0b21841f542af5e5f30054744f81905108ad0/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "479c15c22a62528830a64fed4e8ae8f5456354bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479c15c22a62528830a64fed4e8ae8f5456354bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479c15c22a62528830a64fed4e8ae8f5456354bb"}], "stats": {"total": 462, "additions": 462, "deletions": 0}, "files": [{"sha": "a1e7411c3f7e5dfca3c99126003a01353a1cfe18", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa0b21841f542af5e5f30054744f81905108ad0/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa0b21841f542af5e5f30054744f81905108ad0/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=6aa0b21841f542af5e5f30054744f81905108ad0", "patch": "@@ -1,3 +1,7 @@\n+2009-06-09  Andrew Haley  <aph@redhat.com>\n+\n+\t* src/x86/freebsd.S: Add missing file.\n+\n 2009-06-08  Andrew Haley  <aph@redhat.com>\n \n \tImport from libffi 3.0.8:"}, {"sha": "afde513164e4b5ebbf0bd2acc426a32d2d7a9652", "filename": "libffi/src/x86/freebsd.S", "status": "added", "additions": 458, "deletions": 0, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa0b21841f542af5e5f30054744f81905108ad0/libffi%2Fsrc%2Fx86%2Ffreebsd.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa0b21841f542af5e5f30054744f81905108ad0/libffi%2Fsrc%2Fx86%2Ffreebsd.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Ffreebsd.S?ref=6aa0b21841f542af5e5f30054744f81905108ad0", "patch": "@@ -0,0 +1,458 @@\n+/* -----------------------------------------------------------------------\n+   freebsd.S - Copyright (c) 1996, 1998, 2001, 2002, 2003, 2005  Red Hat, Inc.\n+\t       Copyright (c) 2008  Bj\u00f6rn K\u00f6nig\n+\t\n+   X86 Foreign Function Interface for FreeBSD\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\n+   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+   NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n+   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n+   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n+   DEALINGS IN THE SOFTWARE.\n+----------------------------------------------------------------------- */\n+\n+#ifndef __x86_64__\n+\n+#define LIBFFI_ASM\t\n+#include <fficonfig.h>\n+#include <ffi.h>\n+\n+.text\n+\n+.globl ffi_prep_args\n+\n+\t.align 4\n+.globl ffi_call_SYSV\n+        .type    ffi_call_SYSV,@function\n+\n+ffi_call_SYSV:\n+.LFB1:\n+        pushl %ebp\n+.LCFI0:\n+        movl  %esp,%ebp\n+.LCFI1:\n+\t/* Make room for all of the new args.  */\n+\tmovl  16(%ebp),%ecx\n+\tsubl  %ecx,%esp\n+\n+\tmovl  %esp,%eax\n+\n+\t/* Place all of the ffi_prep_args in position  */\n+\tpushl 12(%ebp)\n+\tpushl %eax\n+\tcall  *8(%ebp)\n+\n+\t/* Return stack to previous state and call the function  */\n+\taddl  $8,%esp\t\n+\n+\tcall  *28(%ebp)\n+\n+\t/* Load %ecx with the return type code  */\n+\tmovl  20(%ebp),%ecx\t\n+\n+\t/* Protect %esi.  We're going to pop it in the epilogue.  */\n+\tpushl %esi\n+\n+\t/* If the return value pointer is NULL, assume no return value.  */\n+\tcmpl  $0,24(%ebp)\n+\tjne  0f\n+\n+\t/* Even if there is no space for the return value, we are \n+\t   obliged to handle floating-point values.  */\n+\tcmpl  $FFI_TYPE_FLOAT,%ecx\n+\tjne   noretval\n+\tfstp  %st(0)\n+\n+        jmp   epilogue\n+\n+0:\n+\tcall  1f\n+\n+.Lstore_table:\n+\t.long\tnoretval-.Lstore_table\t/* FFI_TYPE_VOID */\n+\t.long\tretint-.Lstore_table\t/* FFI_TYPE_INT */\n+\t.long\tretfloat-.Lstore_table\t/* FFI_TYPE_FLOAT */\n+\t.long\tretdouble-.Lstore_table\t/* FFI_TYPE_DOUBLE */\n+\t.long\tretlongdouble-.Lstore_table\t/* FFI_TYPE_LONGDOUBLE */\n+\t.long\tretuint8-.Lstore_table\t/* FFI_TYPE_UINT8 */\n+\t.long\tretsint8-.Lstore_table\t/* FFI_TYPE_SINT8 */\n+\t.long\tretuint16-.Lstore_table\t/* FFI_TYPE_UINT16 */\n+\t.long\tretsint16-.Lstore_table\t/* FFI_TYPE_SINT16 */\n+\t.long\tretint-.Lstore_table\t/* FFI_TYPE_UINT32 */\n+\t.long\tretint-.Lstore_table\t/* FFI_TYPE_SINT32 */\n+\t.long\tretint64-.Lstore_table\t/* FFI_TYPE_UINT64 */\n+\t.long\tretint64-.Lstore_table\t/* FFI_TYPE_SINT64 */\n+\t.long\tretstruct-.Lstore_table\t/* FFI_TYPE_STRUCT */\n+\t.long\tretint-.Lstore_table\t/* FFI_TYPE_POINTER */\n+\t.long   retstruct1b-.Lstore_table\t/* FFI_TYPE_SMALL_STRUCT_1B */\n+\t.long   retstruct2b-.Lstore_table\t/* FFI_TYPE_SMALL_STRUCT_2B */\n+\n+1:\n+\tpop  %esi\n+\tadd  (%esi, %ecx, 4), %esi\n+\tjmp  *%esi\n+\n+\t/* Sign/zero extend as appropriate.  */\n+retsint8:\n+\tmovsbl  %al, %eax\n+\tjmp  retint\n+\n+retsint16:\n+\tmovswl  %ax, %eax\n+\tjmp  retint\n+\n+retuint8:\n+\tmovzbl  %al, %eax\n+\tjmp  retint\n+\n+retuint16:\n+\tmovzwl  %ax, %eax\n+\tjmp  retint\n+\n+retfloat:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\t\n+\tfstps (%ecx)\n+\tjmp   epilogue\n+\n+retdouble:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\t\n+\tfstpl (%ecx)\n+\tjmp   epilogue\n+\n+retlongdouble:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\t\n+\tfstpt (%ecx)\n+\tjmp   epilogue\n+\t\n+retint64:\t\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\t\n+\tmovl  %eax,0(%ecx)\n+\tmovl  %edx,4(%ecx)\n+\tjmp   epilogue\n+\t\n+retstruct1b:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\n+\tmovb  %al,0(%ecx)\n+\tjmp   epilogue\n+\n+retstruct2b:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\n+\tmovw  %ax,0(%ecx)\n+\tjmp   epilogue\n+\n+retint:\n+\t/* Load %ecx with the pointer to storage for the return value  */\n+\tmovl  24(%ebp),%ecx\t\n+\tmovl  %eax,0(%ecx)\n+\n+retstruct:\n+\t/* Nothing to do!  */\n+\n+noretval:\n+epilogue:\n+        popl %esi\n+        movl %ebp,%esp\n+        popl %ebp\n+        ret\n+.LFE1:\n+.ffi_call_SYSV_end:\n+        .size    ffi_call_SYSV,.ffi_call_SYSV_end-ffi_call_SYSV\n+\n+\t.align\t4\n+FFI_HIDDEN (ffi_closure_SYSV)\n+.globl ffi_closure_SYSV\n+\t.type\tffi_closure_SYSV, @function\n+\n+ffi_closure_SYSV:\n+.LFB2:\n+\tpushl\t%ebp\n+.LCFI2:\n+\tmovl\t%esp, %ebp\n+.LCFI3:\n+\tsubl\t$40, %esp\n+\tleal\t-24(%ebp), %edx\n+\tmovl\t%edx, -12(%ebp)\t/* resp */\n+\tleal\t8(%ebp), %edx\n+\tmovl\t%edx, 4(%esp)\t/* args = __builtin_dwarf_cfa () */\n+\tleal\t-12(%ebp), %edx\n+\tmovl\t%edx, (%esp)\t/* &resp */\n+#if defined HAVE_HIDDEN_VISIBILITY_ATTRIBUTE || !defined __PIC__\n+\tcall\tffi_closure_SYSV_inner\n+#else\n+\tmovl\t%ebx, 8(%esp)\n+.LCFI7:\n+\tcall\t1f\n+1:\tpopl\t%ebx\n+\taddl\t$_GLOBAL_OFFSET_TABLE_+[.-1b], %ebx\n+\tcall\tffi_closure_SYSV_inner@PLT\n+\tmovl\t8(%esp), %ebx\n+#endif\n+\tmovl\t-12(%ebp), %ecx\n+\tcmpl\t$FFI_TYPE_INT, %eax\n+\tje\t.Lcls_retint\n+\n+\t/* Handle FFI_TYPE_UINT8, FFI_TYPE_SINT8, FFI_TYPE_UINT16,\n+\t   FFI_TYPE_SINT16, FFI_TYPE_UINT32, FFI_TYPE_SINT32.  */\n+\tcmpl\t$FFI_TYPE_UINT64, %eax\n+\tjge\t0f\n+\tcmpl\t$FFI_TYPE_UINT8, %eax\n+\tjge\t.Lcls_retint\n+\t\n+0:\tcmpl\t$FFI_TYPE_FLOAT, %eax\n+\tje\t.Lcls_retfloat\n+\tcmpl\t$FFI_TYPE_DOUBLE, %eax\n+\tje\t.Lcls_retdouble\n+\tcmpl\t$FFI_TYPE_LONGDOUBLE, %eax\n+\tje\t.Lcls_retldouble\n+\tcmpl\t$FFI_TYPE_SINT64, %eax\n+\tje\t.Lcls_retllong\n+\tcmpl\t$FFI_TYPE_SMALL_STRUCT_1B, %eax\n+\tje\t.Lcls_retstruct1b\n+\tcmpl\t$FFI_TYPE_SMALL_STRUCT_2B, %eax\n+\tje\t.Lcls_retstruct2b\n+\tcmpl\t$FFI_TYPE_STRUCT, %eax\n+\tje\t.Lcls_retstruct\n+.Lcls_epilogue:\n+\tmovl\t%ebp, %esp\n+\tpopl\t%ebp\n+\tret\n+.Lcls_retint:\n+\tmovl\t(%ecx), %eax\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retfloat:\n+\tflds\t(%ecx)\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retdouble:\n+\tfldl\t(%ecx)\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retldouble:\n+\tfldt\t(%ecx)\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retllong:\n+\tmovl\t(%ecx), %eax\n+\tmovl\t4(%ecx), %edx\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retstruct1b:\n+\tmovsbl\t(%ecx), %eax\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retstruct2b:\n+\tmovswl\t(%ecx), %eax\n+\tjmp\t.Lcls_epilogue\n+.Lcls_retstruct:\n+\tmovl\t%ebp, %esp\n+\tpopl\t%ebp\n+\tret\t$4\n+.LFE2:\n+\t.size\tffi_closure_SYSV, .-ffi_closure_SYSV\n+\n+#if !FFI_NO_RAW_API\n+\n+#define RAW_CLOSURE_CIF_OFFSET ((FFI_TRAMPOLINE_SIZE + 3) & ~3)\n+#define RAW_CLOSURE_FUN_OFFSET (RAW_CLOSURE_CIF_OFFSET + 4)\n+#define RAW_CLOSURE_USER_DATA_OFFSET (RAW_CLOSURE_FUN_OFFSET + 4)\n+#define CIF_FLAGS_OFFSET 20\n+\n+\t.align\t4\n+FFI_HIDDEN (ffi_closure_raw_SYSV)\n+.globl ffi_closure_raw_SYSV\n+\t.type\tffi_closure_raw_SYSV, @function\n+\n+ffi_closure_raw_SYSV:\n+.LFB3:\n+\tpushl\t%ebp\n+.LCFI4:\n+\tmovl\t%esp, %ebp\n+.LCFI5:\n+\tpushl\t%esi\n+.LCFI6:\n+\tsubl\t$36, %esp\n+\tmovl\tRAW_CLOSURE_CIF_OFFSET(%eax), %esi\t /* closure->cif */\n+\tmovl\tRAW_CLOSURE_USER_DATA_OFFSET(%eax), %edx /* closure->user_data */\n+\tmovl\t%edx, 12(%esp)\t/* user_data */\n+\tleal\t8(%ebp), %edx\t/* __builtin_dwarf_cfa () */\n+\tmovl\t%edx, 8(%esp)\t/* raw_args */\n+\tleal\t-24(%ebp), %edx\n+\tmovl\t%edx, 4(%esp)\t/* &res */\n+\tmovl\t%esi, (%esp)\t/* cif */\n+\tcall\t*RAW_CLOSURE_FUN_OFFSET(%eax)\t\t /* closure->fun */\n+\tmovl\tCIF_FLAGS_OFFSET(%esi), %eax\t\t /* rtype */\n+\tcmpl\t$FFI_TYPE_INT, %eax\n+\tje\t.Lrcls_retint\n+\n+\t/* Handle FFI_TYPE_UINT8, FFI_TYPE_SINT8, FFI_TYPE_UINT16,\n+\t   FFI_TYPE_SINT16, FFI_TYPE_UINT32, FFI_TYPE_SINT32.  */\n+\tcmpl\t$FFI_TYPE_UINT64, %eax\n+\tjge\t0f\n+\tcmpl\t$FFI_TYPE_UINT8, %eax\n+\tjge\t.Lrcls_retint\n+0:\n+\tcmpl\t$FFI_TYPE_FLOAT, %eax\n+\tje\t.Lrcls_retfloat\n+\tcmpl\t$FFI_TYPE_DOUBLE, %eax\n+\tje\t.Lrcls_retdouble\n+\tcmpl\t$FFI_TYPE_LONGDOUBLE, %eax\n+\tje\t.Lrcls_retldouble\n+\tcmpl\t$FFI_TYPE_SINT64, %eax\n+\tje\t.Lrcls_retllong\n+.Lrcls_epilogue:\n+\taddl\t$36, %esp\n+\tpopl\t%esi\n+\tpopl\t%ebp\n+\tret\n+.Lrcls_retint:\n+\tmovl\t-24(%ebp), %eax\n+\tjmp\t.Lrcls_epilogue\n+.Lrcls_retfloat:\n+\tflds\t-24(%ebp)\n+\tjmp\t.Lrcls_epilogue\n+.Lrcls_retdouble:\n+\tfldl\t-24(%ebp)\n+\tjmp\t.Lrcls_epilogue\n+.Lrcls_retldouble:\n+\tfldt\t-24(%ebp)\n+\tjmp\t.Lrcls_epilogue\n+.Lrcls_retllong:\n+\tmovl\t-24(%ebp), %eax\n+\tmovl\t-20(%ebp), %edx\n+\tjmp\t.Lrcls_epilogue\n+.LFE3:\n+\t.size\tffi_closure_raw_SYSV, .-ffi_closure_raw_SYSV\n+#endif\n+\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n+.Lframe1:\n+\t.long\t.LECIE1-.LSCIE1\t/* Length of Common Information Entry */\n+.LSCIE1:\n+\t.long\t0x0\t/* CIE Identifier Tag */\n+\t.byte\t0x1\t/* CIE Version */\n+#ifdef __PIC__\n+\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n+#else\n+\t.ascii \"\\0\"\t/* CIE Augmentation */\n+#endif\n+\t.byte\t0x1\t/* .uleb128 0x1; CIE Code Alignment Factor */\n+\t.byte\t0x7c\t/* .sleb128 -4; CIE Data Alignment Factor */\n+\t.byte\t0x8\t/* CIE RA Column */\n+#ifdef __PIC__\n+\t.byte\t0x1\t/* .uleb128 0x1; Augmentation size */\n+\t.byte\t0x1b\t/* FDE Encoding (pcrel sdata4) */\n+#endif\n+\t.byte\t0xc\t/* DW_CFA_def_cfa */\n+\t.byte\t0x4\t/* .uleb128 0x4 */\n+\t.byte\t0x4\t/* .uleb128 0x4 */\n+\t.byte\t0x88\t/* DW_CFA_offset, column 0x8 */\n+\t.byte\t0x1\t/* .uleb128 0x1 */\n+\t.align 4\n+.LECIE1:\n+.LSFDE1:\n+\t.long\t.LEFDE1-.LASFDE1\t/* FDE Length */\n+.LASFDE1:\n+\t.long\t.LASFDE1-.Lframe1\t/* FDE CIE offset */\n+#ifdef __PIC__\n+\t.long\t.LFB1-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB1\t/* FDE initial location */\n+#endif\n+\t.long\t.LFE1-.LFB1\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI0-.LFB1\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI1-.LCFI0\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\t.align 4\n+.LEFDE1:\n+.LSFDE2:\n+\t.long\t.LEFDE2-.LASFDE2\t/* FDE Length */\n+.LASFDE2:\n+\t.long\t.LASFDE2-.Lframe1\t/* FDE CIE offset */\n+#ifdef __PIC__\n+\t.long\t.LFB2-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB2\n+#endif\n+\t.long\t.LFE2-.LFB2\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI2-.LFB2\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI3-.LCFI2\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+#if !defined HAVE_HIDDEN_VISIBILITY_ATTRIBUTE && defined __PIC__\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI7-.LCFI3\n+\t.byte\t0x83\t/* DW_CFA_offset, column 0x3 */\n+\t.byte\t0xa\t/* .uleb128 0xa */\n+#endif\n+\t.align 4\n+.LEFDE2:\n+\n+#if !FFI_NO_RAW_API\n+\n+.LSFDE3:\n+\t.long\t.LEFDE3-.LASFDE3\t/* FDE Length */\n+.LASFDE3:\n+\t.long\t.LASFDE3-.Lframe1\t/* FDE CIE offset */\n+#ifdef __PIC__\n+\t.long\t.LFB3-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB3\n+#endif\n+\t.long\t.LFE3-.LFB3\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI4-.LFB3\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI5-.LCFI4\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI6-.LCFI5\n+\t.byte\t0x86\t/* DW_CFA_offset, column 0x6 */\n+\t.byte\t0x3\t/* .uleb128 0x3 */\n+\t.align 4\n+.LEFDE3:\n+\n+#endif\n+\n+#endif /* ifndef __x86_64__ */"}]}