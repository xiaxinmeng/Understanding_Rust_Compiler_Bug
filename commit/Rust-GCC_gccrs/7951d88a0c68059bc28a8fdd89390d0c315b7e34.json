{"sha": "7951d88a0c68059bc28a8fdd89390d0c315b7e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1MWQ4OGEwYzY4MDU5YmMyOGE4ZmRkODkzOTBkMGMzMTViN2UzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-05-27T14:11:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-27T14:11:35Z"}, "message": "re PR lto/44230 (Do not create need for multiple EH personalities)\n\n\tPR lto/44230\n\t* dwarf2out.c (dwarf2out_begin_prologue): Fix nits in sorry message.\nlto/\n\t* lto.h (lto_eh_personality): New prototype.\n\t* lto.c: Include debug.h.\n\t(first_personality_decl): New static variable.\n\t(lto_materialize_function): Set it to DECL_FUNCTION_PERSONALITY of the\n\tfirst function for which it is non-null.\n\t(lto_eh_personality_decl): New static variable.\n\t(lto_eh_personality): New function.\n\t* lto-lang.c (LANG_HOOKS_EH_PERSONALITY): Redefine to above function.\n\t* Make-lang.in (lto/lto.o): Add dependency on debug.h.\n\nFrom-SVN: r159921", "tree": {"sha": "cbad29225d6336a230779ca3e818e4ac1ce219e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbad29225d6336a230779ca3e818e4ac1ce219e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7951d88a0c68059bc28a8fdd89390d0c315b7e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7951d88a0c68059bc28a8fdd89390d0c315b7e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7951d88a0c68059bc28a8fdd89390d0c315b7e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7951d88a0c68059bc28a8fdd89390d0c315b7e34/comments", "author": null, "committer": null, "parents": [{"sha": "fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c"}], "stats": {"total": 66, "additions": 57, "deletions": 9}, "files": [{"sha": "9c4d319df4ca5831c16fdfa342208bec17511ce3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -1,3 +1,8 @@\n+2010-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR lto/44230\n+\t* dwarf2out.c (dwarf2out_begin_prologue): Fix nits in sorry message.\n+\n 2010-05-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44284"}, {"sha": "ca2194f2b484c82340a4837053a41b092f5c0fe5", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -4009,12 +4009,11 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n         current_unit_personality = personality;\n \n       /* We cannot keep a current personality per function as without CFI\n-\t asm at the point where we emit the CFI data there is no current\n+\t asm, at the point where we emit the CFI data, there is no current\n \t function anymore.  */\n-      if (personality\n-\t  && current_unit_personality != personality)\n-\tsorry (\"Multiple EH personalities are supported only with assemblers \"\n-\t       \"supporting .cfi.personality directive.\");\n+      if (personality && current_unit_personality != personality)\n+\tsorry (\"multiple EH personalities are supported only with assemblers \"\n+\t       \"supporting .cfi_personality directive\");\n     }\n }\n "}, {"sha": "2922c80a7751d21fa75c4460b398a30ec43c35d5", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -1,3 +1,16 @@\n+2010-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR lto/44230\n+\t* lto.h (lto_eh_personality): New prototype.\n+\t* lto.c: Include debug.h.\n+\t(first_personality_decl): New static variable.\n+\t(lto_materialize_function): Set it to DECL_FUNCTION_PERSONALITY of the\n+\tfirst function for which it is non-null.\n+\t(lto_eh_personality_decl): New static variable.\n+\t(lto_eh_personality): New function.\n+\t* lto-lang.c (LANG_HOOKS_EH_PERSONALITY): Redefine to above function.\n+\t* Make-lang.in (lto/lto.o): Add dependency on debug.h.\n+\n 2010-05-26  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lto-lang.c: Do not include expr.h."}, {"sha": "b18747e76bbab320eb6fcdd8d479010157bf4596", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -84,7 +84,7 @@ lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h opts.h \\\n \ttoplev.h $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) $(LIBIBERTY_H) \\\n \t$(CGRAPH_H) $(GGC_H) tree-ssa-operands.h $(TREE_PASS_H) \\\n \tlanghooks.h vec.h $(BITMAP_H) pointer-set.h $(IPA_PROP_H) \\\n-\t$(COMMON_H) $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n+\t$(COMMON_H) debug.h $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n \t$(LTO_TAGS_H) $(LTO_STREAMER_H) gt-lto-lto.h\n lto/lto-elf.o: lto/lto-elf.c $(CONFIG_H) coretypes.h $(SYSTEM_H) \\\n \ttoplev.h $(LTO_H) $(TM_H) $(LIBIBERTY_H) $(GGC_H) $(LTO_STREAMER_H)"}, {"sha": "974e3d7328bdcf8ed1c4c0e893634513b75d8826", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -1161,6 +1161,8 @@ static void lto_init_ts (void)\n #define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n #undef LANG_HOOKS_TYPES_COMPATIBLE_P\n #define LANG_HOOKS_TYPES_COMPATIBLE_P NULL\n+#undef LANG_HOOKS_EH_PERSONALITY\n+#define LANG_HOOKS_EH_PERSONALITY lto_eh_personality\n \n /* Attribute hooks.  */\n #undef LANG_HOOKS_COMMON_ATTRIBUTE_TABLE"}, {"sha": "52ef9edbafdab847ad2465e1e97bc64b3e376620", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -37,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pointer-set.h\"\n #include \"ipa-prop.h\"\n #include \"common.h\"\n+#include \"debug.h\"\n #include \"timevar.h\"\n #include \"gimple.h\"\n #include \"lto.h\"\n@@ -61,6 +62,9 @@ along with GCC; see the file COPYING3.  If not see\n DEF_VEC_P(bitmap);\n DEF_VEC_ALLOC_P(bitmap,heap);\n \n+static GTY(()) tree first_personality_decl;\n+\n+\n /* Read the constructors and inits.  */\n \n static void\n@@ -75,7 +79,7 @@ lto_materialize_constructors_and_inits (struct lto_file_decl_data * file_data)\n \t\t\t data, len);\n }\n \n-/* Read the function body for the function associated with NODE if possible.  */\n+/* Read the function body for the function associated with NODE.  */\n \n static void\n lto_materialize_function (struct cgraph_node *node)\n@@ -113,9 +117,11 @@ lto_materialize_function (struct cgraph_node *node)\n \t WPA mode, the body of the function is not needed.  */\n       if (!flag_wpa)\n \t{\n-         allocate_struct_function (decl, false);\n-\t  announce_function (node->decl);\n+\t  allocate_struct_function (decl, false);\n+\t  announce_function (decl);\n \t  lto_input_function_body (file_data, decl, data);\n+\t  if (DECL_FUNCTION_PERSONALITY (decl) && !first_personality_decl)\n+\t    first_personality_decl = DECL_FUNCTION_PERSONALITY (decl);\n \t  lto_stats.num_function_bodies++;\n \t}\n \n@@ -1844,6 +1850,28 @@ do_whole_program_analysis (void)\n }\n \n \n+static GTY(()) tree lto_eh_personality_decl;\n+\n+/* Return the LTO personality function decl.  */\n+\n+tree\n+lto_eh_personality (void)\n+{\n+  if (!lto_eh_personality_decl)\n+    {\n+      /* Use the first personality DECL for our personality if we don't\n+\t support multiple ones.  This ensures that we don't artificially\n+\t create the need for them in a single-language program.  */\n+      if (first_personality_decl && !dwarf2out_do_cfi_asm ())\n+\tlto_eh_personality_decl = first_personality_decl;\n+      else\n+\tlto_eh_personality_decl = lhd_gcc_personality ();\n+    }\n+\n+  return lto_eh_personality_decl;\n+}\n+\n+\n /* Main entry point for the GIMPLE front end.  This front end has\n    three main personalities:\n "}, {"sha": "cdd30d6e96052ba541a16b1ce0b19fcac9941f7a", "filename": "gcc/lto/lto.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7951d88a0c68059bc28a8fdd89390d0c315b7e34/gcc%2Flto%2Flto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.h?ref=7951d88a0c68059bc28a8fdd89390d0c315b7e34", "patch": "@@ -36,6 +36,7 @@ typedef struct lto_file_struct\n extern const char *resolution_file_name;\n \n /* In lto.c  */\n+extern tree lto_eh_personality (void);\n extern void lto_main (int);\n extern void lto_read_all_file_options (void);\n "}]}