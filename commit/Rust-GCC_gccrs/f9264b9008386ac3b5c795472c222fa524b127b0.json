{"sha": "f9264b9008386ac3b5c795472c222fa524b127b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkyNjRiOTAwODM4NmFjM2I1Yzc5NTQ3MmMyMjJmYTUyNGIxMjdiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-28T09:08:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-28T09:08:29Z"}, "message": "expander: Fix ICE in maybe_warn_rdwr_sizes [PR96335]\n\nThe following testcase ICEs in maybe_warn_rdwr_sizes.  The problem is that\nthe caller uses its fndecl and fntype variables to fill up rdwr_map, and\nthe fntype in that case is a prototype with the access attribute and all\nthe checks needed for that performed.  But the maybe_warn_rdwr_sizes\nfunction tries to rediscover fndecl/fntype itself and does it differently\nfrom how the caller did (for fndecl get_callee_fndecl and fntype from that\nFUNCTION_DECL, otherwise sets fntype to CALL_EXPR_FN's type).\n\nOn the testcase, get_callee_fndecl does find a FUNCTION_DECL because\nit does STRIP_NOPS in between.\n\nInstead of trying to rediscover those, this patch just passes them down,\nlike is done in several other functions.\n\n2020-07-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/96335\n\t* calls.c (maybe_warn_rdwr_sizes): Add FNDECL and FNTYPE arguments,\n\tinstead of trying to rediscover them in the body.\n\t(initialize_argument_information): Adjust caller.\n\n\t* gcc.dg/pr96335.c: New test.", "tree": {"sha": "5e3551e1105bd6861edb3abeeec477cfb4c6e24f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3551e1105bd6861edb3abeeec477cfb4c6e24f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9264b9008386ac3b5c795472c222fa524b127b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9264b9008386ac3b5c795472c222fa524b127b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9264b9008386ac3b5c795472c222fa524b127b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9264b9008386ac3b5c795472c222fa524b127b0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ff959e0a2214fa553ac2d06ed66ede62602fc9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff959e0a2214fa553ac2d06ed66ede62602fc9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff959e0a2214fa553ac2d06ed66ede62602fc9a"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "44401e6350d8d59538b386fbf9963726f062fbc1", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9264b9008386ac3b5c795472c222fa524b127b0/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9264b9008386ac3b5c795472c222fa524b127b0/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=f9264b9008386ac3b5c795472c222fa524b127b0", "patch": "@@ -1920,24 +1920,8 @@ append_attrname (const std::pair<int, attr_access> &access,\n    in the function call EXP.  */\n \n static void\n-maybe_warn_rdwr_sizes (rdwr_map *rwm, tree exp)\n+maybe_warn_rdwr_sizes (rdwr_map *rwm, tree fndecl, tree fntype, tree exp)\n {\n-  tree fndecl = NULL_TREE;\n-  tree fntype = NULL_TREE;\n-  if (tree fnaddr = CALL_EXPR_FN (exp))\n-    {\n-      if (TREE_CODE (fnaddr) == ADDR_EXPR)\n-\t{\n-\t  fndecl = TREE_OPERAND (fnaddr, 0);\n-\t  fntype = TREE_TYPE (fndecl);\n-\t}\n-      else\n-\tfntype = TREE_TYPE (TREE_TYPE (fnaddr));\n-    }\n-\n-  if (!fntype)\n-    return;\n-\n   auto_diagnostic_group adg;\n \n   /* A string describing the attributes that the warnings issued by this\n@@ -2501,7 +2485,7 @@ initialize_argument_information (int num_actuals ATTRIBUTE_UNUSED,\n   maybe_warn_nonstring_arg (fndecl, exp);\n \n   /* Check attribute access arguments.  */\n-  maybe_warn_rdwr_sizes (&rdwr_idx, exp);\n+  maybe_warn_rdwr_sizes (&rdwr_idx, fndecl, fntype, exp);\n }\n \n /* Update ARGS_SIZE to contain the total size for the argument block."}, {"sha": "ab243b3d12966ed0afcd2513c314d7356ec26bc2", "filename": "gcc/testsuite/gcc.dg/pr96335.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9264b9008386ac3b5c795472c222fa524b127b0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96335.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9264b9008386ac3b5c795472c222fa524b127b0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96335.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96335.c?ref=f9264b9008386ac3b5c795472c222fa524b127b0", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/96335 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (int, void *) __attribute__((__access__(__read_only__, 2)));\n+\n+void\n+foo (void *x)\n+{\n+  void (*fn) () = bar;\n+  fn (0, x);\n+}"}]}