{"sha": "b4d62b40b7741b009730d074f9b3991344895fc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkNjJiNDBiNzc0MWIwMDk3MzBkMDc0ZjliMzk5MTM0NDg5NWZjMg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@mips.com", "date": "2018-04-26T21:03:11Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2018-04-26T21:03:11Z"}, "message": "MIPS/GCC/testsuite: Fix data-sym-pool.c for n64 code\n\nWith the soft-float n64 ABI and the data-sym-pool.c test case code like \nbelow is produced:\n\n\t.file\t1 \"data-sym-pool.c\"\n\t.section .mdebug.abi64\n\t.previous\n\t.nan\tlegacy\n\t.module\tsoftfloat\n\t.module\toddspreg\n\t.abicalls\n\t.option\tpic0\n\t.text\n\t.align\t2\n\t.globl\tfrob\n\t.set\tmips16\n\t.set\tnomicromips\n\t.ent\tfrob\n\t.type\tfrob, @function\nfrob:\n\t.frame\t$17,16,$31\t\t# vars= 0, regs= 1/0, args= 0, gp= 0\n\t.mask\t0x00020000,-8\n\t.fmask\t0x00000000,0\n\tdaddiu\t$sp,-16\n\tsd\t$17,8($sp)\n\tmove\t$17,$sp\n\tld\t$2,.L3\n\tmove\t$sp,$17\n\tld\t$17,8($sp)\n\tdaddiu\t$sp,16\n\tjr\t$31\n\t.type\t__pool_frob_3, @object\n__pool_frob_3:\n\t.align\t3\n.L3:\n\t.dword\t305419896\n\t.type\t__pend_frob_3, @function\n__pend_frob_3:\n\t.insn\n\t.end\tfrob\n\t.size\tfrob, .-frob\n\t.ident\t\"GCC: (GNU) 8.0.1 20180410 (experimental)\"\n\n(we have no support for hard-float n64 MIPS16 code generation), which \nmeans that the test case will fail, as the regular expression pattern \nexpects `lw' and `.word' rather than `ld' and `.dword' respectively to \nappear in assembly code generation.  Correct the pattern in an obvious \nway then making it accept both intructions and pseudo-ops.\n\n\tgcc/testsuite/\n\t* gcc.target/mips/data-sym-pool.c (dg-options): Match `ld' and\n\t`.dword' in addition to `lw' and `.word'.\n\nFrom-SVN: r259691", "tree": {"sha": "b87de8d91531dda0ab7a994b7b2a47c4524ff57d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b87de8d91531dda0ab7a994b7b2a47c4524ff57d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d62b40b7741b009730d074f9b3991344895fc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d62b40b7741b009730d074f9b3991344895fc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d62b40b7741b009730d074f9b3991344895fc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d62b40b7741b009730d074f9b3991344895fc2/comments", "author": null, "committer": null, "parents": [{"sha": "7dc5410af04b1693544d34f4046d10ee4409a892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc5410af04b1693544d34f4046d10ee4409a892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc5410af04b1693544d34f4046d10ee4409a892"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "972059364bf869757445c6508b0025326cfc5bb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d62b40b7741b009730d074f9b3991344895fc2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d62b40b7741b009730d074f9b3991344895fc2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4d62b40b7741b009730d074f9b3991344895fc2", "patch": "@@ -1,3 +1,8 @@\n+2018-04-26  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* gcc.target/mips/data-sym-pool.c (dg-options): Match `ld' and\n+\t`.dword' in addition to `lw' and `.word'.\n+\n 2018-04-26  Maciej W. Rozycki  <macro@mips.com>\n \n \t* gcc.target/mips/data-sym-pool.c (dg-options): Add `-mplt'."}, {"sha": "8776d2b6e4e9aba7f51bc518e20ef3e31057be96", "filename": "gcc/testsuite/gcc.target/mips/data-sym-pool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d62b40b7741b009730d074f9b3991344895fc2/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdata-sym-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d62b40b7741b009730d074f9b3991344895fc2/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdata-sym-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdata-sym-pool.c?ref=b4d62b40b7741b009730d074f9b3991344895fc2", "patch": "@@ -26,4 +26,4 @@ __pend_frob_3:\t\t\t\t\t# The symbol must match.\n    symbol from being placed in the constant pool at `-O0' for SVR4 code\n    and consequently interfering with test expectations.  */\n \n-/* { dg-final { scan-assembler \"\\tlw\\t\\\\\\$\\[0-9\\]+,(.L(\\[0-9\\]+))\\n.*\\t\\\\.type\\t(__pool_frob_\\\\2), @object\\n\\\\3:\\n\\t\\\\.align\\t2\\n\\\\1:\\n\\t\\\\.word\\t305419896\\n\\t\\\\.type\\t(__pend_frob_\\\\2), @function\\n\\\\4:\\n\\t\\\\.insn\\n\" } } */\n+/* { dg-final { scan-assembler \"\\tl\\[wd\\]\\t\\\\\\$\\[0-9\\]+,(.L(\\[0-9\\]+))\\n.*\\t\\\\.type\\t(__pool_frob_\\\\2), @object\\n\\\\3:\\n\\t\\\\.align\\t2\\n\\\\1:\\n\\t\\\\.d?word\\t305419896\\n\\t\\\\.type\\t(__pend_frob_\\\\2), @function\\n\\\\4:\\n\\t\\\\.insn\\n\" } } */"}]}