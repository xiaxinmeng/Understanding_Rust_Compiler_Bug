{"sha": "c68a6e08c5177557d7ecc99a173593f064a15a7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4YTZlMDhjNTE3NzU1N2Q3ZWNjOTlhMTczNTkzZjA2NGExNWE3ZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-06-01T19:12:57Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-06-01T19:12:57Z"}, "message": "configure.ac: Add AC_HEADER_TIOCGWINSZ macro.\n\n2013-06-01  Janus Weil  <janus@gcc.gnu.org>\n\t    Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* configure.ac: Add AC_HEADER_TIOCGWINSZ macro.\n\t* config.in: Regenerated.\n\t* configure: Regenerated.\n\n\n2013-06-01  Janus Weil  <janus@gcc.gnu.org>\n\t    Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* error.c (get_terminal_width): Only limit the width if we're\n\toutputting to a terminal. Try to determine width via ioctl.\n\nCo-Authored-By: Mikael Morin <mikael@gcc.gnu.org>\n\nFrom-SVN: r199585", "tree": {"sha": "a6739e4409a3e10989d6e8017e82b8fcd4de69d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6739e4409a3e10989d6e8017e82b8fcd4de69d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c68a6e08c5177557d7ecc99a173593f064a15a7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68a6e08c5177557d7ecc99a173593f064a15a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68a6e08c5177557d7ecc99a173593f064a15a7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68a6e08c5177557d7ecc99a173593f064a15a7d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c9f675fd91d50b9c4eb944481ab6a59386a89c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9f675fd91d50b9c4eb944481ab6a59386a89c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c9f675fd91d50b9c4eb944481ab6a59386a89c7"}], "stats": {"total": 115, "additions": 111, "deletions": 4}, "files": [{"sha": "d9ab9eac21c79d97c7e0a74e5128d9f7ceb8498c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -1,3 +1,10 @@\n+2013-06-01  Janus Weil  <janus@gcc.gnu.org>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* configure.ac: Add AC_HEADER_TIOCGWINSZ macro.\n+\t* config.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2013-06-01  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/57366"}, {"sha": "288c11f937776b9463fbdd2e0c1b483bbd48a8c8", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -199,6 +199,12 @@\n #endif\n \n \n+/* Define to 1 if `TIOCGWINSZ' requires <sys/ioctl.h>. */\n+#ifndef USED_FOR_TARGET\n+#undef GWINSZ_IN_SYS_IOCTL\n+#endif\n+\n+\n /* mcontext_t fields start with __ */\n #ifndef USED_FOR_TARGET\n #undef HAS_MCONTEXT_T_UNDERSCORES\n@@ -1247,7 +1253,7 @@\n #endif\n \n \n-/* Define if your AIX linker supports a large TOC. */\n+/* Define if your PowerPC64 linker supports a large TOC. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_LARGE_TOC\n #endif"}, {"sha": "8c221078102381412fb42da6dc4b81abb4695288", "filename": "gcc/configure", "status": "modified", "additions": 62, "deletions": 2, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -8293,6 +8293,66 @@ $as_echo \"#define HAVE_SYS_WAIT_H 1\" >>confdefs.h\n \n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether termios.h defines TIOCGWINSZ\" >&5\n+$as_echo_n \"checking whether termios.h defines TIOCGWINSZ... \" >&6; }\n+if test \"${ac_cv_sys_tiocgwinsz_in_termios_h+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+#include <termios.h>\n+#ifdef TIOCGWINSZ\n+  yes\n+#endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"yes\" >/dev/null 2>&1; then :\n+  ac_cv_sys_tiocgwinsz_in_termios_h=yes\n+else\n+  ac_cv_sys_tiocgwinsz_in_termios_h=no\n+fi\n+rm -f conftest*\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_tiocgwinsz_in_termios_h\" >&5\n+$as_echo \"$ac_cv_sys_tiocgwinsz_in_termios_h\" >&6; }\n+\n+if test $ac_cv_sys_tiocgwinsz_in_termios_h != yes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether sys/ioctl.h defines TIOCGWINSZ\" >&5\n+$as_echo_n \"checking whether sys/ioctl.h defines TIOCGWINSZ... \" >&6; }\n+if test \"${ac_cv_sys_tiocgwinsz_in_sys_ioctl_h+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+#include <sys/ioctl.h>\n+#ifdef TIOCGWINSZ\n+  yes\n+#endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"yes\" >/dev/null 2>&1; then :\n+  ac_cv_sys_tiocgwinsz_in_sys_ioctl_h=yes\n+else\n+  ac_cv_sys_tiocgwinsz_in_sys_ioctl_h=no\n+fi\n+rm -f conftest*\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_tiocgwinsz_in_sys_ioctl_h\" >&5\n+$as_echo \"$ac_cv_sys_tiocgwinsz_in_sys_ioctl_h\" >&6; }\n+\n+  if test $ac_cv_sys_tiocgwinsz_in_sys_ioctl_h = yes; then\n+\n+$as_echo \"#define GWINSZ_IN_SYS_IOCTL 1\" >>confdefs.h\n+\n+  fi\n+fi\n+\n for ac_header in limits.h stddef.h string.h strings.h stdlib.h time.h iconv.h \\\n \t\t fcntl.h unistd.h sys/file.h sys/time.h sys/mman.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h \\\n@@ -17834,7 +17894,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17837 \"configure\"\n+#line 17897 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17940,7 +18000,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17943 \"configure\"\n+#line 18003 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "41b64c78736703e0645b8ba47abb6fd0d8d3c9a4", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -939,6 +939,7 @@ AC_HEADER_STDC\n AC_HEADER_TIME\n ACX_HEADER_STRING\n AC_HEADER_SYS_WAIT\n+AC_HEADER_TIOCGWINSZ\n AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h iconv.h \\\n \t\t fcntl.h unistd.h sys/file.h sys/time.h sys/mman.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h \\"}, {"sha": "20436913fc459093e421dbf783b1b22b83dbe37b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -1,3 +1,9 @@\n+2013-06-01  Janus Weil  <janus@gcc.gnu.org>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* error.c (get_terminal_width): Only limit the width if we're\n+\toutputting to a terminal. Try to determine width via ioctl.\n+\n 2013-06-01  Tobias Burnus  <burnus@net-b.de>\n \n \t* decl.c (add_global_entry): Take locus."}, {"sha": "35fe62706c6a946b25cd95e3efb263fbbcf6321e", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68a6e08c5177557d7ecc99a173593f064a15a7d/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=c68a6e08c5177557d7ecc99a173593f064a15a7d", "patch": "@@ -30,6 +30,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"gfortran.h\"\n \n+#ifdef HAVE_TERMIOS_H\n+# include <termios.h>\n+#endif\n+\n+#ifdef GWINSZ_IN_SYS_IOCTL\n+# include <sys/ioctl.h>\n+#endif\n+\n+\n static int suppress_errors = 0;\n \n static int warnings_not_errors = 0; \n@@ -59,17 +68,35 @@ gfc_pop_suppress_errors (void)\n }\n \n \n+/* Determine terminal width (for trimming source lines in output).  */\n+\n static int\n get_terminal_width (void)\n {\n+  /* Only limit the width if we're outputting to a terminal.  */\n+#ifdef HAVE_UNISTD_H\n+  if (!isatty (STDERR_FILENO))\n+    return INT_MAX;\n+#endif\n+  \n+  /* Method #1: Use ioctl (not available on all systems).  */\n+#ifdef TIOCGWINSZ\n+  struct winsize w;\n+  w.ws_col = 0;\n+  if (ioctl (0, TIOCGWINSZ, &w) == 0 && w.ws_col > 0)\n+    return w.ws_col;\n+#endif\n+\n+  /* Method #2: Query environment variable $COLUMNS.  */\n   const char *p = getenv (\"COLUMNS\");\n   if (p)\n     {\n       int value = atoi (p);\n       if (value > 0)\n \treturn value;\n     }\n-  /* Use a reasonable default.  */\n+\n+  /* If both fail, use reasonable default.  */\n   return 80;\n }\n "}]}