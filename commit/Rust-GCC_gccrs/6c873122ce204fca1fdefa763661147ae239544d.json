{"sha": "6c873122ce204fca1fdefa763661147ae239544d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4NzMxMjJjZTIwNGZjYTFmZGVmYTc2MzY2MTE0N2FlMjM5NTQ0ZA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2000-12-03T02:41:08Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2000-12-03T02:41:08Z"}, "message": "rs6000.md (anddi3_internal[23]): Prefer rldic?\n\n        * rs6000.md (anddi3_internal[23]): Prefer rldic? over andis\n        instruction.\n        (cr logic): Really make operands sequential.\n\nFrom-SVN: r37962", "tree": {"sha": "3cf33b512c5ab47ac3fe806530d459244574ef9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cf33b512c5ab47ac3fe806530d459244574ef9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c873122ce204fca1fdefa763661147ae239544d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c873122ce204fca1fdefa763661147ae239544d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c873122ce204fca1fdefa763661147ae239544d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c873122ce204fca1fdefa763661147ae239544d/comments", "author": null, "committer": null, "parents": [{"sha": "690c96c8bf01285496eceb96ff13b4ddc84a75f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690c96c8bf01285496eceb96ff13b4ddc84a75f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690c96c8bf01285496eceb96ff13b4ddc84a75f4"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "92064a041f2ca36b7876521ab94f332202121d4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c873122ce204fca1fdefa763661147ae239544d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c873122ce204fca1fdefa763661147ae239544d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c873122ce204fca1fdefa763661147ae239544d", "patch": "@@ -1,3 +1,9 @@\n+2000-12-02  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* rs6000.md (anddi3_internal[23]): Prefer rldic? over andis\n+\tinstruction.\n+\t(cr logic): Really make operands sequential.\n+\n 2000-12-02  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* c-common.c (combine_strings): When the ISO C standard specifies"}, {"sha": "aa37d7a20a4816b32c8a98bc4ad8c7859cd13f87", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c873122ce204fca1fdefa763661147ae239544d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c873122ce204fca1fdefa763661147ae239544d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=6c873122ce204fca1fdefa763661147ae239544d", "patch": "@@ -6949,23 +6949,23 @@\n    andis. %0,%1,%u2\")\n \n (define_insn \"*anddi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x,?y,??y,??y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x,?y,?y,??y,??y\")\n \t(compare:CC (and:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r,r,r,r,r,r,\")\n-\t\t\t    (match_operand:DI 2 \"and64_operand\" \"r,K,J,S,r,K,J,S\"))\n+\t\t\t    (match_operand:DI 2 \"and64_operand\" \"r,S,K,J,r,S,K,J\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r,r,r,r,r,r,r,r\"))\n-   (clobber (match_scratch:CC 4 \"=X,X,X,X,X,x,x,X\"))]\n+   (clobber (match_scratch:CC 4 \"=X,X,X,X,X,X,x,x\"))]\n   \"TARGET_POWERPC64\"\n   \"@\n    and. %3,%1,%2\n+   rldic%B2. %3,%1,0,%S2\n    andi. %3,%1,%b2\n    andis. %3,%1,%u2\n-   rldic%B2. %3,%1,0,%S2\n    #\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"compare,compare,compare,delayed_compare,compare,compare,compare,delayed_compare\")\n+  [(set_attr \"type\" \"compare,delayed_compare,compare,compare,compare,delayed_compare,compare,compare\")\n    (set_attr \"length\" \"4,4,4,4,8,8,8,8\")])\n \n (define_split\n@@ -6986,24 +6986,24 @@\n   \"\")\n \n (define_insn \"*anddi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,x,x,?y,??y,??y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,x,x,?y,?y,??y,??y\")\n \t(compare:CC (and:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r,r,r,r,r,r,r\")\n-\t\t\t    (match_operand:DI 2 \"and64_operand\" \"r,K,J,S,r,K,J,S\"))\n+\t\t\t    (match_operand:DI 2 \"and64_operand\" \"r,S,K,J,r,S,K,J\"))\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r,r,r,r,r\")\n \t(and:DI (match_dup 1) (match_dup 2)))\n-   (clobber (match_scratch:CC 4 \"=X,X,X,X,X,x,x,X\"))]\n+   (clobber (match_scratch:CC 4 \"=X,X,X,X,X,X,x,x\"))]\n   \"TARGET_POWERPC64\"\n   \"@\n    and. %0,%1,%2\n+   rldic%B2. %0,%1,0,%S2\n    andi. %0,%1,%b2\n    andis. %0,%1,%u2\n-   rldic%B2. %0,%1,0,%S2\n    #\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"compare,compare,compare,delayed_compare,compare,compare,compare,delayed_compare\")\n+  [(set_attr \"type\" \"compare,delayed_compare,compare,compare,compare,delayed_compare,compare,compare\")\n    (set_attr \"length\" \"4,4,4,4,8,8,8,8\")])\n \n (define_split\n@@ -12566,9 +12566,9 @@ operands[2] = GEN_INT (INTVAL (operands[1]) >> 32);\n \n (define_insn \"\"\n   [(set (match_operand:CCEQ 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCEQ (match_operator:SI 2 \n+\t(compare:CCEQ (match_operator:SI 1\n \t\t\t\t      \"branch_positive_comparison_operator\"\n-\t\t\t\t      [(match_operand 1\n+\t\t\t\t      [(match_operand 2\n \t\t\t\t\t\t      \"cc_reg_operand\" \"y\")\n \t\t\t\t       (const_int 0)])\n \t\t      (const_int 0)))]"}]}