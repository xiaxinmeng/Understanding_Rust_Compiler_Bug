{"sha": "618eef38d9d18342930fbc960e5b9c23e6185b40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE4ZWVmMzhkOWQxODM0MjkzMGZiYzk2MGU1YjljMjNlNjE4NWI0MA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T10:56:34Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T10:56:34Z"}, "message": "S/390: arch13: Add support for new select instruction\n\nCompared to the load on condition instructions we already have the new\nselect instruction allows to have a THEN and and ELSE source operand -\nbut only for register to register loads.\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390.c (s390_rtx_costs): Do not add extra costs for\n\tif-then-else constructs if we can use the select instruction.\n\t* config/s390/s390.md (\"*mov<mode>cc\"): Add the new instructions.\n\ngcc/testsuite/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/arch13/sel-1.c: New test.\n\nFrom-SVN: r270080", "tree": {"sha": "a85200bc3e00744ce9ca305c63f09d3a9f8c6ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a85200bc3e00744ce9ca305c63f09d3a9f8c6ef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/618eef38d9d18342930fbc960e5b9c23e6185b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/618eef38d9d18342930fbc960e5b9c23e6185b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/618eef38d9d18342930fbc960e5b9c23e6185b40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/618eef38d9d18342930fbc960e5b9c23e6185b40/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25cb5165c1e49499c8c6e0088d135bd54cb7106f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cb5165c1e49499c8c6e0088d135bd54cb7106f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cb5165c1e49499c8c6e0088d135bd54cb7106f"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "bc1653e10093a13f29d702ac90158185e901e358", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=618eef38d9d18342930fbc960e5b9c23e6185b40", "patch": "@@ -1,3 +1,9 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (s390_rtx_costs): Do not add extra costs for\n+\tif-then-else constructs if we can use the select instruction.\n+\t* config/s390/s390.md (\"*mov<mode>cc\"): Add the new instructions.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.md (\"*popcountdi_arch13_cc\")"}, {"sha": "bceaca3fbc8b116dc3a112a95b7e52f7b30071f1", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=618eef38d9d18342930fbc960e5b9c23e6185b40", "patch": "@@ -3529,7 +3529,8 @@ s390_rtx_costs (rtx x, machine_mode mode, int outer_code,\n \n \t/* It is a real IF-THEN-ELSE.  An additional move will be\n \t   needed to implement that.  */\n-\tif (reload_completed\n+\tif (!TARGET_ARCH13\n+\t    && reload_completed\n \t    && !rtx_equal_p (dst, then)\n \t    && !rtx_equal_p (dst, els))\n \t  *total += COSTS_N_INSNS (1) / 2;"}, {"sha": "514bd2414c4593424bdd65d3a03cddf54afa3cb6", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=618eef38d9d18342930fbc960e5b9c23e6185b40", "patch": "@@ -6701,27 +6701,28 @@\n \n \n \n-; locr, loc, stoc, locgr, locg, stocg, lochi, locghi\n+; locr, loc, stoc, locgr, locg, stocg, lochi, locghi, selr, selgr\n (define_insn \"*mov<mode>cc\"\n-  [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,d,d,S,S\")\n+  [(set (match_operand:GPR 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,d,S,S\")\n \t(if_then_else:GPR\n \t  (match_operator 1 \"s390_comparison\"\n-\t    [(match_operand 2 \"cc_reg_operand\"        \" c,c,c,c,c,c,c,c\")\n-\t     (match_operand 5 \"const_int_operand\"     \"\")])\n-\t  (match_operand:GPR 3 \"loc_operand\" \" d,0,S,0,K,0,d,0\")\n-\t  (match_operand:GPR 4 \"loc_operand\" \" 0,d,0,S,0,K,0,d\")))]\n+\t    [(match_operand 2 \"cc_reg_operand\"      \" c,c,c,c,c,c,c,c,c\")\n+\t     (match_operand 5 \"const_int_operand\"   \"\")])\n+\t  (match_operand:GPR 3 \"loc_operand\"        \" d,0,d,S,0,K,0,d,0\")\n+\t  (match_operand:GPR 4 \"loc_operand\"        \" 0,d,d,0,S,0,K,0,d\")))]\n   \"TARGET_Z196\"\n   \"@\n    loc<g>r%C1\\t%0,%3\n    loc<g>r%D1\\t%0,%4\n+   sel<g>r%C1\\t%0,%3,%4\n    loc<g>%C1\\t%0,%3\n    loc<g>%D1\\t%0,%4\n    loc<g>hi%C1\\t%0,%h3\n    loc<g>hi%D1\\t%0,%h4\n    stoc<g>%C1\\t%3,%0\n    stoc<g>%D1\\t%4,%0\"\n-  [(set_attr \"op_type\" \"RRF,RRF,RSY,RSY,RIE,RIE,RSY,RSY\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,z13,z13,*,*\")])\n+  [(set_attr \"op_type\" \"RRF,RRF,RRF,RSY,RSY,RIE,RIE,RSY,RSY\")\n+   (set_attr \"cpu_facility\" \"*,*,arch13,*,*,z13,z13,*,*\")])\n \n ;;\n ;;- Multiply instructions."}, {"sha": "087e82bdce940d873a72fee464d9b38d4df673cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=618eef38d9d18342930fbc960e5b9c23e6185b40", "patch": "@@ -1,3 +1,7 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/arch13/sel-1.c: New test.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/arch13/popcount-1.c: New test."}, {"sha": "301a133ea9125ce73432c35b51457e7e2e24888e", "filename": "gcc/testsuite/gcc.target/s390/arch13/sel-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch13%2Fsel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/618eef38d9d18342930fbc960e5b9c23e6185b40/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch13%2Fsel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Farch13%2Fsel-1.c?ref=618eef38d9d18342930fbc960e5b9c23e6185b40", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+int\n+sel32 (int a, int then, int els)\n+{\n+  return a > 42 ? then : els;\n+}\n+\n+/* FIXME: This currently fails since ifcvt considers that combination\n+   too expensive.  THe reason is that additional load instructions\n+   emitted by ifcvt are part of the costs although these should get\n+   removed later.  */\n+/* { dg-final { scan-assembler-times \"\\tselrh\\t\" 1 } } */\n+\n+long long\n+sel64 (int a, long long then, long long els)\n+{\n+  return a > 42 ? then : els;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tselgrh\\t\" 1 } } */"}]}