{"sha": "5056a35047a7e6f29863dc15c434b55c5faf2bb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1NmEzNTA0N2E3ZTZmMjk4NjNkYzE1YzQzNGI1NWM1ZmFmMmJiMQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2006-08-29T19:47:31Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-08-29T19:47:31Z"}, "message": "re PR fortran/28866 (Simple if statements are not so simple)\n\n2006-08-29  Steven G. Kargl  <kargls@comcast.net>\n\n\tPR fortran/28866\n\t* match.c: Wrap copyright.\n\t(gfc_match_assignment):  Return MATCH_NO for failed lvalue.  Remove\n\tgotos.  Move error handling of FL_PARAMETER to ...\n \t* gfc_match_if: Deal with MATCH_NO from above.\n\t* primary.c: Wrap copyright.\n\t(match_variable): ... here.  Improve error messages.\n\n\n2006-08-29  Steven G. Kargl  <kargls@comcast.net>\n\n\tPR fortran/28866\n\t* gfortran.dg/simpleif_2.f90: New test.\n\t* gfortran.dg/pr19936_1.f90: Adjust dg-error message.\n\t* gfortran.dg/enum_5.f90: Ditto.\n\nFrom-SVN: r116570", "tree": {"sha": "dca9c6051dbb02392d457dea13c80b5fdc18a2d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dca9c6051dbb02392d457dea13c80b5fdc18a2d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5056a35047a7e6f29863dc15c434b55c5faf2bb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5056a35047a7e6f29863dc15c434b55c5faf2bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5056a35047a7e6f29863dc15c434b55c5faf2bb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5056a35047a7e6f29863dc15c434b55c5faf2bb1/comments", "author": null, "committer": null, "parents": [{"sha": "e370818b216c5d9fd9b4a50403cd96817aabc107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e370818b216c5d9fd9b4a50403cd96817aabc107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e370818b216c5d9fd9b4a50403cd96817aabc107"}], "stats": {"total": 153, "additions": 96, "deletions": 57}, "files": [{"sha": "aeb3cb9a956660feb9852a228ad873fc20ffede0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,3 +1,13 @@\n+2006-08-29  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/28866\n+\t* match.c: Wrap copyright.\n+\t(gfc_match_assignment):  Return MATCH_NO for failed lvalue.  Remove\n+\tgotos.  Move error handling of FL_PARAMETER to ...\n+ \t* gfc_match_if: Deal with MATCH_NO from above.\n+\t* primary.c: Wrap copyright.\n+\t(match_variable): ... here.  Improve error messages.\n+\n 2006-08-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/28788"}, {"sha": "8a67c2052a3350e49bf86e8869dc12cf4b5cf082", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 53, "deletions": 43, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,6 +1,6 @@\n /* Matching subroutines in all sizes, shapes and colors.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software\n-   Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n This file is part of GCC.\n@@ -843,21 +843,24 @@ gfc_match_assignment (void)\n \n   old_loc = gfc_current_locus;\n \n-  lvalue = rvalue = NULL;\n+  lvalue = NULL;\n   m = gfc_match (\" %v =\", &lvalue);\n   if (m != MATCH_YES)\n-    goto cleanup;\n-\n-  if (lvalue->symtree->n.sym->attr.flavor == FL_PARAMETER)\n     {\n-      gfc_error (\"Cannot assign to a PARAMETER variable at %C\");\n-      m = MATCH_ERROR;\n-      goto cleanup;\n+      gfc_current_locus = old_loc;\n+      gfc_free_expr (lvalue);\n+      return MATCH_NO;\n     }\n \n+  rvalue = NULL;\n   m = gfc_match (\" %e%t\", &rvalue);\n   if (m != MATCH_YES)\n-    goto cleanup;\n+    {\n+      gfc_current_locus = old_loc;\n+      gfc_free_expr (lvalue);\n+      gfc_free_expr (rvalue);\n+      return m;\n+    }\n \n   gfc_set_sym_referenced (lvalue->symtree->n.sym);\n \n@@ -868,12 +871,6 @@ gfc_match_assignment (void)\n   gfc_check_do_variable (lvalue->symtree);\n \n   return MATCH_YES;\n-\n-cleanup:\n-  gfc_current_locus = old_loc;\n-  gfc_free_expr (lvalue);\n-  gfc_free_expr (rvalue);\n-  return m;\n }\n \n \n@@ -1061,9 +1058,9 @@ gfc_match_if (gfc_statement * if_type)\n   gfc_undo_symbols ();\n   gfc_current_locus = old_loc;\n \n-  /* m can be MATCH_NO or MATCH_ERROR, here.  For MATCH_NO, continue to\n-     call the various matchers.  For MATCH_ERROR, a mangled assignment\n-     was found.  */\n+  /* m can be MATCH_NO or MATCH_ERROR, here.  For MATCH_ERROR, a mangled\n+     assignment was found.  For MATCH_NO, continue to call the various\n+     matchers.  */\n   if (m == MATCH_ERROR)\n     return MATCH_ERROR;\n \n@@ -1089,30 +1086,43 @@ gfc_match_if (gfc_statement * if_type)\n   gfc_clear_error ();\n \n   match (\"allocate\", gfc_match_allocate, ST_ALLOCATE)\n-    match (\"assign\", gfc_match_assign, ST_LABEL_ASSIGNMENT)\n-    match (\"backspace\", gfc_match_backspace, ST_BACKSPACE)\n-    match (\"call\", gfc_match_call, ST_CALL)\n-    match (\"close\", gfc_match_close, ST_CLOSE)\n-    match (\"continue\", gfc_match_continue, ST_CONTINUE)\n-    match (\"cycle\", gfc_match_cycle, ST_CYCLE)\n-    match (\"deallocate\", gfc_match_deallocate, ST_DEALLOCATE)\n-    match (\"end file\", gfc_match_endfile, ST_END_FILE)\n-    match (\"exit\", gfc_match_exit, ST_EXIT)\n-    match (\"flush\", gfc_match_flush, ST_FLUSH)\n-    match (\"forall\", match_simple_forall, ST_FORALL)\n-    match (\"go to\", gfc_match_goto, ST_GOTO)\n-    match (\"if\", match_arithmetic_if, ST_ARITHMETIC_IF)\n-    match (\"inquire\", gfc_match_inquire, ST_INQUIRE)\n-    match (\"nullify\", gfc_match_nullify, ST_NULLIFY)\n-    match (\"open\", gfc_match_open, ST_OPEN)\n-    match (\"pause\", gfc_match_pause, ST_NONE)\n-    match (\"print\", gfc_match_print, ST_WRITE)\n-    match (\"read\", gfc_match_read, ST_READ)\n-    match (\"return\", gfc_match_return, ST_RETURN)\n-    match (\"rewind\", gfc_match_rewind, ST_REWIND)\n-    match (\"stop\", gfc_match_stop, ST_STOP)\n-    match (\"where\", match_simple_where, ST_WHERE)\n-    match (\"write\", gfc_match_write, ST_WRITE)\n+  match (\"assign\", gfc_match_assign, ST_LABEL_ASSIGNMENT)\n+  match (\"backspace\", gfc_match_backspace, ST_BACKSPACE)\n+  match (\"call\", gfc_match_call, ST_CALL)\n+  match (\"close\", gfc_match_close, ST_CLOSE)\n+  match (\"continue\", gfc_match_continue, ST_CONTINUE)\n+  match (\"cycle\", gfc_match_cycle, ST_CYCLE)\n+  match (\"deallocate\", gfc_match_deallocate, ST_DEALLOCATE)\n+  match (\"end file\", gfc_match_endfile, ST_END_FILE)\n+  match (\"exit\", gfc_match_exit, ST_EXIT)\n+  match (\"flush\", gfc_match_flush, ST_FLUSH)\n+  match (\"forall\", match_simple_forall, ST_FORALL)\n+  match (\"go to\", gfc_match_goto, ST_GOTO)\n+  match (\"if\", match_arithmetic_if, ST_ARITHMETIC_IF)\n+  match (\"inquire\", gfc_match_inquire, ST_INQUIRE)\n+  match (\"nullify\", gfc_match_nullify, ST_NULLIFY)\n+  match (\"open\", gfc_match_open, ST_OPEN)\n+  match (\"pause\", gfc_match_pause, ST_NONE)\n+  match (\"print\", gfc_match_print, ST_WRITE)\n+  match (\"read\", gfc_match_read, ST_READ)\n+  match (\"return\", gfc_match_return, ST_RETURN)\n+  match (\"rewind\", gfc_match_rewind, ST_REWIND)\n+  match (\"stop\", gfc_match_stop, ST_STOP)\n+  match (\"where\", match_simple_where, ST_WHERE)\n+  match (\"write\", gfc_match_write, ST_WRITE)\n+\n+  /* The gfc_match_assignment() above may have returned a MATCH_NO\n+     where the assignement was to a named constant.  Check that \n+     special case here.  */\n+  m = gfc_match_assignment ();\n+  if (m == MATCH_NO)\n+   {\n+      gfc_error (\"Cannot assign to a named constant at %C\");\n+      gfc_free_expr (expr);\n+      gfc_undo_symbols ();\n+      gfc_current_locus = old_loc;\n+      return MATCH_ERROR;\n+   }\n \n   /* All else has failed, so give up.  See if any of the matchers has\n      stored an error message of some sort.  */"}, {"sha": "1428f4c84e4d73fe0c8d7c1827f9eee031a42feb", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,6 +1,6 @@\n /* Primary expression subroutines\n-   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2006 Free Software\n-   Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n This file is part of GCC.\n@@ -2295,16 +2295,20 @@ match_variable (gfc_expr ** result, int equiv_flag, int host_flag)\n     case FL_VARIABLE:\n       break;\n \n-    case FL_PROGRAM:\n-      return MATCH_NO;\n-      break;\n-\n     case FL_UNKNOWN:\n       if (gfc_add_flavor (&sym->attr, FL_VARIABLE,\n \t\t\t  sym->name, NULL) == FAILURE)\n \treturn MATCH_ERROR;\n       break;\n \n+    case FL_PARAMETER:\n+      if (equiv_flag)\n+\tgfc_error (\"Named constant at %C in an EQUIVALENCE\");\n+      else\n+\tgfc_error (\"Cannot assign to a named constant at %C\");\n+      return MATCH_ERROR;\n+      break;\n+\n     case FL_PROCEDURE:\n       /* Check for a nonrecursive function result */\n       if (sym->attr.function && (sym->result == sym || sym->attr.entry))"}, {"sha": "6729166449d2b9ef6d73e6fe985495db956af6c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,3 +1,10 @@\n+2006-08-29  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/28866\n+\t* gfortran.dg/simpleif_2.f90: New test.\n+\t* gfortran.dg/pr19936_1.f90: Adjust dg-error message.\n+\t* gfortran.dg/enum_5.f90: Ditto.\n+\n 2006-08-29  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \t    Kazu Hirata  <kazu@codesourcery.com>\n "}, {"sha": "b27aaf289c04517d02958363f2e651a04fd16035", "filename": "gcc/testsuite/gfortran.dg/enum_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -10,6 +10,6 @@ program main\n     enumerator :: blue = 1  \n   end enum junk  ! { dg-error \"Syntax error\" }\n \n-  blue = 10  ! { dg-error \"Expected VARIABLE\" }\n+  blue = 10  ! { dg-error \" assign to a named constant\" }\n \n end program main  ! { dg-excess-errors \"\" }"}, {"sha": "516d5142922f5e14b4c77bc00883d5b4e6d7896d", "filename": "gcc/testsuite/gfortran.dg/pr19936_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19936_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19936_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19936_1.f90?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n program pr19936_1\n   integer, parameter :: i=4\n-  print *,(/(i,i=1,4)/) ! { dg-error \"Expected VARIABLE\" }\n+  print *,(/(i,i=1,4)/) ! { dg-error \"assign to a named constant\" }\n end program pr19936_1"}, {"sha": "ee914b2c6fd6a963d87ec317dd15c2dae3a0fcc2", "filename": "gcc/testsuite/gfortran.dg/simpleif_2.f90", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fsimpleif_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5056a35047a7e6f29863dc15c434b55c5faf2bb1/gcc%2Ftestsuite%2Fgfortran.dg%2Fsimpleif_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsimpleif_2.f90?ref=5056a35047a7e6f29863dc15c434b55c5faf2bb1", "patch": "@@ -1,7 +1,15 @@\n ! { dg-do compile }\n-! PR 27981\n-program a\n-   real x\n-   real, pointer :: y\n-   if (.true.) x = 12345678901 ! { dg-error \"Integer too big\" }\n-end program a\n+! Test fix for regression caused by \n+! 2006-06-23  Steven G. Kargl  <kargls@comcast.net>\n+!    PR fortran/27981\n+!    * match.c (gfc_match_if):  Handle errors in assignment in simple if.\n+!\n+module read\n+  integer i, j, k\n+  contains\n+    subroutine a\n+      integer, parameter :: n = 2\n+      if (i .eq. 0) read(j,*) k\n+      if (i .eq. 0) n = j    ! { dg-error \"assign to a named constant\" \"\" }\n+    end subroutine a\n+end module read"}]}