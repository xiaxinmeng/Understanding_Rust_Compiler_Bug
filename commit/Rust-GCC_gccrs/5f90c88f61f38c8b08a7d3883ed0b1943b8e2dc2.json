{"sha": "5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY5MGM4OGY2MWYzOGM4YjA4YTdkMzg4M2VkMGIxOTQzYjhlMmRjMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-10-16T17:22:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-10-16T17:22:38Z"}, "message": "PR libstdc++/29095 continued\n\n2006-10-16  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/29095 continued\n\t* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Additions\n\tso that testing not in the build directory works for the \"C\"\n\ttarget language.\n\nFrom-SVN: r117788", "tree": {"sha": "f8dfabce7d7b272b237355bb338fab54e6ff5214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8dfabce7d7b272b237355bb338fab54e6ff5214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2/comments", "author": null, "committer": null, "parents": [{"sha": "1082fd1084c181f2dfe01b482be65f00691f895f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1082fd1084c181f2dfe01b482be65f00691f895f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1082fd1084c181f2dfe01b482be65f00691f895f"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "29b5e3cb60e67ada8b4c2272a571fb1959538b54", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "patch": "@@ -1,3 +1,10 @@\n+2006-10-16  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/29095 continued\n+\t* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Additions\n+\tso that testing not in the build directory works for the \"C\"\n+\ttarget language.\n+\n 2006-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/bits/basic_string.tcc (_Rep::_S_create): Call"}, {"sha": "4030e6819b52edbac0dbcbe2c2551f7cd411e22d", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "patch": "@@ -88,6 +88,7 @@ proc libstdc++_init { testfile } {\n     global gluefile wrap_flags\n     global ld_library_path\n     global target_triplet\n+    global flags_file\n \n     # We set LC_ALL and LANG to C so that we get the same error\n     # messages as expected.\n@@ -191,9 +192,9 @@ proc libstdc++_init { testfile } {\n             set includes [exec sh $flags_file --build-includes]\n         } else {\n             set cxx [transform \"g++\"]\n-            set includes \"-I${srcdir}/util\"\n             set cxxldflags \"\"\n             set cxxflags \"-g -O2 -D_GLIBCXX_ASSERT -fmessage-length=0\" \n+            set includes \"-I${srcdir}/util\"\n         }\n     }\n \n@@ -357,19 +358,33 @@ proc v3_target_compile_as_c { source dest type options } {\n     global gluefile \n     global wrap_flags\n     global includes\n+    global flags_file\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n         lappend options \"libs=${gluefile}\"\n         lappend options \"ldflags=${wrap_flags}\"\n     }\n \n     set tname [target_info name]\n-    set cc_final [board_info $tname compiler]\n-    set cxxlibglossflags  [libgloss_link_flags]\n+    set cc [board_info $tname compiler]\n+    set cc_final $cc\n+    set cxxlibglossflags [libgloss_link_flags]\n     set cc_final [concat $cc_final $cxxlibglossflags]\n     set cc_final [concat $cc_final $includes]\n     regsub -all \".nostdinc..\" $cc_final \"\" cc_final\n \n+    # This is needed for \"C\" tests, as this type of test may need the\n+    # C++ includes. And if we're not testing in the build directory,\n+    # the includes variable is not likely to include the necessary info.\n+    if { ![file exists $flags_file] } {\n+\tset version [exec ${cc} -dumpversion]\n+\tset machine [exec ${cc} -dumpmachine]\n+\tset comp_base_dir [file dirname [file dirname [file dirname [file dirname [file dirname [exec ${cc} --print-prog-name=cc1]]]]]]\n+\tset includesbase \"${comp_base_dir}/include/c++/${version}\"\n+\tset includestarget \"${includesbase}/${machine}\"\n+\tset cc_final [concat $cc_final \"-I$includesbase -I$includestarget\"]\n+    }\n+\n     lappend options \"compiler=$cc_final\"\n     lappend options \"timeout=600\"\n "}]}