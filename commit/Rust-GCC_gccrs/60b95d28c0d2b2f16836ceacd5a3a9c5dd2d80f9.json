{"sha": "60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiOTVkMjhjMGQyYjJmMTY4MzZjZWFjZDVhM2E5YzVkZDJkODBmOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2012-10-12T08:00:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-10-12T08:00:29Z"}, "message": "re PR tree-optimization/54894 (internal compiler error: in vect_get_vec_def_for_operand, at tree-vect-stmts.c:1286)\n\n2012-10-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/54894\n\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size):\n\tHandle over-aligned scalar types properly.\n\n\t* gcc.dg/torture/pr54894.c: New testcase.\n\nFrom-SVN: r192390", "tree": {"sha": "a9a9494b469a7d228389d94e0e80f352daa12fb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a9494b469a7d228389d94e0e80f352daa12fb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b6222533e0a76c09f10d5002717bba1a7136e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b6222533e0a76c09f10d5002717bba1a7136e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b6222533e0a76c09f10d5002717bba1a7136e0b"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "c44c5ab7646a5dd594debc4b994c3a59b77861f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "patch": "@@ -1,3 +1,9 @@\n+2012-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54894\n+\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size):\n+\tHandle over-aligned scalar types properly.\n+\n 2012-10-12  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54760"}, {"sha": "776727c88afb060c01f821447c2236550b1720bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "patch": "@@ -1,3 +1,8 @@\n+2012-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54894\n+\t* gcc.dg/torture/pr54894.c: New testcase.\n+\n 2012-10-12  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/51244"}, {"sha": "277e371de62cbdec75f6062d4a978bb4b8848f56", "filename": "gcc/testsuite/gcc.dg/torture/pr54894.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54894.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54894.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54894.c?ref=60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+\n+typedef unsigned long long uint64_t;\n+\n+#define n 4096\n+double A[n][n] __attribute__((aligned(16)));\n+double B[n][n] __attribute__((aligned(16)));\n+double C[n][n] __attribute__((aligned(16)));\n+\n+#define tilesize 128\n+\n+typedef double adouble __attribute__((__aligned__(16)));\n+\n+void foo ()\n+{\n+  int ih, jh, kh, il, kl, jl;\n+  for (ih = 0; ih < n; ih += tilesize) \n+    for (jh = 0; jh < n; jh += tilesize)                 \n+      for (kh = 0; kh < n; kh += tilesize)                      \n+\tfor (il = 0; il < tilesize; ++il)\n+\t  {\n+\t    adouble *Ap = (adouble *)&A[ih+il][kh];\n+\t    for (kl = 0; kl < tilesize; ++kl)\n+\t      for (jl = 0; jl < tilesize; ++jl)\n+\t\tC[ih+il][jh+jl] += Ap[kl] * B[kh+kl][jh+jl];\n+\t  }\n+}"}, {"sha": "e1b7b7a0e7b87450b50612bfe44ead433df08287", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=60b95d28c0d2b2f16836ceacd5a3a9c5dd2d80f9", "patch": "@@ -6060,11 +6060,6 @@ get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n       && GET_MODE_CLASS (inner_mode) != MODE_FLOAT)\n     return NULL_TREE;\n \n-  /* We can't build a vector type of elements with alignment bigger than\n-     their size.  */\n-  if (nbytes < TYPE_ALIGN_UNIT (scalar_type))\n-    return NULL_TREE;\n-\n   /* For vector types of elements whose mode precision doesn't\n      match their types precision we use a element type of mode\n      precision.  The vectorization routines will have to make sure\n@@ -6086,6 +6081,11 @@ get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n       && !POINTER_TYPE_P (scalar_type))\n     scalar_type = lang_hooks.types.type_for_mode (inner_mode, 1);\n \n+  /* We can't build a vector type of elements with alignment bigger than\n+     their size.  */\n+  if (nbytes < TYPE_ALIGN_UNIT (scalar_type))\n+    scalar_type = lang_hooks.types.type_for_mode (inner_mode, 1);\n+\n   /* If no size was supplied use the mode the target prefers.   Otherwise\n      lookup a vector mode of the specified size.  */\n   if (size == 0)"}]}