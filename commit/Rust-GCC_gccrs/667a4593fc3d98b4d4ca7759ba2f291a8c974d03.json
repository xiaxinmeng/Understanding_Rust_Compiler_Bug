{"sha": "667a4593fc3d98b4d4ca7759ba2f291a8c974d03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY3YTQ1OTNmYzNkOThiNGQ0Y2E3NzU5YmEyZjI5MWE4Yzk3NGQwMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-19T20:27:20Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-19T20:27:20Z"}, "message": "(invariant_p): Reject const volatile references.\n\nFrom-SVN: r8666", "tree": {"sha": "24036833f2829fafa92587e82571c1aee33635c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24036833f2829fafa92587e82571c1aee33635c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/667a4593fc3d98b4d4ca7759ba2f291a8c974d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667a4593fc3d98b4d4ca7759ba2f291a8c974d03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667a4593fc3d98b4d4ca7759ba2f291a8c974d03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667a4593fc3d98b4d4ca7759ba2f291a8c974d03/comments", "author": null, "committer": null, "parents": [{"sha": "3ab7aa12380178bd9b3134a16b73fe50154303f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab7aa12380178bd9b3134a16b73fe50154303f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab7aa12380178bd9b3134a16b73fe50154303f4"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "885a7f46a54db923bf85500930d175967d139a00", "filename": "gcc/loop.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667a4593fc3d98b4d4ca7759ba2f291a8c974d03/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667a4593fc3d98b4d4ca7759ba2f291a8c974d03/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=667a4593fc3d98b4d4ca7759ba2f291a8c974d03", "patch": "@@ -2699,16 +2699,20 @@ invariant_p (x)\n       return n_times_set[REGNO (x)] == 0;\n \n     case MEM:\n+      /* Volatile memory references must be rejected.  Do this before\n+\t checking for read-only items, so that volatile read-only items\n+\t will be rejected also.  */\n+      if (MEM_VOLATILE_P (x))\n+\treturn 0;\n+\n       /* Read-only items (such as constants in a constant pool) are\n \t invariant if their address is.  */\n       if (RTX_UNCHANGING_P (x))\n \tbreak;\n \n       /* If we filled the table (or had a subroutine call), any location\n \t in memory could have been clobbered.  */\n-      if (unknown_address_altered\n-\t  /* Don't mess with volatile memory references.  */\n-\t  || MEM_VOLATILE_P (x))\n+      if (unknown_address_altered)\n \treturn 0;\n \n       /* See if there is any dependence between a store and this load.  */"}]}