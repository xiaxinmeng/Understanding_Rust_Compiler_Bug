{"sha": "7fd308cffa3775f62d69b63bc9b1cefced10d817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkMzA4Y2ZmYTM3NzVmNjJkNjliNjNiYzliMWNlZmNlZDEwZDgxNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-11T16:59:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-06-11T16:59:01Z"}, "message": "system.h (CONST_DOUBLE_OK_FOR_CONSTRAINT_P): Poison.\n\ngcc/\n\t* system.h (CONST_DOUBLE_OK_FOR_CONSTRAINT_P): Poison.\n\t* genpreds.c (have_const_dbl_constraints): Delete.\n\t(add_constraint): Don't set it.\n\t(write_tm_preds_h): Don't call CONST_DOUBLE_OK_FOR_CONSTRAINT_P.\n\t* ira-costs.c (record_reg_classes): Handle CONST_INT and CONST_DOUBLE\n\tconstraints using the lookup_constraint logic.\n\t* ira-lives.c (single_reg_class): Likewise.\n\t* ira.c (ira_setup_alts): Likewise.\n\t* lra-constraints.c (process_alt_operands): Likewise.\n\t* recog.c (asm_operand_ok, constrain_operands): Likewise.\n\t* reload.c (find_reloads): Likewise.\n\nFrom-SVN: r211474", "tree": {"sha": "d44d90996a8e4988ffeaca48c18b078c652a966b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d44d90996a8e4988ffeaca48c18b078c652a966b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd308cffa3775f62d69b63bc9b1cefced10d817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd308cffa3775f62d69b63bc9b1cefced10d817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd308cffa3775f62d69b63bc9b1cefced10d817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd308cffa3775f62d69b63bc9b1cefced10d817/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9c35eee65f97e368a89148572ca8a43d0eb071c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c35eee65f97e368a89148572ca8a43d0eb071c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c35eee65f97e368a89148572ca8a43d0eb071c"}], "stats": {"total": 206, "additions": 18, "deletions": 188}, "files": [{"sha": "3a6e9d7b8d3ddf167d432dfe7de34d1d309d0b28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -1,3 +1,17 @@\n+2014-06-11  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* system.h (CONST_DOUBLE_OK_FOR_CONSTRAINT_P): Poison.\n+\t* genpreds.c (have_const_dbl_constraints): Delete.\n+\t(add_constraint): Don't set it.\n+\t(write_tm_preds_h): Don't call CONST_DOUBLE_OK_FOR_CONSTRAINT_P.\n+\t* ira-costs.c (record_reg_classes): Handle CONST_INT and CONST_DOUBLE\n+\tconstraints using the lookup_constraint logic.\n+\t* ira-lives.c (single_reg_class): Likewise.\n+\t* ira.c (ira_setup_alts): Likewise.\n+\t* lra-constraints.c (process_alt_operands): Likewise.\n+\t* recog.c (asm_operand_ok, constrain_operands): Likewise.\n+\t* reload.c (find_reloads): Likewise.\n+\n 2014-06-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* genpreds.c (const_int_start, const_int_end): New variables."}, {"sha": "cc91139a8495472fef629d2e28a9cca33b4d6066", "filename": "gcc/genpreds.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -684,7 +684,6 @@ static bool have_memory_constraints;\n static bool have_address_constraints;\n static bool have_extra_constraints;\n static bool have_const_int_constraints;\n-static bool have_const_dbl_constraints;\n static unsigned int num_constraints;\n \n static const constraint_data **enum_order;\n@@ -888,7 +887,6 @@ add_constraint (const char *name, const char *regclass,\n   constraint_max_namelen = MAX (constraint_max_namelen, strlen (name));\n   have_register_constraints |= c->is_register;\n   have_const_int_constraints |= c->is_const_int;\n-  have_const_dbl_constraints |= c->is_const_dbl;\n   have_extra_constraints |= c->is_extra;\n   have_memory_constraints |= c->is_memory;\n   have_address_constraints |= c->is_address;\n@@ -1375,11 +1373,6 @@ write_tm_preds_h (void)\n \t      \"{\\n\"\n \t      \"  return false;\\n\"\n \t      \"}\\n\");\n-      if (have_const_dbl_constraints)\n-\tputs (\"#define CONST_DOUBLE_OK_FOR_CONSTRAINT_P(v_,c_,s_) \\\\\\n\"\n-\t      \"    constraint_satisfied_p (v_, lookup_constraint (s_))\\n\");\n-      else\n-\tputs (\"#define CONST_DOUBLE_OK_FOR_CONSTRAINT_P(v_,c_,s_) 0\\n\");\n \n       puts (\"enum constraint_type\\n\"\n \t    \"{\\n\""}, {"sha": "5d317560d67ea32af9d22699195c914548121008", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -703,13 +703,6 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t\t    win = 1;\n \t\t  break;\n \n-\t\tcase 'G':\n-\t\tcase 'H':\n-\t\t  if (CONST_DOUBLE_AS_FLOAT_P (op) \n-\t\t      && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, c, p))\n-\t\t    win = 1;\n-\t\t  break;\n-\n \t\tcase 's':\n \t\t  if (CONST_SCALAR_INT_P (op)) \n \t\t    break;\n@@ -725,19 +718,6 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t\t    win = 1;\n \t\t  break;\n \n-\t\tcase 'I':\n-\t\tcase 'J':\n-\t\tcase 'K':\n-\t\tcase 'L':\n-\t\tcase 'M':\n-\t\tcase 'N':\n-\t\tcase 'O':\n-\t\tcase 'P':\n-\t\t  if (CONST_INT_P (op)\n-\t\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), c, p))\n-\t\t    win = 1;\n-\t\t  break;\n-\n \t\tcase 'X':\n \t\t  win = 1;\n \t\t  break;"}, {"sha": "af8ec2b80d4732908ea239c4f77d8432744d5737", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 3, "deletions": 28, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -801,23 +801,6 @@ single_reg_class (const char *constraints, rtx op, rtx equiv_const)\n \t    return NO_REGS;\n \t  break;\n \n-\tcase 'I':\n-\tcase 'J':\n-\tcase 'K':\n-\tcase 'L':\n-\tcase 'M':\n-\tcase 'N':\n-\tcase 'O':\n-\tcase 'P':\n-\t  if ((CONST_INT_P (op)\n-\t       && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), c, constraints))\n-\t      || (equiv_const != NULL_RTX\n-\t\t  && CONST_INT_P (equiv_const)\n-\t\t  && CONST_OK_FOR_CONSTRAINT_P (INTVAL (equiv_const),\n-\t\t\t\t\t\tc, constraints)))\n-\t    return NO_REGS;\n-\t  break;\n-\n \tcase 'E':\n \tcase 'F':\n \t  if (CONST_DOUBLE_AS_FLOAT_P (op) \n@@ -831,17 +814,9 @@ single_reg_class (const char *constraints, rtx op, rtx equiv_const)\n \t    return NO_REGS;\n \t  break;\n \n-\tcase 'G':\n-\tcase 'H':\n-\t  if ((CONST_DOUBLE_AS_FLOAT_P (op) \n-\t       && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, c, constraints))\n-\t      || (equiv_const != NULL_RTX\n-\t\t  && CONST_DOUBLE_AS_FLOAT_P (equiv_const) \n-\t\t  && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (equiv_const,\n-\t\t\t\t\t\t       c, constraints)))\n-\t    return NO_REGS;\n-\t  break;\n-\n+\tcase 'I': case 'J': case 'K': case 'L': case 'M': case 'N':\n+\tcase 'O': case 'P':\n+\tcase 'G': case 'H':\n \tcase 'r':\n \tcase 'a': case 'b': case 'c': case 'd': case 'e': case 'f':\n \tcase 'h': case 'j': case 'k': case 'l':"}, {"sha": "f724fd4b4d2b356eacea2e7d5b0c7a1c432fc9b5", "filename": "gcc/ira.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -1883,13 +1883,6 @@ ira_setup_alts (rtx insn, HARD_REG_SET &alts)\n \t\t      goto op_success;\n \t\t    break;\n \t\t    \n-\t\t  case 'G':\n-\t\t  case 'H':\n-\t\t    if (CONST_DOUBLE_AS_FLOAT_P (op)\n-\t\t\t&& CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, c, p))\n-\t\t      goto op_success;\n-\t\t    break;\n-\t\t    \n \t\t  case 's':\n \t\t    if (CONST_SCALAR_INT_P (op))\n \t\t      break;\n@@ -1903,19 +1896,6 @@ ira_setup_alts (rtx insn, HARD_REG_SET &alts)\n \t\t      goto op_success;\n \t\t    break;\n \t\t    \n-\t\t  case 'I':\n-\t\t  case 'J':\n-\t\t  case 'K':\n-\t\t  case 'L':\n-\t\t  case 'M':\n-\t\t  case 'N':\n-\t\t  case 'O':\n-\t\t  case 'P':\n-\t\t    if (CONST_INT_P (op)\n-\t\t\t&& CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), c, p))\n-\t\t      goto op_success;\n-\t\t    break;\n-\t\t    \n \t\t  case 'V':\n \t\t    if (MEM_P (op) && ! offsettable_memref_p (op))\n \t\t      goto op_success;"}, {"sha": "284116df1e47a5c52ac0becd93ee0b0ae6c1d036", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -1980,13 +1980,6 @@ process_alt_operands (int only_alternative)\n \t\t    win = true;\n \t\t  break;\n \n-\t\tcase 'G':\n-\t\tcase 'H':\n-\t\t  if (CONST_DOUBLE_AS_FLOAT_P (op)\n-\t\t      && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, c, p))\n-\t\t    win = true;\n-\t\t  break;\n-\n \t\tcase 's':\n \t\t  if (CONST_SCALAR_INT_P (op))\n \t\t    break;\n@@ -2001,19 +1994,6 @@ process_alt_operands (int only_alternative)\n \t\t    win = true;\n \t\t  break;\n \n-\t\tcase 'I':\n-\t\tcase 'J':\n-\t\tcase 'K':\n-\t\tcase 'L':\n-\t\tcase 'M':\n-\t\tcase 'N':\n-\t\tcase 'O':\n-\t\tcase 'P':\n-\t\t  if (CONST_INT_P (op)\n-\t\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), c, p))\n-\t\t    win = true;\n-\t\t  break;\n-\n \t\tcase 'X':\n \t\t  /* This constraint should be excluded by the fast\n \t\t     track.  */"}, {"sha": "4d72919378f56096c302c7e4c857be447894d6cd", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -1827,17 +1827,6 @@ asm_operand_ok (rtx op, const char *constraint, const char **constraints)\n \t    result = 1;\n \t  break;\n \n-\tcase 'G':\n-\t  if (CONST_DOUBLE_AS_FLOAT_P (op)\n-\t      && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, 'G', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'H':\n-\t  if (CONST_DOUBLE_AS_FLOAT_P (op)\n-\t      && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, 'H', constraint))\n-\t    result = 1;\n-\t  break;\n-\n \tcase 's':\n \t  if (CONST_SCALAR_INT_P (op))\n \t    break;\n@@ -1853,47 +1842,6 @@ asm_operand_ok (rtx op, const char *constraint, const char **constraints)\n \t    result = 1;\n \t  break;\n \n-\tcase 'I':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'I', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'J':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'J', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'K':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'K', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'L':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'L', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'M':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'M', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'N':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'N', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'O':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'O', constraint))\n-\t    result = 1;\n-\t  break;\n-\tcase 'P':\n-\t  if (CONST_INT_P (op)\n-\t      && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), 'P', constraint))\n-\t    result = 1;\n-\t  break;\n-\n \tcase 'X':\n \t  result = 1;\n \t  break;\n@@ -2802,13 +2750,6 @@ constrain_operands (int strict)\n \t\t  win = 1;\n \t\tbreak;\n \n-\t      case 'G':\n-\t      case 'H':\n-\t\tif (CONST_DOUBLE_AS_FLOAT_P (op)\n-\t\t    && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (op, c, p))\n-\t\t  win = 1;\n-\t\tbreak;\n-\n \t      case 's':\n \t\tif (CONST_SCALAR_INT_P (op))\n \t\t  break;\n@@ -2822,19 +2763,6 @@ constrain_operands (int strict)\n \t\t  win = 1;\n \t\tbreak;\n \n-\t      case 'I':\n-\t      case 'J':\n-\t      case 'K':\n-\t      case 'L':\n-\t      case 'M':\n-\t      case 'N':\n-\t      case 'O':\n-\t      case 'P':\n-\t\tif (CONST_INT_P (op)\n-\t\t    && CONST_OK_FOR_CONSTRAINT_P (INTVAL (op), c, p))\n-\t\t  win = 1;\n-\t\tbreak;\n-\n \t      case 'V':\n \t\tif (MEM_P (op)\n \t\t    && ((strict > 0 && ! offsettable_memref_p (op))"}, {"sha": "d3f5a8aea1bbc95de0c7c27e59545472a4ac9064", "filename": "gcc/reload.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -3434,13 +3434,6 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t      win = 1;\n \t\t    break;\n \n-\t\t  case 'G':\n-\t\t  case 'H':\n-\t\t    if (CONST_DOUBLE_AS_FLOAT_P (operand)\n-\t\t\t&& CONST_DOUBLE_OK_FOR_CONSTRAINT_P (operand, c, p))\n-\t\t      win = 1;\n-\t\t    break;\n-\n \t\t  case 's':\n \t\t    if (CONST_SCALAR_INT_P (operand))\n \t\t      break;\n@@ -3455,19 +3448,6 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t      win = 1;\n \t\t    break;\n \n-\t\t  case 'I':\n-\t\t  case 'J':\n-\t\t  case 'K':\n-\t\t  case 'L':\n-\t\t  case 'M':\n-\t\t  case 'N':\n-\t\t  case 'O':\n-\t\t  case 'P':\n-\t\t    if (CONST_INT_P (operand)\n-\t\t\t&& CONST_OK_FOR_CONSTRAINT_P (INTVAL (operand), c, p))\n-\t\t      win = 1;\n-\t\t    break;\n-\n \t\t  case 'X':\n \t\t    force_reload = 0;\n \t\t    win = 1;"}, {"sha": "29da7974ced48df5bb910e3a9fd88b1114526a9f", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd308cffa3775f62d69b63bc9b1cefced10d817/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=7fd308cffa3775f62d69b63bc9b1cefced10d817", "patch": "@@ -933,7 +933,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tCONST_DOUBLE_OK_FOR_LETTER_P EXTRA_CONSTRAINT\t\t\t   \\\n \tREG_CLASS_FROM_CONSTRAINT REG_CLASS_FOR_CONSTRAINT\t\t   \\\n \tEXTRA_CONSTRAINT_STR EXTRA_MEMORY_CONSTRAINT\t\t\t   \\\n-\tEXTRA_ADDRESS_CONSTRAINT\n+\tEXTRA_ADDRESS_CONSTRAINT CONST_DOUBLE_OK_FOR_CONSTRAINT_P\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}