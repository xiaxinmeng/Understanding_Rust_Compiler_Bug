{"sha": "a5650762680ea88c789906de91ded06ee48e1e67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU2NTA3NjI2ODBlYTg4Yzc4OTkwNmRlOTFkZWQwNmVlNDhlMWU2Nw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-12-30T16:07:33Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-12-30T16:07:33Z"}, "message": "Remove assert in reshape_init_r.\n\nAsserting !BRACE_ENCLOSED_INITIALIZER_P seems pretty pointless, since\nthat checks for init_list_type_node, and a compound literal won't have\nthat type, nor will we see that type if we just checked that it's\nsomething else.\n\n\t* decl.c (reshape_init_r): Remove assert.\n\nFrom-SVN: r279771", "tree": {"sha": "33f39687b65b22c03f7cd1dba3cdcce56905ce54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f39687b65b22c03f7cd1dba3cdcce56905ce54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5650762680ea88c789906de91ded06ee48e1e67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5650762680ea88c789906de91ded06ee48e1e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5650762680ea88c789906de91ded06ee48e1e67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5650762680ea88c789906de91ded06ee48e1e67/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04e4997a567142f56dc83eba67b9590c0431d7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e4997a567142f56dc83eba67b9590c0431d7da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04e4997a567142f56dc83eba67b9590c0431d7da"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "a237a8ffba3f5bc903650ab198486bb2b595c922", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5650762680ea88c789906de91ded06ee48e1e67/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5650762680ea88c789906de91ded06ee48e1e67/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a5650762680ea88c789906de91ded06ee48e1e67", "patch": "@@ -1,3 +1,7 @@\n+2019-12-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* decl.c (reshape_init_r): Remove assert.\n+\n 2019-12-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl2.c (delete_sanity): Add location_t parameter and use"}, {"sha": "afe2aacf0d5f21c9508135644959d803a21dd1c3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5650762680ea88c789906de91ded06ee48e1e67/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5650762680ea88c789906de91ded06ee48e1e67/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a5650762680ea88c789906de91ded06ee48e1e67", "patch": "@@ -6408,7 +6408,6 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n \t  else if (same_type_ignoring_top_level_qualifiers_p (type, init_type))\n \t    {\n \t      ++d->cur;\n-\t      gcc_assert (!BRACE_ENCLOSED_INITIALIZER_P (stripped_init));\n \t      return init;\n \t    }\n \t  else"}]}