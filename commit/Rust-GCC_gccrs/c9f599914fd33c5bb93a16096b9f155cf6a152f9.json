{"sha": "c9f599914fd33c5bb93a16096b9f155cf6a152f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlmNTk5OTE0ZmQzM2M1YmI5M2ExNjA5NmI5ZjE1NWNmNmExNTJmOQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-04-24T12:08:05Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-04-24T12:08:05Z"}, "message": "re PR target/31641 (ICE in s390_expand_setmem, at config/s390/s390.c:3618)\n\n2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\tPR target/31641\n\t* config/s390/s390.c (s390_expand_setmem): Don't ICE for constant length\n\targument of 0 for memset.\n\t(s390_expand_movmem, s390_expand_setmem, s390_expand_cmpmem): Use\n\tunsigned shift instead of the signed variant.\n\n2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\tPR target/31641\n\t* gcc.c-torture/compile/pr31641.c: New testcase.\n\nFrom-SVN: r124099", "tree": {"sha": "c3b296a90710687cf466dcf02eea2a725f48276c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3b296a90710687cf466dcf02eea2a725f48276c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9f599914fd33c5bb93a16096b9f155cf6a152f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f599914fd33c5bb93a16096b9f155cf6a152f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f599914fd33c5bb93a16096b9f155cf6a152f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f599914fd33c5bb93a16096b9f155cf6a152f9/comments", "author": null, "committer": null, "parents": [{"sha": "c0e7e2bf135c352e2e57bb36502798949c2f0bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e7e2bf135c352e2e57bb36502798949c2f0bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e7e2bf135c352e2e57bb36502798949c2f0bf7"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "4084f0402a5ce9848cf8d91bc8563f2873bc9bc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9f599914fd33c5bb93a16096b9f155cf6a152f9", "patch": "@@ -1,3 +1,11 @@\n+2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR target/31641\n+\t* config/s390/s390.c (s390_expand_setmem): Don't ICE for constant length\n+\targument of 0 for memset.\n+\t(s390_expand_movmem, s390_expand_setmem, s390_expand_cmpmem): Use\n+\tunsigned shift instead of the signed variant.\n+\n 2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (\"*cmp<mode>_ccs_0_ibm\", \"*cmp<mode>_ccs_ibm\","}, {"sha": "ced302a5ba8a80b17ab83343ee4bb34d8e998100", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=c9f599914fd33c5bb93a16096b9f155cf6a152f9", "patch": "@@ -3570,7 +3570,7 @@ s390_expand_movmem (rtx dst, rtx src, rtx len)\n       if (temp != count)\n         emit_move_insn (count, temp);\n \n-      temp = expand_binop (mode, ashr_optab, count, GEN_INT (8), blocks, 1, 0);\n+      temp = expand_binop (mode, lshr_optab, count, GEN_INT (8), blocks, 1, 0);\n       if (temp != blocks)\n         emit_move_insn (blocks, temp);\n \n@@ -3607,10 +3607,12 @@ s390_expand_movmem (rtx dst, rtx src, rtx len)\n void\n s390_expand_setmem (rtx dst, rtx len, rtx val)\n {\n-  gcc_assert (GET_CODE (len) != CONST_INT || INTVAL (len) > 0);\n+  if (GET_CODE (len) == CONST_INT && INTVAL (len) == 0)\n+    return;\n+\n   gcc_assert (GET_CODE (val) == CONST_INT || GET_MODE (val) == QImode);\n   \n-  if (GET_CODE (len) == CONST_INT && INTVAL (len) <= 257)\n+  if (GET_CODE (len) == CONST_INT && INTVAL (len) > 0 && INTVAL (len) <= 257)\n     {\n       if (val == const0_rtx && INTVAL (len) <= 256)\n         emit_insn (gen_clrmem_short (dst, GEN_INT (INTVAL (len) - 1)));\n@@ -3684,7 +3686,7 @@ s390_expand_setmem (rtx dst, rtx len, rtx val)\n       if (temp != count)\n         emit_move_insn (count, temp);\n \n-      temp = expand_binop (mode, ashr_optab, count, GEN_INT (8), blocks, 1, 0);\n+      temp = expand_binop (mode, lshr_optab, count, GEN_INT (8), blocks, 1, 0);\n       if (temp != blocks)\n         emit_move_insn (blocks, temp);\n \n@@ -3776,7 +3778,7 @@ s390_expand_cmpmem (rtx target, rtx op0, rtx op1, rtx len)\n       if (temp != count)\n         emit_move_insn (count, temp);\n \n-      temp = expand_binop (mode, ashr_optab, count, GEN_INT (8), blocks, 1, 0);\n+      temp = expand_binop (mode, lshr_optab, count, GEN_INT (8), blocks, 1, 0);\n       if (temp != blocks)\n         emit_move_insn (blocks, temp);\n "}, {"sha": "cad1ee8a5ff91abe9019d116a69874a2c81bf7b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f599914fd33c5bb93a16096b9f155cf6a152f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c9f599914fd33c5bb93a16096b9f155cf6a152f9", "patch": "@@ -1,3 +1,8 @@\n+2007-04-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR target/31641\n+\t* gcc.c-torture/compile/pr31641.c: New testcase.\n+\n 2007-04-24  Richard Sandiford  <richard@nildram.co.uk>\n \n \t* gcc.target/mips/madd-1.c, gcc.target/mips/madd-2.c,"}]}