{"sha": "0cd3301ba72bd155f8808d6395e5766a592e980c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNkMzMwMWJhNzJiZDE1NWY4ODA4ZDYzOTVlNTc2NmE1OTJlOTgwYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-04-19T04:01:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-19T04:01:15Z"}, "message": "ifcvt.c (find_cond_trap): Handle cases with no proper THEN or JOIN blocks.\n\n        * ifcvt.c (find_cond_trap): Handle cases with no proper THEN or JOIN\n        blocks.  Handle multiple references to the TRAP block.  Handle\n        non-adjacent THEN and OTHER blocks.\n\n        * gcc.dg/20000906-1.c: Enable for all targets.\n        * gcc.c-torture/compile/iftrap-2.c: New.\n\nFrom-SVN: r52509", "tree": {"sha": "58dcecad5cf8668288128a3984ee569d5e016a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58dcecad5cf8668288128a3984ee569d5e016a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cd3301ba72bd155f8808d6395e5766a592e980c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd3301ba72bd155f8808d6395e5766a592e980c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd3301ba72bd155f8808d6395e5766a592e980c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd3301ba72bd155f8808d6395e5766a592e980c/comments", "author": null, "committer": null, "parents": [{"sha": "2840e66a788bf5d64db91f2817ea7e5336904cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2840e66a788bf5d64db91f2817ea7e5336904cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2840e66a788bf5d64db91f2817ea7e5336904cfb"}], "stats": {"total": 110, "additions": 60, "deletions": 50}, "files": [{"sha": "6a2aa3ea1449a3ffddc450b2396da59446597d91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cd3301ba72bd155f8808d6395e5766a592e980c", "patch": "@@ -1,3 +1,16 @@\n+2002-04-18  Richard Henderson  <rth@redhat.com>\n+\n+        * ifcvt.c (find_cond_trap): Handle cases with no proper THEN or JOIN\n+        blocks.  Handle multiple references to the TRAP block.  Handle\n+        non-adjacent THEN and OTHER blocks.\n+\n+2002-04-18  Richard Henderson  <rth@redhat.com>\n+\n+        * config/ia64/ia64.c (ia64_function_arg_pass_by_reference): Don't\n+        crash with no type for by-mode libcalls.\n+\n+        * config/ia64/ia64.md (conditional_trap): Fix predicate polarity.\n+\n 2002-04-18  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/lib2funcs.S (__xtensa_libgcc_window_spill,"}, {"sha": "f46a6cf7cc151e3c63b4e6fb186530a6f5936e7d", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 31, "deletions": 48, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=0cd3301ba72bd155f8808d6395e5766a592e980c", "patch": "@@ -2080,56 +2080,27 @@ find_cond_trap (test_bb, then_edge, else_edge)\n      basic_block test_bb;\n      edge then_edge, else_edge;\n {\n-  basic_block then_bb, else_bb, join_bb, trap_bb;\n+  basic_block then_bb, else_bb, trap_bb, other_bb;\n   rtx trap, jump, cond, cond_earliest, seq;\n   enum rtx_code code;\n \n   then_bb = then_edge->dest;\n   else_bb = else_edge->dest;\n-  join_bb = NULL;\n \n   /* Locate the block with the trap instruction.  */\n   /* ??? While we look for no successors, we really ought to allow\n      EH successors.  Need to fix merge_if_block for that to work.  */\n-  /* ??? We can't currently handle merging the blocks if they are not\n-     already adjacent.  Prevent losage in merge_if_block by detecting\n-     this now.  */\n   if ((trap = block_has_only_trap (then_bb)) != NULL)\n-    {\n-      trap_bb = then_bb;\n-      if (else_bb->index != then_bb->index + 1)\n-\treturn FALSE;\n-      join_bb = else_bb;\n-      else_bb = NULL;\n-    }\n+    trap_bb = then_bb, other_bb = else_bb;\n   else if ((trap = block_has_only_trap (else_bb)) != NULL)\n-    {\n-      trap_bb = else_bb;\n-      if (else_bb->index != then_bb->index + 1)\n-\telse_bb = NULL;\n-      else if (then_bb->succ\n-\t  && ! then_bb->succ->succ_next\n-\t  && ! (then_bb->succ->flags & EDGE_COMPLEX)\n-\t  && then_bb->succ->dest->index == else_bb->index + 1)\n-\tjoin_bb = then_bb->succ->dest;\n-    }\n+    trap_bb = else_bb, other_bb = then_bb;\n   else\n     return FALSE;\n \n   if (rtl_dump_file)\n     {\n-      if (trap_bb == then_bb)\n-\tfprintf (rtl_dump_file,\n-\t\t \"\\nTRAP-IF block found, start %d, trap %d\",\n-\t\t test_bb->index, then_bb->index);\n-      else\n-\tfprintf (rtl_dump_file,\n-\t\t \"\\nTRAP-IF block found, start %d, then %d, trap %d\",\n-\t\t test_bb->index, then_bb->index, trap_bb->index);\n-      if (join_bb)\n-\tfprintf (rtl_dump_file, \", join %d\\n\", join_bb->index);\n-      else\n-\tfputc ('\\n', rtl_dump_file);\n+      fprintf (rtl_dump_file, \"\\nTRAP-IF block found, start %d, trap %d\\n\",\n+\t       test_bb->index, trap_bb->index);\n     }\n \n   /* If this is not a standard conditional jump, we can't parse it.  */\n@@ -2162,24 +2133,36 @@ find_cond_trap (test_bb, then_edge, else_edge)\n   if (seq == NULL)\n     return FALSE;\n \n-  /* Emit the new insns before cond_earliest; delete the old jump.  */\n+  /* Emit the new insns before cond_earliest.  */\n   emit_insn_before (seq, cond_earliest);\n-  delete_insn (jump);\n \n-  /* Delete the trap block together with its insn.  */\n-  if (trap_bb == then_bb)\n-    then_bb = NULL;\n-  else if (else_bb == NULL)\n-    ;\n-  else if (trap_bb == else_bb)\n-    else_bb = NULL;\n+  /* Delete the trap block if possible.  */\n+  remove_edge (trap_bb == then_bb ? then_edge : else_edge);\n+  if (trap_bb->pred == NULL)\n+    {\n+      flow_delete_block (trap_bb);\n+      num_removed_blocks++;\n+    }\n+\n+  /* If the non-trap block and the test are now adjacent, merge them.\n+     Otherwise we must insert a direct branch.  */\n+  if (test_bb->index + 1 == other_bb->index)\n+    {\n+      delete_insn (jump);\n+      merge_if_block (test_bb, NULL, NULL, other_bb);\n+    }\n   else\n-    abort ();\n-  flow_delete_block (trap_bb);\n-  num_removed_blocks++;\n+    {\n+      rtx lab, newjump;\n \n-  /* Merge what's left.  */\n-  merge_if_block (test_bb, then_bb, else_bb, join_bb);\n+      lab = JUMP_LABEL (jump);\n+      newjump = emit_jump_insn_after (gen_jump (lab), jump);\n+      LABEL_NUSES (lab) += 1;\n+      JUMP_LABEL (newjump) = lab;\n+      emit_barrier_after (newjump);\n+\n+      delete_insn (jump);\n+    }\n \n   return TRUE;\n }"}, {"sha": "60b580ea6967ede3fe56355ff39d7c35ef54e769", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cd3301ba72bd155f8808d6395e5766a592e980c", "patch": "@@ -1,3 +1,8 @@\n+2002-04-18  Richard Henderson  <rth@redhat.com>\n+\n+        * gcc.dg/20000906-1.c: Enable for all targets.\n+        * gcc.c-torture/compile/iftrap-2.c: New.\n+\n 2002-04-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20020418-1.c: New test."}, {"sha": "bb7bb5726b1b70d1bd235cc7343fb9dde0e860fe", "filename": "gcc/testsuite/gcc.c-torture/compile/iftrap-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-2.c?ref=0cd3301ba72bd155f8808d6395e5766a592e980c", "patch": "@@ -0,0 +1,10 @@\n+void foo(int p, int q)\n+{\n+  if (p)\n+    {\n+      if (q)\n+        __builtin_trap ();\n+    }\n+  else\n+    bar();\n+}"}, {"sha": "90d09d4dba5b4290b75aa8115990da87f8ecf611", "filename": "gcc/testsuite/gcc.dg/20000906-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2Fgcc.dg%2F20000906-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3301ba72bd155f8808d6395e5766a592e980c/gcc%2Ftestsuite%2Fgcc.dg%2F20000906-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000906-1.c?ref=0cd3301ba72bd155f8808d6395e5766a592e980c", "patch": "@@ -1,5 +1,4 @@\n-/* The target must support __builtin_trap to run this test.  */\n-/* { dg-do run { target i?86-*-* mips*-*-* powerpc*-*-* m68k-*-* sparc*-*-* i960*-*-* } } */\n+/* { dg-do run } */\n \n /* Testcase distilled from glibc's nss_parse_service_list in nss/nsswitch.c\n    It can't be distilled further.  Fails with `-O2' for i[3456]86.  */"}]}