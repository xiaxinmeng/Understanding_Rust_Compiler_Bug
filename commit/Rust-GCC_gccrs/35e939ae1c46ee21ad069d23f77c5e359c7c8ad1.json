{"sha": "35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlOTM5YWUxYzQ2ZWUyMWFkMDY5ZDIzZjc3YzVlMzU5YzdjOGFkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-03-17T15:45:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-17T15:45:29Z"}, "message": "re PR c++/9993 (destructor not called for local object created within and returned from infinite loop)\n\n        PR c++/9993\n        * decl.c (finish_function): Only allow the NRVO to use variables\n        declared at function scope.\n\nFrom-SVN: r64488", "tree": {"sha": "5e415b4ac71c0adab0b0fb00508728fe2bc54f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e415b4ac71c0adab0b0fb00508728fe2bc54f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1b62339fa1f8b2021750ffe334adc3da73e8d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b62339fa1f8b2021750ffe334adc3da73e8d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b62339fa1f8b2021750ffe334adc3da73e8d02"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "2439eddb630589530016f3b8a251aaf084ceb258", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "patch": "@@ -1,3 +1,9 @@\n+2003-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/9993\n+\t* decl.c (finish_function): Only allow the NRVO to use variables\n+\tdeclared at function scope.\n+\n 2003-03-17  Andreas Jaeger  <aj@suse.de>\n \n \t* Make-lang.in (cp/TAGS): Remove."}, {"sha": "e00a5f32e38b59e57629bfb78584053b814bc8a4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "patch": "@@ -14092,11 +14092,21 @@ finish_function (int flags)\n   if (current_function_return_value)\n     {\n       tree r = current_function_return_value;\n-      /* This is only worth doing for fns that return in memory--and\n-\t simpler, since we don't have to worry about promoted modes.  */\n+      tree outer;\n+\n       if (r != error_mark_node\n-\t  && aggregate_value_p (TREE_TYPE (TREE_TYPE (fndecl))))\n+\t  /* This is only worth doing for fns that return in memory--and\n+\t     simpler, since we don't have to worry about promoted modes.  */\n+\t  && aggregate_value_p (TREE_TYPE (TREE_TYPE (fndecl)))\n+\t  /* Only allow this for variables declared in the outer scope of\n+\t     the function so we know that their lifetime always ends with a\n+\t     return; see g++.dg/opt/nrv6.C.  We could be more flexible if\n+\t     we were to do this optimization in tree-ssa.  */\n+\t  /* Skip the artificial function body block.  */\n+\t  && (outer = BLOCK_SUBBLOCKS (BLOCK_SUBBLOCKS (DECL_INITIAL (fndecl))),\n+\t      chain_member (r, BLOCK_VARS (outer))))\n \t{\n+\t  \n \t  DECL_ALIGN (r) = DECL_ALIGN (DECL_RESULT (fndecl));\n \t  walk_tree_without_duplicates (&DECL_SAVED_TREE (fndecl),\n \t\t\t\t\tnullify_returns_r, r);"}, {"sha": "57ff12e41f4f5f6d72f460ef0326e0c15d4a68a3", "filename": "gcc/testsuite/g++.dg/opt/nrv6.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e939ae1c46ee21ad069d23f77c5e359c7c8ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv6.C?ref=35e939ae1c46ee21ad069d23f77c5e359c7c8ad1", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/9993\n+// Bug: We were failing to destroy b.\n+\n+// { dg-do run }\n+\n+int c, d;\n+\n+struct Object {\n+  Object()                      { ++c; }\n+  Object(const Object&)         { ++c; }\n+  ~Object()                     { ++d; }\n+};\n+\n+Object function() {\n+  int i = 0;\n+  do {\n+    Object b;\n+    if (i++ == 2)\n+      return b;\n+  } while (1);\n+}\n+\n+int main() {\n+  function();\n+  return c != d;\n+}"}]}