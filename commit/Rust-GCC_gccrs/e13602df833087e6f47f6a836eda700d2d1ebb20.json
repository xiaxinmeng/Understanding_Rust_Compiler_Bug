{"sha": "e13602df833087e6f47f6a836eda700d2d1ebb20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzNjAyZGY4MzMwODdlNmY0N2Y2YTgzNmVkYTcwMGQyZDFlYmIyMA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-10-17T12:42:51Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-10-17T12:42:51Z"}, "message": "sh.h (OPTIMIZATION_OPTIONS): Set flag_schedule_insns to 2 if it's already non-zero.\n\n\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Set flag_schedule_insns\n\tto 2 if it's already non-zero.\n\t(OVERRIDE_OPTIONS): Clear flag_schedule_insns if flag_exceptions\n\tis set and warn about it if flag_schedule_insns is 1.\n\nFrom-SVN: r105496", "tree": {"sha": "de9122c93809b4e9c25928d65dfee5b865e22208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de9122c93809b4e9c25928d65dfee5b865e22208"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13602df833087e6f47f6a836eda700d2d1ebb20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13602df833087e6f47f6a836eda700d2d1ebb20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13602df833087e6f47f6a836eda700d2d1ebb20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13602df833087e6f47f6a836eda700d2d1ebb20/comments", "author": null, "committer": null, "parents": [{"sha": "a95c63d87679a6a682f0d923c988d2480c5f5525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95c63d87679a6a682f0d923c988d2480c5f5525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95c63d87679a6a682f0d923c988d2480c5f5525"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "9825d7463eb43e447ef62f3616755bc4e322f90e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13602df833087e6f47f6a836eda700d2d1ebb20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13602df833087e6f47f6a836eda700d2d1ebb20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e13602df833087e6f47f6a836eda700d2d1ebb20", "patch": "@@ -1,3 +1,10 @@\n+2005-10-17  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Set flag_schedule_insns\n+\tto 2 if it's already non-zero.\n+\t(OVERRIDE_OPTIONS): Clear flag_schedule_insns if flag_exceptions\n+\tis set and warn about it if flag_schedule_insns is 1.\n+\n 2005-10-17  Paul Woegerer  <paul.woegerer@nsc.com>\n \n \t* config/crx/crx.md: Compare-and-branch instructions need to"}, {"sha": "486cc97544d7c85e1e9b3b13809b3d96f6e4e235", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13602df833087e6f47f6a836eda700d2d1ebb20/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13602df833087e6f47f6a836eda700d2d1ebb20/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=e13602df833087e6f47f6a836eda700d2d1ebb20", "patch": "@@ -486,6 +486,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n     flag_finite_math_only.  We set it to 2 here so we know if the user\t\\\n     explicitly requested this to be on or off.  */\t\t\t\\\n   flag_finite_math_only = 2;\t\t\t\t\t\t\\\n+  /* If flag_schedule_insns is 1, we set it to 2 here so we know if\t\\\n+     the user explicitly requested this to be on or off.  */\t\t\\\n+  if (flag_schedule_insns > 0)\t\t\t\t\t\t\\\n+    flag_schedule_insns = 2;\t\t\t\t\t\t\\\n } while (0)\n \n #define ASSEMBLER_DIALECT assembler_dialect\n@@ -661,6 +665,17 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t SH3 and lower as they give spill failures for R0.  */\t\t\\\n       if (!TARGET_HARD_SH4) \t\t\t\t\t\t\\\n         flag_schedule_insns = 0;\t\t \t\t\t\\\n+      /* ??? Current exception handling places basic block boundaries\t\\\n+\t after call_insns.  It causes the high pressure on R0 and gives\t\\\n+\t spill failures for R0 in reload.  See PR 22553 and the thread\t\\\n+\t on gcc-patches\t\t\t\t\t\t\t\\\n+         <http://gcc.gnu.org/ml/gcc-patches/2005-10/msg00816.html>.  */\t\\\n+      else if (flag_exceptions)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  if (flag_schedule_insns == 1)\t\t \t\t\t\\\n+\t    warning (0, \"ignoring -fschedule-insns because of exception handling bug\");\t\\\n+\t  flag_schedule_insns = 0;\t\t \t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (align_loops == 0)\t\t\t\t\t\t\t\\"}]}