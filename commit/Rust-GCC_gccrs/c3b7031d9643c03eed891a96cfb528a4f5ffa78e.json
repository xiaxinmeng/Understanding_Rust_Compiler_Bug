{"sha": "c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiNzAzMWQ5NjQzYzAzZWVkODkxYTk2Y2ZiNTI4YTRmNWZmYTc4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-04-02T17:49:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-04-02T17:49:21Z"}, "message": "re PR c++/31187 (extern declaration of variable in anonymous namespace prevents use of its address as template argument)\n\n        PR c++/31187                                                               \n        * typeck.c (cp_type_readonly): New fn.                                         \n        * cp-tree.h: Declare it.                                                       \n        * decl.c (start_decl): Set implicit DECL_THIS_STATIC here.                     \n        (cp_finish_decl): Not here.                                                    \n                                                                                       \n        * g++.dg/ext/visibility/anon3.C: New test.\n\nFrom-SVN: r123432", "tree": {"sha": "e654734c754b142e86f0adfa0fd4225aa223605a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e654734c754b142e86f0adfa0fd4225aa223605a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0036853d2b6260c0a322da8d411dcebd3ac4f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0036853d2b6260c0a322da8d411dcebd3ac4f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0036853d2b6260c0a322da8d411dcebd3ac4f9e"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "755115e4a935b4ee4a00bbecc4105c8839194613", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -1,3 +1,11 @@\n+2007-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/31187\n+\t* typeck.c (cp_type_readonly): New fn.\n+\t* cp-tree.h: Declare it.\n+\t* decl.c (start_decl): Set implicit DECL_THIS_STATIC here.\n+\t(cp_finish_decl): Not here.\n+\n 2007-03-31  Richard Guenther  <rguenther@suse.de>\n \n \t* optimize.c (maybe_clone_body): Replace splay-tree usage by"}, {"sha": "3b3821ef2575368bdf9e045d1a69e60df20f5353", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -4742,6 +4742,7 @@ extern bool comp_ptr_ttypes_const\t\t(tree, tree);\n extern int ptr_reasonably_similar\t\t(tree, tree);\n extern tree build_ptrmemfunc\t\t\t(tree, tree, int, bool);\n extern int cp_type_quals\t\t\t(tree);\n+extern bool cp_type_readonly\t\t\t(tree);\n extern bool cp_has_mutable_p\t\t\t(tree);\n extern bool at_least_as_qualified_p\t\t(tree, tree);\n extern void cp_apply_type_quals_to_decl\t\t(int, tree);"}, {"sha": "76be0558faacb3d15665bcbf8a786a97cfba4079", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -3797,6 +3797,7 @@ start_decl (const cp_declarator *declarator,\n   tree decl;\n   tree type, tem;\n   tree context;\n+  bool was_public;\n \n   *pushed_scope_p = NULL_TREE;\n \n@@ -3951,6 +3952,8 @@ start_decl (const cp_declarator *declarator,\n \t\t decl);\n     }\n \n+  was_public = TREE_PUBLIC (decl);\n+\n   /* Enter this declaration into the symbol table.  */\n   tem = maybe_push_decl (decl);\n \n@@ -3971,6 +3974,17 @@ start_decl (const cp_declarator *declarator,\n       && !have_global_bss_p ())\n     DECL_COMMON (tem) = 1;\n \n+  if (TREE_CODE (tem) == VAR_DECL\n+      && DECL_NAMESPACE_SCOPE_P (tem) && !TREE_PUBLIC (tem) && !was_public\n+      && !DECL_THIS_STATIC (tem) && !DECL_ARTIFICIAL (tem))\n+    {\n+      /* This is a const variable with implicit 'static'.  Set\n+\t DECL_THIS_STATIC so we can tell it from variables that are\n+\t !TREE_PUBLIC because of the anonymous namespace.  */\n+      gcc_assert (cp_type_readonly (TREE_TYPE (tem)));\n+      DECL_THIS_STATIC (tem) = 1;\n+    }\n+\n   if (!processing_template_decl && TREE_CODE (tem) == VAR_DECL)\n     start_decl_1 (tem, initialized);\n \n@@ -5283,14 +5297,6 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t{\n \t  layout_var_decl (decl);\n \t  maybe_commonize_var (decl);\n-\t  if (DECL_NAMESPACE_SCOPE_P (decl) && !TREE_PUBLIC (decl)\n-\t      && !DECL_THIS_STATIC (decl) && !DECL_ARTIFICIAL (decl))\n-\t    {\n-\t      /* This is a const variable with implicit 'static'.  Set\n-\t\t DECL_THIS_STATIC so we can tell it from variables that are\n-\t\t !TREE_PUBLIC because of the anonymous namespace.  */\n-\t      DECL_THIS_STATIC (decl) = 1;\n-\t    }\n \t}\n \n       make_rtl_for_nonlocal_decl (decl, init, asmspec);"}, {"sha": "a5a33451cf98ecb3d1ef87beee80fa035a0efaa6", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -6897,6 +6897,16 @@ cp_type_quals (tree type)\n   return TYPE_QUALS (type);\n }\n \n+/* Returns nonzero if the TYPE is const from a C++ perspective: look inside\n+   arrays.  */\n+\n+bool\n+cp_type_readonly (tree type)\n+{\n+  type = strip_array_types (type);\n+  return TYPE_READONLY (type);\n+}\n+\n /* Returns nonzero if the TYPE contains a mutable member.  */\n \n bool"}, {"sha": "ca830148bc4981114627a31ff2a0438eac6e9f0d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -1,3 +1,8 @@\n+2007-04-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/31187\n+\t* g++.dg/ext/visibility/anon3.C: New test.\n+\n 2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/31052"}, {"sha": "9def559d2538dd24b88bb89dafb46f01a1054e6a", "filename": "gcc/testsuite/g++.dg/ext/visibility/anon3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b7031d9643c03eed891a96cfb528a4f5ffa78e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon3.C?ref=c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/31187\n+// Bug: the repeated declaration was confusing the compiler into\n+// thinking that foo1 had language internal linkage.\n+\n+class foo { };\n+\n+namespace\n+{\n+  extern foo foo1;\n+  foo foo1;\n+}\n+\n+template< foo * >\n+class bar { };\n+\n+bar< &foo1 > bar1;"}]}