{"sha": "6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyZTgwYjdiNDZmOTlhNjBlZWZhYTM0OWUxY2NlMmJiNTAzNDRjZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-03-26T00:30:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-26T00:30:35Z"}, "message": "recog.c (peephole2_optimize): Distribute EH_REGION -1 notes anywhere in the block.\n\n        * recog.c (peephole2_optimize): Distribute EH_REGION -1 notes\n        anywhere in the block.  Don't refer to insns that have been\n        removed from the chain.  Iterate backward through the new insns.\n        Don't refer to edges that have been removed.\n\nFrom-SVN: r51357", "tree": {"sha": "c4f8d4bdc6a7c010706486f85f40149100773970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f8d4bdc6a7c010706486f85f40149100773970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd/comments", "author": null, "committer": null, "parents": [{"sha": "9ad6276f020d76c928e1b64167e32208bd012dc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad6276f020d76c928e1b64167e32208bd012dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad6276f020d76c928e1b64167e32208bd012dc5"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "e03091718d83f41e4517df9f8cd97634bd2ef342", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "patch": "@@ -1,3 +1,10 @@\n+2002-03-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* recog.c (peephole2_optimize): Distribute EH_REGION -1 notes\n+\tanywhere in the block.  Don't refer to insns that have been\n+\tremoved from the chain.  Iterate backward through the new insns.\n+\tDon't refer to edges that have been removed.\n+\n 2002-03-26  Alan Modra  <amodra@bigpond.net.au>\n \n \t* combine.c (simplify_comparison <ASHIFTRT, LSHIFTRT>): Correct"}, {"sha": "3289f6ebe105dd53e79cd04d7a851ef2ff8ffdf2", "filename": "gcc/recog.c", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2e80b7b46f99a60eefaa349e1cce2bb50344cd/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=6b2e80b7b46f99a60eefaa349e1cce2bb50344cd", "patch": "@@ -3045,7 +3045,7 @@ peephole2_optimize (dump_file)\n \t  prev = PREV_INSN (insn);\n \t  if (INSN_P (insn))\n \t    {\n-\t      rtx try;\n+\t      rtx try, before_try;\n \t      int match_len;\n \t      rtx note;\n \n@@ -3128,14 +3128,16 @@ peephole2_optimize (dump_file)\n \t\t  if (i >= MAX_INSNS_PER_PEEP2 + 1)\n \t\t    i -= MAX_INSNS_PER_PEEP2 + 1;\n \n+\t\t  note = find_reg_note (peep2_insn_data[i].insn, \n+\t\t\t\t\tREG_EH_REGION, NULL_RTX);\n+\n \t\t  /* Replace the old sequence with the new.  */\n \t\t  try = emit_insn_after (try, peep2_insn_data[i].insn);\n+\t\t  before_try = PREV_INSN (insn);\n \t\t  delete_insn_chain (insn, peep2_insn_data[i].insn);\n \n \t\t  /* Re-insert the EH_REGION notes.  */\n-\t\t  if (try == bb->end\n-\t\t      && (note = find_reg_note (peep2_insn_data[i].insn, \n-\t\t\t\t\t\tREG_EH_REGION, NULL_RTX)))\n+\t\t  if (note)\n \t\t    {\n \t\t      rtx x;\n \t\t      edge eh_edge;\n@@ -3145,11 +3147,11 @@ peephole2_optimize (dump_file)\n \t\t\tif (eh_edge->flags & EDGE_EH)\n \t\t\t  break;\n \n-\t\t      for (x = NEXT_INSN (peep2_insn_data[i].insn);\n-\t\t\t   x != NEXT_INSN (try); x = NEXT_INSN (x))\n+\t\t      for (x = try ; x != before_try ; x = PREV_INSN (x))\n \t\t\tif (GET_CODE (x) == CALL_INSN\n \t\t\t    || (flag_non_call_exceptions\n-\t\t\t\t&& may_trap_p (PATTERN (x))))\n+\t\t\t\t&& may_trap_p (PATTERN (x))\n+\t\t\t\t&& !find_reg_note (x, REG_EH_REGION, NULL)))\n \t\t\t  {\n \t\t\t    REG_NOTES (x)\n \t\t\t      = gen_rtx_EXPR_LIST (REG_EH_REGION,\n@@ -3158,9 +3160,16 @@ peephole2_optimize (dump_file)\n \n \t\t\t    if (x != bb->end && eh_edge)\n \t\t\t      {\n-\t\t\t\tedge nfte = split_block (bb, x);\n-\t\t\t\tedge nehe = make_edge (nfte->src, eh_edge->dest,\n-\t\t\t\t\t\t       eh_edge->flags);\n+\t\t\t\tedge nfte, nehe;\n+\t\t\t\tint flags;\n+\n+\t\t\t\tnfte = split_block (bb, x);\n+\t\t\t\tflags = EDGE_EH | EDGE_ABNORMAL;\n+\t\t\t\tif (GET_CODE (x) == CALL_INSN)\n+\t\t\t\t  flags |= EDGE_ABNORMAL_CALL;\n+\t\t\t\tnehe = make_edge (nfte->src, eh_edge->dest,\n+\t\t\t\t\t\t  flags);\n+\n \t\t\t\tnehe->probability = eh_edge->probability;\n \t\t\t\tnfte->probability\n \t\t\t\t  = REG_BR_PROB_BASE - nehe->probability;\n@@ -3171,6 +3180,7 @@ peephole2_optimize (dump_file)\n \t\t\t\tchanged = true;\n #endif\n \t\t\t\tbb = nfte->src;\n+\t\t\t\teh_edge = nehe;\n \t\t\t      }\n \t\t\t  }\n "}]}