{"sha": "736fe2d54b355d5d43b3d26b1d40b110a0697b28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2ZmUyZDU0YjM1NWQ1ZDQzYjNkMjZiMWQ0MGIxMTBhMDY5N2IyOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-22T12:15:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-22T12:15:56Z"}, "message": "tree-ssanames.c (release_dead_ssa_names): Do not remove callee edges here.\n\n2010-09-22  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssanames.c (release_dead_ssa_names): Do not remove\n\tcallee edges here.\n\t* passes.c (init_optimization_passes): Remove early CFG cleanup.\n\t* tree-optimize.c (execute_cleanup_cfg_pre_ipa): Remove.\n\t(pass_cleanup_cfg): Likewise.\n\t(execute_fixup_cfg): Cleanup.\n\t* tree-pass.h (pass_cleanup_cfg): Remove.\n\nFrom-SVN: r164522", "tree": {"sha": "8d4fae775644247a59913ff0ac0e900b30768e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d4fae775644247a59913ff0ac0e900b30768e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/736fe2d54b355d5d43b3d26b1d40b110a0697b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736fe2d54b355d5d43b3d26b1d40b110a0697b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736fe2d54b355d5d43b3d26b1d40b110a0697b28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736fe2d54b355d5d43b3d26b1d40b110a0697b28/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bafa9791ac3a741aae72a6efd998b7d36d2c2e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafa9791ac3a741aae72a6efd998b7d36d2c2e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafa9791ac3a741aae72a6efd998b7d36d2c2e62"}], "stats": {"total": 65, "additions": 19, "deletions": 46}, "files": [{"sha": "d36393e10b3f8d06bb702ff702b535dac6e3c7dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=736fe2d54b355d5d43b3d26b1d40b110a0697b28", "patch": "@@ -1,3 +1,13 @@\n+2010-09-22  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssanames.c (release_dead_ssa_names): Do not remove\n+\tcallee edges here.\n+\t* passes.c (init_optimization_passes): Remove early CFG cleanup.\n+\t* tree-optimize.c (execute_cleanup_cfg_pre_ipa): Remove.\n+\t(pass_cleanup_cfg): Likewise.\n+\t(execute_fixup_cfg): Cleanup.\n+\t* tree-pass.h (pass_cleanup_cfg): Remove.\n+\n 2010-09-22  Martin Jambor  <mjambor@suse.cz>\n \n \t* gimple-fold.c (fold_gimple_call): New parameter inplace, do not fold"}, {"sha": "c14ed28906e645ff0801822e4adcf12eed1d2779", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=736fe2d54b355d5d43b3d26b1d40b110a0697b28", "patch": "@@ -758,7 +758,6 @@ init_optimization_passes (void)\n       struct opt_pass **p = &pass_early_local_passes.pass.sub;\n       NEXT_PASS (pass_fixup_cfg);\n       NEXT_PASS (pass_tree_profile);\n-      NEXT_PASS (pass_cleanup_cfg);\n       NEXT_PASS (pass_init_datastructures);\n       NEXT_PASS (pass_expand_omp);\n "}, {"sha": "9487741401547686b4296acc0e40f656aec789b6", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 4, "deletions": 36, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=736fe2d54b355d5d43b3d26b1d40b110a0697b28", "patch": "@@ -149,37 +149,6 @@ struct gimple_opt_pass pass_all_early_optimizations =\n  }\n };\n \n-/* Pass: cleanup the CFG just before expanding trees to RTL.\n-   This is just a round of label cleanups and case node grouping\n-   because after the tree optimizers have run such cleanups may\n-   be necessary.  */\n-\n-static unsigned int\n-execute_cleanup_cfg_pre_ipa (void)\n-{\n-  cleanup_tree_cfg ();\n-  return 0;\n-}\n-\n-struct gimple_opt_pass pass_cleanup_cfg =\n-{\n- {\n-  GIMPLE_PASS,\n-  \"cleanup_cfg\",\t\t\t/* name */\n-  NULL,\t\t\t\t\t/* gate */\n-  execute_cleanup_cfg_pre_ipa,\t\t/* execute */\n-  NULL,\t\t\t\t\t/* sub */\n-  NULL,\t\t\t\t\t/* next */\n-  0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n-  PROP_cfg,\t\t\t\t/* properties_required */\n-  0,\t\t\t\t\t/* properties_provided */\n-  0,\t\t\t\t\t/* properties_destroyed */\n-  0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func\t\t\t/* todo_flags_finish */\n- }\n-};\n-\n \n /* Pass: cleanup the CFG just before expanding trees to RTL.\n    This is just a round of label cleanups and case node grouping\n@@ -260,7 +229,7 @@ execute_free_datastructures (void)\n   return 0;\n }\n \n-/* Pass: fixup_cfg.  IPA passes, compilation of earlier functions or inlining\n+/* IPA passes, compilation of earlier functions or inlining\n    might have changed some properties, such as marked functions nothrow,\n    pure, const or noreturn.\n    Remove redundant edges and basic blocks, and create new ones if necessary.\n@@ -306,7 +275,6 @@ execute_fixup_cfg (void)\n \t\t  if (gimple_in_ssa_p (cfun))\n \t\t    {\n \t\t      todo |= TODO_update_ssa | TODO_cleanup_cfg;\n-\t\t      mark_symbols_for_renaming (stmt);\n \t\t      update_stmt (stmt);\n \t\t    }\n \t\t}\n@@ -316,11 +284,11 @@ execute_fixup_cfg (void)\n \t\ttodo |= TODO_cleanup_cfg;\n \t     }\n \n-\t  maybe_clean_eh_stmt (stmt);\n+\t  if (maybe_clean_eh_stmt (stmt)\n+\t      && gimple_purge_dead_eh_edges (bb))\n+\t    todo |= TODO_cleanup_cfg;\n \t}\n \n-      if (gimple_purge_dead_eh_edges (bb))\n-\ttodo |= TODO_cleanup_cfg;\n       FOR_EACH_EDGE (e, ei, bb->succs)\n         e->count = (e->count * count_scale\n \t\t    + REG_BR_PROB_BASE / 2) / REG_BR_PROB_BASE;"}, {"sha": "a16301cde0230c12c2151c8a1d4aaac17c8564a3", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=736fe2d54b355d5d43b3d26b1d40b110a0697b28", "patch": "@@ -355,10 +355,8 @@ extern struct gimple_opt_pass pass_lower_resx;\n extern struct gimple_opt_pass pass_build_cfg;\n extern struct gimple_opt_pass pass_tree_profile;\n extern struct gimple_opt_pass pass_early_tree_profile;\n-extern struct gimple_opt_pass pass_cleanup_cfg;\n extern struct gimple_opt_pass pass_referenced_vars;\n extern struct gimple_opt_pass pass_cleanup_eh;\n-extern struct gimple_opt_pass pass_fixup_cfg;\n extern struct gimple_opt_pass pass_sra;\n extern struct gimple_opt_pass pass_sra_early;\n extern struct gimple_opt_pass pass_early_ipa_sra;"}, {"sha": "c005aba4977fbc48b4028a10c804a807aa7639da", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736fe2d54b355d5d43b3d26b1d40b110a0697b28/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=736fe2d54b355d5d43b3d26b1d40b110a0697b28", "patch": "@@ -338,8 +338,8 @@ release_dead_ssa_names (void)\n   int n = 0;\n   referenced_var_iterator rvi;\n \n-  /* Current defs point to various dead SSA names that in turn points to dead\n-     statements so bunch of dead memory is held from releasing.  */\n+  /* Current defs point to various dead SSA names that in turn point to\n+     eventually dead variables so a bunch of memory is held live.  */\n   FOR_EACH_REFERENCED_VAR (t, rvi)\n     set_current_def (t, NULL);\n   /* Now release the freelist.  */\n@@ -356,12 +356,10 @@ release_dead_ssa_names (void)\n     }\n   FREE_SSANAMES (cfun) = NULL;\n \n-  /* Cgraph edges has been invalidated and point to dead statement.  We need to\n-     remove them now and will rebuild it before next IPA pass.  */\n-  cgraph_node_remove_callees (cgraph_node (current_function_decl));\n-\n+  statistics_counter_event (cfun, \"SSA names released\", n);\n   if (dump_file)\n-    fprintf (dump_file, \"Released %i names, %.2f%%\\n\", n, n * 100.0 / num_ssa_names);\n+    fprintf (dump_file, \"Released %i names, %.2f%%\\n\",\n+\t     n, n * 100.0 / num_ssa_names);\n   return 0;\n }\n "}]}