{"sha": "7852940e7bbeae3c40cdc6c61356099216bde688", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1Mjk0MGU3YmJlYWUzYzQwY2RjNmM2MTM1NjA5OTIxNmJkZTY4OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-25T08:59:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-25T08:59:07Z"}, "message": "re PR tree-optimization/87665 (gcc HEAD (svn: 265340) breaks elements on resize)\n\n2018-10-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87665\n\tPR tree-optimization/87745\n\t* tree-vectorizer.h (get_earlier_stmt): Remove.\n\t(get_later_stmt): Pick up UID from the original non-pattern stmt.\n\n\t* gfortran.dg/20181025-1.f: New testcase.\n\nFrom-SVN: r265481", "tree": {"sha": "d0269475b4bf8ab3314d8e3d43d8c563b1a6ecab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0269475b4bf8ab3314d8e3d43d8c563b1a6ecab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7852940e7bbeae3c40cdc6c61356099216bde688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7852940e7bbeae3c40cdc6c61356099216bde688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7852940e7bbeae3c40cdc6c61356099216bde688", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7852940e7bbeae3c40cdc6c61356099216bde688/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86f36311bccb0fed7de68aa926d6a091bcb5114c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f36311bccb0fed7de68aa926d6a091bcb5114c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f36311bccb0fed7de68aa926d6a091bcb5114c"}], "stats": {"total": 85, "additions": 53, "deletions": 32}, "files": [{"sha": "ea92a4286cc0539dec2fc84f2246e1a2094394dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7852940e7bbeae3c40cdc6c61356099216bde688", "patch": "@@ -1,3 +1,10 @@\n+2018-10-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87665\n+\tPR tree-optimization/87745\n+\t* tree-vectorizer.h (get_earlier_stmt): Remove.\n+\t(get_later_stmt): Pick up UID from the original non-pattern stmt.\n+\n 2018-10-25  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* options.texi (Deprecated): Move list to Var section."}, {"sha": "6a50e92905bec3112aa12911121f7a6d223deffa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7852940e7bbeae3c40cdc6c61356099216bde688", "patch": "@@ -1,3 +1,9 @@\n+2018-10-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87665\n+\tPR tree-optimization/87745\n+\t* gfortran.dg/20181025-1.f: New testcase.\n+\n 2018-10-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/87725"}, {"sha": "1acbd72616ccd3f709e586ed0d33f1ac48d5755b", "filename": "gcc/testsuite/gfortran.dg/20181025-1.f", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftestsuite%2Fgfortran.dg%2F20181025-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftestsuite%2Fgfortran.dg%2F20181025-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2F20181025-1.f?ref=7852940e7bbeae3c40cdc6c61356099216bde688", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+! { dg-options \"-Ofast\" }\n+! { dg-additional-options \"-mavx2\" { target { x86_64-*-* i?86-*-* } } }\n+      SUBROUTINE FOO(EF3,CA,ZA,NATA,IC4,NFRGPT)\n+      IMPLICIT DOUBLE PRECISION (A-H,O-Z)\n+      PARAMETER (MXATM=500)\n+      COMMON DE(3,MXATM)\n+      DIMENSION CA(3,NATA)\n+      DIMENSION ZA(NATA)\n+      DIMENSION EF3(3,NFRGPT)\n+      DO II = 1,NATA\n+         XII = XJ - CA(1,II)\n+         YII = YJ - CA(2,II)\n+         ZII = ZJ - CA(3,II)\n+         RJII = SQRT(XII*XII + YII*YII + ZII*ZII)\n+         R3 = RJII*RJII*RJII\n+         IF (IC4.EQ.0) THEN\n+            DE(1,II) = DE(1,II) - S2*ZA(II)*XII/R3\n+            DE(2,II) = DE(2,II) - S2*ZA(II)*YII/R3\n+            DE(3,II) = DE(3,II) - S2*ZA(II)*ZII/R3\n+         ELSE \n+            EF3(1,IC4+II) = EF3(1,IC4+II) - S2*ZA(II)*XII/R3\n+            EF3(2,IC4+II) = EF3(2,IC4+II) - S2*ZA(II)*YII/R3\n+            EF3(3,IC4+II) = EF3(3,IC4+II) - S2*ZA(II)*ZII/R3\n+         END IF\n+      END DO\n+      RETURN\n+      END           "}, {"sha": "08d696a2f7c85c784e8c64f7c157d5fedcb0719d", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 12, "deletions": 32, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7852940e7bbeae3c40cdc6c61356099216bde688/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=7852940e7bbeae3c40cdc6c61356099216bde688", "patch": "@@ -1085,38 +1085,6 @@ nested_in_vect_loop_p (struct loop *loop, stmt_vec_info stmt_info)\n \t  && (loop->inner == (gimple_bb (stmt_info->stmt))->loop_father));\n }\n \n-/* Return the earlier statement between STMT1_INFO and STMT2_INFO.  */\n-\n-static inline stmt_vec_info\n-get_earlier_stmt (stmt_vec_info stmt1_info, stmt_vec_info stmt2_info)\n-{\n-  gcc_checking_assert ((STMT_VINFO_IN_PATTERN_P (stmt1_info)\n-\t\t\t|| !STMT_VINFO_RELATED_STMT (stmt1_info))\n-\t\t       && (STMT_VINFO_IN_PATTERN_P (stmt2_info)\n-\t\t\t   || !STMT_VINFO_RELATED_STMT (stmt2_info)));\n-\n-  if (gimple_uid (stmt1_info->stmt) < gimple_uid (stmt2_info->stmt))\n-    return stmt1_info;\n-  else\n-    return stmt2_info;\n-}\n-\n-/* Return the later statement between STMT1_INFO and STMT2_INFO.  */\n-\n-static inline stmt_vec_info\n-get_later_stmt (stmt_vec_info stmt1_info, stmt_vec_info stmt2_info)\n-{\n-  gcc_checking_assert ((STMT_VINFO_IN_PATTERN_P (stmt1_info)\n-\t\t\t|| !STMT_VINFO_RELATED_STMT (stmt1_info))\n-\t\t       && (STMT_VINFO_IN_PATTERN_P (stmt2_info)\n-\t\t\t   || !STMT_VINFO_RELATED_STMT (stmt2_info)));\n-\n-  if (gimple_uid (stmt1_info->stmt) > gimple_uid (stmt2_info->stmt))\n-    return stmt1_info;\n-  else\n-    return stmt2_info;\n-}\n-\n /* Return TRUE if a statement represented by STMT_INFO is a part of a\n    pattern.  */\n \n@@ -1137,6 +1105,18 @@ vect_orig_stmt (stmt_vec_info stmt_info)\n   return stmt_info;\n }\n \n+/* Return the later statement between STMT1_INFO and STMT2_INFO.  */\n+\n+static inline stmt_vec_info\n+get_later_stmt (stmt_vec_info stmt1_info, stmt_vec_info stmt2_info)\n+{\n+  if (gimple_uid (vect_orig_stmt (stmt1_info)->stmt)\n+      > gimple_uid (vect_orig_stmt (stmt2_info)->stmt))\n+    return stmt1_info;\n+  else\n+    return stmt2_info;\n+}\n+\n /* If STMT_INFO has been replaced by a pattern statement, return the\n    replacement statement, otherwise return STMT_INFO itself.  */\n "}]}