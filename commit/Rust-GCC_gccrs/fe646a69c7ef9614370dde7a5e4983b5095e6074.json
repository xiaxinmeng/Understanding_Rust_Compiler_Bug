{"sha": "fe646a69c7ef9614370dde7a5e4983b5095e6074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2NDZhNjljN2VmOTYxNDM3MGRkZTdhNWU0OTgzYjUwOTVlNjA3NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-23T14:18:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-23T14:18:08Z"}, "message": "re PR target/50788 (ICE: in merge_overlapping_regs, at regrename.c:318 with -mavx -fpeel-loops -fstack-protector-all and __builtin_ia32_maskloadpd256)\n\n\tPR target/50788\n\t* config/i386/sse.md (avx2_maskload<ssemodesuffix><avxsizesuffix>):\n\tRemove (match_dup 0).\n\t(*avx2_maskload<ssemodesuffix><avxsizesuffix>): New insn pattern.\n\t(*avx_maskload<ssemodesuffix><avxsizesuffix>): Ditto.\n\t(*avx2_maskstore<ssemodesuffix><avxsizesuffix>): Ditto.\n\t(*avx_maskstore<ssemodesuffix><avxsizesuffix>): Ditto.\n\t(*avx2_maskmov<ssemodesuffix><avxsizesuffix>): Remove insn pattern.\n\t(*avx_maskmov<ssemodesuffix><avxsizesuffix>): Ditto.\n\ntestsuite/ChangeLog:\n\n2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/50788\n\t* testsuite/gcc.target/i386/pr50788.c: New test.\n\nFrom-SVN: r180335", "tree": {"sha": "4e94c078dc588706b64f92365e4805304e10f6f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e94c078dc588706b64f92365e4805304e10f6f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe646a69c7ef9614370dde7a5e4983b5095e6074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe646a69c7ef9614370dde7a5e4983b5095e6074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe646a69c7ef9614370dde7a5e4983b5095e6074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe646a69c7ef9614370dde7a5e4983b5095e6074/comments", "author": null, "committer": null, "parents": [{"sha": "5bfdb7d8893e24b94d39a0c2f5fa5380c7c79463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfdb7d8893e24b94d39a0c2f5fa5380c7c79463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bfdb7d8893e24b94d39a0c2f5fa5380c7c79463"}], "stats": {"total": 81, "additions": 65, "deletions": 16}, "files": [{"sha": "82105b41510592c923bfb6cbacf1fcf7f386b6c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe646a69c7ef9614370dde7a5e4983b5095e6074", "patch": "@@ -1,3 +1,15 @@\n+2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/50788\n+\t* config/i386/sse.md (avx2_maskload<ssemodesuffix><avxsizesuffix>):\n+\tRemove (match_dup 0).\n+\t(*avx2_maskload<ssemodesuffix><avxsizesuffix>): New insn pattern.\n+\t(*avx_maskload<ssemodesuffix><avxsizesuffix>): Ditto.\n+\t(*avx2_maskstore<ssemodesuffix><avxsizesuffix>): Ditto.\n+\t(*avx_maskstore<ssemodesuffix><avxsizesuffix>): Ditto.\n+\t(*avx2_maskmov<ssemodesuffix><avxsizesuffix>): Remove insn pattern.\n+\t(*avx_maskmov<ssemodesuffix><avxsizesuffix>): Ditto.\n+\n 2011-10-23  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50819\n@@ -36,8 +48,7 @@\n \n \t* config/c6x/c6x.c (c6x_asm_emit_except_personality,\n \tc6x_asm_init_sections): New functions.\n-\t(TARGET_ASM_EMIT_EXCEPT_PERSONALITY, TARGET_ASM_INIT_SECTIONS):\n-\tDefine.\n+\t(TARGET_ASM_EMIT_EXCEPT_PERSONALITY, TARGET_ASM_INIT_SECTIONS): Define.\n \n 2011-10-21  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "e8ac0fe2461778dcc51b2bb124747df59ae02d05", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=fe646a69c7ef9614370dde7a5e4983b5095e6074", "patch": "@@ -12279,11 +12279,36 @@\n   [(set (match_operand:V48_AVX2 0 \"register_operand\" \"\")\n \t(unspec:V48_AVX2\n \t  [(match_operand:<sseintvecmode> 2 \"register_operand\" \"\")\n-\t   (match_operand:V48_AVX2 1 \"memory_operand\" \"\")\n-\t   (match_dup 0)]\n+\t   (match_operand:V48_AVX2 1 \"memory_operand\" \"\")]\n \t  UNSPEC_MASKMOV))]\n   \"TARGET_AVX\")\n \n+(define_insn \"*avx2_maskload<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:VI48_AVX2 0 \"register_operand\" \"=x\")\n+\t(unspec:VI48_AVX2\n+\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n+\t   (match_operand:VI48_AVX2 2 \"memory_operand\" \"m\")]\n+\t  UNSPEC_MASKMOV))]\n+  \"TARGET_AVX2\"\n+  \"vpmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"*avx_maskload<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x\")\n+\t(unspec:VF\n+\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n+\t   (match_operand:VF 2 \"memory_operand\" \"m\")]\n+\t  UNSPEC_MASKMOV))]\n+  \"TARGET_AVX\"\n+  \"vmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_expand \"<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>\"\n   [(set (match_operand:V48_AVX2 0 \"memory_operand\" \"\")\n \t(unspec:V48_AVX2\n@@ -12293,30 +12318,28 @@\n \t  UNSPEC_MASKMOV))]\n   \"TARGET_AVX\")\n \n-(define_insn \"*avx2_maskmov<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VI48_AVX2 0 \"nonimmediate_operand\" \"=x,m\")\n+(define_insn \"*avx2_maskstore<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:VI48_AVX2 0 \"memory_operand\" \"=m\")\n \t(unspec:VI48_AVX2\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x,x\")\n-\t   (match_operand:VI48_AVX2 2 \"nonimmediate_operand\" \"m,x\")\n+\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n+\t   (match_operand:VI48_AVX2 2 \"register_operand\" \"x\")\n \t   (match_dup 0)]\n \t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX2\n-   && (REG_P (operands[0]) == MEM_P (operands[2]))\"\n+  \"TARGET_AVX2\"\n   \"vpmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"*avx_maskmov<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VF 0 \"nonimmediate_operand\" \"=x,m\")\n+(define_insn \"*avx_maskstore<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:VF 0 \"memory_operand\" \"=m\")\n \t(unspec:VF\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x,x\")\n-\t   (match_operand:VF 2 \"nonimmediate_operand\" \"m,x\")\n+\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n+\t   (match_operand:VF 2 \"register_operand\" \"x\")\n \t   (match_dup 0)]\n \t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX\n-   && (REG_P (operands[0]) == MEM_P (operands[2]))\"\n+  \"TARGET_AVX\"\n   \"vmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")"}, {"sha": "0abcb181a99e975491f00b2c67de091473c380f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe646a69c7ef9614370dde7a5e4983b5095e6074", "patch": "@@ -1,3 +1,8 @@\n+2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/50788\n+\t* testsuite/gcc.target/i386/pr50788.c: New test.\n+\n 2011-10-23  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50819"}, {"sha": "29a19634cc044ca250a7a3a2daf1eb2de45c9e4c", "filename": "gcc/testsuite/gcc.target/i386/pr50788.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50788.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe646a69c7ef9614370dde7a5e4983b5095e6074/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50788.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50788.c?ref=fe646a69c7ef9614370dde7a5e4983b5095e6074", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -fpeel-loops -fstack-protector-all\" } */\n+\n+typedef long long __m256i __attribute__ ((__vector_size__ (32)));\n+typedef double __m256d __attribute__ ((__vector_size__ (32)));\n+\n+__m256d foo (__m256d *__P, __m256i __M)\n+{\n+  return __builtin_ia32_maskloadpd256 ( __P, __M);\n+}"}]}