{"sha": "692e06f5f255875809d744c4a439619c85b13271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkyZTA2ZjVmMjU1ODc1ODA5ZDc0NGM0YTQzOTYxOWM4NWIxMzI3MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-24T02:20:47Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-24T02:20:47Z"}, "message": "(function_start_label): New function.\n\n(output_entry_point_die): Use it.\n(output_global_subroutine_die, output_local_subroutine_die): Use it.\n\nFrom-SVN: r6153", "tree": {"sha": "46cf1e47220ac8f813bf8ebf242b2a513453f41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46cf1e47220ac8f813bf8ebf242b2a513453f41c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/692e06f5f255875809d744c4a439619c85b13271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692e06f5f255875809d744c4a439619c85b13271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692e06f5f255875809d744c4a439619c85b13271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692e06f5f255875809d744c4a439619c85b13271/comments", "author": null, "committer": null, "parents": [{"sha": "0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "77b4297e0df0276184e682f4bcc280412901444d", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692e06f5f255875809d744c4a439619c85b13271/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692e06f5f255875809d744c4a439619c85b13271/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=692e06f5f255875809d744c4a439619c85b13271", "patch": "@@ -2986,6 +2986,28 @@ member_declared_type (member)\n \t   : TREE_TYPE (member);\n }\n \n+/* Get the function's label, as described by its RTL.\n+   This may be different from the DECL_NAME name used\n+   in the source file.  */\n+\n+static char *\n+function_start_label (decl)\n+    register tree decl;\n+{\n+  rtx x;\n+  char *fnname;\n+\n+  x = DECL_RTL (decl);\n+  if (GET_CODE (x) != MEM)\n+    abort ();\n+  x = XEXP (x, 0);\n+  if (GET_CODE (x) != SYMBOL_REF)\n+\t       abort ();\n+  fnname = XSTR (x, 0);\n+  return fnname;\n+}\n+\n+\n /******************************* DIEs ************************************/\n \n /* Output routines for individual types of DIEs.  */\n@@ -3055,7 +3077,7 @@ output_entry_point_die (arg)\n   if (DECL_ABSTRACT (decl))\n     equate_decl_number_to_die_number (decl);\n   else\n-    low_pc_attribute (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+    low_pc_attribute (function_start_label (decl));\n }\n #endif\n \n@@ -3214,7 +3236,7 @@ output_global_subroutine_die (arg)\n \t{\n \t  char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-\t  low_pc_attribute (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t  low_pc_attribute (function_start_label (decl));\n \t  sprintf (label, FUNC_END_LABEL_FMT, current_funcdef_number);\n \t  high_pc_attribute (label);\n \t  sprintf (label, BODY_BEGIN_LABEL_FMT, current_funcdef_number);\n@@ -3557,22 +3579,7 @@ output_local_subroutine_die (arg)\n       if (TREE_ASM_WRITTEN (decl))\n \t{\n \t  char label[MAX_ARTIFICIAL_LABEL_BYTES];\n-\t  rtx x;\n-\t  char *fnname;\n-\n-\t  /* Get the function's name, as described by its RTL.\n-\t     This may be different from the DECL_NAME name used\n-             in the source file.  */\n-\n-\t  x = DECL_RTL (decl);\n-\t  if (GET_CODE (x) != MEM)\n-\t    abort ();\n-\t  x = XEXP (x, 0);\n-\t  if (GET_CODE (x) != SYMBOL_REF)\n-\t    abort ();\n-\t  fnname = XSTR (x, 0);\n-\n-\t  low_pc_attribute (fnname);\n+\t  low_pc_attribute (function_start_label (decl));\n \t  sprintf (label, FUNC_END_LABEL_FMT, current_funcdef_number);\n \t  high_pc_attribute (label);\n \t  sprintf (label, BODY_BEGIN_LABEL_FMT, current_funcdef_number);"}]}