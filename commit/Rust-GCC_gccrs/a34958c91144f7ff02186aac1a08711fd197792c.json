{"sha": "a34958c91144f7ff02186aac1a08711fd197792c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM0OTU4YzkxMTQ0ZjdmZjAyMTg2YWFjMWEwODcxMWZkMTk3NzkyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-10T12:04:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-10T12:04:35Z"}, "message": "(expand_shift): No longer reference lshl_optab.\n\nFrom-SVN: r7022", "tree": {"sha": "8c1888314f6389b48774b6f055db8bf93a9f907b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1888314f6389b48774b6f055db8bf93a9f907b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a34958c91144f7ff02186aac1a08711fd197792c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34958c91144f7ff02186aac1a08711fd197792c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34958c91144f7ff02186aac1a08711fd197792c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34958c91144f7ff02186aac1a08711fd197792c/comments", "author": null, "committer": null, "parents": [{"sha": "5f54da491df66c8fc4601fa48e7998d50f4f7ffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f54da491df66c8fc4601fa48e7998d50f4f7ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f54da491df66c8fc4601fa48e7998d50f4f7ffe"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "b714c251f627c5fd73a53e066ab49548f98cbe9e", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34958c91144f7ff02186aac1a08711fd197792c/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34958c91144f7ff02186aac1a08711fd197792c/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=a34958c91144f7ff02186aac1a08711fd197792c", "patch": "@@ -1722,14 +1722,9 @@ expand_shift (code, mode, shifted, amount, target, unsignedp)\n \t\t\t\t target, unsignedp, methods);\n \t}\n       else if (unsignedp)\n-\t{\n-\t  temp = expand_binop (mode,\n-\t\t\t       left ? lshl_optab : lshr_optab,\n-\t\t\t       shifted, op1, target, unsignedp, methods);\n-\t  if (temp == 0 && left)\n-\t    temp = expand_binop (mode, ashl_optab,\n-\t\t\t\t shifted, op1, target, unsignedp, methods);\n-\t}\n+\ttemp = expand_binop (mode,\n+\t\t\t     left ? ashl_optab : lshr_optab,\n+\t\t\t     shifted, op1, target, unsignedp, methods);\n \n       /* Do arithmetic shifts.\n \t Also, if we are going to widen the operand, we can just as well"}]}