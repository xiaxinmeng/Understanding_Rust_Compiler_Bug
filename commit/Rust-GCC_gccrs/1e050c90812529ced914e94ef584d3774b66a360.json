{"sha": "1e050c90812529ced914e94ef584d3774b66a360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUwNTBjOTA4MTI1MjljZWQ5MTRlOTRlZjU4NGQzNzc0YjY2YTM2MA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2016-01-26T00:19:11Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2016-01-26T00:19:11Z"}, "message": "fix PR68343: disable fuse-*.c tests for isl 0.14 or earlier\n\nThe patch disables all fuse-*.c tests when configuring gcc with isl 0.14 or earlier.\n\nChangeLog:\n\n\t* Makefile.in: Regenerate.\n\t* Makefile.tpl: Export ISLVER.\n\t* configure: Regenerate.\n\t* config/isl.m4: Detect isl-0.15.\n\ngcc/\n\n\t* Makefile.in: Set ISLVER in site.exp.\n\ngcc/testsuite/\n\n\t* gcc.dg/graphite/graphite.exp: Only run the fuse-*.c tests with isl-0.15.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r232811", "tree": {"sha": "df6948f2ceb1ab54907e11ac95f2f12c9637d216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6948f2ceb1ab54907e11ac95f2f12c9637d216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e050c90812529ced914e94ef584d3774b66a360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e050c90812529ced914e94ef584d3774b66a360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e050c90812529ced914e94ef584d3774b66a360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e050c90812529ced914e94ef584d3774b66a360/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ee4bf5937dfcd06ba71dd3df22038cd64d384e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ee4bf5937dfcd06ba71dd3df22038cd64d384e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ee4bf5937dfcd06ba71dd3df22038cd64d384e"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "ea0dbd1c8cf036b0bfcd3cb469bc68b3992d77cf", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -1,3 +1,11 @@\n+2016-01-25  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* Makefile.tpl: Export ISLVER.\n+\t* configure: Regenerate.\n+\t* config/isl.m4: Detect isl-0.15.\n+\n 2016-01-24  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \tPR bootstrap/69329"}, {"sha": "a519a547533aab8203aa8937a1323d5f5b77d2d0", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -222,6 +222,7 @@ HOST_EXPORTS = \\\n \tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC; \\\n \tISLLIBS=\"$(HOST_ISLLIBS)\"; export ISLLIBS; \\\n \tISLINC=\"$(HOST_ISLINC)\"; export ISLINC; \\\n+\tISLVER=\"$(HOST_ISLVER)\"; export ISLVER; \\\n \tLIBELFLIBS=\"$(HOST_LIBELFLIBS)\"; export LIBELFLIBS; \\\n \tLIBELFINC=\"$(HOST_LIBELFINC)\"; export LIBELFINC; \\\n \tXGCC_FLAGS_FOR_TARGET=\"$(XGCC_FLAGS_FOR_TARGET)\"; export XGCC_FLAGS_FOR_TARGET; \\\n@@ -315,6 +316,7 @@ HOST_GMPINC = @gmpinc@\n # Where to find isl\n HOST_ISLLIBS = @isllibs@\n HOST_ISLINC = @islinc@\n+HOST_ISLVER = @islver@\n \n # Where to find libelf\n HOST_LIBELFLIBS = @libelflibs@"}, {"sha": "829f664ae00efbb6a599b30d45da78fd95694a6e", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -225,6 +225,7 @@ HOST_EXPORTS = \\\n \tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC; \\\n \tISLLIBS=\"$(HOST_ISLLIBS)\"; export ISLLIBS; \\\n \tISLINC=\"$(HOST_ISLINC)\"; export ISLINC; \\\n+\tISLVER=\"$(HOST_ISLVER)\"; export ISLVER; \\\n \tLIBELFLIBS=\"$(HOST_LIBELFLIBS)\"; export LIBELFLIBS; \\\n \tLIBELFINC=\"$(HOST_LIBELFINC)\"; export LIBELFINC; \\\n \tXGCC_FLAGS_FOR_TARGET=\"$(XGCC_FLAGS_FOR_TARGET)\"; export XGCC_FLAGS_FOR_TARGET; \\\n@@ -318,6 +319,7 @@ HOST_GMPINC = @gmpinc@\n # Where to find isl\n HOST_ISLLIBS = @isllibs@\n HOST_ISLINC = @islinc@\n+HOST_ISLVER = @islver@\n \n # Where to find libelf\n HOST_LIBELFLIBS = @libelflibs@"}, {"sha": "0103f1f3362399d844ce76cdaf112e1b43058070", "filename": "config/isl.m4", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/config%2Fisl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/config%2Fisl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fisl.m4?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -117,6 +117,18 @@ AC_DEFUN([ISL_CHECK_VERSION],\n       AC_MSG_RESULT([recommended isl version is 0.15, minimum required isl version 0.14 is deprecated])\n     fi\n \n+    AC_MSG_CHECKING([for isl-0.15])\n+    AC_TRY_LINK([#include <isl/schedule.h>],\n+                [isl_options_set_schedule_serialize_sccs (NULL, 0);],\n+                [ac_has_isl_options_set_schedule_serialize_sccs=yes],\n+                [ac_has_isl_options_set_schedule_serialize_sccs=no])\n+    AC_MSG_RESULT($ac_has_isl_options_set_schedule_serialize_sccs)\n+\n+    if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n+      islver=\"0.15\"\n+      AC_SUBST([islver])\n+    fi\n+\n     CFLAGS=$_isl_saved_CFLAGS\n     LDFLAGS=$_isl_saved_LDFLAGS\n     LIBS=$_isl_saved_LIBS"}, {"sha": "b9a4b517046a12f0bce00456f75452551ba31217", "filename": "configure", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -650,6 +650,7 @@ extra_linker_plugin_flags\n extra_linker_plugin_configure_flags\n islinc\n isllibs\n+islver\n poststage1_ldflags\n poststage1_libs\n stage1_ldflags\n@@ -6048,6 +6049,34 @@ $as_echo \"$gcc_cv_isl\" >&6; }\n $as_echo \"recommended isl version is 0.15, minimum required isl version 0.14 is deprecated\" >&6; }\n     fi\n \n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for isl-0.15\" >&5\n+$as_echo_n \"checking for isl-0.15... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <isl/schedule.h>\n+int\n+main ()\n+{\n+isl_options_set_schedule_serialize_sccs (NULL, 0);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_has_isl_options_set_schedule_serialize_sccs=yes\n+else\n+  ac_has_isl_options_set_schedule_serialize_sccs=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_options_set_schedule_serialize_sccs\" >&5\n+$as_echo \"$ac_has_isl_options_set_schedule_serialize_sccs\" >&6; }\n+\n+    if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n+      islver=\"0.15\"\n+\n+    fi\n+\n     CFLAGS=$_isl_saved_CFLAGS\n     LDFLAGS=$_isl_saved_LDFLAGS\n     LIBS=$_isl_saved_LIBS"}, {"sha": "f161d27d60ea462b0dd9a4be4e9d9b5e0a33559e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -1,3 +1,8 @@\n+2016-01-25  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* Makefile.in: Set ISLVER in site.exp.\n+\n 2016-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-low.c (lower_omp_target) <case USE_DEVICE_PTR>: Set"}, {"sha": "aa3c01831b44f4b33e517a410cb5f54d1fe55371", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -3698,6 +3698,7 @@ site.exp: ./config.status Makefile\n \t  echo \"set PLUGINCFLAGS \\\"$(PLUGINCFLAGS)\\\"\" >> ./site.tmp; \\\n \t  echo \"set GMPINC \\\"$(GMPINC)\\\"\" >> ./site.tmp; \\\n \tfi\n+\t@echo \"set ISLVER \\\"$(ISLVER)\\\"\" >> ./site.tmp\n # If newlib has been configured, we need to pass -B to gcc so it can find\n # newlib's crt0.o if it exists.  This will cause a \"path prefix not used\"\n # message if it doesn't, but the testsuite is supposed to ignore the message -"}, {"sha": "b06599e26fd788987ef4a06b9e05a6ef29538a18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -1,3 +1,9 @@\n+2016-01-25  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* gcc.dg/graphite/graphite.exp: Only run the fuse-*.c tests with\n+\tisl-0.15.\n+\n 2016-01-25  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "f4cea4360d9e5deb8a73ff5c145b8e9cfb243995", "filename": "gcc/testsuite/gcc.dg/graphite/fuse-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -28,9 +28,9 @@ main (void)\n       B[i] = i + 2;\n       C[i] = i + 1;\n     }\n-  for(int i=0; i<MAX; i++)\n+  for(i=0; i<MAX; i++)\n     A[i] += B[i];\n-  for(int i=0; i<MAX; i++)\n+  for(i=0; i<MAX; i++)\n     A[i] += C[i];\n \n   for (i = 0; i < MAX; i++)"}, {"sha": "f24d10eb4ad782c7ce7d7d6de850427167555d5c", "filename": "gcc/testsuite/gcc.dg/graphite/graphite.exp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e050c90812529ced914e94ef584d3774b66a360/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp?ref=1e050c90812529ced914e94ef584d3774b66a360", "patch": "@@ -44,10 +44,10 @@ set run_id_files      [lsort [glob -nocomplain $srcdir/$subdir/run-id-*.c ] ]\n set opt_files         [lsort [glob -nocomplain $srcdir/$subdir/interchange-*.c \\\n \t\t\t\t\t       $srcdir/$subdir/uns-interchange-*.c \\\n \t\t\t\t\t       $srcdir/$subdir/isl-ast-gen-*.c \\\n-\t\t\t\t\t       $srcdir/$subdir/fuse-*.c \\\n \t\t\t\t\t       $srcdir/$subdir/block-*.c \\\n \t\t\t\t\t       $srcdir/$subdir/uns-block-*.c ] ]\n set vect_files        [lsort [glob -nocomplain $srcdir/$subdir/vect-*.c ] ]\n+set fuse_files        [lsort [glob -nocomplain $srcdir/$subdir/fuse-*.c ] ]\n \n # Tests to be compiled.\n set dg-do-what-default compile\n@@ -59,6 +59,11 @@ set dg-do-what-default run\n dg-runtest $run_id_files      \"\" \"-O2 -fgraphite-identity\"\n dg-runtest $opt_files         \"\" \"-O2 -ffast-math -floop-nest-optimize -fdump-tree-graphite-all\"\n \n+global ISLVER\n+if { $ISLVER == \"0.15\" } {\n+    dg-runtest $fuse_files         \"\" \"-O2 -ffast-math -floop-nest-optimize -fdump-tree-graphite-all\"\n+}\n+\n # Vectorizer tests, to be run or compiled, depending on target capabilities.\n global DEFAULT_VECTCFLAGS\n set DEFAULT_VECTCFLAGS \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details -ffast-math\"\n@@ -74,6 +79,7 @@ foreach f $id_files          {lremove wait_to_run_files $f}\n foreach f $run_id_files      {lremove wait_to_run_files $f}\n foreach f $opt_files         {lremove wait_to_run_files $f}\n foreach f $vect_files        {lremove wait_to_run_files $f}\n+foreach f $fuse_files        {lremove wait_to_run_files $f}\n dg-runtest $wait_to_run_files \"\" \"-ansi -pedantic-errors\"\n \n # Clean up."}]}