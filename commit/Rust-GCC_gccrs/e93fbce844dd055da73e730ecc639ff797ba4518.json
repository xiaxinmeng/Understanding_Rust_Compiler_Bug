{"sha": "e93fbce844dd055da73e730ecc639ff797ba4518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzZmJjZTg0NGRkMDU1ZGE3M2U3MzBlY2M2MzlmZjc5N2JhNDUxOA==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:26Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:26Z"}, "message": "VAX: Add the `movmemhi' instruction\n\nThe MOVC3 machine instruction has `memmove' semantics[1]:\n\n\"The operation of the instruction is such that overlap of the source and\ndestination strings does not affect the result.\"\n\nso use it to provide the `movmemhi' instruction as well.\n\nReferences:\n\n[1] DEC STD 032-0 \"VAX Architecture Standard\", Digital Equipment\n    Corporation, A-DS-EL-00032-00-0 Rev J, December 15, 1989, Section\n    3.10 \"Character-String Instructions\", p. 3-162\n\n\tgcc/\n\t* config/vax/vax.md (cpymemhi1): Rename insn to...\n\t(movmemhi1): ... this.\n\t(cpymemhi): Update accordingly.  Remove constraints.\n\t(movmemhi): New expander.\n\n\tgcc/testsuite/\n\t* gcc.target/vax/movmem.c: New test.", "tree": {"sha": "6eada44c9d31058d5e5b4aa337ea80b64d1be9b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eada44c9d31058d5e5b4aa337ea80b64d1be9b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e93fbce844dd055da73e730ecc639ff797ba4518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e93fbce844dd055da73e730ecc639ff797ba4518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e93fbce844dd055da73e730ecc639ff797ba4518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e93fbce844dd055da73e730ecc639ff797ba4518/comments", "author": null, "committer": null, "parents": [{"sha": "2c45dc7928697c047c1ef5de710e9b0fd108de57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c45dc7928697c047c1ef5de710e9b0fd108de57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c45dc7928697c047c1ef5de710e9b0fd108de57"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "f8e1c2eb02b3d6286e826a170447ba904d1f2bcb", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93fbce844dd055da73e730ecc639ff797ba4518/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93fbce844dd055da73e730ecc639ff797ba4518/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=e93fbce844dd055da73e730ecc639ff797ba4518", "patch": "@@ -206,16 +206,28 @@\n }\")\n \n ;; This is here to accept 4 arguments and pass the first 3 along\n-;; to the cpymemhi1 pattern that really does the work.\n+;; to the movmemhi1 pattern that really does the work.\n (define_expand \"cpymemhi\"\n-  [(set (match_operand:BLK 0 \"general_operand\" \"=g\")\n-\t(match_operand:BLK 1 \"general_operand\" \"g\"))\n-   (use (match_operand:HI 2 \"general_operand\" \"g\"))\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n+\t(match_operand:BLK 1 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 2 \"general_operand\" \"\"))\n+   (match_operand 3 \"\" \"\")]\n+  \"\"\n+  \"\n+{\n+  emit_insn (gen_movmemhi1 (operands[0], operands[1], operands[2]));\n+  DONE;\n+}\")\n+\n+(define_expand \"movmemhi\"\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n+\t(match_operand:BLK 1 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 2 \"general_operand\" \"\"))\n    (match_operand 3 \"\" \"\")]\n   \"\"\n   \"\n {\n-  emit_insn (gen_cpymemhi1 (operands[0], operands[1], operands[2]));\n+  emit_insn (gen_movmemhi1 (operands[0], operands[1], operands[2]));\n   DONE;\n }\")\n \n@@ -224,7 +236,7 @@\n ;; that anything generated as this insn will be recognized as one\n ;; and that it won't successfully combine with anything.\n \n-(define_insn \"cpymemhi1\"\n+(define_insn \"movmemhi1\"\n   [(set (match_operand:BLK 0 \"memory_operand\" \"=o\")\n \t(match_operand:BLK 1 \"memory_operand\" \"o\"))\n    (use (match_operand:HI 2 \"general_operand\" \"g\"))"}, {"sha": "b907d8a376d350f0c3f2e282a8c4f0e7eb3225f8", "filename": "gcc/testsuite/gcc.target/vax/movmem.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93fbce844dd055da73e730ecc639ff797ba4518/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fmovmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93fbce844dd055da73e730ecc639ff797ba4518/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fmovmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fmovmem.c?ref=e93fbce844dd055da73e730ecc639ff797ba4518", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n+\n+#include <stddef.h>\n+\n+void *\n+memmove8 (void *to, const void *from, size_t size)\n+{\n+  unsigned char s8 = size;\n+  return __builtin_memmove (to, from, s8);\n+}\n+\n+/* Expect assembly like:\n+\n+\tmovl 4(%ap),%r6\n+\tmovzbl 12(%ap),%r7\n+\tmovl 8(%ap),%r8\n+\tmovc3 %r7,(%r8),(%r6)\n+\tmovl %r6,%r0\n+\n+ */\n+\n+/* { dg-final { scan-assembler \"\\tmovc3 \" } } */"}]}