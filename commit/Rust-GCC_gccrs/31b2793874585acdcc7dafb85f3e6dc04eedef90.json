{"sha": "31b2793874585acdcc7dafb85f3e6dc04eedef90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFiMjc5Mzg3NDU4NWFjZGNjN2RhZmI4NWYzZTZkYzA0ZWVkZWY5MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-04-13T06:27:57Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-04-13T06:27:57Z"}, "message": "ipa-cp.c (ipcp_driver): Relase prev_edge.\n\n\t* ipa-cp.c (ipcp_driver): Relase prev_edge.\n\t* passes.c (execute_one_pass): Only add transform if pass has one.\n\nFrom-SVN: r222038", "tree": {"sha": "e5a9d5b5ae9bc5941279c3681ac56adf2e06fb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5a9d5b5ae9bc5941279c3681ac56adf2e06fb84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31b2793874585acdcc7dafb85f3e6dc04eedef90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31b2793874585acdcc7dafb85f3e6dc04eedef90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31b2793874585acdcc7dafb85f3e6dc04eedef90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31b2793874585acdcc7dafb85f3e6dc04eedef90/comments", "author": null, "committer": null, "parents": [{"sha": "5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "bf946562db0b991cdbba330a69afc1f011aad525", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31b2793874585acdcc7dafb85f3e6dc04eedef90", "patch": "@@ -1,3 +1,8 @@\n+2015-04-12  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-cp.c (ipcp_driver): Relase prev_edge.\n+\t* passes.c (execute_one_pass): Only add transform if pass has one.\n+\n 2015-04-12  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/i386.c (ix86_option_override_internal): Don't set"}, {"sha": "38240290423fbdc5e770ef6ef13116c58ea3dd9b", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=31b2793874585acdcc7dafb85f3e6dc04eedef90", "patch": "@@ -4493,6 +4493,7 @@ ipcp_driver (void)\n   /* Free all IPCP structures.  */\n   free_toporder_info (&topo);\n   next_edge_clone.release ();\n+  prev_edge_clone.release ();\n   symtab->remove_edge_removal_hook (edge_removal_hook_holder);\n   symtab->remove_edge_duplication_hook (edge_duplication_hook_holder);\n   ipa_free_all_structures_after_ipa_cp ();"}, {"sha": "beffd3f587a2e963ddad717d85833ab99fc3178c", "filename": "gcc/passes.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31b2793874585acdcc7dafb85f3e6dc04eedef90/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=31b2793874585acdcc7dafb85f3e6dc04eedef90", "patch": "@@ -2350,8 +2350,9 @@ execute_one_pass (opt_pass *pass)\n   if (pass->type == IPA_PASS)\n     {\n       struct cgraph_node *node;\n-      FOR_EACH_FUNCTION_WITH_GIMPLE_BODY (node)\n-\tnode->ipa_transforms_to_apply.safe_push ((ipa_opt_pass_d *)pass);\n+      if (((ipa_opt_pass_d *)pass)->function_transform)\n+\tFOR_EACH_FUNCTION_WITH_GIMPLE_BODY (node)\n+\t  node->ipa_transforms_to_apply.safe_push ((ipa_opt_pass_d *)pass);\n     }\n \n   if (!current_function_decl)"}]}