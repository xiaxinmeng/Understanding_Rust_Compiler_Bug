{"sha": "5c571497e1b9b4ac407aa0db359292b0de6cd42e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM1NzE0OTdlMWI5YjRhYzQwN2FhMGRiMzU5MjkyYjBkZTZjZDQyZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-03T15:08:46Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-03T15:08:46Z"}, "message": "[nvptx] Add vector_length 128 testcases\n\nAdd a couple of test-cases using vector length 128, while checking that we\noverride to vector length 32.\n\n2019-01-03  Tom de Vries  <tdevries@suse.de>\n\n\t* testsuite/libgomp.oacc-c-c++-common/vector-length-128-1.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/vector-length-128-3.c: New test.\n\nFrom-SVN: r267559", "tree": {"sha": "64a1107ed4c019a2144b2b522d675858bf16014e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64a1107ed4c019a2144b2b522d675858bf16014e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c571497e1b9b4ac407aa0db359292b0de6cd42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c571497e1b9b4ac407aa0db359292b0de6cd42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c571497e1b9b4ac407aa0db359292b0de6cd42e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c571497e1b9b4ac407aa0db359292b0de6cd42e/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d06e8c794f37ded34e902ead35e7c70c3b112d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d06e8c794f37ded34e902ead35e7c70c3b112d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d06e8c794f37ded34e902ead35e7c70c3b112d1"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "021d01b7ff08996796abb6227a7e04242455aed3", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5c571497e1b9b4ac407aa0db359292b0de6cd42e", "patch": "@@ -1,3 +1,8 @@\n+2019-01-03  Tom de Vries  <tdevries@suse.de>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/vector-length-128-1.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/vector-length-128-3.c: New test.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "fab5b0d25d1c529be0d5bb1bee6e8f4f764d997d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/vector-length-128-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-1.c?ref=5c571497e1b9b4ac407aa0db359292b0de6cd42e", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run { target openacc_nvidia_accel_selected } } */\n+/* { dg-additional-options \"-foffload=-fdump-tree-oaccdevlow\" } */\n+/* { dg-set-target-env-var \"GOMP_DEBUG\" \"1\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 1024\n+\n+unsigned int a[N];\n+unsigned int b[N];\n+unsigned int c[N];\n+unsigned int n = N;\n+\n+int\n+main (void)\n+{\n+  for (unsigned int i = 0; i < n; ++i)\n+    {\n+      a[i] = i % 3;\n+      b[i] = i % 5;\n+    }\n+\n+#pragma acc parallel vector_length (128) copyin (a,b) copyout (c)\n+  {\n+#pragma acc loop vector\n+    for (unsigned int i = 0; i < n; i++)\n+      c[i] = a[i] + b[i];\n+  }\n+\n+  for (unsigned int i = 0; i < n; ++i)\n+    if (c[i] != (i % 3) + (i % 5))\n+      abort ();\n+\n+  return 0;\n+}\n+/* { dg-prune-output \"using vector_length \\\\(32\\\\), ignoring 128\" } */\n+\n+/* { dg-final { scan-offload-tree-dump \"__attribute__\\\\(\\\\(oacc function \\\\(1, 1, 32\\\\)\" \"oaccdevlow\" } } */\n+/* { dg-output \"nvptx_exec: kernel main\\\\\\$_omp_fn\\\\\\$0: launch gangs=1, workers=1, vectors=32\" } */"}, {"sha": "c403e74658bcee6e0ff5996f085078d120418a5e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/vector-length-128-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c571497e1b9b4ac407aa0db359292b0de6cd42e/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-length-128-3.c?ref=5c571497e1b9b4ac407aa0db359292b0de6cd42e", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do run { target openacc_nvidia_accel_selected } } */\n+/* { dg-additional-options \"-foffload=-fdump-tree-oaccdevlow\" } */\n+/* We default to warp size 32 for the vector length, so the GOMP_OPENACC_DIM has\n+   no effect.  */\n+/* { dg-set-target-env-var \"GOMP_OPENACC_DIM\" \"-:-:128\" } */\n+/* { dg-set-target-env-var \"GOMP_DEBUG\" \"1\" } */\n+\n+\n+#include <stdlib.h>\n+\n+#define N 1024\n+\n+unsigned int a[N];\n+unsigned int b[N];\n+unsigned int c[N];\n+unsigned int n = N;\n+\n+int\n+main (void)\n+{\n+  for (unsigned int i = 0; i < n; ++i)\n+    {\n+      a[i] = i % 3;\n+      b[i] = i % 5;\n+    }\n+\n+#pragma acc parallel copyin (a,b) copyout (c)\n+  {\n+#pragma acc loop vector\n+    for (unsigned int i = 0; i < n; i++)\n+      c[i] = a[i] + b[i];\n+  }\n+\n+  for (unsigned int i = 0; i < n; ++i)\n+    if (c[i] != (i % 3) + (i % 5))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-offload-tree-dump \"__attribute__\\\\(\\\\(oacc function \\\\(1, 1, 32\\\\)\" \"oaccdevlow\" } } */\n+/* { dg-output \"nvptx_exec: kernel main\\\\\\$_omp_fn\\\\\\$0: launch gangs=1, workers=1, vectors=32\" } */"}]}