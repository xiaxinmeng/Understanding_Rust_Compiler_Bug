{"sha": "cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "node_id": "C_kwDOANBUbNoAKGNiZDA1Y2E1YWIxMjMxZDcwZDA3ZTFmZmJlNjRjMWI3MzM4YmYxZDY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-21T11:30:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-21T17:46:42Z"}, "message": "libstdc++: Reduce size of std::bind_front(F) result\n\nWhen there are no bound arguments to a std::bind_front call we don't\nneed the overhead of compiling, initializing, and accessing an empty\ntuple.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/functional (_Bind_front0): New class template.\n\t(_Bind_front_t): Use _Bind_front0 when there are no bound\n\targuments.\n\t* testsuite/20_util/function_objects/bind_front/107784.cc:\n\tNew test.", "tree": {"sha": "3b0aa0a1c9458a0f535f189fd982e8cc854243fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b0aa0a1c9458a0f535f189fd982e8cc854243fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed77dcb9be76e592b62449c75a5e751485514afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed77dcb9be76e592b62449c75a5e751485514afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed77dcb9be76e592b62449c75a5e751485514afd"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "dddd22fcd043163bfe5ea60bb9d47f630fa4fbf2", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "patch": "@@ -995,9 +995,69 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       std::tuple<_BoundArgs...> _M_bound_args;\n     };\n \n+  // Avoid the overhead of an empty tuple<> if there are no bound args.\n+  template<typename _Fd>\n+    struct _Bind_front0\n+    {\n+      static_assert(is_move_constructible_v<_Fd>);\n+\n+      // First parameter is to ensure this constructor is never used\n+      // instead of the copy/move constructor.\n+      template<typename _Fn>\n+\texplicit constexpr\n+\t_Bind_front0(int, _Fn&& __fn)\n+\tnoexcept(is_nothrow_constructible_v<_Fd, _Fn>)\n+\t: _M_fd(std::forward<_Fn>(__fn))\n+\t{ }\n+\n+      _Bind_front0(const _Bind_front0&) = default;\n+      _Bind_front0(_Bind_front0&&) = default;\n+      _Bind_front0& operator=(const _Bind_front0&) = default;\n+      _Bind_front0& operator=(_Bind_front0&&) = default;\n+      ~_Bind_front0() = default;\n+\n+      template<typename... _CallArgs>\n+\tconstexpr\n+\tinvoke_result_t<_Fd&, _CallArgs...>\n+\toperator()(_CallArgs&&... __call_args) &\n+\tnoexcept(is_nothrow_invocable_v<_Fd&, _CallArgs...>)\n+\t{ return std::invoke(_M_fd, std::forward<_CallArgs>(__call_args)...); }\n+\n+      template<typename... _CallArgs>\n+\tconstexpr\n+\tinvoke_result_t<const _Fd&, _CallArgs...>\n+\toperator()(_CallArgs&&... __call_args) const &\n+\tnoexcept(is_nothrow_invocable_v<const _Fd&, _CallArgs...>)\n+\t{ return std::invoke(_M_fd, std::forward<_CallArgs>(__call_args)...); }\n+\n+      template<typename... _CallArgs>\n+\tconstexpr\n+\tinvoke_result_t<_Fd, _CallArgs...>\n+\toperator()(_CallArgs&&... __call_args) &&\n+\tnoexcept(is_nothrow_invocable_v<_Fd, _CallArgs...>)\n+\t{\n+\t  return std::invoke(std::move(_M_fd),\n+\t\t\t     std::forward<_CallArgs>(__call_args)...);\n+\t}\n+\n+      template<typename... _CallArgs>\n+\tconstexpr\n+\tinvoke_result_t<const _Fd, _CallArgs...>\n+\toperator()(_CallArgs&&... __call_args) const &&\n+\tnoexcept(is_nothrow_invocable_v<const _Fd, _CallArgs...>)\n+\t{\n+\t  return std::invoke(std::move(_M_fd),\n+\t\t\t     std::forward<_CallArgs>(__call_args)...);\n+\t}\n+\n+    private:\n+      _Fd _M_fd;\n+    };\n+\n   template<typename _Fn, typename... _Args>\n     using _Bind_front_t\n-      = _Bind_front<decay_t<_Fn>, decay_t<_Args>...>;\n+      = __conditional_t<sizeof...(_Args) == 0, _Bind_front0<decay_t<_Fn>>,\n+\t\t\t_Bind_front<decay_t<_Fn>, decay_t<_Args>...>>;\n \n   /** Create call wrapper by partial application of arguments to function.\n    *"}, {"sha": "ec255f3ee363a6133fe5e99fb63a7136671dd403", "filename": "libstdc++-v3/testsuite/20_util/function_objects/bind_front/107784.cc", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F107784.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F107784.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F107784.cc?ref=cbd05ca5ab1231d70d07e1ffbe64c1b7338bf1d6", "patch": "@@ -0,0 +1,15 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+\n+#include <functional>\n+\n+struct Foo\n+{\n+  void func() {}\n+};\n+\n+void bar() { }\n+\n+// PR libstdc++/107784\n+static_assert( sizeof(std::bind_front(&Foo::func)) == sizeof(&Foo::func) );\n+static_assert( sizeof(std::bind_front(&bar)) == sizeof(&bar) );"}]}