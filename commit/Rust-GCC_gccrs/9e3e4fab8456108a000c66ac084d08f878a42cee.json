{"sha": "9e3e4fab8456108a000c66ac084d08f878a42cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzZTRmYWI4NDU2MTA4YTAwMGM2NmFjMDg0ZDA4Zjg3OGE0MmNlZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2016-04-20T13:29:32Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-04-20T13:29:32Z"}, "message": "[AArch64] Work around PR target/64971\n\n2016-04-20  Andrew Pinski  <apinski@cavium.com>\n            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\tPR target/64971\n\t* config/aarch64/aarch64.md (sibcall): Force call\n\taddress to be DImode for ILP32.\n\t(sibcall_value): Likewise.\n\n\t* gcc.c-torture/compile/pr37433-1.c: New testcase.\n\n\nCo-Authored-By: Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n\nFrom-SVN: r235281", "tree": {"sha": "bcffd85f01c88ab8e46e83142e010333c11963dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcffd85f01c88ab8e46e83142e010333c11963dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e3e4fab8456108a000c66ac084d08f878a42cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3e4fab8456108a000c66ac084d08f878a42cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e3e4fab8456108a000c66ac084d08f878a42cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3e4fab8456108a000c66ac084d08f878a42cee/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce6d77a40ab78c755f6ec89664d3d2dec0efbf16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6d77a40ab78c755f6ec89664d3d2dec0efbf16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce6d77a40ab78c755f6ec89664d3d2dec0efbf16"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "a36a1770cd9e2168c7166131993fbc48061441e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e3e4fab8456108a000c66ac084d08f878a42cee", "patch": "@@ -1,3 +1,11 @@\n+2016-04-20  Andrew Pinski  <apinski@cavium.com>\n+            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/64971\n+\t* config/aarch64/aarch64.md (sibcall): Force call\n+\taddress to be DImode for ILP32.\n+\t(sibcall_value): Likewise.\n+\n 2016-04-20  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* doc/invoke.texi: Replace -skip-rax-setup with -mskip-rax-setup."}, {"sha": "f423284ea0106f2e07eed47e710650edbf7ef7af", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=9e3e4fab8456108a000c66ac084d08f878a42cee", "patch": "@@ -855,6 +855,13 @@\n \t   || aarch64_is_noplt_call_p (callee)))\n       XEXP (operands[0], 0) = force_reg (Pmode, callee);\n \n+    /* FIXME: This is a band-aid.  Need to analyze why expand_expr_addr_expr\n+       is generating an SImode symbol reference.  See PR 64971.  */\n+    if (TARGET_ILP32\n+\t&& GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF\n+\t&& GET_MODE (XEXP (operands[0], 0)) == SImode)\n+      XEXP (operands[0], 0) = convert_memory_address (Pmode,\n+\t\t\t\t\t\t      XEXP (operands[0], 0));\n     if (operands[2] == NULL_RTX)\n       operands[2] = const0_rtx;\n \n@@ -886,6 +893,14 @@\n \t   || aarch64_is_noplt_call_p (callee)))\n       XEXP (operands[1], 0) = force_reg (Pmode, callee);\n \n+    /* FIXME: This is a band-aid.  Need to analyze why expand_expr_addr_expr\n+       is generating an SImode symbol reference.  See PR 64971.  */\n+    if (TARGET_ILP32\n+\t&& GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n+\t&& GET_MODE (XEXP (operands[1], 0)) == SImode)\n+      XEXP (operands[1], 0) = convert_memory_address (Pmode,\n+\t\t\t\t\t\t      XEXP (operands[1], 0));\n+\n     if (operands[3] == NULL_RTX)\n       operands[3] = const0_rtx;\n "}, {"sha": "543837ff57963e7d7ef9f61628d2454b0dc6b06e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e3e4fab8456108a000c66ac084d08f878a42cee", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR target/64971\n+\t* gcc.c-torture/compile/pr37433-1.c: New testcase.\n+\n 2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.dg/self1.adb: Remove now incorrect test."}, {"sha": "322c167d682688fba8aaae9b4fd21df8cc561291", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37433-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3e4fab8456108a000c66ac084d08f878a42cee/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c?ref=9e3e4fab8456108a000c66ac084d08f878a42cee", "patch": "@@ -0,0 +1,11 @@\n+void regex_subst(void)\n+{\n+  const void *subst = \"\";\n+  (*(void (*)(int))subst) (0);\n+}\n+\n+void foobar (void)\n+{\n+  int x;\n+  (*(void (*)(void))&x) ();\n+}"}]}