{"sha": "0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5ZTNhOGI3OGM1ZThmNTk1NDJkNjI5NDVlYzIyN2ZhYjNlOGFmZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-06-22T08:05:39Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-06-22T08:05:39Z"}, "message": "diagnostic.h (output_host_wide_integer): Declare.\n\n\t* diagnostic.h (output_host_wide_integer): Declare.\n\t* diagnostic.c (output_long_long_decicaml): New function.\n\t(output_host_wide_integer): Likewise.\n\t(output_format): Use them.  Handle \"%ll\" and \"%w\".\n\nFrom-SVN: r68323", "tree": {"sha": "f82c7c3cc9a0ba4b01e4e7cdb5893707e20327c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82c7c3cc9a0ba4b01e4e7cdb5893707e20327c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad667abe549e76abaf248e470ceff39409440a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad667abe549e76abaf248e470ceff39409440a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad667abe549e76abaf248e470ceff39409440a8e"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "2287e10805a5c81c9485d56153933d68131ce0f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "patch": "@@ -1,3 +1,10 @@\n+2003-06-22  Gabriel Dos Reis <gdr@integrable-solutions.net>\n+\n+\t* diagnostic.h (output_host_wide_integer): Declare.\n+\t* diagnostic.c (output_long_long_decicaml): New function.\n+\t(output_host_wide_integer): Likewise.\n+\t(output_format): Use them.  Handle \"%ll\" and \"%w\".\n+\n 2003-06-21  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config.gcc (*-*-netbsd*): Add t-libgcc-pic to tmake_file."}, {"sha": "ac7b9a05963a455658cdfe7fed89c2657f5c6690", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "patch": "@@ -334,6 +334,18 @@ output_long_hexadecimal (output_buffer *buffer, long unsigned int i)\n   output_formatted_scalar (buffer, \"%lx\", i);\n }\n \n+static inline void\n+output_long_long_decimal (output_buffer *buffer, long long int i)\n+{\n+  output_formatted_scalar (buffer, \"%lld\", i);\n+}\n+\n+void\n+output_host_wide_integer (output_buffer *buffer, HOST_WIDE_INT i)\n+{\n+  output_formatted_scalar (buffer, HOST_WIDE_INT_PRINT_DEC, i);\n+}\n+\n static inline void\n output_pointer (output_buffer *buffer, void *p)\n {\n@@ -457,6 +469,8 @@ output_buffer_to_stream (output_buffer *buffer)\n    %o: unsigned integer in base eight.\n    %x: unsigned integer in base sixteen.\n    %ld, %li, %lo, %lu, %lx: long versions of the above.\n+   %ll: long long int.\n+   %w: and integer of type HOST_WIDE_INT.\n    %c: character.\n    %s: string.\n    %p: pointer.\n@@ -542,6 +556,15 @@ output_format (output_buffer *buffer, text_info *text)\n               (buffer, va_arg (*text->args_ptr, unsigned int));\n \t  break;\n \n+        case 'l':\n+          if (long_integer)\n+            output_long_long_decimal\n+              (buffer, va_arg (*text->args_ptr, long long));\n+          else\n+            /* Sould not happen. */\n+            abort();\n+          break;\n+\n \tcase 'm':\n \t  output_add_string (buffer, xstrerror (text->err_no));\n \t  break;\n@@ -575,6 +598,11 @@ output_format (output_buffer *buffer, text_info *text)\n \t  }\n \t  break;\n \n+        case 'w':\n+          output_host_wide_integer\n+            (buffer, va_arg (*text->args_ptr, HOST_WIDE_INT));\n+          break;                                   \n+\n \tdefault:\n \t  if (!buffer->format_decoder\n               || !(*buffer->format_decoder) (buffer, text))"}, {"sha": "80d6a44d68daee2b93a638ccd5322c4b4441e6b9", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e3a8b78c5e8f59542d62945ec227fab3e8afd/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=0e9e3a8b78c5e8f59542d62945ec227fab3e8afd", "patch": "@@ -315,6 +315,7 @@ extern int output_space_left (const output_buffer *);\n extern void output_append (output_buffer *, const char *, const char *);\n extern void output_add_character (output_buffer *, int);\n extern void output_decimal (output_buffer *, int);\n+extern void output_host_wide_integer (output_buffer *, HOST_WIDE_INT);\n extern void output_add_string (output_buffer *, const char *);\n extern void output_add_identifier (output_buffer *, tree);\n extern const char *output_finalize_message (output_buffer *);"}]}