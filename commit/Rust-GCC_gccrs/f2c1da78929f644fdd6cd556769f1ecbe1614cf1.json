{"sha": "f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMWRhNzg5MjlmNjQ0ZmRkNmNkNTU2NzY5ZjFlY2JlMTYxNGNmMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-06-05T12:54:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-06-05T12:54:41Z"}, "message": "re PR c/44322 (Bogus warning when assigning pointer-to-array with both \"const\" and \"restrict\")\n\n\tPR c/44322\n\t* c-typeck.c (build_unary_op): Merge qualifiers into pointer\n\ttarget type for ADDR_EXPR; require no changes to qualifiers except\n\tfor function types.\n\t* c-tree.h (c_build_type_variant): Remove.\n\ntestsuite:\n\t* gcc.dg/c99-restrict-4.c: New test.\n\nFrom-SVN: r160312", "tree": {"sha": "6a1083c9a3ed75f534e40143e61b6ec996cb7901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a1083c9a3ed75f534e40143e61b6ec996cb7901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e68edbf6bcedca8428a96fc94fa25dab97b68860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68edbf6bcedca8428a96fc94fa25dab97b68860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68edbf6bcedca8428a96fc94fa25dab97b68860"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "8dc548d48127c450136c41a36cda0746946b18b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "patch": "@@ -1,3 +1,11 @@\n+2010-06-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/44322\n+\t* c-typeck.c (build_unary_op): Merge qualifiers into pointer\n+\ttarget type for ADDR_EXPR; require no changes to qualifiers except\n+\tfor function types.\n+\t* c-tree.h (c_build_type_variant): Remove.\n+\n 2010-06-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tgenautomata.c (get_excl_set): Do work per element, not per char."}, {"sha": "1921e1932f710f0271d14d60d3728730ca7e8be8", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "patch": "@@ -490,11 +490,6 @@ extern bool c_warn_unused_global_decl (const_tree);\n extern void c_initialize_diagnostics (diagnostic_context *);\n extern bool c_vla_unspec_p (tree x, tree fn);\n \n-#define c_build_type_variant(TYPE, CONST_P, VOLATILE_P)\t\t  \\\n-  c_build_qualified_type ((TYPE),\t\t\t\t  \\\n-\t\t\t  ((CONST_P) ? TYPE_QUAL_CONST : 0) |\t  \\\n-\t\t\t  ((VOLATILE_P) ? TYPE_QUAL_VOLATILE : 0))\n-\n /* in c-typeck.c */\n extern bool in_late_binary_op;\n extern int in_alignof;"}, {"sha": "5a291de497f865f64533c75f73cae2ebbda1cc94", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "patch": "@@ -3744,14 +3744,24 @@ build_unary_op (location_t location,\n       argtype = TREE_TYPE (arg);\n \n       /* If the lvalue is const or volatile, merge that into the type\n-\t to which the address will point.  Note that you can't get a\n-\t restricted pointer by taking the address of something, so we\n-\t only have to deal with `const' and `volatile' here.  */\n+\t to which the address will point.  This should only be needed\n+\t for function types.  */\n       if ((DECL_P (arg) || REFERENCE_CLASS_P (arg))\n \t  && (TREE_READONLY (arg) || TREE_THIS_VOLATILE (arg)))\n-\t  argtype = c_build_type_variant (argtype,\n-\t\t\t\t\t  TREE_READONLY (arg),\n-\t\t\t\t\t  TREE_THIS_VOLATILE (arg));\n+\t{\n+\t  int orig_quals = TYPE_QUALS (strip_array_types (argtype));\n+\t  int quals = orig_quals;\n+\n+\t  if (TREE_READONLY (arg))\n+\t    quals |= TYPE_QUAL_CONST;\n+\t  if (TREE_THIS_VOLATILE (arg))\n+\t    quals |= TYPE_QUAL_VOLATILE;\n+\n+\t  gcc_assert (quals == orig_quals\n+\t\t      || TREE_CODE (argtype) == FUNCTION_TYPE);\n+\n+\t  argtype = c_build_qualified_type (argtype, quals);\n+\t}\n \n       if (!c_mark_addressable (arg))\n \treturn error_mark_node;"}, {"sha": "041f762256b22968c4a88401eb9d09d7c06dcfe2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "patch": "@@ -1,3 +1,8 @@\n+2010-06-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/44322\n+\t* gcc.dg/c99-restrict-4.c: New test.\n+\n 2010-06-04  Magnus Fromreide  <magfr@lysator.liu.se>\n \n \t* g++.dg/cpp0x/nullptr01.C: Test nullptr_t variable."}, {"sha": "5852d0a112772c5b6e57efc0e74b4b159d7ac653", "filename": "gcc/testsuite/gcc.dg/c99-restrict-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-restrict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c1da78929f644fdd6cd556769f1ecbe1614cf1/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-restrict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-restrict-4.c?ref=f2c1da78929f644fdd6cd556769f1ecbe1614cf1", "patch": "@@ -0,0 +1,17 @@\n+/* Qualifiers lost when taking the address of a const restrict object.\n+   PR 44322.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+void * restrict const a[2];\n+void * restrict const (*p2)[2];\n+\n+void foo(void) {\n+   p2 = &a;\n+}\n+\n+void * restrict volatile b[2];\n+void * restrict volatile (*q2)[2];\n+\n+void bar(void) {\n+   q2 = &b;\n+}"}]}