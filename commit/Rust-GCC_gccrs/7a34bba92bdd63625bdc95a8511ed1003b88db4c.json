{"sha": "7a34bba92bdd63625bdc95a8511ed1003b88db4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzNGJiYTkyYmRkNjM2MjViZGM5NWE4NTExZWQxMDAzYjg4ZGI0Yw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2006-09-09T22:59:53Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2006-09-09T22:59:53Z"}, "message": "* config/m68k/m68k.md (bungt_rev): New pattern.\n\nFrom-SVN: r116801", "tree": {"sha": "5c461c5d58f8f8de2503f344c286345d1d484c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c461c5d58f8f8de2503f344c286345d1d484c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a34bba92bdd63625bdc95a8511ed1003b88db4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a34bba92bdd63625bdc95a8511ed1003b88db4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a34bba92bdd63625bdc95a8511ed1003b88db4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a34bba92bdd63625bdc95a8511ed1003b88db4c/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05f8c2d5f6832f5f93f0e397657fad131efafacb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f8c2d5f6832f5f93f0e397657fad131efafacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f8c2d5f6832f5f93f0e397657fad131efafacb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "e66a8e90fe4fccd3f4f2f8c16bd1988f96ca5f14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a34bba92bdd63625bdc95a8511ed1003b88db4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a34bba92bdd63625bdc95a8511ed1003b88db4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a34bba92bdd63625bdc95a8511ed1003b88db4c", "patch": "@@ -1,3 +1,7 @@\n+2006-09-10  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/m68k/m68k.md (bungt_rev): New pattern.\n+\n 2006-09-09  Paolo Bonzini  <bonzini@gnu.org>\n \t    Dale Johannesen  <dalej@apple.com>\n "}, {"sha": "d00f131712e3acc46696cd86d9e802cab2ceb97e", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a34bba92bdd63625bdc95a8511ed1003b88db4c/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a34bba92bdd63625bdc95a8511ed1003b88db4c/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=7a34bba92bdd63625bdc95a8511ed1003b88db4c", "patch": "@@ -6164,6 +6164,17 @@\n   return MOTOROLA ? \"fbolt %l0\" : \"fjolt %l0\";\n })\n \n+(define_insn \"*bungt_rev\"\n+  [(set (pc)\n+\t(if_then_else (ungt (cc0) (const_int 0))\n+\t\t      (pc)\n+\t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n+  \"TARGET_68881\"\n+{\n+  gcc_assert (cc_prev_status.flags & CC_IN_68881);\n+  return MOTOROLA ? \"fbole %l0\" : \"fjole %l0\";\n+})\n+\n (define_insn \"*bunle_rev\"\n   [(set (pc)\n \t(if_then_else (unle (cc0) (const_int 0))"}]}