{"sha": "100fded17a471de03d3fe02f66d7d2a36da51bab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwZmRlZDE3YTQ3MWRlMDNkM2ZlMDJmNjZkN2QyYTM2ZGE1MWJhYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-07-24T07:47:43Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-07-24T07:47:43Z"}, "message": "entry_13.f90: Use abs() > eps instead of \"/=\".\n\n2010-07-24  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/entry_13.f90: Use abs() > eps instead of \"/=\".\n        * gfortran.dg/integer_exponentiation_3.F90: Use -ffloat-store.\n\n        Missed files from previous commit:\n\n        * gfortran.dg/func_decl_5.f90: New.\n        * gfortran.dg/intrinsic_std_6.f90: New.\n\nFrom-SVN: r162498", "tree": {"sha": "12a47a6893c6269c8138dd0a7847ddb174aa154e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a47a6893c6269c8138dd0a7847ddb174aa154e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/100fded17a471de03d3fe02f66d7d2a36da51bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100fded17a471de03d3fe02f66d7d2a36da51bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100fded17a471de03d3fe02f66d7d2a36da51bab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100fded17a471de03d3fe02f66d7d2a36da51bab/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d7f4d9c8b2f59093e4d4661089a3f9d28002c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7f4d9c8b2f59093e4d4661089a3f9d28002c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7f4d9c8b2f59093e4d4661089a3f9d28002c61"}], "stats": {"total": 74, "additions": 69, "deletions": 5}, "files": [{"sha": "a43aee9a3a59956995725275136f1b28ff38a7b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=100fded17a471de03d3fe02f66d7d2a36da51bab", "patch": "@@ -1,3 +1,8 @@\n+2010-07-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/entry_13.f90: Use abs() > eps instead of \"/=\".\n+\t* gfortran.dg/integer_exponentiation_3.F90: Use -ffloat-store.\n+\n 2010-07-24  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/func_decl_4.f90: Split test into two ..."}, {"sha": "3a45fc5ea02a322cdcd5e1de0e46a41260ed69e9", "filename": "gcc/testsuite/gfortran.dg/entry_13.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_13.f90?ref=100fded17a471de03d3fe02f66d7d2a36da51bab", "patch": "@@ -67,14 +67,14 @@ program test\n   type(z) z1\n \n   z1 = x1//y1\n-  if (z1%x .ne. 19.0_4 + 7.0_4) call abort ()\n+  if (abs(z1%x - (19.0_4 + 7.0_4)) > epsilon(x1%x)) call abort ()\n   z1 = y1//x1\n-  if (z1%x .ne. 19.0_4 - 7.0_4) call abort ()\n+  if (abs(z1%x - (19.0_4 - 7.0_4)) > epsilon(x1%x)) call abort ()\n \n   z1 = x1==y1\n-  if (z1%x .ne. 19.0_4/7.0_4) call abort ()\n+  if (abs(z1%x - 19.0_4/7.0_4) > epsilon(x1%x)) call abort ()\n   z1 = y1==x1\n-  if (z1%x .ne. 19.0_4/7.0_4) call abort ()\n+  if (abs(z1%x - 19.0_4/7.0_4) > epsilon(x1%x)) call abort ()\n end program test\n ! { dg-final { cleanup-modules \"type_mod\" } }\n "}, {"sha": "9cd4735374d966371acd67d8c156970f975a0b3b", "filename": "gcc/testsuite/gfortran.dg/func_decl_5.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_decl_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_decl_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_decl_5.f90?ref=100fded17a471de03d3fe02f66d7d2a36da51bab", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-c\" }\n+!\n+! Functions shall not have an initializer.\n+!\n+! Some tests were moved from func_decl_4.f90 to here.\n+!\n+\n+function f1()                      ! { dg-error \"cannot have an initializer\" }\n+  integer :: f1 = 42\n+end function\n+\n+function f2() RESULT (r)           ! { dg-error \"cannot have an initializer\" }\n+  integer :: r = 42\n+end function"}, {"sha": "9277b7a7ccda86c7a0281a80d2db89a8dee4c462", "filename": "gcc/testsuite/gfortran.dg/integer_exponentiation_3.F90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_3.F90?ref=100fded17a471de03d3fe02f66d7d2a36da51bab", "patch": "@@ -1,6 +1,9 @@\n ! { dg-do run { xfail spu-*-* } }\n ! FAILs on SPU because of wrong compile-time rounding mode\n-! { dg-options \"\" }\n+! { dg-options \"-ffloat-store\" }\n+!\n+! -ffloat-store needed for x87\n+!\n module mod_check\n   implicit none\n "}, {"sha": "6b2eee459b17cf09eec50bb387e375697e024a11", "filename": "gcc/testsuite/gfortran.dg/intrinsic_std_6.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100fded17a471de03d3fe02f66d7d2a36da51bab/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_6.f90?ref=100fded17a471de03d3fe02f66d7d2a36da51bab", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95 -Wintrinsics-std -fdump-tree-original\" }\n+\n+!\n+! See intrinsic_std_1.f90 for more compile-time checks\n+!\n+\n+! PR fortran/33141\n+! Check for the expected behaviour when an intrinsic function/subroutine is\n+! called that is not available in the defined standard or that is a GNU\n+! extension:\n+! There should be a warning emitted on the call, and the reference should be\n+! treated like an external call.\n+! For declaring a non-standard intrinsic INTRINSIC, a hard error should be\n+! generated, of course.\n+\n+SUBROUTINE no_implicit\n+  IMPLICIT NONE\n+  REAL :: asinh ! { dg-warning \"Fortran 2008\" }\n+\n+  ! abort is a GNU extension\n+  CALL abort () ! { dg-warning \"extension\" }\n+\n+  ! ASINH is an intrinsic of F2008\n+  ! The warning should be issued in the declaration above where it is declared\n+  ! EXTERNAL.\n+  WRITE (*,*) ASINH (1.) ! { dg-warning \"Fortran 2008\" }\n+END SUBROUTINE no_implicit\n+\n+SUBROUTINE implicit_type\n+  ! acosh has implicit type\n+\n+  WRITE (*,*) ACOSH (1.) ! { dg-warning \"Fortran 2008\" }\n+  WRITE (*,*) ACOSH (1.) ! { dg-bogus \"Fortran 2008\" }\n+END SUBROUTINE implicit_type\n+\n+! Scan that really external functions are called.\n+! { dg-final { scan-tree-dump \" abort \" \"original\" } }\n+! { dg-final { scan-tree-dump \" asinh \" \"original\" } }\n+! { dg-final { scan-tree-dump \" acosh \" \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}