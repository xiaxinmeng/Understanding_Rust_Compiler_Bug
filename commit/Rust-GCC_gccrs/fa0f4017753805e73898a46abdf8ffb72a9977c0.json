{"sha": "fa0f4017753805e73898a46abdf8ffb72a9977c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEwZjQwMTc3NTM4MDVlNzM4OThhNDZhYmRmOGZmYjcyYTk5NzdjMA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2012-07-23T10:47:53Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2012-07-23T10:47:53Z"}, "message": "20101011-1.c (__aeabi_idiv0): Define for ARM.\n\n\tgcc/testsuite/\n\t* gcc.c-torture/execute/20101011-1.c (__aeabi_idiv0): Define for\n\tARM.\n\t(DO_TEST): Define to 1 for appropriate ARM targets.\n\nFrom-SVN: r189780", "tree": {"sha": "fe1e55a046b0ae8259d3fe802a5f3767925eb89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe1e55a046b0ae8259d3fe802a5f3767925eb89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa0f4017753805e73898a46abdf8ffb72a9977c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0f4017753805e73898a46abdf8ffb72a9977c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0f4017753805e73898a46abdf8ffb72a9977c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0f4017753805e73898a46abdf8ffb72a9977c0/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25632d2efbf80cb0b5da2fb38081b44f766584de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25632d2efbf80cb0b5da2fb38081b44f766584de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25632d2efbf80cb0b5da2fb38081b44f766584de"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "9b87996383c755635536e148aea4c9c673248900", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0f4017753805e73898a46abdf8ffb72a9977c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0f4017753805e73898a46abdf8ffb72a9977c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa0f4017753805e73898a46abdf8ffb72a9977c0", "patch": "@@ -1,3 +1,9 @@\n+2012-07-23  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/20101011-1.c (__aeabi_idiv0): Define for\n+\tARM.\n+\t(DO_TEST): Define to 1 for appropriate ARM targets.\n+\n 2012-07-22  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR tree-optimization/53881"}, {"sha": "b98454e253ef074b6219a83f0f9473f9dbc0188d", "filename": "gcc/testsuite/gcc.c-torture/execute/20101011-1.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0f4017753805e73898a46abdf8ffb72a9977c0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0f4017753805e73898a46abdf8ffb72a9977c0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c?ref=fa0f4017753805e73898a46abdf8ffb72a9977c0", "patch": "@@ -15,9 +15,6 @@\n #elif defined (__TMS320C6X__)\n   /* On TI C6X division by zero does not trap.  */\n # define DO_TEST 0\n-#elif defined (__arm__)\n- /* We cannot rely on division by zero generating a trap. */\n-# define DO_TEST 0\n #elif defined (__mips__) && !defined(__linux__)\n   /* MIPS divisions do trap by default, but libgloss targets do not\n      intercept the trap and raise a SIGFPE.  The same is probably\n@@ -39,6 +36,24 @@\n #elif defined (__CRIS__)\n   /* No SIGFPE for CRIS integer division.  */\n # define DO_TEST 0\n+#elif defined (__arm__) && defined (__ARM_EABI__)\n+# ifdef __ARM_ARCH_EXT_IDIV__\n+  /* Hardware division instructions may not trap, and handle trapping\n+     differently anyway.  Skip the test if we have those instructions.  */\n+#  define DO_TEST 0\n+# else\n+#  include <signal.h>\n+  /* ARM division-by-zero behaviour is to call a helper function, which\n+     can do several different things, depending on requirements.  Emulate\n+     the behaviour of other targets here by raising SIGFPE.  */\n+int __attribute__((used))\n+__aeabi_idiv0 (int return_value)\n+{\n+  raise (SIGFPE);\n+  return return_value;\n+}\n+#  define DO_TEST 1\n+# endif\n #else\n # define DO_TEST 1\n #endif"}]}