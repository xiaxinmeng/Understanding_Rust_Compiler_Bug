{"sha": "be9fdbda1cbcd6a35b05424679c6c059605b61cb", "node_id": "C_kwDOANBUbNoAKGJlOWZkYmRhMWNiY2Q2YTM1YjA1NDI0Njc5YzZjMDU5NjA1YjYxY2I", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-08T02:52:40Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-08T02:52:40Z"}, "message": "analyzer: introduce succeed_or_fail_call_info\n\nThis makes some followup code much cleaner.\n\ngcc/analyzer/ChangeLog:\n\t* call-info.cc (success_call_info::get_desc): Delete.\n\t(failed_call_info::get_desc): Likewise.\n\t(succeed_or_fail_call_info::get_desc): New.\n\t* call-info.h (class succeed_or_fail_call_info): New.\n\t(class success_call_info): Convert to a subclass of\n\tsucceed_or_fail_call_info.\n\t(class failed_call_info): Likewise.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "1ffe45ac3ac74f7c2e832a930b48ecdfea5d1098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ffe45ac3ac74f7c2e832a930b48ecdfea5d1098"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be9fdbda1cbcd6a35b05424679c6c059605b61cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9fdbda1cbcd6a35b05424679c6c059605b61cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9fdbda1cbcd6a35b05424679c6c059605b61cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9fdbda1cbcd6a35b05424679c6c059605b61cb/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55e042407ef307764cb9d5a4a06954518e2112b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e042407ef307764cb9d5a4a06954518e2112b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e042407ef307764cb9d5a4a06954518e2112b4"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "7a1c4edfcae8625a298205c58a572538bde1890c", "filename": "gcc/analyzer/call-info.cc", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9fdbda1cbcd6a35b05424679c6c059605b61cb/gcc%2Fanalyzer%2Fcall-info.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9fdbda1cbcd6a35b05424679c6c059605b61cb/gcc%2Fanalyzer%2Fcall-info.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-info.cc?ref=be9fdbda1cbcd6a35b05424679c6c059605b61cb", "patch": "@@ -141,24 +141,15 @@ call_info::call_info (const call_details &cd)\n   gcc_assert (m_fndecl);\n }\n \n-/* class success_call_info : public call_info.  */\n-\n-/* Implementation of call_info::get_desc vfunc for success_call_info.  */\n-\n-label_text\n-success_call_info::get_desc (bool can_colorize) const\n-{\n-  return make_label_text (can_colorize, \"when %qE succeeds\", get_fndecl ());\n-}\n-\n-/* class failed_call_info : public call_info.  */\n-\n-/* Implementation of call_info::get_desc vfunc for failed_call_info.  */\n+/* class succeed_or_fail_call_info : public call_info.  */\n \n label_text\n-failed_call_info::get_desc (bool can_colorize) const\n+succeed_or_fail_call_info::get_desc (bool can_colorize) const\n {\n-  return make_label_text (can_colorize, \"when %qE fails\", get_fndecl ());\n+  if (m_success)\n+    return make_label_text (can_colorize, \"when %qE succeeds\", get_fndecl ());\n+  else\n+    return make_label_text (can_colorize, \"when %qE fails\", get_fndecl ());\n }\n \n } // namespace ana"}, {"sha": "2fd50776f0a2cf61e45eb9986e4f9d4b9e0b0d3a", "filename": "gcc/analyzer/call-info.h", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9fdbda1cbcd6a35b05424679c6c059605b61cb/gcc%2Fanalyzer%2Fcall-info.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9fdbda1cbcd6a35b05424679c6c059605b61cb/gcc%2Fanalyzer%2Fcall-info.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-info.h?ref=be9fdbda1cbcd6a35b05424679c6c059605b61cb", "patch": "@@ -51,31 +51,49 @@ class call_info : public custom_edge_info\n };\n \n /* Subclass of call_info for a \"success\" outcome of a call,\n-   adding a \"when `FNDECL' succeeds\" message.\n+   adding either a\n+     \"when `FNDECL' succeeds\" message (when 'success' is true)\n+   or a\n+     \"when `FNDECL' fails\" message    (when 'success' is false).\n    This is still abstract: the custom_edge_info::update_model vfunc\n    must be implemented.  */\n \n-class success_call_info : public call_info\n+class succeed_or_fail_call_info : public call_info\n {\n public:\n   label_text get_desc (bool can_colorize) const final override;\n \n protected:\n-  success_call_info (const call_details &cd) : call_info (cd) {}\n+  succeed_or_fail_call_info (const call_details &cd, bool success)\n+   : call_info (cd), m_success (success) {}\n+\n+  bool m_success;\n+};\n+\n+/* Subclass of call_info for a \"success\" outcome of a call,\n+   adding a \"when `FNDECL' succeeds\" message.\n+   This is still abstract: the custom_edge_info::update_model vfunc\n+   must be implemented.  */\n+\n+class success_call_info : public succeed_or_fail_call_info\n+{\n+protected:\n+  success_call_info (const call_details &cd)\n+  : succeed_or_fail_call_info (cd, true)\n+  {}\n };\n \n /* Subclass of call_info for a \"failure\" outcome of a call,\n    adding a \"when `FNDECL' fails\" message.\n    This is still abstract: the custom_edge_info::update_model vfunc\n    must be implemented.  */\n \n-class failed_call_info : public call_info\n+class failed_call_info : public succeed_or_fail_call_info\n {\n-public:\n-  label_text get_desc (bool can_colorize) const final override;\n-\n protected:\n-  failed_call_info (const call_details &cd) : call_info (cd) {}\n+  failed_call_info (const call_details &cd)\n+  : succeed_or_fail_call_info (cd, false)\n+  {}\n };\n \n } // namespace ana"}]}