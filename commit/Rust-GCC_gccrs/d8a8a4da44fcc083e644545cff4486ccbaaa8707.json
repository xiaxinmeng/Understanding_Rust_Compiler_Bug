{"sha": "d8a8a4da44fcc083e644545cff4486ccbaaa8707", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhOGE0ZGE0NGZjYzA4M2U2NDQ1NDVjZmY0NDg2Y2NiYWFhODcwNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-24T01:06:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-24T01:06:11Z"}, "message": "(apply_distributive_law): Don't mess with float arith.\n\nFrom-SVN: r3317", "tree": {"sha": "a5e46f72fd01df99dd60644ff3ee861550a6cbe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5e46f72fd01df99dd60644ff3ee861550a6cbe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a8a4da44fcc083e644545cff4486ccbaaa8707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a8a4da44fcc083e644545cff4486ccbaaa8707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a8a4da44fcc083e644545cff4486ccbaaa8707", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a8a4da44fcc083e644545cff4486ccbaaa8707/comments", "author": null, "committer": null, "parents": [{"sha": "df24d0da45a930d137cc0a509b17c3d6537e873f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df24d0da45a930d137cc0a509b17c3d6537e873f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df24d0da45a930d137cc0a509b17c3d6537e873f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "33bac48f439f60a3af6f0fae75a3231391931dec", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a8a4da44fcc083e644545cff4486ccbaaa8707/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a8a4da44fcc083e644545cff4486ccbaaa8707/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d8a8a4da44fcc083e644545cff4486ccbaaa8707", "patch": "@@ -5526,6 +5526,12 @@ apply_distributive_law (x)\n   rtx tem;\n   enum rtx_code inner_code;\n \n+  /* Distributivity is not true for floating point.\n+     It can change the value.  So don't do it.\n+     -- rms and moshier@world.std.com.  */\n+  if (GET_MODE_CLASS (GET_MODE (x)) == MODE_FLOAT)\n+    return x;\n+\n   /* The outer operation can only be one of the following:  */\n   if (code != IOR && code != AND && code != XOR\n       && code != PLUS && code != MINUS)"}]}