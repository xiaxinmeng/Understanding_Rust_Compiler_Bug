{"sha": "f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "node_id": "C_kwDOANBUbNoAKGY2NTg5Y2E5NTdiMmExZDBiZWE2YzQzZGQ2MGUzN2IwNmNiMDRhYjM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-01T09:53:04Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-01T09:53:04Z"}, "message": "Add name resolution to ForLoopExpr", "tree": {"sha": "8b51e4c43b6b3dd5e17e7d13dec2118d71b17fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b51e4c43b6b3dd5e17e7d13dec2118d71b17fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a94948e65db2fef6fd93c94e70ead168b71513d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a94948e65db2fef6fd93c94e70ead168b71513d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a94948e65db2fef6fd93c94e70ead168b71513d"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "4bf35efdbbe0ac87cba393eeaeecff0f3f3c0762", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.cc", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc?ref=f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "patch": "@@ -420,6 +420,53 @@ ResolveExpr::visit (AST::WhileLoopExpr &expr)\n   resolve_expr (expr.get_loop_block ().get (), expr.get_node_id ());\n }\n \n+void\n+ResolveExpr::visit (AST::ForLoopExpr &expr)\n+{\n+  if (expr.has_loop_label ())\n+    {\n+      auto label = expr.get_loop_label ();\n+      if (label.get_lifetime ().get_lifetime_type ()\n+\t  != AST::Lifetime::LifetimeType::NAMED)\n+\t{\n+\t  rust_error_at (label.get_locus (),\n+\t\t\t \"Labels must be a named lifetime value\");\n+\t  return;\n+\t}\n+\n+      auto label_name = label.get_lifetime ().get_lifetime_name ();\n+      auto label_lifetime_node_id = label.get_lifetime ().get_node_id ();\n+      resolver->get_label_scope ().insert (\n+\tCanonicalPath::new_seg (label.get_node_id (), label_name),\n+\tlabel_lifetime_node_id, label.get_locus (), false,\n+\t[&] (const CanonicalPath &, NodeId, Location locus) -> void {\n+\t  rust_error_at (label.get_locus (), \"label redefined multiple times\");\n+\t  rust_error_at (locus, \"was defined here\");\n+\t});\n+      resolver->insert_new_definition (label_lifetime_node_id,\n+\t\t\t\t       Definition{label_lifetime_node_id,\n+\t\t\t\t\t\t  label.get_node_id ()});\n+    }\n+\n+  // this needs a new rib to contain the pattern\n+  NodeId scope_node_id = expr.get_node_id ();\n+  resolver->get_name_scope ().push (scope_node_id);\n+  resolver->get_type_scope ().push (scope_node_id);\n+  resolver->get_label_scope ().push (scope_node_id);\n+  resolver->push_new_name_rib (resolver->get_name_scope ().peek ());\n+  resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n+  resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n+\n+  // resolve the expression\n+  PatternDeclaration::go (expr.get_pattern ().get (), expr.get_node_id ());\n+  resolve_expr (expr.get_iterator_expr ().get (), expr.get_node_id ());\n+  resolve_expr (expr.get_loop_block ().get (), expr.get_node_id ());\n+\n+  resolver->get_name_scope ().pop ();\n+  resolver->get_type_scope ().pop ();\n+  resolver->get_label_scope ().pop ();\n+}\n+\n void\n ResolveExpr::visit (AST::ContinueExpr &expr)\n {"}, {"sha": "4f189decc9d26baf9c0cae53ffb5ca129050bd39", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h?ref=f6589ca957b2a1d0bea6c43dd60e37b06cb04ab3", "patch": "@@ -99,6 +99,8 @@ class ResolveExpr : public ResolverBase\n \n   void visit (AST::WhileLoopExpr &expr) override;\n \n+  void visit (AST::ForLoopExpr &expr) override;\n+\n   void visit (AST::ContinueExpr &expr) override;\n \n   void visit (AST::BorrowExpr &expr) override;"}]}