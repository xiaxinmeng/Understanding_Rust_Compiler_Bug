{"sha": "76f93d9994a39b1631bea983cfebf3e9a48c4288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmOTNkOTk5NGEzOWIxNjMxYmVhOTgzY2ZlYmYzZTlhNDhjNDI4OA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-12-10T18:30:07Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-12-10T18:30:07Z"}, "message": "re PR target/64180 (PowerPC carry bit improvements)\n\n\tPR target/64180\n\t* config/rs6000/darwin.md (macho_low_si): Remove \"r\" alternative.\n\t(macho_low_di): Ditto.\n\t* config/rs6000/rs6000.md (*largetoc_low): Ditto.\n\t(tocref<mode>): Ditto.\n\t(elf_low): Ditto.\n\t* config/rs6000/spe.md (mov_si<mode>_e500_subreg0_elf_low_be): Ditto.\n\t(mov_si<mode>_e500_subreg0_elf_low_le): Ditto.\n\t(mov_si<mode>_e500_subreg4_elf_low_be): Ditto.  Reformat condition.\n\t(mov_si<mode>_e500_subreg4_elf_low_le): Ditto.\n\nFrom-SVN: r218590", "tree": {"sha": "f229917c276a31eb88b196c835c8e817c159406b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f229917c276a31eb88b196c835c8e817c159406b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f93d9994a39b1631bea983cfebf3e9a48c4288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f93d9994a39b1631bea983cfebf3e9a48c4288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f93d9994a39b1631bea983cfebf3e9a48c4288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f93d9994a39b1631bea983cfebf3e9a48c4288/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b7817713f7bd37c78b9c0bd5747579aa80f6245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7817713f7bd37c78b9c0bd5747579aa80f6245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7817713f7bd37c78b9c0bd5747579aa80f6245"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "ad0ff1ec30c32bf77578649b6893ff23cd26db6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76f93d9994a39b1631bea983cfebf3e9a48c4288", "patch": "@@ -1,3 +1,16 @@\n+2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/64180\n+\t* config/rs6000/darwin.md (macho_low_si): Remove \"r\" alternative.\n+\t(macho_low_di): Ditto.\n+\t* config/rs6000/rs6000.md (*largetoc_low): Ditto.\n+\t(tocref<mode>): Ditto.\n+\t(elf_low): Ditto.\n+\t* config/rs6000/spe.md (mov_si<mode>_e500_subreg0_elf_low_be): Ditto.\n+\t(mov_si<mode>_e500_subreg0_elf_low_le): Ditto.\n+\t(mov_si<mode>_e500_subreg4_elf_low_be): Ditto.  Reformat condition.\n+\t(mov_si<mode>_e500_subreg4_elf_low_le): Ditto.\n+\n 2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/64180"}, {"sha": "764f847b26c620b4673184ecfc599e4a2b418222", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=76f93d9994a39b1631bea983cfebf3e9a48c4288", "patch": "@@ -213,22 +213,18 @@ You should have received a copy of the GNU General Public License\n })\n \n (define_insn \"macho_low_si\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,!*r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n    \"TARGET_MACHO && ! TARGET_64BIT\"\n-   \"@\n-    la %0,lo16(%2)(%1)\n-    addic %0,%1,lo16(%2)\")\n+   \"la %0,lo16(%2)(%1)\")\n \n (define_insn \"macho_low_di\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,!*r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n    \"TARGET_MACHO && TARGET_64BIT\"\n-   \"@\n-    la %0,lo16(%2)(%1)\n-    addic %0,%1,lo16(%2)\")\n+   \"la %0,lo16(%2)(%1)\")\n \n (define_split\n   [(set (mem:V4SI (plus:DI (match_operand:DI 0 \"gpc_reg_operand\" \"\")"}, {"sha": "989a296eb335c6f28f317caaee67c2bdfd327438", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=76f93d9994a39b1631bea983cfebf3e9a48c4288", "patch": "@@ -10706,13 +10706,11 @@\n    \"addis %0,%1+%3@u(%2)\")\n \n (define_insn \"*largetoc_low\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-        (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,!*r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+        (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t           (match_operand:DI 2 \"\" \"\")))]\n    \"TARGET_ELF && TARGET_CMODEL != CMODEL_SMALL\"\n-   \"@\n-    addi %0,%1,%2@l\n-    addic %0,%1,%2@l\")\n+   \"addi %0,%1,%2@l\")\n \n (define_insn \"*largetoc_low_aix<mode>\"\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n@@ -10722,7 +10720,7 @@\n    \"la %0,%2@l(%1)\")\n \n (define_insn_and_split \"*tocref<mode>\"\n-  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=b*r\")\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=b\")\n \t(match_operand:P 1 \"small_toc_ref\" \"R\"))]\n    \"TARGET_TOC\"\n    \"la %0,%a1\"\n@@ -10741,13 +10739,11 @@\n   \"lis %0,%1@ha\")\n \n (define_insn \"elf_low\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,!*r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n    \"TARGET_ELF && ! TARGET_64BIT\"\n-   \"@\n-    la %0,%2@l(%1)\n-    addic %0,%1,%K2\")\n+   \"la %0,%2@l(%1)\")\n \f\n ;; Call and call_value insns\n (define_expand \"call\""}, {"sha": "07c293cae2574b85bcc3d943e71eca84270f592a", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f93d9994a39b1631bea983cfebf3e9a48c4288/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=76f93d9994a39b1631bea983cfebf3e9a48c4288", "patch": "@@ -2519,7 +2519,7 @@\n \n (define_insn_and_split \"*mov_si<mode>_e500_subreg0_elf_low_be\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r\") 0)\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n   \"WORDS_BIG_ENDIAN\n    && (((TARGET_E500_DOUBLE && (<MODE>mode == DFmode || <MODE>mode == TFmode))\n@@ -2538,13 +2538,13 @@\n \n (define_insn \"*mov_si<mode>_e500_subreg0_elf_low_le\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r\") 0)\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n   \"!WORDS_BIG_ENDIAN\n    && (((TARGET_E500_DOUBLE && (<MODE>mode == DFmode || <MODE>mode == TFmode))\n \t|| (TARGET_SPE && <MODE>mode != DFmode && <MODE>mode != TFmode))\n        && TARGET_ELF && !TARGET_64BIT)\"\n-  \"addic %0,%1,%K2\")\n+  \"addi %0,%1,%K2\")\n \n ;; ??? Could use evstwwe for memory stores in some cases, depending on\n ;; the offset.\n@@ -2592,17 +2592,17 @@\n \n (define_insn \"*mov_si<mode>_e500_subreg4_elf_low_be\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r\") 4)\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n   \"WORDS_BIG_ENDIAN\n-   && (((TARGET_E500_DOUBLE && (<MODE>mode == DFmode || <MODE>mode == TFmode))\n-\t|| (TARGET_SPE && <MODE>mode != DFmode && <MODE>mode != TFmode))\n-       && TARGET_ELF && !TARGET_64BIT)\"\n-  \"addic %0,%1,%K2\")\n+   && ((TARGET_E500_DOUBLE && (<MODE>mode == DFmode || <MODE>mode == TFmode))\n+       || (TARGET_SPE && <MODE>mode != DFmode && <MODE>mode != TFmode))\n+   && TARGET_ELF && !TARGET_64BIT\"\n+  \"addi %0,%1,%K2\")\n \n (define_insn_and_split \"*mov_si<mode>_e500_subreg4_elf_low_le\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r\") 4)\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n   \"!WORDS_BIG_ENDIAN\n    && (((TARGET_E500_DOUBLE && (<MODE>mode == DFmode || <MODE>mode == TFmode))"}]}