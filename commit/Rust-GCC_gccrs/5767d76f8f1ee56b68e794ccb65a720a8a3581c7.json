{"sha": "5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2N2Q3NmY4ZjFlZTU2YjY4ZTc5NGNjYjY1YTcyMGE4YTM1ODFjNw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:50:31Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:50:31Z"}, "message": "re PR d/90863 (ICE in StatementSemanticVisitor::visit, at d/dmd/statementsem.c:1992)\n\n\tPR d/90863\nd/dmd: Merge upstream dmd 6e44734cc\n\nFixes segmentation fault in StatementSemanticVisitor::visit.\n\nReviewed-on: https://github.com/dlang/dmd/pull/10033\n\nFrom-SVN: r272352", "tree": {"sha": "d78be0616d576e31d61e0e3aaffee59fc31056ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d78be0616d576e31d61e0e3aaffee59fc31056ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/comments", "author": null, "committer": null, "parents": [{"sha": "b0a55e6657cbb934837b293a9ea2810b1a74c7e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a55e6657cbb934837b293a9ea2810b1a74c7e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a55e6657cbb934837b293a9ea2810b1a74c7e0"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "0620a5ba5564442b8d149f0474739a6edf4ad10c", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "patch": "@@ -1,4 +1,4 @@\n-7afcc60c30554e452eacdfbefc4951ebf601fccd\n+6e44734ccbeb78252a52e129a67fefb313679948\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "c3b60b88216b1ab908063fed87c3051b248ef9e3", "filename": "gcc/d/dmd/blockexit.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2Fblockexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2Fblockexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fblockexit.c?ref=5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "patch": "@@ -496,6 +496,8 @@ int blockExit(Statement *s, FuncDeclaration *func, bool mustNotThrow)\n         }\n     };\n \n+    if (!s)\n+        return BEfallthru;\n     BlockExit be(func, mustNotThrow);\n     s->accept(&be);\n     return be.result;"}, {"sha": "143864dc666aee7a651c2c8a6cd405ca351005f4", "filename": "gcc/d/dmd/statementsem.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2Fstatementsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Fd%2Fdmd%2Fstatementsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.c?ref=5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "patch": "@@ -2035,7 +2035,7 @@ class StatementSemanticVisitor : public Visitor\n         ss->_body = semantic(ss->_body, sc);\n         sc->noctor--;\n \n-        if (conditionError || ss->_body->isErrorStatement())\n+        if (conditionError || (ss->_body && ss->_body->isErrorStatement()))\n             goto Lerror;\n \n         // Resolve any goto case's with exp\n@@ -2111,7 +2111,7 @@ class StatementSemanticVisitor : public Visitor\n         {\n             ss->hasNoDefault = 1;\n \n-            if (!ss->isFinal && !ss->_body->isErrorStatement())\n+            if (!ss->isFinal && (!ss->_body || !ss->_body->isErrorStatement()))\n                 ss->error(\"switch statement without a default; use 'final switch' or add 'default: assert(0);' or add 'default: break;'\");\n \n             // Generate runtime error if the default is hit"}, {"sha": "7cdce2c676ad5ddd32e8094e41fee91227e1f796", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19955.d", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19955.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5767d76f8f1ee56b68e794ccb65a720a8a3581c7/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19955.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19955.d?ref=5767d76f8f1ee56b68e794ccb65a720a8a3581c7", "patch": "@@ -0,0 +1,8 @@\n+// PERMUTE_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19955.d(8): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\n+---\n+*/\n+void f() { switch(1) static assert(1); }"}]}