{"sha": "6f1595d35751ecf3261cb65fb71c1f243630c250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYxNTk1ZDM1NzUxZWNmMzI2MWNiNjVmYjcxYzFmMjQzNjMwYzI1MA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2009-07-29T05:02:10Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-07-29T05:02:10Z"}, "message": "dwarf2out.c (DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET): New macro set for VMS_DEBUGGGING_INFO.\n\n\n\t* dwarf2out.c (DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET):\n\tNew macro set for VMS_DEBUGGGING_INFO.\n\t(AT_string_form): Use it.\n\nFrom-SVN: r150196", "tree": {"sha": "383617cc8807598de43e0e3bfef4c74232ecfeac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/383617cc8807598de43e0e3bfef4c74232ecfeac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f1595d35751ecf3261cb65fb71c1f243630c250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1595d35751ecf3261cb65fb71c1f243630c250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f1595d35751ecf3261cb65fb71c1f243630c250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1595d35751ecf3261cb65fb71c1f243630c250/comments", "author": null, "committer": null, "parents": [{"sha": "8a259105700e8e1324d65ed98b71cc5881043c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a259105700e8e1324d65ed98b71cc5881043c43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a259105700e8e1324d65ed98b71cc5881043c43"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "b4911a6543a7e487fc0c3c8d2a4015e1fd2e597c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1595d35751ecf3261cb65fb71c1f243630c250/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1595d35751ecf3261cb65fb71c1f243630c250/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f1595d35751ecf3261cb65fb71c1f243630c250", "patch": "@@ -1,3 +1,9 @@\n+2009-07-28  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* dwarf2out.c (DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET):\n+\tNew macro set for VMS_DEBUGGGING_INFO.\n+\t(AT_string_form): Use it.\n+\n 2009-07-28  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.c (vtext_section): New."}, {"sha": "488439fcfbee6746760d31d1d0f994c348f21f16", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1595d35751ecf3261cb65fb71c1f243630c250/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1595d35751ecf3261cb65fb71c1f243630c250/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6f1595d35751ecf3261cb65fb71c1f243630c250", "patch": "@@ -100,8 +100,14 @@ static rtx last_var_location_insn;\n /* Define this macro to be a nonzero value if the directory specifications\n     which are output in the debug info should end with a separator.  */\n #define DWARF2_DIR_SHOULD_END_WITH_SEPARATOR 1\n+/* Define this macro to evaluate to a nonzero value if GCC should refrain\n+   from generating indirect strings in DWARF2 debug information, for instance\n+   if your target is stuck with an old version of GDB that is unable to\n+   process them properly or uses VMS Debug.  */\n+#define DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET 1\n #else\n #define DWARF2_DIR_SHOULD_END_WITH_SEPARATOR 0\n+#define DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET 0\n #endif\n \n #ifndef DWARF2_FRAME_INFO\n@@ -6705,8 +6711,9 @@ AT_string_form (dw_attr_ref a)\n   /* If we cannot expect the linker to merge strings in .debug_str\n      section, only put it into .debug_str if it is worth even in this\n      single module.  */\n-  if ((debug_str_section->common.flags & SECTION_MERGE) == 0\n-      && (len - DWARF_OFFSET_SIZE) * node->refcount <= len)\n+  if (DWARF2_INDIRECT_STRING_SUPPORT_MISSING_ON_TARGET\n+      || ((debug_str_section->common.flags & SECTION_MERGE) == 0\n+      && (len - DWARF_OFFSET_SIZE) * node->refcount <= len))\n     return node->form = DW_FORM_string;\n \n   ASM_GENERATE_INTERNAL_LABEL (label, \"LASF\", dw2_string_counter);"}]}