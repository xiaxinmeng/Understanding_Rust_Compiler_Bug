{"sha": "209042e6134df01869271b00985b8e5f51771554", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5MDQyZTYxMzRkZjAxODY5MjcxYjAwOTg1YjhlNWY1MTc3MTU1NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-01-17T00:14:52Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-01-17T00:14:52Z"}, "message": "PR tree-optimization/78608 - gimple-ssa-sprintf.c:570:17: runtime error: negation of -9223372036854775808 cannot be represented in type 'long int'\n\ngcc/ChangeLog:\n\t* gimple-ssa-sprintf.c (tree_digits): Avoid negating TYPE_MIN.\n\nFrom-SVN: r244511", "tree": {"sha": "03a1bb0b97bc037879fb4d8de2867702ae95f24a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03a1bb0b97bc037879fb4d8de2867702ae95f24a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/209042e6134df01869271b00985b8e5f51771554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209042e6134df01869271b00985b8e5f51771554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209042e6134df01869271b00985b8e5f51771554", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209042e6134df01869271b00985b8e5f51771554/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26830c2facbde04517814464d4cd099a6fe1dd08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26830c2facbde04517814464d4cd099a6fe1dd08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26830c2facbde04517814464d4cd099a6fe1dd08"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "ead236ff5fb567667a9753ff810f870054ba500c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209042e6134df01869271b00985b8e5f51771554/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209042e6134df01869271b00985b8e5f51771554/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=209042e6134df01869271b00985b8e5f51771554", "patch": "@@ -1,3 +1,8 @@\n+2017-01-16  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/78608\n+\t* gimple-ssa-sprintf.c (tree_digits): Avoid negating TYPE_MIN.\n+\n 2017-01-16  Jeff Law  <law@redhat.com>\n \n \tRevert:"}, {"sha": "76e851231d6bccb9007b2e941f82ac036ce08945", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209042e6134df01869271b00985b8e5f51771554/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209042e6134df01869271b00985b8e5f51771554/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=209042e6134df01869271b00985b8e5f51771554", "patch": "@@ -577,16 +577,22 @@ tree_digits (tree x, int base, HOST_WIDE_INT prec, bool plus, bool prefix)\n       if (tree_fits_shwi_p (x))\n \t{\n \t  HOST_WIDE_INT i = tree_to_shwi (x);\n-\t  if (i < 0)\n-\t    {\n-\t      absval = -i;\n-\t      res = 1;\n-\t    }\n-\t  else\n-\t    {\n-\t      absval = i;\n-\t      res = plus;\n-\t    }\n+         if (HOST_WIDE_INT_MIN == i)\n+           {\n+             /* Avoid undefined behavior due to negating a minimum.  */\n+             absval = HOST_WIDE_INT_MAX;\n+             res = 1;\n+           }\n+         else if (i < 0)\n+\t   {\n+\t     absval = -i;\n+\t     res = 1;\n+\t   }\n+\t else\n+\t   {\n+\t     absval = i;\n+\t     res = plus;\n+\t   }\n \t}\n       else\n \treturn -1;"}]}