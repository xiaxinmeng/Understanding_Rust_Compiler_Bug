{"sha": "fc881de2825e37142436efcfd7537cc467f3430c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM4ODFkZTI4MjVlMzcxNDI0MzZlZmNmZDc1MzdjYzQ2N2YzNDMwYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-01-17T10:08:55Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-01-17T10:08:55Z"}, "message": "[AArch64] Initial -mcpu=ares tuning\n\nThis patch adds a tuning struct for the Arm Ares CPU and uses it for -m{cpu,tune}=ares.\nThe tunings are an initial attempt and may be improved upon in the future, but they serve\nas a decent starting point for GCC 9.\n\nWith this I see a 1.3% improvement on SPEC2006 int and 0.3% on SPEC2006 fp with -mcpu=ares.\nOn SPEC2017 I see a 0.6% improvement in intrate and changes in the noise for fprate.\n\n        * config/aarch64/aarch64.c (ares_tunings): Define.\n        * config/aarch64/aarch64-cores.def (ares): Use the above.\n\nFrom-SVN: r268015", "tree": {"sha": "3920f34b306599b81279e0b11bbd935028536246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3920f34b306599b81279e0b11bbd935028536246"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc881de2825e37142436efcfd7537cc467f3430c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc881de2825e37142436efcfd7537cc467f3430c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc881de2825e37142436efcfd7537cc467f3430c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc881de2825e37142436efcfd7537cc467f3430c/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6a02135809ecd378be0aea256381af0fc79935c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a02135809ecd378be0aea256381af0fc79935c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a02135809ecd378be0aea256381af0fc79935c"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "59f39740a7b940a3092a37d1576528fd0b8b6f4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc881de2825e37142436efcfd7537cc467f3430c", "patch": "@@ -1,3 +1,8 @@\n+2019-01-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (ares_tunings): Define.\n+\t* config/aarch64/aarch64-cores.def (ares): Use the above.\n+\n 2019-01-17  Wei Xiao  <wei3.xiao@intel.com>\n \n \tPR target/88794"}, {"sha": "7c4bd52049e5ae33241acce37414da91abaa989c", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=fc881de2825e37142436efcfd7537cc467f3430c", "patch": "@@ -100,7 +100,7 @@ AARCH64_CORE(\"thunderx2t99\",  thunderx2t99,  thunderx2t99, 8_1A,  AARCH64_FL_FOR\n AARCH64_CORE(\"cortex-a55\",  cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa53, 0x41, 0xd05, -1)\n AARCH64_CORE(\"cortex-a75\",  cortexa75, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa73, 0x41, 0xd0a, -1)\n AARCH64_CORE(\"cortex-a76\",  cortexa76, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa72, 0x41, 0xd0b, -1)\n-AARCH64_CORE(\"ares\",  ares, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_PROFILE, cortexa72, 0x41, 0xd0c, -1)\n+AARCH64_CORE(\"ares\",  ares, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_PROFILE, ares, 0x41, 0xd0c, -1)\n \n /* HiSilicon ('H') cores. */\n AARCH64_CORE(\"tsv110\",  tsv110, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_F16 | AARCH64_FL_AES | AARCH64_FL_SHA2, tsv110,   0x48, 0xd01, -1)"}, {"sha": "3c1818ad96d9263d7b23bc7d9e917061f95352ec", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc881de2825e37142436efcfd7537cc467f3430c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=fc881de2825e37142436efcfd7537cc467f3430c", "patch": "@@ -1083,6 +1083,32 @@ static const struct tune_params thunderx2t99_tunings =\n   &thunderx2t99_prefetch_tune\n };\n \n+static const struct tune_params ares_tunings =\n+{\n+  &cortexa57_extra_costs,\n+  &generic_addrcost_table,\n+  &generic_regmove_cost,\n+  &cortexa57_vector_cost,\n+  &generic_branch_cost,\n+  &generic_approx_modes,\n+  SVE_NOT_IMPLEMENTED, /* sve_width  */\n+  4, /* memmov_cost  */\n+  3, /* issue_rate  */\n+  AARCH64_FUSE_AES_AESMC, /* fusible_ops  */\n+  \"32:16\",\t/* function_align.  */\n+  \"32:16\",\t/* jump_align.  */\n+  \"32:16\",\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  2,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NONE),\t/* tune_flags.  */\n+  &generic_prefetch_tune\n+};\n+\n /* Support for fine-grained override of the tuning structures.  */\n struct aarch64_tuning_override_function\n {"}]}