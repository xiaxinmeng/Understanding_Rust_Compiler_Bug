{"sha": "26eb69c619a491be1a40413b98d010b2d3ef984a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZlYjY5YzYxOWE0OTFiZTFhNDA0MTNiOThkMDEwYjJkM2VmOTg0YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-10T08:19:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-10T08:19:21Z"}, "message": "tree-pass.h (tree_lowering_passes): Remove.\n\n2012-04-10  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-pass.h (tree_lowering_passes): Remove.\n\t* tree-optimize.c (tree_lowering_passes): Remove.\n\t* cgraph.c (cgraph_add_new_function): Inline relevant parts\n\tof tree_lowering_passes, avoid redundant call of early local\n\tpasses.\n\t* cgraphunit.c (cgraph_lower_function): Fold into ...\n\t(cgraph_analyze_function): ... its single caller.  Inline\n\trelevant parts of tree_lowering_passes.\n\nFrom-SVN: r186268", "tree": {"sha": "6b92c821c2ae799a2ab7f42bf9b9d1f1861fa75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b92c821c2ae799a2ab7f42bf9b9d1f1861fa75f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26eb69c619a491be1a40413b98d010b2d3ef984a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26eb69c619a491be1a40413b98d010b2d3ef984a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26eb69c619a491be1a40413b98d010b2d3ef984a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26eb69c619a491be1a40413b98d010b2d3ef984a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b"}], "stats": {"total": 70, "additions": 30, "deletions": 40}, "files": [{"sha": "3a1819dfff3d822cc8b583e7f7ff8ea41d7db7d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26eb69c619a491be1a40413b98d010b2d3ef984a", "patch": "@@ -1,3 +1,14 @@\n+2012-04-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-pass.h (tree_lowering_passes): Remove.\n+\t* tree-optimize.c (tree_lowering_passes): Remove.\n+\t* cgraph.c (cgraph_add_new_function): Inline relevant parts\n+\tof tree_lowering_passes, avoid redundant call of early local\n+\tpasses.\n+\t* cgraphunit.c (cgraph_lower_function): Fold into ...\n+\t(cgraph_analyze_function): ... its single caller.  Inline\n+\trelevant parts of tree_lowering_passes.\n+\n 2012-04-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR other/52777"}, {"sha": "8ab8a0b7b0657ae4c14c331f7033e8e33b22ea75", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=26eb69c619a491be1a40413b98d010b2d3ef984a", "patch": "@@ -2437,10 +2437,9 @@ cgraph_add_new_function (tree fndecl, bool lowered)\n \t    push_cfun (DECL_STRUCT_FUNCTION (fndecl));\n \t    current_function_decl = fndecl;\n \t    gimple_register_cfg_hooks ();\n-\t    tree_lowering_passes (fndecl);\n \t    bitmap_obstack_initialize (NULL);\n-\t    if (!gimple_in_ssa_p (DECL_STRUCT_FUNCTION (fndecl)))\n-\t      execute_pass_list (pass_early_local_passes.pass.sub);\n+\t    execute_pass_list (all_lowering_passes);\n+\t    execute_pass_list (pass_early_local_passes.pass.sub);\n \t    bitmap_obstack_release (NULL);\n \t    pop_cfun ();\n \t    current_function_decl = NULL;"}, {"sha": "70ac1f39ea4ffba7ac2d7fe9ea50125e08d25966", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=26eb69c619a491be1a40413b98d010b2d3ef984a", "patch": "@@ -313,20 +313,6 @@ cgraph_reset_node (struct cgraph_node *node)\n   cgraph_node_remove_callees (node);\n }\n \n-static void\n-cgraph_lower_function (struct cgraph_node *node)\n-{\n-  if (node->lowered)\n-    return;\n-\n-  if (node->nested)\n-    lower_nested_functions (node->decl);\n-  gcc_assert (!node->nested);\n-\n-  tree_lowering_passes (node->decl);\n-  node->lowered = true;\n-}\n-\n /* DECL has been parsed.  Take it, queue it, compile it at the whim of the\n    logic in effect.  If NESTED is true, then our caller cannot stand to have\n    the garbage collector run at the moment.  We would need to either create\n@@ -915,7 +901,23 @@ cgraph_analyze_function (struct cgraph_node *node)\n \tgimplify_function_tree (decl);\n       dump_function (TDI_generic, decl);\n \n-      cgraph_lower_function (node);\n+      /* Lower the function.  */\n+      if (!node->lowered)\n+\t{\n+\t  if (node->nested)\n+\t    lower_nested_functions (node->decl);\n+\t  gcc_assert (!node->nested);\n+\n+\t  gimple_register_cfg_hooks ();\n+\t  bitmap_obstack_initialize (NULL);\n+\t  execute_pass_list (all_lowering_passes);\n+\t  free_dominance_info (CDI_POST_DOMINATORS);\n+\t  free_dominance_info (CDI_DOMINATORS);\n+\t  compact_blocks ();\n+\t  bitmap_obstack_release (NULL);\n+\t  node->lowered = true;\n+\t}\n+\n       pop_cfun ();\n     }\n   node->analyzed = true;"}, {"sha": "e59d1ad912b33264d9a4895b7bf4d159729a77bf", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=26eb69c619a491be1a40413b98d010b2d3ef984a", "patch": "@@ -366,26 +366,6 @@ struct gimple_opt_pass pass_init_datastructures =\n   0\t\t\t\t\t/* todo_flags_finish */\n  }\n };\n-\n-void\n-tree_lowering_passes (tree fn)\n-{\n-  tree saved_current_function_decl = current_function_decl;\n-\n-  current_function_decl = fn;\n-  push_cfun (DECL_STRUCT_FUNCTION (fn));\n-  gimple_register_cfg_hooks ();\n-  bitmap_obstack_initialize (NULL);\n-  execute_pass_list (all_lowering_passes);\n-  if (optimize && cgraph_global_info_ready)\n-    execute_pass_list (pass_early_local_passes.pass.sub);\n-  free_dominance_info (CDI_POST_DOMINATORS);\n-  free_dominance_info (CDI_DOMINATORS);\n-  compact_blocks ();\n-  current_function_decl = saved_current_function_decl;\n-  bitmap_obstack_release (NULL);\n-  pop_cfun ();\n-}\n \f\n /* For functions-as-trees languages, this performs all optimization and\n    compilation for FNDECL.  */"}, {"sha": "cbb2a87bd41eea55859a17f1bb1a095cb7bcb4bc", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eb69c619a491be1a40413b98d010b2d3ef984a/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=26eb69c619a491be1a40413b98d010b2d3ef984a", "patch": "@@ -349,8 +349,6 @@ struct register_pass_info\n   enum pass_positioning_ops pos_op; /* how to insert the new pass.  */\n };\n \n-extern void tree_lowering_passes (tree decl);\n-\n extern struct gimple_opt_pass pass_mudflap_1;\n extern struct gimple_opt_pass pass_mudflap_2;\n extern struct gimple_opt_pass pass_lower_cf;"}]}