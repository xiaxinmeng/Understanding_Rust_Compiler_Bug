{"sha": "a582436140d3d79d43a5af27ba1601d16e3a51f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU4MjQzNjE0MGQzZDc5ZDQzYTVhZjI3YmExNjAxZDE2ZTNhNTFmOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-30T07:16:04Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-30T07:16:04Z"}, "message": "Fix coding style.\n\n2017-05-30  Martin Liska  <mliska@suse.cz>\n\n\t* predict.def: Fix GNU coding style.\n\nFrom-SVN: r248599", "tree": {"sha": "88185c04d494e7712c95fcd400ba31f36b145563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88185c04d494e7712c95fcd400ba31f36b145563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a582436140d3d79d43a5af27ba1601d16e3a51f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a582436140d3d79d43a5af27ba1601d16e3a51f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a582436140d3d79d43a5af27ba1601d16e3a51f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a582436140d3d79d43a5af27ba1601d16e3a51f8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2271dac6bf4f9bda6cec201a65df09098ab19c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2271dac6bf4f9bda6cec201a65df09098ab19c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2271dac6bf4f9bda6cec201a65df09098ab19c05"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d96900407cfad3e6d15ebd1f2c9e8b60d8a24066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a582436140d3d79d43a5af27ba1601d16e3a51f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a582436140d3d79d43a5af27ba1601d16e3a51f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a582436140d3d79d43a5af27ba1601d16e3a51f8", "patch": "@@ -1,3 +1,7 @@\n+2017-05-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.def: Fix GNU coding style.\n+\n 2017-05-29  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa.c (xtensa_initial_elimination_offset):"}, {"sha": "fcda6c48f110f6fbe84780cf500fbce9e6278267", "filename": "gcc/predict.def", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a582436140d3d79d43a5af27ba1601d16e3a51f8/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a582436140d3d79d43a5af27ba1601d16e3a51f8/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=a582436140d3d79d43a5af27ba1601d16e3a51f8", "patch": "@@ -194,12 +194,13 @@ DEF_PREDICTOR (PRED_FORTRAN_OVERFLOW, \"Fortran overflow\", PROB_ALWAYS,\n    of memory.  This predictor only occurs when the user explicitly asked\n    for a return status.  By default, the code aborts,\n    which is handled via PRED_NORETURN.  */\n-DEF_PREDICTOR (PRED_FORTRAN_FAIL_ALLOC, \"Fortran fail alloc\", PROB_VERY_LIKELY, 0)\n+DEF_PREDICTOR (PRED_FORTRAN_FAIL_ALLOC, \"Fortran fail alloc\",\n+\t       PROB_VERY_LIKELY, 0)\n \n /* Predictor is used for an allocation of an already allocated memory or\n    deallocating an already deallocated allocatable.  */\n-DEF_PREDICTOR (PRED_FORTRAN_REALLOC, \\\n-\t       \"Fortran repeated allocation/deallocation\", PROB_LIKELY, 0)\n+DEF_PREDICTOR (PRED_FORTRAN_REALLOC, \"Fortran repeated allocation/deallocation\",\n+\t       PROB_LIKELY, 0)\n \n /* Branch leading to an I/O failure status are unlikely.  This predictor is\n    used for I/O failures such as for invalid unit numbers.  This predictor"}]}