{"sha": "f263fe40d780740a780e8c273fc336da48fd963e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2M2ZlNDBkNzgwNzQwYTc4MGU4YzI3M2ZjMzM2ZGE0OGZkOTYzZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-01-13T21:13:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-01-13T21:13:36Z"}, "message": "Check if -pg links in check_profiling_available\n\n\t* lib/target-supports.exp (check_profiling_available): Check if\n\t-pg links.\n\nFrom-SVN: r219560", "tree": {"sha": "2c703cc8038b3224e58ef89856a4a3d1970cf95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c703cc8038b3224e58ef89856a4a3d1970cf95e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f263fe40d780740a780e8c273fc336da48fd963e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f263fe40d780740a780e8c273fc336da48fd963e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f263fe40d780740a780e8c273fc336da48fd963e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f263fe40d780740a780e8c273fc336da48fd963e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "caee690e915e13a48a16dabbb61110ae88d1821a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caee690e915e13a48a16dabbb61110ae88d1821a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caee690e915e13a48a16dabbb61110ae88d1821a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "5e58e7d1675c55cdb741aa2d4e34cad24a1e25a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f263fe40d780740a780e8c273fc336da48fd963e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f263fe40d780740a780e8c273fc336da48fd963e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f263fe40d780740a780e8c273fc336da48fd963e", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* lib/target-supports.exp (check_profiling_available): Check if\n+\t-pg links.\n+\n 2015-01-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/64565"}, {"sha": "61bff53754b5b969318f5ff8a366069c7af6ddf3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f263fe40d780740a780e8c273fc336da48fd963e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f263fe40d780740a780e8c273fc336da48fd963e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f263fe40d780740a780e8c273fc336da48fd963e", "patch": "@@ -549,7 +549,16 @@ proc check_profiling_available { test_what } {\n \t}\n     }\n \n-    return $profiling_available_saved\n+    # -pg link test result can't be cached since it may change between\n+    # runs.\n+    set profiling_working $profiling_available_saved\n+    if { $profiling_available_saved == 1\n+         && ![check_no_compiler_messages_nocache profiling executable {\n+\t      int main() { return 0; } } \"-pg\"] } {\n+\tset profiling_working 0\n+    }\n+\n+    return $profiling_working\n }\n \n # Check to see if a target is \"freestanding\". This is as per the definition"}]}