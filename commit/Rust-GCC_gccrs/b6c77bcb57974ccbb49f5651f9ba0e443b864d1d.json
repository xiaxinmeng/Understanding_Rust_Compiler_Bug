{"sha": "b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjNzdiY2I1Nzk3NGNjYmI0OWY1NjUxZjliYTBlNDQzYjg2NGQxZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-01-31T18:11:32Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-01-31T18:11:32Z"}, "message": "re PR fortran/47463 ([OOP] ICE in gfc_add_component_ref)\n\n2011-01-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47463\n\t* resolve.c (resolve_typebound_subroutine): Bug fix for the case of\n\tan argument of a typebound assignment being a component.\n\n\n2011-01-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47463\n\t* gfortran.dg/typebound_assignment_1.f03: New.\n\nFrom-SVN: r169443", "tree": {"sha": "ec55bdf179264755e2534d13a90560ef97a954d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec55bdf179264755e2534d13a90560ef97a954d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0425d6f563d8b76eb4fcf2bf3ebb64cee85f6eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0425d6f563d8b76eb4fcf2bf3ebb64cee85f6eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0425d6f563d8b76eb4fcf2bf3ebb64cee85f6eca"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "e146d761004f78ba08bad0c38db50d3165521955", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "patch": "@@ -1,3 +1,9 @@\n+2011-01-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47463\n+\t* resolve.c (resolve_typebound_subroutine): Bug fix for the case of\n+\tan argument of a typebound assignment being a component.\n+\n 2011-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gfortranspec.c (add_arg_libgfortran) [HAVE_LD_STATIC_DYNAMIC] Use"}, {"sha": "2a0fc49571c3bc55ddfca8d24e9b118716d44f6c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "patch": "@@ -5877,14 +5877,12 @@ resolve_typebound_subroutine (gfc_code *code)\n \n   /* Deal with typebound operators for CLASS objects.  */\n   expr = code->expr1->value.compcall.base_object;\n-  if (expr && expr->symtree->n.sym->ts.type == BT_CLASS\n-\t&& code->expr1->value.compcall.name)\n+  if (expr && expr->ts.type == BT_CLASS && code->expr1->value.compcall.name)\n     {\n       /* Since the typebound operators are generic, we have to ensure\n \t that any delays in resolution are corrected and that the vtab\n \t is present.  */\n-      ts = expr->symtree->n.sym->ts;\n-      declared = ts.u.derived;\n+      declared = expr->ts.u.derived;\n       c = gfc_find_component (declared, \"_vptr\", true, true);\n       if (c->ts.u.derived == NULL)\n \tc->ts.u.derived = gfc_find_derived_vtab (declared);\n@@ -5895,6 +5893,7 @@ resolve_typebound_subroutine (gfc_code *code)\n       /* Use the generic name if it is there.  */\n       name = name ? name : code->expr1->value.function.esym->name;\n       code->expr1->symtree = expr->symtree;\n+      code->expr1->ref = gfc_copy_ref (expr->ref);\n       expr->symtree->n.sym->ts.u.derived = declared;\n       gfc_add_vptr_component (code->expr1);\n       gfc_add_component_ref (code->expr1, name);"}, {"sha": "0c17d83d189d5ea108d0618a66714efe3ff55a88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "patch": "@@ -1,3 +1,8 @@\n+2011-01-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47463\n+\t* gfortran.dg/typebound_assignment_1.f03: New.\n+\n 2011-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/47538"}, {"sha": "359572b0a51e56fc137c3b87edaed7f0a95b38dc", "filename": "gcc/testsuite/gfortran.dg/typebound_assignment_1.f03", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c77bcb57974ccbb49f5651f9ba0e443b864d1d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_1.f03?ref=b6c77bcb57974ccbb49f5651f9ba0e443b864d1d", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+!\n+! PR 47463: [OOP] ICE in gfc_add_component_ref\n+!\n+! Contributed by Rich Townsend <townsend@astro.wisc.edu>\n+\n+module hydro_state\n+  type :: state_t\n+   contains\n+     procedure :: assign\n+     generic   :: assignment(=) => assign\n+  end type state_t\n+contains\n+  subroutine assign (this, that)\n+    class(state_t), intent(inout) :: this\n+    class(state_t), intent(in)    :: that\n+  end subroutine assign\n+end module hydro_state\n+\n+module hydro_flow\n+  use hydro_state\n+  type :: flow_t\n+     class(state_t), allocatable :: st\n+  end type flow_t\n+contains\n+  subroutine init_comps (this, st)\n+    class(flow_t), intent(out) :: this\n+    class(state_t), intent(in) :: st\n+\n+    allocate(state_t :: this%st)\n+    this%st = st\n+  end subroutine init_comps\n+end module hydro_flow \n+\n+! { dg-final { cleanup-modules \"hydro_state hydro_flow\" } }"}]}