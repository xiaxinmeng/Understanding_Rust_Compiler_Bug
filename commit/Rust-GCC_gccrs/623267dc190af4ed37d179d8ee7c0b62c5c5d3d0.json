{"sha": "623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzMjY3ZGMxOTBhZjRlZDM3ZDE3OWQ4ZWU3YzBiNjJjNWM1ZDNkMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:51:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:51:43Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb (Is_Type_Ref): Check that type name is not\n\tparenthesized.\n\n2014-07-18  Vincent Celier  <celier@adacore.com>\n\n\t* s-osinte-vms.ads: Fix style errors.\n\n2014-07-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c (_POSIX_SOURCE): Define in order to get\n\tNAME_MAX and PATH_MAX.\n\n2014-07-18  Bob Duff  <duff@adacore.com>\n\n\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function,\n\tBuild_Record_Or_Elementary_Output_Procedure): For Input and\n\tOutput attributes, do not read/write the discriminants if they\n\thave default values; that will be done by Read/Write.\n\nFrom-SVN: r212798", "tree": {"sha": "359e3c9b15bfd003219f4e79902aa546b859328a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/359e3c9b15bfd003219f4e79902aa546b859328a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/comments", "author": null, "committer": null, "parents": [{"sha": "8ca597af97cb20a9a0b98358880bd3a488d49cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca597af97cb20a9a0b98358880bd3a488d49cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca597af97cb20a9a0b98358880bd3a488d49cc2"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "c02198c367e3fda79ae30492de59d139a28aa68b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "patch": "@@ -1,3 +1,24 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb (Is_Type_Ref): Check that type name is not\n+\tparenthesized.\n+\n+2014-07-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* s-osinte-vms.ads: Fix style errors.\n+\n+2014-07-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c (_POSIX_SOURCE): Define in order to get\n+\tNAME_MAX and PATH_MAX.\n+\n+2014-07-18  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function,\n+\tBuild_Record_Or_Elementary_Output_Procedure): For Input and\n+\tOutput attributes, do not read/write the discriminants if they\n+\thave default values; that will be done by Read/Write.\n+\n 2014-07-18  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb, exp_ch5.adb, sem_ch3.adb, layout.adb, sem_type.adb,"}, {"sha": "288b1bfe30b930ae610d27ae5b6009e833bd8b64", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1124,7 +1124,10 @@ package body Exp_Strm is\n \n       J := 1;\n \n-      if Has_Discriminants (B_Typ) then\n+      if Has_Discriminants (Typ)\n+        and then\n+          No (Discriminant_Default_Value (First_Discriminant (Typ)))\n+      then\n          Discr := First_Discriminant (B_Typ);\n \n          --  If the prefix subtype is constrained, then retrieve the first\n@@ -1250,10 +1253,15 @@ package body Exp_Strm is\n    begin\n       Stms := New_List;\n \n-      --  Note that of course there will be no discriminants for the\n-      --  elementary type case, so Has_Discriminants will be False.\n+      --  Note that of course there will be no discriminants for the elementary\n+      --  type case, so Has_Discriminants will be False. Note that the\n+      --  language rules do not require writing the discriminants in the\n+      --  defaulted case, because those are written by 'Write.\n \n-      if Has_Discriminants (Typ) then\n+      if Has_Discriminants (Typ)\n+        and then\n+          No (Discriminant_Default_Value (First_Discriminant (Typ)))\n+      then\n          Disc := First_Discriminant (Typ);\n \n          while Present (Disc) loop"}, {"sha": "2b16448aafca0882a45e08b724eec8ca9e2e6ace", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "patch": "@@ -80,9 +80,11 @@ pragma Style_Checks (\"M32766\");\n \n /* Feature macro definitions */\n \n+/* Define _POSIX_SOURCE to get NAME_MAX, PATH_MAX */\n+#define _POSIX_SOURCE\n+\n #if defined (__linux__) && !defined (_XOPEN_SOURCE)\n-/** For Linux _XOPEN_SOURCE must be defined, otherwise IOV_MAX is not defined\n- **/\n+/* For Linux, define _XOPEN_SOURCE to get IOV_MAX */\n #define _XOPEN_SOURCE 500\n #endif\n "}, {"sha": "2b2b135d0e9e3b06d120cc7a636a377eedfeb3bf", "filename": "gcc/ada/s-osinte-vms.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fs-osinte-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fs-osinte-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vms.ads?ref=623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -496,7 +496,7 @@ package System.OS_Interface is\n    type struct_sched_param is record\n       sched_priority : int;  --  scheduling priority\n    end record;\n-   for struct_sched_param'Size use 8*4;\n+   for struct_sched_param'Size use 8 * 4;\n    pragma Convention (C, struct_sched_param);\n \n    function pthread_setschedparam\n@@ -614,7 +614,7 @@ private\n       sequence : unsigned;\n       block    : pthreadLongAddr_t_ptr;\n    end record;\n-   for pthread_cond_t'Size use 8*32;\n+   for pthread_cond_t'Size use 8 * 32;\n    pragma Convention (C, pthread_cond_t);\n \n    type pthread_attr_t is record\n@@ -623,7 +623,7 @@ private\n       arg      : pthreadLongUint_t;\n       reserved : pthreadLongUint_array (0 .. 18);\n    end record;\n-   for pthread_attr_t'Size use 8*176;\n+   for pthread_attr_t'Size use 8 * 176;\n    pragma Convention (C, pthread_attr_t);\n \n    type pthread_mutex_t is record\n@@ -636,21 +636,21 @@ private\n       owner    : unsigned;\n       depth    : unsigned;\n    end record;\n-   for pthread_mutex_t'Size use 8*40;\n+   for pthread_mutex_t'Size use 8 * 40;\n    pragma Convention (C, pthread_mutex_t);\n \n    type pthread_mutexattr_t is record\n       valid    : long;\n       reserved : pthreadLongUint_array (0 .. 14);\n    end record;\n-   for pthread_mutexattr_t'Size use 8*128;\n+   for pthread_mutexattr_t'Size use 8 * 128;\n    pragma Convention (C, pthread_mutexattr_t);\n \n    type pthread_condattr_t is record\n       valid    : long;\n       reserved : pthreadLongUint_array (0 .. 12);\n    end record;\n-   for pthread_condattr_t'Size use 8*112;\n+   for pthread_condattr_t'Size use 8 * 112;\n    pragma Convention (C, pthread_condattr_t);\n \n    type pthread_key_t is new unsigned;"}, {"sha": "335e4f41bbf2f88ee4fdb870c9945d0d8508623a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623267dc190af4ed37d179d8ee7c0b62c5c5d3d0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=623267dc190af4ed37d179d8ee7c0b62c5c5d3d0", "patch": "@@ -6247,7 +6247,8 @@ package body Sem_Ch13 is\n       pragma Inline (Is_Type_Ref);\n       --  Returns if True if N is a reference to the type for the predicate in\n       --  the expression (i.e. if it is an identifier whose Chars field matches\n-      --  the Nam given in the call).\n+      --  the Nam given in the call). N must not be parenthesized, if the type\n+      --  name appears in parens, this routine will return False.\n \n       function Lo_Val (N : Node_Id) return Uint;\n       --  Given static expression or static range from a Static_Predicate list,\n@@ -6770,7 +6771,9 @@ package body Sem_Ch13 is\n \n       function Is_Type_Ref (N : Node_Id) return Boolean is\n       begin\n-         return Nkind (N) = N_Identifier and then Chars (N) = Nam;\n+         return Nkind (N) = N_Identifier\n+           and then Chars (N) = Nam\n+           and then Paren_Count (N) = 0;\n       end Is_Type_Ref;\n \n       ------------"}]}