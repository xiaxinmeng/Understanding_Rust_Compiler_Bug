{"sha": "e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0N2NhMmFjNDJiNWNjYTlhY2RkOWE0ZjM1ZGVjMDliZWJhMGEwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:18:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:18:03Z"}, "message": "(CHECK_FLOAT_VALUE): Define.\n\n(ASM_OUTPUT_FLOAT): Print the value in hex.\n\nFrom-SVN: r11758", "tree": {"sha": "e02e5e637ec4633d1d5facc109e4fcdaaa9e3161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e02e5e637ec4633d1d5facc109e4fcdaaa9e3161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08/comments", "author": null, "committer": null, "parents": [{"sha": "a874dd182c0ccbe5ca9109b014c2787598a292a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a874dd182c0ccbe5ca9109b014c2787598a292a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a874dd182c0ccbe5ca9109b014c2787598a292a6"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "f5c609954ef2265aacf04f2c117d17a076e34168", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "patch": "@@ -1714,6 +1714,11 @@ literal_section ()\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\\\n     sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n \n+/* Check a floating-point value for validity for a particular machine mode.  */\n+\n+#define CHECK_FLOAT_VALUE(MODE, D, OVERFLOW) \\\n+  ((OVERFLOW) = check_float_value (MODE, &D, OVERFLOW))\n+\n /* This is how to output an assembler line defining a `double' constant.  */\n \n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n@@ -1737,23 +1742,12 @@ literal_section ()\t\t\t\t\t\t\\\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n-#define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t;\t\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.s_floating %s\\n\", str);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n+#define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    long t;\t\t\t\t\t\t\t\\\n+    REAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n+    fprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\t\\\n+} while (0)\n   \n /* This is how to output an assembler line defining an `int' constant.  */\n "}]}