{"sha": "f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc3NTNmYmI3ZTFlYWU0OThiYzk5ZDllZGQ4YWM5MGM2ZGVlMDA5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:11:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:11:19Z"}, "message": "s-restri.ads, [...]: Mark this package as Preelaborate.\n\n2006-10-31  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-restri.ads, s-restri.adb: Mark this package as Preelaborate.\n\tRemove elaboration code, now done in the binder.\n\n\t* s-rident.ads: Make this unit Preelaborate.\n\t(No_Restrictions): New constant used to clean up code and follow\n\tpreelaborate constraints.\n\n\t* s-stalib.adb: \n\tAdd System.Restrictions dependence, referenced directly from the\n\tbinder generated file.\n\nFrom-SVN: r118315", "tree": {"sha": "761e22ca4c09d970747ae04c229bb423fbb51c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/761e22ca4c09d970747ae04c229bb423fbb51c29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/comments", "author": null, "committer": null, "parents": [{"sha": "39485a7b0c07e7a670663ee32d9eb1c6f576fc0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39485a7b0c07e7a670663ee32d9eb1c6f576fc0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39485a7b0c07e7a670663ee32d9eb1c6f576fc0f"}], "stats": {"total": 123, "additions": 26, "deletions": 97}, "files": [{"sha": "53dc0f3b701e3251fff3d4a33aa9d9348d076532", "filename": "gcc/ada/s-restri.adb", "status": "modified", "additions": 1, "deletions": 89, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-restri.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-restri.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.adb?ref=f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,92 +56,4 @@ package body System.Restrictions is\n              Run_Time_Restrictions.Violated (No_Tasking);\n    end Tasking_Allowed;\n \n---  Package elaboration code (acquire restrictions)\n-\n-begin\n-   Acquire_Restrictions : declare\n-\n-      subtype Big_String is String (Positive);\n-      type Big_String_Ptr is access all Big_String;\n-\n-      RString : Big_String_Ptr;\n-      pragma Import (C, RString, \"__gl_restrictions\");\n-\n-      P : Natural := 1;\n-      --  Pointer to scan string\n-\n-      C : Character;\n-      --  Next character from string\n-\n-      function Get_Char return Character;\n-      --  Get next character from string\n-\n-      function Get_Natural return Natural;\n-      --  Scan out natural value known to be in range, updating P past it\n-\n-      --------------\n-      -- Get_Char --\n-      --------------\n-\n-      function Get_Char return Character is\n-      begin\n-         P := P + 1;\n-         return RString (P - 1);\n-      end Get_Char;\n-\n-      -----------------\n-      -- Get_Natural --\n-      -----------------\n-\n-      function Get_Natural return Natural is\n-         N : Natural := 0;\n-\n-      begin\n-         while RString (P) in '0' .. '9' loop\n-            N := N * 10 + (Character'Pos (Get_Char) - Character'Pos ('0'));\n-         end loop;\n-\n-         return N;\n-      end Get_Natural;\n-\n-   --  Start of processing for Acquire_Restrictions\n-\n-   begin\n-      --  Acquire data corresponding to first R line\n-\n-      for R in All_Boolean_Restrictions loop\n-         C := Get_Char;\n-\n-         if C = 'v' then\n-            Run_Time_Restrictions.Violated (R) := True;\n-\n-         elsif C = 'r' then\n-            Run_Time_Restrictions.Set (R) := True;\n-         end if;\n-      end loop;\n-\n-      --  Acquire data corresponding to second R line\n-\n-      for RP in All_Parameter_Restrictions loop\n-\n-         --  Acquire restrictions pragma information\n-\n-         if Get_Char = 'r' then\n-            Run_Time_Restrictions.Set (RP) := True;\n-            Run_Time_Restrictions.Value (RP) := Get_Natural;\n-         end if;\n-\n-         --  Acquire restrictions violations information\n-\n-         if Get_Char = 'v' then\n-            Run_Time_Restrictions.Violated (RP) := True;\n-            Run_Time_Restrictions.Count (RP) := Get_Natural;\n-\n-            if RString (P) = '+' then\n-               Run_Time_Restrictions.Unknown (RP) := True;\n-               P := P + 1;\n-            end if;\n-         end if;\n-      end loop;\n-   end Acquire_Restrictions;\n end System.Restrictions;"}, {"sha": "d56a19f53642ce49064f1ab61197b1050987c0e7", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,10 +43,15 @@\n with System.Rident;\n \n package System.Restrictions is\n+   pragma Preelaborate;\n    pragma Discard_Names;\n    package Rident is new System.Rident;\n \n    Run_Time_Restrictions : Rident.Restrictions_Info;\n+   --  Restrictions as set by the user, or detected by the binder.\n+   --  Note that a restriction which is both Set and Violated at run-time means\n+   --  that the violation was detected as part of the Ada run-time and not\n+   --  as part of user code.\n \n    ------------------\n    -- Subprograms --\n@@ -61,7 +66,7 @@ package System.Restrictions is\n    function Tasking_Allowed return Boolean;\n    pragma Inline (Tasking_Allowed);\n    --  Tests to see if tasking operations are allowed by the current\n-   --  restrictions settings. For taskikng to be allowed, No_Tasking\n+   --  restrictions settings. For tasking to be allowed, No_Tasking\n    --  must be False, and Max_Tasks must not be set to zero.\n \n end System.Restrictions;"}, {"sha": "b873b18df77f9d588c3bc815f1f6140fc06f17c6", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,7 @@\n \n generic\n package System.Rident is\n+   pragma Preelaborate;\n \n    --  The following enumeration type defines the set of restriction\n    --  identifiers that are implemented in GNAT.\n@@ -244,7 +245,7 @@ package System.Rident is\n    type Parameter_Flags    is array (All_Parameter_Restrictions) of Boolean;\n \n    type Restrictions_Info is record\n-      Set : Restriction_Flags := (others => False);\n+      Set : Restriction_Flags;\n       --  An entry is True in the Set array if a restrictions pragma has\n       --  been encountered for the given restriction. If the value is\n       --  True for a parameter restriction, then the corresponding entry\n@@ -258,20 +259,20 @@ package System.Rident is\n       --  specified by any such restrictions pragma. Note that a restrictions\n       --  pragma specifying a value greater than Int'Last is simply ignored.\n \n-      Violated : Restriction_Flags := (others => False);\n+      Violated : Restriction_Flags;\n       --  An entry is True in the violations array if the compiler has\n       --  detected a violation of the restriction. For a parameter\n       --  restriction, the Count and Unknown arrays have additional\n       --  information.\n \n-      Count : Restriction_Values := (others => 0);\n+      Count : Restriction_Values;\n       --  If an entry for a parameter restriction is True in Violated,\n       --  the corresponding entry in the Count array may record additional\n       --  information. If the actual minimum count is known (by taking\n       --  maximums, or sums, depending on the restriction), it will be\n       --  recorded in this array. If not, then the value will remain zero.\n \n-      Unknown : Parameter_Flags := (others => False);\n+      Unknown : Parameter_Flags;\n       --  If an entry for a parameter restriction is True in Violated,\n       --  the corresponding entry in the Unknown array may record additional\n       --  information. If the actual count is not known by the compiler (but\n@@ -285,6 +286,14 @@ package System.Rident is\n       --  that the actual violation count is at least 3 but might be higher.\n    end record;\n \n+   No_Restrictions : constant Restrictions_Info :=\n+     (Set      => (others => False),\n+      Value    => (others => 0),\n+      Violated => (others => False),\n+      Count    => (others => 0),\n+      Unknown  => (others => False));\n+   --  Used to initialize Restrictions_Info variables\n+\n    ----------------------------------\n    -- Profile Definitions and Data --\n    ----------------------------------"}, {"sha": "1fab6973f3ef3a719b0bfd9254d180e5a24e00e7", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,6 +56,9 @@ with System.Memory;\n --  must always be present in a build, even if no unit has a direct with\n --  of this unit.\n \n+with System.Restrictions;\n+--  Referenced directly from the binder generated file.\n+\n pragma Warnings (On);\n \n package body System.Standard_Library is"}]}