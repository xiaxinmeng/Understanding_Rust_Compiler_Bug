{"sha": "666a21a2993b36e8c10f2d0759cd7f68811663fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY2YTIxYTI5OTNiMzZlOGMxMGYyZDA3NTljZDdmNjg4MTE2NjNmYg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-30T19:42:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-30T19:42:51Z"}, "message": "options.texi (NegativeAlias): Document.\n\n\t* doc/options.texi (NegativeAlias): Document.\n\t(Alias): Mention NegativeAlias.\n\t* opt-functions.awk: Handle NegativeAlias.\n\t* optc-gen.awk: Disallow NegativeAlias with multiple Alias\n\targuments.\n\t* opts-common.c (decode_cmdline_option): Handle CL_NEGATIVE_ALIAS.\n\t* opts.h (CL_NEGATIVE_ALIAS): Define.\n\t* config/rs6000/rs6000.c (rs6000_parse_yes_no_option): Remove.\n\t(rs6000_handle_option): Don't handle OPT_mvrsave_, OPT_misel_ and\n\tOPT_mspe_.\n\t* config/rs6000/rs6000.opt (mvrsave=, misel=, mspe=): Replace with\n\tAlias entries.\n\t* config/rs6000/t-spe (MULTILIB_OPTIONS, MULTILIB_EXCEPTIONS): Use\n\tmno-spe and mno-isel instead of mspe=no and -misel=no.\n\nFrom-SVN: r171745", "tree": {"sha": "8d690cb4ef7d285476b7a0854fa4a67ca23779ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d690cb4ef7d285476b7a0854fa4a67ca23779ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/666a21a2993b36e8c10f2d0759cd7f68811663fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666a21a2993b36e8c10f2d0759cd7f68811663fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/666a21a2993b36e8c10f2d0759cd7f68811663fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666a21a2993b36e8c10f2d0759cd7f68811663fb/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fa4e351537fe6bf253e13e3c3e7b122cbe9468c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa4e351537fe6bf253e13e3c3e7b122cbe9468c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa4e351537fe6bf253e13e3c3e7b122cbe9468c"}], "stats": {"total": 154, "additions": 82, "deletions": 72}, "files": [{"sha": "7c28457f7f863f80768a9776798614038b238957", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -1,3 +1,20 @@\n+2011-03-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/options.texi (NegativeAlias): Document.\n+\t(Alias): Mention NegativeAlias.\n+\t* opt-functions.awk: Handle NegativeAlias.\n+\t* optc-gen.awk: Disallow NegativeAlias with multiple Alias\n+\targuments.\n+\t* opts-common.c (decode_cmdline_option): Handle CL_NEGATIVE_ALIAS.\n+\t* opts.h (CL_NEGATIVE_ALIAS): Define.\n+\t* config/rs6000/rs6000.c (rs6000_parse_yes_no_option): Remove.\n+\t(rs6000_handle_option): Don't handle OPT_mvrsave_, OPT_misel_ and\n+\tOPT_mspe_.\n+\t* config/rs6000/rs6000.opt (mvrsave=, misel=, mspe=): Replace with\n+\tAlias entries.\n+\t* config/rs6000/t-spe (MULTILIB_OPTIONS, MULTILIB_EXCEPTIONS): Use\n+\tmno-spe and mno-isel instead of mspe=no and -misel=no.\n+\n 2011-03-29  Mark Wielaard  <mjw@redhat.com>\n \n \t* common.opt (fdebug-types-section): New flag."}, {"sha": "47467c5ec69d7e89da13c3ffbed04f0da7601dd8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -1082,7 +1082,6 @@ static bool rs6000_handle_option (struct gcc_options *, struct gcc_options *,\n \t\t\t\t  const struct cl_decoded_option *,\n \t\t\t\t  location_t);\n static int rs6000_loop_align_max_skip (rtx);\n-static void rs6000_parse_yes_no_option (const char *, const char *, int *);\n static int first_altivec_reg_to_save (void);\n static unsigned int compute_vrsave_mask (void);\n static void compute_save_world_info (rs6000_stack_t *info_ptr);\n@@ -3820,24 +3819,6 @@ rs6000_preferred_simd_mode (enum machine_mode mode)\n   return word_mode;\n }\n \n-/* Handle generic options of the form -mfoo=yes/no.\n-   NAME is the option name.\n-   VALUE is the option value.\n-   FLAG is the pointer to the flag where to store a 1 or 0, depending on\n-   whether the option value is 'yes' or 'no' respectively.  */\n-static void\n-rs6000_parse_yes_no_option (const char *name, const char *value, int *flag)\n-{\n-  if (value == 0)\n-    return;\n-  else if (!strcmp (value, \"yes\"))\n-    *flag = 1;\n-  else if (!strcmp (value, \"no\"))\n-    *flag = 0;\n-  else\n-    error (\"unknown -m%s= option specified: '%s'\", name, value);\n-}\n-\n /* Implement TARGET_OPTION_INIT_STRUCT.  */\n \n static void\n@@ -4337,31 +4318,11 @@ rs6000_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n       TARGET_ALTIVEC_VRSAVE = value;\n       break;\n \n-    case OPT_mvrsave_:\n-      rs6000_explicit_options.vrsave = true;\n-      rs6000_parse_yes_no_option (\"vrsave\", arg, &(TARGET_ALTIVEC_VRSAVE));\n-      break;\n-\n-    case OPT_misel_:\n-      target_flags_explicit |= MASK_ISEL;\n-      isel = 0;\n-      rs6000_parse_yes_no_option (\"isel\", arg, &isel);\n-      if (isel)\n-\ttarget_flags |= MASK_ISEL;\n-      else\n-\ttarget_flags &= ~MASK_ISEL;\n-      break;\n-\n     case OPT_mspe:\n       rs6000_explicit_options.spe = true;\n       rs6000_spe = value;\n       break;\n \n-    case OPT_mspe_:\n-      rs6000_explicit_options.spe = true;\n-      rs6000_parse_yes_no_option (\"spe\", arg, &(rs6000_spe));\n-      break;\n-\n     case OPT_mdebug_:\n       p = ASTRDUP (arg);\n       rs6000_debug = 0;"}, {"sha": "d95f40a14f4df04ef26c23b7d35cb89a8feffec0", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -1,6 +1,6 @@\n ; Options for the rs6000 port of the compiler\n ;\n-; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software\n+; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n ; Foundation, Inc.\n ; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n ;\n@@ -353,9 +353,13 @@ mvrsave\n Target Report Var(TARGET_ALTIVEC_VRSAVE) Save\n Generate VRSAVE instructions when generating AltiVec code\n \n-mvrsave=\n-Target RejectNegative Joined\n--mvrsave=yes/no\tDeprecated option.  Use -mvrsave/-mno-vrsave instead\n+mvrsave=no\n+Target RejectNegative Alias(mvrsave) NegativeAlias\n+Deprecated option.  Use -mno-vrsave instead\n+\n+mvrsave=yes\n+Target RejectNegative Alias(mvrsave)\n+Deprecated option.  Use -mvrsave instead\n \n mblock-move-inline-limit=\n Target Report Var(rs6000_block_move_inline_limit) Init(0) RejectNegative Joined UInteger Save\n@@ -365,9 +369,13 @@ misel\n Target Report Mask(ISEL) Save\n Generate isel instructions\n \n-misel=\n-Target RejectNegative Joined\n--misel=yes/no\tDeprecated option.  Use -misel/-mno-isel instead\n+misel=no\n+Target RejectNegative Alias(misel) NegativeAlias\n+Deprecated option.  Use -mno-isel instead\n+\n+misel=yes\n+Target RejectNegative Alias(misel)\n+Deprecated option.  Use -misel instead\n \n mspe\n Target\n@@ -377,9 +385,13 @@ mpaired\n Target Var(rs6000_paired_float) Save\n Generate PPC750CL paired-single instructions\n \n-mspe=\n-Target RejectNegative Joined\n--mspe=yes/no\tDeprecated option.  Use -mspe/-mno-spe instead\n+mspe=no\n+Target RejectNegative Alias(mspe) NegativeAlias\n+Deprecated option.  Use -mno-spe instead\n+\n+mspe=yes\n+Target RejectNegative Alias(mspe)\n+Deprecated option.  Use -mspe instead\n \n mdebug=\n Target RejectNegative Joined"}, {"sha": "480553c50edb43576c37fca184d1cf0eacff4159", "filename": "gcc/config/rs6000/t-spe", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Ft-spe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fconfig%2Frs6000%2Ft-spe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-spe?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -1,6 +1,6 @@\n # Multilibs for e500\n #\n-# Copyright (C) 2003 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -36,51 +36,51 @@ INSTALL_LIBGCC = install-multilib\n #\t-mcpu=7400 -maltivec -mabi=altivec\n #\t-mcpu=7400 -msoft-float\n #\t-msoft-float\n-#\t-mspe=no -mabi=no-spe -misel=no\n+#\t-mno-spe -mabi=no-spe -mno-isel\n # so we'll need to create exceptions later below.\n \n MULTILIB_OPTIONS\t= mcpu=7400 \\\n \t\t\t  maltivec \\\n \t\t\t  mabi=altivec \\\n \t\t\t  msoft-float \\\n-\t\t\t  mspe=no \\\n+\t\t\t  mno-spe \\\n \t\t\t  mabi=no-spe \\\n-\t\t\t  misel=no \\\n+\t\t\t  mno-isel \\\n \t\t\t  mlittle\n \n MULTILIB_DIRNAMES\t= mpc7400 altivec abi-altivec \\\n \t\t\t  nof no-spe no-abi-spe no-isel le\n \n-MULTILIB_EXCEPTIONS\t= maltivec mabi=altivec mspe=no mabi=no-spe misel=no \\\n+MULTILIB_EXCEPTIONS\t= maltivec mabi=altivec mno-spe mabi=no-spe mno-isel \\\n \t\t\t  maltivec/mabi=altivec \\\n \t\t\t  mcpu=7400/maltivec \\\n \t\t\t  mcpu=7400/mabi=altivec \\\n-\t\t\t  *mcpu=7400/*mspe=no* \\\n+\t\t\t  *mcpu=7400/*mno-spe* \\\n \t\t\t  *mcpu=7400/*mabi=no-spe* \\\n-\t\t\t  *mcpu=7400/*misel=no* \\\n+\t\t\t  *mcpu=7400/*mno-isel* \\\n \t\t\t  *maltivec/*msoft-float* \\\n-\t\t\t  *maltivec/*mspe=no* \\\n+\t\t\t  *maltivec/*mno-spe* \\\n \t\t\t  *maltivec/*mabi=no-spe* \\\n-\t\t\t  *maltivec/*misel=no* \\\n+\t\t\t  *maltivec/*mno-isel* \\\n \t\t\t  *mabi=altivec/*msoft-float* \\\n-\t\t\t  *mabi=altivec/*mspe=no* \\\n+\t\t\t  *mabi=altivec/*mno-spe* \\\n \t\t\t  *mabi=altivec/*mabi=no-spe* \\\n-\t\t\t  *mabi=altivec/*misel=no* \\\n-\t\t\t  *msoft-float/*mspe=no* \\\n+\t\t\t  *mabi=altivec/*mno-isel* \\\n+\t\t\t  *msoft-float/*mno-spe* \\\n \t\t\t  *msoft-float/*mabi=no-spe* \\\n-\t\t\t  *msoft-float/*misel=no* \\\n-\t\t\t  mspe=no/mabi=no-spe \\\n-\t\t\t  mspe=no/misel=no \\\n-\t\t\t  mabi=no-spe/misel=no \\\n-\t\t\t  misel=no/mlittle \\\n-\t\t\t  mabi=no-spe/misel=no/mlittle \\\n-\t\t\t  mspe=no/mlittle \\\n+\t\t\t  *msoft-float/*mno-isel* \\\n+\t\t\t  mno-spe/mabi=no-spe \\\n+\t\t\t  mno-spe/mno-isel \\\n+\t\t\t  mabi=no-spe/mno-isel \\\n+\t\t\t  mno-isel/mlittle \\\n+\t\t\t  mabi=no-spe/mno-isel/mlittle \\\n+\t\t\t  mno-spe/mlittle \\\n \t\t\t  mabi=spe/mlittle \\\n \t\t\t  mcpu=7400/mabi=altivec/mlittle \\\n \t\t\t  mcpu=7400/maltivec/mlittle \\\n \t\t\t  mabi=no-spe/mlittle \\\n-\t\t\t  mspe=no/misel=no/mlittle \\\n-\t\t\t  mspe=no/mabi=no-spe/mlittle \\\n+\t\t\t  mno-spe/mno-isel/mlittle \\\n+\t\t\t  mno-spe/mabi=no-spe/mlittle \\\n \t\t\t  mabi=altivec/mlittle \\\n \t\t\t  maltivec/mlittle \\\n \t\t\t  maltivec/mabi=altivec/mlittle"}, {"sha": "608afa2b1b92c3885a0c22fecc0864723e75d84e", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -364,7 +364,8 @@ for later processing.\n @item Alias(@var{opt})\n @itemx Alias(@var{opt}, @var{arg})\n @itemx Alias(@var{opt}, @var{posarg}, @var{negarg})\n-The option is an alias for @option{-@var{opt}}.  In the first form,\n+The option is an alias for @option{-@var{opt}} (or the negative form\n+of that option, depending on @code{NegativeAlias}).  In the first form,\n any argument passed to the alias is considered to be passed to\n @option{-@var{opt}}, and @option{-@var{opt}} is considered to be\n negated if the alias is used in negated form.  In the second form, the\n@@ -387,6 +388,13 @@ not need to handle it and no @samp{OPT_} enumeration value is defined\n for it; only the canonical form of the option will be seen in those\n places.\n \n+@item NegativeAlias\n+For an option marked with @code{Alias(@var{opt})}, the option is\n+considered to be an alias for the positive form of @option{-@var{opt}}\n+if negated and for the negative form of @option{-@var{opt}} if not\n+negated.  @code{NegativeAlias} may not be used with the forms of\n+@code{Alias} taking more than one argument.\n+\n @item Ignore\n This option is ignored apart from printing any warning specified using\n @code{Warn}.  The option will not be seen by specs and no @samp{OPT_}"}, {"sha": "f5f5cd4656effe82a453621ba98caa7fb2e7cdaa", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -1,4 +1,4 @@\n-#  Copyright (C) 2003, 2004, 2007, 2008, 2009, 2010\n+#  Copyright (C) 2003, 2004, 2007, 2008, 2009, 2010, 2011\n #  Free Software Foundation, Inc.\n #  Contributed by Kelley Cook, June 2004.\n #  Original code from Neil Booth, May 2003.\n@@ -90,6 +90,7 @@ function switch_flags (flags)\n \t  test_flag(\"RejectDriver\", flags, \" | CL_REJECT_DRIVER\") \\\n \t  test_flag(\"NoDriverArg\", flags, \" | CL_NO_DRIVER_ARG\") \\\n \t  test_flag(\"SeparateAlias\", flags, \" | CL_SEPARATE_ALIAS\") \\\n+\t  test_flag(\"NegativeAlias\", flags, \" | CL_NEGATIVE_ALIAS\") \\\n \t  test_flag(\"Save\", flags, \" | CL_SAVE\") \\\n \t  test_flag(\"Joined\", flags, \" | CL_JOINED\") \\\n \t  test_flag(\"JoinedOrMissing\", flags, \" | CL_JOINED | CL_MISSING_OK\") \\"}, {"sha": "24def3562186d500659869ef8c08e01fbda1561e", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -362,6 +362,11 @@ for (i = 0; i < n_opts; i++) {\n \t\t\t\tprint \"#error Alias with single argument \" \\\n \t\t\t\t\t\"allowing negative form\"\n \t\t}\n+\t\tif (alias_posarg != \"\" \\\n+\t\t    && flag_set_p(\"NegativeAlias\", flags[i])) {\n+\t\t\tprint \"#error Alias with multiple arguments \" \\\n+\t\t\t\t\"used with NegativeAlias\"\n+\t\t}\n \n \t\talias_opt = opt_enum(alias_opt)\n \t\tif (alias_posarg == \"\")"}, {"sha": "a88aed032d961d4661a9fc1b8a0b748f46ea832b", "filename": "gcc/opts-common.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -507,6 +507,7 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t    {\n \t      gcc_assert (option->alias_arg != NULL);\n \t      gcc_assert (arg == NULL);\n+\t      gcc_assert (!(option->flags & CL_NEGATIVE_ALIAS));\n \t      if (value)\n \t\targ = option->alias_arg;\n \t      else\n@@ -517,9 +518,13 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t    {\n \t      gcc_assert (value == 1);\n \t      gcc_assert (arg == NULL);\n+\t      gcc_assert (!(option->flags & CL_NEGATIVE_ALIAS));\n \t      arg = option->alias_arg;\n \t    }\n \n+\t  if (option->flags & CL_NEGATIVE_ALIAS)\n+\t    value = !value;\n+\n \t  opt_index = new_opt_index;\n \t  option = new_option;\n "}, {"sha": "491177898c69238d19bb8776073c707e450d633c", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666a21a2993b36e8c10f2d0759cd7f68811663fb/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=666a21a2993b36e8c10f2d0759cd7f68811663fb", "patch": "@@ -115,6 +115,7 @@ extern const unsigned int cl_lang_count;\n #define CL_MISSING_OK\t\t(1U << 28) /* Missing argument OK (joined).  */\n #define CL_UINTEGER\t\t(1U << 29) /* Argument is an integer >=0.  */\n #define CL_UNDOCUMENTED\t\t(1U << 30) /* Do not output with --help.  */\n+#define CL_NEGATIVE_ALIAS\t(1U << 31) /* Alias to negative form of option.  */\n \n /* Flags for an enumerated option argument.  */\n #define CL_ENUM_CANONICAL\t(1 << 0) /* Canonical for this value.  */"}]}