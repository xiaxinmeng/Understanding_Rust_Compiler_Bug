{"sha": "e97ed334241f4bd09ce3b8970366b58ab1192ecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3ZWQzMzQyNDFmNGJkMDljZTNiODk3MDM2NmI1OGFiMTE5MmVjYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-21T17:39:30Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-21T17:39:30Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1037", "tree": {"sha": "71cc1e3b0be013e30bbd89d063b1837b1845ac55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71cc1e3b0be013e30bbd89d063b1837b1845ac55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97ed334241f4bd09ce3b8970366b58ab1192ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97ed334241f4bd09ce3b8970366b58ab1192ecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97ed334241f4bd09ce3b8970366b58ab1192ecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97ed334241f4bd09ce3b8970366b58ab1192ecb/comments", "author": null, "committer": null, "parents": [{"sha": "7160dd0c8210b565631b5e99aef0c2e04a7fec55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7160dd0c8210b565631b5e99aef0c2e04a7fec55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7160dd0c8210b565631b5e99aef0c2e04a7fec55"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "f742ebfe8e8a4a9339a56441f70b56bdfeb1516b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97ed334241f4bd09ce3b8970366b58ab1192ecb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97ed334241f4bd09ce3b8970366b58ab1192ecb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e97ed334241f4bd09ce3b8970366b58ab1192ecb", "patch": "@@ -360,7 +360,7 @@ STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n  insn-attr.h insn-attrtab.c \\\n  stamp-flags stamp-config stamp-codes \\\n  stamp-output stamp-recog stamp-emit stamp-extract stamp-peep \\\n- stamp-attr stamp-attrtab \\\n+ stamp-attr stamp-attrtab stamp-proto \\\n  genemit genoutput genrecog genextract genflags gencodes genconfig genpeep \\\n  genattrtab genattr \\\n  $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross cccp \\\n@@ -412,7 +412,7 @@ Makefile: $(srcdir)/Makefile.in $(srcdir)/configure $(srcdir)/version.c \\\n \n all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n-all.cross: native gcc-cross\n+all.cross: native gcc-cross cross-test\n # This is what must be made before installing GCC and converting libraries.\n start.encap: native gcc $(LIBGCC1_TARGET)\n # Use this to make a GCC that will be used only to recompile GCC.\n@@ -441,6 +441,13 @@ config.status:\n \t  true; \\\n \tfi\n \n+# Verify that it works to compile and link cross-test.\n+# If it does, then there are sufficient replacements for libgcc1.a.\n+cross-test: cross-test.o native gcc-cross\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) cross-test.o -o $@\n+cross-test.o: cross-test.c native gcc-cross\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -c $(srcdir)/cross-test.c\n+\n compilations: ${OBJS}\n \n gcc: gcc.o version.o $(LIBDEPS)\n@@ -1221,7 +1228,7 @@ clean: mostlyclean\n # Using unprotoize.c is not quite right in the first place, \n # but what better way is there?\n \t-rm -f libgcc.a libgcc1.a libgcc2.a libgcc2.ready unprotoize.c\n-\t-rm *.dvi\n+\t-rm -f *.dvi\n \n # Delete all files that users would normally create\n # while building and installing GCC."}]}