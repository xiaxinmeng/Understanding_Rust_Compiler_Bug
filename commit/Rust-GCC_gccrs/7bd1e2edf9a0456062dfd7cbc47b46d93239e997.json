{"sha": "7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkMWUyZWRmOWEwNDU2MDYyZGZkN2NiYzQ3YjQ2ZDkzMjM5ZTk5Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-12-16T02:57:22Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-12-16T02:57:22Z"}, "message": "PR bootstrap/78817 - stage2 bootstrap failure in vec.h:1613:5: error: argument 1 null where non-null expected after r243661\n\ngcc/ChangeLog:\n\t* vec.h (vec<T, va_heap, vl_ptr>::safe_grow_cleared): Assert\n\ta pointer is non-null.\n\nFrom-SVN: r243736", "tree": {"sha": "b3a49e7547516ee5a15da0050d9f6df9b939377b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3a49e7547516ee5a15da0050d9f6df9b939377b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd1e2edf9a0456062dfd7cbc47b46d93239e997/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ae30b147b8e3c11058d124616301b3a3e27fdd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae30b147b8e3c11058d124616301b3a3e27fdd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae30b147b8e3c11058d124616301b3a3e27fdd2"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "3ebbc1cd13e910b4593d5c12458940cb55290a57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd1e2edf9a0456062dfd7cbc47b46d93239e997/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd1e2edf9a0456062dfd7cbc47b46d93239e997/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "patch": "@@ -1,3 +1,9 @@\n+2016-12-15  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/78817\n+\t* vec.h (vec<T, va_heap, vl_ptr>::safe_grow_cleared): Assert\n+\ta pointer is non-null.\n+\n 2016-12-15  Andrew Senkevich  <andrew.senkevich@intel.com>\n \n \t* config/i386/avx512bwintrin.h: Add new k-mask intrinsics."}, {"sha": "3877f2d8ffef416172082065c676c735a588f430", "filename": "gcc/vec.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd1e2edf9a0456062dfd7cbc47b46d93239e997/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd1e2edf9a0456062dfd7cbc47b46d93239e997/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=7bd1e2edf9a0456062dfd7cbc47b46d93239e997", "patch": "@@ -1607,10 +1607,16 @@ inline void\n vec<T, va_heap, vl_ptr>::safe_grow_cleared (unsigned len MEM_STAT_DECL)\n {\n   unsigned oldlen = length ();\n-  size_t sz = sizeof (T) * (len - oldlen);\n-  safe_grow (len PASS_MEM_STAT);\n-  if (sz != 0)\n-    memset (&(address ()[oldlen]), 0, sz);\n+  gcc_checking_assert (oldlen <= len);\n+\n+  if (size_t sz = sizeof (T) * (len - oldlen))\n+    {\n+      safe_grow (len PASS_MEM_STAT);\n+\n+      T *p = address ();\n+      gcc_assert (p != NULL);\n+      memset (p + oldlen, 0, sz);\n+    }\n }\n \n "}]}