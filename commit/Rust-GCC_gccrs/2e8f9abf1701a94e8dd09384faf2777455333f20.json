{"sha": "2e8f9abf1701a94e8dd09384faf2777455333f20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU4ZjlhYmYxNzAxYTk0ZThkZDA5Mzg0ZmFmMjc3NzQ1NTMzM2YyMA==", "commit": {"author": {"name": "David Mosberger", "email": "davidm@hpl.hp.com", "date": "1999-06-14T13:10:29Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-06-14T13:10:29Z"}, "message": "Patch from David Mosberger to fix 32 host cross 64 target bug.\n\n        * combine.c (simplify_logical, case AND): Only call\n        simplify_and_const_int if the mode is no wider than HOST_WIDE_INT\n\tor the constant is positive.\n\nFrom-SVN: r27517", "tree": {"sha": "3539a1dcbd89df0f0c705a28344d912747c18faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3539a1dcbd89df0f0c705a28344d912747c18faf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e8f9abf1701a94e8dd09384faf2777455333f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8f9abf1701a94e8dd09384faf2777455333f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8f9abf1701a94e8dd09384faf2777455333f20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8f9abf1701a94e8dd09384faf2777455333f20/comments", "author": null, "committer": null, "parents": [{"sha": "69c9f0fbbc6e5f16d86473b0cc68b139ca49c08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c9f0fbbc6e5f16d86473b0cc68b139ca49c08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c9f0fbbc6e5f16d86473b0cc68b139ca49c08b"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "2f6b1a45873f0d0b45b6820889a9434f13f6fb76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8f9abf1701a94e8dd09384faf2777455333f20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8f9abf1701a94e8dd09384faf2777455333f20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e8f9abf1701a94e8dd09384faf2777455333f20", "patch": "@@ -1,3 +1,9 @@\n+Mon Jun 14 12:57:38 1999  David Mosberger  <davidm@hpl.hp.com>\n+\n+        * combine.c (simplify_logical, case AND): Only call\n+        simplify_and_const_int if the mode is no wider than HOST_WIDE_INT\n+\tor the constant is positive.\n+\n Mon Jun 14 11:43:41 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* configure.in: Fix typo in rs6000-ibm-aix4 case."}, {"sha": "60e0ef27efcbfb701259dd574294491ce70a4b65", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8f9abf1701a94e8dd09384faf2777455333f20/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8f9abf1701a94e8dd09384faf2777455333f20/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2e8f9abf1701a94e8dd09384faf2777455333f20", "patch": "@@ -4902,7 +4902,12 @@ simplify_logical (x, last)\n \t  && ! side_effects_p (op1))\n \tx = gen_binary (AND, mode, XEXP (XEXP (op0, 0), 0), op1);\n \n-      if (GET_CODE (op1) == CONST_INT)\n+      /* We can call simplify_and_const_int only if we don't lose\n+\t any (sign) bits when converting INTVAL (op1) to\n+\t \"unsigned HOST_WIDE_INT\".  */\n+      if (GET_CODE (op1) == CONST_INT\n+\t  && (GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n+\t      || INTVAL (op1) > 0))\n \t{\n \t  x = simplify_and_const_int (x, mode, op0, INTVAL (op1));\n "}]}