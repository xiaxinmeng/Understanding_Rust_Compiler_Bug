{"sha": "1be54209b30e4ace3ec771f2dfab687d451fbbf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlNTQyMDliMzBlNGFjZTNlYzc3MWYyZGZhYjY4N2Q0NTFmYmJmOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-03T10:45:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-03T10:45:38Z"}, "message": "tree-ssa-sccvn.c (ao_ref_init_from_vn_reference): Get original full reference tree and record in ref->ref.\n\n2019-06-03  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (ao_ref_init_from_vn_reference): Get original\n\tfull reference tree and record in ref->ref.\n\t(vn_reference_lookup_3): Pass in original ref to\n\tao_ref_init_from_vn_reference.\n\t(vn_reference_lookup): Likewise.\n\t* tree-ssa-sccvn.h (ao_ref_init_from_vn_reference): Adjust prototype.\n\t* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p):\n\tHandle non-decl bases in the original reference.\n\n\t* gcc.dg/tree-ssa/alias-access-path-1.c: Scan fre1.\n\nFrom-SVN: r271860", "tree": {"sha": "e68d721fcca49cd4a4f23f6dd97dfa936bc41916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e68d721fcca49cd4a4f23f6dd97dfa936bc41916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1be54209b30e4ace3ec771f2dfab687d451fbbf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be54209b30e4ace3ec771f2dfab687d451fbbf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1be54209b30e4ace3ec771f2dfab687d451fbbf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be54209b30e4ace3ec771f2dfab687d451fbbf8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c76ebd05b41db96913d818b28668f8a530340e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c76ebd05b41db96913d818b28668f8a530340e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c76ebd05b41db96913d818b28668f8a530340e4"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "c68c2d9a625c27349de692bc84dc36cf4daa213d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -1,3 +1,14 @@\n+2019-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (ao_ref_init_from_vn_reference): Get original\n+\tfull reference tree and record in ref->ref.\n+\t(vn_reference_lookup_3): Pass in original ref to\n+\tao_ref_init_from_vn_reference.\n+\t(vn_reference_lookup): Likewise.\n+\t* tree-ssa-sccvn.h (ao_ref_init_from_vn_reference): Adjust prototype.\n+\t* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p):\n+\tHandle non-decl bases in the original reference.\n+\n 2019-06-03  Martin Liska  <mliska@suse.cz>\n \n \t* fold-const.c (operand_equal_p): Fix typo as compare_tree_int"}, {"sha": "0621f68cb3898fc61aa26d1a86431b9d9c61da26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -1,3 +1,7 @@\n+2019-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/alias-access-path-1.c: Scan fre1.\n+\n 2019-06-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90716"}, {"sha": "63722a5d0fd2a7aec3f4a62e9b96cf308e858d5b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-access-path-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-1.c?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-fre3 -fno-tree-sra\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1 -fno-tree-sra\" } */\n+\n struct foo\n {\n   int val;\n@@ -18,4 +19,4 @@ test ()\n   return barptr->val2;\n }\n \n-/* { dg-final { scan-tree-dump-times \"return 123\" 1 \"fre3\"} } */\n+/* { dg-final { scan-tree-dump-times \"return 123\" 1 \"fre1\"} } */"}, {"sha": "dd4e3b7aaa9e5d58508a6c7c70a3b74dc6ddc1dc", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -1013,7 +1013,8 @@ nonoverlapping_component_refs_of_decl_p (tree ref1, tree ref2)\n     }\n   if (TREE_CODE (ref1) == MEM_REF)\n     {\n-      if (!integer_zerop (TREE_OPERAND (ref1, 1)))\n+      if (!integer_zerop (TREE_OPERAND (ref1, 1))\n+\t  || TREE_CODE (TREE_OPERAND (ref1, 0)) != ADDR_EXPR)\n \treturn false;\n       ref1 = TREE_OPERAND (TREE_OPERAND (ref1, 0), 0);\n     }\n@@ -1026,7 +1027,8 @@ nonoverlapping_component_refs_of_decl_p (tree ref1, tree ref2)\n     }\n   if (TREE_CODE (ref2) == MEM_REF)\n     {\n-      if (!integer_zerop (TREE_OPERAND (ref2, 1)))\n+      if (!integer_zerop (TREE_OPERAND (ref2, 1))\n+\t  || TREE_CODE (TREE_OPERAND (ref2, 0)) != ADDR_EXPR)\n \treturn false;\n       ref2 = TREE_OPERAND (TREE_OPERAND (ref2, 0), 0);\n     }"}, {"sha": "8c0c8b2c56674bd43ccffbb1b00f1916d9b07db5", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -995,7 +995,7 @@ copy_reference_ops_from_ref (tree ref, vec<vn_reference_op_s> *result)\n bool\n ao_ref_init_from_vn_reference (ao_ref *ref,\n \t\t\t       alias_set_type set, tree type,\n-\t\t\t       vec<vn_reference_op_s> ops)\n+\t\t\t       vec<vn_reference_op_s> ops, tree orig_ref)\n {\n   vn_reference_op_t op;\n   unsigned i;\n@@ -1149,7 +1149,7 @@ ao_ref_init_from_vn_reference (ao_ref *ref,\n   if (base == NULL_TREE)\n     return false;\n \n-  ref->ref = NULL_TREE;\n+  ref->ref = orig_ref;\n   ref->base = base;\n   ref->ref_alias_set = set;\n   if (base_alias_set != -1)\n@@ -1976,7 +1976,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n \t{\n \t  lhs_ref_ok = ao_ref_init_from_vn_reference (&lhs_ref,\n \t\t\t\t\t\t      get_alias_set (lhs),\n-\t\t\t\t\t\t      TREE_TYPE (lhs), lhs_ops);\n+\t\t\t\t\t\t      TREE_TYPE (lhs), lhs_ops,\n+\t\t\t\t\t\t      lhs);\n \t  if (lhs_ref_ok\n \t      && !refs_may_alias_p_1 (ref, &lhs_ref, true))\n \t    {\n@@ -2718,7 +2719,7 @@ vn_reference_lookup (tree op, tree vuse, vn_lookup_kind kind,\n          Otherwise preserve the full reference for advanced TBAA.  */\n       if (!valuezied_anything\n \t  || !ao_ref_init_from_vn_reference (&r, vr1.set, vr1.type,\n-\t\t\t\t\t     vr1.operands))\n+\t\t\t\t\t     vr1.operands, op))\n \tao_ref_init (&r, op);\n       if (! tbaa_p)\n \tr.ref_alias_set = r.base_alias_set = 0;"}, {"sha": "ec32dcb499005997d11c3bff48c65375e001d381", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be54209b30e4ace3ec771f2dfab687d451fbbf8/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=1be54209b30e4ace3ec771f2dfab687d451fbbf8", "patch": "@@ -229,7 +229,7 @@ vn_nary_op_t vn_nary_op_insert (tree, tree);\n vn_nary_op_t vn_nary_op_insert_pieces (unsigned int, enum tree_code,\n \t\t\t\t       tree, tree *, tree, unsigned int);\n bool ao_ref_init_from_vn_reference (ao_ref *, alias_set_type, tree,\n-\t\t\t\t    vec<vn_reference_op_s> );\n+\t\t\t\t    vec<vn_reference_op_s>, tree = NULL_TREE);\n vec<vn_reference_op_s> vn_reference_operands_for_lookup (tree);\n tree vn_reference_lookup_pieces (tree, alias_set_type, tree,\n \t\t\t\t vec<vn_reference_op_s> ,"}]}