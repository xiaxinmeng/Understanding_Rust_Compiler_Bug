{"sha": "7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2MmI3MThlMWYwZTVhYmM4YjVmM2YwMmU4NzQ5NWZiNmQwOWY5NQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-03-16T09:19:23Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-03-16T09:19:23Z"}, "message": "Add missing single_pred_p test in scop_detection::merge_sese\n\n2016-03-16  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/68715\n\t* graphite-scop-detection.c (scop_detection::merge_sese): Add missing\n\tsingle_pred_p test.\n\n\t* gcc.dg/graphite/pr68715-2.c: New test.\n\t* gcc.dg/graphite/pr68715.c: New test.\n\t* gfortran.dg/graphite/pr68715.f90: New test.\n\nFrom-SVN: r234251", "tree": {"sha": "7b8ab24c460c6eee3dc69d34cb8dc6720ff665b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b8ab24c460c6eee3dc69d34cb8dc6720ff665b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/comments", "author": null, "committer": null, "parents": [{"sha": "be7ce7aefd00f15e98f2802cfe3434dcca517643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7ce7aefd00f15e98f2802cfe3434dcca517643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7ce7aefd00f15e98f2802cfe3434dcca517643"}], "stats": {"total": 119, "additions": 118, "deletions": 1}, "files": [{"sha": "e7c759febda209fc5493da508e16cc4d0052e99e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -1,3 +1,9 @@\n+2016-03-16  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68715\n+\t* graphite-scop-detection.c (scop_detection::merge_sese): Add missing\n+\tsingle_pred_p test.\n+\n 2016-03-16  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/68809"}, {"sha": "7615842b332d34a734ac26383ed11a44047bd4c0", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -836,7 +836,9 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n     {\n       /* Find the first empty succ (with single exit) of combined.exit.  */\n       basic_block imm_succ = combined.exit->dest;\n-      if (single_succ_p (imm_succ) && trivially_empty_bb_p (imm_succ))\n+      if (single_succ_p (imm_succ)\n+\t  && single_pred_p (imm_succ)\n+\t  && trivially_empty_bb_p (imm_succ))\n \tcombined.exit = single_succ_edge (imm_succ);\n       else\n \t{"}, {"sha": "8d2546ca3577a708793c102adb1da74889e7158f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -1,3 +1,10 @@\n+2016-03-16  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68715\n+\t* gcc.dg/graphite/pr68715-2.c: New test.\n+\t* gcc.dg/graphite/pr68715.c: New test.\n+\t* gfortran.dg/graphite/pr68715.f90: New test.\n+\n 2016-03-16  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/68809"}, {"sha": "270d948f1f5a54537972ed1dc5abcf10fdfcddff", "filename": "gcc/testsuite/gcc.dg/graphite/pr68715-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715-2.c?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -floop-interchange\" } */\n+\n+int a, b, c, d, f, g;\n+int e[1], h[1];\n+void fn2 ();\n+void fn3 ();\n+void\n+fn1 ()\n+{\n+  fn2 ();\n+  b = 0;\n+  for (; b < 10; b++)\n+    ;\n+}\n+\n+void\n+fn2 ()\n+{\n+  if (a)\n+    {\n+      fn3 ();\n+      c = d;\n+    }\n+}\n+\n+void\n+fn3 ()\n+{\n+  for (; g; g++)\n+    e[g] = 2;\n+  if (f)\n+    for (; g; g++)\n+      h[g] = 5;\n+}"}, {"sha": "14da2fbf939ec5970797afe9e152fd2807a61d07", "filename": "gcc/testsuite/gcc.dg/graphite/pr68715.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68715.c?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-interchange\" } */\n+\n+int a[1], c[1];\n+int b, d, e;\n+\n+void\n+fn1 (int p1)\n+{\n+  for (;;)\n+    ;\n+}\n+\n+int\n+fn3 ()\n+{\n+  for (; e; e++)\n+    c[e] = 2;\n+  for (; d; d--)\n+    a[d] = 8;\n+  return 0;\n+}\n+\n+int fn5 (int);\n+\n+int\n+fn2 ()\n+{\n+  fn3 ();\n+}\n+\n+void\n+fn4 ()\n+{\n+  fn1 (b || fn5 (fn2 ()));\n+}"}, {"sha": "c011756947878ff649db226602f630095dc23463", "filename": "gcc/testsuite/gfortran.dg/graphite/pr68715.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68715.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7662b718e1f0e5abc8b5f3f02e87495fb6d09f95/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68715.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68715.f90?ref=7662b718e1f0e5abc8b5f3f02e87495fb6d09f95", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+! { dg-options \"-floop-nest-optimize -O1\" }\n+\n+SUBROUTINE se_core_core_interaction(calculate_forces)\n+  INTEGER, PARAMETER :: dp=8\n+  LOGICAL, INTENT(in)\t\t :: calculate_forces\n+  REAL(KIND=dp), DIMENSION(3)\t :: force_ab, rij\n+  LOGICAL :: lfoo,kfoo,mfoo,nfoo,ffoo\n+  INTEGER, PARAMETER :: mi2=42\n+  CALL dummy(lfoo,kfoo,mfoo,nfoo,method_id,core_core)\n+  IF (lfoo) THEN\n+     DO WHILE (ffoo())\n+\tIF (lfoo) CYCLE\n+\tIF (kfoo) CYCLE\n+\tdr1 = DOT_PRODUCT(rij,rij)\n+\tIF (dr1 > rij_threshold) THEN\n+\t   SELECT CASE (method_id)\n+\t   CASE (mi2)\n+\t      IF (calculate_forces) THEN\n+\t\t CALL dummy2(force_ab)\n+\t\t IF (nfoo) THEN\n+\t\t    force_ab = force_ab + core_core*dr3inv\n+\t\t END IF\n+\t      END IF\n+\t   END SELECT\n+\tEND IF\n+\tenuclear = enuclear + enucij\n+     END DO\n+     CALL dummy3(enuclear)\n+  END IF\n+END SUBROUTINE se_core_core_interaction"}]}