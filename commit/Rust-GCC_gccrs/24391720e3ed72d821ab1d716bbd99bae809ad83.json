{"sha": "24391720e3ed72d821ab1d716bbd99bae809ad83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzOTE3MjBlM2VkNzJkODIxYWIxZDcxNmJiZDk5YmFlODA5YWQ4Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-06-22T13:54:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-06-22T13:54:38Z"}, "message": "arm.md (all call_value patterns): Remove register constraints on value operand.\n\n* arm.md (all call_value patterns): Remove register constraints on\nvalue operand.\n\nFrom-SVN: r68329", "tree": {"sha": "f1053d250154b6d46fc8f8caf575eadf64046437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1053d250154b6d46fc8f8caf575eadf64046437"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24391720e3ed72d821ab1d716bbd99bae809ad83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24391720e3ed72d821ab1d716bbd99bae809ad83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24391720e3ed72d821ab1d716bbd99bae809ad83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24391720e3ed72d821ab1d716bbd99bae809ad83/comments", "author": null, "committer": null, "parents": [{"sha": "6ff3a151fd20be0327d0333827df46d080898fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff3a151fd20be0327d0333827df46d080898fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff3a151fd20be0327d0333827df46d080898fec"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "4e5196fab9122b13b1259abe91acf8e60f4ca9aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24391720e3ed72d821ab1d716bbd99bae809ad83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24391720e3ed72d821ab1d716bbd99bae809ad83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24391720e3ed72d821ab1d716bbd99bae809ad83", "patch": "@@ -1,3 +1,8 @@\n+2003-06-22  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (all call_value patterns): Remove register constraints on\n+\tvalue operand.\n+\n 2003-06-22  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* common.opt: More -f switches."}, {"sha": "339763ad627279b12927e7efe5446486ac0be3cc", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24391720e3ed72d821ab1d716bbd99bae809ad83/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24391720e3ed72d821ab1d716bbd99bae809ad83/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=24391720e3ed72d821ab1d716bbd99bae809ad83", "patch": "@@ -6012,7 +6012,7 @@\n )\n \n (define_insn \"*call_value_indirect\"\n-  [(set (match_operand 0 \"\" \"=l\")\n+  [(set (match_operand 0 \"\" \"\")\n \t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"l*r\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n@@ -6051,7 +6051,7 @@\n )\n \n (define_insn \"*call_value_reg\"\n-  [(set (match_operand 0 \"\" \"=ryfv\")\n+  [(set (match_operand 0 \"\" \"\")\n         (call (mem:SI (match_operand:SI 1 \"s_register_operand\" \"r\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n@@ -6065,7 +6065,7 @@\n )\n \n (define_insn \"*call_value_mem\"\n-  [(set (match_operand 0 \"\" \"=ryfv\")\n+  [(set (match_operand 0 \"\" \"\")\n \t(call (mem:SI (match_operand:SI 1 \"memory_operand\" \"m\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n@@ -6082,7 +6082,7 @@\n ;; The 'a' causes the operand to be treated as an address, i.e. no '#' output.\n \n (define_insn \"*call_symbol\"\n-  [(call (mem:SI (match_operand:SI 0 \"\" \"X\"))\n+  [(call (mem:SI (match_operand:SI 0 \"\" \"\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n@@ -6097,8 +6097,8 @@\n )\n \n (define_insn \"*call_value_symbol\"\n-  [(set (match_operand 0 \"s_register_operand\" \"=ryfv\")\n-\t(call (mem:SI (match_operand:SI 1 \"\" \"X\"))\n+  [(set (match_operand 0 \"s_register_operand\" \"\")\n+\t(call (mem:SI (match_operand:SI 1 \"\" \"\"))\n \t(match_operand:SI 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n@@ -6113,7 +6113,7 @@\n )\n \n (define_insn \"*call_insn\"\n-  [(call (mem:SI (match_operand:SI 0 \"\" \"X\"))\n+  [(call (mem:SI (match_operand:SI 0 \"\" \"\"))\n \t (match_operand:SI 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n@@ -6126,8 +6126,8 @@\n )\n \n (define_insn \"*call_value_insn\"\n-  [(set (match_operand 0 \"register_operand\" \"=l\")\n-\t(call (mem:SI (match_operand 1 \"\" \"X\"))\n+  [(set (match_operand 0 \"register_operand\" \"\")\n+\t(call (mem:SI (match_operand 1 \"\" \"\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n@@ -6180,7 +6180,7 @@\n )\n \n (define_insn \"*sibcall_value_insn\"\n- [(set (match_operand 0 \"s_register_operand\" \"=ryfv\")\n+ [(set (match_operand 0 \"s_register_operand\" \"\")\n        (call (mem:SI (match_operand:SI 1 \"\" \"X\"))\n \t     (match_operand 2 \"\" \"\")))\n   (return)"}]}