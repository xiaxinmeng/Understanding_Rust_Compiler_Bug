{"sha": "708b34218d70dc5ec480dc7fc665fff2fc23830b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4YjM0MjE4ZDcwZGM1ZWM0ODBkYzdmYzY2NWZmZjJmYzIzODMwYg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-02T00:39:52Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-02T00:39:52Z"}, "message": "* doc/include/texinfo.tex: Update from Texinfo CVS.\n\nFrom-SVN: r89973", "tree": {"sha": "d18908dab5c0642972f7cb28371522e1b8f098f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18908dab5c0642972f7cb28371522e1b8f098f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/708b34218d70dc5ec480dc7fc665fff2fc23830b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708b34218d70dc5ec480dc7fc665fff2fc23830b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708b34218d70dc5ec480dc7fc665fff2fc23830b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708b34218d70dc5ec480dc7fc665fff2fc23830b/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91e3536af6eef90e07855ce1b81e4831116365e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e3536af6eef90e07855ce1b81e4831116365e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e3536af6eef90e07855ce1b81e4831116365e5"}], "stats": {"total": 1314, "additions": 808, "deletions": 506}, "files": [{"sha": "5a9ffca99ba137e886964a9e284de98826a2df1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708b34218d70dc5ec480dc7fc665fff2fc23830b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708b34218d70dc5ec480dc7fc665fff2fc23830b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=708b34218d70dc5ec480dc7fc665fff2fc23830b", "patch": "@@ -1,3 +1,7 @@\n+2004-11-02  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* doc/include/texinfo.tex: Update from Texinfo CVS.\n+\n 2004-11-02  Ben Elliston  <bje@au.ibm.com>\n \n \t* cppdefault.h (cpp_SYSROOT): Remove."}, {"sha": "47372211d5dccb9f1ef2958139c949cab158e204", "filename": "gcc/doc/include/texinfo.tex", "status": "modified", "additions": 804, "deletions": 506, "changes": 1310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708b34218d70dc5ec480dc7fc665fff2fc23830b/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708b34218d70dc5ec480dc7fc665fff2fc23830b/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finclude%2Ftexinfo.tex?ref=708b34218d70dc5ec480dc7fc665fff2fc23830b", "patch": "@@ -3,10 +3,11 @@\n % Load plain if necessary, i.e., if running under initex.\n \\expandafter\\ifx\\csname fmtname\\endcsname\\relax\\input plain\\fi\n %\n-\\def\\texinfoversion{2003-12-21.10}\n+\\def\\texinfoversion{2004-10-31.06}\n %\n % Copyright (C) 1985, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995,\n-% 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+% 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software\n+% Foundation, Inc.\n %\n % This texinfo.tex file is free software; you can redistribute it and/or\n % modify it under the terms of the GNU General Public License as\n@@ -26,7 +27,7 @@\n % As a special exception, when this file is read by TeX when processing\n % a Texinfo source document, you may use the result without\n % restriction.  (This has been our intent since Texinfo was invented.)\n-% \n+%\n % Please try the latest version of texinfo.tex before submitting bug\n % reports; you can get the latest version from:\n %   http://www.gnu.org/software/texinfo/ (the Texinfo home page), or\n@@ -54,7 +55,7 @@\n % It is possible to adapt texinfo.tex for other languages, to some\n % extent.  You can get the existing language-specific files from the\n % full Texinfo distribution.\n-% \n+%\n % The GNU Texinfo home page is http://www.gnu.org/software/texinfo.\n \n \n@@ -173,11 +174,16 @@\n \\def\\makecsname#1{\\expandafter\\noexpand\\csname#1\\endcsname}\n \n % Hyphenation fixes.\n-\\hyphenation{ap-pen-dix}\n-\\hyphenation{eshell}\n-\\hyphenation{mini-buf-fer mini-buf-fers}\n-\\hyphenation{time-stamp}\n-\\hyphenation{white-space}\n+\\hyphenation{\n+  Flor-i-da Ghost-script Ghost-view Mac-OS Post-Script\n+  ap-pen-dix bit-map bit-maps\n+  data-base data-bases eshell fall-ing half-way long-est man-u-script\n+  man-u-scripts mini-buf-fer mini-buf-fers over-view par-a-digm\n+  par-a-digms rath-er rec-tan-gu-lar ro-bot-ics se-vere-ly set-up spa-ces\n+  spell-ing spell-ings\n+  stand-alone strong-est time-stamp time-stamps which-ever white-space\n+  wide-spread wrap-around\n+}\n \n % Margin to add to right of even pages, to left of odd pages.\n \\newdimen\\bindingoffset\n@@ -403,7 +409,7 @@\n \\def\\argremovecomment#1\\comment#2\\ArgTerm{\\argremovec #1\\c\\ArgTerm}\n \\def\\argremovec#1\\c#2\\ArgTerm{\\argcheckspaces#1\\^^M\\ArgTerm}\n \n-% Each occurrence of `\\^^M' or `<space>\\^^M' is replaced by a single space.\n+% Each occurence of `\\^^M' or `<space>\\^^M' is replaced by a single space.\n %\n % \\argremovec might leave us with trailing space, e.g.,\n %    @end itemize  @c foo\n@@ -475,16 +481,16 @@\n \\def\\flushcr{\\ifx\\par\\lisppar \\def\\next##1{}\\else \\let\\next=\\relax \\fi \\next}\n \n % Define the framework for environments in texinfo.tex.  It's used like this:\n-% \n+%\n %   \\envdef\\foo{...}\n %   \\def\\Efoo{...}\n-%   \n+%\n % It's the responsibility of \\envdef to insert \\begingroup before the\n % actual body; @end closes the group after calling \\Efoo.  \\envdef also\n % defines \\thisenv, so the current environment is known; @end checks\n % whether the environment name matches.  The \\checkenv macro can also be\n % used to check whether the current environment is the one expected.\n-% \n+%\n % Non-false conditionals (@iftex, @ifset) don't fit into this, so they\n % are not treated as enviroments; they don't open a group.  (The\n % implementation of @end takes care not to call \\endgroup in this\n@@ -599,12 +605,17 @@\n   \\fi\\fi\n }\n \n-% @LaTeX{} logo.  (@TeX{} is defined in plain.tex.)\n-% Not quite the same results as the definition in latex.ltx, since we\n-% use a different font for the raised A; it's most convenient for us to\n-% go two sizes down, rather than using the \\scriptstyle font (since we\n-% don't reset \\scriptstyle and \\scriptscriptstyle).\n-% \n+% The \\TeX{} logo, as in plain, but resetting the spacing so that a\n+% period following counts as ending a sentence.  (Idea found in latex.)\n+%\n+\\edef\\TeX{\\TeX \\spacefactor=1000 }\n+\n+% @LaTeX{} logo.  Not quite the same results as the definition in\n+% latex.ltx, since we use a different font for the raised A; it's most\n+% convenient for us to use an explicitly smaller font, rather than using\n+% the \\scriptstyle font (since we don't reset \\scriptstyle and\n+% \\scriptscriptstyle).\n+%\n \\def\\LaTeX{%\n   L\\kern-.36em\n   {\\setbox0=\\hbox{T}%\n@@ -966,8 +977,6 @@\n % By default, we suppress indentation.\n %\n \\def\\suppressfirstparagraphindent{\\dosuppressfirstparagraphindent}\n-\\newdimen\\currentparindent\n-%\n \\def\\insertword{insert}\n %\n \\parseargdef\\firstparagraphindent{%\n@@ -1087,7 +1096,7 @@\n \n % @comma{} is so commas can be inserted into text without messing up\n % Texinfo's parsing.\n-% \n+%\n \\let\\comma = ,\n \n % @refill is a no-op.\n@@ -1104,14 +1113,14 @@\n % So open here the files we need to have open while reading the input.\n % This makes it possible to make a .fmt file for texinfo.\n \\def\\setfilename{%\n+   \\fixbackslash  % Turn off hack to swallow `\\input texinfo'.\n    \\iflinks\n      \\tryauxfile\n      % Open the new aux file.  TeX will close it automatically at exit.\n      \\immediate\\openout\\auxfile=\\jobname.aux\n    \\fi % \\openindices needs to do some work in any case.\n    \\openindices\n-   \\fixbackslash  % Turn off hack to swallow `\\input texinfo'.\n-   \\global\\let\\setfilename=\\comment % Ignore extra @setfilename cmds.\n+   \\let\\setfilename=\\comment % Ignore extra @setfilename cmds.\n    %\n    % If texinfo.cnf is present on the system, read it.\n    % Useful for site-wide @afourpaper, etc.\n@@ -1153,16 +1162,21 @@\n \\newif\\ifpdf\n \\newif\\ifpdfmakepagedest\n \n+% when pdftex is run in dvi mode, \\pdfoutput is defined (so \\pdfoutput=1\n+% can be set).  So we test for \\relax and 0 as well as \\undefined,\n+% borrowed from ifpdf.sty.\n \\ifx\\pdfoutput\\undefined\n-  \\pdffalse\n-  \\let\\pdfmkdest = \\gobble\n-  \\let\\pdfurl = \\gobble\n-  \\let\\endlink = \\relax\n-  \\let\\linkcolor = \\relax\n-  \\let\\pdfmakeoutlines = \\relax\n \\else\n-  \\pdftrue\n-  \\pdfoutput = 1\n+  \\ifx\\pdfoutput\\relax\n+  \\else\n+    \\ifcase\\pdfoutput\n+    \\else\n+      \\pdftrue\n+    \\fi\n+  \\fi\n+\\fi\n+%\n+\\ifpdf\n   \\input pdfcolor\n   \\pdfcatalog{/PageMode /UseOutlines}%\n   \\def\\dopdfimage#1#2#3{%\n@@ -1207,7 +1221,7 @@\n   % of subentries (or empty, for subsubsections).  #3 is the node\n   % text, which might be empty if this toc entry had no\n   % corresponding node.  #4 is the page number.\n-  % \n+  %\n   \\def\\dopdfoutline#1#2#3#4{%\n     % Generate a link to the node text if that exists; else, use the\n     % page number.  We could generate a destination for the section\n@@ -1262,7 +1276,7 @@\n       % Read toc second time, this time actually producing the outlines.\n       % The `-' means take the \\expnumber as the absolute number of\n       % subentries, which we calculated on our first read of the .toc above.\n-      % \n+      %\n       % We use the node names as the destinations.\n       \\def\\numchapentry##1##2##3##4{%\n         \\dopdfoutline{##1}{count-\\expnumber{chap##2}}{##3}{##4}}%\n@@ -1273,7 +1287,15 @@\n       \\def\\numsubsubsecentry##1##2##3##4{% count is always zero\n         \\dopdfoutline{##1}{}{##3}{##4}}%\n       %\n-      % Make special characters normal for writing to the pdf file.\n+      % PDF outlines are displayed using system fonts, instead of\n+      % document fonts.  Therefore we cannot use special characters,\n+      % since the encoding is unknown.  For example, the eogonek from\n+      % Latin 2 (0xea) gets translated to a | character.  Info from\n+      % Staszek Wawrykiewicz, 19 Jan 2004 04:09:24 +0100.\n+      %\n+      % xx to do this right, we have to translate 8-bit characters to\n+      % their \"best\" equivalent, based on the @documentencoding.  Right\n+      % now, I guess we'll just let the pdf reader have its way.\n       \\indexnofonts\n       \\turnoffactive\n       \\input \\jobname.toc\n@@ -1310,7 +1332,6 @@\n   \\def\\ppn#1{\\pgn=#1\\gobble}\n   \\def\\ppnn{\\pgn=\\first}\n   \\def\\pdfmklnk#1{\\lnkcount=0\\makelinks #1,END,}\n-  \\def\\addtokens#1#2{\\edef\\addtoks{\\noexpand#1={\\the#1#2}}\\addtoks}\n   \\def\\skipspaces#1{\\def\\PP{#1}\\def\\D{|}%\n     \\ifx\\PP\\D\\let\\nextsp\\relax\n     \\else\\let\\nextsp\\skipspaces\n@@ -1332,14 +1353,13 @@\n       \\leavevmode\\Red\n       \\startlink attr{/Border [0 0 0]}%\n         user{/Subtype /Link /A << /S /URI /URI (#1) >>}%\n-        % #1\n     \\endgroup}\n   \\def\\pdfgettoks#1.{\\setbox\\boxA=\\hbox{\\toksA={#1.}\\toksB={}\\maketoks}}\n   \\def\\addtokens#1#2{\\edef\\addtoks{\\noexpand#1={\\the#1#2}}\\addtoks}\n   \\def\\adn#1{\\addtokens{\\toksC}{#1}\\global\\countA=1\\let\\next=\\maketoks}\n   \\def\\poptoks#1#2|ENDTOKS|{\\let\\first=#1\\toksD={#1}\\toksA={#2}}\n   \\def\\maketoks{%\n-    \\expandafter\\poptoks\\the\\toksA|ENDTOKS|\n+    \\expandafter\\poptoks\\the\\toksA|ENDTOKS|\\relax\n     \\ifx\\first0\\adn0\n     \\else\\ifx\\first1\\adn1 \\else\\ifx\\first2\\adn2 \\else\\ifx\\first3\\adn3\n     \\else\\ifx\\first4\\adn4 \\else\\ifx\\first5\\adn5 \\else\\ifx\\first6\\adn6\n@@ -1359,22 +1379,28 @@\n     \\startlink attr{/Border [0 0 0]} goto name{\\pdfmkpgn{#1}}\n     \\linkcolor #1\\endlink}\n   \\def\\done{\\edef\\st{\\global\\noexpand\\toksA={\\the\\toksB}}\\st}\n-\\fi % \\ifx\\pdfoutput\n+\\else\n+  \\let\\pdfmkdest = \\gobble\n+  \\let\\pdfurl = \\gobble\n+  \\let\\endlink = \\relax\n+  \\let\\linkcolor = \\relax\n+  \\let\\pdfmakeoutlines = \\relax\n+\\fi  % \\ifx\\pdfoutput\n \n \n \\message{fonts,}\n \n % Change the current font style to #1, remembering it in \\curfontstyle.\n % For now, we do not accumulate font styles: @b{@i{foo}} prints foo in\n % italics, not bold italics.\n-% \n+%\n \\def\\setfontstyle#1{%\n   \\def\\curfontstyle{#1}% not as a control sequence, because we are \\edef'd.\n   \\csname ten#1\\endcsname  % change the current font\n }\n \n % Select #1 fonts with the current style.\n-% \n+%\n \\def\\selectfonts#1{\\csname #1fonts\\endcsname \\csname\\curfontstyle\\endcsname}\n \n \\def\\rm{\\fam=0 \\setfontstyle{rm}}\n@@ -1570,13 +1596,13 @@\n % of just \\STYLE.  We do this because \\STYLE needs to also set the\n % current \\fam for math mode.  Our \\STYLE (e.g., \\rm) commands hardwire\n % \\tenSTYLE to set the current font.\n-% \n+%\n % Each font-changing command also sets the names \\lsize (one size lower)\n % and \\lllsize (three sizes lower).  These relative commands are used in\n % the LaTeX logo and acronyms.\n-% \n+%\n % This all needs generalizing, badly.\n-% \n+%\n \\def\\textfonts{%\n   \\let\\tenrm=\\textrm \\let\\tenit=\\textit \\let\\tensl=\\textsl\n   \\let\\tenbf=\\textbf \\let\\tentt=\\texttt \\let\\smallcaps=\\textsc\n@@ -1689,6 +1715,7 @@\n \\def\\cite#1{{\\sl #1}\\futurelet\\next\\smartitalicx}\n \n \\let\\i=\\smartitalic\n+\\let\\slanted=\\smartslanted\n \\let\\var=\\smartslanted\n \\let\\dfn=\\smartslanted\n \\let\\emph=\\smartitalic\n@@ -1825,8 +1852,8 @@\n \\else{\\tclose{\\kbdfont\\look}}\\fi\n \\else{\\tclose{\\kbdfont\\look}}\\fi}\n \n-% For @url, @env, @command quotes seem unnecessary, so use \\code.\n-\\let\\url=\\code\n+% For @indicateurl, @env, @command quotes seem unnecessary, so use \\code.\n+\\let\\indicateurl=\\code\n \\let\\env=\\code\n \\let\\command=\\code\n \n@@ -1858,6 +1885,10 @@\n   \\endlink\n \\endgroup}\n \n+% @url synonym for @uref, since that's how everyone uses it.\n+%\n+\\let\\url=\\uref\n+\n % rms does not like angle brackets --karl, 17may97.\n % So now @email is just like @uref, unless we are pdf.\n %\n@@ -1899,6 +1930,10 @@\n \\def\\sc#1{{\\smallcaps#1}}       % smallcaps font\n \\def\\ii#1{{\\it #1}}             % italic font\n \n+% @acronym for \"FBI\", \"NATO\", and the like.\n+% We print this one point size smaller, since it's intended for\n+% all-uppercase.\n+% \n \\def\\acronym#1{\\doacronym #1,,\\finish}\n \\def\\doacronym#1,#2,#3\\finish{%\n   {\\selectfonts\\lsize #1}%\n@@ -1908,8 +1943,20 @@\n   \\fi\n }\n \n-% @pounds{} is a sterling sign, which is in the CM italic font.\n+% @abbr for \"Comput. J.\" and the like.\n+% No font change, but don't do end-of-sentence spacing.\n % \n+\\def\\abbr#1{\\doabbr #1,,\\finish}\n+\\def\\doabbr#1,#2,#3\\finish{%\n+  {\\frenchspacing #1}%\n+  \\def\\temp{#2}%\n+  \\ifx\\temp\\empty \\else\n+    \\space ({\\unsepspaces \\ignorespaces \\temp \\unskip})%\n+  \\fi\n+}\n+\n+% @pounds{} is a sterling sign, which Knuth put in the CM italic font.\n+%\n \\def\\pounds{{\\it\\$}}\n \n % @registeredsymbol - R in a circle.  The font for the R should really\n@@ -1922,6 +1969,14 @@\n     }$%\n }\n \n+% Laurent Siebenmann reports \\Orb undefined with:\n+%  Textures 1.7.7 (preloaded format=plain 93.10.14)  (68K)  16 APR 2004 02:38\n+% so we'll define it if necessary.\n+% \n+\\ifx\\Orb\\undefined\n+\\def\\Orb{\\mathhexbox20D}\n+\\fi\n+\n \n \\message{page headings,}\n \n@@ -2023,11 +2078,12 @@\n }\n \n % @author should come last, but may come many times.\n+% It can also be used inside @quotation.\n+%\n \\parseargdef\\author{%\n   \\def\\temp{\\quotation}%\n   \\ifx\\thisenv\\temp\n-    This edition of the manual is dedicated to Karl Berry who should\n-    really make affiliations work.\n+    \\def\\quotationauthor{#1}% printed in \\Equotation.\n   \\else\n     \\checkenv\\titlepage\n     \\ifseenauthor\\else \\vskip 0pt plus 1filll \\seenauthortrue \\fi\n@@ -2226,17 +2282,13 @@\n     % \\parskip glue -- logically it's part of the @item we just started.\n     \\nobreak \\vskip-\\parskip\n     %\n-    % Stop a page break at the \\parskip glue coming up.  (Unfortunately\n-    % we can't prevent a possible page break at the following\n-    % \\baselineskip glue.)  However, if what follows is an environment\n-    % such as @example, there will be no \\parskip glue; then\n-    % the negative vskip we just would cause the example and the item to\n-    % crash together.  So we use this bizarre value of 10001 as a signal\n-    % to \\aboveenvbreak to insert \\parskip glue after all.\n-    % (Possibly there are other commands that could be followed by\n-    % @example which need the same treatment, but not section titles; or\n-    % maybe section titles are the only special case and they should be\n-    % penalty 10001...)\n+    % Stop a page break at the \\parskip glue coming up.  However, if\n+    % what follows is an environment such as @example, there will be no\n+    % \\parskip glue; then the negative vskip we just inserted would\n+    % cause the example and the item to crash together.  So we use this\n+    % bizarre value of 10001 as a signal to \\aboveenvbreak to insert\n+    % \\parskip glue after all.  Section titles are handled this way also.\n+    % \n     \\penalty 10001\n     \\endgroup\n     \\itemxneedsnegativevskipfalse\n@@ -2262,15 +2314,26 @@\n % @table, @ftable, @vtable.\n \\envdef\\table{%\n   \\let\\itemindex\\gobble\n-  \\tablex\n+  \\tablecheck{table}%\n }\n \\envdef\\ftable{%\n   \\def\\itemindex ##1{\\doind {fn}{\\code{##1}}}%\n-  \\tablex\n+  \\tablecheck{ftable}%\n }\n \\envdef\\vtable{%\n   \\def\\itemindex ##1{\\doind {vr}{\\code{##1}}}%\n-  \\tablex\n+  \\tablecheck{vtable}%\n+}\n+\\def\\tablecheck#1{%\n+  \\ifnum \\the\\catcode`\\^^M=\\active\n+    \\endgroup\n+    \\errmessage{This command won't work in this context; perhaps the problem is\n+      that we are \\inenvironment\\thisenv}%\n+    \\def\\next{\\doignore{#1}}%\n+  \\else\n+    \\let\\next\\tablex\n+  \\fi\n+  \\next\n }\n \\def\\tablex#1{%\n   \\def\\itemindicate{#1}%\n@@ -2308,11 +2371,9 @@\n \n \\newcount \\itemno\n \n-\\envdef\\itemize{%\n-  \\parsearg\\itemizey\n-}\n+\\envdef\\itemize{\\parsearg\\doitemize}\n \n-\\def\\itemizey#1{%\n+\\def\\doitemize#1{%\n   \\aboveenvbreak\n   \\itemmax=\\itemindent\n   \\advance\\itemmax by -\\itemmargin\n@@ -2327,6 +2388,27 @@\n   \\let\\item=\\itemizeitem\n }\n \n+% Definition of @item while inside @itemize and @enumerate.\n+%\n+\\def\\itemizeitem{%\n+  \\advance\\itemno by 1  % for enumerations\n+  {\\let\\par=\\endgraf \\smallbreak}% reasonable place to break\n+  {%\n+   % If the document has an @itemize directly after a section title, a\n+   % \\nobreak will be last on the list, and \\sectionheading will have\n+   % done a \\vskip-\\parskip.  In that case, we don't want to zero\n+   % parskip, or the item text will crash with the heading.  On the\n+   % other hand, when there is normal text preceding the item (as there\n+   % usually is), we do want to zero parskip, or there would be too much\n+   % space.  In that case, we won't have a \\nobreak before.  At least\n+   % that's the theory.\n+   \\ifnum\\lastpenalty<10000 \\parskip=0in \\fi\n+   \\noindent\n+   \\hbox to 0pt{\\hss \\itemcontents \\kern\\itemmargin}%\n+   \\vadjust{\\penalty 1200}}% not good to break after first line of item.\n+  \\flushcr\n+}\n+\n % \\splitoff TOKENS\\endmark defines \\first to be the first token in\n % TOKENS, and \\rest to be the remainder.\n %\n@@ -2408,13 +2490,13 @@\n   }%\n }\n \n-% Call itemizey, adding a period to the first argument and supplying the\n+% Call \\doitemize, adding a period to the first argument and supplying the\n % common last two arguments.  Also subtract one from the initial value in\n % \\itemno, since @item increments \\itemno.\n %\n \\def\\startenumeration#1{%\n   \\advance\\itemno by -1\n-  \\itemizey{#1.}\\flushcr\n+  \\doitemize{#1.}\\flushcr\n }\n \n % @alphaenumerate and @capsenumerate are abbreviations for giving an arg\n@@ -2425,16 +2507,6 @@\n \\def\\Ealphaenumerate{\\Eenumerate}\n \\def\\Ecapsenumerate{\\Eenumerate}\n \n-% Definition of @item while inside @itemize.\n-\n-\\def\\itemizeitem{%\n-\\advance\\itemno by 1\n-{\\let\\par=\\endgraf \\smallbreak}%\n-\\ifhmode \\errmessage{In hmode at itemizeitem}\\fi\n-{\\parskip=0in \\hskip 0pt\n-\\hbox to 0pt{\\hss \\itemcontents\\hskip \\itemmargin}%\n-\\vadjust{\\penalty 1200}}%\n-\\flushcr}\n \n % @multitable macros\n % Amy Hendrickson, 8/18/94, 3/6/96\n@@ -2512,13 +2584,12 @@\n \\def\\xcolumnfractions{\\columnfractions}\n \\newif\\ifsetpercent\n \n-% #1 is the part of the @columnfraction before the decimal point, which\n-% is presumably either 0 or the empty string (but we don't check, we\n-% just throw it away).  #2 is the decimal part, which we use as the\n-% percent of \\hsize for this column.\n-\\def\\pickupwholefraction#1.#2 {%\n+% #1 is the @columnfraction, usually a decimal number like .5, but might\n+% be just 1.  We just use it, whatever it is.\n+%\n+\\def\\pickupwholefraction#1 {%\n   \\global\\advance\\colcount by 1\n-  \\expandafter\\xdef\\csname col\\the\\colcount\\endcsname{.#2\\hsize}%\n+  \\expandafter\\xdef\\csname col\\the\\colcount\\endcsname{#1\\hsize}%\n   \\setuptable\n }\n \n@@ -2573,7 +2644,10 @@\n   \\startsavinginserts\n   %\n   % @item within a multitable starts a normal row.\n-  \\let\\item\\crcr\n+  % We use \\def instead of \\let so that if one of the multitable entries\n+  % contains an @itemize, we don't choke on the \\item (seen as \\crcr aka\n+  % \\endtemplate) expanding \\doitemize.\n+  \\def\\item{\\crcr}%\n   %\n   \\tolerance=9500\n   \\hbadness=9500\n@@ -2658,19 +2732,17 @@\n   \\global\\setpercentfalse\n }\n \n-\\def\\setmultitablespacing{% test to see if user has set \\multitablelinespace.\n-% If so, do nothing. If not, give it an appropriate dimension based on\n-% current baselineskip.\n+\\def\\setmultitablespacing{%\n+  \\def\\multistrut{\\strut}% just use the standard line spacing\n+  %\n+  % Compute \\multitablelinespace (if not defined by user) for use in\n+  % \\multitableparskip calculation.  We used define \\multistrut based on\n+  % this, but (ironically) that caused the spacing to be off.\n+  % See bug-texinfo report from Werner Lemberg, 31 Oct 2004 12:52:20 +0100.\n \\ifdim\\multitablelinespace=0pt\n \\setbox0=\\vbox{X}\\global\\multitablelinespace=\\the\\baselineskip\n \\global\\advance\\multitablelinespace by-\\ht0\n-%% strut to put in table in case some entry doesn't have descenders,\n-%% to keep lines equally spaced\n-\\let\\multistrut = \\strut\n-\\else\n-%% FIXME: what is \\box0 supposed to be?\n-\\gdef\\multistrut{\\vrule height\\multitablelinespace depth\\dp0\n-width0pt\\relax} \\fi\n+\\fi\n %% Test to see if parskip is larger than space between lines of\n %% table. If not, do nothing.\n %%        If so, set to same dimension as multitablelinespace.\n@@ -2739,14 +2811,14 @@\n   \\doignorecount = 0\n   %\n   % Swallow text until we reach the matching `@end #1'.\n-  \\dodoignore {#1}%\n+  \\dodoignore{#1}%\n }\n \n { \\catcode`_=11 % We want to use \\_STOP_ which cannot appear in texinfo source.\n   \\obeylines %\n   %\n   \\gdef\\dodoignore#1{%\n-    % #1 contains the string `ifinfo'.\n+    % #1 contains the command name as a string, e.g., `ifinfo'.\n     %\n     % Define a command to find the next `@end #1', which must be on a line\n     % by itself.\n@@ -2775,7 +2847,7 @@\n }\n \n % We have to swallow the remaining \"\\_STOP_\".\n-% \n+%\n \\def\\doignoretextzzz#1{%\n   \\ifnum\\doignorecount = 0\t% We have just found the outermost @end.\n     \\let\\next\\enddoignore\n@@ -3015,6 +3087,7 @@\n   \\def\\definedummyletter##1{%\n     \\expandafter\\def\\csname ##1\\endcsname{\\realbackslash ##1}%\n   }%\n+  \\let\\definedummyaccent\\definedummyletter\n   %\n   % Do the redefinitions.\n   \\commondummies\n@@ -3037,6 +3110,7 @@\n   \\def\\definedummyletter##1{%\n     \\expandafter\\def\\csname ##1\\endcsname{@##1}%\n   }%\n+  \\let\\definedummyaccent\\definedummyletter\n   %\n   % Do the redefinitions.\n   \\commondummies\n@@ -3049,26 +3123,11 @@\n   %\n   \\normalturnoffactive\n   %\n-  % Control letters and accents.\n+  \\commondummiesnofonts\n+  %\n   \\definedummyletter{_}%\n-  \\definedummyletter{,}%\n-  \\definedummyletter{\"}%\n-  \\definedummyletter{`}%\n-  \\definedummyletter{'}%\n-  \\definedummyletter{^}%\n-  \\definedummyletter{~}%\n-  \\definedummyletter{=}%\n-  \\definedummyword{u}%\n-  \\definedummyword{v}%\n-  \\definedummyword{H}%\n-  \\definedummyword{dotaccent}%\n-  \\definedummyword{ringaccent}%\n-  \\definedummyword{tieaccent}%\n-  \\definedummyword{ubaraccent}%\n-  \\definedummyword{udotaccent}%\n-  \\definedummyword{dotless}%\n-  %\n-  % Other non-English letters.\n+  %\n+  % Non-English letters.\n   \\definedummyword{AA}%\n   \\definedummyword{AE}%\n   \\definedummyword{L}%\n@@ -3082,8 +3141,8 @@\n   \\definedummyword{ss}%\n   \\definedummyword{exclamdown}%\n   \\definedummyword{questiondown}%\n-  \\definedummyword{ordm}%\n   \\definedummyword{ordf}%\n+  \\definedummyword{ordm}%\n   %\n   % Although these internal commands shouldn't show up, sometimes they do.\n   \\definedummyword{bf}%\n@@ -3095,38 +3154,12 @@\n   \\definedummyword{tclose}%\n   \\definedummyword{tt}%\n   %\n-  % Texinfo font commands.\n-  \\definedummyword{b}%\n-  \\definedummyword{i}%\n-  \\definedummyword{r}%\n-  \\definedummyword{sc}%\n-  \\definedummyword{t}%\n-  %\n   \\definedummyword{LaTeX}%\n   \\definedummyword{TeX}%\n-  \\definedummyword{acronym}%\n-  \\definedummyword{cite}%\n-  \\definedummyword{code}%\n-  \\definedummyword{command}%\n-  \\definedummyword{dfn}%\n-  \\definedummyword{dots}%\n-  \\definedummyword{emph}%\n-  \\definedummyword{env}%\n-  \\definedummyword{file}%\n-  \\definedummyword{kbd}%\n-  \\definedummyword{key}%\n-  \\definedummyword{math}%\n-  \\definedummyword{option}%\n-  \\definedummyword{samp}%\n-  \\definedummyword{strong}%\n-  \\definedummyword{uref}%\n-  \\definedummyword{url}%\n-  \\definedummyword{var}%\n-  \\definedummyword{verb}%\n-  \\definedummyword{w}%\n   %\n   % Assorted special characters.\n   \\definedummyword{bullet}%\n+  \\definedummyword{comma}%\n   \\definedummyword{copyright}%\n   \\definedummyword{registeredsymbol}%\n   \\definedummyword{dots}%\n@@ -3151,40 +3184,97 @@\n   \\turnoffmacros\n }\n \n+% \\commondummiesnofonts: common to \\commondummies and \\indexnofonts.\n+%\n+% Better have this without active chars.\n+{\n+  \\catcode`\\~=\\other\n+  \\gdef\\commondummiesnofonts{%\n+    % Control letters and accents.\n+    \\definedummyletter{!}%\n+    \\definedummyaccent{\"}%\n+    \\definedummyaccent{'}%\n+    \\definedummyletter{*}%\n+    \\definedummyaccent{,}%\n+    \\definedummyletter{.}%\n+    \\definedummyletter{/}%\n+    \\definedummyletter{:}%\n+    \\definedummyaccent{=}%\n+    \\definedummyletter{?}%\n+    \\definedummyaccent{^}%\n+    \\definedummyaccent{`}%\n+    \\definedummyaccent{~}%\n+    \\definedummyword{u}%\n+    \\definedummyword{v}%\n+    \\definedummyword{H}%\n+    \\definedummyword{dotaccent}%\n+    \\definedummyword{ringaccent}%\n+    \\definedummyword{tieaccent}%\n+    \\definedummyword{ubaraccent}%\n+    \\definedummyword{udotaccent}%\n+    \\definedummyword{dotless}%\n+    %\n+    % Texinfo font commands.\n+    \\definedummyword{b}%\n+    \\definedummyword{i}%\n+    \\definedummyword{r}%\n+    \\definedummyword{sc}%\n+    \\definedummyword{t}%\n+    %\n+    % Commands that take arguments.\n+    \\definedummyword{acronym}%\n+    \\definedummyword{cite}%\n+    \\definedummyword{code}%\n+    \\definedummyword{command}%\n+    \\definedummyword{dfn}%\n+    \\definedummyword{emph}%\n+    \\definedummyword{env}%\n+    \\definedummyword{file}%\n+    \\definedummyword{kbd}%\n+    \\definedummyword{key}%\n+    \\definedummyword{math}%\n+    \\definedummyword{option}%\n+    \\definedummyword{samp}%\n+    \\definedummyword{strong}%\n+    \\definedummyword{tie}%\n+    \\definedummyword{uref}%\n+    \\definedummyword{url}%\n+    \\definedummyword{var}%\n+    \\definedummyword{verb}%\n+    \\definedummyword{w}%\n+  }\n+}\n \n % \\indexnofonts is used when outputting the strings to sort the index\n % by, and when constructing control sequence names.  It eliminates all\n % control sequences and just writes whatever the best ASCII sort string\n % would be for a given command (usually its argument).\n %\n-\\def\\indexdummylatex{LaTeX}\n-\\def\\indexdummytex{TeX}\n-\\def\\indexdummydots{...}\n-%\n \\def\\indexnofonts{%\n+  % Accent commands should become @asis.\n+  \\def\\definedummyaccent##1{%\n+    \\expandafter\\let\\csname ##1\\endcsname\\asis\n+  }%\n+  % We can just ignore other control letters.\n+  \\def\\definedummyletter##1{%\n+    \\expandafter\\def\\csname ##1\\endcsname{}%\n+  }%\n+  % Hopefully, all control words can become @asis.\n+  \\let\\definedummyword\\definedummyaccent\n+  %\n+  \\commondummiesnofonts\n+  %\n+  % Don't no-op \\tt, since it isn't a user-level command\n+  % and is used in the definitions of the active chars like <, >, |, etc.\n+  % Likewise with the other plain tex font commands.\n+  %\\let\\tt=\\asis\n+  %\n   \\def\\ { }%\n   \\def\\@{@}%\n   % how to handle braces?\n   \\def\\_{\\normalunderscore}%\n   %\n-  \\let\\,=\\asis\n-  \\let\\\"=\\asis\n-  \\let\\`=\\asis\n-  \\let\\'=\\asis\n-  \\let\\^=\\asis\n-  \\let\\~=\\asis\n-  \\let\\==\\asis\n-  \\let\\u=\\asis\n-  \\let\\v=\\asis\n-  \\let\\H=\\asis\n-  \\let\\dotaccent=\\asis\n-  \\let\\ringaccent=\\asis\n-  \\let\\tieaccent=\\asis\n-  \\let\\ubaraccent=\\asis\n-  \\let\\udotaccent=\\asis\n-  \\let\\dotless=\\asis\n-  %\n-  % Other non-English letters.\n+  % Non-English letters.\n   \\def\\AA{AA}%\n   \\def\\AE{AE}%\n   \\def\\L{L}%\n@@ -3201,40 +3291,28 @@\n   \\def\\ordf{a}%\n   \\def\\ordm{o}%\n   %\n-  % Don't no-op \\tt, since it isn't a user-level command\n-  % and is used in the definitions of the active chars like <, >, |, etc.\n-  % Likewise with the other plain tex font commands.\n-  %\\let\\tt=\\asis\n+  \\def\\LaTeX{LaTeX}%\n+  \\def\\TeX{TeX}%\n   %\n-  % Texinfo font commands.\n-  \\let\\b=\\asis\n-  \\let\\i=\\asis\n-  \\let\\r=\\asis\n-  \\let\\sc=\\asis\n-  \\let\\t=\\asis\n-  %\n-  \\let\\LaTeX=\\indexdummylatex\n-  \\let\\TeX=\\indexdummytex\n-  \\let\\acronym=\\asis\n-  \\let\\cite=\\asis\n-  \\let\\code=\\asis\n-  \\let\\command=\\asis\n-  \\let\\dfn=\\asis\n-  \\let\\dots=\\indexdummydots\n-  \\let\\emph=\\asis\n-  \\let\\env=\\asis\n-  \\let\\file=\\asis\n-  \\let\\kbd=\\asis\n-  \\let\\key=\\asis\n-  \\let\\math=\\asis\n-  \\let\\option=\\asis\n-  \\let\\samp=\\asis\n-  \\let\\strong=\\asis\n-  \\let\\uref=\\asis\n-  \\let\\url=\\asis\n-  \\let\\var=\\asis\n-  \\let\\verb=\\asis\n-  \\let\\w=\\asis\n+  % Assorted special characters.\n+  % (The following {} will end up in the sort string, but that's ok.)\n+  \\def\\bullet{bullet}%\n+  \\def\\comma{,}%\n+  \\def\\copyright{copyright}%\n+  \\def\\registeredsymbol{R}%\n+  \\def\\dots{...}%\n+  \\def\\enddots{...}%\n+  \\def\\equiv{==}%\n+  \\def\\error{error}%\n+  \\def\\expansion{==>}%\n+  \\def\\minus{-}%\n+  \\def\\pounds{pounds}%\n+  \\def\\point{.}%\n+  \\def\\print{-|}%\n+  \\def\\result{=>}%\n+  %\n+  % Don't write macro names.\n+  \\emptyusermacros\n }\n \n \\let\\indexbackslash=0  %overridden during \\printindex.\n@@ -3282,7 +3360,7 @@\n   % Remember, we are within a group.\n   \\indexdummies % Must do this here, since \\bf, etc expand at this stage\n   \\escapechar=`\\\\\n-  \\def\\rawbackslashxx{\\indexbackslash}% \\indexbackslash isn't defined now\n+  \\def\\backslashcurfont{\\indexbackslash}% \\indexbackslash isn't defined now\n       % so it will be output as is; and it will print as backslash.\n   %\n   % Process the index entry with all font commands turned off, to\n@@ -3355,17 +3433,18 @@\n   \\dosubindwrite\n   %\n   \\ifx\\lastskipmacro\\zeroskipmacro\n-    % if \\lastskip was zero, perhaps the last item was a\n-    % penalty, and perhaps it was >=10000, e.g., a \\nobreak.\n-    % In that case, we want to re-insert the penalty; since we\n-    % just inserted a non-discardable item, any following glue\n-    % (such as a \\parskip) would be a breakpoint.  For example:\n+    % If \\lastskip was zero, perhaps the last item was a penalty, and\n+    % perhaps it was >=10000, e.g., a \\nobreak.  In that case, we want\n+    % to re-insert the same penalty (values >10000 are used for various\n+    % signals); since we just inserted a non-discardable item, any\n+    % following glue (such as a \\parskip) would be a breakpoint.  For example:\n+    % \n     %   @deffn deffn-whatever\n     %   @vindex index-whatever\n     %   Description.\n     % would allow a break between the index-whatever whatsit\n     % and the \"Description.\" paragraph.\n-    \\ifnum\\count255>9999 \\nobreak \\fi\n+    \\ifnum\\count255>9999 \\penalty\\count255 \\fi\n   \\else\n     % On the other hand, if we had a nonzero \\lastskip,\n     % this make-up glue would be preceded by a non-discardable item\n@@ -3441,7 +3520,7 @@\n       % Index files are almost Texinfo source, but we use \\ as the escape\n       % character.  It would be better to use @, but that's too big a change\n       % to make right now.\n-      \\def\\indexbackslash{\\rawbackslashxx}%\n+      \\def\\indexbackslash{\\backslashcurfont}%\n       \\catcode`\\\\ = 0\n       \\escapechar = `\\\\\n       \\begindoublecolumns\n@@ -3463,7 +3542,10 @@\n   \\removelastskip\n   %\n   % We like breaks before the index initials, so insert a bonus.\n-  \\penalty -300\n+  \\nobreak\n+  \\vskip 0pt plus 3\\baselineskip\n+  \\penalty 0\n+  \\vskip 0pt plus -3\\baselineskip\n   %\n   % Typeset the initial.  Making this add up to a whole number of\n   % baselineskips increases the chance of the dots lining up from column\n@@ -3473,22 +3555,21 @@\n   % No shrink because it confuses \\balancecolumns.\n   \\vskip 1.67\\baselineskip plus .5\\baselineskip\n   \\leftline{\\secbf #1}%\n-  \\vskip .33\\baselineskip plus .1\\baselineskip\n-  %\n   % Do our best not to break after the initial.\n   \\nobreak\n+  \\vskip .33\\baselineskip plus .1\\baselineskip\n }}\n \n % \\entry typesets a paragraph consisting of the text (#1), dot leaders, and\n % then page number (#2) flushed to the right margin.  It is used for index\n % and table of contents entries.  The paragraph is indented by \\leftskip.\n %\n-% A straigtforward implementation would start like this:\n+% A straightforward implementation would start like this:\n %\t\\def\\entry#1#2{...\n % But this frozes the catcodes in the argument, and can cause problems to\n-% @code, which set's active ``-''.  This problem was fixed by a kludge---\n-% ``-'' was active throughout whole index, but this isn't what we really\n-% want.\n+% @code, which sets - active.  This problem was fixed by a kludge---\n+% ``-'' was active throughout whole index, but this isn't really right.\n+%\n % The right solution is to prevent \\entry from swallowing the whole text.\n %                                 --kasal, 21nov03\n \\def\\entry{%\n@@ -3559,7 +3640,8 @@\n       % part of (the primitive) \\par.  Without it, a spurious underfull\n       % \\hbox ensues.\n       \\ifpdf\n-\t\\pdfgettoks#1.\\ \\the\\toksA\n+\t\\pdfgettoks#1.%\n+\t\\ \\the\\toksA\n       \\else\n \t\\ #1%\n       \\fi\n@@ -3753,7 +3835,7 @@\n % We do the following ugly conditional instead of the above simple\n % construct for the sake of pdftex, which needs the actual\n % letter in the expansion, not just typeset.\n-% \n+%\n \\def\\appendixletter{%\n   \\ifnum\\appendixno=`A A%\n   \\else\\ifnum\\appendixno=`B B%\n@@ -3806,60 +3888,95 @@\n \\def\\lowersections{\\global\\advance\\secbase by 1}\n \\let\\down=\\lowersections % original BFox name\n \n-% Choose a numbered-heading macro\n-% #1 is heading level if unmodified by @raisesections or @lowersections\n-% #2 is text for heading\n-\\def\\numhead#1#2{\\absseclevel=\\secbase\\advance\\absseclevel by #1\n-\\ifcase\\absseclevel\n-      \\chapterzzz{#2}%\n-  \\or \\seczzz{#2}%\n-  \\or \\numberedsubseczzz{#2}%\n-  \\or \\numberedsubsubseczzz{#2}%\n+% we only have subsub.\n+\\chardef\\maxseclevel = 3\n+%\n+% A numbered section within an unnumbered changes to unnumbered too.\n+% To achive this, remember the \"biggest\" unnum. sec. we are currently in:\n+\\chardef\\unmlevel = \\maxseclevel\n+%\n+% Trace whether the current chapter is an appendix or not:\n+% \\chapheadtype is \"N\" or \"A\", unnumbered chapters are ignored.\n+\\def\\chapheadtype{N}\n+\n+% Choose a heading macro\n+% #1 is heading type\n+% #2 is heading level\n+% #3 is text for heading\n+\\def\\genhead#1#2#3{%\n+  % Compute the abs. sec. level:\n+  \\absseclevel=#2\n+  \\advance\\absseclevel by \\secbase\n+  % Make sure \\absseclevel doesn't fall outside the range:\n+  \\ifnum \\absseclevel < 0\n+    \\absseclevel = 0\n   \\else\n-    \\ifnum \\absseclevel<0 \\chapterzzz{#2}%\n-    \\else \\numberedsubsubseczzz{#2}%\n+    \\ifnum \\absseclevel > 3\n+      \\absseclevel = 3\n     \\fi\n   \\fi\n-  \\suppressfirstparagraphindent\n-}\n-\n-% like \\numhead, but chooses appendix heading levels\n-\\def\\apphead#1#2{\\absseclevel=\\secbase\\advance\\absseclevel by #1\n-\\ifcase\\absseclevel\n-      \\appendixzzz{#2}%\n-  \\or \\appendixsectionzzz{#2}%\n-  \\or \\appendixsubseczzz{#2}%\n-  \\or \\appendixsubsubseczzz{#2}%\n+  % The heading type:\n+  \\def\\headtype{#1}%\n+  \\if \\headtype U%\n+    \\ifnum \\absseclevel < \\unmlevel\n+      \\chardef\\unmlevel = \\absseclevel\n+    \\fi\n   \\else\n-    \\ifnum \\absseclevel<0 \\appendixzzz{#2}%\n-    \\else \\appendixsubsubseczzz{#2}%\n+    % Check for appendix sections:\n+    \\ifnum \\absseclevel = 0\n+      \\edef\\chapheadtype{\\headtype}%\n+    \\else\n+      \\if \\headtype A\\if \\chapheadtype N%\n+\t\\errmessage{@appendix... within a non-appendix chapter}%\n+      \\fi\\fi\n+    \\fi\n+    % Check for numbered within unnumbered:\n+    \\ifnum \\absseclevel > \\unmlevel\n+      \\def\\headtype{U}%\n+    \\else\n+      \\chardef\\unmlevel = 3\n     \\fi\n   \\fi\n-  \\suppressfirstparagraphindent\n-}\n-\n-% like \\numhead, but chooses numberless heading levels\n-\\def\\unnmhead#1#2{\\absseclevel=\\secbase\\advance\\absseclevel by #1\n-  \\ifcase\\absseclevel\n-      \\unnumberedzzz{#2}%\n-  \\or \\unnumberedseczzz{#2}%\n-  \\or \\unnumberedsubseczzz{#2}%\n-  \\or \\unnumberedsubsubseczzz{#2}%\n+  % Now print the heading:\n+  \\if \\headtype U%\n+    \\ifcase\\absseclevel\n+\t\\unnumberedzzz{#3}%\n+    \\or \\unnumberedseczzz{#3}%\n+    \\or \\unnumberedsubseczzz{#3}%\n+    \\or \\unnumberedsubsubseczzz{#3}%\n+    \\fi\n   \\else\n-    \\ifnum \\absseclevel<0 \\unnumberedzzz{#2}%\n-    \\else \\unnumberedsubsubseczzz{#2}%\n+    \\if \\headtype A%\n+      \\ifcase\\absseclevel\n+\t  \\appendixzzz{#3}%\n+      \\or \\appendixsectionzzz{#3}%\n+      \\or \\appendixsubseczzz{#3}%\n+      \\or \\appendixsubsubseczzz{#3}%\n+      \\fi\n+    \\else\n+      \\ifcase\\absseclevel\n+\t  \\chapterzzz{#3}%\n+      \\or \\seczzz{#3}%\n+      \\or \\numberedsubseczzz{#3}%\n+      \\or \\numberedsubsubseczzz{#3}%\n+      \\fi\n     \\fi\n   \\fi\n   \\suppressfirstparagraphindent\n }\n \n+% an interface:\n+\\def\\numhead{\\genhead N}\n+\\def\\apphead{\\genhead A}\n+\\def\\unnmhead{\\genhead U}\n+\n % @chapter, @appendix, @unnumbered.  Increment top-level counter, reset\n % all lower-level sectioning counters to zero.\n-% \n+%\n % Also set \\chaplevelprefix, which we prepend to @float sequence numbers\n % (e.g., figures), q.v.  By default (before any chapter), that is empty.\n \\let\\chaplevelprefix = \\empty\n-% \n+%\n \\outer\\parseargdef\\chapter{\\numhead0{#1}} % normally numhead0 calls chapterzzz\n \\def\\chapterzzz#1{%\n   % section resetting is \\global in case the chapter is in a group, such\n@@ -3899,9 +4016,6 @@\n   \\global\\let\\subsubsection = \\appendixsubsubsec\n }\n \n-% @centerchap is like @unnumbered, but the heading is centered.\n-\\outer\\parseargdef\\centerchap{{\\unnumberedyyy{#1}}}\n-\n \\outer\\parseargdef\\unnumbered{\\unnmhead0{#1}} % normally unnmhead0 calls unnumberedzzz\n \\def\\unnumberedzzz#1{%\n   \\global\\secno=0 \\global\\subsecno=0 \\global\\subsubsecno=0\n@@ -3932,6 +4046,16 @@\n   \\global\\let\\subsubsection = \\unnumberedsubsubsec\n }\n \n+% @centerchap is like @unnumbered, but the heading is centered.\n+\\outer\\parseargdef\\centerchap{%\n+  % Well, we could do the following in a group, but that would break\n+  % an assumption that \\chapmacro is called at the outermost level.\n+  % Thus we are safer this way:\t\t--kasal, 24feb04\n+  \\let\\centerparametersmaybe = \\centerparameters\n+  \\unnmhead0{#1}%\n+  \\let\\centerparametersmaybe = \\relax\n+}\n+\n % @top is like @unnumbered.\n \\let\\top\\unnumbered\n \n@@ -3998,24 +4122,6 @@\n                  {\\the\\unnumberedno.\\the\\secno.\\the\\subsecno.\\the\\subsubsecno}%\n }\n \n-% These are variants which are not \"outer\", so they can appear in @ifinfo.\n-% Actually, they are now be obsolete; ordinary section commands should work.\n-\\def\\infotop{\\parsearg\\unnumberedzzz}\n-\\def\\infounnumbered{\\parsearg\\unnumberedzzz}\n-\\def\\infounnumberedsec{\\parsearg\\unnumberedseczzz}\n-\\def\\infounnumberedsubsec{\\parsearg\\unnumberedsubseczzz}\n-\\def\\infounnumberedsubsubsec{\\parsearg\\unnumberedsubsubseczzz}\n-\n-\\def\\infoappendix{\\parsearg\\appendixzzz}\n-\\def\\infoappendixsec{\\parsearg\\appendixseczzz}\n-\\def\\infoappendixsubsec{\\parsearg\\appendixsubseczzz}\n-\\def\\infoappendixsubsubsec{\\parsearg\\appendixsubsubseczzz}\n-\n-\\def\\infochapter{\\parsearg\\chapterzzz}\n-\\def\\infosection{\\parsearg\\sectionzzz}\n-\\def\\infosubsection{\\parsearg\\subsectionzzz}\n-\\def\\infosubsubsection{\\parsearg\\subsubsectionzzz}\n-\n % These macros control what the section commands do, according\n % to what kind of chapter we are in (ordinary, appendix, or unnumbered).\n % Define them by default for a numbered chapter.\n@@ -4063,8 +4169,6 @@\n %%% Args are the skip and penalty (usually negative)\n \\def\\dobreak#1#2{\\par\\ifdim\\lastskip<#1\\removelastskip\\penalty#2\\vskip#1\\fi}\n \n-\\def\\setchapterstyle #1 {\\csname CHAPF#1\\endcsname}\n-\n %%% Define plain chapter starts, and page on/off switching for it\n % Parameter controlling skip before chapter headings (if needed)\n \n@@ -4095,21 +4199,17 @@\n \n \\CHAPPAGon\n \n-\\def\\CHAPFplain{%\n-\\global\\let\\chapmacro=\\chfplain\n-\\global\\let\\centerchapmacro=\\centerchfplain}\n-\n-% Normal chapter opening.\n-% \n+% Chapter opening.\n+%\n % #1 is the text, #2 is the section type (Ynumbered, Ynothing,\n % Yappendix, Yomitfromtoc), #3 the chapter number.\n-% \n+%\n % To test against our argument.\n \\def\\Ynothingkeyword{Ynothing}\n \\def\\Yomitfromtockeyword{Yomitfromtoc}\n \\def\\Yappendixkeyword{Yappendix}\n %\n-\\def\\chfplain#1#2#3{%\n+\\def\\chapmacro#1#2#3{%\n   \\pchapsepmacro\n   {%\n     \\chapfonts \\rm\n@@ -4170,45 +4270,40 @@\n \n % @centerchap -- centered and unnumbered.\n \\let\\centerparametersmaybe = \\relax\n-\\def\\centerchfplain#1{{%\n-  \\def\\centerparametersmaybe{%\n-    \\advance\\rightskip by 3\\rightskip\n-    \\leftskip = \\rightskip\n-    \\parfillskip = 0pt\n-  }%\n-  \\chfplain{#1}{Ynothing}{}%\n-}}\n+\\def\\centerparameters{%\n+  \\advance\\rightskip by 3\\rightskip\n+  \\leftskip = \\rightskip\n+  \\parfillskip = 0pt\n+}\n \n-\\CHAPFplain % The default\n \n % I don't think this chapter style is supported any more, so I'm not\n % updating it with the new noderef stuff.  We'll see.  --karl, 11aug03.\n-% \n+%\n+\\def\\setchapterstyle #1 {\\csname CHAPF#1\\endcsname}\n+%\n \\def\\unnchfopen #1{%\n \\chapoddpage {\\chapfonts \\vbox{\\hyphenpenalty=10000\\tolerance=5000\n                        \\parindent=0pt\\raggedright\n                        \\rm #1\\hfill}}\\bigskip \\par\\nobreak\n }\n-\n \\def\\chfopen #1#2{\\chapoddpage {\\chapfonts\n \\vbox to 3in{\\vfil \\hbox to\\hsize{\\hfil #2} \\hbox to\\hsize{\\hfil #1} \\vfil}}%\n \\par\\penalty 5000 %\n }\n-\n \\def\\centerchfopen #1{%\n \\chapoddpage {\\chapfonts \\vbox{\\hyphenpenalty=10000\\tolerance=5000\n                        \\parindent=0pt\n                        \\hfill {\\rm #1}\\hfill}}\\bigskip \\par\\nobreak\n }\n-\n \\def\\CHAPFopen{%\n-\\global\\let\\chapmacro=\\chfopen\n-\\global\\let\\centerchapmacro=\\centerchfopen}\n+  \\global\\let\\chapmacro=\\chfopen\n+  \\global\\let\\centerchapmacro=\\centerchfopen}\n \n \n % Section titles.  These macros combine the section number parts and\n % call the generic \\sectionheading to do the printing.\n-% \n+%\n \\newskip\\secheadingskip\n \\def\\secheadingbreak{\\dobreak \\secheadingskip{-1000}}\n \n@@ -4222,11 +4317,11 @@\n \n \n % Print any size, any type, section title.\n-% \n+%\n % #1 is the text, #2 is the section level (sec/subsec/subsubsec), #3 is\n % the section type for xrefs (Ynumbered, Ynothing, Yappendix), #4 is the\n % section number.\n-% \n+%\n \\def\\sectionheading#1#2#3#4{%\n   {%\n     % Switch to the right set of fonts.\n@@ -4283,14 +4378,14 @@\n   % glue accumulate.  (Not a breakpoint because it's preceded by a\n   % discardable item.)\n   \\vskip-\\parskip\n-  %\n-  % This \\nobreak is purely so the last item on the list is a \\penalty\n-  % of 10000.  This is so other code, for instance \\parsebodycommon, can\n-  % check for and avoid allowing breakpoints.  Otherwise, it would\n-  % insert a valid breakpoint between:\n+  % \n+  % This is purely so the last item on the list is a known \\penalty >\n+  % 10000.  This is so \\startdefun can avoid allowing breakpoints after\n+  % section headings.  Otherwise, it would insert a valid breakpoint between:\n+  % \n   %   @section sec-whatever\n   %   @deffn def-whatever\n-  \\nobreak\n+  \\penalty 10001\n }\n \n \n@@ -4299,14 +4394,14 @@\n \\newwrite\\tocfile\n \n % Write an entry to the toc file, opening it if necessary.\n-% Called from @chapter, etc.  \n-% \n+% Called from @chapter, etc.\n+%\n % Example usage: \\writetocentry{sec}{Section Name}{\\the\\chapno.\\the\\secno}\n % We append the current node name (if any) and page number as additional\n % arguments for the \\{chap,sec,...}entry macros which will eventually\n % read this.  The node name is used in the pdf outlines as the\n % destination to jump to.\n-% \n+%\n % We open the .toc file for writing here instead of at @setfilename (or\n % any other fixed time) so that @contents can be anywhere in the document.\n % But if #1 is `omit', then we don't do anything.  This is used for the\n@@ -4437,7 +4532,7 @@\n   % But use \\hss just in case.\n   % (This space doesn't include the extra space that gets added after\n   % the label; that gets put in by \\shortchapentry above.)\n-  % \n+  %\n   % We'd like to right-justify chapter numbers, but that looks strange\n   % with appendix letters.  And right-justifying numbers and\n   % left-justifying letters looks strange when there is less than 10\n@@ -4462,7 +4557,7 @@\n \n % Appendices, in the main contents.\n % Need the word Appendix, and a fixed-size box.\n-% \n+%\n \\def\\appendixbox#1{%\n   % We use M since it's probably the widest letter.\n   \\setbox0 = \\hbox{\\putwordAppendix{} M}%\n@@ -4490,7 +4585,8 @@\n \\def\\unnsubsubsecentry#1#2#3#4{\\dosubsubsecentry{#1}{#4}}\n \n % This parameter controls the indentation of the various levels.\n-\\newdimen\\tocindent \\tocindent = 2pc\n+% Same as \\defaultparindent.\n+\\newdimen\\tocindent \\tocindent = 15pt\n \n % Now for the actual typesetting. In all these, #1 is the text and #2 is the\n % page number.\n@@ -4634,15 +4730,16 @@\n % start of the next paragraph will insert \\parskip.\n %\n \\def\\aboveenvbreak{{%\n-  % =10000 instead of <10000 because of a special case in \\itemzzz, q.v.\n+  % =10000 instead of <10000 because of a special case in \\itemzzz and\n+  % \\sectionheading, q.v.\n   \\ifnum \\lastpenalty=10000 \\else\n     \\advance\\envskipamount by \\parskip\n     \\endgraf\n     \\ifdim\\lastskip<\\envskipamount\n       \\removelastskip\n       % it's not a good place to break if the last penalty was \\nobreak\n       % or better ...\n-      \\ifnum\\lastpenalty>10000 \\else \\penalty-50 \\fi\n+      \\ifnum\\lastpenalty<10000 \\penalty-50 \\fi\n       \\vskip\\envskipamount\n     \\fi\n   \\fi\n@@ -4736,17 +4833,36 @@\n   \\let\\exdent=\\nofillexdent\n }\n \n+% If you want all examples etc. small: @set dispenvsize small.\n+% If you want even small examples the full size: @set dispenvsize nosmall.\n+% This affects the following displayed environments:\n+%    @example, @display, @format, @lisp\n+%\n+\\def\\smallword{small}\n+\\def\\nosmallword{nosmall}\n+\\let\\SETdispenvsize\\relax\n+\\def\\setnormaldispenv{%\n+  \\ifx\\SETdispenvsize\\smallword\n+    \\smallexamplefonts \\rm\n+  \\fi\n+}\n+\\def\\setsmalldispenv{%\n+  \\ifx\\SETdispenvsize\\nosmallword\n+  \\else\n+    \\smallexamplefonts \\rm\n+  \\fi\n+}\n+\n % We often define two environments, @foo and @smallfoo.\n % Let's do it by one command:\n \\def\\makedispenv #1#2{\n-  \\expandafter\\envdef\\csname#1\\endcsname{#2}\n-  \\expandafter\\envdef\\csname small#1\\endcsname\n-    {\\smallexamplefonts \\rm #2}\n+  \\expandafter\\envdef\\csname#1\\endcsname {\\setnormaldispenv #2}\n+  \\expandafter\\envdef\\csname small#1\\endcsname {\\setsmalldispenv #2}\n   \\expandafter\\let\\csname E#1\\endcsname \\afterenvbreak\n   \\expandafter\\let\\csname Esmall#1\\endcsname \\afterenvbreak\n }\n \n-% And there are often two synonyms:\n+% Define two synonyms:\n \\def\\maketwodispenvs #1#2#3{\n   \\makedispenv{#1}{#3}\n   \\makedispenv{#2}{#3}\n@@ -4772,13 +4888,20 @@\n }\n \n % @format/@smallformat: same as @display except don't narrow margins.\n-% @flushleft (same as @format).  (Note: @smallflushleft not documeted.)\n %\n-\\maketwodispenvs {format}{flushleft}{%\n+\\makedispenv{format}{%\n+  \\let\\nonarrowing = t%\n+  \\nonfillstart\n+  \\gobble\n+}\n+\n+% @flushleft: same as @format, but doesn't obey \\SETdispenvsize.\n+\\envdef\\flushleft{%\n   \\let\\nonarrowing = t%\n   \\nonfillstart\n   \\gobble\n }\n+\\let\\Eflushleft = \\afterenvbreak\n \n % @flushright.\n %\n@@ -4792,7 +4915,9 @@\n \n \n % @quotation does normal linebreaking (hence we can't use \\nonfillstart)\n-% and narrows the margins.\n+% and narrows the margins.  We keep \\parskip nonzero in general, since\n+% we're doing normal filling.  So, when using \\aboveenvbreak and\n+% \\afterenvbreak, temporarily make \\parskip 0.\n %\n \\envdef\\quotation{%\n   {\\parskip=0pt \\aboveenvbreak}% because \\aboveenvbreak inserts \\parskip\n@@ -4809,8 +4934,16 @@\n }\n \n % We have retained a nonzero parskip for the environment, since we're\n-% doing normal filling. So to avoid extra space below the environment...\n-\\def\\Equotation{\\parskip = 0pt \\afterenvbreak}\n+% doing normal filling.\n+%\n+\\def\\Equotation{%\n+  \\par\n+  \\ifx\\quotationauthor\\undefined\\else\n+    % indent a bit.\n+    \\leftline{\\kern 2\\leftskip \\sl ---\\quotationauthor}%\n+  \\fi\n+  {\\parskip=0pt \\afterenvbreak}%\n+}\n \n % If we're given an argument, typeset it in bold with a colon after.\n \\def\\quotationlabel#1{%\n@@ -4959,8 +5092,7 @@\n }\n \n % @copying ... @end copying.\n-% Save the text away for @insertcopying later.  Many commands won't be\n-% allowed in this context, but that's ok.\n+% Save the text away for @insertcopying later.\n %\n % We save the uninterpreted tokens, rather than creating a box.\n % Saving the text in a box would be much easier, but then all the\n@@ -4969,62 +5101,14 @@\n % file; b) letting users define the frontmatter in as flexible order as\n % possible is very desirable.\n %\n-\\def\\copying{\\begingroup\n-  % Define a command to swallow text until we reach `@end copying'.\n-  % \\ is the escape char in this texinfo.tex file, so it is the\n-  % delimiter for the command; @ will be the escape char when we read\n-  % it, but that doesn't matter.\n-  \\long\\def\\docopying##1\\end copying{\\gdef\\copyingtext{##1}\\enddocopying}%\n-  %\n-  % We must preserve ^^M's in the input file; see \\insertcopying below.\n-  \\catcode`\\^^M = \\active\n-  \\docopying\n-}\n-\n-% What we do to finish off the copying text.\n-%\n-\\def\\enddocopying{\\endgroup\\ignorespaces}\n-\n-% @insertcopying.  Here we must play games with ^^M's.  On the one hand,\n-% we need them to delimit commands such as `@end quotation', so they\n-% must be active.  On the other hand, we certainly don't want every\n-% end-of-line to be a \\par, as would happen with the normal active\n-% definition of ^^M.  On the third hand, two ^^M's in a row should still\n-% generate a \\par.\n-%\n-% Our approach is to make ^^M insert a space and a penalty1 normally;\n-% then it can also check if \\lastpenalty=1.  If it does, then manually\n-% do \\par.\n-%\n-% This messes up the normal definitions of @c[omment], so we redefine\n-% it.  Similarly for @ignore.  (These commands are used in the gcc\n-% manual for man page generation.)\n-%\n-% Seems pretty fragile, most line-oriented commands will presumably\n-% fail, but for the limited use of getting the copying text (which\n-% should be quite simple) inserted, we can hope it's ok.\n-%\n-{\\catcode`\\^^M=\\active %\n-\\gdef\\insertcopying{\\begingroup %\n-  \\parindent = 0pt  % looks wrong on title page\n-  \\def^^M{%\n-    \\ifnum \\lastpenalty=1 %\n-      \\par %\n-    \\else %\n-      \\space \\penalty 1 %\n-    \\fi %\n-  }%\n-  %\n-  % Fix @c[omment] for catcode 13 ^^M's.\n-  \\def\\c##1^^M{\\ignorespaces}%\n-  \\let\\comment = \\c %\n-  %\n-  % Don't bother jumping through all the hoops that \\doignore does, it\n-  % would be very hard since the catcodes are already set.\n-  \\long\\def\\ignore##1\\end ignore{\\ignorespaces}%\n-  %\n-  \\copyingtext %\n-\\endgroup}%\n+\\def\\copying{\\checkenv{}\\begingroup\\scanargctxt\\docopying}\n+\\def\\docopying#1@end copying{\\endgroup\\def\\copyingtext{#1}}\n+%\n+\\def\\insertcopying{%\n+  \\begingroup\n+    \\parindent = 0pt  % paragraph indentation looks wrong on title page\n+    \\scanexp\\copyingtext\n+  \\endgroup\n }\n \n \\message{defuns,}\n@@ -5042,10 +5126,11 @@\n     % If there are two @def commands in a row, we'll have a \\nobreak,\n     % which is there to keep the function description together with its\n     % header.  But if there's nothing but headers, we need to allow a\n-    % break somewhere.  Check for penalty 10002 (inserted by\n-    % \\defargscommonending) instead of 10000, since the sectioning\n-    % commands insert a \\penalty10000, and we don't want to allow a break\n-    % between a section heading and a defun.\n+    % break somewhere.  Check specifically for penalty 10002, inserted\n+    % by \\defargscommonending, instead of 10000, since the sectioning\n+    % commands also insert a nobreak penalty, and we don't want to allow\n+    % a break between a section heading and a defun.\n+    % \n     \\ifnum\\lastpenalty=10002 \\penalty2000 \\fi\n     %\n     % Similarly, after a section heading, do not allow a break.\n@@ -5129,7 +5214,7 @@\n % \\deffngeneral {subind}category name args\n %\n \\def\\deffngeneral#1#2 #3 #4\\endheader{%\n-  % Remember that \\dosubin{fn}{xxx}{} is equivalent to \\doind{fn}{xxx}.\n+  % Remember that \\dosubind{fn}{foo}{} is equivalent to \\doind{fn}{foo}.\n   \\dosubind{fn}{\\code{#3}}{#1}%\n   \\defname{#2}{}{#3}\\magicamp\\defunargs{#4\\unskip}%\n }\n@@ -5205,7 +5290,7 @@\n % #1 is the category, such as \"Function\".\n % #2 is the return type, if any.\n % #3 is the function name.\n-% \n+%\n % We are followed by (but not passed) the arguments, if any.\n %\n \\def\\defname#1#2#3{%\n@@ -5259,15 +5344,16 @@\n   % arguments will be output next, if any.\n }\n \n-% Print arguments in slanted typewriter, prevent hyphenation at `-' chars.\n-% \n+% Print arguments in slanted roman (not ttsl), inconsistently with using\n+% tt for the name.  This is because literal text is sometimes needed in\n+% the argument list (groff manual), and ttsl and tt are not very\n+% distinguishable.  Prevent hyphenation at `-' chars.\n+%\n \\def\\defunargs#1{%\n-  % use sl by default (not ttsl), inconsistently with using tt for the\n-  % name.  This is because literal text is sometimes needed in the\n-  % argument list (groff manual), and ttsl and tt are not very\n-  % distinguishable.\n+  % use sl by default (not ttsl),\n   % tt for the names.\n   \\df \\sl \\hyphenchar\\font=0\n+  %\n   % On the other hand, if an argument has two dashes (for instance), we\n   % want a way to get ttsl.  Let's try @var for that.\n   \\let\\var=\\ttslanted\n@@ -5368,7 +5454,7 @@\n \\ifx\\eTeXversion\\undefined\n   \\newwrite\\macscribble\n   \\def\\scantokens#1{%\n-    \\toks0={#1\\endinput}%\n+    \\toks0={#1}%\n     \\immediate\\openout\\macscribble=\\jobname.tmp\n     \\immediate\\write\\macscribble{\\the\\toks0}%\n     \\immediate\\closeout\\macscribble\n@@ -5381,7 +5467,11 @@\n     \\newlinechar`\\^^M\n     \\let\\xeatspaces\\eatspaces\n     % Undo catcode changes of \\startcontents and \\doprintindex\n-    \\catcode`\\@=0 \\catcode`\\\\=\\other \\escapechar=`\\@\n+    % When called from @insertcopying or (short)caption, we need active\n+    % backslash to get it printed correctly.  Previously, we had\n+    % \\catcode`\\\\=\\other instead.  We'll see whether a problem appears\n+    % with macro expansion.\t\t\t\t--kasal, 19aug04\n+    \\catcode`\\@=0 \\catcode`\\\\=\\active \\escapechar=`\\@\n     % ... and \\example\n     \\spaceisspace\n     %\n@@ -5393,20 +5483,27 @@\n   \\endgroup\n }\n \n+\\def\\scanexp#1{%\n+  \\edef\\temp{\\noexpand\\scanmacro{#1}}%\n+  \\temp\n+}\n+\n \\newcount\\paramno   % Count of parameters\n \\newtoks\\macname    % Macro name\n \\newif\\ifrecursive  % Is it recursive?\n \\def\\macrolist{}    % List of all defined macros in the form\n                     % \\do\\macro1\\do\\macro2...\n \n % Utility routines.\n-% This does \\let #1 = #2, except with \\csnames.\n+% This does \\let #1 = #2, with \\csnames; that is,\n+%   \\let \\csname#1\\endcsname = \\csname#2\\endcsname\n+% (except of course we have to play expansion games).\n+% \n \\def\\cslet#1#2{%\n-\\expandafter\\expandafter\n-\\expandafter\\let\n-\\expandafter\\expandafter\n-\\csname#1\\endcsname\n-\\csname#2\\endcsname}\n+  \\expandafter\\let\n+  \\csname#1\\expandafter\\endcsname\n+  \\csname#2\\endcsname\n+}\n \n % Trim leading and trailing spaces off a string.\n % Concepts from aro-bend problem 15 (see CTAN).\n@@ -5433,30 +5530,36 @@\n % done by  making ^^M (\\endlinechar) catcode 12 when reading the macro\n % body, and then making it the \\newlinechar in \\scanmacro.\n \n-\\def\\macrobodyctxt{%\n-  \\catcode`\\~=\\other\n+\\def\\scanctxt{%\n+  \\catcode`\\\"=\\other\n+  \\catcode`\\+=\\other\n+  \\catcode`\\<=\\other\n+  \\catcode`\\>=\\other\n+  \\catcode`\\@=\\other\n   \\catcode`\\^=\\other\n   \\catcode`\\_=\\other\n   \\catcode`\\|=\\other\n-  \\catcode`\\<=\\other\n-  \\catcode`\\>=\\other\n-  \\catcode`\\+=\\other\n+  \\catcode`\\~=\\other\n+}\n+\n+\\def\\scanargctxt{%\n+  \\scanctxt\n+  \\catcode`\\\\=\\other\n+  \\catcode`\\^^M=\\other\n+}\n+\n+\\def\\macrobodyctxt{%\n+  \\scanctxt\n   \\catcode`\\{=\\other\n   \\catcode`\\}=\\other\n-  \\catcode`\\@=\\other\n   \\catcode`\\^^M=\\other\n-  \\usembodybackslash}\n+  \\usembodybackslash\n+}\n \n \\def\\macroargctxt{%\n-  \\catcode`\\~=\\other\n-  \\catcode`\\^=\\other\n-  \\catcode`\\_=\\other\n-  \\catcode`\\|=\\other\n-  \\catcode`\\<=\\other\n-  \\catcode`\\>=\\other\n-  \\catcode`\\+=\\other\n-  \\catcode`\\@=\\other\n-  \\catcode`\\\\=\\other}\n+  \\scanctxt\n+  \\catcode`\\\\=\\other\n+}\n \n % \\mbodybackslash is the definition of \\ in @macro bodies.\n % It maps \\foo\\ => \\csname macarg.foo\\endcsname => #N\n@@ -5638,11 +5741,25 @@\n     \\expandafter\\parsearg\n   \\fi \\next}\n \n-% We mant to disable all macros during \\shipout so that they are not\n+% We want to disable all macros during \\shipout so that they are not\n % expanded by \\write.\n \\def\\turnoffmacros{\\begingroup \\def\\do##1{\\let\\noexpand##1=\\relax}%\n   \\edef\\next{\\macrolist}\\expandafter\\endgroup\\next}\n \n+% For \\indexnofonts, we need to get rid of all macros, leaving only the\n+% arguments (if present).  Of course this is not nearly correct, but it\n+% is the best we can do for now.  makeinfo does not expand macros in the\n+% argument to @deffn, which ends up writing an index entry, and texindex\n+% isn't prepared for an index sort entry that starts with \\.\n+% \n+% Since macro invocations are followed by braces, we can just redefine them\n+% to take a single TeX argument.  The case of a macro invocation that\n+% goes to end-of-line is not handled.\n+% \n+\\def\\emptyusermacros{\\begingroup\n+  \\def\\do##1{\\let\\noexpand##1=\\noexpand\\asis}%\n+  \\edef\\next{\\macrolist}\\expandafter\\endgroup\\next}\n+\n \n % @alias.\n % We need some trickery to remove the optional spaces around the equal\n@@ -5671,15 +5788,24 @@\n   node \\samp{\\ignorespaces#1{}}}\n \n % @node's only job in TeX is to define \\lastnode, which is used in\n-% cross-references.\n-\\parseargdef\\node{\\checkenv{}\\nodexxx #1,\\finishnodeparse}\n-\\def\\nodexxx#1,#2\\finishnodeparse{\\gdef\\lastnode{#1}}\n+% cross-references.  The @node line might or might not have commas, and\n+% might or might not have spaces before the first comma, like:\n+% @node foo , bar , ...\n+% We don't want such trailing spaces in the node name.\n+%\n+\\parseargdef\\node{\\checkenv{}\\donode #1 ,\\finishnodeparse}\n+%\n+% also remove a trailing comma, in case of something like this:\n+% @node Help-Cross,  ,  , Cross-refs\n+\\def\\donode#1 ,#2\\finishnodeparse{\\dodonode #1,\\finishnodeparse}\n+\\def\\dodonode#1,#2\\finishnodeparse{\\gdef\\lastnode{#1}}\n+\n \\let\\nwnode=\\node\n \\let\\lastnode=\\empty\n \n % Write a cross-reference definition for the current node.  #1 is the\n % type (Ynumbered, Yappendix, Ynothing).\n-% \n+%\n \\def\\donoderef#1{%\n   \\ifx\\lastnode\\empty\\else\n     \\setref{\\lastnode}{#1}%\n@@ -5697,22 +5823,21 @@\n \n % \\setref{NAME}{SNT} defines a cross-reference point NAME (a node or an\n % anchor), which consists of three parts:\n-% 1) NAME-title - the current sectioning name, taken from \\thissection;\n-% 2) NAME-snt   - section number and type, defined as the SNT arg;\n+% 1) NAME-title - the current sectioning name taken from \\thissection,\n+%                 or the anchor name.\n+% 2) NAME-snt   - section number and type, passed as the SNT arg, or\n+%                 empty for anchors.\n % 3) NAME-pg    - the page number.\n-% This is called from \\donoderef, \\anchor, and \\dofloat.\n-% \n-% We take care not to fully expand the title, since it may contain\n-% arbitrary macros.\n %\n-% Use \\turnoffactive so that punctuation chars such as underscore\n-% and backslash work in node names.\n+% This is called from \\donoderef, \\anchor, and \\dofloat.  In the case of\n+% floats, there is an additional part, which is not written here:\n+% 4) NAME-lof   - the text as it should appear in a @listoffloats.\n %\n \\def\\setref#1#2{%\n   \\pdfmkdest{#1}%\n   \\iflinks\n     {%\n-      \\indexnofonts\n+      \\atdummies  % preserve commands, but don't expand them\n       \\turnoffactive\n       \\otherbackslash\n       \\edef\\writexrdef##1##2{%\n@@ -5790,9 +5915,9 @@\n     \\turnoffactive\n     \\otherbackslash\n     \\expandafter\\global\\expandafter\\let\\expandafter\\Xthisreftitle\n-      \\csname X#1-title\\endcsname\n+      \\csname XR#1-title\\endcsname\n   }%\n-  \\ifx \\Xthisreftitle \\floatmagic\n+  \\iffloat\\Xthisreftitle\n     % If the user specified the print name (third arg) to the ref,\n     % print it instead of our usual \"Figure 1.2\".\n     \\ifdim\\wd0 = 0pt\n@@ -5802,13 +5927,13 @@\n     \\fi\n     %\n     % if the user also gave the printed manual name (fifth arg), append\n-    % \"in MANUALNAME\". \n+    % \"in MANUALNAME\".\n     \\ifdim \\wd1 > 0pt\n       \\space \\putwordin{} \\cite{\\printedmanual}%\n     \\fi\n   \\else\n     % node/anchor (non-float) references.\n-    % \n+    %\n     % If we use \\unhbox0 and \\unhbox1 to print the node names, TeX does not\n     % insert empty discretionaries after hyphens, which means that it will\n     % not find a line break at a hyphen in a node names.  Since some manuals\n@@ -5885,7 +6010,7 @@\n     \\indexnofonts\n     \\otherbackslash\n     \\expandafter\\global\\expandafter\\let\\expandafter\\thisrefX\n-      \\csname X#1\\endcsname\n+      \\csname XR#1\\endcsname\n   }%\n   \\ifx\\thisrefX\\relax\n     % If not defined, say something at least.\n@@ -5907,12 +6032,35 @@\n   #2% Output the suffix in any case.\n }\n \n-% This is the macro invoked by entries in the aux file.\n+% This is the macro invoked by entries in the aux file.  Usually it's\n+% just a \\def (we prepend XR to the control sequence name to avoid\n+% collisions).  But if this is a float type, we have more work to do.\n %\n-\\def\\xrdef#1{\\expandafter\\gdef\\csname X#1\\endcsname}\n+\\def\\xrdef#1#2{%\n+  \\expandafter\\gdef\\csname XR#1\\endcsname{#2}% remember this xref value.\n+  %\n+  % Was that xref control sequence that we just defined for a float?\n+  \\expandafter\\iffloat\\csname XR#1\\endcsname\n+    % it was a float, and we have the (safe) float type in \\iffloattype.\n+    \\expandafter\\let\\expandafter\\floatlist\n+      \\csname floatlist\\iffloattype\\endcsname\n+    %\n+    % Is this the first time we've seen this float type?\n+    \\expandafter\\ifx\\floatlist\\relax\n+      \\toks0 = {\\do}% yes, so just \\do\n+    \\else\n+      % had it before, so preserve previous elements in list.\n+      \\toks0 = \\expandafter{\\floatlist\\do}%\n+    \\fi\n+    %\n+    % Remember this xref in the control sequence \\floatlistFLOATTYPE,\n+    % for later use in \\listoffloats.\n+    \\expandafter\\xdef\\csname floatlist\\iffloattype\\endcsname{\\the\\toks0{#1}}%\n+  \\fi\n+}\n \n % Read the last existing aux file, if any.  No error if none exists.\n-% \n+%\n \\def\\tryauxfile{%\n   \\openin 1 \\jobname.aux\n   \\ifeof 1 \\else\n@@ -5980,7 +6128,16 @@\n   \\catcode`\\%=\\other\n   \\catcode`+=\\other % avoid \\+ for paranoia even though we've turned it off\n   %\n-  % Make the characters 128-255 be printing characters\n+  % This is to support \\ in node names and titles, since the \\\n+  % characters end up in a \\csname.  It's easier than\n+  % leaving it active and making its active definition an actual \\\n+  % character.  What I don't understand is why it works in the *value*\n+  % of the xrdef.  Seems like it should be a catcode12 \\, and that\n+  % should not typeset properly.  But it works, so I'm moving on for\n+  % now.  --karl, 15jan04.\n+  \\catcode`\\\\=\\other\n+  %\n+  % Make the characters 128-255 be printing characters.\n   {%\n     \\count 1=128\n     \\def\\loop{%\n@@ -5990,7 +6147,7 @@\n     }%\n   }%\n   %\n-  % @ is our escape character in .aux files.\n+  % @ is our escape character in .aux files, and we need braces.\n   \\catcode`\\{=1\n   \\catcode`\\}=2\n   \\catcode`\\@=0\n@@ -6097,8 +6254,8 @@\n   \\fi\n }\n \n-% This \\insert replacements works for both \\insert\\footins{xx} and\n-% \\insert\\footins\\bgroup xx\\egroup, but it doesn't work for \\insert27{xx}.\n+% This \\insert replacement works for both \\insert\\footins{foo} and\n+% \\insert\\footins\\bgroup foo\\egroup, but it doesn't work for \\insert27{foo}.\n %\n \\def\\saveinsert#1{%\n   \\edef\\next{\\noexpand\\savetobox \\makeSAVEname#1}%\n@@ -6208,99 +6365,181 @@\n \\endgroup}\n \n \n-% @float FLOATTYPE,LOC ... @end float for displayed figures, tables, etc.\n-% We don't actually implement floating yet, we just plop the float \"here\".\n-% But it seemed the best name for the future.\n-% \n-\\envparseargdef\\float{\\dofloat #1,,,\\finish}\n+% @float FLOATTYPE,LABEL,LOC ... @end float for displayed figures, tables,\n+% etc.  We don't actually implement floating yet, we always include the\n+% float \"here\".  But it seemed the best name for the future.\n+%\n+\\envparseargdef\\float{\\eatcommaspace\\eatcommaspace\\dofloat#1, , ,\\finish}\n+\n+% There may be a space before second and/or third parameter; delete it.\n+\\def\\eatcommaspace#1, {#1,}\n \n % #1 is the optional FLOATTYPE, the text label for this float, typically\n % \"Figure\", \"Table\", \"Example\", etc.  Can't contain commas.  If omitted,\n % this float will not be numbered and cannot be referred to.\n-% \n+%\n % #2 is the optional xref label.  Also must be present for the float to\n % be referable.\n-% \n+%\n % #3 is the optional positioning argument; for now, it is ignored.  It\n % will somehow specify the positions allowed to float to (here, top, bottom).\n-% \n+%\n % We keep a separate counter for each FLOATTYPE, which we reset at each\n % chapter-level command.\n \\let\\resetallfloatnos=\\empty\n %\n \\def\\dofloat#1,#2,#3,#4\\finish{%\n+  \\let\\thiscaption=\\empty\n+  \\let\\thisshortcaption=\\empty\n+  %\n   % don't lose footnotes inside @float.\n+  %\n+  % BEWARE: when the floats start float, we have to issue warning whenever an\n+  % insert appears inside a float which could possibly float. --kasal, 26may04\n+  %\n   \\startsavinginserts\n   %\n+  % We can't be used inside a paragraph.\n+  \\par\n+  %\n   \\vtop\\bgroup\n     \\def\\floattype{#1}%\n     \\def\\floatlabel{#2}%\n     \\def\\floatloc{#3}% we do nothing with this yet.\n-    % xx should we indent the whole thing? center it?\n     %\n-    \\ifx\\floattype\\empty \\else\n-      % For now, assume the FLOATTYPE is entirely letters, so we just use it\n-      % in a control sequence name literally.  We want each FLOATTYPE to be\n-      % numbered separately (Figure 1, Table 1, Figure 2, ...).\n-      \\expandafter\\getfloatno\\csname\\floattype floatno\\endcsname\n+    \\ifx\\floattype\\empty\n+      \\let\\safefloattype=\\empty\n+    \\else\n+      {%\n+        % the floattype might have accents or other special characters,\n+        % but we need to use it in a control sequence name.\n+        \\indexnofonts\n+        \\turnoffactive\n+        \\xdef\\safefloattype{\\floattype}%\n+      }%\n+    \\fi\n+    %\n+    % If label is given but no type, we handle that as the empty type.\n+    \\ifx\\floatlabel\\empty \\else\n+      % We want each FLOATTYPE to be numbered separately (Figure 1,\n+      % Table 1, Figure 2, ...).  (And if no label, no number.)\n+      %\n+      \\expandafter\\getfloatno\\csname\\safefloattype floatno\\endcsname\n       \\global\\advance\\floatno by 1\n       %\n-      \\ifx\\floatlabel\\empty \\else\n-\t{%\n-\t  % This magic value for \\thissection is output by \\setref as the\n-\t  % XREFLABEL-title value.  \\xrefX uses it to distinguish float\n-\t  % labels (which have a completely different output format) from\n-\t  % nodes and xref labels.\n-\t  % \n-\t  \\let\\thissection=\\floatmagic\n-\t  \\setref{\\floatlabel}{Yfloat}%\n-\t}%\n-      \\fi\n+      {%\n+        % This magic value for \\thissection is output by \\setref as the\n+        % XREFLABEL-title value.  \\xrefX uses it to distinguish float\n+        % labels (which have a completely different output format) from\n+        % node and anchor labels.  And \\xrdef uses it to construct the\n+        % lists of floats.\n+        %\n+        \\edef\\thissection{\\floatmagic=\\safefloattype}%\n+        \\setref{\\floatlabel}{Yfloat}%\n+      }%\n     \\fi\n+    %\n+    % start with \\parskip glue, I guess.\n+    \\vskip\\parskip\n+    %\n+    % Don't suppress indentation if a float happens to start a section.\n+    \\restorefirstparagraphindent\n }\n \n-% we have four possibilities:\n-% @float Foo & @caption{Cap}: Foo 1.1: Cap\n-% @float Foo & no caption:    Foo 1.1\n-% @float & @caption{Cap}:     Cap\n+% we have these possibilities:\n+% @float Foo,lbl & @caption{Cap}: Foo 1.1: Cap\n+% @float Foo,lbl & no caption:    Foo 1.1\n+% @float Foo & @caption{Cap}:     Foo: Cap\n+% @float Foo & no caption:        Foo\n+% @float ,lbl & Caption{Cap}:     1.1: Cap\n+% @float ,lbl & no caption:       1.1\n+% @float & @caption{Cap}:         Cap\n % @float & no caption:\n %\n \\def\\Efloat{%\n-    \\let\\printedsomething = \\empty\n+    \\let\\floatident = \\empty\n     %\n-    \\ifx\\floattype\\empty \\else\n-      \\vskip.5\\parskip  % space above caption\n-      %\n-      % Print the float number preceded by the chapter-level number\n-      % (empty in the case of unnumbered).  Although there are other\n-      % styles of float numbering, we hardwire this one.\n-      \\floattype\\space\\chaplevelprefix\\the\\floatno\n-      \\let\\printedsomething = t%\n+    % In all cases, if we have a float type, it comes first.\n+    \\ifx\\floattype\\empty \\else \\def\\floatident{\\floattype}\\fi\n+    %\n+    % If we have an xref label, the number comes next.\n+    \\ifx\\floatlabel\\empty \\else\n+      \\ifx\\floattype\\empty \\else % if also had float type, need tie first.\n+        \\appendtomacro\\floatident{\\tie}%\n+      \\fi\n+      % the number.\n+      \\appendtomacro\\floatident{\\chaplevelprefix\\the\\floatno}%\n     \\fi\n     %\n+    % Start the printed caption with what we've constructed in\n+    % \\floatident, but keep it separate; we need \\floatident again.\n+    \\let\\captionline = \\floatident\n+    %\n     \\ifx\\thiscaption\\empty \\else\n-      \\ifx\\printedsomething\\empty\n-\t\\vskip.5\\parskip  % space above caption\n-      \\else\n-\t:\\space  % had a number, so print a colon.\n+      \\ifx\\floatident\\empty \\else\n+\t\\appendtomacro\\captionline{: }% had ident, so need a colon between\n       \\fi\n       %\n-      % Print caption text.\n-      \\thiscaption\n-      \\let\\printedsomething = t%\n+      % caption text.\n+      \\appendtomacro\\captionline{\\scanexp\\thiscaption}%\n     \\fi\n     %\n-    % Space below caption, if we printed anything.\n-    \\ifx\\printedsomething\\empty \\else \\vskip\\parskip \\fi\n+    % If we have anything to print, print it, with space before.\n+    % Eventually this needs to become an \\insert.\n+    \\ifx\\captionline\\empty \\else\n+      \\vskip.5\\parskip\n+      \\captionline\n+      %\n+      % Space below caption.\n+      \\vskip\\parskip\n+    \\fi\n     %\n+    % If have an xref label, write the list of floats info.  Do this\n+    % after the caption, to avoid chance of it being a breakpoint.\n+    \\ifx\\floatlabel\\empty \\else\n+      % Write the text that goes in the lof to the aux file as\n+      % \\floatlabel-lof.  Besides \\floatident, we include the short\n+      % caption if specified, else the full caption if specified, else nothing.\n+      {%\n+        \\atdummies \\turnoffactive \\otherbackslash\n+        % since we read the caption text in the macro world, where ^^M\n+        % is turned into a normal character, we have to scan it back, so\n+        % we don't write the literal three characters \"^^M\" into the aux file.\n+\t\\scanexp{%\n+\t  \\xdef\\noexpand\\gtemp{%\n+\t    \\ifx\\thisshortcaption\\empty\n+\t      \\thiscaption\n+\t    \\else\n+\t      \\thisshortcaption\n+\t    \\fi\n+\t  }%\n+\t}%\n+        \\immediate\\write\\auxfile{@xrdef{\\floatlabel-lof}{\\floatident\n+\t  \\ifx\\gtemp\\empty \\else : \\gtemp \\fi}}%\n+      }%\n+    \\fi\n   \\egroup  % end of \\vtop\n+  %\n+  % place the captured inserts\n+  %\n+  % BEWARE: when the floats start float, we have to issue warning whenever an\n+  % insert appears inside a float which could possibly float. --kasal, 26may04\n+  %\n   \\checkinserts\n }\n \n-\\def\\caption#1{\\checkenv\\float \\def\\thiscaption{#1}}\n-\\def\\shortcaption#1{\\checkenv\\float \\def\\thisshortcaption{#1}}\n-\\let\\thiscaption=\\empty\n-\\let\\thisshortcaption=\\empty\n+% Append the tokens #2 to the definition of macro #1, not expanding either.\n+%\n+\\def\\appendtomacro#1#2{%\n+  \\expandafter\\def\\expandafter#1\\expandafter{#1#2}%\n+}\n+\n+% @caption, @shortcaption\n+%\n+\\def\\caption{\\docaption\\thiscaption}\n+\\def\\shortcaption{\\docaption\\thisshortcaption}\n+\\def\\docaption{\\checkenv\\float \\bgroup\\scanargctxt\\defcaption}\n+\\def\\defcaption#1#2{\\egroup \\def#1{#2}}\n \n % The parameter is the control sequence identifying the counter we are\n % going to use.  Create it if it doesn't exist and assign it to \\floatno.\n@@ -6319,17 +6558,75 @@\n % \\setref calls this to get the XREFLABEL-snt value.  We want an @xref\n % to the FLOATLABEL to expand to \"Figure 3.1\".  We call \\setref when we\n % first read the @float command.\n-% \n-\\def\\Yfloat{\\floattype @tie{}\\chaplevelprefix\\the\\floatno}%\n+%\n+\\def\\Yfloat{\\floattype@tie \\chaplevelprefix\\the\\floatno}%\n \n % Magic string used for the XREFLABEL-title value, so \\xrefX can\n % distinguish floats from other xref types.\n \\def\\floatmagic{!!float!!}\n \n+% #1 is the control sequence we are passed; we expand into a conditional\n+% which is true if #1 represents a float ref.  That is, the magic\n+% \\thissection value which we \\setref above.\n+%\n+\\def\\iffloat#1{\\expandafter\\doiffloat#1==\\finish}\n+%\n+% #1 is (maybe) the \\floatmagic string.  If so, #2 will be the\n+% (safe) float type for this float.  We set \\iffloattype to #2.\n+%\n+\\def\\doiffloat#1=#2=#3\\finish{%\n+  \\def\\temp{#1}%\n+  \\def\\iffloattype{#2}%\n+  \\ifx\\temp\\floatmagic\n+}\n+\n % @listoffloats FLOATTYPE - print a list of floats like a table of contents.\n-\\parseargdef\\listoffloats{%xx\n+%\n+\\parseargdef\\listoffloats{%\n+  \\def\\floattype{#1}% floattype\n+  {%\n+    % the floattype might have accents or other special characters,\n+    % but we need to use it in a control sequence name.\n+    \\indexnofonts\n+    \\turnoffactive\n+    \\xdef\\safefloattype{\\floattype}%\n+  }%\n+  %\n+  % \\xrdef saves the floats as a \\do-list in \\floatlistSAFEFLOATTYPE.\n+  \\expandafter\\ifx\\csname floatlist\\safefloattype\\endcsname \\relax\n+    \\ifhavexrefs\n+      % if the user said @listoffloats foo but never @float foo.\n+      \\message{\\linenumber No `\\safefloattype' floats to list.}%\n+    \\fi\n+  \\else\n+    \\begingroup\n+      \\leftskip=\\tocindent  % indent these entries like a toc\n+      \\let\\do=\\listoffloatsdo\n+      \\csname floatlist\\safefloattype\\endcsname\n+    \\endgroup\n+  \\fi\n }\n \n+% This is called on each entry in a list of floats.  We're passed the\n+% xref label, in the form LABEL-title, which is how we save it in the\n+% aux file.  We strip off the -title and look up \\XRLABEL-lof, which\n+% has the text we're supposed to typeset here.\n+%\n+% Figures without xref labels will not be included in the list (since\n+% they won't appear in the aux file).\n+%\n+\\def\\listoffloatsdo#1{\\listoffloatsdoentry#1\\finish}\n+\\def\\listoffloatsdoentry#1-title\\finish{{%\n+  % Can't fully expand XR#1-lof because it can contain anything.  Just\n+  % pass the control sequence.  On the other hand, XR#1-pg is just the\n+  % page number, and we want to fully expand that so we can get a link\n+  % in pdf output.\n+  \\toksA = \\expandafter{\\csname XR#1-lof\\endcsname}%\n+  %\n+  % use the same \\entry macro we use to generate the TOC and index.\n+  \\edef\\writeentry{\\noexpand\\entry{\\the\\toksA}{\\csname XR#1-pg\\endcsname}}%\n+  \\writeentry\n+}}\n \n \\message{localization,}\n % and i18n.\n@@ -6636,23 +6933,24 @@\n \n \\catcode`\\@=0\n \n-% \\rawbackslashxx outputs one backslash character in current font,\n+% \\backslashcurfont outputs one backslash character in current font,\n % as in \\char`\\\\.\n-\\global\\chardef\\rawbackslashxx=`\\\\\n+\\global\\chardef\\backslashcurfont=`\\\\\n+\\global\\let\\rawbackslashxx=\\backslashcurfont  % let existing .??s files work\n \n-% \\rawbackslash defines an active \\ to do \\rawbackslashxx.\n+% \\rawbackslash defines an active \\ to do \\backslashcurfont.\n % \\otherbackslash defines an active \\ to be a literal `\\' character with\n % catcode other.\n {\\catcode`\\\\=\\active\n- @gdef@rawbackslash{@let\\=@rawbackslashxx}\n+ @gdef@rawbackslash{@let\\=@backslashcurfont}\n  @gdef@otherbackslash{@let\\=@realbackslash}\n }\n \n % \\realbackslash is an actual character `\\' with catcode other.\n {\\catcode`\\\\=\\other @gdef@realbackslash{\\}}\n \n % \\normalbackslash outputs one backslash in fixed width font.\n-\\def\\normalbackslash{{\\tt\\rawbackslashxx}}\n+\\def\\normalbackslash{{\\tt\\backslashcurfont}}\n \n \\catcode`\\\\=\\active\n "}]}