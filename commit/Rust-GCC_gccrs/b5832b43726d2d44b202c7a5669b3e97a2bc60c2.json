{"sha": "b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4MzJiNDM3MjZkMmQ0NGIyMDJjN2E1NjY5YjNlOTdhMmJjNjBjMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-29T19:44:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-29T19:44:42Z"}, "message": "Suggested by Richard Henderson and Richard Kenner:\n\n\t* combine.c (recog_for_combine): Use the fake recog\n\tonly if instruction does not match.\n\t* rtl.h (NOOP_MOVE_INSN_CODE): New.\n\t* rtlanal.c (noop_move_p): Always return 1 for NOOP_MOVE_INSN_CODE.\n\n\t* combine.c (try_combine): Discover noop jump as direct jump.\n\nFrom-SVN: r44464", "tree": {"sha": "19cc9892c443cb833b456226ee6217fae10f6a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19cc9892c443cb833b456226ee6217fae10f6a91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/comments", "author": null, "committer": null, "parents": [{"sha": "12285d9df86f4fa4ece1667265fe129e25287907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12285d9df86f4fa4ece1667265fe129e25287907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12285d9df86f4fa4ece1667265fe129e25287907"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "1c842862603ec92731c0aab4f3ca143ea27bc9dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "patch": "@@ -1,3 +1,13 @@\n+Sun Jul 29 21:38:45 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\tSuggested by Richard Henderson and Richard Kenner:\n+\t* combine.c (recog_for_combine): Use the fake recog\n+\tonly if instruction does not match.\n+\t* rtl.h (NOOP_MOVE_INSN_CODE): New.\n+\t* rtlanal.c (noop_move_p): Always return 1 for NOOP_MOVE_INSN_CODE.\n+\n+\t* combine.c (try_combine): Discover noop jump as direct jump.\n+\n 2001-07-29  Daniel Berlin  <dan@cgsoftware.com>\n \n \t* df.c (df_rd_global_compute): Add successors to worklist, not"}, {"sha": "4ece85a68129e844c40e03252de5e8021ca3c634", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "patch": "@@ -2763,7 +2763,10 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n        BARRIER following it since it may have initially been a\n        conditional jump.  It may also be the last nonnote insn.  */\n \n-    if (GET_CODE (newpat) == RETURN || any_uncondjump_p (i3))\n+    if (GET_CODE (newpat) == RETURN || any_uncondjump_p (i3)\n+\t|| (GET_CODE (newpat) == SET\n+\t    && SET_SRC (newpat) == pc_rtx\n+\t    && SET_DEST (newpat) == pc_rtx))\n       {\n \t*new_direct_jump_p = 1;\n \n@@ -9600,12 +9603,7 @@ recog_for_combine (pnewpat, insn, pnotes)\n   old_notes = REG_NOTES (insn);\n   REG_NOTES (insn) = 0;\n \n-  /* Is the result of combination a valid instruction?\n-     Recognize all noop sets, these will be killed by followup pass.  */\n-  if (GET_CODE (pat) == SET && set_noop_p (pat))\n-    insn_code_number = INT_MAX;\n-  else\n-    insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n+  insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n \n   /* If it isn't, there is the possibility that we previously had an insn\n      that clobbered some register as a side effect, but the combined\n@@ -9630,13 +9628,13 @@ recog_for_combine (pnewpat, insn, pnotes)\n       if (pos == 1)\n \tpat = XVECEXP (pat, 0, 0);\n \n-      /* Recognize all noop sets, these will be killed by followup pass.  */\n-      if (GET_CODE (pat) == SET && set_noop_p (pat))\n-\tinsn_code_number = INT_MAX;\n-      else\n-        insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n+      insn_code_number = recog (pat, insn, &num_clobbers_to_add);\n     }\n \n+  /* Recognize all noop sets, these will be killed by followup pass.  */\n+  if (insn_code_number < 0 && GET_CODE (pat) == SET && set_noop_p (pat))\n+    insn_code_number = NOOP_MOVE_INSN_CODE, num_clobbers_to_add = 0;\n+\n   REG_NOTES (insn) = old_notes;\n \n   /* If we had any clobbers to add, make a new pattern than contains"}, {"sha": "da454c282d6a8bd7c62742099897381c8a26ba94", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "patch": "@@ -35,6 +35,10 @@ struct function;\n union tree_node;\n #endif\n \n+/* Value used by some passes to \"recognize\" noop moves as valid instructions.\n+ */\n+#define NOOP_MOVE_INSN_CODE\tINT_MAX\n+\n /* Register Transfer Language EXPRESSIONS CODES */\n \n #define RTX_CODE\tenum rtx_code"}, {"sha": "92220f6467a6a27cedbba9de8f19e0da94559010", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5832b43726d2d44b202c7a5669b3e97a2bc60c2/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b5832b43726d2d44b202c7a5669b3e97a2bc60c2", "patch": "@@ -1030,6 +1030,9 @@ noop_move_p (insn)\n {\n   rtx pat = PATTERN (insn);\n \n+  if (INSN_CODE (insn) == NOOP_MOVE_INSN_CODE)\n+    return 1;\n+\n   /* Insns carrying these notes are useful later on.  */\n   if (find_reg_note (insn, REG_EQUAL, NULL_RTX))\n     return 0;"}]}