{"sha": "6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYxODczYTFjZmZlZTNmYzU5YTFhMGY0NzliNThiOGE4MmJjNGUyYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-03-28T14:48:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-03-28T14:48:43Z"}, "message": "tree-pass.h (pass_fixup_cfg): New pass.\n\n\t* tree-pass.h (pass_fixup_cfg): New pass.\n\t* ipa-inline.c (inline_transform): Set\n\talways_inline_functions_inlined/after_inlining.\n\t* tree-optimize.c (execute_fixup_cfg): Do not set them here.\n\t(pass_fixup_cfg): New pass.\n\t* passes.c (init_optimization_passes): Add fixup_cfg.\n\nFrom-SVN: r145191", "tree": {"sha": "6f748522fd5120afcb6df2c0a38d96ddde706e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f748522fd5120afcb6df2c0a38d96ddde706e17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/comments", "author": null, "committer": null, "parents": [{"sha": "08cf8f5852573752a41d3db8a15c675ddbb34f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cf8f5852573752a41d3db8a15c675ddbb34f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cf8f5852573752a41d3db8a15c675ddbb34f92"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "e1fac756fedb922f44331655f456600fd33d28f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "patch": "@@ -1,3 +1,12 @@\n+2009-03-28  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-pass.h (pass_fixup_cfg): New pass.\n+\t* ipa-inline.c (inline_transform): Set\n+\talways_inline_functions_inlined/after_inlining.\n+\t* tree-optimize.c (execute_fixup_cfg): Do not set them here.\n+\t(pass_fixup_cfg): New pass.\n+\t* passes.c (init_optimization_passes): Add fixup_cfg.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38458"}, {"sha": "5da4b4c700e89660b2f437a6b765f5a3778de84e", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "patch": "@@ -1755,6 +1755,8 @@ inline_transform (struct cgraph_node *node)\n       todo = optimize_inline_calls (current_function_decl);\n       timevar_pop (TV_INTEGRATION);\n     }\n+  cfun->always_inline_functions_inlined = true;\n+  cfun->after_inlining = true;\n   return todo | execute_fixup_cfg ();\n }\n "}, {"sha": "09094cadf3829423e4a2e3c8517c03b00eae8dbd", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "patch": "@@ -536,6 +536,7 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_early_local_passes);\n     {\n       struct opt_pass **p = &pass_early_local_passes.pass.sub;\n+      NEXT_PASS (pass_fixup_cfg);\n       NEXT_PASS (pass_tree_profile);\n       NEXT_PASS (pass_cleanup_cfg);\n       NEXT_PASS (pass_init_datastructures);"}, {"sha": "13a50c00c37c190eb4fa2563dce264ffb7c5c577", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "patch": "@@ -293,9 +293,6 @@ execute_fixup_cfg (void)\n   gimple_stmt_iterator gsi;\n   int todo = gimple_in_ssa_p (cfun) ? TODO_verify_ssa : 0;\n \n-  cfun->after_inlining = true;\n-  cfun->always_inline_functions_inlined = true;\n-\n   if (cfun->eh)\n     FOR_EACH_BB (bb)\n       {\n@@ -333,6 +330,25 @@ execute_fixup_cfg (void)\n   return todo;\n }\n \n+struct gimple_opt_pass pass_fixup_cfg =\n+{\n+ {\n+  GIMPLE_PASS,\n+  NULL,\t\t\t\t\t/* name */\n+  NULL,\t\t\t\t\t/* gate */\n+  execute_fixup_cfg,\t\t/* execute */\n+  NULL,\t\t\t\t\t/* sub */\n+  NULL,\t\t\t\t\t/* next */\n+  0,\t\t\t\t\t/* static_pass_number */\n+  0,\t\t\t\t\t/* tv_id */\n+  PROP_cfg,\t\t\t\t/* properties_required */\n+  0,\t\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_destroyed */\n+  0,\t\t\t\t\t/* todo_flags_start */\n+  0\t\t\t\t\t/* todo_flags_finish */\n+ }\n+};\n+\n /* Do the actions required to initialize internal data structures used\n    in tree-ssa optimization passes.  */\n "}, {"sha": "2f4fed815f0617cdd40cb0539c0726056fa8aa19", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=6f1873a1cffee3fc59a1a0f479b58b8a82bc4e2c", "patch": "@@ -309,6 +309,7 @@ extern struct gimple_opt_pass pass_tree_profile;\n extern struct gimple_opt_pass pass_early_tree_profile;\n extern struct gimple_opt_pass pass_cleanup_cfg;\n extern struct gimple_opt_pass pass_referenced_vars;\n+extern struct gimple_opt_pass pass_fixup_cfg;\n extern struct gimple_opt_pass pass_sra;\n extern struct gimple_opt_pass pass_sra_early;\n extern struct gimple_opt_pass pass_tail_recursion;"}]}