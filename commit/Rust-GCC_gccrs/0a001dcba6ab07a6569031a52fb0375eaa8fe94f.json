{"sha": "0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEwMDFkY2JhNmFiMDdhNjU2OTAzMWE1MmZiMDM3NWVhYThmZTk0Zg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2017-02-25T22:44:41Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2017-02-25T22:44:41Z"}, "message": "PR79584, ICE in base_to_reg\n\n\tPR rtl-optimization/79584\n\t* lra-constraints.c (base_to_reg): Reload ad->base, the entire\n\tbase, not ad->base_term, the reg within base.  Remove assertion\n\tthat ad->base == ad->base_term.  Replace gen_int_mode using\n\tbogus mode with const0_rtx.\n\nFrom-SVN: r245741", "tree": {"sha": "54327ae61a01617771e4df744de94bc01f82e681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54327ae61a01617771e4df744de94bc01f82e681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a001dcba6ab07a6569031a52fb0375eaa8fe94f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "888339e6484b40591bbc9728eb2c0228715889c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888339e6484b40591bbc9728eb2c0228715889c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888339e6484b40591bbc9728eb2c0228715889c1"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "fd75430d5cfdbc76aed7f67747171b7e121cc81e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a001dcba6ab07a6569031a52fb0375eaa8fe94f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a001dcba6ab07a6569031a52fb0375eaa8fe94f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "patch": "@@ -1,3 +1,11 @@\n+2017-02-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/79584\n+\t* lra-constraints.c (base_to_reg): Reload ad->base, the entire\n+\tbase, not ad->base_term, the reg within base.  Remove assertion\n+\tthat ad->base == ad->base_term.  Replace gen_int_mode using\n+\tbogus mode with const0_rtx.\n+\n 2017-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/79396"}, {"sha": "c67bd0633f377d7e74ff4e27a7b70340ab17990c", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a001dcba6ab07a6569031a52fb0375eaa8fe94f/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a001dcba6ab07a6569031a52fb0375eaa8fe94f/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=0a001dcba6ab07a6569031a52fb0375eaa8fe94f", "patch": "@@ -2927,18 +2927,18 @@ base_to_reg (struct address_info *ad)\n   rtx_insn *insn;\n   rtx_insn *last_insn = get_last_insn();\n \n-  lra_assert (ad->base == ad->base_term && ad->disp == ad->disp_term);\n+  lra_assert (ad->disp == ad->disp_term);\n   cl = base_reg_class (ad->mode, ad->as, ad->base_outer_code,\n                        get_index_code (ad));\n-  new_reg = lra_create_new_reg (GET_MODE (*ad->base_term), NULL_RTX,\n+  new_reg = lra_create_new_reg (GET_MODE (*ad->base), NULL_RTX,\n                                 cl, \"base\");\n   new_inner = simplify_gen_binary (PLUS, GET_MODE (new_reg), new_reg,\n                                    ad->disp_term == NULL\n-                                   ? gen_int_mode (0, ad->mode)\n+                                   ? const0_rtx\n                                    : *ad->disp_term);\n   if (!valid_address_p (ad->mode, new_inner, ad->as))\n     return NULL_RTX;\n-  insn = emit_insn (gen_rtx_SET (new_reg, *ad->base_term));\n+  insn = emit_insn (gen_rtx_SET (new_reg, *ad->base));\n   code = recog_memoized (insn);\n   if (code < 0)\n     {"}]}