{"sha": "4c553323a6f4d90e48002ea23b7f779c106ad620", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM1NTMzMjNhNmY0ZDkwZTQ4MDAyZWEyM2I3Zjc3OWMxMDZhZDYyMA==", "commit": {"author": {"name": "Josh Conner", "email": "jconner@apple.com", "date": "2006-02-13T18:12:17Z"}, "committer": {"name": "Josh Conner", "email": "jconner@gcc.gnu.org", "date": "2006-02-13T18:12:17Z"}, "message": "re PR target/25376 (section attribute doesn't work on darwin)\n\nPR target/25376\n* varasm.c (function_section): Check for section name before\ncalling select_section on targets that define\nUSE_SELECT_SECTION_FOR_FUNCTIONS.  On other targets, use\nunlikely_text_section instead of hot_function_section if\nfirst_function_block_is_cold.\n* gcc.dg/pr25376.c: New test.\n\n* gcc.c-torture/compile/pr23237.c: Only compile test -- don't\nassemble.\n* lib/target-supports.exp (check_named_sections_available):\nOnly compile named-sections test -- don't assemble.\n\nFrom-SVN: r110917", "tree": {"sha": "6029d89fb50bcba47971911b85b26ad5671431a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6029d89fb50bcba47971911b85b26ad5671431a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c553323a6f4d90e48002ea23b7f779c106ad620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c553323a6f4d90e48002ea23b7f779c106ad620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c553323a6f4d90e48002ea23b7f779c106ad620", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c553323a6f4d90e48002ea23b7f779c106ad620/comments", "author": null, "committer": null, "parents": [{"sha": "e98aa197b7f0810908fd4f8504fe87cb615eaeea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e98aa197b7f0810908fd4f8504fe87cb615eaeea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e98aa197b7f0810908fd4f8504fe87cb615eaeea"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "2c8fe9527c91c5e69a92b98c5a5db6e02cad6cf8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -1,3 +1,12 @@\n+2006-02-13  Josh Conner  <jconner@apple.com>\n+\n+\tPR target/25376\n+\t* varasm.c (function_section): Check for section name before\n+\tcalling select_section on targets that define\n+\tUSE_SELECT_SECTION_FOR_FUNCTIONS.  On other targets, use\n+\tunlikely_text_section instead of hot_function_section if\n+\tfirst_function_block_is_cold.\n+\n 2006-02-13  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR middle-end/25335"}, {"sha": "3338042a72c87ecebf64c588c7ecba55683518ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -1,3 +1,13 @@\n+2006-02-13  Josh Conner  <jconner@apple.com>\n+\n+\tPR target/25376\n+\t* gcc.dg/pr25376.c: New test.\t\n+\n+\t* gcc.c-torture/compile/pr23237.c: Only compile test -- don't\n+\tassemble.\n+\t* lib/target-supports.exp (check_named_sections_available):\n+\tOnly compile named-sections test -- don't assemble.\n+\n 2006-02-12  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* g++.dg/warn/no-write-strings.C: New test."}, {"sha": "955cdd060ff57d5118e6b0f3e6a4530f3d84a404", "filename": "gcc/testsuite/gcc.c-torture/compile/pr23237.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23237.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23237.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23237.c?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -1,5 +1,9 @@\n /* { dg-require-effective-target named_sections } */\n \n+/* Don't assemble, as this section syntax may not be valid on all platforms\n+   (e.g., Darwin).  */\n+/* { dg-do compile } */\n+\n static __attribute__ ((__section__ (\".init.data\"))) char *message;\n static __attribute__ ((__section__ (\".init.data\"))) int (*actions[])(void) = {};\n void unpack_to_rootfs(void)"}, {"sha": "3008b091dc2835413febd720bcc54fbd62044934", "filename": "gcc/testsuite/gcc.dg/pr25376.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -0,0 +1,9 @@\n+/* PR25376.  Verify that a named section is honored.  */\n+/* { dg-require-named-sections \"\" } */\n+\n+void simple (void) __attribute__((section(\"my_named_section\")));\n+void simple (void)\n+{\n+}\n+\n+/* { dg-final { scan-assembler \"my_named_section\" } } */"}, {"sha": "88794a3cb98d3963d37678d1a1ed333dcd7b69ea", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -637,7 +637,7 @@ proc check_iconv_available { test_what } {\n # the same test run.\n proc check_named_sections_available { } {\n     verbose \"check_named_sections_available: compiling source\" 2\n-    set answer [string match \"\" [get_compiler_messages named object {\n+    set answer [string match \"\" [get_compiler_messages named assembly {\n \tint __attribute__ ((section(\"whatever\"))) foo;\n     }]]\n     verbose \"check_named_sections_available: returning $answer\" 2"}, {"sha": "bddf1ad9853b96113328d535c226ef45b8c592b6", "filename": "gcc/varasm.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c553323a6f4d90e48002ea23b7f779c106ad620/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4c553323a6f4d90e48002ea23b7f779c106ad620", "patch": "@@ -440,19 +440,30 @@ function_section (tree decl)\n     reloc = 1;\n \n #ifdef USE_SELECT_SECTION_FOR_FUNCTIONS\n-  return targetm.asm_out.select_section (decl, reloc, DECL_ALIGN (decl));\n+  if (decl != NULL_TREE\n+      && DECL_SECTION_NAME (decl) != NULL_TREE)\n+    return reloc ? unlikely_text_section ()\n+\t\t : get_named_section (decl, NULL, 0);\n+  else\n+    return targetm.asm_out.select_section (decl, reloc, DECL_ALIGN (decl));\n #else\n-  return hot_function_section (decl);\n+  return reloc ? unlikely_text_section () : hot_function_section (decl);\n #endif\n }\n \n section *\n current_function_section (void)\n {\n #ifdef USE_SELECT_SECTION_FOR_FUNCTIONS\n-  return targetm.asm_out.select_section (current_function_decl,\n-\t\t\t\t\t in_cold_section_p,\n-\t\t\t\t\t DECL_ALIGN (current_function_decl));\n+  if (current_function_decl != NULL_TREE\n+      && DECL_SECTION_NAME (current_function_decl) != NULL_TREE)\n+    return in_cold_section_p ? unlikely_text_section ()\n+\t\t\t     : get_named_section (current_function_decl,\n+\t\t\t\t\t\t  NULL, 0);\n+  else\n+    return targetm.asm_out.select_section (current_function_decl,\n+\t\t\t\t\t   in_cold_section_p,\n+\t\t\t\t\t   DECL_ALIGN (current_function_decl));\n #else\n   return (in_cold_section_p\n \t  ? unlikely_text_section ()"}]}