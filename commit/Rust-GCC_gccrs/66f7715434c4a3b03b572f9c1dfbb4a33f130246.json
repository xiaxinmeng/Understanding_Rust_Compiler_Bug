{"sha": "66f7715434c4a3b03b572f9c1dfbb4a33f130246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZmNzcxNTQzNGM0YTNiMDNiNTcyZjljMWRmYmI0YTMzZjEzMDI0Ng==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-12-16T22:43:58Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-12-16T22:43:58Z"}, "message": "libgcc2.h: Use Wtype for SItype and DWtype for DItype in prototypes.\n\n\t* libgcc2.h: Use Wtype for SItype and DWtype for DItype in prototypes.\n\t* libgcc2.c (__absvsi2): Use Wtype and DWtype.\n\t(__absvdi2, __addvsi3, __addvdi3, __subvsi3): Likewise.\n\t(__subvdi3, __mulvsi3, __mulvdi3, __negvsi2, __negvdi2): Likewise.\n\nFrom-SVN: r38314", "tree": {"sha": "908154d10c250a4124b77af939c9fbf4bb068bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/908154d10c250a4124b77af939c9fbf4bb068bc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f7715434c4a3b03b572f9c1dfbb4a33f130246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f7715434c4a3b03b572f9c1dfbb4a33f130246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f7715434c4a3b03b572f9c1dfbb4a33f130246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f7715434c4a3b03b572f9c1dfbb4a33f130246/comments", "author": null, "committer": null, "parents": [{"sha": "f11009b71182059ccda81e666e1c23eda4cec8a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11009b71182059ccda81e666e1c23eda4cec8a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f11009b71182059ccda81e666e1c23eda4cec8a9"}], "stats": {"total": 87, "additions": 47, "deletions": 40}, "files": [{"sha": "696ce4bae844e33a2f4d23e117e2974519f1a317", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66f7715434c4a3b03b572f9c1dfbb4a33f130246", "patch": "@@ -1,3 +1,10 @@\n+2000-12-17  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* libgcc2.h: Use Wtype for SItype and DWtype for DItype in prototypes.\n+\t* libgcc2.c (__absvsi2): Use Wtype and DWtype.\n+\t(__absvdi2, __addvsi3, __addvdi3, __subvsi3): Likewise.\n+\t(__subvdi3, __mulvsi3, __mulvdi3, __negvsi2, __negvdi2): Likewise.\n+\n 2000-12-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/sh.h (INITIALIZE_TRAMPOLINE): Enclose the block"}, {"sha": "f38bfc88d395501ab487d060e1a7c8e4bf3763e8", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=66f7715434c4a3b03b572f9c1dfbb4a33f130246", "patch": "@@ -66,10 +66,10 @@ __negdi2 (DWtype u)\n #endif\n \n #ifdef L_addvsi3\n-SItype\n-__addvsi3 (SItype a, SItype b)\n+Wtype\n+__addvsi3 (Wtype a, Wtype b)\n {\n-  SItype w;\n+  Wtype w;\n \n   w = a + b;\n \n@@ -81,10 +81,10 @@ __addvsi3 (SItype a, SItype b)\n #endif\n \f\n #ifdef L_addvdi3\n-DItype\n-__addvdi3 (DItype a, DItype b)\n+DWtype\n+__addvdi3 (DWtype a, DWtype b)\n {\n-  DItype w;\n+  DWtype w;\n \n   w = a + b;\n \n@@ -96,13 +96,13 @@ __addvdi3 (DItype a, DItype b)\n #endif\n \f\n #ifdef L_subvsi3\n-SItype\n-__subvsi3 (SItype a, SItype b)\n+Wtype\n+__subvsi3 (Wtype a, Wtype b)\n {\n #ifdef L_addvsi3\n   return __addvsi3 (a, (-b));\n #else\n-  DItype w;\n+  DWtype w;\n \n   w = a - b;\n \n@@ -115,13 +115,13 @@ __subvsi3 (SItype a, SItype b)\n #endif\n \f\n #ifdef L_subvdi3\n-DItype\n-__subvdi3 (DItype a, DItype b)\n+DWtype\n+__subvdi3 (DWtype a, DWtype b)\n {\n #ifdef L_addvdi3\n   return (a, (-b));\n #else\n-  DItype w;\n+  DWtype w;\n \n   w = a - b;\n \n@@ -134,10 +134,10 @@ __subvdi3 (DItype a, DItype b)\n #endif\n \f\n #ifdef L_mulvsi3\n-SItype\n-__mulvsi3 (SItype a, SItype b)\n+Wtype\n+__mulvsi3 (Wtype a, Wtype b)\n {\n-  DItype w;\n+  DWtype w;\n \n   w = a * b;\n \n@@ -149,10 +149,10 @@ __mulvsi3 (SItype a, SItype b)\n #endif\n \f\n #ifdef L_negvsi2\n-SItype\n-__negvsi2 (SItype a)\n+Wtype\n+__negvsi2 (Wtype a)\n {\n-   SItype w;\n+   Wtype w;\n \n    w  = -a;\n \n@@ -164,10 +164,10 @@ __negvsi2 (SItype a)\n #endif\n \f\n #ifdef L_negvdi2\n-DItype\n-__negvdi2 (DItype a)\n+DWtype\n+__negvdi2 (DWtype a)\n {\n-   DItype w;\n+   DWtype w;\n \n    w  = -a;\n \n@@ -179,10 +179,10 @@ __negvdi2 (DItype a)\n #endif\n \f\n #ifdef L_absvsi2\n-SItype\n-__absvsi2 (SItype a)\n+Wtype\n+__absvsi2 (Wtype a)\n {\n-   SItype w = a;\n+   Wtype w = a;\n \n    if (a < 0)\n #ifdef L_negvsi2\n@@ -199,10 +199,10 @@ __absvsi2 (SItype a)\n #endif\n \f\n #ifdef L_absvdi2\n-DItype\n-__absvdi2 (DItype a)\n+DWtype\n+__absvdi2 (DWtype a)\n {\n-   DItype w = a;\n+   DWtype w = a;\n \n    if (a < 0)\n #ifdef L_negvsi2\n@@ -219,10 +219,10 @@ __absvdi2 (DItype a)\n #endif\n \f\n #ifdef L_mulvdi3\n-DItype\n-__mulvdi3 (DItype u, DItype v)\n+DWtype\n+__mulvdi3 (DWtype u, DWtype v)\n {\n-   DItype w;\n+   DWtype w;\n \n   w = u * v;\n "}, {"sha": "ae6865f661973fddd71c6731cd770a735f61a144", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f7715434c4a3b03b572f9c1dfbb4a33f130246/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=66f7715434c4a3b03b572f9c1dfbb4a33f130246", "patch": "@@ -256,16 +256,16 @@ extern UWtype __udiv_w_sdiv (UWtype *, UWtype, UWtype, UWtype);\n extern word_type __cmpdi2 (DWtype, DWtype);\n extern word_type __ucmpdi2 (DWtype, DWtype);\n \n-extern SItype __absvsi2 (SItype);\n-extern DItype __absvdi2 (DItype);\n-extern SItype __addvsi3 (SItype, SItype);\n-extern DItype __addvdi3 (DItype, DItype);\n-extern SItype __subvsi3 (SItype, SItype);\n-extern DItype __subvdi3 (DItype, DItype);\n-extern SItype __mulvsi3 (SItype, SItype);\n-extern DItype __mulvdi3 (DItype, DItype);\n-extern SItype __negvsi2 (SItype);\n-extern DItype __negvdi2 (DItype);\n+extern Wtype __absvsi2 (Wtype);\n+extern DWtype __absvdi2 (DWtype);\n+extern Wtype __addvsi3 (Wtype, Wtype);\n+extern DWtype __addvdi3 (DWtype, DWtype);\n+extern Wtype __subvsi3 (Wtype, Wtype);\n+extern DWtype __subvdi3 (DWtype, DWtype);\n+extern Wtype __mulvsi3 (Wtype, Wtype);\n+extern DWtype __mulvdi3 (DWtype, DWtype);\n+extern Wtype __negvsi2 (Wtype);\n+extern DWtype __negvdi2 (DWtype);\n \n #if BITS_PER_UNIT == 8\n extern DWtype __fixdfdi (DFtype);"}]}