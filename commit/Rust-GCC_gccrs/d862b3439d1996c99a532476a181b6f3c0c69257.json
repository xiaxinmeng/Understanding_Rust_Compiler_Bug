{"sha": "d862b3439d1996c99a532476a181b6f3c0c69257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2MmIzNDM5ZDE5OTZjOTlhNTMyNDc2YTE4MWI2ZjNjMGM2OTI1Nw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-11-07T13:37:41Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-11-07T13:37:41Z"}, "message": "re PR ipa/63580 (ICE : error: invalid argument to gimple call)\n\n\tPR ipa/63580\n        * cgraphunit.c (cgraph_node::create_wrapper):\n\tTREE_ADDRESSABLE is set to false for a newly created thunk.\n\t* g++.dg/ipa/pr63580.C: New test.\n\nFrom-SVN: r217222", "tree": {"sha": "44b0f6f1cd72bc93601e630fc040c05a75668f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b0f6f1cd72bc93601e630fc040c05a75668f33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d862b3439d1996c99a532476a181b6f3c0c69257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d862b3439d1996c99a532476a181b6f3c0c69257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d862b3439d1996c99a532476a181b6f3c0c69257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d862b3439d1996c99a532476a181b6f3c0c69257/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6343f5d75ba50fb9620a8faaf410d2f5648f62df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6343f5d75ba50fb9620a8faaf410d2f5648f62df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6343f5d75ba50fb9620a8faaf410d2f5648f62df"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "c418283e84a94feebacdf93402e1734754de3560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d862b3439d1996c99a532476a181b6f3c0c69257", "patch": "@@ -1,3 +1,9 @@\n+2014-11-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63580\n+\t* cgraphunit.c (cgraph_node::create_wrapper):\n+\tTREE_ADDRESSABLE is set to false for a newly created thunk.\n+\n 2014-11-07  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/63747"}, {"sha": "25af2347f42844a27d7f48dc8009ce78d8ad33cc", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d862b3439d1996c99a532476a181b6f3c0c69257", "patch": "@@ -2369,6 +2369,14 @@ cgraph_node::create_wrapper (cgraph_node *target)\n \n     cgraph_edge *e = create_edge (target, NULL, 0, CGRAPH_FREQ_BASE);\n \n+    tree arguments = DECL_ARGUMENTS (decl);\n+\n+    while (arguments)\n+      {\n+\tTREE_ADDRESSABLE (arguments) = false;\n+\targuments = TREE_CHAIN (arguments);\n+      }\n+\n     expand_thunk (false, true);\n     e->call_stmt_cannot_inline_p = true;\n "}, {"sha": "6bd9aed5ec28815ddfa381fb2f81a6d1f479b2a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d862b3439d1996c99a532476a181b6f3c0c69257", "patch": "@@ -1,3 +1,8 @@\n+2014-11-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63580\n+\t* g++.dg/ipa/pr63580.C: New test.\n+\n 2014-11-07  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/63747"}, {"sha": "904195a70bed557b1b6fcedff145cdf09048f4a0", "filename": "gcc/testsuite/g++.dg/ipa/pr63580.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63580.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d862b3439d1996c99a532476a181b6f3c0c69257/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63580.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63580.C?ref=d862b3439d1996c99a532476a181b6f3c0c69257", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+\n+struct A\n+{\n+};\n+template <class L, class R> A operator%(L, R);\n+template <class A0, class A1, class A2, class A3>\n+void make_tuple (A0 &, A1, A2, A3);\n+A\n+bar (int p1, char p2, int p3, double p4)\n+{\n+  A a;\n+  make_tuple (p1, p2, p3, p4);\n+  return \"int; char; string; double; \" % a;\n+}\n+A\n+foo (int p1, char p2, int p3, double p4)\n+{\n+  A b;\n+  make_tuple (p1, p2, p3, p4);\n+  return \"int; char; string; double; \" % b;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}