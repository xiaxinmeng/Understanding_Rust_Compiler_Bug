{"sha": "2297a38e0c18eaec95bebf750855fb9a4026ffbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5N2EzOGUwYzE4ZWFlYzk1YmViZjc1MDg1NWZiOWE0MDI2ZmZiZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-06T13:28:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-06T13:28:59Z"}, "message": "re PR fortran/92775 (Incorrect expression in DW_AT_byte_stride on an array)\n\n\tPR fortran/92775\n\t* trans.h (struct lang_type, struct lang_decl): Remove span member.\n\t(GFC_DECL_SPAN, GFC_TYPE_ARRAY_SPAN): Remove macros.\n\t* trans-array.h (gfc_get_descriptor_offsets_for_info): Add another\n\targument.\n\t* trans-array.c (gfc_get_descriptor_offsets_for_info): Add SPAN_OFF\n\targument and initialize *SPAN_OFF to the offset of span field.\n\t* trans-types.c (gfc_get_array_descr_info): Adjust\n\tgfc_get_descriptor_offsets_for_info caller.  Compute elem_size\n\tas base->span instead of TYPE_SIZE_UNIT (etype) constant.\n\nFrom-SVN: r279045", "tree": {"sha": "c2251d0b4ef7fd2c4a2eec00fabbc88764257094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2251d0b4ef7fd2c4a2eec00fabbc88764257094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2297a38e0c18eaec95bebf750855fb9a4026ffbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2297a38e0c18eaec95bebf750855fb9a4026ffbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2297a38e0c18eaec95bebf750855fb9a4026ffbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2297a38e0c18eaec95bebf750855fb9a4026ffbf/comments", "author": null, "committer": null, "parents": [{"sha": "6e4d01d61f2bec57a247de1c5ee538f122ec34a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4d01d61f2bec57a247de1c5ee538f122ec34a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4d01d61f2bec57a247de1c5ee538f122ec34a8"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "a124cb091ef4855c9727d4bc0e6438778bf025a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -1,5 +1,5 @@\n 2019-12-06  Tobias Burnus  <tobias@codesourcery.com>\n-\t    Kwok Cheung Yeung <kcy@codesourcery.com>\n+\t    Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* omp-low.c (lower_omp_target): For optional arguments, deref once\n \tmore to obtain the type."}, {"sha": "f9b795dd828e426e3d732930dab66f001dc8c270", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -1,5 +1,18 @@\n+2019-12-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92775\n+\t* trans.h (struct lang_type, struct lang_decl): Remove span member.\n+\t(GFC_DECL_SPAN, GFC_TYPE_ARRAY_SPAN): Remove macros.\n+\t* trans-array.h (gfc_get_descriptor_offsets_for_info): Add another\n+\targument.\n+\t* trans-array.c (gfc_get_descriptor_offsets_for_info): Add SPAN_OFF\n+\targument and initialize *SPAN_OFF to the offset of span field.\n+\t* trans-types.c (gfc_get_array_descr_info): Adjust\n+\tgfc_get_descriptor_offsets_for_info caller.  Compute elem_size\n+\tas base->span instead of TYPE_SIZE_UNIT (etype) constant.\n+\n 2019-12-06  Tobias Burnus  <tobias@codesourcery.com>\n-\t    Kwok Cheung Yeung <kcy@codesourcery.com>\n+\t    Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* trans-openmp.c (gfc_build_conditional_assign, \n \tgfc_build_conditional_assign_expr): New static functions."}, {"sha": "452b494e93a71a3871c6adb7baef454388103f39", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -540,9 +540,10 @@ gfc_conv_shift_descriptor_lbound (stmtblock_t* block, tree desc,\n \n void\n gfc_get_descriptor_offsets_for_info (const_tree desc_type, tree *data_off,\n-\t\t\t\t     tree *dtype_off, tree *dim_off,\n-\t\t\t\t     tree *dim_size, tree *stride_suboff,\n-\t\t\t\t     tree *lower_suboff, tree *upper_suboff)\n+\t\t\t\t     tree *dtype_off, tree *span_off,\n+\t\t\t\t     tree *dim_off, tree *dim_size,\n+\t\t\t\t     tree *stride_suboff, tree *lower_suboff,\n+\t\t\t\t     tree *upper_suboff)\n {\n   tree field;\n   tree type;\n@@ -552,6 +553,8 @@ gfc_get_descriptor_offsets_for_info (const_tree desc_type, tree *data_off,\n   *data_off = byte_position (field);\n   field = gfc_advance_chain (TYPE_FIELDS (type), DTYPE_FIELD);\n   *dtype_off = byte_position (field);\n+  field = gfc_advance_chain (TYPE_FIELDS (type), SPAN_FIELD);\n+  *span_off = byte_position (field);\n   field = gfc_advance_chain (TYPE_FIELDS (type), DIMENSION_FIELD);\n   *dim_off = byte_position (field);\n   type = TREE_TYPE (TREE_TYPE (field));"}, {"sha": "3d1876303671de2da2d50cf712489bbf641247e1", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -163,7 +163,7 @@ void gfc_trans_array_cobounds (tree, stmtblock_t *, const gfc_symbol *);\n \n /* Build expressions for accessing components of an array descriptor.  */\n void gfc_get_descriptor_offsets_for_info (const_tree, tree *, tree *, tree *, tree *,\n-\t\t\t\t\t  tree *, tree *, tree *);\n+\t\t\t\t\t  tree *, tree *, tree *, tree *);\n \n tree gfc_conv_descriptor_data_get (tree);\n tree gfc_conv_descriptor_data_addr (tree);"}, {"sha": "9f4890dea619a08abee2ca569e6abc039c811995", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -3266,7 +3266,7 @@ gfc_get_array_descr_info (const_tree type, struct array_descr_info *info)\n   int rank, dim;\n   bool indirect = false;\n   tree etype, ptype, t, base_decl;\n-  tree data_off, dim_off, dtype_off, dim_size, elem_size;\n+  tree data_off, span_off, dim_off, dtype_off, dim_size, elem_size;\n   tree lower_suboff, upper_suboff, stride_suboff;\n   tree dtype, field, rank_off;\n \n@@ -3323,12 +3323,13 @@ gfc_get_array_descr_info (const_tree type, struct array_descr_info *info)\n   if (indirect)\n     base_decl = build1 (INDIRECT_REF, ptype, base_decl);\n \n-  elem_size = fold_convert (gfc_array_index_type, TYPE_SIZE_UNIT (etype));\n-\n-  gfc_get_descriptor_offsets_for_info (type, &data_off, &dtype_off, &dim_off,\n-\t\t\t\t       &dim_size, &stride_suboff,\n+  gfc_get_descriptor_offsets_for_info (type, &data_off, &dtype_off, &span_off,\n+\t\t\t\t       &dim_off, &dim_size, &stride_suboff,\n \t\t\t\t       &lower_suboff, &upper_suboff);\n \n+  t = fold_build_pointer_plus (base_decl, span_off);\n+  elem_size = build1 (INDIRECT_REF, gfc_array_index_type, t);\n+\n   t = base_decl;\n   if (!integer_zerop (data_off))\n     t = fold_build_pointer_plus (t, data_off);"}, {"sha": "07c1e4ffb3f90fd368e6b195fce4b1428bde3daa", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2297a38e0c18eaec95bebf750855fb9a4026ffbf/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=2297a38e0c18eaec95bebf750855fb9a4026ffbf", "patch": "@@ -981,7 +981,6 @@ struct GTY(())\tlang_type\t {\n   tree offset;\n   tree dtype;\n   tree dataptr_type;\n-  tree span;\n   tree base_decl[2];\n   tree nonrestricted_type;\n   tree caf_token;\n@@ -997,7 +996,6 @@ struct GTY(()) lang_decl {\n      address of target label.  */\n   tree stringlen;\n   tree addr;\n-  tree span;\n   /* For assumed-shape coarrays.  */\n   tree token, caf_offset;\n   unsigned int scalar_allocatable : 1;\n@@ -1008,7 +1006,6 @@ struct GTY(()) lang_decl {\n \n #define GFC_DECL_ASSIGN_ADDR(node) DECL_LANG_SPECIFIC(node)->addr\n #define GFC_DECL_STRING_LEN(node) DECL_LANG_SPECIFIC(node)->stringlen\n-#define GFC_DECL_SPAN(node) DECL_LANG_SPECIFIC(node)->span\n #define GFC_DECL_TOKEN(node) DECL_LANG_SPECIFIC(node)->token\n #define GFC_DECL_CAF_OFFSET(node) DECL_LANG_SPECIFIC(node)->caf_offset\n #define GFC_DECL_SAVED_DESCRIPTOR(node) \\\n@@ -1059,7 +1056,6 @@ struct GTY(()) lang_decl {\n #define GFC_TYPE_ARRAY_DTYPE(node) (TYPE_LANG_SPECIFIC(node)->dtype)\n #define GFC_TYPE_ARRAY_DATAPTR_TYPE(node) \\\n   (TYPE_LANG_SPECIFIC(node)->dataptr_type)\n-#define GFC_TYPE_ARRAY_SPAN(node) (TYPE_LANG_SPECIFIC(node)->span)\n #define GFC_TYPE_ARRAY_BASE_DECL(node, internal) \\\n   (TYPE_LANG_SPECIFIC(node)->base_decl[(internal)])\n "}]}