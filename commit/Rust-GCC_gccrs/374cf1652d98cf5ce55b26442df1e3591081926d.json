{"sha": "374cf1652d98cf5ce55b26442df1e3591081926d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0Y2YxNjUyZDk4Y2Y1Y2U1NWIyNjQ0MmRmMWUzNTkxMDgxOTI2ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2013-08-08T13:34:12Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2013-08-08T13:34:12Z"}, "message": "Don't use _B etc. in libstdc++\n\n\t* include/bits/regex.h: Replace _A, _B, _C, _R by _Ap, _Bp,\n\t_Cp, _Rp.\n\nFrom-SVN: r201596", "tree": {"sha": "69c0ed6be49662346a9b5e66170256b4066cb595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69c0ed6be49662346a9b5e66170256b4066cb595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374cf1652d98cf5ce55b26442df1e3591081926d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374cf1652d98cf5ce55b26442df1e3591081926d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374cf1652d98cf5ce55b26442df1e3591081926d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374cf1652d98cf5ce55b26442df1e3591081926d/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b09bcf83e8fe1b941aa42457b6063a2a174d7389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09bcf83e8fe1b941aa42457b6063a2a174d7389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09bcf83e8fe1b941aa42457b6063a2a174d7389"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "7a141171ab2c94808ed0050766cd8aaaf347478d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374cf1652d98cf5ce55b26442df1e3591081926d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374cf1652d98cf5ce55b26442df1e3591081926d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=374cf1652d98cf5ce55b26442df1e3591081926d", "patch": "@@ -1,3 +1,8 @@\n+2013-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* include/bits/regex.h: Replace _A, _B, _C, _R by _Ap, _Bp,\n+\t_Cp, _Rp.\n+\n 2013-08-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/hashtable_policy.h (_Hashtable_alloc): New."}, {"sha": "2776749721fc3c5e15d3f1bbceca7fea41c3972c", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374cf1652d98cf5ce55b26442df1e3591081926d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374cf1652d98cf5ce55b26442df1e3591081926d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=374cf1652d98cf5ce55b26442df1e3591081926d", "patch": "@@ -995,18 +995,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                                  const basic_regex<_CharT, _TraitsT>&,\n                                  regex_constants::match_flag_type);\n \n-      template<typename _B, typename _A, typename _C, typename _R>\n+      template<typename _Bp, typename _Ap, typename _Cp, typename _Rp>\n         friend bool\n-        regex_match(_B, _B,\n-                    match_results<_B, _A>&,\n-                    const basic_regex<_C, _R>&,\n+        regex_match(_Bp, _Bp,\n+                    match_results<_Bp, _Ap>&,\n+                    const basic_regex<_Cp, _Rp>&,\n                     regex_constants::match_flag_type);\n \n-      template<typename _B, typename _A, typename _C, typename _R>\n+      template<typename _Bp, typename _Ap, typename _Cp, typename _Rp>\n         friend bool\n-        regex_search(_B, _B,\n-                     match_results<_B, _A>&,\n-                     const basic_regex<_C, _R>&,\n+        regex_search(_Bp, _Bp,\n+                     match_results<_Bp, _Ap>&,\n+                     const basic_regex<_Cp, _Rp>&,\n                      regex_constants::match_flag_type);\n \n       flag_type     _M_flags;\n@@ -2111,16 +2111,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename, typename, typename, typename>\n         friend class __detail::_BFSExecutor;\n \n-      template<typename _B, typename _A, typename _Ch_type, typename _Rx_traits>\n+      template<typename _Bp, typename _Ap, typename _Ch_type, typename _Rx_traits>\n         friend bool\n-        regex_match(_B, _B, match_results<_B, _A>&,\n+        regex_match(_Bp, _Bp, match_results<_Bp, _Ap>&,\n                     const basic_regex<_Ch_type,\n                     _Rx_traits>&,\n                     regex_constants::match_flag_type);\n \n-      template<typename _B, typename _A, typename _Ch_type, typename _Rx_traits>\n+      template<typename _Bp, typename _Ap, typename _Ch_type, typename _Rx_traits>\n         friend bool\n-        regex_search(_B, _B, match_results<_B, _A>&,\n+        regex_search(_Bp, _Bp, match_results<_Bp, _Ap>&,\n                      const basic_regex<_Ch_type,\n                      _Rx_traits>&,\n                      regex_constants::match_flag_type);"}]}