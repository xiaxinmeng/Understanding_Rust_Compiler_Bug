{"sha": "16ab191f302f5915199dec8c6893d88482bce7af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhYjE5MWYzMDJmNTkxNTE5OWRlYzhjNjg5M2Q4ODQ4MmJjZTdhZg==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@overta.ru", "date": "2000-04-23T22:25:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-04-23T22:25:25Z"}, "message": "reload.c (find_equiv_reg): Checks all valueno regs as a reload_reg_p regs.\n\n        * reload.c (find_equiv_reg): Checks all valueno regs\n        as a reload_reg_p regs.\n\nFrom-SVN: r33361", "tree": {"sha": "41a0bcd659d6a5dd6e6bff75419918cdf8a7b265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a0bcd659d6a5dd6e6bff75419918cdf8a7b265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ab191f302f5915199dec8c6893d88482bce7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ab191f302f5915199dec8c6893d88482bce7af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ab191f302f5915199dec8c6893d88482bce7af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ab191f302f5915199dec8c6893d88482bce7af/comments", "author": null, "committer": null, "parents": [{"sha": "a6a69fc2ad1062fab2801e42aca04af23470365b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a69fc2ad1062fab2801e42aca04af23470365b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6a69fc2ad1062fab2801e42aca04af23470365b"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "929700692552a79255e81c23198cdf9e99f6b5c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab191f302f5915199dec8c6893d88482bce7af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab191f302f5915199dec8c6893d88482bce7af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16ab191f302f5915199dec8c6893d88482bce7af", "patch": "@@ -1,3 +1,8 @@\n+Sun Apr 23 16:24:35 2000  Denis Chertykov  <denisc@overta.ru>\n+\n+\t* reload.c (find_equiv_reg): Checks all valueno regs\n+\tas a reload_reg_p regs.\n+\n 2000-04-23  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpphash.c (collect_objlike_expansion): Add sanity check."}, {"sha": "4a3560257b95cc2a0f9c988ba2a59d74c467b12a", "filename": "gcc/reload.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab191f302f5915199dec8c6893d88482bce7af/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab191f302f5915199dec8c6893d88482bce7af/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=16ab191f302f5915199dec8c6893d88482bce7af", "patch": "@@ -6112,18 +6112,22 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n       && regno < valueno + (int) HARD_REGNO_NREGS (valueno, mode))\n     return 0;\n \n+  nregs = HARD_REGNO_NREGS (regno, mode);\n+  valuenregs = HARD_REGNO_NREGS (valueno, mode);\n+\n   /* Reject VALUE if it is one of the regs reserved for reloads.\n      Reload1 knows how to reuse them anyway, and it would get\n      confused if we allocated one without its knowledge.\n      (Now that insns introduced by reload are ignored above,\n      this case shouldn't happen, but I'm not positive.)  */\n \n-  if (reload_reg_p != 0 && reload_reg_p != (short *) (HOST_WIDE_INT) 1\n-      && reload_reg_p[valueno] >= 0)\n-    return 0;\n-\n-  nregs = HARD_REGNO_NREGS (regno, mode);\n-  valuenregs = HARD_REGNO_NREGS (valueno, mode);\n+  if (reload_reg_p != 0 && reload_reg_p != (short *) (HOST_WIDE_INT) 1)\n+    {\n+      int i;\n+      for (i = 0; i < valuenregs; ++i)\n+\tif (reload_reg_p[valueno + i] >= 0)\n+\t  return 0;\n+    }\n \n   /* Reject VALUE if it is a register being used for an input reload\n      even if it is not one of those reserved.  */"}]}