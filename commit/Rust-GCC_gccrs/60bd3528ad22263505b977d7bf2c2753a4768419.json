{"sha": "60bd3528ad22263505b977d7bf2c2753a4768419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiZDM1MjhhZDIyMjYzNTA1Yjk3N2Q3YmYyYzI3NTNhNDc2ODQxOQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2009-11-18T16:51:56Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-11-18T16:51:56Z"}, "message": "arm.c (FL_ARCH7EM, [...]): Define.\n\n2009-11-18  Paul Brook  <paul@codesourcery.com>\n\tDaniel Jacobowitz  <dan@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.c (FL_ARCH7EM, FL_FOR_ARCH7EM): Define.\n\t(arm_arch7em): New variable.\n\t(all_architectures): Add armv7e-m.\n\t(arm_override_options): Set arm_arch7em.\n\t* config/arm/arm.h (TARGET_DSP_MULTIPLY, TARGET_INT_SIMD):\n\tInclude arm_arch7em.\n\t(arm_arch7em): Declare.\n\n\nCo-Authored-By: Daniel Jacobowitz <dan@codesourcery.com>\n\nFrom-SVN: r154299", "tree": {"sha": "41ce08753943e56c46409b018fd85137d75472ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41ce08753943e56c46409b018fd85137d75472ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60bd3528ad22263505b977d7bf2c2753a4768419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bd3528ad22263505b977d7bf2c2753a4768419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60bd3528ad22263505b977d7bf2c2753a4768419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bd3528ad22263505b977d7bf2c2753a4768419/comments", "author": null, "committer": null, "parents": [{"sha": "7caa21fc327a7b32b707d906fa05683e992fc3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7caa21fc327a7b32b707d906fa05683e992fc3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7caa21fc327a7b32b707d906fa05683e992fc3fb"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "a71540dd55e8bff9b6f9d4b21fed4b299d0ab792", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60bd3528ad22263505b977d7bf2c2753a4768419", "patch": "@@ -1,3 +1,14 @@\n+2009-11-18  Paul Brook  <paul@codesourcery.com>\n+\tDaniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* config/arm/arm.c (FL_ARCH7EM, FL_FOR_ARCH7EM): Define.\n+\t(arm_arch7em): New variable.\n+\t(all_architectures): Add armv7e-m.\n+\t(arm_override_options): Set arm_arch7em.\n+\t* config/arm/arm.h (TARGET_DSP_MULTIPLY, TARGET_INT_SIMD):\n+\tInclude arm_arch7em.\n+\t(arm_arch7em): Declare.\n+\n 2009-11-18  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-streamer-in.c (input_gimple_stmt): Assert that we find"}, {"sha": "99a6166e0697c84120c223d51320c9be1cd65d94", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=60bd3528ad22263505b977d7bf2c2753a4768419", "patch": "@@ -574,6 +574,8 @@ static int thumb_call_reg_needed;\n #define FL_DIV\t      (1 << 18)\t      /* Hardware divide.  */\n #define FL_VFPV3      (1 << 19)       /* Vector Floating Point V3.  */\n #define FL_NEON       (1 << 20)       /* Neon instructions.  */\n+#define FL_ARCH7EM    (1 << 21)\t      /* Instructions present in the ARMv7E-M\n+\t\t\t\t\t architecture.  */\n \n #define FL_IWMMXT     (1 << 29)\t      /* XScale v2 or \"Intel Wireless MMX technology\".  */\n \n@@ -598,6 +600,7 @@ static int thumb_call_reg_needed;\n #define FL_FOR_ARCH7A\t(FL_FOR_ARCH7 | FL_NOTM)\n #define FL_FOR_ARCH7R\t(FL_FOR_ARCH7A | FL_DIV)\n #define FL_FOR_ARCH7M\t(FL_FOR_ARCH7 | FL_DIV)\n+#define FL_FOR_ARCH7EM  (FL_FOR_ARCH7M | FL_ARCH7EM)\n \n /* The bits in this mask specify which\n    instructions we are allowed to generate.  */\n@@ -634,6 +637,9 @@ int arm_arch6k = 0;\n /* Nonzero if instructions not present in the 'M' profile can be used.  */\n int arm_arch_notm = 0;\n \n+/* Nonzero if instructions present in ARMv7E-M can be used.  */\n+int arm_arch7em = 0;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n int arm_ld_sched = 0;\n \n@@ -772,6 +778,7 @@ static const struct processors all_architectures[] =\n   {\"armv7-a\", cortexa8,\t  \"7A\",\t FL_CO_PROC |\t\t  FL_FOR_ARCH7A, NULL},\n   {\"armv7-r\", cortexr4,\t  \"7R\",\t FL_CO_PROC |\t\t  FL_FOR_ARCH7R, NULL},\n   {\"armv7-m\", cortexm3,\t  \"7M\",\t FL_CO_PROC |\t\t  FL_FOR_ARCH7M, NULL},\n+  {\"armv7e-m\",   cortexm3, \"7EM\", FL_CO_PROC |\t\t  FL_FOR_ARCH7EM, NULL},\n   {\"ep9312\",  ep9312,     \"4T\",  FL_LDSCHED | FL_CIRRUS | FL_FOR_ARCH4, NULL},\n   {\"iwmmxt\",  iwmmxt,     \"5TE\", FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT , NULL},\n   {\"iwmmxt2\", iwmmxt2,     \"5TE\", FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT , NULL},\n@@ -1543,6 +1550,7 @@ arm_override_options (void)\n   arm_arch6 = (insn_flags & FL_ARCH6) != 0;\n   arm_arch6k = (insn_flags & FL_ARCH6K) != 0;\n   arm_arch_notm = (insn_flags & FL_NOTM) != 0;\n+  arm_arch7em = (insn_flags & FL_ARCH7EM) != 0;\n   arm_arch_thumb2 = (insn_flags & FL_THUMB2) != 0;\n   arm_arch_xscale = (insn_flags & FL_XSCALE) != 0;\n   arm_arch_cirrus = (insn_flags & FL_CIRRUS) != 0;"}, {"sha": "663f07edb3f1537bf544b17706e698130a103422", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bd3528ad22263505b977d7bf2c2753a4768419/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=60bd3528ad22263505b977d7bf2c2753a4768419", "patch": "@@ -252,10 +252,10 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n \n /* \"DSP\" multiply instructions, eg. SMULxy.  */\n #define TARGET_DSP_MULTIPLY \\\n-  (TARGET_32BIT && arm_arch5e && arm_arch_notm)\n+  (TARGET_32BIT && arm_arch5e && (arm_arch_notm || arm_arch7em))\n /* Integer SIMD instructions, and extend-accumulate instructions.  */\n #define TARGET_INT_SIMD \\\n-  (TARGET_32BIT && arm_arch6 && arm_arch_notm)\n+  (TARGET_32BIT && arm_arch6 && (arm_arch_notm || arm_arch7em))\n \n /* Should MOVW/MOVT be used in preference to a constant pool.  */\n #define TARGET_USE_MOVT (arm_arch_thumb2 && !optimize_size)\n@@ -399,6 +399,9 @@ extern int arm_arch6;\n /* Nonzero if instructions not present in the 'M' profile can be used.  */\n extern int arm_arch_notm;\n \n+/* Nonzero if instructions present in ARMv7E-M can be used.  */\n+extern int arm_arch7em;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n extern int arm_ld_sched;\n "}]}